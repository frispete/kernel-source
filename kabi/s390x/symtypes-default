/* arch/s390/appldata/appldata_base.o */
s#list_head struct list_head { s#list_head * next , * prev ; } 
t#umode_t typedef unsigned short umode_t 
t#__kernel_size_t typedef unsigned long __kernel_size_t 
t#size_t typedef t#__kernel_size_t size_t 
t#__kernel_loff_t typedef long long __kernel_loff_t 
t#loff_t typedef t#__kernel_loff_t loff_t 
t#proc_handler typedef int proc_handler ( s#ctl_table * , int , void * , t#size_t * , t#loff_t * ) 
t#atomic_t typedef struct { int counter ; } atomic_t 
t#arch_spinlock_t typedef struct { int lock ; } __attribute__ ( ( aligned ( 4 ) ) ) arch_spinlock_t 
s#raw_spinlock struct raw_spinlock { t#arch_spinlock_t raw_lock ; } 
s#spinlock struct spinlock { union { s#raw_spinlock rlock ; } ; } 
t#spinlock_t typedef s#spinlock spinlock_t 
s#wait_queue_head struct wait_queue_head { t#spinlock_t lock ; s#list_head head ; } 
t#wait_queue_head_t typedef s#wait_queue_head wait_queue_head_t 
s#ctl_table_poll struct ctl_table_poll { t#atomic_t event ; t#wait_queue_head_t wait ; } 
s#ctl_table struct ctl_table { const char * procname ; void * data ; int maxlen ; t#umode_t mode ; s#ctl_table * child ; t#proc_handler * proc_handler ; s#ctl_table_poll * poll ; void * extra1 ; void * extra2 ; } 
s#callback_head struct callback_head { s#callback_head * next ; void ( * func ) ( s#callback_head * ) ; } 
s#completion struct completion { unsigned int done ; t#wait_queue_head_t wait ; } 
s#rb_node struct rb_node { unsigned long __rb_parent_color ; s#rb_node * rb_right ; s#rb_node * rb_left ; } 
s#rb_root struct rb_root { s#rb_node * rb_node ; } 
s#ctl_dir struct ctl_dir { s#ctl_table_header header ; s#rb_root root ; } 
s#ctl_table_set struct ctl_table_set { int ( * is_seen ) ( s#ctl_table_set * ) ; s#ctl_dir dir ; } 
t#__kernel_uid32_t typedef unsigned int __kernel_uid32_t 
t#uid_t typedef t#__kernel_uid32_t uid_t 
t#kuid_t typedef struct { t#uid_t val ; } kuid_t 
t#__kernel_gid32_t typedef unsigned int __kernel_gid32_t 
t#gid_t typedef t#__kernel_gid32_t gid_t 
t#kgid_t typedef struct { t#gid_t val ; } kgid_t 
s#ctl_table_root struct ctl_table_root { s#ctl_table_set default_set ; s#ctl_table_set * ( * lookup ) ( s#ctl_table_root * ) ; void ( * set_ownership ) ( s#ctl_table_header * , s#ctl_table * , t#kuid_t * , t#kgid_t * ) ; int ( * permissions ) ( s#ctl_table_header * , s#ctl_table * ) ; } 
s#ctl_node struct ctl_node { s#rb_node node ; s#ctl_table_header * header ; } 
s#hlist_node struct hlist_node { s#hlist_node * next , * * pprev ; } 
s#hlist_head struct hlist_head { s#hlist_node * first ; } 
s#ctl_table_header struct ctl_table_header { union { struct { s#ctl_table * ctl_table ; int used ; int count ; int nreg ; } ; s#callback_head rcu ; } ; s#completion * unregistering ; s#ctl_table * ctl_table_arg ; s#ctl_table_root * root ; s#ctl_table_set * set ; s#ctl_dir * parent ; s#ctl_node * node ; s#hlist_head inodes ; } 
e#module_state enum module_state { MODULE_STATE_LIVE , MODULE_STATE_COMING , MODULE_STATE_GOING , MODULE_STATE_UNFORMED , } 
s#kobj_uevent_env struct kobj_uevent_env { char * argv [ 3 ] ; char * envp [ 32 ] ; int envp_idx ; char buf [ 2048 ] ; int buflen ; } 
s#kset_uevent_ops struct kset_uevent_ops { int ( * const filter ) ( s#kset * , s#kobject * ) ; const char * ( * const name ) ( s#kset * , s#kobject * ) ; int ( * const uevent ) ( s#kset * , s#kobject * , s#kobj_uevent_env * ) ; } 
s#kset struct kset { s#list_head list ; t#spinlock_t list_lock ; s#kobject kobj ; const s#kset_uevent_ops * uevent_ops ; } 
t#__kernel_ssize_t typedef long __kernel_ssize_t 
t#ssize_t typedef t#__kernel_ssize_t ssize_t 
s#attribute struct attribute { const char * name ; t#umode_t mode ; } 
s#sysfs_ops struct sysfs_ops { t#ssize_t ( * show ) ( s#kobject * , s#attribute * , char * ) ; t#ssize_t ( * store ) ( s#kobject * , s#attribute * , const char * , t#size_t ) ; } 
e#kobj_ns_type enum kobj_ns_type { KOBJ_NS_TYPE_NONE = 0 , KOBJ_NS_TYPE_NET , KOBJ_NS_TYPES } 
t#bool typedef _Bool bool 
s##sock
s#kobj_ns_type_operations struct kobj_ns_type_operations { e#kobj_ns_type type ; t#bool ( * current_may_mount ) ( void ) ; void * ( * grab_current_ns ) ( void ) ; const void * ( * netlink_ns ) ( s#sock * ) ; const void * ( * initial_ns ) ( void ) ; void ( * drop_ns ) ( void * ) ; } 
s#kobj_type struct kobj_type { void ( * release ) ( s#kobject * ) ; const s#sysfs_ops * sysfs_ops ; s#attribute * * default_attrs ; const s#kobj_ns_type_operations * ( * child_ns_type ) ( s#kobject * ) ; const void * ( * namespace ) ( s#kobject * ) ; } 
t#gfp_t typedef unsigned gfp_t 
s#radix_tree_node struct radix_tree_node { unsigned char shift ; unsigned char offset ; unsigned char count ; unsigned char exceptional ; s#radix_tree_node * parent ; s#radix_tree_root * root ; union { s#list_head private_list ; s#callback_head callback_head ; } ; void * slots [ ( 1UL << ( 0 ? 4 : 6 ) ) ] ; unsigned long tags [ 3 ] [ ( ( ( 1UL << ( 0 ? 4 : 6 ) ) + 64 - 1 ) / 64 ) ] ; } 
s#radix_tree_root struct radix_tree_root { t#gfp_t gfp_mask ; s#radix_tree_node * rnode ; } 
s#idr struct idr { s#radix_tree_root idr_rt ; unsigned int idr_next ; } 
t#u32 typedef unsigned int u32 
t#u64 typedef unsigned long long u64 
t#atomic64_t typedef struct { long counter ; } atomic64_t 
t#atomic_long_t typedef t#atomic64_t atomic_long_t 
s#optimistic_spin_queue struct optimistic_spin_queue { t#atomic_t tail ; } 
s#mutex struct mutex { t#atomic_long_t owner ; t#spinlock_t wait_lock ; s#optimistic_spin_queue osq ; s#list_head wait_list ; } 
s#seq_operations struct seq_operations { void * ( * start ) ( s#seq_file * , t#loff_t * ) ; void ( * stop ) ( s#seq_file * , void * ) ; void * ( * next ) ( s#seq_file * , void * , t#loff_t * ) ; int ( * show ) ( s#seq_file * , void * ) ; } 
s#llist_node struct llist_node { s#llist_node * next ; } 
s##vfsmount
s#seqcount struct seqcount { unsigned sequence ; } 
t#seqcount_t typedef s#seqcount seqcount_t 
s#hlist_bl_node struct hlist_bl_node { s#hlist_bl_node * next , * * pprev ; } 
s#qstr struct qstr { union { struct { t#u32 len ; t#u32 hash ; } ; t#u64 hash_len ; } ; const unsigned char * name ; } 
s##posix_acl
s#delayed_call struct delayed_call { void ( * fn ) ( void * ) ; void * arg ; } 
t#__u32 typedef unsigned int __u32 
t#__kernel_dev_t typedef t#__u32 __kernel_dev_t 
t#dev_t typedef t#__kernel_dev_t dev_t 
t#__kernel_long_t typedef long __kernel_long_t 
t#__kernel_time_t typedef t#__kernel_long_t __kernel_time_t 
s#timespec struct timespec { t#__kernel_time_t tv_sec ; long tv_nsec ; } 
s#iattr struct iattr { unsigned int ia_valid ; t#umode_t ia_mode ; t#kuid_t ia_uid ; t#kgid_t ia_gid ; t#loff_t ia_size ; s#timespec ia_atime ; s#timespec ia_mtime ; s#timespec ia_ctime ; s#file * ia_file ; } 
t#uint32_t typedef t#__u32 uint32_t 
s#kstat struct kstat { t#u32 result_mask ; t#umode_t mode ; unsigned int nlink ; t#uint32_t blksize ; t#u64 attributes ; t#u64 attributes_mask ; t#u64 ino ; t#dev_t dev ; t#dev_t rdev ; t#kuid_t uid ; t#kgid_t gid ; t#loff_t size ; s#timespec atime ; s#timespec mtime ; s#timespec ctime ; s#timespec btime ; t#u64 blocks ; } 
t#__u64 __extension__ typedef unsigned long long __u64 
s#fiemap_extent struct fiemap_extent { t#__u64 fe_logical ; t#__u64 fe_physical ; t#__u64 fe_length ; t#__u64 fe_reserved64 [ 2 ] ; t#__u32 fe_flags ; t#__u32 fe_reserved [ 3 ] ; } 
s#fiemap_extent_info struct fiemap_extent_info { unsigned int fi_flags ; unsigned int fi_extents_mapped ; unsigned int fi_extents_max ; s#fiemap_extent * fi_extents_start ; } 
s#inode_operations struct inode_operations { s#dentry * ( * lookup ) ( s#inode * , s#dentry * , unsigned int ) ; const char * ( * get_link ) ( s#dentry * , s#inode * , s#delayed_call * ) ; int ( * permission ) ( s#inode * , int ) ; s#posix_acl * ( * get_acl ) ( s#inode * , int ) ; int ( * readlink ) ( s#dentry * , char * , int ) ; int ( * create ) ( s#inode * , s#dentry * , t#umode_t , t#bool ) ; int ( * link ) ( s#dentry * , s#inode * , s#dentry * ) ; int ( * unlink ) ( s#inode * , s#dentry * ) ; int ( * symlink ) ( s#inode * , s#dentry * , const char * ) ; int ( * mkdir ) ( s#inode * , s#dentry * , t#umode_t ) ; int ( * rmdir ) ( s#inode * , s#dentry * ) ; int ( * mknod ) ( s#inode * , s#dentry * , t#umode_t , t#dev_t ) ; int ( * rename ) ( s#inode * , s#dentry * , s#inode * , s#dentry * , unsigned int ) ; int ( * setattr ) ( s#dentry * , s#iattr * ) ; int ( * getattr ) ( const s#path * , s#kstat * , t#u32 , unsigned int ) ; t#ssize_t ( * listxattr ) ( s#dentry * , char * , t#size_t ) ; int ( * fiemap ) ( s#inode * , s#fiemap_extent_info * , t#u64 , t#u64 ) ; int ( * update_time ) ( s#inode * , s#timespec * , int ) ; int ( * atomic_open ) ( s#inode * , s#dentry * , s#file * , unsigned , t#umode_t , int * ) ; int ( * tmpfile ) ( s#inode * , s#dentry * , t#umode_t ) ; int ( * set_acl ) ( s#inode * , s#posix_acl * , int ) ; } 
s#lock_class_key struct lock_class_key { } 
E#SB_FREEZE_COMPLETE 4 
s#file_system_type struct file_system_type { const char * name ; int fs_flags ; s#dentry * ( * mount ) ( s#file_system_type * , int , const char * , void * ) ; void ( * kill_sb ) ( s#super_block * ) ; s#module * owner ; s#file_system_type * next ; s#hlist_head fs_supers ; s#lock_class_key s_lock_key ; s#lock_class_key s_umount_key ; s#lock_class_key s_vfs_rename_key ; s#lock_class_key s_writers_key [ ( E#SB_FREEZE_COMPLETE - 1 ) ] ; s#lock_class_key i_lock_key ; s#lock_class_key i_mutex_key ; s#lock_class_key i_mutex_dir_key ; } 
e#writeback_sync_modes enum writeback_sync_modes { WB_SYNC_NONE , WB_SYNC_ALL , } 
t#congested_fn typedef int ( congested_fn ) ( void * , int ) 
s#refcount_struct struct refcount_struct { t#atomic_t refs ; } 
t#refcount_t typedef s#refcount_struct refcount_t 
s#kref struct kref { t#refcount_t refcount ; } 
s##device_private
t#pgd_t typedef struct { unsigned long pgd ; } pgd_t 
t#raw_spinlock_t typedef s#raw_spinlock raw_spinlock_t 
s#thread_info struct thread_info { unsigned long flags ; } 
s##sched_class
s#load_weight struct load_weight { unsigned long weight ; t#u32 inv_weight ; } 
t#s64 typedef signed long long s64 
s#sched_statistics struct sched_statistics { t#u64 wait_start ; t#u64 wait_max ; t#u64 wait_count ; t#u64 wait_sum ; t#u64 iowait_count ; t#u64 iowait_sum ; t#u64 sleep_start ; t#u64 sleep_max ; t#s64 sum_sleep_runtime ; t#u64 block_start ; t#u64 block_max ; t#u64 exec_max ; t#u64 slice_max ; t#u64 nr_migrations_cold ; t#u64 nr_failed_migrations_affine ; t#u64 nr_failed_migrations_running ; t#u64 nr_failed_migrations_hot ; t#u64 nr_forced_migrations ; t#u64 nr_wakeups ; t#u64 nr_wakeups_sync ; t#u64 nr_wakeups_migrate ; t#u64 nr_wakeups_local ; t#u64 nr_wakeups_remote ; t#u64 nr_wakeups_affine ; t#u64 nr_wakeups_affine_attempts ; t#u64 nr_wakeups_passive ; t#u64 nr_wakeups_idle ; } 
s##cfs_rq
s#sched_avg struct sched_avg { t#u64 last_update_time ; t#u64 load_sum ; t#u64 runnable_load_sum ; t#u32 util_sum ; t#u32 period_contrib ; unsigned long load_avg ; unsigned long runnable_load_avg ; unsigned long util_avg ; } 
s#sched_entity struct sched_entity { s#load_weight load ; unsigned long runnable_weight ; s#rb_node run_node ; s#list_head group_node ; unsigned int on_rq ; t#u64 exec_start ; t#u64 sum_exec_runtime ; t#u64 vruntime ; t#u64 prev_sum_exec_runtime ; t#u64 nr_migrations ; s#sched_statistics statistics ; int depth ; s#sched_entity * parent ; s#cfs_rq * cfs_rq ; s#cfs_rq * my_q ; s#sched_avg avg __attribute__ ( ( __aligned__ ( 256 ) ) ) ; } 
s##rt_rq
s#sched_rt_entity struct sched_rt_entity { s#list_head run_list ; unsigned long timeout ; unsigned long watchdog_stamp ; unsigned int time_slice ; unsigned short on_rq ; unsigned short on_list ; s#sched_rt_entity * back ; s#sched_rt_entity * parent ; s#rt_rq * rt_rq ; s#rt_rq * my_q ; void * suse_kabi_padding ; } 
s##task_group
t#ktime_t typedef t#s64 ktime_t 
s#timerqueue_node struct timerqueue_node { s#rb_node node ; t#ktime_t expires ; } 
e#hrtimer_restart enum hrtimer_restart { HRTIMER_NORESTART , HRTIMER_RESTART , } 
E#HRTIMER_MAX_CLOCK_BASES 4 
s#hrtimer_cpu_base struct hrtimer_cpu_base { t#raw_spinlock_t lock ; t#seqcount_t seq ; s#hrtimer * running ; unsigned int cpu ; unsigned int active_bases ; unsigned int clock_was_set_seq ; t#bool migration_enabled ; t#bool nohz_active ; unsigned int in_hrtirq : 1 , hres_active : 1 , hang_detected : 1 ; t#ktime_t expires_next ; s#hrtimer * next_timer ; unsigned int nr_events ; unsigned int nr_retries ; unsigned int nr_hangs ; unsigned int max_hang_time ; s#hrtimer_clock_base clock_base [ E#HRTIMER_MAX_CLOCK_BASES ] ; } 
t#__kernel_clockid_t typedef int __kernel_clockid_t 
t#clockid_t typedef t#__kernel_clockid_t clockid_t 
s#timerqueue_head struct timerqueue_head { s#rb_root head ; s#timerqueue_node * next ; } 
s#hrtimer_clock_base struct hrtimer_clock_base { s#hrtimer_cpu_base * cpu_base ; int index ; t#clockid_t clockid ; s#timerqueue_head active ; t#ktime_t ( * get_time ) ( void ) ; t#ktime_t offset ; } 
t#u8 typedef unsigned char u8 
s#hrtimer struct hrtimer { s#timerqueue_node node ; t#ktime_t _softexpires ; e#hrtimer_restart ( * function ) ( s#hrtimer * ) ; s#hrtimer_clock_base * base ; t#u8 state ; t#u8 is_rel ; } 
s#sched_dl_entity struct sched_dl_entity { s#rb_node rb_node ; t#u64 dl_runtime ; t#u64 dl_deadline ; t#u64 dl_period ; t#u64 dl_bw ; t#s64 runtime ; t#u64 deadline ; unsigned int flags ; int dl_throttled ; int dl_boosted ; int dl_yielded ; s#hrtimer dl_timer ; } 
s#cpumask struct cpumask { unsigned long bits [ ( ( ( 256 ) + ( 8 * sizeof ( long ) ) - 1 ) / ( 8 * sizeof ( long ) ) ) ] ; } 
t#cpumask_t typedef s#cpumask cpumask_t 
s#sched_info struct sched_info { unsigned long pcount ; unsigned long long run_delay ; unsigned long long last_arrival ; unsigned long long last_queued ; } 
s#plist_node struct plist_node { int prio ; s#list_head prio_list ; s#list_head node_list ; } 
s#vmacache struct vmacache { t#u32 seqnum ; s#vm_area_struct * vmas [ ( 1U << 2 ) ] ; } 
E#NR_MM_COUNTERS 4 
s#task_rss_stat struct task_rss_stat { int events ; int count [ E#NR_MM_COUNTERS ] ; } 
t#s32 typedef signed int s32 
t#compat_time_t typedef t#s32 compat_time_t 
s#compat_timespec struct compat_timespec { t#compat_time_t tv_sec ; t#s32 tv_nsec ; } 
s##pollfd
s#restart_block struct restart_block { long ( * fn ) ( s#restart_block * ) ; union { struct { t#u32 * uaddr ; t#u32 val ; t#u32 flags ; t#u32 bitset ; t#u64 time ; t#u32 * uaddr2 ; } futex ; struct { t#clockid_t clockid ; s#timespec * rmtp ; s#compat_timespec * compat_rmtp ; t#u64 expires ; } nanosleep ; struct { s#pollfd * ufds ; int nfds ; int has_timeout ; unsigned long tv_sec ; unsigned long tv_nsec ; } poll ; } ; } 
t#__kernel_pid_t typedef int __kernel_pid_t 
t#pid_t typedef t#__kernel_pid_t pid_t 
E#PIDTYPE_MAX 3 
s##pid_namespace
s#upid struct upid { int nr ; s#pid_namespace * ns ; s#hlist_node pid_chain ; } 
s#pid struct pid { t#atomic_t count ; unsigned int level ; s#hlist_head tasks [ E#PIDTYPE_MAX ] ; s#callback_head rcu ; s#upid numbers [ 1 ] ; } 
s#pid_link struct pid_link { s#hlist_node node ; s#pid * pid ; } 
s#prev_cputime struct prev_cputime { } 
s#task_cputime struct task_cputime { t#u64 utime ; t#u64 stime ; unsigned long long sum_exec_runtime ; } 
s#kernel_cap_struct struct kernel_cap_struct { t#__u32 cap [ 2 ] ; } 
t#kernel_cap_t typedef s#kernel_cap_struct kernel_cap_t 
t#__s32 typedef __signed__ int __s32 
t#int32_t typedef t#__s32 int32_t 
t#key_serial_t typedef t#int32_t key_serial_t 
s##key_user
t#time_t typedef t#__kernel_time_t time_t 
t#key_perm_t typedef t#uint32_t key_perm_t 
s##key_type
s#keyring_index_key struct keyring_index_key { s#key_type * type ; const char * description ; t#size_t desc_len ; } 
u#key_payload union key_payload { void * rcu_data0 ; void * data [ 4 ] ; } 
s##assoc_array_ptr
s#assoc_array struct assoc_array { s#assoc_array_ptr * root ; unsigned long nr_leaves_on_tree ; } 
t#key_restrict_link_func_t typedef int ( * key_restrict_link_func_t ) ( s#key * , const s#key_type * , const u#key_payload * , s#key * ) 
s#key_restriction struct key_restriction { t#key_restrict_link_func_t check ; s#key * key ; s#key_type * keytype ; } 
s#key struct key { t#refcount_t usage ; t#key_serial_t serial ; union { s#list_head graveyard_link ; s#rb_node serial_node ; } ; s#rw_semaphore sem ; s#key_user * user ; void * security ; union { t#time_t expiry ; t#time_t revoked_at ; } ; t#time_t last_used_at ; t#kuid_t uid ; t#kgid_t gid ; t#key_perm_t perm ; unsigned short quotalen ; unsigned short datalen ; short state ; unsigned long flags ; union { s#keyring_index_key index_key ; struct { s#key_type * type ; char * description ; } ; } ; union { u#key_payload payload ; struct { s#list_head name_link ; s#assoc_array keys ; } ; } ; s#key_restriction * restrict_link ; } 
s#user_struct struct user_struct { t#atomic_t __count ; t#atomic_t processes ; t#atomic_t sigpending ; t#atomic_t fanotify_listeners ; t#atomic_long_t epoll_watches ; unsigned long mq_bytes ; unsigned long locked_shm ; unsigned long unix_inflight ; t#atomic_long_t pipe_bufs ; s#key * uid_keyring ; s#key * session_keyring ; s#hlist_node uidhash_node ; t#kuid_t uid ; t#atomic_long_t locked_vm ; } 
s#uid_gid_extent struct uid_gid_extent { t#u32 first ; t#u32 lower_first ; t#u32 count ; } 
s#uid_gid_map struct uid_gid_map { t#u32 nr_extents ; s#uid_gid_extent extent [ 5 ] ; } 
s##proc_ns_operations
s#ns_common struct ns_common { t#atomic_long_t stashed ; const s#proc_ns_operations * ops ; unsigned int inum ; } 
t#work_func_t typedef void ( * work_func_t ) ( s#work_struct * ) 
s#work_struct struct work_struct { t#atomic_long_t data ; s#list_head entry ; t#work_func_t func ; } 
E#UCOUNT_COUNTS 9 
s#ucounts struct ucounts { s#hlist_node node ; s#user_namespace * ns ; t#kuid_t uid ; int count ; t#atomic_t ucount [ E#UCOUNT_COUNTS ] ; } 
s#user_namespace struct user_namespace { s#uid_gid_map uid_map ; s#uid_gid_map gid_map ; s#uid_gid_map projid_map ; t#atomic_t count ; s#user_namespace * parent ; int level ; t#kuid_t owner ; t#kgid_t group ; s#ns_common ns ; unsigned long flags ; s#key * persistent_keyring_register ; s#rw_semaphore persistent_keyring_register_sem ; s#work_struct work ; s#ctl_table_set set ; s#ctl_table_header * sysctls ; s#ucounts * ucounts ; int ucount_max [ E#UCOUNT_COUNTS ] ; } 
s#group_info struct group_info { t#atomic_t usage ; int ngroups ; t#kgid_t gid [ 0 ] ; } 
s#cred struct cred { t#atomic_t usage ; t#kuid_t uid ; t#kgid_t gid ; t#kuid_t suid ; t#kgid_t sgid ; t#kuid_t euid ; t#kgid_t egid ; t#kuid_t fsuid ; t#kgid_t fsgid ; unsigned securebits ; t#kernel_cap_t cap_inheritable ; t#kernel_cap_t cap_permitted ; t#kernel_cap_t cap_effective ; t#kernel_cap_t cap_bset ; t#kernel_cap_t cap_ambient ; unsigned char jit_keyring ; s#key * session_keyring ; s#key * process_keyring ; s#key * thread_keyring ; s#key * request_key_auth ; void * security ; s#user_struct * user ; s#user_namespace * user_ns ; s#group_info * group_info ; s#callback_head rcu ; } 
s##nameidata
s##sem_undo_list
s#sysv_sem struct sysv_sem { s#sem_undo_list * undo_list ; } 
s#sysv_shm struct sysv_shm { s#list_head shm_clist ; } 
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s#cgroup_file struct cgroup_file { s#kernfs_node * kn ; } 
t#u16 typedef unsigned short u16 
E#CGROUP_SUBSYS_COUNT 13 
s#cgroup_root struct cgroup_root { s#kernfs_root * kf_root ; unsigned int subsys_mask ; int hierarchy_id ; s#cgroup cgrp ; int cgrp_ancestor_id_storage ; t#atomic_t nr_cgrps ; s#list_head root_list ; unsigned int flags ; s#idr cgroup_idr ; char release_agent_path [ 4096 ] ; char name [ 64 ] ; } 
s##bpf_prog_array
E#__MAX_BPF_ATTACH_TYPE 16 
s#cgroup_bpf struct cgroup_bpf { s#bpf_prog_array * effective [ E#__MAX_BPF_ATTACH_TYPE ] ; s#list_head progs [ E#__MAX_BPF_ATTACH_TYPE ] ; t#u32 flags [ E#__MAX_BPF_ATTACH_TYPE ] ; s#bpf_prog_array * inactive ; } 
s#cgroup struct cgroup { s#cgroup_subsys_state self ; unsigned long flags ; int id ; int level ; int populated_cnt ; s#kernfs_node * kn ; s#cgroup_file procs_file ; s#cgroup_file events_file ; t#u16 subtree_control ; t#u16 subtree_ss_mask ; t#u16 old_subtree_control ; t#u16 old_subtree_ss_mask ; s#cgroup_subsys_state * subsys [ E#CGROUP_SUBSYS_COUNT ] ; s#cgroup_root * root ; s#list_head cset_links ; s#list_head e_csets [ E#CGROUP_SUBSYS_COUNT ] ; s#list_head pidlists ; s#mutex pidlist_mutex ; t#wait_queue_head_t offline_waitq ; s#work_struct release_agent_work ; s#cgroup_bpf bpf ; int ancestor_ids [ ] ; } 
s##cgroup_taskset
t#pmd_t typedef struct { unsigned long pmd ; } pmd_t 
t#pud_t typedef struct { unsigned long pud ; } pud_t 
t#pte_t typedef struct { unsigned long pte ; } pte_t 
t#sector_t typedef unsigned long sector_t 
e#rw_hint enum rw_hint { WRITE_LIFE_NOT_SET = 0 , WRITE_LIFE_NONE = 1 , WRITE_LIFE_SHORT = 2 , WRITE_LIFE_MEDIUM = 3 , WRITE_LIFE_LONG = 4 , WRITE_LIFE_EXTREME = 5 , } 
s#kiocb struct kiocb { s#file * ki_filp ; t#loff_t ki_pos ; void ( * ki_complete ) ( s#kiocb * , long , long ) ; void * private ; int ki_flags ; e#rw_hint ki_hint ; } 
s#iovec struct iovec { void * iov_base ; t#__kernel_size_t iov_len ; } 
s#kvec struct kvec { void * iov_base ; t#size_t iov_len ; } 
s#bio_vec struct bio_vec { s#page * bv_page ; unsigned int bv_len ; unsigned int bv_offset ; } 
s#fasync_struct struct fasync_struct { t#spinlock_t fa_lock ; int magic ; int fa_fd ; s#fasync_struct * fa_next ; s#file * fa_file ; s#callback_head fa_rcu ; } 
s#pipe_buf_operations struct pipe_buf_operations { int can_merge ; int ( * confirm ) ( s#pipe_inode_info * , s#pipe_buffer * ) ; void ( * release ) ( s#pipe_inode_info * , s#pipe_buffer * ) ; int ( * steal ) ( s#pipe_inode_info * , s#pipe_buffer * ) ; void ( * get ) ( s#pipe_inode_info * , s#pipe_buffer * ) ; } 
s#pipe_buffer struct pipe_buffer { s#page * page ; unsigned int offset , len ; const s#pipe_buf_operations * ops ; unsigned int flags ; unsigned long private ; } 
s#pipe_inode_info struct pipe_inode_info { s#mutex mutex ; t#wait_queue_head_t wait ; unsigned int nrbufs , curbuf , buffers ; unsigned int readers ; unsigned int writers ; unsigned int files ; unsigned int waiting_writers ; unsigned int r_counter ; unsigned int w_counter ; s#page * tmp_page ; s#fasync_struct * fasync_readers ; s#fasync_struct * fasync_writers ; s#pipe_buffer * bufs ; s#user_struct * user ; } 
s#iov_iter struct iov_iter { int type ; t#size_t iov_offset ; t#size_t count ; union { const s#iovec * iov ; const s#kvec * kvec ; const s#bio_vec * bvec ; s#pipe_inode_info * pipe ; } ; union { unsigned long nr_segs ; struct { int idx ; int start_idx ; } ; } ; } 
e#migrate_mode enum migrate_mode { MIGRATE_ASYNC , MIGRATE_SYNC_LIGHT , MIGRATE_SYNC , MIGRATE_SYNC_NO_COPY , } 
t#isolate_mode_t typedef unsigned isolate_mode_t 
s#swap_cluster_info struct swap_cluster_info { t#spinlock_t lock ; unsigned int data : 24 ; unsigned int flags : 8 ; } 
s#swap_cluster_list struct swap_cluster_list { s#swap_cluster_info head ; s#swap_cluster_info tail ; } 
s#percpu_cluster struct percpu_cluster { s#swap_cluster_info index ; unsigned int next ; } 
s#swap_extent struct swap_extent { s#list_head list ; unsigned long start_page ; unsigned long nr_pages ; t#sector_t start_block ; } 
s##hd_struct
s##gendisk
s##request_queue
s#block_device struct block_device { t#dev_t bd_dev ; int bd_openers ; s#inode * bd_inode ; s#super_block * bd_super ; s#mutex bd_mutex ; void * bd_claiming ; void * bd_holder ; int bd_holders ; t#bool bd_write_holder ; s#list_head bd_holder_disks ; s#block_device * bd_contains ; unsigned bd_block_size ; t#u8 bd_partno ; s#hd_struct * bd_part ; unsigned bd_part_count ; int bd_invalidated ; s#gendisk * bd_disk ; s#request_queue * bd_queue ; s#backing_dev_info * bd_bdi ; s#list_head bd_list ; unsigned long bd_private ; int bd_fsfreeze_count ; s#mutex bd_fsfreeze_mutex ; } 
s#swap_info_struct struct swap_info_struct { unsigned long flags ; signed short prio ; s#plist_node list ; s#plist_node avail_list ; signed char type ; unsigned int max ; unsigned char * swap_map ; s#swap_cluster_info * cluster_info ; s#swap_cluster_list free_clusters ; unsigned int lowest_bit ; unsigned int highest_bit ; unsigned int pages ; unsigned int inuse_pages ; unsigned int cluster_next ; unsigned int cluster_nr ; s#percpu_cluster * percpu_cluster ; s#swap_extent * curr_swap_extent ; s#swap_extent first_swap_extent ; s#block_device * bdev ; s#file * swap_file ; unsigned int old_block_size ; t#spinlock_t lock ; t#spinlock_t cont_lock ; s#work_struct discard_work ; s#swap_cluster_list discard_clusters ; } 
s#address_space_operations struct address_space_operations { int ( * writepage ) ( s#page * , s#writeback_control * ) ; int ( * readpage ) ( s#file * , s#page * ) ; int ( * writepages ) ( s#address_space * , s#writeback_control * ) ; int ( * set_page_dirty ) ( s#page * ) ; int ( * readpages ) ( s#file * , s#address_space * , s#list_head * , unsigned ) ; int ( * write_begin ) ( s#file * , s#address_space * , t#loff_t , unsigned , unsigned , s#page * * , void * * ) ; int ( * write_end ) ( s#file * , s#address_space * , t#loff_t , unsigned , unsigned , s#page * , void * ) ; t#sector_t ( * bmap ) ( s#address_space * , t#sector_t ) ; void ( * invalidatepage ) ( s#page * , unsigned int , unsigned int ) ; int ( * releasepage ) ( s#page * , t#gfp_t ) ; void ( * freepage ) ( s#page * ) ; t#ssize_t ( * direct_IO ) ( s#kiocb * , s#iov_iter * ) ; int ( * migratepage ) ( s#address_space * , s#page * , s#page * , e#migrate_mode ) ; t#bool ( * isolate_page ) ( s#page * , t#isolate_mode_t ) ; void ( * putback_page ) ( s#page * ) ; int ( * launder_page ) ( s#page * ) ; int ( * is_partially_uptodate ) ( s#page * , unsigned long , unsigned long ) ; void ( * is_dirty_writeback ) ( s#page * , t#bool * , t#bool * ) ; int ( * error_remove_page ) ( s#address_space * , s#page * ) ; int ( * swap_activate ) ( s#swap_info_struct * , s#file * , t#sector_t * ) ; void ( * swap_deactivate ) ( s#file * ) ; } 
t#errseq_t typedef t#u32 errseq_t 
s#address_space struct address_space { s#inode * host ; s#radix_tree_root page_tree ; t#spinlock_t tree_lock ; t#atomic_t i_mmap_writable ; s#rb_root i_mmap ; s#rw_semaphore i_mmap_rwsem ; unsigned long nrpages ; unsigned long nrexceptional ; unsigned long writeback_index ; const s#address_space_operations * a_ops ; unsigned long flags ; t#spinlock_t private_lock ; t#gfp_t gfp_mask ; s#list_head private_list ; void * private_data ; t#errseq_t wb_err ; } 
t#dev_page_fault_t typedef int ( * dev_page_fault_t ) ( s#vm_area_struct * , unsigned long , const s#page * , unsigned int , t#pmd_t * ) 
t#dev_page_free_t typedef void ( * dev_page_free_t ) ( s#page * , void * ) 
s#vmem_altmap struct vmem_altmap { const unsigned long base_pfn ; const unsigned long reserve ; unsigned long free ; unsigned long align ; unsigned long alloc ; } 
t#phys_addr_t typedef t#u64 phys_addr_t 
t#resource_size_t typedef t#phys_addr_t resource_size_t 
s#resource struct resource { t#resource_size_t start ; t#resource_size_t end ; const char * name ; unsigned long flags ; unsigned long desc ; s#resource * parent , * sibling , * child ; } 
t#percpu_ref_func_t typedef void ( percpu_ref_func_t ) ( s#percpu_ref * ) 
s#percpu_ref struct percpu_ref { t#atomic_long_t count ; unsigned long percpu_count_ptr ; t#percpu_ref_func_t * release ; t#percpu_ref_func_t * confirm_switch ; t#bool force_atomic : 1 ; s#callback_head rcu ; } 
e#memory_type enum memory_type { MEMORY_DEVICE_PRIVATE = 1 , MEMORY_DEVICE_PUBLIC , MEMORY_DEVICE_FS_DAX , MEMORY_DEVICE_PCI_P2PDMA , } 
s#dev_pagemap struct dev_pagemap { t#dev_page_fault_t page_fault ; t#dev_page_free_t page_free ; s#vmem_altmap altmap ; t#bool altmap_valid ; s#resource res ; s#percpu_ref * ref ; s#device * dev ; void * data ; e#memory_type type ; t#u64 pci_p2pdma_bus_offset ; } 
t#pgtable_t typedef t#pte_t * pgtable_t 
s##kmem_cache
s#mem_cgroup_id struct mem_cgroup_id { int id ; t#atomic_t ref ; } 
s#page_counter struct page_counter { t#atomic_long_t count ; unsigned long limit ; s#page_counter * parent ; unsigned long watermark ; unsigned long failcnt ; } 
s#vmpressure struct vmpressure { unsigned long scanned ; unsigned long reclaimed ; unsigned long tree_scanned ; unsigned long tree_reclaimed ; s#spinlock sr_lock ; s#list_head events ; s#mutex events_lock ; s#work_struct work ; } 
s##eventfd_ctx
s#mem_cgroup_threshold struct mem_cgroup_threshold { s#eventfd_ctx * eventfd ; unsigned long threshold ; } 
s#mem_cgroup_threshold_ary struct mem_cgroup_threshold_ary { int current_threshold ; unsigned int size ; s#mem_cgroup_threshold entries [ 0 ] ; } 
s#mem_cgroup_thresholds struct mem_cgroup_thresholds { s#mem_cgroup_threshold_ary * primary ; s#mem_cgroup_threshold_ary * spare ; } 
E#NR_LRU_BASE 0 
E#NR_VM_NODE_STAT_ITEMS ( E#NR_LRU_BASE ) + 25 
E#MEMCG_NR_STAT ( E#NR_VM_NODE_STAT_ITEMS ) + 8 
E#NR_VM_EVENT_ITEMS 76 
E#MEMCG_NR_EVENTS ( E#NR_VM_EVENT_ITEMS ) + 4 
E#MEM_CGROUP_NTARGETS 3 
s#mem_cgroup_stat_cpu struct mem_cgroup_stat_cpu { long count [ E#MEMCG_NR_STAT ] ; unsigned long events [ E#MEMCG_NR_EVENTS ] ; unsigned long nr_page_events ; unsigned long targets [ E#MEM_CGROUP_NTARGETS ] ; } 
e#memcg_kmem_state enum memcg_kmem_state { KMEM_NONE , KMEM_ALLOCATED , KMEM_ONLINE , } 
t#nodemask_t typedef struct { unsigned long bits [ ( ( ( ( 1 << 4 ) ) + ( 8 * sizeof ( long ) ) - 1 ) / ( 8 * sizeof ( long ) ) ) ] ; } nodemask_t 
s#percpu_counter struct percpu_counter { t#raw_spinlock_t lock ; t#s64 count ; s#list_head list ; t#s32 * counters ; } 
s#fprop_global struct fprop_global { s#percpu_counter events ; unsigned int period ; t#seqcount_t sequence ; } 
s#timer_list struct timer_list { s#hlist_node entry ; unsigned long expires ; void ( * function ) ( unsigned long ) ; unsigned long data ; t#u32 flags ; } 
s#wb_domain struct wb_domain { t#spinlock_t lock ; s#fprop_global completions ; s#timer_list period_timer ; unsigned long period_time ; unsigned long dirty_limit_tstamp ; unsigned long dirty_limit ; } 
E#NR_LRU_LISTS ( 0 + 2 + 1 ) + 2 
s#zone_reclaim_stat struct zone_reclaim_stat { unsigned long recent_rotated [ 2 ] ; unsigned long recent_scanned [ 2 ] ; } 
E#NR_WMARK 3 
E#MIGRATE_PCPTYPES 3 
s#per_cpu_pages struct per_cpu_pages { int count ; int high ; int batch ; s#list_head lists [ E#MIGRATE_PCPTYPES ] ; } 
t#s8 typedef signed char s8 
E#NR_VM_NUMA_STAT_ITEMS 6 
E#NR_ZONE_LRU_BASE 1 
E#NR_VM_ZONE_STAT_ITEMS ( E#NR_ZONE_LRU_BASE ) + 14 
s#per_cpu_pageset struct per_cpu_pageset { s#per_cpu_pages pcp ; t#s8 expire ; t#u16 vm_numa_stat_diff [ E#NR_VM_NUMA_STAT_ITEMS ] ; t#s8 stat_threshold ; t#s8 vm_stat_diff [ E#NR_VM_ZONE_STAT_ITEMS ] ; } 
t#seqlock_t typedef struct { s#seqcount seqcount ; t#spinlock_t lock ; } seqlock_t 
s#zone_padding struct zone_padding { char x [ 0 ] ; } 
E#MIGRATE_TYPES ( E#MIGRATE_PCPTYPES ) + 3 
s#free_area struct free_area { s#list_head free_list [ E#MIGRATE_TYPES ] ; unsigned long nr_free ; } 
s#zone struct zone { unsigned long _watermark [ E#NR_WMARK ] ; unsigned long watermark_boost ; unsigned long nr_reserved_highatomic ; long lowmem_reserve [ 3 ] ; int node ; s#pglist_data * zone_pgdat ; s#per_cpu_pageset * pageset ; unsigned long zone_start_pfn ; unsigned long managed_pages ; unsigned long spanned_pages ; unsigned long present_pages ; const char * name ; unsigned long nr_isolate_pageblock ; t#seqlock_t span_seqlock ; int initialized ; s#zone_padding _pad1_ ; s#free_area free_area [ 9 ] ; unsigned long flags ; t#spinlock_t lock ; s#zone_padding _pad2_ ; unsigned long percpu_drift_mark ; unsigned long compact_cached_free_pfn ; unsigned long compact_cached_migrate_pfn [ 2 ] ; unsigned int compact_considered ; unsigned int compact_defer_shift ; int compact_order_failed ; t#bool compact_blockskip_flush ; t#bool contiguous ; s#zone_padding _pad3_ ; t#atomic_long_t vm_stat [ E#NR_VM_ZONE_STAT_ITEMS ] ; t#atomic_long_t vm_numa_stat [ E#NR_VM_NUMA_STAT_ITEMS ] ; void * suse_kabi_padding ; } 
s#zoneref struct zoneref { s#zone * zone ; int zone_idx ; } 
s#zonelist struct zonelist { s#zoneref _zonerefs [ ( ( 1 << 4 ) * 3 ) + 1 ] ; } 
E#MAX_ZONELISTS 2 
e#zone_type enum zone_type { ZONE_DMA , ZONE_NORMAL , ZONE_MOVABLE , __MAX_NR_ZONES } 
s#per_cpu_nodestat struct per_cpu_nodestat { t#s8 stat_threshold ; t#s8 vm_node_stat_diff [ E#NR_VM_NODE_STAT_ITEMS ] ; } 
s#pglist_data struct pglist_data { s#zone node_zones [ 3 ] ; s#zonelist node_zonelists [ E#MAX_ZONELISTS ] ; int nr_zones ; t#spinlock_t node_size_lock ; unsigned long node_start_pfn ; unsigned long node_present_pages ; unsigned long node_spanned_pages ; int node_id ; t#wait_queue_head_t kswapd_wait ; t#wait_queue_head_t pfmemalloc_wait ; s#task_struct * kswapd ; int kswapd_order ; e#zone_type kswapd_classzone_idx ; int kswapd_failures ; int kcompactd_max_order ; e#zone_type kcompactd_classzone_idx ; t#wait_queue_head_t kcompactd_wait ; s#task_struct * kcompactd ; unsigned long totalreserve_pages ; unsigned long min_unmapped_pages ; unsigned long min_slab_pages ; s#zone_padding _pad1_ ; t#spinlock_t lru_lock ; t#spinlock_t split_queue_lock ; s#list_head split_queue ; unsigned long split_queue_len ; s#lruvec lruvec ; unsigned int inactive_ratio ; unsigned long flags ; s#zone_padding _pad2_ ; s#per_cpu_nodestat * per_cpu_nodestats ; t#atomic_long_t vm_stat [ E#NR_VM_NODE_STAT_ITEMS ] ; } 
s#lruvec struct lruvec { s#list_head lists [ E#NR_LRU_LISTS ] ; s#zone_reclaim_stat reclaim_stat ; t#atomic_long_t inactive_age ; unsigned long refaults ; s#pglist_data * pgdat ; } 
s#mem_cgroup_reclaim_iter struct mem_cgroup_reclaim_iter { s#mem_cgroup * position ; unsigned int generation ; } 
s#mem_cgroup_per_node struct mem_cgroup_per_node { s#lruvec lruvec ; unsigned long lru_zone_size [ 3 ] [ E#NR_LRU_LISTS ] ; s#mem_cgroup_reclaim_iter iter [ 12 + 1 ] ; s#rb_node tree_node ; unsigned long usage_in_excess ; t#bool on_tree ; s#mem_cgroup * memcg ; } 
s#mem_cgroup struct mem_cgroup { s#cgroup_subsys_state css ; s#mem_cgroup_id id ; s#page_counter memory ; s#page_counter swap ; s#page_counter memsw ; s#page_counter kmem ; s#page_counter tcpmem ; unsigned long low ; unsigned long high ; s#work_struct high_work ; unsigned long soft_limit ; s#vmpressure vmpressure ; t#bool use_hierarchy ; t#bool oom_lock ; int under_oom ; int swappiness ; int oom_kill_disable ; s#cgroup_file events_file ; s#mutex thresholds_lock ; s#mem_cgroup_thresholds thresholds ; s#mem_cgroup_thresholds memsw_thresholds ; s#list_head oom_notify ; unsigned long move_charge_at_immigrate ; t#atomic_t moving_account ; t#spinlock_t move_lock ; s#task_struct * move_lock_task ; unsigned long move_lock_flags ; s#mem_cgroup_stat_cpu * stat ; unsigned long socket_pressure ; t#bool tcpmem_active ; int tcpmem_pressure ; int kmemcg_id ; e#memcg_kmem_state kmem_state ; s#list_head kmem_caches ; int last_scanned_node ; t#nodemask_t scan_nodes ; t#atomic_t numainfo_events ; t#atomic_t numainfo_updating ; s#list_head cgwb_list ; s#wb_domain cgwb_domain ; s#list_head event_list ; t#spinlock_t event_list_lock ; s#mem_cgroup_per_node * nodeinfo [ 0 ] ; } 
s#page struct page { unsigned long flags ; union { s#address_space * mapping ; void * s_mem ; t#atomic_t compound_mapcount ; } ; union { unsigned long index ; void * freelist ; } ; union { unsigned counters ; struct { union { t#atomic_t _mapcount ; unsigned int active ; struct { unsigned inuse : 16 ; unsigned objects : 15 ; unsigned frozen : 1 ; } ; int units ; } ; t#atomic_t _refcount ; } ; } ; union { s#list_head lru ; s#dev_pagemap * pgmap ; struct { s#page * next ; int pages ; int pobjects ; } ; s#callback_head callback_head ; struct { unsigned long compound_head ; unsigned int compound_dtor ; unsigned int compound_order ; } ; struct { unsigned long __pad ; t#pgtable_t pmd_huge_pte ; } ; } ; union { unsigned long private ; t#spinlock_t ptl ; s#kmem_cache * slab_cache ; } ; s#mem_cgroup * mem_cgroup ; } 
s#vm_fault struct vm_fault { s#vm_area_struct * vma ; unsigned int flags ; t#gfp_t gfp_mask ; unsigned long pgoff ; unsigned long address ; t#pmd_t * pmd ; t#pud_t * pud ; t#pte_t orig_pte ; s#page * cow_page ; s#mem_cgroup * memcg ; s#page * page ; t#pte_t * pte ; t#spinlock_t * ptl ; t#pgtable_t prealloc_pte ; } 
e#page_entry_size enum page_entry_size { PE_SIZE_PTE = 0 , PE_SIZE_PMD , PE_SIZE_PUD , } 
s##mempolicy
s#vm_operations_struct struct vm_operations_struct { void ( * open ) ( s#vm_area_struct * ) ; void ( * close ) ( s#vm_area_struct * ) ; int ( * split ) ( s#vm_area_struct * , unsigned long ) ; int ( * mremap ) ( s#vm_area_struct * ) ; int ( * fault ) ( s#vm_fault * ) ; int ( * huge_fault ) ( s#vm_fault * , e#page_entry_size ) ; void ( * map_pages ) ( s#vm_fault * , unsigned long , unsigned long ) ; unsigned long ( * pagesize ) ( s#vm_area_struct * ) ; int ( * page_mkwrite ) ( s#vm_fault * ) ; int ( * pfn_mkwrite ) ( s#vm_fault * ) ; int ( * access ) ( s#vm_area_struct * , unsigned long , void * , int , int ) ; const char * ( * name ) ( s#vm_area_struct * ) ; int ( * set_policy ) ( s#vm_area_struct * , s#mempolicy * ) ; s#mempolicy * ( * get_policy ) ( s#vm_area_struct * , unsigned long ) ; s#page * ( * find_special_page ) ( s#vm_area_struct * , unsigned long ) ; } 
s#kernfs_open_file struct kernfs_open_file { s#kernfs_node * kn ; s#file * file ; s#seq_file * seq_file ; void * priv ; s#mutex mutex ; s#mutex prealloc_mutex ; int event ; s#list_head list ; char * prealloc_buf ; t#size_t atomic_write_len ; t#bool mmapped : 1 ; t#bool released : 1 ; const s#vm_operations_struct * vm_ops ; } 
s#kernfs_ops struct kernfs_ops { int ( * open ) ( s#kernfs_open_file * ) ; void ( * release ) ( s#kernfs_open_file * ) ; int ( * seq_show ) ( s#seq_file * , void * ) ; void * ( * seq_start ) ( s#seq_file * , t#loff_t * ) ; void * ( * seq_next ) ( s#seq_file * , void * , t#loff_t * ) ; void ( * seq_stop ) ( s#seq_file * , void * ) ; t#ssize_t ( * read ) ( s#kernfs_open_file * , char * , t#size_t , t#loff_t ) ; t#size_t atomic_write_len ; t#bool prealloc ; t#ssize_t ( * write ) ( s#kernfs_open_file * , char * , t#size_t , t#loff_t ) ; int ( * mmap ) ( s#kernfs_open_file * , s#vm_area_struct * ) ; } 
s#cftype struct cftype { char name [ 64 ] ; unsigned long private ; t#size_t max_write_len ; unsigned int flags ; unsigned int file_offset ; s#cgroup_subsys * ss ; s#list_head node ; s#kernfs_ops * kf_ops ; int ( * open ) ( s#kernfs_open_file * ) ; void ( * release ) ( s#kernfs_open_file * ) ; t#u64 ( * read_u64 ) ( s#cgroup_subsys_state * , s#cftype * ) ; t#s64 ( * read_s64 ) ( s#cgroup_subsys_state * , s#cftype * ) ; int ( * seq_show ) ( s#seq_file * , void * ) ; void * ( * seq_start ) ( s#seq_file * , t#loff_t * ) ; void * ( * seq_next ) ( s#seq_file * , void * , t#loff_t * ) ; void ( * seq_stop ) ( s#seq_file * , void * ) ; int ( * write_u64 ) ( s#cgroup_subsys_state * , s#cftype * , t#u64 ) ; int ( * write_s64 ) ( s#cgroup_subsys_state * , s#cftype * , t#s64 ) ; t#ssize_t ( * write ) ( s#kernfs_open_file * , char * , t#size_t , t#loff_t ) ; } 
s#cgroup_subsys struct cgroup_subsys { s#cgroup_subsys_state * ( * css_alloc ) ( s#cgroup_subsys_state * ) ; int ( * css_online ) ( s#cgroup_subsys_state * ) ; void ( * css_offline ) ( s#cgroup_subsys_state * ) ; void ( * css_released ) ( s#cgroup_subsys_state * ) ; void ( * css_free ) ( s#cgroup_subsys_state * ) ; void ( * css_reset ) ( s#cgroup_subsys_state * ) ; int ( * can_attach ) ( s#cgroup_taskset * ) ; void ( * cancel_attach ) ( s#cgroup_taskset * ) ; void ( * attach ) ( s#cgroup_taskset * ) ; void ( * post_attach ) ( void ) ; int ( * can_fork ) ( s#task_struct * ) ; void ( * cancel_fork ) ( s#task_struct * ) ; void ( * fork ) ( s#task_struct * ) ; void ( * exit ) ( s#task_struct * ) ; void ( * free ) ( s#task_struct * ) ; void ( * bind ) ( s#cgroup_subsys_state * ) ; t#bool early_init : 1 ; t#bool implicit_on_dfl : 1 ; t#bool broken_hierarchy : 1 ; t#bool warned_broken_hierarchy : 1 ; int id ; const char * name ; const char * legacy_name ; s#cgroup_root * root ; s#idr css_idr ; s#list_head cfts ; s#cftype * dfl_cftypes ; s#cftype * legacy_cftypes ; unsigned int depends_on ; } 
s#cgroup_subsys_state struct cgroup_subsys_state { s#cgroup * cgroup ; s#cgroup_subsys * ss ; s#percpu_ref refcnt ; s#list_head sibling ; s#list_head children ; int id ; unsigned int flags ; t#u64 serial_nr ; t#atomic_t online_cnt ; s#callback_head callback_head ; s#work_struct destroy_work ; s#cgroup_subsys_state * parent ; } 
s#css_set struct css_set { s#cgroup_subsys_state * subsys [ E#CGROUP_SUBSYS_COUNT ] ; t#refcount_t refcount ; s#cgroup * dfl_cgrp ; s#list_head tasks ; s#list_head mg_tasks ; s#list_head task_iters ; s#list_head e_cset_node [ E#CGROUP_SUBSYS_COUNT ] ; s#hlist_node hlist ; s#list_head cgrp_links ; s#list_head mg_preload_node ; s#list_head mg_node ; s#cgroup * mg_src_cgrp ; s#cgroup * mg_dst_cgrp ; s#css_set * mg_dst_cset ; t#bool dead ; s#callback_head callback_head ; } 
s#cgroup_namespace struct cgroup_namespace { t#refcount_t count ; s#ns_common ns ; s#user_namespace * user_ns ; s#ucounts * ucounts ; s#css_set * root_cset ; } 
s#nsproxy struct nsproxy { t#atomic_t count ; s#uts_namespace * uts_ns ; s#ipc_namespace * ipc_ns ; s#mnt_namespace * mnt_ns ; s#pid_namespace * pid_ns_for_children ; s#net * net_ns ; s#cgroup_namespace * cgroup_ns ; } 
s##signal_struct
s##sighand_struct
t#sigset_t typedef struct { unsigned long sig [ ( 64 / 64 ) ] ; } sigset_t 
s#sigpending struct sigpending { s#list_head list ; t#sigset_t signal ; } 
s##audit_context
s##seccomp_filter
s#seccomp struct seccomp { int mode ; s#seccomp_filter * filter ; } 
s#wake_q_node struct wake_q_node { s#wake_q_node * next ; } 
s#rb_root_cached struct rb_root_cached { s#rb_root rb_root ; s#rb_node * rb_leftmost ; } 
s##rt_mutex_waiter
t#blk_status_t typedef t#u8 blk_status_t 
s#bvec_iter struct bvec_iter { t#sector_t bi_sector ; unsigned int bi_size ; unsigned int bi_idx ; unsigned int bi_bvec_done ; } 
t#bio_end_io_t typedef void ( bio_end_io_t ) ( s#bio * ) 
s#io_cq struct io_cq { s#request_queue * q ; s#io_context * ioc ; union { s#list_head q_node ; s#kmem_cache * __rcu_icq_cache ; } ; union { s#hlist_node ioc_node ; s#callback_head __rcu_head ; } ; unsigned int flags ; } 
s#io_context struct io_context { t#atomic_long_t refcount ; t#atomic_t active_ref ; t#atomic_t nr_tasks ; t#spinlock_t lock ; unsigned short ioprio ; int nr_batch_requests ; unsigned long last_waited ; s#radix_tree_root icq_tree ; s#io_cq * icq_hint ; s#hlist_head icq_list ; s#work_struct release_work ; } 
s#bio_integrity_payload struct bio_integrity_payload { s#bio * bip_bio ; s#bvec_iter bip_iter ; unsigned short bip_slab ; unsigned short bip_vcnt ; unsigned short bip_max_vcnt ; unsigned short bip_flags ; s#bvec_iter bio_iter ; s#work_struct bip_work ; s#bio_vec * bip_vec ; s#bio_vec bip_inline_vecs [ 0 ] ; } 
t#mempool_alloc_t typedef void * ( mempool_alloc_t ) ( t#gfp_t , void * ) 
t#mempool_free_t typedef void ( mempool_free_t ) ( void * , void * ) 
s#mempool_s struct mempool_s { t#spinlock_t lock ; int min_nr ; int curr_nr ; void * * elements ; void * pool_data ; t#mempool_alloc_t * alloc ; t#mempool_free_t * free ; t#wait_queue_head_t wait ; } 
t#mempool_t typedef s#mempool_s mempool_t 
s##workqueue_struct
s#bio_set struct bio_set { s#kmem_cache * bio_slab ; unsigned int front_pad ; t#mempool_t bio_pool ; t#mempool_t bvec_pool ; t#mempool_t bio_integrity_pool ; t#mempool_t bvec_integrity_pool ; t#spinlock_t rescue_lock ; s#bio_list rescue_list ; s#work_struct rescue_work ; s#workqueue_struct * rescue_workqueue ; } 
s#bio struct bio { s#bio * bi_next ; s#gendisk * bi_disk ; unsigned int bi_opf ; unsigned short bi_flags ; unsigned short bi_ioprio ; unsigned short bi_write_hint ; t#blk_status_t bi_status ; t#u8 bi_partno ; unsigned int bi_phys_segments ; unsigned int bi_seg_front_size ; unsigned int bi_seg_back_size ; s#bvec_iter bi_iter ; t#atomic_t __bi_remaining ; t#bio_end_io_t * bi_end_io ; void * bi_private ; s#io_context * bi_ioc ; s#cgroup_subsys_state * bi_css ; union { s#bio_integrity_payload * bi_integrity ; } ; unsigned short bi_vcnt ; unsigned short bi_max_vecs ; t#atomic_t __bi_cnt ; s#bio_vec * bi_io_vec ; s#bio_set * bi_pool ; s#bio_vec bi_inline_vecs [ 0 ] ; } 
s#bio_list struct bio_list { s#bio * head ; s#bio * tail ; } 
s##blk_plug
s#reclaim_state struct reclaim_state { unsigned long reclaimed_slab ; } 
t#__kernel_timer_t typedef int __kernel_timer_t 
u#sigval union sigval { int sival_int ; void * sival_ptr ; } 
t#sigval_t typedef u#sigval sigval_t 
t#__kernel_clock_t typedef t#__kernel_long_t __kernel_clock_t 
s#siginfo struct siginfo { int si_signo ; int si_errno ; int si_code ; union { int _pad [ ( ( 128 - ( 4 * sizeof ( int ) ) ) / sizeof ( int ) ) ] ; struct { t#__kernel_pid_t _pid ; t#__kernel_uid32_t _uid ; } _kill ; struct { t#__kernel_timer_t _tid ; int _overrun ; char _pad [ sizeof ( __kernel_uid32_t ) - sizeof ( int ) ] ; t#sigval_t _sigval ; int _sys_private ; } _timer ; struct { t#__kernel_pid_t _pid ; t#__kernel_uid32_t _uid ; t#sigval_t _sigval ; } _rt ; struct { t#__kernel_pid_t _pid ; t#__kernel_uid32_t _uid ; int _status ; t#__kernel_clock_t _utime ; t#__kernel_clock_t _stime ; } _sigchld ; struct { void * _addr ; short _addr_lsb ; union { struct { void * _lower ; void * _upper ; } _addr_bnd ; t#__u32 _pkey ; } ; } _sigfault ; struct { long _band ; int _fd ; } _sigpoll ; struct { void * _call_addr ; int _syscall ; unsigned int _arch ; } _sigsys ; } _sifields ; } 
t#siginfo_t typedef s#siginfo siginfo_t 
s#task_io_accounting struct task_io_accounting { t#u64 rchar ; t#u64 wchar ; t#u64 syscr ; t#u64 syscw ; t#u64 read_bytes ; t#u64 write_bytes ; t#u64 cancelled_write_bytes ; } 
s##robust_list_head
t#compat_uptr_t typedef t#u32 compat_uptr_t 
s#compat_robust_list struct compat_robust_list { t#compat_uptr_t next ; } 
t#compat_long_t typedef t#s32 compat_long_t 
s#compat_robust_list_head struct compat_robust_list_head { s#compat_robust_list list ; t#compat_long_t futex_offset ; t#compat_uptr_t list_op_pending ; } 
s##futex_pi_state
s##perf_event_context
E#perf_nr_task_contexts ( 0 ) + 2 
s##numa_group
s#tlbflush_unmap_batch struct tlbflush_unmap_batch { } 
s#page_frag struct page_frag { s#page * page ; t#__u32 offset ; t#__u32 size ; } 
s##task_delay_info
s#latency_record struct latency_record { unsigned long backtrace [ 12 ] ; unsigned int count ; unsigned long time ; unsigned long max ; } 
s##ftrace_ret_stack
e#uprobe_task_state enum uprobe_task_state { UTASK_RUNNING , UTASK_SSTEP , UTASK_SSTEP_ACK , UTASK_SSTEP_TRAPPED , } 
s#arch_uprobe_task struct arch_uprobe_task { } 
s##uprobe
s#return_instance struct return_instance { s#uprobe * uprobe ; unsigned long func ; unsigned long stack ; unsigned long orig_ret_vaddr ; t#bool chained ; s#return_instance * next ; } 
s#uprobe_task struct uprobe_task { e#uprobe_task_state state ; union { struct { s#arch_uprobe_task autask ; unsigned long vaddr ; } ; struct { s#callback_head dup_xol_work ; unsigned long dup_xol_addr ; } ; } ; s#uprobe * active_uprobe ; unsigned long xol_vaddr ; s#return_instance * return_instances ; unsigned int depth ; } 
t#mm_segment_t typedef struct { t#__u32 ar4 ; } mm_segment_t 
s#per_regs struct per_regs { unsigned long control ; unsigned long start ; unsigned long end ; } 
s#per_event struct per_event { unsigned short cause ; unsigned long address ; unsigned char paid ; } 
s#runtime_instr_cb struct runtime_instr_cb { t#__u64 buf_current ; t#__u64 buf_origin ; t#__u64 buf_limit ; t#__u32 valid : 1 ; t#__u32 pstate : 1 ; t#__u32 pstate_set_buf : 1 ; t#__u32 home_space : 1 ; t#__u32 altered : 1 ; t#__u32 : 3 ; t#__u32 pstate_sample : 1 ; t#__u32 sstate_sample : 1 ; t#__u32 pstate_collect : 1 ; t#__u32 sstate_collect : 1 ; t#__u32 : 1 ; t#__u32 halted_int : 1 ; t#__u32 int_requested : 1 ; t#__u32 buffer_full_int : 1 ; t#__u32 key : 4 ; t#__u32 : 9 ; t#__u32 rgs : 3 ; t#__u32 mode : 4 ; t#__u32 next : 1 ; t#__u32 mae : 1 ; t#__u32 : 2 ; t#__u32 call_type_br : 1 ; t#__u32 return_type_br : 1 ; t#__u32 other_type_br : 1 ; t#__u32 bc_other_type : 1 ; t#__u32 emit : 1 ; t#__u32 tx_abort : 1 ; t#__u32 : 2 ; t#__u32 bp_xn : 1 ; t#__u32 bp_xt : 1 ; t#__u32 bp_ti : 1 ; t#__u32 bp_ni : 1 ; t#__u32 suppr_y : 1 ; t#__u32 suppr_z : 1 ; t#__u32 dc_miss_extra : 1 ; t#__u32 lat_lev_ignore : 1 ; t#__u32 ic_lat_lev : 4 ; t#__u32 dc_lat_lev : 4 ; t#__u64 reserved1 ; t#__u64 scaling_factor ; t#__u64 rsic ; t#__u64 reserved2 ; } 
s##gs_cb
t#freg_t typedef union { float f ; double d ; t#__u64 ui ; struct { t#__u32 hi ; t#__u32 lo ; } fp ; } freg_t 
t#__vector128 typedef struct { t#__u32 u [ 4 ] ; } __vector128 
s#fpu struct fpu { t#__u32 fpc ; void * regs ; union { t#freg_t fprs [ 16 ] ; t#__vector128 vxrs [ 32 ] ; } ; } 
s#thread_struct struct thread_struct { unsigned int acrs [ 16 ] ; unsigned long ksp ; unsigned long user_timer ; unsigned long guest_timer ; unsigned long system_timer ; unsigned long hardirq_timer ; unsigned long softirq_timer ; unsigned long sys_call_table ; t#mm_segment_t mm_segment ; unsigned long gmap_addr ; unsigned int gmap_write_flag ; unsigned int gmap_int_code ; unsigned int gmap_pfault ; s#per_regs per_user ; s#per_event per_event ; unsigned long per_flags ; unsigned int system_call ; unsigned long last_break ; unsigned long pfault_wait ; s#list_head list ; s#runtime_instr_cb * ri_cb ; s#gs_cb * gs_cb ; s#gs_cb * gs_bc_cb ; unsigned char trap_tdb [ 256 ] ; s#fpu fpu ; } 
s#task_struct struct task_struct { s#thread_info thread_info ; volatile long state ; void * stack ; t#atomic_t usage ; unsigned int flags ; unsigned int ptrace ; s#llist_node wake_entry ; int on_cpu ; unsigned int cpu ; unsigned int wakee_flips ; unsigned long wakee_flip_decay_ts ; s#task_struct * last_wakee ; int recent_used_cpu ; int wake_cpu ; int on_rq ; int prio ; int static_prio ; int normal_prio ; unsigned int rt_priority ; const s#sched_class * sched_class ; s#sched_entity se ; s#sched_rt_entity rt ; s#task_group * sched_task_group ; s#sched_dl_entity dl ; s#hlist_head preempt_notifiers ; unsigned int btrace_seq ; unsigned int policy ; int nr_cpus_allowed ; t#cpumask_t cpus_allowed ; unsigned long rcu_tasks_nvcsw ; t#bool rcu_tasks_holdout ; s#list_head rcu_tasks_holdout_list ; int rcu_tasks_idle_cpu ; s#sched_info sched_info ; s#list_head tasks ; s#plist_node pushable_tasks ; s#rb_node pushable_dl_tasks ; s#mm_struct * mm ; s#mm_struct * active_mm ; s#vmacache vmacache ; s#task_rss_stat rss_stat ; int exit_state ; int exit_code ; int exit_signal ; int pdeath_signal ; unsigned long jobctl ; unsigned int personality ; unsigned sched_reset_on_fork : 1 ; unsigned sched_contributes_to_load : 1 ; unsigned sched_migrated : 1 ; unsigned sched_remote_wakeup : 1 ; unsigned : 0 ; unsigned in_execve : 1 ; unsigned in_iowait : 1 ; unsigned memcg_may_oom : 1 ; unsigned memcg_kmem_skip_account : 1 ; unsigned no_cgroup_migration : 1 ; unsigned long atomic_flags ; s#restart_block restart_block ; t#pid_t pid ; t#pid_t tgid ; s#task_struct * real_parent ; s#task_struct * parent ; s#list_head children ; s#list_head sibling ; s#task_struct * group_leader ; s#list_head ptraced ; s#list_head ptrace_entry ; s#pid_link pids [ E#PIDTYPE_MAX ] ; s#list_head thread_group ; s#list_head thread_node ; s#completion * vfork_done ; int * set_child_tid ; int * clear_child_tid ; t#u64 utime ; t#u64 stime ; t#u64 utimescaled ; t#u64 stimescaled ; t#u64 gtime ; s#prev_cputime prev_cputime ; unsigned long nvcsw ; unsigned long nivcsw ; t#u64 start_time ; t#u64 real_start_time ; unsigned long min_flt ; unsigned long maj_flt ; s#task_cputime cputime_expires ; s#list_head cpu_timers [ 3 ] ; const s#cred * ptracer_cred ; const s#cred * real_cred ; const s#cred * cred ; char comm [ 16 ] ; s#nameidata * nameidata ; s#sysv_sem sysvsem ; s#sysv_shm sysvshm ; unsigned long last_switch_count ; s#fs_struct * fs ; s#files_struct * files ; s#nsproxy * nsproxy ; s#signal_struct * signal ; s#sighand_struct * sighand ; t#sigset_t blocked ; t#sigset_t real_blocked ; t#sigset_t saved_sigmask ; s#sigpending pending ; unsigned long sas_ss_sp ; t#size_t sas_ss_size ; unsigned int sas_ss_flags ; s#callback_head * task_works ; s#audit_context * audit_context ; t#kuid_t loginuid ; unsigned int sessionid ; s#seccomp seccomp ; t#u32 parent_exec_id ; t#u32 self_exec_id ; t#spinlock_t alloc_lock ; t#raw_spinlock_t pi_lock ; s#wake_q_node wake_q ; s#rb_root_cached pi_waiters ; s#task_struct * pi_top_task ; s#rt_mutex_waiter * pi_blocked_on ; void * journal_info ; s#bio_list * bio_list ; s#blk_plug * plug ; s#reclaim_state * reclaim_state ; s#backing_dev_info * backing_dev_info ; s#io_context * io_context ; unsigned long ptrace_message ; t#siginfo_t * last_siginfo ; s#task_io_accounting ioac ; t#u64 acct_rss_mem1 ; t#u64 acct_vm_mem1 ; t#u64 acct_timexpd ; t#nodemask_t mems_allowed ; t#seqcount_t mems_allowed_seq ; int cpuset_mem_spread_rotor ; int cpuset_slab_spread_rotor ; s#css_set * cgroups ; s#list_head cg_list ; s#robust_list_head * robust_list ; s#compat_robust_list_head * compat_robust_list ; s#list_head pi_state_list ; s#futex_pi_state * pi_state_cache ; s#perf_event_context * perf_event_ctxp [ E#perf_nr_task_contexts ] ; s#mutex perf_event_mutex ; s#list_head perf_event_list ; s#mempolicy * mempolicy ; short il_next ; short pref_node_fork ; int numa_scan_seq ; unsigned int numa_scan_period ; unsigned int numa_scan_period_max ; int numa_preferred_nid ; unsigned long numa_migrate_retry ; t#u64 node_stamp ; t#u64 last_task_numa_placement ; t#u64 last_sum_exec_runtime ; s#callback_head numa_work ; s#numa_group * numa_group ; unsigned long * numa_faults ; unsigned long total_numa_faults ; unsigned long numa_faults_locality [ 3 ] ; unsigned long numa_pages_migrated ; s#tlbflush_unmap_batch tlb_ubc ; s#callback_head rcu ; s#pipe_inode_info * splice_pipe ; s#page_frag task_frag ; s#task_delay_info * delays ; int make_it_fail ; int nr_dirtied ; int nr_dirtied_pause ; unsigned long dirty_paused_when ; int latency_record_count ; s#latency_record latency_record [ 32 ] ; t#u64 timer_slack_ns ; t#u64 default_timer_slack_ns ; int curr_ret_stack ; s#ftrace_ret_stack * ret_stack ; unsigned long long ftrace_timestamp ; t#atomic_t trace_overrun ; t#atomic_t tracing_graph_pause ; unsigned long trace ; unsigned long trace_recursion ; s#mem_cgroup * memcg_in_oom ; t#gfp_t memcg_oom_gfp_mask ; int memcg_oom_order ; unsigned int memcg_nr_pages_over_high ; s#uprobe_task * utask ; unsigned int sequential_io ; unsigned int sequential_io_avg ; int pagefault_disabled ; s#task_struct * oom_reaper_list ; t#atomic_t stack_refcount ; int patch_state ; void * security ; void * suse_kabi_padding ; s#thread_struct thread ; } 
s#rw_semaphore struct rw_semaphore { t#atomic_long_t count ; s#list_head wait_list ; t#raw_spinlock_t wait_lock ; s#optimistic_spin_queue osq ; s#task_struct * owner ; } 
s#mm_rss_stat struct mm_rss_stat { t#atomic_long_t count [ E#NR_MM_COUNTERS ] ; } 
s##linux_binfmt
t#cpumask_var_t typedef s#cpumask cpumask_var_t [ 1 ] 
t#mm_context_t typedef struct { t#spinlock_t lock ; t#cpumask_t cpu_attach_mask ; t#atomic_t flush_count ; unsigned int flush_mm ; t#spinlock_t pgtable_lock ; s#list_head pgtable_list ; t#spinlock_t gmap_lock ; s#list_head gmap_list ; unsigned long gmap_asce ; unsigned long asce ; unsigned long asce_limit ; unsigned long vdso_base ; unsigned int alloc_pgste : 1 ; unsigned int has_pgste : 1 ; unsigned int uses_skeys : 1 ; unsigned int uses_cmm : 1 ; unsigned int allow_gmap_hpage_1m : 1 ; } mm_context_t 
s#core_thread struct core_thread { s#task_struct * task ; s#core_thread * next ; } 
s#core_state struct core_state { t#atomic_t nr_threads ; s#core_thread dumper ; s#completion startup ; } 
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s#uprobes_state struct uprobes_state { s#xol_area * xol_area ; } 
s#mm_struct struct mm_struct { s#vm_area_struct * mmap ; s#rb_root mm_rb ; t#u32 vmacache_seqnum ; unsigned long ( * get_unmapped_area ) ( s#file * , unsigned long , unsigned long , unsigned long , unsigned long ) ; unsigned long mmap_base ; unsigned long mmap_legacy_base ; unsigned long task_size ; unsigned long highest_vm_end ; t#pgd_t * pgd ; t#atomic_t mm_users ; t#atomic_t mm_count ; t#atomic_long_t nr_ptes ; t#atomic_long_t nr_pmds ; int map_count ; t#spinlock_t page_table_lock ; s#rw_semaphore mmap_sem ; s#list_head mmlist ; unsigned long hiwater_rss ; unsigned long hiwater_vm ; unsigned long total_vm ; unsigned long locked_vm ; unsigned long pinned_vm ; unsigned long data_vm ; unsigned long exec_vm ; unsigned long stack_vm ; unsigned long def_flags ; unsigned long start_code , end_code , start_data , end_data ; unsigned long start_brk , brk , start_stack ; unsigned long arg_start , arg_end , env_start , env_end ; unsigned long saved_auxv [ ( 2 * ( 1 + 20 + 1 ) ) ] ; s#mm_rss_stat rss_stat ; s#linux_binfmt * binfmt ; t#cpumask_var_t cpu_vm_mask_var ; t#mm_context_t context ; unsigned long flags ; s#core_state * core_state ; t#spinlock_t ioctx_lock ; s#kioctx_table * ioctx_table ; s#task_struct * owner ; s#user_namespace * user_ns ; s#file * exe_file ; s#mmu_notifier_mm * mmu_notifier_mm ; unsigned long numa_next_scan ; unsigned long numa_scan_offset ; int numa_scan_seq ; t#atomic_t tlb_flush_pending ; s#uprobes_state uprobes_state ; t#atomic_long_t hugetlb_usage ; s#work_struct async_put_work ; } 
t#pgprot_t typedef struct { unsigned long pgprot ; } pgprot_t 
s##anon_vma
s##userfaultfd_ctx
s#vm_userfaultfd_ctx struct vm_userfaultfd_ctx { s#userfaultfd_ctx * ctx ; } 
s#vm_area_struct struct vm_area_struct { unsigned long vm_start ; unsigned long vm_end ; s#vm_area_struct * vm_next , * vm_prev ; s#rb_node vm_rb ; unsigned long rb_subtree_gap ; s#mm_struct * vm_mm ; t#pgprot_t vm_page_prot ; unsigned long vm_flags ; struct { s#rb_node rb ; unsigned long rb_subtree_last ; } shared ; s#list_head anon_vma_chain ; s#anon_vma * anon_vma ; const s#vm_operations_struct * vm_ops ; unsigned long vm_pgoff ; s#file * vm_file ; void * vm_private_data ; s#mempolicy * vm_policy ; s#vm_userfaultfd_ctx vm_userfaultfd_ctx ; void * suse_kabi_padding ; } 
s#bin_attribute struct bin_attribute { s#attribute attr ; t#size_t size ; void * private ; t#ssize_t ( * read ) ( s#file * , s#kobject * , s#bin_attribute * , char * , t#loff_t , t#size_t ) ; t#ssize_t ( * write ) ( s#file * , s#kobject * , s#bin_attribute * , char * , t#loff_t , t#size_t ) ; int ( * mmap ) ( s#file * , s#kobject * , s#bin_attribute * , s#vm_area_struct * ) ; } 
s#attribute_group struct attribute_group { const char * name ; t#umode_t ( * is_visible ) ( s#kobject * , s#attribute * , int ) ; t#umode_t ( * is_bin_visible ) ( s#kobject * , s#bin_attribute * , int ) ; s#attribute * * attrs ; s#bin_attribute * * bin_attrs ; } 
s#dev_pm_ops struct dev_pm_ops { int ( * prepare ) ( s#device * ) ; void ( * complete ) ( s#device * ) ; int ( * suspend ) ( s#device * ) ; int ( * resume ) ( s#device * ) ; int ( * freeze ) ( s#device * ) ; int ( * thaw ) ( s#device * ) ; int ( * poweroff ) ( s#device * ) ; int ( * restore ) ( s#device * ) ; int ( * suspend_late ) ( s#device * ) ; int ( * resume_early ) ( s#device * ) ; int ( * freeze_late ) ( s#device * ) ; int ( * thaw_early ) ( s#device * ) ; int ( * poweroff_late ) ( s#device * ) ; int ( * restore_early ) ( s#device * ) ; int ( * suspend_noirq ) ( s#device * ) ; int ( * resume_noirq ) ( s#device * ) ; int ( * freeze_noirq ) ( s#device * ) ; int ( * thaw_noirq ) ( s#device * ) ; int ( * poweroff_noirq ) ( s#device * ) ; int ( * restore_noirq ) ( s#device * ) ; int ( * runtime_suspend ) ( s#device * ) ; int ( * runtime_resume ) ( s#device * ) ; int ( * runtime_idle ) ( s#device * ) ; } 
s#device_type struct device_type { const char * name ; const s#attribute_group * * groups ; int ( * uevent ) ( s#device * , s#kobj_uevent_env * ) ; char * ( * devnode ) ( s#device * , t#umode_t * , t#kuid_t * , t#kgid_t * ) ; void ( * release ) ( s#device * ) ; const s#dev_pm_ops * pm ; } 
s#device_attribute struct device_attribute { s#attribute attr ; t#ssize_t ( * show ) ( s#device * , s#device_attribute * , char * ) ; t#ssize_t ( * store ) ( s#device * , s#device_attribute * , const char * , t#size_t ) ; } 
e#probe_type enum probe_type { PROBE_DEFAULT_STRATEGY , PROBE_PREFER_ASYNCHRONOUS , PROBE_FORCE_SYNCHRONOUS , } 
s#of_device_id struct of_device_id { char name [ 32 ] ; char type [ 32 ] ; char compatible [ 128 ] ; const void * data ; } 
t#__u8 typedef unsigned char __u8 
t#kernel_ulong_t typedef unsigned long kernel_ulong_t 
s#acpi_device_id struct acpi_device_id { t#__u8 id [ 9 ] ; t#kernel_ulong_t driver_data ; t#__u32 cls ; t#__u32 cls_msk ; } 
s#pm_message struct pm_message { int event ; } 
t#pm_message_t typedef s#pm_message pm_message_t 
s##driver_private
s#device_driver struct device_driver { const char * name ; s#bus_type * bus ; s#module * owner ; const char * mod_name ; t#bool suppress_bind_attrs ; e#probe_type probe_type ; const s#of_device_id * of_match_table ; const s#acpi_device_id * acpi_match_table ; int ( * probe ) ( s#device * ) ; int ( * remove ) ( s#device * ) ; void ( * shutdown ) ( s#device * ) ; int ( * suspend ) ( s#device * , t#pm_message_t ) ; int ( * resume ) ( s#device * ) ; const s#attribute_group * * groups ; const s#dev_pm_ops * pm ; s#driver_private * p ; } 
s##iommu_ops
s##subsys_private
s#bus_type struct bus_type { const char * name ; const char * dev_name ; s#device * dev_root ; s#device_attribute * dev_attrs ; const s#attribute_group * * bus_groups ; const s#attribute_group * * dev_groups ; const s#attribute_group * * drv_groups ; int ( * match ) ( s#device * , s#device_driver * ) ; int ( * uevent ) ( s#device * , s#kobj_uevent_env * ) ; int ( * probe ) ( s#device * ) ; int ( * remove ) ( s#device * ) ; void ( * shutdown ) ( s#device * ) ; int ( * online ) ( s#device * ) ; int ( * offline ) ( s#device * ) ; int ( * suspend ) ( s#device * , t#pm_message_t ) ; int ( * resume ) ( s#device * ) ; int ( * num_vf ) ( s#device * ) ; int ( * dma_configure ) ( s#device * ) ; const s#dev_pm_ops * pm ; const s#iommu_ops * iommu_ops ; s#subsys_private * p ; s#lock_class_key lock_key ; } 
e#dl_dev_state enum dl_dev_state { DL_DEV_NO_DRIVER = 0 , DL_DEV_PROBING , DL_DEV_DRIVER_BOUND , DL_DEV_UNBINDING , } 
s#dev_links_info struct dev_links_info { s#list_head suppliers ; s#list_head consumers ; e#dl_dev_state status ; } 
s##wake_irq
s#wakeup_source struct wakeup_source { const char * name ; s#list_head entry ; t#spinlock_t lock ; s#wake_irq * wakeirq ; s#timer_list timer ; unsigned long timer_expires ; t#ktime_t total_time ; t#ktime_t max_time ; t#ktime_t last_time ; t#ktime_t start_prevent_time ; t#ktime_t prevent_sleep_time ; unsigned long event_count ; unsigned long active_count ; unsigned long relax_count ; unsigned long expire_count ; unsigned long wakeup_count ; t#bool active : 1 ; t#bool autosleep_enabled : 1 ; } 
e#rpm_request enum rpm_request { RPM_REQ_NONE = 0 , RPM_REQ_IDLE , RPM_REQ_SUSPEND , RPM_REQ_AUTOSUSPEND , RPM_REQ_RESUME , } 
e#rpm_status enum rpm_status { RPM_ACTIVE = 0 , RPM_RESUMING , RPM_SUSPENDED , RPM_SUSPENDING , } 
s#pm_subsys_data struct pm_subsys_data { t#spinlock_t lock ; unsigned int refcount ; } 
s##dev_pm_qos
s#dev_pm_info struct dev_pm_info { t#pm_message_t power_state ; unsigned int can_wakeup : 1 ; unsigned int async_suspend : 1 ; t#bool in_dpm_list : 1 ; t#bool is_prepared : 1 ; t#bool is_suspended : 1 ; t#bool is_noirq_suspended : 1 ; t#bool is_late_suspended : 1 ; t#bool early_init : 1 ; t#bool direct_complete : 1 ; t#u32 driver_flags ; t#spinlock_t lock ; s#list_head entry ; s#completion completion ; s#wakeup_source * wakeup ; t#bool wakeup_path : 1 ; t#bool syscore : 1 ; t#bool no_pm_callbacks : 1 ; unsigned int must_resume : 1 ; unsigned int may_skip_resume : 1 ; s#timer_list suspend_timer ; unsigned long timer_expires ; s#work_struct work ; t#wait_queue_head_t wait_queue ; s#wake_irq * wakeirq ; t#atomic_t usage_count ; t#atomic_t child_count ; unsigned int disable_depth : 3 ; unsigned int idle_notification : 1 ; unsigned int request_pending : 1 ; unsigned int deferred_resume : 1 ; unsigned int runtime_auto : 1 ; t#bool ignore_children : 1 ; unsigned int no_callbacks : 1 ; unsigned int irq_safe : 1 ; unsigned int use_autosuspend : 1 ; unsigned int timer_autosuspends : 1 ; unsigned int memalloc_noio : 1 ; unsigned int links_count ; e#rpm_request request ; e#rpm_status runtime_status ; int runtime_error ; int autosuspend_delay ; unsigned long last_busy ; unsigned long active_jiffies ; unsigned long suspended_jiffies ; unsigned long accounting_timestamp ; s#pm_subsys_data * subsys_data ; void ( * set_latency_tolerance ) ( s#device * , t#s32 ) ; s#dev_pm_qos * qos ; } 
s#dev_pm_domain struct dev_pm_domain { s#dev_pm_ops ops ; void ( * detach ) ( s#device * , t#bool ) ; int ( * activate ) ( s#device * ) ; void ( * sync ) ( s#device * ) ; void ( * dismiss ) ( s#device * ) ; } 
t#dma_addr_t typedef t#u64 dma_addr_t 
s#scatterlist struct scatterlist { unsigned long page_link ; unsigned int offset ; unsigned int length ; t#dma_addr_t dma_address ; unsigned int dma_length ; } 
s#sg_table struct sg_table { s#scatterlist * sgl ; unsigned int nents ; unsigned int orig_nents ; } 
e#dma_data_direction enum dma_data_direction { DMA_BIDIRECTIONAL = 0 , DMA_TO_DEVICE = 1 , DMA_FROM_DEVICE = 2 , DMA_NONE = 3 , } 
s#dma_map_ops struct dma_map_ops { void * ( * alloc ) ( s#device * , t#size_t , t#dma_addr_t * , t#gfp_t , unsigned long ) ; void ( * free ) ( s#device * , t#size_t , void * , t#dma_addr_t , unsigned long ) ; int ( * mmap ) ( s#device * , s#vm_area_struct * , void * , t#dma_addr_t , t#size_t , unsigned long ) ; int ( * get_sgtable ) ( s#device * , s#sg_table * , void * , t#dma_addr_t , t#size_t , unsigned long ) ; t#dma_addr_t ( * map_page ) ( s#device * , s#page * , unsigned long , t#size_t , e#dma_data_direction , unsigned long ) ; void ( * unmap_page ) ( s#device * , t#dma_addr_t , t#size_t , e#dma_data_direction , unsigned long ) ; int ( * map_sg ) ( s#device * , s#scatterlist * , int , e#dma_data_direction , unsigned long ) ; void ( * unmap_sg ) ( s#device * , s#scatterlist * , int , e#dma_data_direction , unsigned long ) ; t#dma_addr_t ( * map_resource ) ( s#device * , t#phys_addr_t , t#size_t , e#dma_data_direction , unsigned long ) ; void ( * unmap_resource ) ( s#device * , t#dma_addr_t , t#size_t , e#dma_data_direction , unsigned long ) ; void ( * sync_single_for_cpu ) ( s#device * , t#dma_addr_t , t#size_t , e#dma_data_direction ) ; void ( * sync_single_for_device ) ( s#device * , t#dma_addr_t , t#size_t , e#dma_data_direction ) ; void ( * sync_sg_for_cpu ) ( s#device * , s#scatterlist * , int , e#dma_data_direction ) ; void ( * sync_sg_for_device ) ( s#device * , s#scatterlist * , int , e#dma_data_direction ) ; int ( * mapping_error ) ( s#device * , t#dma_addr_t ) ; int ( * dma_supported ) ( s#device * , t#u64 ) ; int ( * set_dma_mask ) ( s#device * , t#u64 ) ; t#size_t ( * max_mapping_size ) ( s#device * ) ; int is_phys ; } 
s#device_dma_parameters struct device_dma_parameters { unsigned int max_segment_size ; unsigned long segment_boundary_mask ; } 
s##dma_coherent_mem
s#dev_archdata struct dev_archdata { } 
s##device_node
s#fwnode_reference_args struct fwnode_reference_args { s#fwnode_handle * fwnode ; unsigned int nargs ; t#u64 args [ 8 ] ; } 
s#fwnode_endpoint struct fwnode_endpoint { unsigned int port ; unsigned int id ; const s#fwnode_handle * local_fwnode ; } 
s#fwnode_operations struct fwnode_operations { void ( * get ) ( s#fwnode_handle * ) ; void ( * put ) ( s#fwnode_handle * ) ; t#bool ( * device_is_available ) ( const s#fwnode_handle * ) ; t#bool ( * property_present ) ( const s#fwnode_handle * , const char * ) ; int ( * property_read_int_array ) ( const s#fwnode_handle * , const char * , unsigned int , void * , t#size_t ) ; int ( * property_read_string_array ) ( const s#fwnode_handle * , const char * , const char * * , t#size_t ) ; s#fwnode_handle * ( * get_parent ) ( const s#fwnode_handle * ) ; s#fwnode_handle * ( * get_next_child_node ) ( const s#fwnode_handle * , s#fwnode_handle * ) ; s#fwnode_handle * ( * get_named_child_node ) ( const s#fwnode_handle * , const char * ) ; int ( * get_reference_args ) ( const s#fwnode_handle * , const char * , const char * , unsigned int , unsigned int , s#fwnode_reference_args * ) ; s#fwnode_handle * ( * graph_get_next_endpoint ) ( const s#fwnode_handle * , s#fwnode_handle * ) ; s#fwnode_handle * ( * graph_get_remote_endpoint ) ( const s#fwnode_handle * ) ; s#fwnode_handle * ( * graph_get_port_parent ) ( s#fwnode_handle * ) ; int ( * graph_parse_endpoint ) ( const s#fwnode_handle * , s#fwnode_endpoint * ) ; } 
s#fwnode_handle struct fwnode_handle { s#fwnode_handle * secondary ; const s#fwnode_operations * ops ; } 
s#klist_node struct klist_node { void * n_klist ; s#list_head n_node ; s#kref n_ref ; } 
s#class_attribute struct class_attribute { s#attribute attr ; t#ssize_t ( * show ) ( s#class * , s#class_attribute * , char * ) ; t#ssize_t ( * store ) ( s#class * , s#class_attribute * , const char * , t#size_t ) ; } 
s#class struct class { const char * name ; s#module * owner ; s#class_attribute * class_attrs ; const s#attribute_group * * class_groups ; const s#attribute_group * * dev_groups ; s#kobject * dev_kobj ; int ( * dev_uevent ) ( s#device * , s#kobj_uevent_env * ) ; char * ( * devnode ) ( s#device * , t#umode_t * ) ; void ( * class_release ) ( s#class * ) ; void ( * dev_release ) ( s#device * ) ; int ( * suspend ) ( s#device * , t#pm_message_t ) ; int ( * resume ) ( s#device * ) ; int ( * shutdown ) ( s#device * ) ; const s#kobj_ns_type_operations * ns_type ; const void * ( * namespace ) ( s#device * ) ; const s#dev_pm_ops * pm ; s#subsys_private * p ; } 
s##iommu_group
s##iommu_fwspec
s#device struct device { s#device * parent ; s#device_private * p ; s#kobject kobj ; const char * init_name ; const s#device_type * type ; s#mutex mutex ; s#bus_type * bus ; s#device_driver * driver ; void * platform_data ; void * driver_data ; s#dev_links_info links ; s#dev_pm_info power ; s#dev_pm_domain * pm_domain ; s#list_head msi_list ; int numa_node ; const s#dma_map_ops * dma_ops ; t#u64 * dma_mask ; t#u64 coherent_dma_mask ; unsigned long dma_pfn_offset ; s#device_dma_parameters * dma_parms ; s#list_head dma_pools ; s#dma_coherent_mem * dma_mem ; s#dev_archdata archdata ; s#device_node * of_node ; s#fwnode_handle * fwnode ; t#dev_t devt ; t#u32 id ; t#spinlock_t devres_lock ; s#list_head devres_head ; s#klist_node knode_class ; s#class * class ; const s#attribute_group * * groups ; void ( * release ) ( s#device * ) ; s#iommu_group * iommu_group ; s#iommu_fwspec * iommu_fwspec ; t#bool offline_disabled : 1 ; t#bool offline : 1 ; } 
s#backing_dev_info struct backing_dev_info { s#list_head bdi_list ; unsigned long ra_pages ; unsigned long io_pages ; t#congested_fn * congested_fn ; void * congested_data ; const char * name ; s#kref refcnt ; unsigned int capabilities ; unsigned int min_ratio ; unsigned int max_ratio , max_prop_frac ; t#atomic_long_t tot_write_bandwidth ; s#bdi_writeback wb ; s#list_head wb_list ; s#radix_tree_root cgwb_tree ; s#rb_root cgwb_congested_tree ; s#mutex cgwb_release_mutex ; t#wait_queue_head_t wb_waitq ; s#device * dev ; s#device * owner ; s#timer_list laptop_mode_wb_timer ; s#dentry * debug_dir ; s#dentry * debug_stats ; } 
E#NR_WB_STAT_ITEMS 4 
s#bdi_writeback_congested struct bdi_writeback_congested { unsigned long state ; t#atomic_t refcnt ; s#backing_dev_info * __bdi ; int blkcg_id ; s#rb_node rb_node ; } 
s#fprop_local_percpu struct fprop_local_percpu { s#percpu_counter events ; unsigned int period ; t#raw_spinlock_t lock ; } 
e#wb_reason enum wb_reason { WB_REASON_BACKGROUND , WB_REASON_VMSCAN , WB_REASON_SYNC , WB_REASON_PERIODIC , WB_REASON_LAPTOP_TIMER , WB_REASON_FREE_MORE_MEM , WB_REASON_FS_FREE_SPACE , WB_REASON_FORKER_THREAD , WB_REASON_MAX , } 
s#delayed_work struct delayed_work { s#work_struct work ; s#timer_list timer ; s#workqueue_struct * wq ; int cpu ; } 
s#bdi_writeback struct bdi_writeback { s#backing_dev_info * bdi ; unsigned long state ; unsigned long last_old_flush ; s#list_head b_dirty ; s#list_head b_io ; s#list_head b_more_io ; s#list_head b_dirty_time ; t#spinlock_t list_lock ; s#percpu_counter stat [ E#NR_WB_STAT_ITEMS ] ; s#bdi_writeback_congested * congested ; unsigned long bw_time_stamp ; unsigned long dirtied_stamp ; unsigned long written_stamp ; unsigned long write_bandwidth ; unsigned long avg_write_bandwidth ; unsigned long dirty_ratelimit ; unsigned long balanced_dirty_ratelimit ; s#fprop_local_percpu completions ; int dirty_exceeded ; e#wb_reason start_all_reason ; t#spinlock_t work_lock ; s#list_head work_list ; s#delayed_work dwork ; unsigned long dirty_sleep ; s#list_head bdi_node ; s#percpu_ref refcnt ; s#fprop_local_percpu memcg_completions ; s#cgroup_subsys_state * memcg_css ; s#cgroup_subsys_state * blkcg_css ; s#list_head memcg_node ; s#list_head blkcg_node ; union { s#work_struct release_work ; s#callback_head rcu ; } ; } 
s#writeback_control struct writeback_control { long nr_to_write ; long pages_skipped ; t#loff_t range_start ; t#loff_t range_end ; e#writeback_sync_modes sync_mode ; unsigned for_kupdate : 1 ; unsigned for_background : 1 ; unsigned tagged_writepages : 1 ; unsigned for_reclaim : 1 ; unsigned range_cyclic : 1 ; unsigned for_sync : 1 ; s#bdi_writeback * wb ; s#inode * inode ; int wb_id ; int wb_lcand_id ; int wb_tcand_id ; t#size_t wb_bytes ; t#size_t wb_lcand_bytes ; t#size_t wb_tcand_bytes ; } 
s##kstatfs
t#projid_t typedef t#__kernel_uid32_t projid_t 
t#kprojid_t typedef struct { t#projid_t val ; } kprojid_t 
e#quota_type enum quota_type { USRQUOTA = 0 , GRPQUOTA = 1 , PRJQUOTA = 2 , } 
s#kqid struct kqid { union { t#kuid_t uid ; t#kgid_t gid ; t#kprojid_t projid ; } ; e#quota_type type ; } 
t#qsize_t typedef long long qsize_t 
t#__s64 __extension__ typedef __signed__ long long __s64 
t#time64_t typedef t#__s64 time64_t 
s#mem_dqblk struct mem_dqblk { t#qsize_t dqb_bhardlimit ; t#qsize_t dqb_bsoftlimit ; t#qsize_t dqb_curspace ; t#qsize_t dqb_rsvspace ; t#qsize_t dqb_ihardlimit ; t#qsize_t dqb_isoftlimit ; t#qsize_t dqb_curinodes ; t#time64_t dqb_btime ; t#time64_t dqb_itime ; } 
s#dquot struct dquot { s#hlist_node dq_hash ; s#list_head dq_inuse ; s#list_head dq_free ; s#list_head dq_dirty ; s#mutex dq_lock ; t#atomic_t dq_count ; t#wait_queue_head_t dq_wait_unused ; s#super_block * dq_sb ; s#kqid dq_id ; t#loff_t dq_off ; unsigned long dq_flags ; s#mem_dqblk dq_dqb ; } 
s#shrink_control struct shrink_control { t#gfp_t gfp_mask ; unsigned long nr_to_scan ; unsigned long nr_scanned ; int nid ; s#mem_cgroup * memcg ; } 
s#super_operations struct super_operations { s#inode * ( * alloc_inode ) ( s#super_block * ) ; void ( * destroy_inode ) ( s#inode * ) ; void ( * dirty_inode ) ( s#inode * , int ) ; int ( * write_inode ) ( s#inode * , s#writeback_control * ) ; int ( * drop_inode ) ( s#inode * ) ; void ( * evict_inode ) ( s#inode * ) ; void ( * put_super ) ( s#super_block * ) ; int ( * sync_fs ) ( s#super_block * , int ) ; int ( * freeze_super ) ( s#super_block * ) ; int ( * freeze_fs ) ( s#super_block * ) ; int ( * thaw_super ) ( s#super_block * ) ; int ( * unfreeze_fs ) ( s#super_block * ) ; int ( * statfs ) ( s#dentry * , s#kstatfs * ) ; int ( * remount_fs ) ( s#super_block * , int * , char * ) ; void ( * umount_begin ) ( s#super_block * ) ; int ( * show_options ) ( s#seq_file * , s#dentry * ) ; int ( * show_devname ) ( s#seq_file * , s#dentry * ) ; int ( * show_path ) ( s#seq_file * , s#dentry * ) ; int ( * show_stats ) ( s#seq_file * , s#dentry * ) ; t#ssize_t ( * quota_read ) ( s#super_block * , int , char * , t#size_t , t#loff_t ) ; t#ssize_t ( * quota_write ) ( s#super_block * , int , const char * , t#size_t , t#loff_t ) ; s#dquot * * ( * get_dquots ) ( s#inode * ) ; int ( * bdev_try_to_free_page ) ( s#super_block * , s#page * , t#gfp_t ) ; long ( * nr_cached_objects ) ( s#super_block * , s#shrink_control * ) ; long ( * free_cached_objects ) ( s#super_block * , s#shrink_control * ) ; t#dev_t ( * get_inode_dev ) ( const s#inode * ) ; } 
s#dquot_operations struct dquot_operations { int ( * write_dquot ) ( s#dquot * ) ; s#dquot * ( * alloc_dquot ) ( s#super_block * , int ) ; void ( * destroy_dquot ) ( s#dquot * ) ; int ( * acquire_dquot ) ( s#dquot * ) ; int ( * release_dquot ) ( s#dquot * ) ; int ( * mark_dirty ) ( s#dquot * ) ; int ( * write_info ) ( s#super_block * , int ) ; t#qsize_t * ( * get_reserved_space ) ( s#inode * ) ; int ( * get_projid ) ( s#inode * , t#kprojid_t * ) ; int ( * get_next_id ) ( s#super_block * , s#kqid * ) ; } 
s#qc_info struct qc_info { int i_fieldmask ; unsigned int i_flags ; unsigned int i_spc_timelimit ; unsigned int i_ino_timelimit ; unsigned int i_rt_spc_timelimit ; unsigned int i_spc_warnlimit ; unsigned int i_ino_warnlimit ; unsigned int i_rt_spc_warnlimit ; } 
s#qc_dqblk struct qc_dqblk { int d_fieldmask ; t#u64 d_spc_hardlimit ; t#u64 d_spc_softlimit ; t#u64 d_ino_hardlimit ; t#u64 d_ino_softlimit ; t#u64 d_space ; t#u64 d_ino_count ; t#s64 d_ino_timer ; t#s64 d_spc_timer ; int d_ino_warns ; int d_spc_warns ; t#u64 d_rt_spc_hardlimit ; t#u64 d_rt_spc_softlimit ; t#u64 d_rt_space ; t#s64 d_rt_spc_timer ; int d_rt_spc_warns ; } 
t#blkcnt_t typedef unsigned long blkcnt_t 
s#qc_type_state struct qc_type_state { unsigned int flags ; unsigned int spc_timelimit ; unsigned int ino_timelimit ; unsigned int rt_spc_timelimit ; unsigned int spc_warnlimit ; unsigned int ino_warnlimit ; unsigned int rt_spc_warnlimit ; unsigned long long ino ; t#blkcnt_t blocks ; t#blkcnt_t nextents ; } 
s#qc_state struct qc_state { unsigned int s_incoredqs ; s#qc_type_state s_state [ 3 ] ; } 
s#quotactl_ops struct quotactl_ops { int ( * quota_on ) ( s#super_block * , int , int , const s#path * ) ; int ( * quota_off ) ( s#super_block * , int ) ; int ( * quota_enable ) ( s#super_block * , unsigned int ) ; int ( * quota_disable ) ( s#super_block * , unsigned int ) ; int ( * quota_sync ) ( s#super_block * , int ) ; int ( * set_info ) ( s#super_block * , int , s#qc_info * ) ; int ( * get_dqblk ) ( s#super_block * , s#kqid , s#qc_dqblk * ) ; int ( * get_nextdqblk ) ( s#super_block * , s#kqid * , s#qc_dqblk * ) ; int ( * set_dqblk ) ( s#super_block * , s#kqid , s#qc_dqblk * ) ; int ( * get_state ) ( s#super_block * , s#qc_state * ) ; int ( * rm_xquota ) ( s#super_block * , unsigned int ) ; } 
s##export_operations
s##xattr_handler
s##fscrypt_operations
s#hlist_bl_head struct hlist_bl_head { s#hlist_bl_node * first ; } 
s##mtd_info
s#quota_format_ops struct quota_format_ops { int ( * check_quota_file ) ( s#super_block * , int ) ; int ( * read_file_info ) ( s#super_block * , int ) ; int ( * write_file_info ) ( s#super_block * , int ) ; int ( * free_file_info ) ( s#super_block * , int ) ; int ( * read_dqblk ) ( s#dquot * ) ; int ( * commit_dqblk ) ( s#dquot * ) ; int ( * release_dqblk ) ( s#dquot * ) ; int ( * get_next_id ) ( s#super_block * , s#kqid * ) ; } 
s#quota_format_type struct quota_format_type { int qf_fmt_id ; const s#quota_format_ops * qf_ops ; s#module * qf_owner ; s#quota_format_type * qf_next ; } 
s#mem_dqinfo struct mem_dqinfo { s#quota_format_type * dqi_format ; int dqi_fmt_id ; s#list_head dqi_dirty_list ; unsigned long dqi_flags ; unsigned int dqi_bgrace ; unsigned int dqi_igrace ; t#qsize_t dqi_max_spc_limit ; t#qsize_t dqi_max_ino_limit ; void * dqi_priv ; } 
s#quota_info struct quota_info { unsigned int flags ; s#mutex dqio_mutex ; s#inode * files [ 3 ] ; s#mem_dqinfo info [ 3 ] ; const s#quota_format_ops * ops [ 3 ] ; } 
e#rcu_sync_type enum rcu_sync_type { RCU_SYNC , RCU_SCHED_SYNC , RCU_BH_SYNC } 
s#rcu_sync struct rcu_sync { int gp_state ; int gp_count ; t#wait_queue_head_t gp_wait ; int cb_state ; s#callback_head cb_head ; e#rcu_sync_type gp_type ; } 
s#rcuwait struct rcuwait { s#task_struct * task ; } 
s#percpu_rw_semaphore struct percpu_rw_semaphore { s#rcu_sync rss ; unsigned int * read_count ; s#rw_semaphore rw_sem ; s#rcuwait writer ; int readers_block ; } 
s#sb_writers struct sb_writers { int frozen ; t#wait_queue_head_t wait_unfrozen ; s#percpu_rw_semaphore rw_sem [ ( E#SB_FREEZE_COMPLETE - 1 ) ] ; } 
t#uuid_t typedef struct { t#__u8 b [ 16 ] ; } uuid_t 
t#fmode_t typedef unsigned fmode_t 
s#dentry_operations struct dentry_operations { int ( * d_revalidate ) ( s#dentry * , unsigned int ) ; int ( * d_weak_revalidate ) ( s#dentry * , unsigned int ) ; int ( * d_hash ) ( const s#dentry * , s#qstr * ) ; int ( * d_compare ) ( const s#dentry * , unsigned int , const char * , const s#qstr * ) ; int ( * d_delete ) ( const s#dentry * ) ; int ( * d_init ) ( s#dentry * ) ; void ( * d_release ) ( s#dentry * ) ; void ( * d_prune ) ( s#dentry * ) ; void ( * d_iput ) ( s#dentry * , s#inode * ) ; char * ( * d_dname ) ( s#dentry * , char * , int ) ; s#vfsmount * ( * d_automount ) ( s#path * ) ; int ( * d_manage ) ( const s#path * , t#bool ) ; s#dentry * ( * d_real ) ( s#dentry * , const s#inode * , unsigned int ) ; } 
s#shrinker struct shrinker { unsigned long ( * count_objects ) ( s#shrinker * , s#shrink_control * ) ; unsigned long ( * scan_objects ) ( s#shrinker * , s#shrink_control * ) ; int seeks ; long batch ; unsigned long flags ; s#list_head list ; t#atomic_long_t * nr_deferred ; } 
s#list_lru_one struct list_lru_one { s#list_head list ; long nr_items ; } 
s#list_lru_memcg struct list_lru_memcg { s#list_lru_one * lru [ 0 ] ; } 
s#list_lru_node struct list_lru_node { t#spinlock_t lock ; s#list_lru_one lru ; s#list_lru_memcg * memcg_lrus ; long nr_items ; } 
s#list_lru struct list_lru { s#list_lru_node * node ; s#list_head list ; } 
s#super_block struct super_block { s#list_head s_list ; t#dev_t s_dev ; unsigned char s_blocksize_bits ; unsigned long s_blocksize ; t#loff_t s_maxbytes ; s#file_system_type * s_type ; const s#super_operations * s_op ; const s#dquot_operations * dq_op ; const s#quotactl_ops * s_qcop ; const s#export_operations * s_export_op ; unsigned long s_flags ; unsigned long s_iflags ; unsigned long s_magic ; s#dentry * s_root ; s#rw_semaphore s_umount ; int s_count ; t#atomic_t s_active ; void * s_security ; const s#xattr_handler * * s_xattr ; const s#fscrypt_operations * s_cop ; s#hlist_bl_head s_anon ; s#list_head s_sbdevs ; s#list_head s_mounts ; s#block_device * s_bdev ; s#backing_dev_info * s_bdi ; s#mtd_info * s_mtd ; s#hlist_node s_instances ; unsigned int s_quota_types ; s#quota_info s_dquot ; s#sb_writers s_writers ; char s_id [ 32 ] ; t#uuid_t s_uuid ; void * s_fs_info ; unsigned int s_max_links ; t#fmode_t s_mode ; t#u32 s_time_gran ; s#mutex s_vfs_rename_mutex ; char * s_subtype ; char * s_options ; const s#dentry_operations * s_d_op ; int cleancache_poolid ; s#shrinker s_shrink ; t#atomic_long_t s_remove_count ; t#atomic_long_t s_fsnotify_inode_refs ; int s_readonly_remount ; s#workqueue_struct * s_dio_done_wq ; s#hlist_head s_pins ; s#user_namespace * s_user_ns ; s#list_lru s_dentry_lru __attribute__ ( ( __aligned__ ( 256 ) ) ) ; s#list_lru s_inode_lru __attribute__ ( ( __aligned__ ( 256 ) ) ) ; s#callback_head rcu ; s#work_struct destroy_work ; s#mutex s_sync_lock ; int s_stack_depth ; t#spinlock_t s_inode_list_lock __attribute__ ( ( __aligned__ ( 256 ) ) ) ; s#list_head s_inodes ; t#spinlock_t s_inode_wblist_lock ; s#list_head s_inodes_wb ; } 
t#filldir_t typedef int ( * filldir_t ) ( s#dir_context * , const char * , int , t#loff_t , t#u64 , unsigned ) 
s#dir_context struct dir_context { const t#filldir_t actor ; t#loff_t pos ; } 
s##poll_table_struct
t#fl_owner_t typedef void * fl_owner_t 
s#file_lock_operations struct file_lock_operations { void ( * fl_copy_lock ) ( s#file_lock * , s#file_lock * ) ; void ( * fl_release_private ) ( s#file_lock * ) ; } 
s#lock_manager_operations struct lock_manager_operations { int ( * lm_compare_owner ) ( s#file_lock * , s#file_lock * ) ; unsigned long ( * lm_owner_key ) ( s#file_lock * ) ; t#fl_owner_t ( * lm_get_owner ) ( t#fl_owner_t ) ; void ( * lm_put_owner ) ( t#fl_owner_t ) ; void ( * lm_notify ) ( s#file_lock * ) ; int ( * lm_grant ) ( s#file_lock * , int ) ; t#bool ( * lm_break ) ( s#file_lock * ) ; int ( * lm_change ) ( s#file_lock * , int , s#list_head * ) ; void ( * lm_setup ) ( s#file_lock * , void * * ) ; } 
s##nlm_lockowner
s#nfs_lock_info struct nfs_lock_info { t#u32 state ; s#nlm_lockowner * owner ; s#list_head list ; } 
s##nfs4_lock_state
s#nfs4_lock_info struct nfs4_lock_info { s#nfs4_lock_state * owner ; } 
s#file_lock struct file_lock { s#file_lock * fl_next ; s#list_head fl_list ; s#hlist_node fl_link ; s#list_head fl_block ; t#fl_owner_t fl_owner ; unsigned int fl_flags ; unsigned char fl_type ; unsigned int fl_pid ; int fl_link_cpu ; s#pid * fl_nspid ; t#wait_queue_head_t fl_wait ; s#file * fl_file ; t#loff_t fl_start ; t#loff_t fl_end ; s#fasync_struct * fl_fasync ; unsigned long fl_break_time ; unsigned long fl_downgrade_time ; const s#file_lock_operations * fl_ops ; const s#lock_manager_operations * fl_lmops ; union { s#nfs_lock_info nfs_fl ; s#nfs4_lock_info nfs4_fl ; struct { s#list_head link ; int state ; } afs ; } fl_u ; } 
s#file_operations struct file_operations { s#module * owner ; t#loff_t ( * llseek ) ( s#file * , t#loff_t , int ) ; t#ssize_t ( * read ) ( s#file * , char * , t#size_t , t#loff_t * ) ; t#ssize_t ( * write ) ( s#file * , const char * , t#size_t , t#loff_t * ) ; t#ssize_t ( * read_iter ) ( s#kiocb * , s#iov_iter * ) ; t#ssize_t ( * write_iter ) ( s#kiocb * , s#iov_iter * ) ; int ( * iterate ) ( s#file * , s#dir_context * ) ; int ( * iterate_shared ) ( s#file * , s#dir_context * ) ; unsigned int ( * poll ) ( s#file * , s#poll_table_struct * ) ; long ( * unlocked_ioctl ) ( s#file * , unsigned int , unsigned long ) ; long ( * compat_ioctl ) ( s#file * , unsigned int , unsigned long ) ; int ( * mmap ) ( s#file * , s#vm_area_struct * ) ; unsigned long mmap_supported_flags ; int ( * open ) ( s#inode * , s#file * ) ; int ( * flush ) ( s#file * , t#fl_owner_t ) ; int ( * release ) ( s#inode * , s#file * ) ; int ( * fsync ) ( s#file * , t#loff_t , t#loff_t , int ) ; int ( * fasync ) ( int , s#file * , int ) ; int ( * lock ) ( s#file * , int , s#file_lock * ) ; t#ssize_t ( * sendpage ) ( s#file * , s#page * , int , t#size_t , t#loff_t * , int ) ; unsigned long ( * get_unmapped_area ) ( s#file * , unsigned long , unsigned long , unsigned long , unsigned long ) ; int ( * check_flags ) ( int ) ; int ( * flock ) ( s#file * , int , s#file_lock * ) ; t#ssize_t ( * splice_write ) ( s#pipe_inode_info * , s#file * , t#loff_t * , t#size_t , unsigned int ) ; t#ssize_t ( * splice_read ) ( s#file * , t#loff_t * , s#pipe_inode_info * , t#size_t , unsigned int ) ; int ( * setlease ) ( s#file * , long , s#file_lock * * , void * * ) ; long ( * fallocate ) ( s#file * , int , t#loff_t , t#loff_t ) ; void ( * show_fdinfo ) ( s#seq_file * , s#file * ) ; t#ssize_t ( * copy_file_range ) ( s#file * , t#loff_t , s#file * , t#loff_t , t#size_t , unsigned int ) ; int ( * clone_file_range ) ( s#file * , t#loff_t , s#file * , t#loff_t , t#u64 ) ; t#ssize_t ( * dedupe_file_range ) ( s#file * , t#u64 , t#u64 , s#file * , t#u64 ) ; } 
s#file_lock_context struct file_lock_context { t#spinlock_t flc_lock ; s#list_head flc_flock ; s#list_head flc_posix ; s#list_head flc_lease ; } 
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s#inode struct inode { t#umode_t i_mode ; unsigned short i_opflags ; t#kuid_t i_uid ; t#kgid_t i_gid ; unsigned int i_flags ; s#posix_acl * i_acl ; s#posix_acl * i_default_acl ; const s#inode_operations * i_op ; s#super_block * i_sb ; s#address_space * i_mapping ; void * i_security ; unsigned long i_ino ; union { const unsigned int i_nlink ; unsigned int __i_nlink ; } ; t#dev_t i_rdev ; t#loff_t i_size ; s#timespec i_atime ; s#timespec i_mtime ; s#timespec i_ctime ; t#spinlock_t i_lock ; unsigned short i_bytes ; unsigned int i_blkbits ; e#rw_hint i_write_hint ; t#blkcnt_t i_blocks ; unsigned long i_state ; s#rw_semaphore i_rwsem ; unsigned long dirtied_when ; unsigned long dirtied_time_when ; s#hlist_node i_hash ; s#list_head i_io_list ; s#bdi_writeback * i_wb ; int i_wb_frn_winner ; t#u16 i_wb_frn_avg_time ; t#u16 i_wb_frn_history ; s#list_head i_lru ; s#list_head i_sb_list ; s#list_head i_wb_list ; union { s#hlist_head i_dentry ; s#callback_head i_rcu ; } ; t#atomic64_t i_version ; t#atomic_t i_count ; t#atomic_t i_dio_count ; t#atomic_t i_writecount ; t#atomic_t i_readcount ; const s#file_operations * i_fop ; s#file_lock_context * i_flctx ; s#address_space i_data ; s#list_head i_devices ; union { s#pipe_inode_info * i_pipe ; s#block_device * i_bdev ; s#cdev * i_cdev ; char * i_link ; unsigned i_dir_seq ; } ; t#__u32 i_generation ; t#__u32 i_fsnotify_mask ; s#fsnotify_mark_connector * i_fsnotify_marks ; s#fscrypt_info * i_crypt_info ; void * i_private ; } 
s#lockref struct lockref { union { t#__u64 __attribute__ ( ( aligned ( 8 ) ) ) lock_count ; struct { t#spinlock_t lock ; int count ; } ; } ; } 
s#dentry struct dentry { unsigned int d_flags ; t#seqcount_t d_seq ; s#hlist_bl_node d_hash ; s#dentry * d_parent ; s#qstr d_name ; s#inode * d_inode ; unsigned char d_iname [ 32 ] ; s#lockref d_lockref ; const s#dentry_operations * d_op ; s#super_block * d_sb ; unsigned long d_time ; void * d_fsdata ; union { s#list_head d_lru ; t#wait_queue_head_t * d_wait ; } ; s#list_head d_child ; s#list_head d_subdirs ; union { s#hlist_node d_alias ; s#hlist_bl_node d_in_lookup_hash ; s#callback_head d_rcu ; } d_u ; } 
s#path struct path { s#vfsmount * mnt ; s#dentry * dentry ; } 
t#arch_rwlock_t typedef struct { int lock ; int owner ; } arch_rwlock_t 
t#rwlock_t typedef struct { t#arch_rwlock_t raw_lock ; } rwlock_t 
e#pid_type enum pid_type { PIDTYPE_PID , PIDTYPE_PGID , PIDTYPE_SID , PIDTYPE_MAX , __PIDTYPE_TGID } 
s#fown_struct struct fown_struct { t#rwlock_t lock ; s#pid * pid ; e#pid_type pid_type ; t#kuid_t uid , euid ; int signum ; } 
s#file_ra_state struct file_ra_state { unsigned long start ; unsigned int size ; unsigned int async_size ; unsigned int ra_pages ; unsigned int mmap_miss ; t#loff_t prev_pos ; } 
s#file struct file { union { s#llist_node fu_llist ; s#callback_head fu_rcuhead ; } f_u ; s#path f_path ; s#inode * f_inode ; const s#file_operations * f_op ; t#spinlock_t f_lock ; e#rw_hint f_write_hint ; t#atomic_long_t f_count ; unsigned int f_flags ; t#fmode_t f_mode ; s#mutex f_pos_lock ; t#loff_t f_pos ; s#fown_struct f_owner ; const s#cred * f_cred ; s#file_ra_state f_ra ; t#u64 f_version ; void * f_security ; void * private_data ; s#list_head f_ep_links ; s#list_head f_tfile_llink ; s#address_space * f_mapping ; t#errseq_t f_wb_err ; } 
s#seq_file struct seq_file { char * buf ; t#size_t size ; t#size_t from ; t#size_t count ; t#size_t pad_until ; t#loff_t index ; t#loff_t read_pos ; t#u64 version ; s#mutex lock ; const s#seq_operations * op ; int poll_event ; const s#file * file ; void * private ; } 
s#kernfs_syscall_ops struct kernfs_syscall_ops { int ( * remount_fs ) ( s#kernfs_root * , int * , char * ) ; int ( * show_options ) ( s#seq_file * , s#kernfs_root * ) ; int ( * mkdir ) ( s#kernfs_node * , const char * , t#umode_t ) ; int ( * rmdir ) ( s#kernfs_node * ) ; int ( * rename ) ( s#kernfs_node * , s#kernfs_node * , const char * ) ; int ( * show_path ) ( s#seq_file * , s#kernfs_node * , s#kernfs_root * ) ; } 
s#kernfs_root struct kernfs_root { s#kernfs_node * kn ; unsigned int flags ; s#idr ino_idr ; t#u32 next_generation ; s#kernfs_syscall_ops * syscall_ops ; s#list_head supers ; t#wait_queue_head_t deactivate_waitq ; } 
s#kernfs_elem_dir struct kernfs_elem_dir { unsigned long subdirs ; s#rb_root children ; s#kernfs_root * root ; } 
s#kernfs_elem_symlink struct kernfs_elem_symlink { s#kernfs_node * target_kn ; } 
s##kernfs_open_node
s#kernfs_elem_attr struct kernfs_elem_attr { const s#kernfs_ops * ops ; s#kernfs_open_node * open ; t#loff_t size ; s#kernfs_node * notify_next ; } 
u#kernfs_node_id union kernfs_node_id { struct { t#u32 ino ; t#u32 generation ; } ; t#u64 id ; } 
s##kernfs_iattrs
s#kernfs_node struct kernfs_node { t#atomic_t count ; t#atomic_t active ; s#kernfs_node * parent ; const char * name ; s#rb_node rb ; const void * ns ; unsigned int hash ; union { s#kernfs_elem_dir dir ; s#kernfs_elem_symlink symlink ; s#kernfs_elem_attr attr ; } ; void * priv ; u#kernfs_node_id id ; unsigned short flags ; t#umode_t mode ; s#kernfs_iattrs * iattr ; } 
s#kobject struct kobject { const char * name ; s#list_head entry ; s#kobject * parent ; s#kset * kset ; s#kobj_type * ktype ; s#kernfs_node * sd ; s#kref kref ; unsigned int state_initialized : 1 ; unsigned int state_in_sysfs : 1 ; unsigned int state_add_uevent_sent : 1 ; unsigned int state_remove_uevent_sent : 1 ; unsigned int uevent_suppress : 1 ; } 
s##module_param_attrs
s#module_kobject struct module_kobject { s#kobject kobj ; s#module * mod ; s#kobject * drivers_dir ; s#module_param_attrs * mp ; s#completion * kobj_completion ; } 
s#module_attribute struct module_attribute { s#attribute attr ; t#ssize_t ( * show ) ( s#module_attribute * , s#module_kobject * , char * ) ; t#ssize_t ( * store ) ( s#module_attribute * , s#module_kobject * , const char * , t#size_t ) ; void ( * setup ) ( s#module * , const char * ) ; int ( * test ) ( s#module * ) ; void ( * free ) ( s#module * ) ; } 
s#kernel_symbol struct kernel_symbol { unsigned long value ; const char * name ; } 
s#kernel_param_ops struct kernel_param_ops { unsigned int flags ; int ( * set ) ( const char * , const s#kernel_param * ) ; int ( * get ) ( char * , const s#kernel_param * ) ; void ( * free ) ( void * ) ; } 
s#kparam_string struct kparam_string { unsigned int maxlen ; char * string ; } 
s#kparam_array struct kparam_array { unsigned int max ; unsigned int elemsize ; unsigned int * num ; const s#kernel_param_ops * ops ; void * elem ; } 
s#kernel_param struct kernel_param { const char * name ; s#module * mod ; const s#kernel_param_ops * ops ; const t#u16 perm ; t#s8 level ; t#u8 flags ; union { void * arg ; const s#kparam_string * str ; const s#kparam_array * arr ; } ; } 
s#exception_table_entry struct exception_table_entry { int insn , fixup ; } 
s#latch_tree_node struct latch_tree_node { s#rb_node node [ 2 ] ; } 
s#mod_tree_node struct mod_tree_node { s#module * mod ; s#latch_tree_node node ; } 
s#module_layout struct module_layout { void * base ; unsigned int size ; unsigned int text_size ; unsigned int ro_size ; unsigned int ro_after_init_size ; s#mod_tree_node mtn ; } 
s#mod_arch_syminfo struct mod_arch_syminfo { unsigned long got_offset ; unsigned long plt_offset ; int got_initialized ; int plt_initialized ; } 
s#mod_arch_specific struct mod_arch_specific { unsigned long got_offset ; unsigned long plt_offset ; unsigned long got_size ; unsigned long plt_size ; int nsyms ; s#mod_arch_syminfo * syminfo ; } 
s#bug_entry struct bug_entry { signed int bug_addr_disp ; signed int file_disp ; unsigned short line ; unsigned short flags ; } 
t#Elf64_Word typedef t#__u32 Elf64_Word 
t#__u16 typedef unsigned short __u16 
t#Elf64_Half typedef t#__u16 Elf64_Half 
t#Elf64_Addr typedef t#__u64 Elf64_Addr 
t#Elf64_Xword typedef t#__u64 Elf64_Xword 
s#elf64_sym struct elf64_sym { t#Elf64_Word st_name ; unsigned char st_info ; unsigned char st_other ; t#Elf64_Half st_shndx ; t#Elf64_Addr st_value ; t#Elf64_Xword st_size ; } 
t#Elf64_Sym typedef s#elf64_sym Elf64_Sym 
s#mod_kallsyms struct mod_kallsyms { t#Elf64_Sym * symtab ; unsigned int num_symtab ; char * strtab ; } 
s##module_sect_attrs
s##module_notes_attrs
t#jump_label_t typedef unsigned long jump_label_t 
s#jump_entry struct jump_entry { t#jump_label_t code ; t#jump_label_t target ; t#jump_label_t key ; } 
s##static_key_mod
s#static_key struct static_key { t#atomic_t enabled ; union { unsigned long type ; s#jump_entry * entries ; s#static_key_mod * next ; } ; } 
s#tracepoint_func struct tracepoint_func { void * func ; void * data ; int prio ; } 
s#tracepoint struct tracepoint { const char * name ; s#static_key key ; int ( * regfunc ) ( void ) ; void ( * unregfunc ) ( void ) ; s#tracepoint_func * funcs ; } 
s##trace_event_call
s##trace_enum_map
t#Elf64_Off typedef t#__u64 Elf64_Off 
s#elf64_hdr struct elf64_hdr { unsigned char e_ident [ 16 ] ; t#Elf64_Half e_type ; t#Elf64_Half e_machine ; t#Elf64_Word e_version ; t#Elf64_Addr e_entry ; t#Elf64_Off e_phoff ; t#Elf64_Off e_shoff ; t#Elf64_Word e_flags ; t#Elf64_Half e_ehsize ; t#Elf64_Half e_phentsize ; t#Elf64_Half e_phnum ; t#Elf64_Half e_shentsize ; t#Elf64_Half e_shnum ; t#Elf64_Half e_shstrndx ; } 
t#Elf64_Ehdr typedef s#elf64_hdr Elf64_Ehdr 
s#elf64_shdr struct elf64_shdr { t#Elf64_Word sh_name ; t#Elf64_Word sh_type ; t#Elf64_Xword sh_flags ; t#Elf64_Addr sh_addr ; t#Elf64_Off sh_offset ; t#Elf64_Xword sh_size ; t#Elf64_Word sh_link ; t#Elf64_Word sh_info ; t#Elf64_Xword sh_addralign ; t#Elf64_Xword sh_entsize ; } 
t#Elf64_Shdr typedef s#elf64_shdr Elf64_Shdr 
s#klp_modinfo struct klp_modinfo { t#Elf64_Ehdr hdr ; t#Elf64_Shdr * sechdrs ; char * secstrings ; unsigned int symndx ; } 
s#module struct module { e#module_state state ; s#list_head list ; char name [ ( 64 - sizeof ( unsigned long ) ) ] ; s#module_kobject mkobj ; s#module_attribute * modinfo_attrs ; const char * version ; const char * srcversion ; s#kobject * holders_dir ; const s#kernel_symbol * syms ; const t#s32 * crcs ; unsigned int num_syms ; s#mutex param_lock ; s#kernel_param * kp ; unsigned int num_kp ; unsigned int num_gpl_syms ; const s#kernel_symbol * gpl_syms ; const t#s32 * gpl_crcs ; const s#kernel_symbol * unused_syms ; const t#s32 * unused_crcs ; unsigned int num_unused_syms ; unsigned int num_unused_gpl_syms ; const s#kernel_symbol * unused_gpl_syms ; const t#s32 * unused_gpl_crcs ; t#bool sig_ok ; t#bool async_probe_requested ; const s#kernel_symbol * gpl_future_syms ; const t#s32 * gpl_future_crcs ; unsigned int num_gpl_future_syms ; unsigned int num_exentries ; s#exception_table_entry * extable ; int ( * init ) ( void ) ; s#module_layout core_layout __attribute__ ( ( __aligned__ ( 256 ) ) ) ; s#module_layout init_layout ; s#mod_arch_specific arch ; unsigned long taints ; unsigned num_bugs ; s#list_head bug_list ; s#bug_entry * bug_table ; s#mod_kallsyms * kallsyms ; s#mod_kallsyms core_kallsyms ; s#module_sect_attrs * sect_attrs ; s#module_notes_attrs * notes_attrs ; char * args ; void * percpu ; unsigned int percpu_size ; unsigned int num_tracepoints ; s#tracepoint * const * tracepoints_ptrs ; s#jump_entry * jump_entries ; unsigned int num_jump_entries ; unsigned int num_trace_bprintk_fmt ; const char * * trace_bprintk_fmt_start ; s#trace_event_call * * trace_events ; unsigned int num_trace_events ; s#trace_enum_map * * trace_enums ; unsigned int num_trace_enums ; unsigned int num_ftrace_callsites ; unsigned long * ftrace_callsites ; t#bool klp ; t#bool klp_alive ; s#klp_modinfo * klp_info ; s#list_head source_list ; s#list_head target_list ; void ( * exit ) ( void ) ; t#atomic_t refcnt ; void * suse_kabi_padding ; } 
s#appldata_ops struct appldata_ops { s#list_head list ; s#ctl_table_header * sysctl_header ; s#ctl_table * ctl_table ; int active ; char name [ 16 ] ; unsigned char record_nr ; void ( * callback ) ( void * ) ; void * data ; unsigned int size ; s#module * owner ; char mod_lvl [ 2 ] ; } 
appldata_register_ops extern int appldata_register_ops ( s#appldata_ops * ) 
appldata_unregister_ops extern void appldata_unregister_ops ( s#appldata_ops * ) 
appldata_diag extern int appldata_diag ( char , t#u16 , unsigned long , t#u16 , char * ) 
t#__kernel_ulong_t typedef unsigned long __kernel_ulong_t 
s#sysinfo struct sysinfo { t#__kernel_long_t uptime ; t#__kernel_ulong_t loads [ 3 ] ; t#__kernel_ulong_t totalram ; t#__kernel_ulong_t freeram ; t#__kernel_ulong_t sharedram ; t#__kernel_ulong_t bufferram ; t#__kernel_ulong_t totalswap ; t#__kernel_ulong_t freeswap ; t#__u16 procs ; t#__u16 pad ; t#__kernel_ulong_t totalhigh ; t#__kernel_ulong_t freehigh ; t#__u32 mem_unit ; char _f [ 20 - 2 * sizeof ( __kernel_ulong_t ) - sizeof ( __u32 ) ] ; } 
si_swapinfo extern void si_swapinfo ( s#sysinfo * ) 
nr_threads extern int nr_threads 
nr_running extern unsigned long nr_running ( void ) 
nr_iowait extern unsigned long nr_iowait ( void ) 

/* arch/s390/crypto/arch_random.o */
s390_arch_random_counter extern t#atomic64_t s390_arch_random_counter 
s390_arch_random_generate t#bool s390_arch_random_generate ( t#u8 * , unsigned int ) 

/* arch/s390/crypto/sha_common.o */
s#crypto_ablkcipher struct crypto_ablkcipher { s#crypto_tfm base ; } 
t#crypto_completion_t typedef void ( * crypto_completion_t ) ( s#crypto_async_request * , int ) 
s#crypto_async_request struct crypto_async_request { s#list_head list ; t#crypto_completion_t complete ; void * data ; s#crypto_tfm * tfm ; t#u32 flags ; } 
s#ablkcipher_request struct ablkcipher_request { s#crypto_async_request base ; unsigned int nbytes ; void * info ; s#scatterlist * src ; s#scatterlist * dst ; void * __ctx [ ] __attribute__ ( ( __aligned__ ( __alignof__ ( unsigned long long ) ) ) ) ; } 
s#ablkcipher_tfm struct ablkcipher_tfm { int ( * setkey ) ( s#crypto_ablkcipher * , const t#u8 * , unsigned int ) ; int ( * encrypt ) ( s#ablkcipher_request * ) ; int ( * decrypt ) ( s#ablkcipher_request * ) ; s#crypto_ablkcipher * base ; unsigned int ivsize ; unsigned int reqsize ; } 
s#crypto_blkcipher struct crypto_blkcipher { s#crypto_tfm base ; } 
s#blkcipher_desc struct blkcipher_desc { s#crypto_blkcipher * tfm ; void * info ; t#u32 flags ; } 
s#blkcipher_tfm struct blkcipher_tfm { void * iv ; int ( * setkey ) ( s#crypto_tfm * , const t#u8 * , unsigned int ) ; int ( * encrypt ) ( s#blkcipher_desc * , s#scatterlist * , s#scatterlist * , unsigned int ) ; int ( * decrypt ) ( s#blkcipher_desc * , s#scatterlist * , s#scatterlist * , unsigned int ) ; } 
s#cipher_tfm struct cipher_tfm { int ( * cit_setkey ) ( s#crypto_tfm * , const t#u8 * , unsigned int ) ; void ( * cit_encrypt_one ) ( s#crypto_tfm * , t#u8 * , const t#u8 * ) ; void ( * cit_decrypt_one ) ( s#crypto_tfm * , t#u8 * , const t#u8 * ) ; } 
s#compress_tfm struct compress_tfm { int ( * cot_compress ) ( s#crypto_tfm * , const t#u8 * , unsigned int , t#u8 * , unsigned int * ) ; int ( * cot_decompress ) ( s#crypto_tfm * , const t#u8 * , unsigned int , t#u8 * , unsigned int * ) ; } 
s##seq_file
s##net_device
s##sock
s##sec_path
t#__be32 typedef t#__u32 __be32 
t#__be16 typedef t#__u16 __be16 
s#in6_addr struct in6_addr { union { t#__u8 u6_addr8 [ 16 ] ; t#__be16 u6_addr16 [ 8 ] ; t#__be32 u6_addr32 [ 4 ] ; } in6_u ; } 
s#nf_bridge_info struct nf_bridge_info { t#atomic_t use ; enum { BRNF_PROTO_UNCHANGED , BRNF_PROTO_8021Q , BRNF_PROTO_PPPOE } orig_proto : 8 ; t#u8 pkt_otherhost : 1 ; t#u8 in_prerouting : 1 ; t#u8 bridged_dnat : 1 ; t#__u16 frag_max_size ; s#net_device * physindev ; s#net_device * physoutdev ; union { t#__be32 ipv4_daddr ; s#in6_addr ipv6_daddr ; char neigh_header [ 8 ] ; } ; } 
t#__wsum typedef t#__u32 __wsum 
t#sk_buff_data_t typedef unsigned int sk_buff_data_t 
s#sk_buff struct sk_buff { union { struct { s#sk_buff * next ; s#sk_buff * prev ; union { s#net_device * dev ; unsigned long dev_scratch ; } ; } ; s#rb_node rbnode ; s#list_head list ; } ; union { s#sock * sk ; int ip_defrag_offset ; } ; union { t#ktime_t tstamp ; t#u64 skb_mstamp ; } ; char cb [ 48 ] __attribute__ ( ( aligned ( 8 ) ) ) ; unsigned long _skb_refdst ; void ( * destructor ) ( s#sk_buff * ) ; s#sec_path * sp ; unsigned long _nfct ; s#nf_bridge_info * nf_bridge ; unsigned int len , data_len ; t#__u16 mac_len , hdr_len ; ; t#__u16 queue_mapping ; t#__u8 __cloned_offset [ 0 ] ; t#__u8 cloned : 1 , nohdr : 1 , fclone : 2 , peeked : 1 , head_frag : 1 , xmit_more : 1 , __unused : 1 ; ; t#__u32 headers_start [ 0 ] ; t#__u8 __pkt_type_offset [ 0 ] ; t#__u8 pkt_type : 3 ; t#__u8 pfmemalloc : 1 ; t#__u8 ignore_df : 1 ; t#__u8 nf_trace : 1 ; t#__u8 ip_summed : 2 ; t#__u8 ooo_okay : 1 ; t#__u8 l4_hash : 1 ; t#__u8 sw_hash : 1 ; t#__u8 wifi_acked_valid : 1 ; t#__u8 wifi_acked : 1 ; t#__u8 no_fcs : 1 ; t#__u8 encapsulation : 1 ; t#__u8 encap_hdr_csum : 1 ; t#__u8 csum_valid : 1 ; t#__u8 csum_complete_sw : 1 ; t#__u8 csum_level : 2 ; t#__u8 csum_not_inet : 1 ; t#__u8 dst_pending_confirm : 1 ; t#__u8 ndisc_nodetype : 2 ; t#__u8 ipvs_property : 1 ; t#__u8 inner_protocol_type : 1 ; t#__u8 remcsum_offload : 1 ; t#__u8 offload_fwd_mark : 1 ; t#__u8 offload_mr_fwd_mark : 1 ; t#__u8 tc_skip_classify : 1 ; t#__u8 tc_at_ingress : 1 ; t#__u8 tc_redirected : 1 ; t#__u8 tc_from_ingress : 1 ; t#__u8 decrypted : 1 ; t#__u16 tc_index ; union { t#__wsum csum ; struct { t#__u16 csum_start ; t#__u16 csum_offset ; } ; } ; t#__u32 priority ; int skb_iif ; t#__u32 hash ; t#__be16 vlan_proto ; t#__u16 vlan_tci ; union { unsigned int napi_id ; unsigned int sender_cpu ; } ; t#__u32 secmark ; union { t#__u32 mark ; t#__u32 reserved_tailroom ; } ; union { t#__be16 inner_protocol ; t#__u8 inner_ipproto ; } ; t#__u16 inner_transport_header ; t#__u16 inner_network_header ; t#__u16 inner_mac_header ; t#__be16 protocol ; t#__u16 transport_header ; t#__u16 network_header ; t#__u16 mac_header ; t#__u32 headers_end [ 0 ] ; t#sk_buff_data_t tail ; t#sk_buff_data_t end ; unsigned char * head , * data ; unsigned int truesize ; t#refcount_t users ; } 
s##vfsmount
s##posix_acl
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##user_struct
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##rtattr
s#crypto_template struct crypto_template { s#list_head list ; s#hlist_head instances ; s#module * module ; s#crypto_instance * ( * alloc ) ( s#rtattr * * ) ; void ( * free ) ( s#crypto_instance * ) ; int ( * create ) ( s#crypto_template * , s#rtattr * * ) ; char name [ 128 ] ; } 
s#crypto_instance struct crypto_instance { s#crypto_alg alg ; s#crypto_template * tmpl ; s#hlist_node list ; void * __ctx [ ] __attribute__ ( ( __aligned__ ( __alignof__ ( unsigned long long ) ) ) ) ; } 
s#crypto_type struct crypto_type { unsigned int ( * ctxsize ) ( s#crypto_alg * , t#u32 , t#u32 ) ; unsigned int ( * extsize ) ( s#crypto_alg * ) ; int ( * init ) ( s#crypto_tfm * , t#u32 , t#u32 ) ; int ( * init_tfm ) ( s#crypto_tfm * ) ; void ( * show ) ( s#seq_file * , s#crypto_alg * ) ; int ( * report ) ( s#sk_buff * , s#crypto_alg * ) ; s#crypto_alg * ( * lookup ) ( const char * , t#u32 , t#u32 ) ; void ( * free ) ( s#crypto_instance * ) ; unsigned int type ; unsigned int maskclear ; unsigned int maskset ; unsigned int tfmsize ; } 
s##skcipher_givcrypt_request
s#ablkcipher_alg struct ablkcipher_alg { int ( * setkey ) ( s#crypto_ablkcipher * , const t#u8 * , unsigned int ) ; int ( * encrypt ) ( s#ablkcipher_request * ) ; int ( * decrypt ) ( s#ablkcipher_request * ) ; int ( * givencrypt ) ( s#skcipher_givcrypt_request * ) ; int ( * givdecrypt ) ( s#skcipher_givcrypt_request * ) ; const char * geniv ; unsigned int min_keysize ; unsigned int max_keysize ; unsigned int ivsize ; } 
s#blkcipher_alg struct blkcipher_alg { int ( * setkey ) ( s#crypto_tfm * , const t#u8 * , unsigned int ) ; int ( * encrypt ) ( s#blkcipher_desc * , s#scatterlist * , s#scatterlist * , unsigned int ) ; int ( * decrypt ) ( s#blkcipher_desc * , s#scatterlist * , s#scatterlist * , unsigned int ) ; const char * geniv ; unsigned int min_keysize ; unsigned int max_keysize ; unsigned int ivsize ; } 
s#cipher_alg struct cipher_alg { unsigned int cia_min_keysize ; unsigned int cia_max_keysize ; int ( * cia_setkey ) ( s#crypto_tfm * , const t#u8 * , unsigned int ) ; void ( * cia_encrypt ) ( s#crypto_tfm * , t#u8 * , const t#u8 * ) ; void ( * cia_decrypt ) ( s#crypto_tfm * , t#u8 * , const t#u8 * ) ; } 
s#compress_alg struct compress_alg { int ( * coa_compress ) ( s#crypto_tfm * , const t#u8 * , unsigned int , t#u8 * , unsigned int * ) ; int ( * coa_decompress ) ( s#crypto_tfm * , const t#u8 * , unsigned int , t#u8 * , unsigned int * ) ; } 
s#crypto_alg struct crypto_alg { s#list_head cra_list ; s#list_head cra_users ; t#u32 cra_flags ; unsigned int cra_blocksize ; unsigned int cra_ctxsize ; unsigned int cra_alignmask ; int cra_priority ; t#atomic_t cra_refcnt ; char cra_name [ 128 ] ; char cra_driver_name [ 128 ] ; const s#crypto_type * cra_type ; union { s#ablkcipher_alg ablkcipher ; s#blkcipher_alg blkcipher ; s#cipher_alg cipher ; s#compress_alg compress ; } cra_u ; int ( * cra_init ) ( s#crypto_tfm * ) ; void ( * cra_exit ) ( s#crypto_tfm * ) ; void ( * cra_destroy ) ( s#crypto_alg * ) ; s#module * cra_module ; } 
s#crypto_tfm struct crypto_tfm { t#u32 crt_flags ; union { s#ablkcipher_tfm ablkcipher ; s#blkcipher_tfm blkcipher ; s#cipher_tfm cipher ; s#compress_tfm compress ; } crt_u ; void ( * exit ) ( s#crypto_tfm * ) ; s#crypto_alg * __crt_alg ; void * __crt_ctx [ ] __attribute__ ( ( __aligned__ ( __alignof__ ( unsigned long long ) ) ) ) ; } 
s#crypto_shash struct crypto_shash { unsigned int descsize ; s#crypto_tfm base ; } 
s#shash_desc struct shash_desc { s#crypto_shash * tfm ; t#u32 flags ; void * __ctx [ ] __attribute__ ( ( __aligned__ ( __alignof__ ( unsigned long long ) ) ) ) ; } 
s390_sha_update int s390_sha_update ( s#shash_desc * , const t#u8 * , unsigned int ) 
s390_sha_final int s390_sha_final ( s#shash_desc * , t#u8 * ) 

/* arch/s390/kernel/cpcmd.o */
__cpcmd int __cpcmd ( const char * , char * , int , int * ) 
cpcmd int cpcmd ( const char * , char * , int , int * ) 

/* arch/s390/kernel/debug.o */
s#__debug_entry struct __debug_entry { union { struct { unsigned long long clock : 52 ; unsigned long long exception : 1 ; unsigned long long level : 3 ; unsigned long long cpuid : 8 ; } fields ; unsigned long long stck ; } id ; void * caller ; } 
t#debug_entry_t typedef s#__debug_entry debug_entry_t 
s##posix_acl
s##vfsmount
s##module
s##iov_iter
s##poll_table_struct
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##compat_timespec
s##pollfd
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##pipe_inode_info
s##writeback_control
s##swap_info_struct
s##dev_pagemap
s##kmem_cache
s##mem_cgroup
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##vm_operations_struct
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s#debug_info struct debug_info { s#debug_info * next ; s#debug_info * prev ; t#refcount_t ref_count ; t#spinlock_t lock ; int level ; int nr_areas ; int pages_per_area ; int buf_size ; int entry_size ; t#debug_entry_t * * * areas ; int active_area ; int * active_pages ; int * active_entries ; s#dentry * debugfs_root_entry ; s#dentry * debugfs_entries [ 10 ] ; s#debug_view * views [ 10 ] ; char name [ 64 ] ; t#umode_t mode ; } 
t#debug_info_t typedef s#debug_info debug_info_t 
t#debug_prolog_proc_t typedef int ( debug_prolog_proc_t ) ( t#debug_info_t * , s#debug_view * , char * ) 
t#debug_header_proc_t typedef int ( debug_header_proc_t ) ( t#debug_info_t * , s#debug_view * , int , t#debug_entry_t * , char * ) 
t#debug_format_proc_t typedef int ( debug_format_proc_t ) ( t#debug_info_t * , s#debug_view * , char * , const char * ) 
t#debug_input_proc_t typedef int ( debug_input_proc_t ) ( t#debug_info_t * , s#debug_view * , s#file * , const char * , t#size_t , t#loff_t * ) 
s#debug_view struct debug_view { char name [ 64 ] ; t#debug_prolog_proc_t * prolog_proc ; t#debug_header_proc_t * header_proc ; t#debug_format_proc_t * format_proc ; t#debug_input_proc_t * input_proc ; void * private_data ; } 
debug_raw_view extern s#debug_view debug_raw_view 
debug_hex_ascii_view extern s#debug_view debug_hex_ascii_view 
debug_sprintf_view extern s#debug_view debug_sprintf_view 
debug_register_mode t#debug_info_t * debug_register_mode ( const char * , int , int , int , t#umode_t , t#uid_t , t#gid_t ) 
debug_register t#debug_info_t * debug_register ( const char * , int , int , int ) 
debug_unregister void debug_unregister ( t#debug_info_t * ) 
debug_set_level void debug_set_level ( t#debug_info_t * , int ) 
debug_stop_all void debug_stop_all ( void ) 
debug_event_common t#debug_entry_t * debug_event_common ( t#debug_info_t * , int , const void * , int ) 
debug_exception_common t#debug_entry_t * debug_exception_common ( t#debug_info_t * , int , const void * , int ) 
__debug_sprintf_event extern t#debug_entry_t * __debug_sprintf_event ( t#debug_info_t * , int , char * , ... ) 
__debug_sprintf_exception extern t#debug_entry_t * __debug_sprintf_exception ( t#debug_info_t * , int , char * , ... ) 
debug_register_view int debug_register_view ( t#debug_info_t * , s#debug_view * ) 
debug_unregister_view int debug_unregister_view ( t#debug_info_t * , s#debug_view * ) 
debug_dflt_header_fn int debug_dflt_header_fn ( t#debug_info_t * , s#debug_view * , int , t#debug_entry_t * , char * ) 

/* arch/s390/kernel/diag.o */
e#diag_stat_enum enum diag_stat_enum { DIAG_STAT_X008 , DIAG_STAT_X00C , DIAG_STAT_X010 , DIAG_STAT_X014 , DIAG_STAT_X044 , DIAG_STAT_X064 , DIAG_STAT_X09C , DIAG_STAT_X0DC , DIAG_STAT_X204 , DIAG_STAT_X210 , DIAG_STAT_X224 , DIAG_STAT_X250 , DIAG_STAT_X258 , DIAG_STAT_X26C , DIAG_STAT_X288 , DIAG_STAT_X2C4 , DIAG_STAT_X2FC , DIAG_STAT_X304 , DIAG_STAT_X308 , DIAG_STAT_X318 , DIAG_STAT_X500 , NR_DIAG_STAT } 
diag_stat_inc void diag_stat_inc ( e#diag_stat_enum ) 
diag_stat_inc_norecursion void diag_stat_inc_norecursion ( e#diag_stat_enum ) 
diag14 extern int diag14 ( unsigned long , unsigned long , unsigned long ) 
diag204 int diag204 ( unsigned long , unsigned long , void * ) 
s#diag210 struct diag210 { t#u16 vrdcdvno ; t#u16 vrdclen ; t#u8 vrdcvcla ; t#u8 vrdcvtyp ; t#u8 vrdcvsta ; t#u8 vrdcvfla ; t#u8 vrdcrccl ; t#u8 vrdccrty ; t#u8 vrdccrmd ; t#u8 vrdccrft ; } 
diag210 extern int diag210 ( s#diag210 * ) 
diag224 int diag224 ( void * ) 
e#diag26c_sc enum diag26c_sc { DIAG26C_PORT_VNIC = 0x00000024 , DIAG26C_MAC_SERVICES = 0x00000030 } 
diag26c int diag26c ( void * , void * , e#diag26c_sc ) 

/* arch/s390/kernel/dis.o */
insn_to_mnemonic int insn_to_mnemonic ( unsigned char * , char * , unsigned int ) 

/* arch/s390/kernel/dumpstack.o */
t#dump_trace_func_t typedef int ( * dump_trace_func_t ) ( void * , unsigned long , int ) 
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##sock
s##seq_file
s##bio_vec
s##pipe_inode_info
s##poll_table_struct
s#pidmap struct pidmap { t#atomic_t nr_free ; void * page ; } 
s##kmem_cache
s##fs_pin
s##user_namespace
s##ucounts
s##proc_ns_operations
s#pid_namespace struct pid_namespace { s#kref kref ; s#pidmap pidmap [ ( ( ( 0 ? ( ( 1UL ) << 12 ) * 8 : ( sizeof ( long ) > 4 ? 4 * 1024 * 1024 : ( 0 ? 0x1000 : 0x8000 ) ) ) + ( ( ( 1UL ) << 12 ) * 8 ) - 1 ) / ( ( ( 1UL ) << 12 ) * 8 ) ) ] ; s#callback_head rcu ; int last_pid ; unsigned int nr_hashed ; s#task_struct * child_reaper ; s#kmem_cache * pid_cachep ; unsigned int level ; s#pid_namespace * parent ; s#vfsmount * proc_mnt ; s#dentry * proc_self ; s#dentry * proc_thread_self ; s#fs_pin * bacct ; s#user_namespace * user_ns ; s#ucounts * ucounts ; s#work_struct proc_work ; t#kgid_t pid_gid ; int hide_pid ; int reboot ; s#ns_common ns ; } 
s##nlm_lockowner
s##nfs4_lock_state
s##key_user
s##key_type
s##assoc_array_ptr
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##mem_cgroup
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##device
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s#new_utsname struct new_utsname { char sysname [ 64 + 1 ] ; char nodename [ 64 + 1 ] ; char release [ 64 + 1 ] ; char version [ 64 + 1 ] ; char machine [ 64 + 1 ] ; char domainname [ 64 + 1 ] ; } 
s#uts_namespace struct uts_namespace { s#kref kref ; s#new_utsname name ; s#user_namespace * user_ns ; s#ucounts * ucounts ; s#ns_common ns ; } 
s##ipc_namespace
s##mnt_namespace
s##net
s##cgroup_namespace
s#cpu_itimer struct cpu_itimer { t#u64 expires ; t#u64 incr ; } 
s#task_cputime_atomic struct task_cputime_atomic { t#atomic64_t utime ; t#atomic64_t stime ; t#atomic64_t sum_exec_runtime ; } 
s#thread_group_cputimer struct thread_group_cputimer { s#task_cputime_atomic cputime_atomic ; t#bool running ; t#bool checking_timer ; } 
s##tty_struct
s#rlimit struct rlimit { t#__kernel_ulong_t rlim_cur ; t#__kernel_ulong_t rlim_max ; } 
s#pacct_struct struct pacct_struct { int ac_flag ; long ac_exitcode ; unsigned long ac_mem ; t#u64 ac_utime , ac_stime ; unsigned long ac_minflt , ac_majflt ; } 
s##taskstats
s##tty_audit_buf
s#signal_struct struct signal_struct { t#atomic_t sigcnt ; t#atomic_t live ; int nr_threads ; s#list_head thread_head ; t#wait_queue_head_t wait_chldexit ; s#task_struct * curr_target ; s#sigpending shared_pending ; int group_exit_code ; int notify_count ; s#task_struct * group_exit_task ; int group_stop_count ; unsigned int flags ; unsigned int is_child_subreaper : 1 ; unsigned int has_child_subreaper : 1 ; int posix_timer_id ; s#list_head posix_timers ; s#hrtimer real_timer ; t#ktime_t it_real_incr ; s#cpu_itimer it [ 2 ] ; s#thread_group_cputimer cputimer ; s#task_cputime cputime_expires ; s#list_head cpu_timers [ 3 ] ; s#pid * leader_pid ; s#pid * tty_old_pgrp ; int leader ; s#tty_struct * tty ; t#seqlock_t stats_lock ; t#u64 utime , stime , cutime , cstime ; t#u64 gtime ; t#u64 cgtime ; s#prev_cputime prev_cputime ; unsigned long nvcsw , nivcsw , cnvcsw , cnivcsw ; unsigned long min_flt , maj_flt , cmin_flt , cmaj_flt ; unsigned long inblock , oublock , cinblock , coublock ; unsigned long maxrss , cmaxrss ; s#task_io_accounting ioac ; unsigned long long sum_sched_runtime ; s#rlimit rlim [ 16 ] ; s#pacct_struct pacct ; s#taskstats * stats ; unsigned audit_tty ; s#tty_audit_buf * tty_audit_buf ; t#bool oom_flag_origin ; short oom_score_adj ; short oom_score_adj_min ; s#mm_struct * oom_mm ; s#mutex cred_guard_mutex ; void * suse_kabi_padding ; } 
t#__signalfn_t typedef void __signalfn_t ( int ) 
t#__sighandler_t typedef t#__signalfn_t * __sighandler_t 
t#__restorefn_t typedef void __restorefn_t ( void ) 
t#__sigrestore_t typedef t#__restorefn_t * __sigrestore_t 
s#sigaction struct sigaction { t#__sighandler_t sa_handler ; unsigned long sa_flags ; t#__sigrestore_t sa_restorer ; t#sigset_t sa_mask ; } 
s#k_sigaction struct k_sigaction { s#sigaction sa ; } 
s#sighand_struct struct sighand_struct { t#atomic_t count ; s#k_sigaction action [ 64 ] ; t#spinlock_t siglock ; t#wait_queue_head_t signalfd_wqh ; } 
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s#ftrace_ret_stack struct ftrace_ret_stack { unsigned long ret ; unsigned long func ; unsigned long long calltime ; unsigned long long subtime ; } 
s##uprobe
s##gs_cb
dump_trace void dump_trace ( t#dump_trace_func_t , void * , s#task_struct * , unsigned long ) 

/* arch/s390/kernel/ebcdic.o */
_ascebc_500 extern t#__u8 _ascebc_500 [ 256 ] 
_ebcasc_500 extern t#__u8 _ebcasc_500 [ 256 ] 
_ascebc extern t#__u8 _ascebc [ 256 ] 
_ebcasc extern t#__u8 _ebcasc [ 256 ] 
_ebc_tolower extern t#__u8 _ebc_tolower [ 256 ] 
_ebc_toupper extern t#__u8 _ebc_toupper [ 256 ] 

/* arch/s390/kernel/entry.o */
t#__s16 typedef __signed__ short __s16 
t#psw_t typedef struct { unsigned long mask ; unsigned long addr ; } __attribute__ ( ( aligned ( 8 ) ) ) psw_t 
s#kvm_s390_sie_block struct kvm_s390_sie_block { t#atomic_t cpuflags ; t#__u32 : 1 ; t#__u32 prefix : 18 ; t#__u32 : 1 ; t#__u32 ibc : 12 ; t#__u8 reserved08 [ 4 ] ; t#__u32 prog0c ; t#__u8 reserved10 [ 16 ] ; t#atomic_t prog20 ; t#__u8 reserved24 [ 4 ] ; t#__u64 cputm ; t#__u64 ckc ; t#__u64 epoch ; t#__u32 svcc ; t#__u16 lctl ; t#__s16 icpua ; t#__u32 ictl ; t#__u32 eca ; t#__u8 icptcode ; t#__u8 icptstatus ; t#__u16 ihcpu ; t#__u8 reserved54 [ 2 ] ; t#__u16 ipa ; t#__u32 ipb ; t#__u32 scaoh ; t#__u8 fpf ; t#__u8 ecb ; t#__u8 ecb2 ; t#__u8 ecb3 ; t#__u32 scaol ; t#__u8 reserved68 ; t#__u8 epdx ; t#__u8 reserved6a [ 2 ] ; t#__u32 todpr ; t#__u8 reserved70 [ 16 ] ; t#__u64 mso ; t#__u64 msl ; t#psw_t gpsw ; t#__u64 gg14 ; t#__u64 gg15 ; t#__u8 reservedb0 [ 20 ] ; t#__u16 extcpuaddr ; t#__u16 eic ; t#__u32 reservedc8 ; t#__u16 pgmilc ; t#__u16 iprcc ; t#__u32 dxc ; t#__u16 mcn ; t#__u8 perc ; t#__u8 peratmid ; t#__u64 peraddr ; t#__u8 eai ; t#__u8 peraid ; t#__u8 oai ; t#__u8 armid ; t#__u8 reservede4 [ 4 ] ; t#__u64 tecmc ; t#__u8 reservedf0 [ 12 ] ; t#__u32 crycbd ; t#__u64 gcr [ 16 ] ; t#__u64 gbea ; t#__u8 reserved188 [ 8 ] ; t#__u64 sdnxo ; t#__u8 reserved198 [ 8 ] ; t#__u32 fac ; t#__u8 reserved1a4 [ 20 ] ; t#__u64 cbrlo ; t#__u8 reserved1c0 [ 8 ] ; t#__u32 ecd ; t#__u8 reserved1cc [ 18 ] ; t#__u64 pp ; t#__u8 reserved1e6 [ 2 ] ; t#__u64 itdba ; t#__u64 riccbd ; t#__u64 gvrd ; } 
sie64a extern int sie64a ( s#kvm_s390_sie_block * , t#u64 * ) 
sie_exit extern char sie_exit 
save_fpu_regs void save_fpu_regs ( void ) 

/* arch/s390/kernel/fpu.o */
s#kernel_fpu struct kernel_fpu { t#u32 mask ; t#u32 fpc ; union { t#freg_t fprs [ 16 ] ; t#__vector128 vxrs [ 32 ] ; } ; } 
__kernel_fpu_begin void __kernel_fpu_begin ( s#kernel_fpu * , t#u32 ) 
__kernel_fpu_end void __kernel_fpu_end ( s#kernel_fpu * , t#u32 ) 

/* arch/s390/kernel/ipl.o */
diag308 extern int diag308 ( unsigned long , void * ) 
e#ipl_type enum ipl_type { IPL_TYPE_UNKNOWN = 1 , IPL_TYPE_CCW = 2 , IPL_TYPE_FCP = 4 , IPL_TYPE_FCP_DUMP = 8 , IPL_TYPE_NSS = 16 , } 
s#ccw_dev_id struct ccw_dev_id { t#u8 ssid ; t#u16 devno ; } 
s#ipl_info struct ipl_info { e#ipl_type type ; union { struct { s#ccw_dev_id dev_id ; } ccw ; struct { s#ccw_dev_id dev_id ; t#u64 wwpn ; t#u64 lun ; } fcp ; struct { char name [ 8 + 1 ] ; } nss ; } data ; } 
ipl_info extern s#ipl_info ipl_info 
s#reset_call struct reset_call { s#list_head list ; void ( * fn ) ( void ) ; } 
register_reset_call extern void register_reset_call ( s#reset_call * ) 
unregister_reset_call extern void unregister_reset_call ( s#reset_call * ) 

/* arch/s390/kernel/irq.o */
E#NR_ARCH_IRQS 31 
s#irq_stat struct irq_stat { unsigned int irqs [ E#NR_ARCH_IRQS ] ; } 
irq_stat extern __attribute__ ( ( section ( ".data..percpu" "..shared_aligned" ) ) ) __typeof__ ( s#irq_stat ) irq_stat 
s#ext_code struct ext_code { unsigned short subcode ; unsigned short code ; } 
t#ext_int_handler_t typedef void ( * ext_int_handler_t ) ( s#ext_code , unsigned int , unsigned long ) 
register_external_irq int register_external_irq ( t#u16 , t#ext_int_handler_t ) 
unregister_external_irq int unregister_external_irq ( t#u16 , t#ext_int_handler_t ) 
e#irq_subclass enum irq_subclass { IRQ_SUBCLASS_MEASUREMENT_ALERT = 5 , IRQ_SUBCLASS_SERVICE_SIGNAL = 9 , } 
irq_subclass_register void irq_subclass_register ( e#irq_subclass ) 
irq_subclass_unregister void irq_subclass_unregister ( e#irq_subclass ) 

/* arch/s390/kernel/kdebugfs.o */
s##posix_acl
s##vfsmount
s##module
s##iov_iter
s##poll_table_struct
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##compat_timespec
s##pollfd
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##pipe_inode_info
s##writeback_control
s##swap_info_struct
s##dev_pagemap
s##kmem_cache
s##mem_cgroup
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##vm_operations_struct
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
arch_debugfs_dir extern s#dentry * arch_debugfs_dir 

/* arch/s390/kernel/kmsg.o */
__jhash_string unsigned long long __jhash_string ( const char * ) 
s##device_private
s##sock
s##seq_file
s##vfsmount
s##posix_acl
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##fwnode_handle
s##iommu_group
s##iommu_fwspec
dev_printk_hash int dev_printk_hash ( const char * , const s#device * , const char * , ... ) 
dev_emerg_hash int dev_emerg_hash ( const s#device * , const char * , ... ) 
dev_alert_hash int dev_alert_hash ( const s#device * , const char * , ... ) 
dev_crit_hash int dev_crit_hash ( const s#device * , const char * , ... ) 
dev_err_hash int dev_err_hash ( const s#device * , const char * , ... ) 
dev_warn_hash int dev_warn_hash ( const s#device * , const char * , ... ) 
dev_notice_hash int dev_notice_hash ( const s#device * , const char * , ... ) 
_dev_info_hash int _dev_info_hash ( const s#device * , const char * , ... ) 

/* arch/s390/kernel/lgr.o */
lgr_info_log extern void lgr_info_log ( void ) 

/* arch/s390/kernel/mcount.o */
_mcount void _mcount ( void ) 

/* arch/s390/kernel/nmi.o */
s390_handle_mcck extern void s390_handle_mcck ( void ) 

/* arch/s390/kernel/perf_cpum_cf.o */
kernel_cpumcf_avail t#bool kernel_cpumcf_avail ( void ) 
__kernel_cpumcf_begin int __kernel_cpumcf_begin ( void ) 
kernel_cpumcf_alert unsigned long kernel_cpumcf_alert ( int ) 
__kernel_cpumcf_end void __kernel_cpumcf_end ( void ) 

/* arch/s390/kernel/perf_event.o */
perf_pmu_name extern const char * perf_pmu_name ( void ) 
perf_num_counters extern int perf_num_counters ( void ) 

/* arch/s390/kernel/process.o */
s#pt_regs struct pt_regs { unsigned long args [ 1 ] ; t#psw_t psw ; unsigned long gprs [ 16 ] ; unsigned long orig_gpr2 ; unsigned int int_code ; unsigned int int_parm ; unsigned long int_parm_long ; unsigned long flags ; } 
t#s390_fp_regs typedef struct { t#__u32 fpc ; t#__u32 pad ; t#freg_t fprs [ 16 ] ; } s390_fp_regs 
t#elf_fpregset_t typedef t#s390_fp_regs elf_fpregset_t 
dump_fpu extern int dump_fpu ( s#pt_regs * , t#elf_fpregset_t * ) 

/* arch/s390/kernel/processor.o */
cpu_relax_yield void cpu_relax_yield ( void ) 
cpu_have_feature int cpu_have_feature ( unsigned int ) 
s390_isolate_bp extern int s390_isolate_bp ( void ) 
s390_isolate_bp_guest extern int s390_isolate_bp_guest ( void ) 

/* arch/s390/kernel/setup.o */
console_mode extern unsigned int console_mode 
console_devno extern unsigned int console_devno 
console_irq extern unsigned int console_irq 
VMALLOC_START extern unsigned long VMALLOC_START 
VMALLOC_END extern unsigned long VMALLOC_END 
s##posix_acl
s##vfsmount
s##sock
s##seq_file
s##bio_vec
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##kmem_cache
s##fs_pin
s##ucounts
s##proc_ns_operations
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##cgroup_namespace
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s#cdev struct cdev { s#kobject kobj ; s#module * owner ; const s#file_operations * ops ; s#list_head list ; t#dev_t dev ; unsigned int count ; } 
t#tcflag_t typedef unsigned int tcflag_t 
t#cc_t typedef unsigned char cc_t 
t#speed_t typedef unsigned int speed_t 
s#ktermios struct ktermios { t#tcflag_t c_iflag ; t#tcflag_t c_oflag ; t#tcflag_t c_cflag ; t#tcflag_t c_lflag ; t#cc_t c_line ; t#cc_t c_cc [ 19 ] ; t#speed_t c_ispeed ; t#speed_t c_ospeed ; } 
s##proc_dir_entry
s#tty_buffer struct tty_buffer { union { s#tty_buffer * next ; s#llist_node free ; } ; int used ; int size ; int commit ; int read ; int flags ; unsigned long data [ 0 ] ; } 
s#llist_head struct llist_head { s#llist_node * first ; } 
s#tty_bufhead struct tty_bufhead { s#tty_buffer * head ; s#work_struct work ; s#mutex lock ; t#atomic_t priority ; s#tty_buffer sentinel ; s#llist_head free ; t#atomic_t mem_used ; int mem_limit ; s#tty_buffer * tail ; } 
s#tty_port_operations struct tty_port_operations { int ( * carrier_raised ) ( s#tty_port * ) ; void ( * dtr_rts ) ( s#tty_port * , int ) ; void ( * shutdown ) ( s#tty_port * ) ; int ( * activate ) ( s#tty_port * , s#tty_struct * ) ; void ( * destruct ) ( s#tty_port * ) ; } 
s#tty_port_client_operations struct tty_port_client_operations { int ( * receive_buf ) ( s#tty_port * , const unsigned char * , const unsigned char * , t#size_t ) ; void ( * write_wakeup ) ( s#tty_port * ) ; } 
s#tty_port struct tty_port { s#tty_bufhead buf ; s#tty_struct * tty ; s#tty_struct * itty ; const s#tty_port_operations * ops ; const s#tty_port_client_operations * client_ops ; t#spinlock_t lock ; int blocked_open ; int count ; t#wait_queue_head_t open_wait ; t#wait_queue_head_t delta_msr_wait ; unsigned long flags ; unsigned long iflags ; unsigned char console : 1 , low_latency : 1 ; s#mutex mutex ; s#mutex buf_mutex ; unsigned char * xmit_buf ; unsigned int close_delay ; unsigned int closing_wait ; int drain_delay ; s#kref kref ; void * client_data ; } 
s#winsize struct winsize { unsigned short ws_row ; unsigned short ws_col ; unsigned short ws_xpixel ; unsigned short ws_ypixel ; } 
s#termiox struct termiox { t#__u16 x_hflag ; t#__u16 x_cflag ; t#__u16 x_rflag [ 5 ] ; t#__u16 x_sflag ; } 
s##serial_icounter_struct
s#tty_operations struct tty_operations { s#tty_struct * ( * lookup ) ( s#tty_driver * , s#file * , int ) ; int ( * install ) ( s#tty_driver * , s#tty_struct * ) ; void ( * remove ) ( s#tty_driver * , s#tty_struct * ) ; int ( * open ) ( s#tty_struct * , s#file * ) ; void ( * close ) ( s#tty_struct * , s#file * ) ; void ( * shutdown ) ( s#tty_struct * ) ; void ( * cleanup ) ( s#tty_struct * ) ; int ( * write ) ( s#tty_struct * , const unsigned char * , int ) ; int ( * put_char ) ( s#tty_struct * , unsigned char ) ; void ( * flush_chars ) ( s#tty_struct * ) ; int ( * write_room ) ( s#tty_struct * ) ; int ( * chars_in_buffer ) ( s#tty_struct * ) ; int ( * ioctl ) ( s#tty_struct * , unsigned int , unsigned long ) ; long ( * compat_ioctl ) ( s#tty_struct * , unsigned int , unsigned long ) ; void ( * set_termios ) ( s#tty_struct * , s#ktermios * ) ; void ( * throttle ) ( s#tty_struct * ) ; void ( * unthrottle ) ( s#tty_struct * ) ; void ( * stop ) ( s#tty_struct * ) ; void ( * start ) ( s#tty_struct * ) ; void ( * hangup ) ( s#tty_struct * ) ; int ( * break_ctl ) ( s#tty_struct * , int ) ; void ( * flush_buffer ) ( s#tty_struct * ) ; void ( * set_ldisc ) ( s#tty_struct * ) ; void ( * wait_until_sent ) ( s#tty_struct * , int ) ; void ( * send_xchar ) ( s#tty_struct * , char ) ; int ( * tiocmget ) ( s#tty_struct * ) ; int ( * tiocmset ) ( s#tty_struct * , unsigned int , unsigned int ) ; int ( * resize ) ( s#tty_struct * , s#winsize * ) ; int ( * set_termiox ) ( s#tty_struct * , s#termiox * ) ; int ( * get_icount ) ( s#tty_struct * , s#serial_icounter_struct * ) ; const s#file_operations * proc_fops ; } 
s#tty_driver struct tty_driver { int magic ; s#kref kref ; s#cdev * * cdevs ; s#module * owner ; const char * driver_name ; const char * name ; int name_base ; int major ; int minor_start ; unsigned int num ; short type ; short subtype ; s#ktermios init_termios ; unsigned long flags ; s#proc_dir_entry * proc_entry ; s#tty_driver * other ; s#tty_struct * * ttys ; s#tty_port * * ports ; s#ktermios * * termios ; void * driver_state ; const s#tty_operations * ops ; s#list_head tty_drivers ; } 
s#ld_semaphore struct ld_semaphore { long count ; t#raw_spinlock_t wait_lock ; unsigned int wait_readers ; s#list_head read_wait ; s#list_head write_wait ; } 
s##poll_table_struct
s#tty_ldisc_ops struct tty_ldisc_ops { int magic ; char * name ; int num ; int flags ; int ( * open ) ( s#tty_struct * ) ; void ( * close ) ( s#tty_struct * ) ; void ( * flush_buffer ) ( s#tty_struct * ) ; t#ssize_t ( * read ) ( s#tty_struct * , s#file * , unsigned char * , t#size_t ) ; t#ssize_t ( * write ) ( s#tty_struct * , s#file * , const unsigned char * , t#size_t ) ; int ( * ioctl ) ( s#tty_struct * , s#file * , unsigned int , unsigned long ) ; long ( * compat_ioctl ) ( s#tty_struct * , s#file * , unsigned int , unsigned long ) ; void ( * set_termios ) ( s#tty_struct * , s#ktermios * ) ; unsigned int ( * poll ) ( s#tty_struct * , s#file * , s#poll_table_struct * ) ; int ( * hangup ) ( s#tty_struct * ) ; void ( * receive_buf ) ( s#tty_struct * , const unsigned char * , char * , int ) ; void ( * write_wakeup ) ( s#tty_struct * ) ; void ( * dcd_change ) ( s#tty_struct * , unsigned int ) ; int ( * receive_buf2 ) ( s#tty_struct * , const unsigned char * , char * , int ) ; s#module * owner ; int refcount ; } 
s#tty_ldisc struct tty_ldisc { s#tty_ldisc_ops * ops ; s#tty_struct * tty ; } 
s#tty_struct struct tty_struct { int magic ; s#kref kref ; s#device * dev ; s#tty_driver * driver ; const s#tty_operations * ops ; int index ; s#ld_semaphore ldisc_sem ; s#tty_ldisc * ldisc ; s#mutex atomic_write_lock ; s#mutex legacy_mutex ; s#mutex throttle_mutex ; s#rw_semaphore termios_rwsem ; s#mutex winsize_mutex ; t#spinlock_t ctrl_lock ; t#spinlock_t flow_lock ; s#ktermios termios , termios_locked ; s#termiox * termiox ; char name [ 64 ] ; s#pid * pgrp ; s#pid * session ; unsigned long flags ; int count ; s#winsize winsize ; unsigned long stopped : 1 , flow_stopped : 1 , unused : 64 - 2 ; int hw_stopped ; unsigned long ctrl_status : 8 , packet : 1 , unused_ctrl : 64 - 9 ; unsigned int receive_room ; int flow_change ; s#tty_struct * link ; s#fasync_struct * fasync ; int alt_speed ; t#wait_queue_head_t write_wait ; t#wait_queue_head_t read_wait ; s#work_struct hangup_work ; void * disc_data ; void * driver_data ; t#spinlock_t files_lock ; s#list_head tty_files ; int closing ; unsigned char * write_buf ; int write_cnt ; s#work_struct SAK_work ; s#tty_port * port ; } 
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
vmemmap extern s#page * vmemmap 
s#lowcore struct lowcore { t#__u8 pad_0x0000 [ 0x0014 - 0x0000 ] ; t#__u32 ipl_parmblock_ptr ; t#__u8 pad_0x0018 [ 0x0080 - 0x0018 ] ; t#__u32 ext_params ; t#__u16 ext_cpu_addr ; t#__u16 ext_int_code ; t#__u16 svc_ilc ; t#__u16 svc_code ; t#__u16 pgm_ilc ; t#__u16 pgm_code ; t#__u32 data_exc_code ; t#__u16 mon_class_num ; t#__u8 per_code ; t#__u8 per_atmid ; t#__u64 per_address ; t#__u8 exc_access_id ; t#__u8 per_access_id ; t#__u8 op_access_id ; t#__u8 ar_mode_id ; t#__u8 pad_0x00a4 [ 0x00a8 - 0x00a4 ] ; t#__u64 trans_exc_code ; t#__u64 monitor_code ; t#__u16 subchannel_id ; t#__u16 subchannel_nr ; t#__u32 io_int_parm ; t#__u32 io_int_word ; t#__u8 pad_0x00c4 [ 0x00c8 - 0x00c4 ] ; t#__u32 stfl_fac_list ; t#__u8 pad_0x00cc [ 0x00e8 - 0x00cc ] ; t#__u64 mcck_interruption_code ; t#__u8 pad_0x00f0 [ 0x00f4 - 0x00f0 ] ; t#__u32 external_damage_code ; t#__u64 failing_storage_address ; t#__u8 pad_0x0100 [ 0x0110 - 0x0100 ] ; t#__u64 breaking_event_addr ; t#__u8 pad_0x0118 [ 0x0120 - 0x0118 ] ; t#psw_t restart_old_psw ; t#psw_t external_old_psw ; t#psw_t svc_old_psw ; t#psw_t program_old_psw ; t#psw_t mcck_old_psw ; t#psw_t io_old_psw ; t#__u8 pad_0x0180 [ 0x01a0 - 0x0180 ] ; t#psw_t restart_psw ; t#psw_t external_new_psw ; t#psw_t svc_new_psw ; t#psw_t program_new_psw ; t#psw_t mcck_new_psw ; t#psw_t io_new_psw ; t#__u64 save_area_sync [ 8 ] ; t#__u64 save_area_async [ 8 ] ; t#__u64 save_area_restart [ 1 ] ; t#__u64 cpu_flags ; t#psw_t return_psw ; t#psw_t return_mcck_psw ; t#__u64 sync_enter_timer ; t#__u64 async_enter_timer ; t#__u64 mcck_enter_timer ; t#__u64 exit_timer ; t#__u64 user_timer ; t#__u64 guest_timer ; t#__u64 system_timer ; t#__u64 hardirq_timer ; t#__u64 softirq_timer ; t#__u64 steal_timer ; t#__u64 last_update_timer ; t#__u64 last_update_clock ; t#__u64 int_clock ; t#__u64 mcck_clock ; t#__u64 clock_comparator ; t#__u64 current_task ; t#__u8 pad_0x318 [ 0x320 - 0x318 ] ; t#__u64 kernel_stack ; t#__u64 async_stack ; t#__u64 panic_stack ; t#__u64 restart_stack ; t#__u64 restart_fn ; t#__u64 restart_data ; t#__u64 restart_source ; t#__u64 kernel_asce ; t#__u64 user_asce ; t#__u32 lpp ; t#__u32 current_pid ; t#__u32 cpu_nr ; t#__u32 softirq_pending ; t#__u64 percpu_offset ; t#__u64 vdso_per_cpu_data ; t#__u64 machine_flags ; t#__u32 preempt_count ; t#__u8 pad_0x03ac [ 0x03b0 - 0x03ac ] ; t#__u64 gmap ; t#__u32 spinlock_lockval ; t#__u32 fpu_flags ; t#__u8 pad_0x03c0 [ 0x0400 - 0x03c0 ] ; t#__u32 paste [ 16 ] ; t#__u8 pad_0x04c0 [ 0x0500 - 0x0440 ] ; t#__u16 br_r1_trampoline ; t#__u8 pad_0x0502 [ 0x0e00 - 0x0502 ] ; t#__u64 ipib ; t#__u32 ipib_checksum ; t#__u64 vmcore_info ; t#__u8 pad_0x0e14 [ 0x0e18 - 0x0e14 ] ; t#__u64 os_info ; t#__u8 pad_0x0e20 [ 0x0f00 - 0x0e20 ] ; t#__u64 stfle_fac_list [ 16 ] ; t#__u64 alt_stfle_fac_list [ 16 ] ; t#__u8 pad_0x1000 [ 0x11b0 - 0x1000 ] ; t#__u64 mcesad ; t#__u64 ext_params2 ; t#__u8 pad_0x11c0 [ 0x1200 - 0x11C0 ] ; t#__u64 floating_pt_save_area [ 16 ] ; t#__u64 gpregs_save_area [ 16 ] ; t#psw_t psw_save_area ; t#__u8 pad_0x1310 [ 0x1318 - 0x1310 ] ; t#__u32 prefixreg_save_area ; t#__u32 fpt_creg_save_area ; t#__u8 pad_0x1320 [ 0x1324 - 0x1320 ] ; t#__u32 tod_progreg_save_area ; t#__u32 cpu_timer_save_area [ 2 ] ; t#__u32 clock_comp_save_area [ 2 ] ; t#__u8 pad_0x1338 [ 0x1340 - 0x1338 ] ; t#__u32 access_regs_save_area [ 16 ] ; t#__u64 cregs_save_area [ 16 ] ; t#__u8 pad_0x1400 [ 0x1800 - 0x1400 ] ; t#__u8 pgm_tdb [ 256 ] ; t#__u8 pad_0x1900 [ 0x2000 - 0x1900 ] ; } 
lowcore_ptr extern s#lowcore * lowcore_ptr [ ] 
pm_power_off extern void ( * pm_power_off ) ( void ) 

/* arch/s390/kernel/smp.o */
smp_cpu_mt_shift extern unsigned int smp_cpu_mt_shift 
smp_cpu_mtid extern unsigned int smp_cpu_mtid 
arch_vcpu_is_preempted t#bool arch_vcpu_is_preempted ( int ) 
smp_ctl_set_bit void smp_ctl_set_bit ( int , int ) 
smp_ctl_clear_bit void smp_ctl_clear_bit ( int , int ) 

/* arch/s390/kernel/stacktrace.o */
s#stack_trace struct stack_trace { unsigned int nr_entries , max_entries ; unsigned long * entries ; int skip ; } 
save_stack_trace extern void save_stack_trace ( s#stack_trace * ) 
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##mm_struct
s##vm_area_struct
s##compat_timespec
s##pollfd
s##pid_namespace
s##completion
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##pipe_inode_info
s##page
s##task_delay_info
s##ftrace_ret_stack
s##mem_cgroup
s##uprobe_task
s##gs_cb
save_stack_trace_tsk extern void save_stack_trace_tsk ( s#task_struct * , s#stack_trace * ) 
save_stack_trace_regs extern void save_stack_trace_regs ( s#pt_regs * , s#stack_trace * ) 

/* arch/s390/kernel/sthyi.o */
sthyi_fill int sthyi_fill ( void * , t#u64 * ) 

/* arch/s390/kernel/sysinfo.o */
stsi int stsi ( void * , int , int , int ) 
s##vfsmount
s##posix_acl
s##module
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##compat_timespec
s##pollfd
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##iov_iter
s##swap_info_struct
s##device
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s#service_level struct service_level { s#list_head list ; void ( * seq_print ) ( s#seq_file * , s#service_level * ) ; } 
register_service_level int register_service_level ( s#service_level * ) 
unregister_service_level int unregister_service_level ( s#service_level * ) 

/* arch/s390/kernel/time.o */
sched_clock_base_cc extern t#u64 sched_clock_base_cc 
t#notifier_fn_t typedef int ( * notifier_fn_t ) ( s#notifier_block * , unsigned long , void * ) 
s#notifier_block struct notifier_block { t#notifier_fn_t notifier_call ; s#notifier_block * next ; int priority ; } 
s#atomic_notifier_head struct atomic_notifier_head { t#spinlock_t lock ; s#notifier_block * head ; } 
s390_epoch_delta_notifier extern s#atomic_notifier_head s390_epoch_delta_notifier 
monotonic_clock unsigned long long monotonic_clock ( void ) 
get_phys_clock int get_phys_clock ( unsigned long * ) 

/* arch/s390/kernel/topology.o */
s#cpu_topology_s390 struct cpu_topology_s390 { unsigned short thread_id ; unsigned short core_id ; unsigned short socket_id ; unsigned short book_id ; unsigned short drawer_id ; unsigned short node_id ; t#cpumask_t thread_mask ; t#cpumask_t core_mask ; t#cpumask_t book_mask ; t#cpumask_t drawer_mask ; } 
cpu_topology extern s#cpu_topology_s390 cpu_topology [ 256 ] 

/* arch/s390/kernel/trace.o */
s##static_key_mod
__tracepoint_s390_diagnose extern s#tracepoint __tracepoint_s390_diagnose 

/* arch/s390/kernel/vtime.o */
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##mm_struct
s##vm_area_struct
s##compat_timespec
s##pollfd
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##pipe_inode_info
s##page
s##task_delay_info
s##ftrace_ret_stack
s##mem_cgroup
s##uprobe_task
s##gs_cb
vtime_account_irq_enter extern void vtime_account_irq_enter ( s#task_struct * ) 
vtime_account_system extern void vtime_account_system ( s#task_struct * ) 
s#vtimer_list struct vtimer_list { s#list_head entry ; t#u64 expires ; t#u64 interval ; void ( * function ) ( unsigned long ) ; unsigned long data ; } 
init_virt_timer extern void init_virt_timer ( s#vtimer_list * ) 
add_virt_timer extern void add_virt_timer ( s#vtimer_list * ) 
add_virt_timer_periodic extern void add_virt_timer_periodic ( s#vtimer_list * ) 
mod_virt_timer extern int mod_virt_timer ( s#vtimer_list * , t#u64 ) 
mod_virt_timer_periodic extern int mod_virt_timer_periodic ( s#vtimer_list * , t#u64 ) 
del_virt_timer extern int del_virt_timer ( s#vtimer_list * ) 

/* arch/s390/kvm/kvm-s390.o */
s##anon_vma
s##posix_acl
s##vfsmount
s##sock
s##bio_vec
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s#pollfd struct pollfd { int fd ; short events ; short revents ; } 
s##kmem_cache
s##fs_pin
s##proc_ns_operations
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##bpf_prog_array
s##cgroup_taskset
s##tty_struct
s#taskstats struct taskstats { t#__u16 version ; t#__u32 ac_exitcode ; t#__u8 ac_flag ; t#__u8 ac_nice ; t#__u64 cpu_count __attribute__ ( ( aligned ( 8 ) ) ) ; t#__u64 cpu_delay_total ; t#__u64 blkio_count ; t#__u64 blkio_delay_total ; t#__u64 swapin_count ; t#__u64 swapin_delay_total ; t#__u64 cpu_run_real_total ; t#__u64 cpu_run_virtual_total ; char ac_comm [ 32 ] ; t#__u8 ac_sched __attribute__ ( ( aligned ( 8 ) ) ) ; t#__u8 ac_pad [ 3 ] ; t#__u32 ac_uid __attribute__ ( ( aligned ( 8 ) ) ) ; t#__u32 ac_gid ; t#__u32 ac_pid ; t#__u32 ac_ppid ; t#__u32 ac_btime ; t#__u64 ac_etime __attribute__ ( ( aligned ( 8 ) ) ) ; t#__u64 ac_utime ; t#__u64 ac_stime ; t#__u64 ac_minflt ; t#__u64 ac_majflt ; t#__u64 coremem ; t#__u64 virtmem ; t#__u64 hiwater_rss ; t#__u64 hiwater_vm ; t#__u64 read_char ; t#__u64 write_char ; t#__u64 read_syscalls ; t#__u64 write_syscalls ; t#__u64 read_bytes ; t#__u64 write_bytes ; t#__u64 cancelled_write_bytes ; t#__u64 nvcsw ; t#__u64 nivcsw ; t#__u64 ac_utimescaled ; t#__u64 ac_stimescaled ; t#__u64 cpu_scaled_run_real_total ; t#__u64 freepages_count ; t#__u64 freepages_delay_total ; } 
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##robust_list_head
s##futex_pi_state
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s#perf_cgroup_info struct perf_cgroup_info { t#u64 time ; t#u64 timestamp ; } 
s#perf_cgroup struct perf_cgroup { s#cgroup_subsys_state css ; s#perf_cgroup_info * info ; } 
s#perf_cpu_context struct perf_cpu_context { s#perf_event_context ctx ; s#perf_event_context * task_ctx ; int active_oncpu ; int exclusive ; t#raw_spinlock_t hrtimer_lock ; s#hrtimer hrtimer ; t#ktime_t hrtimer_interval ; unsigned int hrtimer_active ; s#perf_cgroup * cgrp ; s#list_head cgrp_cpuctx_entry ; s#list_head sched_cb_entry ; int sched_cb_usage ; } 
e#perf_event_state enum perf_event_state { PERF_EVENT_STATE_DEAD = - 4 , PERF_EVENT_STATE_EXIT = - 3 , PERF_EVENT_STATE_ERROR = - 2 , PERF_EVENT_STATE_OFF = - 1 , PERF_EVENT_STATE_INACTIVE = 0 , PERF_EVENT_STATE_ACTIVE = 1 , } 
t#local_t typedef struct { t#atomic_long_t a ; } local_t 
t#local64_t typedef struct { t#local_t a ; } local64_t 
s#perf_event_attr struct perf_event_attr { t#__u32 type ; t#__u32 size ; t#__u64 config ; union { t#__u64 sample_period ; t#__u64 sample_freq ; } ; t#__u64 sample_type ; t#__u64 read_format ; t#__u64 disabled : 1 , inherit : 1 , pinned : 1 , exclusive : 1 , exclude_user : 1 , exclude_kernel : 1 , exclude_hv : 1 , exclude_idle : 1 , mmap : 1 , comm : 1 , freq : 1 , inherit_stat : 1 , enable_on_exec : 1 , task : 1 , watermark : 1 , precise_ip : 2 , mmap_data : 1 , sample_id_all : 1 , exclude_host : 1 , exclude_guest : 1 , exclude_callchain_kernel : 1 , exclude_callchain_user : 1 , mmap2 : 1 , comm_exec : 1 , use_clockid : 1 , context_switch : 1 , write_backward : 1 , namespaces : 1 , __reserved_1 : 35 ; union { t#__u32 wakeup_events ; t#__u32 wakeup_watermark ; } ; t#__u32 bp_type ; union { t#__u64 bp_addr ; t#__u64 kprobe_func ; t#__u64 uprobe_path ; t#__u64 config1 ; } ; union { t#__u64 bp_len ; t#__u64 kprobe_addr ; t#__u64 probe_offset ; t#__u64 config2 ; } ; t#__u64 branch_sample_type ; t#__u64 sample_regs_user ; t#__u32 sample_stack_user ; t#__s32 clockid ; t#__u64 sample_regs_intr ; t#__u32 aux_watermark ; t#__u16 sample_max_stack ; t#__u16 __reserved_2 ; } 
s#hw_perf_event_extra struct hw_perf_event_extra { t#u64 config ; unsigned int reg ; int alloc ; int idx ; } 
s#hw_perf_event struct hw_perf_event { union { struct { t#u64 config ; t#u64 last_tag ; unsigned long config_base ; unsigned long event_base ; int event_base_rdpmc ; int idx ; int last_cpu ; int flags ; s#hw_perf_event_extra extra_reg ; s#hw_perf_event_extra branch_reg ; } ; struct { s#hrtimer hrtimer ; } ; struct { s#list_head tp_list ; } ; struct { int itrace_started ; } ; struct { t#u64 pwr_acc ; t#u64 ptsc ; } ; struct { t#u8 iommu_bank ; t#u8 iommu_cntr ; t#u16 padding ; t#u64 conf ; t#u64 conf1 ; } ; } ; s#task_struct * target ; void * addr_filters ; unsigned long addr_filters_gen ; int state ; t#local64_t prev_count ; t#u64 sample_period ; t#u64 last_period ; t#local64_t period_left ; t#u64 interrupts_seq ; t#u64 interrupts ; t#u64 freq_time_stamp ; t#u64 freq_count_stamp ; } 
s##ring_buffer
s#irq_work struct irq_work { unsigned long flags ; s#llist_node llnode ; void ( * func ) ( s#irq_work * ) ; } 
s#perf_addr_filters_head struct perf_addr_filters_head { s#list_head list ; t#raw_spinlock_t lock ; unsigned int nr_file_filters ; } 
t#perf_copy_f typedef unsigned long ( * perf_copy_f ) ( void * , const void * , unsigned long , unsigned long ) 
s#perf_raw_frag struct perf_raw_frag { union { s#perf_raw_frag * next ; unsigned long pad ; } ; t#perf_copy_f copy ; void * data ; t#u32 size ; } 
s#perf_raw_record struct perf_raw_record { s#perf_raw_frag frag ; t#u32 size ; } 
s#perf_branch_entry struct perf_branch_entry { t#__u64 from ; t#__u64 to ; t#__u64 mispred : 1 , predicted : 1 , in_tx : 1 , abort : 1 , cycles : 16 , reserved : 44 ; } 
s#perf_branch_stack struct perf_branch_stack { t#__u64 nr ; s#perf_branch_entry entries [ 0 ] ; } 
u#perf_mem_data_src union perf_mem_data_src { t#__u64 val ; struct { t#__u64 mem_rsvd : 24 , mem_snoopx : 2 , mem_remote : 1 , mem_lvl_num : 4 , mem_dtlb : 7 , mem_lock : 2 , mem_snoop : 5 , mem_lvl : 14 , mem_op : 5 ; } ; } 
s#perf_callchain_entry struct perf_callchain_entry { t#__u64 nr ; t#__u64 ip [ 0 ] ; } 
s#perf_regs struct perf_regs { t#__u64 abi ; s#pt_regs * regs ; } 
s#perf_sample_data struct perf_sample_data { t#u64 addr ; s#perf_raw_record * raw ; s#perf_branch_stack * br_stack ; t#u64 period ; t#u64 weight ; t#u64 txn ; u#perf_mem_data_src data_src ; t#u64 type ; t#u64 ip ; struct { t#u32 pid ; t#u32 tid ; } tid_entry ; t#u64 time ; t#u64 id ; t#u64 stream_id ; struct { t#u32 cpu ; t#u32 reserved ; } cpu_entry ; s#perf_callchain_entry * callchain ; s#perf_regs regs_user ; s#pt_regs regs_user_copy ; s#perf_regs regs_intr ; t#u64 stack_user_size ; } 
t#perf_overflow_handler_t typedef void ( * perf_overflow_handler_t ) ( s#perf_event * , s#perf_sample_data * , s#pt_regs * ) 
s##bpf_prog
e#trace_reg enum trace_reg { TRACE_REG_REGISTER , TRACE_REG_UNREGISTER , TRACE_REG_PERF_REGISTER , TRACE_REG_PERF_UNREGISTER , TRACE_REG_PERF_OPEN , TRACE_REG_PERF_CLOSE , TRACE_REG_PERF_ADD , TRACE_REG_PERF_DEL , } 
s#trace_event_class struct trace_event_class { const char * system ; void * probe ; void * perf_probe ; int ( * reg ) ( s#trace_event_call * , e#trace_reg , void * ) ; int ( * define_fields ) ( s#trace_event_call * ) ; s#list_head * ( * get_fields ) ( s#trace_event_call * ) ; s#list_head fields ; int ( * raw_init ) ( s#trace_event_call * ) ; } 
s##static_key_mod
e#print_line_t enum print_line_t { TRACE_TYPE_PARTIAL_LINE = 0 , TRACE_TYPE_HANDLED = 1 , TRACE_TYPE_UNHANDLED = 2 , TRACE_TYPE_NO_CONSUME = 3 } 
s##trace_array
s##tracer
s##trace_buffer
s##ring_buffer_iter
s#seq_buf struct seq_buf { char * buffer ; t#size_t size ; t#size_t len ; t#loff_t readpos ; } 
s#trace_seq struct trace_seq { unsigned char buffer [ ( ( 1UL ) << 12 ) ] ; s#seq_buf seq ; int full ; } 
s#trace_entry struct trace_entry { unsigned short type ; unsigned char flags ; unsigned char preempt_count ; int pid ; } 
s#trace_iterator struct trace_iterator { s#trace_array * tr ; s#tracer * trace ; s#trace_buffer * trace_buffer ; void * private ; int cpu_file ; s#mutex mutex ; s#ring_buffer_iter * * buffer_iter ; unsigned long iter_flags ; s#trace_seq tmp_seq ; t#cpumask_var_t started ; t#bool snapshot ; s#trace_seq seq ; s#trace_entry * ent ; unsigned long lost_events ; int leftover ; int ent_size ; int cpu ; t#u64 ts ; t#loff_t pos ; long idx ; } 
t#trace_print_func typedef e#print_line_t ( * trace_print_func ) ( s#trace_iterator * , int , s#trace_event * ) 
s#trace_event_functions struct trace_event_functions { t#trace_print_func trace ; t#trace_print_func raw ; t#trace_print_func hex ; t#trace_print_func binary ; } 
s#trace_event struct trace_event { s#hlist_node node ; s#list_head list ; int type ; s#trace_event_functions * funcs ; } 
s##event_filter
s#trace_event_call struct trace_event_call { s#list_head list ; s#trace_event_class * class ; union { char * name ; s#tracepoint * tp ; } ; s#trace_event event ; char * print_fmt ; s#event_filter * filter ; void * mod ; void * data ; int flags ; int perf_refcount ; s#hlist_head * perf_events ; s#bpf_prog_array * prog_array ; int ( * perf_perm ) ( s#trace_event_call * , s#perf_event * ) ; } 
t#ftrace_func_t typedef void ( * ftrace_func_t ) ( unsigned long , unsigned long , s#ftrace_ops * , s#pt_regs * ) 
s##ftrace_hash
s#ftrace_ops_hash struct ftrace_ops_hash { s#ftrace_hash * notrace_hash ; s#ftrace_hash * filter_hash ; s#mutex regex_lock ; } 
s#ftrace_ops struct ftrace_ops { t#ftrace_func_t func ; s#ftrace_ops * next ; unsigned long flags ; void * private ; t#ftrace_func_t saved_func ; int * disabled ; s#ftrace_ops_hash local_hash ; s#ftrace_ops_hash * func_hash ; s#ftrace_ops_hash old_hash ; unsigned long trampoline ; unsigned long trampoline_size ; } 
s#perf_event struct perf_event { s#list_head event_entry ; s#list_head sibling_list ; s#list_head active_list ; s#rb_node group_node ; t#u64 group_index ; s#list_head migrate_entry ; s#hlist_node hlist_entry ; s#list_head active_entry ; int nr_siblings ; int event_caps ; int group_caps ; s#perf_event * group_leader ; s#pmu * pmu ; void * pmu_private ; e#perf_event_state state ; unsigned int attach_state ; t#local64_t count ; t#atomic64_t child_count ; t#u64 total_time_enabled ; t#u64 total_time_running ; t#u64 tstamp ; t#u64 shadow_ctx_time ; s#perf_event_attr attr ; t#u16 header_size ; t#u16 id_header_size ; t#u16 read_size ; s#hw_perf_event hw ; s#perf_event_context * ctx ; t#atomic_long_t refcount ; t#atomic64_t child_total_time_enabled ; t#atomic64_t child_total_time_running ; s#mutex child_mutex ; s#list_head child_list ; s#perf_event * parent ; int oncpu ; int cpu ; s#list_head owner_entry ; s#task_struct * owner ; s#mutex mmap_mutex ; t#atomic_t mmap_count ; s#ring_buffer * rb ; s#list_head rb_entry ; unsigned long rcu_batches ; int rcu_pending ; t#wait_queue_head_t waitq ; s#fasync_struct * fasync ; int pending_wakeup ; int pending_kill ; int pending_disable ; s#irq_work pending ; t#atomic_t event_limit ; s#perf_addr_filters_head addr_filters ; unsigned long * addr_filters_offs ; unsigned long addr_filters_gen ; void ( * destroy ) ( s#perf_event * ) ; s#callback_head callback_head ; s#pid_namespace * ns ; t#u64 id ; t#u64 ( * clock ) ( void ) ; t#perf_overflow_handler_t overflow_handler ; void * overflow_handler_context ; t#perf_overflow_handler_t orig_overflow_handler ; s#bpf_prog * prog ; s#trace_event_call * tp_event ; s#event_filter * filter ; s#ftrace_ops ftrace_ops ; s#perf_cgroup * cgrp ; s#list_head sb_list ; } 
s#pmu struct pmu { s#list_head entry ; s#module * module ; s#device * dev ; const s#attribute_group * * attr_groups ; const char * name ; int type ; int capabilities ; int * pmu_disable_count ; s#perf_cpu_context * pmu_cpu_context ; t#atomic_t exclusive_cnt ; int task_ctx_nr ; int hrtimer_interval_ms ; unsigned int nr_addr_filters ; void ( * pmu_enable ) ( s#pmu * ) ; void ( * pmu_disable ) ( s#pmu * ) ; int ( * event_init ) ( s#perf_event * ) ; void ( * event_mapped ) ( s#perf_event * , s#mm_struct * ) ; void ( * event_unmapped ) ( s#perf_event * , s#mm_struct * ) ; int ( * add ) ( s#perf_event * , int ) ; void ( * del ) ( s#perf_event * , int ) ; void ( * start ) ( s#perf_event * , int ) ; void ( * stop ) ( s#perf_event * , int ) ; void ( * read ) ( s#perf_event * ) ; void ( * start_txn ) ( s#pmu * , unsigned int ) ; int ( * commit_txn ) ( s#pmu * ) ; void ( * cancel_txn ) ( s#pmu * ) ; int ( * event_idx ) ( s#perf_event * ) ; void ( * sched_task ) ( s#perf_event_context * , t#bool ) ; t#size_t task_ctx_size ; void * ( * setup_aux ) ( int , void * * , int , t#bool ) ; void ( * free_aux ) ( void * ) ; int ( * addr_filters_validate ) ( s#list_head * ) ; void ( * addr_filters_sync ) ( s#perf_event * ) ; int ( * filter_match ) ( s#perf_event * ) ; } 
s#perf_event_groups struct perf_event_groups { s#rb_root tree ; t#u64 index ; } 
s#perf_event_context struct perf_event_context { s#pmu * pmu ; t#raw_spinlock_t lock ; s#mutex mutex ; s#list_head active_ctx_list ; s#perf_event_groups pinned_groups ; s#perf_event_groups flexible_groups ; s#list_head event_list ; s#list_head pinned_active ; s#list_head flexible_active ; int nr_events ; int nr_active ; int is_active ; int nr_stat ; int nr_freq ; int rotate_disable ; t#atomic_t refcount ; s#task_struct * task ; t#u64 time ; t#u64 timestamp ; s#perf_event_context * parent_ctx ; t#u64 parent_gen ; t#u64 generation ; int pin_count ; int nr_cgroups ; void * task_ctx_data ; s#callback_head callback_head ; } 
s##mempolicy
s##numa_group
s##task_delay_info
s##mem_cgroup
s##uprobe
s#gs_cb struct gs_cb { t#__u64 reserved ; t#__u64 gsd ; t#__u64 gssm ; t#__u64 gs_epl_a ; } 
s##key_user
s##key_type
s##assoc_array_ptr
t#poll_queue_proc typedef void ( * poll_queue_proc ) ( s#file * , t#wait_queue_head_t * , s#poll_table_struct * ) 
s#poll_table_struct struct poll_table_struct { t#poll_queue_proc _qproc ; unsigned long _key ; } 
s##nlm_lockowner
s##nfs4_lock_state
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s#trace_enum_map struct trace_enum_map { const char * system ; const char * enum_string ; unsigned long enum_value ; } 
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s#mmu_notifier_mm struct mmu_notifier_mm { s#hlist_head list ; t#spinlock_t lock ; } 
s##xol_area
t#gfn_t typedef t#u64 gfn_t 
s#kvm_arch_memory_slot struct kvm_arch_memory_slot { } 
s#kvm_memory_slot struct kvm_memory_slot { t#gfn_t base_gfn ; unsigned long npages ; unsigned long * dirty_bitmap ; s#kvm_arch_memory_slot arch ; unsigned long userspace_addr ; t#u32 flags ; short id ; } 
s#kvm_memslots struct kvm_memslots { t#u64 generation ; s#kvm_memory_slot memslots [ ( 32 + 0 ) ] ; short id_to_index [ ( 32 + 0 ) ] ; t#atomic_t lru_slot ; int used_slots ; } 
s#preempt_ops struct preempt_ops { void ( * sched_in ) ( s#preempt_notifier * , int ) ; void ( * sched_out ) ( s#preempt_notifier * , s#task_struct * ) ; } 
s#preempt_notifier struct preempt_notifier { s#hlist_node link ; s#preempt_ops * ops ; } 
s#kvm_debug_exit_arch struct kvm_debug_exit_arch { t#__u64 addr ; t#__u8 type ; t#__u8 pad [ 7 ] ; } 
s#kvm_hyperv_exit struct kvm_hyperv_exit { t#__u32 type ; union { struct { t#__u32 msr ; t#__u64 control ; t#__u64 evt_page ; t#__u64 msg_page ; } synic ; struct { t#__u64 input ; t#__u64 result ; t#__u64 params [ 2 ] ; } hcall ; } u ; } 
s#kvm_sync_regs struct kvm_sync_regs { t#__u64 prefix ; t#__u64 gprs [ 16 ] ; t#__u32 acrs [ 16 ] ; t#__u64 crs [ 16 ] ; t#__u64 todpr ; t#__u64 cputm ; t#__u64 ckc ; t#__u64 pp ; t#__u64 gbea ; t#__u64 pft ; t#__u64 pfs ; t#__u64 pfc ; union { t#__u64 vrs [ 32 ] [ 2 ] ; t#__u64 fprs [ 16 ] ; } ; t#__u8 reserved [ 512 ] ; t#__u32 fpc ; t#__u8 bpbc : 1 ; t#__u8 reserved2 : 7 ; t#__u8 padding1 [ 51 ] ; t#__u8 riccb [ 64 ] ; t#__u8 padding2 [ 192 ] ; union { t#__u8 sdnx [ ( 1UL << 8 ) ] ; struct { t#__u64 reserved1 [ 2 ] ; t#__u64 gscb [ 4 ] ; t#__u64 etoken ; t#__u64 etoken_extension ; } ; } ; } 
s#kvm_run struct kvm_run { t#__u8 request_interrupt_window ; t#__u8 immediate_exit ; t#__u8 padding1 [ 6 ] ; t#__u32 exit_reason ; t#__u8 ready_for_interrupt_injection ; t#__u8 if_flag ; t#__u16 flags ; t#__u64 cr8 ; t#__u64 apic_base ; t#__u64 psw_mask ; t#__u64 psw_addr ; union { struct { t#__u64 hardware_exit_reason ; } hw ; struct { t#__u64 hardware_entry_failure_reason ; } fail_entry ; struct { t#__u32 exception ; t#__u32 error_code ; } ex ; struct { t#__u8 direction ; t#__u8 size ; t#__u16 port ; t#__u32 count ; t#__u64 data_offset ; } io ; struct { s#kvm_debug_exit_arch arch ; } debug ; struct { t#__u64 phys_addr ; t#__u8 data [ 8 ] ; t#__u32 len ; t#__u8 is_write ; } mmio ; struct { t#__u64 nr ; t#__u64 args [ 6 ] ; t#__u64 ret ; t#__u32 longmode ; t#__u32 pad ; } hypercall ; struct { t#__u64 rip ; t#__u32 is_write ; t#__u32 pad ; } tpr_access ; struct { t#__u8 icptcode ; t#__u16 ipa ; t#__u32 ipb ; } s390_sieic ; t#__u64 s390_reset_flags ; struct { t#__u64 trans_exc_code ; t#__u32 pgm_code ; } s390_ucontrol ; struct { t#__u32 dcrn ; t#__u32 data ; t#__u8 is_write ; } dcr ; struct { t#__u32 suberror ; t#__u32 ndata ; t#__u64 data [ 16 ] ; } internal ; struct { t#__u64 gprs [ 32 ] ; } osi ; struct { t#__u64 nr ; t#__u64 ret ; t#__u64 args [ 9 ] ; } papr_hcall ; struct { t#__u16 subchannel_id ; t#__u16 subchannel_nr ; t#__u32 io_int_parm ; t#__u32 io_int_word ; t#__u32 ipb ; t#__u8 dequeued ; } s390_tsch ; struct { t#__u32 epr ; } epr ; struct { t#__u32 type ; t#__u64 flags ; } system_event ; struct { t#__u64 addr ; t#__u8 ar ; t#__u8 reserved ; t#__u8 fc ; t#__u8 sel1 ; t#__u16 sel2 ; } s390_stsi ; struct { t#__u8 vector ; } eoi ; s#kvm_hyperv_exit hyperv ; char padding [ 256 ] ; } ; t#__u64 kvm_valid_regs ; t#__u64 kvm_dirty_regs ; union { s#kvm_sync_regs regs ; char padding [ 2048 ] ; } s ; } 
s#swait_queue_head struct swait_queue_head { t#raw_spinlock_t lock ; s#list_head task_list ; } 
s#kvm_vcpu_stat struct kvm_vcpu_stat { t#u64 exit_userspace ; t#u64 exit_null ; t#u64 exit_external_request ; t#u64 exit_external_interrupt ; t#u64 exit_stop_request ; t#u64 exit_validity ; t#u64 exit_instruction ; t#u64 exit_pei ; t#u64 halt_successful_poll ; t#u64 halt_attempted_poll ; t#u64 halt_poll_invalid ; t#u64 halt_wakeup ; t#u64 instruction_lctl ; t#u64 instruction_lctlg ; t#u64 instruction_stctl ; t#u64 instruction_stctg ; t#u64 exit_program_interruption ; t#u64 exit_instr_and_program ; t#u64 exit_operation_exception ; t#u64 deliver_external_call ; t#u64 deliver_emergency_signal ; t#u64 deliver_service_signal ; t#u64 deliver_virtio_interrupt ; t#u64 deliver_stop_signal ; t#u64 deliver_prefix_signal ; t#u64 deliver_restart_signal ; t#u64 deliver_program_int ; t#u64 deliver_io_int ; t#u64 exit_wait_state ; t#u64 instruction_epsw ; t#u64 instruction_gs ; t#u64 instruction_io_other ; t#u64 instruction_lpsw ; t#u64 instruction_lpswe ; t#u64 instruction_pfmf ; t#u64 instruction_ptff ; t#u64 instruction_sck ; t#u64 instruction_sckpf ; t#u64 instruction_stidp ; t#u64 instruction_spx ; t#u64 instruction_stpx ; t#u64 instruction_stap ; t#u64 instruction_iske ; t#u64 instruction_ri ; t#u64 instruction_rrbe ; t#u64 instruction_sske ; t#u64 instruction_ipte_interlock ; t#u64 instruction_stsi ; t#u64 instruction_stfl ; t#u64 instruction_tb ; t#u64 instruction_tpi ; t#u64 instruction_tprot ; t#u64 instruction_tsch ; t#u64 instruction_sie ; t#u64 instruction_essa ; t#u64 instruction_sthyi ; t#u64 instruction_sigp_sense ; t#u64 instruction_sigp_sense_running ; t#u64 instruction_sigp_external_call ; t#u64 instruction_sigp_emergency ; t#u64 instruction_sigp_cond_emergency ; t#u64 instruction_sigp_start ; t#u64 instruction_sigp_stop ; t#u64 instruction_sigp_stop_store_status ; t#u64 instruction_sigp_store_status ; t#u64 instruction_sigp_store_adtl_status ; t#u64 instruction_sigp_arch ; t#u64 instruction_sigp_prefix ; t#u64 instruction_sigp_restart ; t#u64 instruction_sigp_init_cpu_reset ; t#u64 instruction_sigp_cpu_reset ; t#u64 instruction_sigp_unknown ; t#u64 diagnose_10 ; t#u64 diagnose_44 ; t#u64 diagnose_9c ; t#u64 diagnose_258 ; t#u64 diagnose_308 ; t#u64 diagnose_500 ; t#u64 diagnose_other ; } 
t#gpa_t typedef t#u64 gpa_t 
s#kvm_mmio_fragment struct kvm_mmio_fragment { t#gpa_t gpa ; void * data ; unsigned len ; } 
s#kvm_s390_mchk_info struct kvm_s390_mchk_info { t#__u64 cr14 ; t#__u64 mcic ; t#__u64 failing_storage_address ; t#__u32 ext_damage_code ; t#__u32 pad ; t#__u8 fixed_logout [ 16 ] ; } 
s#kvm_s390_ext_info struct kvm_s390_ext_info { t#__u32 ext_params ; t#__u32 pad ; t#__u64 ext_params2 ; } 
s#kvm_s390_float_interrupt struct kvm_s390_float_interrupt { unsigned long pending_irqs ; t#spinlock_t lock ; s#list_head lists [ 10 ] ; int counters [ 4 ] ; s#kvm_s390_mchk_info mchk ; s#kvm_s390_ext_info srv_signal ; int next_rr_cpu ; unsigned long idle_mask [ ( ( ( 255 ) + ( 8 * sizeof ( long ) ) - 1 ) / ( 8 * sizeof ( long ) ) ) ] ; s#mutex ais_lock ; t#u8 simm ; t#u8 nimm ; } 
s#kvm_s390_io_info struct kvm_s390_io_info { t#__u16 subchannel_id ; t#__u16 subchannel_nr ; t#__u32 io_int_parm ; t#__u32 io_int_word ; } 
s#kvm_s390_pgm_info struct kvm_s390_pgm_info { t#__u64 trans_exc_code ; t#__u64 mon_code ; t#__u64 per_address ; t#__u32 data_exc_code ; t#__u16 code ; t#__u16 mon_class_nr ; t#__u8 per_code ; t#__u8 per_atmid ; t#__u8 exc_access_id ; t#__u8 per_access_id ; t#__u8 op_access_id ; t#__u8 flags ; t#__u8 pad [ 2 ] ; } 
s#kvm_s390_emerg_info struct kvm_s390_emerg_info { t#__u16 code ; } 
s#kvm_s390_extcall_info struct kvm_s390_extcall_info { t#__u16 code ; } 
s#kvm_s390_prefix_info struct kvm_s390_prefix_info { t#__u32 address ; } 
s#kvm_s390_stop_info struct kvm_s390_stop_info { t#__u32 flags ; } 
s#kvm_s390_irq_payload struct kvm_s390_irq_payload { s#kvm_s390_io_info io ; s#kvm_s390_ext_info ext ; s#kvm_s390_pgm_info pgm ; s#kvm_s390_emerg_info emerg ; s#kvm_s390_extcall_info extcall ; s#kvm_s390_prefix_info prefix ; s#kvm_s390_stop_info stop ; s#kvm_s390_mchk_info mchk ; } 
s#kvm_s390_local_interrupt struct kvm_s390_local_interrupt { t#spinlock_t lock ; s#kvm_s390_float_interrupt * float_int ; s#swait_queue_head * wq ; t#atomic_t * cpuflags ; unsigned long sigp_emerg_pending [ ( ( ( 255 ) + ( 8 * sizeof ( long ) ) - 1 ) / ( 8 * sizeof ( long ) ) ) ] ; s#kvm_s390_irq_payload irq ; unsigned long pending_irqs ; } 
s#gmap struct gmap { s#list_head list ; s#list_head crst_list ; s#mm_struct * mm ; s#radix_tree_root guest_to_host ; s#radix_tree_root host_to_guest ; t#spinlock_t guest_table_lock ; t#atomic_t ref_count ; unsigned long * table ; unsigned long asce ; unsigned long asce_end ; void * private ; t#bool pfault_enabled ; s#radix_tree_root host_to_rmap ; s#list_head children ; s#list_head pt_list ; t#spinlock_t shadow_lock ; s#gmap * parent ; unsigned long orig_asce ; int edat_level ; t#bool removed ; t#bool initialized ; } 
s#kvm_hw_bp_info_arch struct kvm_hw_bp_info_arch { unsigned long addr ; int len ; } 
s#kvm_hw_wp_info_arch struct kvm_hw_wp_info_arch { unsigned long addr ; unsigned long phys_addr ; int len ; char * old_data ; } 
s#kvm_guestdbg_info_arch struct kvm_guestdbg_info_arch { unsigned long cr0 ; unsigned long cr9 ; unsigned long cr10 ; unsigned long cr11 ; s#kvm_hw_bp_info_arch * hw_bp_info ; s#kvm_hw_wp_info_arch * hw_wp_info ; int nr_hw_bp ; int nr_hw_wp ; unsigned long last_bp ; } 
s#kvm_vcpu_arch struct kvm_vcpu_arch { s#kvm_s390_sie_block * sie_block ; s#kvm_s390_sie_block * vsie_block ; unsigned int host_acrs [ 16 ] ; s#gs_cb * host_gscb ; s#fpu host_fpregs ; s#kvm_s390_local_interrupt local_int ; s#hrtimer ckc_timer ; s#kvm_s390_pgm_info pgm ; s#gmap * gmap ; s#gmap * enabled_gmap ; s#kvm_guestdbg_info_arch guestdbg ; unsigned long pfault_token ; unsigned long pfault_select ; unsigned long pfault_compare ; t#bool cputm_enabled ; t#seqcount_t cputm_seqcount ; t#__u64 cputm_start ; t#bool gs_enabled ; } 
s#kvm_vcpu struct kvm_vcpu { s#kvm * kvm ; s#preempt_notifier preempt_notifier ; int cpu ; int vcpu_id ; int srcu_idx ; int mode ; unsigned long requests ; unsigned long guest_debug ; int pre_pcpu ; s#list_head blocked_vcpu_list ; s#mutex mutex ; s#kvm_run * run ; int guest_xcr0_loaded ; s#swait_queue_head wq ; s#pid * pid ; int sigset_active ; t#sigset_t sigset ; s#kvm_vcpu_stat stat ; unsigned int halt_poll_ns ; t#bool valid_wakeup ; int mmio_needed ; int mmio_read_completed ; int mmio_is_write ; int mmio_cur_fragment ; int mmio_nr_fragments ; s#kvm_mmio_fragment mmio_fragments [ 2 ] ; struct { t#u32 queued ; s#list_head queue ; s#list_head done ; t#spinlock_t lock ; } async_pf ; struct { t#bool in_spin_loop ; t#bool dy_eligible ; } spin_loop ; t#bool preempted ; s#kvm_vcpu_arch arch ; s#dentry * debugfs_dentry ; } 
s##kvm_io_device
s#kvm_io_range struct kvm_io_range { t#gpa_t addr ; int len ; s#kvm_io_device * dev ; } 
s#kvm_io_bus struct kvm_io_bus { int dev_count ; int ioeventfd_count ; s#kvm_io_range range [ ] ; } 
E#KVM_NR_BUSES 4 
t#ulong typedef unsigned long ulong 
s#kvm_vm_stat struct kvm_vm_stat { t#ulong remote_tlb_flush ; } 
s#kvm_device_attr struct kvm_device_attr { t#__u32 flags ; t#__u32 group ; t#__u64 attr ; t#__u64 addr ; } 
s#kvm_device_ops struct kvm_device_ops { const char * name ; int ( * create ) ( s#kvm_device * , t#u32 ) ; void ( * init ) ( s#kvm_device * ) ; void ( * destroy ) ( s#kvm_device * ) ; int ( * set_attr ) ( s#kvm_device * , s#kvm_device_attr * ) ; int ( * get_attr ) ( s#kvm_device * , s#kvm_device_attr * ) ; int ( * has_attr ) ( s#kvm_device * , s#kvm_device_attr * ) ; long ( * ioctl ) ( s#kvm_device * , unsigned int , unsigned long ) ; } 
s#kvm_device struct kvm_device { s#kvm_device_ops * ops ; s#kvm * kvm ; void * private ; s#list_head vm_node ; } 
s#s390_io_adapter struct s390_io_adapter { unsigned int id ; int isc ; t#bool maskable ; t#bool masked ; t#bool swap ; t#bool suppressible ; s#rw_semaphore maps_lock ; s#list_head maps ; t#atomic_t nr_maps ; } 
s#kvm_s390_apcb0 struct kvm_s390_apcb0 { t#__u64 apm [ 1 ] ; t#__u64 aqm [ 1 ] ; t#__u64 adm [ 1 ] ; t#__u64 reserved18 ; } 
s#kvm_s390_apcb1 struct kvm_s390_apcb1 { t#__u64 apm [ 4 ] ; t#__u64 aqm [ 4 ] ; t#__u64 adm [ 4 ] ; t#__u64 reserved60 [ 4 ] ; } 
s#kvm_s390_crypto_cb struct kvm_s390_crypto_cb { s#kvm_s390_apcb0 apcb0 ; t#__u8 reserved20 [ 0x0048 - 0x0020 ] ; t#__u8 dea_wrapping_key_mask [ 24 ] ; t#__u8 aes_wrapping_key_mask [ 32 ] ; s#kvm_s390_apcb1 apcb1 ; } 
s#sie_page2 struct sie_page2 { t#__u64 fac_list [ ( ( 1 << 11 ) / sizeof ( u64 ) ) ] ; s#kvm_s390_crypto_cb crycb ; t#u8 reserved900 [ 0x1000 - 0x900 ] ; } 
s#kvm_s390_vm_cpu_subfunc struct kvm_s390_vm_cpu_subfunc { t#__u8 plo [ 32 ] ; t#__u8 ptff [ 16 ] ; t#__u8 kmac [ 16 ] ; t#__u8 kmc [ 16 ] ; t#__u8 km [ 16 ] ; t#__u8 kimd [ 16 ] ; t#__u8 klmd [ 16 ] ; t#__u8 pckmo [ 16 ] ; t#__u8 kmctr [ 16 ] ; t#__u8 kmf [ 16 ] ; t#__u8 kmo [ 16 ] ; t#__u8 pcc [ 16 ] ; t#__u8 ppno [ 16 ] ; t#__u8 kma [ 16 ] ; t#__u8 kdsa [ 16 ] ; t#__u8 sortl [ 32 ] ; t#__u8 dfltcc [ 32 ] ; t#__u8 reserved [ 1728 ] ; } 
s#kvm_s390_cpu_model struct kvm_s390_cpu_model { t#__u64 fac_mask [ ( ( 1 << 11 ) / sizeof ( u64 ) ) ] ; s#kvm_s390_vm_cpu_subfunc subfuncs ; t#__u64 * fac_list ; t#u64 cpuid ; unsigned short ibc ; } 
s#kvm_s390_crypto struct kvm_s390_crypto { s#kvm_s390_crypto_cb * crycb ; t#__u32 crycbd ; t#__u8 aes_kw ; t#__u8 dea_kw ; t#__u8 apie ; } 
s#kvm_s390_vsie struct kvm_s390_vsie { s#mutex mutex ; s#radix_tree_root addr_to_page ; int page_count ; int next ; s#page * pages [ 255 ] ; } 
s#kvm_s390_migration_state struct kvm_s390_migration_state { unsigned long bitmap_size ; t#atomic64_t dirty_pages ; unsigned long * pgste_bitmap ; } 
s#kvm_arch struct kvm_arch { void * sca ; int use_esca ; t#rwlock_t sca_lock ; t#debug_info_t * dbf ; s#kvm_s390_float_interrupt float_int ; s#kvm_device * flic ; s#gmap * gmap ; unsigned long mem_limit ; int css_support ; int use_irqchip ; int use_cmma ; int use_pfmfi ; int use_skf ; int user_cpu_state_ctrl ; int user_sigp ; int user_stsi ; int user_instr0 ; s#s390_io_adapter * adapters [ ( ( 7 + 1 ) * 8 ) ] ; t#wait_queue_head_t ipte_wq ; int ipte_lock_count ; s#mutex ipte_mutex ; t#spinlock_t start_stop_lock ; s#sie_page2 * sie_page2 ; s#kvm_s390_cpu_model model ; s#kvm_s390_crypto crypto ; s#kvm_s390_vsie vsie ; t#u8 epdx ; t#u64 epoch ; s#kvm_s390_migration_state * migration_state ; unsigned long cpu_feat [ ( ( ( 1024 ) + ( 8 * sizeof ( long ) ) - 1 ) / ( 8 * sizeof ( long ) ) ) ] ; } 
s#kvm_irq_routing_table struct kvm_irq_routing_table { int chip [ 1 ] [ 4096 ] ; t#u32 nr_rt_entries ; s#hlist_head map [ 0 ] ; } 
s#kvm_stat_data struct kvm_stat_data { int offset ; s#kvm * kvm ; } 
s#srcu_node struct srcu_node { t#spinlock_t lock ; unsigned long srcu_have_cbs [ 4 ] ; unsigned long srcu_data_have_cbs [ 4 ] ; unsigned long srcu_gp_seq_needed_exp ; s#srcu_node * srcu_parent ; int grplo ; int grphi ; } 
s#rcu_segcblist struct rcu_segcblist { s#callback_head * head ; s#callback_head * * tails [ 4 ] ; unsigned long gp_seq [ 4 ] ; long len ; long len_lazy ; } 
s#srcu_data struct srcu_data { unsigned long srcu_lock_count [ 2 ] ; unsigned long srcu_unlock_count [ 2 ] ; t#spinlock_t lock __attribute__ ( ( __aligned__ ( 1 << ( 8 ) ) ) ) ; s#rcu_segcblist srcu_cblist ; unsigned long srcu_gp_seq_needed ; unsigned long srcu_gp_seq_needed_exp ; t#bool srcu_cblist_invoking ; s#delayed_work work ; s#callback_head srcu_barrier_head ; s#srcu_node * mynode ; unsigned long grpmask ; int cpu ; s#srcu_struct * sp ; } 
s#srcu_struct struct srcu_struct { s#srcu_node node [ ( 1 + ( ( ( 256 ) + ( ( 16 ) ) - 1 ) / ( ( 16 ) ) ) ) ] ; s#srcu_node * level [ 2 + 1 ] ; s#mutex srcu_cb_mutex ; t#spinlock_t gp_lock ; s#mutex srcu_gp_mutex ; unsigned int srcu_idx ; unsigned long srcu_gp_seq ; unsigned long srcu_gp_seq_needed ; unsigned long srcu_gp_seq_needed_exp ; unsigned long srcu_last_gp_end ; s#srcu_data * sda ; unsigned long srcu_barrier_seq ; s#mutex srcu_barrier_mutex ; s#completion srcu_barrier_completion ; t#atomic_t srcu_barrier_cpu_cnt ; s#delayed_work work ; } 
s#kvm struct kvm { t#spinlock_t mmu_lock ; s#mutex slots_lock ; s#mm_struct * mm ; s#kvm_memslots * memslots [ 1 ] ; s#kvm_vcpu * vcpus [ 255 ] ; t#atomic_t online_vcpus ; int created_vcpus ; int last_boosted_vcpu ; s#list_head vm_list ; s#mutex lock ; s#kvm_io_bus * buses [ E#KVM_NR_BUSES ] ; struct { t#spinlock_t lock ; s#list_head items ; s#list_head resampler_list ; s#mutex resampler_lock ; } irqfds ; s#list_head ioeventfds ; s#kvm_vm_stat stat ; s#kvm_arch arch ; t#refcount_t users_count ; s#mutex irq_lock ; s#kvm_irq_routing_table * irq_routing ; s#hlist_head irq_ack_notifier_list ; long tlbs_dirty ; s#list_head devices ; s#dentry * debugfs_dentry ; s#kvm_stat_data * * debugfs_stat_data ; s#srcu_struct srcu ; s#srcu_struct irq_srcu ; t#pid_t userspace_pid ; } 
kvm_arch_crypto_clear_masks void kvm_arch_crypto_clear_masks ( s#kvm * ) 

/* arch/s390/lib/delay.o */
__delay void __delay ( unsigned long ) 
__udelay void __udelay ( unsigned long long ) 
__ndelay void __ndelay ( unsigned long long ) 

/* arch/s390/lib/find.o */
find_first_bit_inv unsigned long find_first_bit_inv ( const unsigned long * , unsigned long ) 
find_next_bit_inv unsigned long find_next_bit_inv ( const unsigned long * , unsigned long , unsigned long ) 

/* arch/s390/lib/mem.o */
memmove extern void * memmove ( void * , const void * , t#size_t ) 
memset extern void * memset ( void * , int , t#size_t ) 
memcpy extern void * memcpy ( void * , const void * , t#size_t ) 

/* arch/s390/lib/spinlock.o */
arch_spin_lock_wait void arch_spin_lock_wait ( t#arch_spinlock_t * ) 
arch_spin_lock_wait_flags void arch_spin_lock_wait_flags ( t#arch_spinlock_t * , unsigned long ) 
arch_spin_trylock_retry int arch_spin_trylock_retry ( t#arch_spinlock_t * ) 
_raw_read_lock_wait extern void _raw_read_lock_wait ( t#arch_rwlock_t * ) 
_raw_read_trylock_retry extern int _raw_read_trylock_retry ( t#arch_rwlock_t * ) 
_raw_write_lock_wait extern void _raw_write_lock_wait ( t#arch_rwlock_t * , int ) 
_raw_write_trylock_retry extern int _raw_write_trylock_retry ( t#arch_rwlock_t * ) 
arch_lock_relax void arch_lock_relax ( int ) 

/* arch/s390/lib/string.o */
strlen t#size_t strlen ( const char * ) 
strnlen t#size_t strnlen ( const char * , t#size_t ) 
strcpy char * strcpy ( char * , const char * ) 
strlcpy extern t#size_t strlcpy ( char * , const char * , t#size_t ) 
strncpy extern char * strncpy ( char * , const char * , t#size_t ) 
strcat char * strcat ( char * , const char * ) 
strlcat extern t#size_t strlcat ( char * , const char * , t#size_t ) 
strncat extern char * strncat ( char * , const char * , t#size_t ) 
strcmp extern int strcmp ( const char * , const char * ) 
strrchr extern char * strrchr ( const char * , int ) 
strstr extern char * strstr ( const char * , const char * ) 
memchr void * memchr ( const void * , int , t#size_t ) 
memcmp extern int memcmp ( const void * , const void * , t#size_t ) 
memscan void * memscan ( void * , int , t#size_t ) 

/* arch/s390/lib/uaccess.o */
raw_copy_from_user unsigned long raw_copy_from_user ( void * , const void * , unsigned long ) 
raw_copy_to_user unsigned long raw_copy_to_user ( void * , const void * , unsigned long ) 
raw_copy_in_user unsigned long raw_copy_in_user ( void * , const void * , unsigned long ) 
__clear_user unsigned long __clear_user ( void * , unsigned long ) 
__strnlen_user unsigned long __strnlen_user ( const char * , unsigned long ) 
__strncpy_from_user long __strncpy_from_user ( char * , const char * , long ) 

/* arch/s390/lib/xor.o */
s#xor_block_template struct xor_block_template { s#xor_block_template * next ; const char * name ; int speed ; void ( * do_2 ) ( unsigned long , unsigned long * , unsigned long * ) ; void ( * do_3 ) ( unsigned long , unsigned long * , unsigned long * , unsigned long * ) ; void ( * do_4 ) ( unsigned long , unsigned long * , unsigned long * , unsigned long * , unsigned long * ) ; void ( * do_5 ) ( unsigned long , unsigned long * , unsigned long * , unsigned long * , unsigned long * , unsigned long * ) ; } 
xor_block_xc s#xor_block_template xor_block_xc 

/* arch/s390/mm/extmem.o */
segment_load int segment_load ( char * , int , unsigned long * , unsigned long * ) 
segment_unload void segment_unload ( char * ) 
segment_save void segment_save ( char * ) 
segment_type int segment_type ( char * ) 
segment_modify_shared int segment_modify_shared ( char * , int ) 
segment_warning void segment_warning ( int , char * ) 

/* arch/s390/mm/gmap.o */
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##compat_timespec
s##pollfd
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##vfsmount
s##posix_acl
s##module
s##device_private
s##sock
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##fwnode_handle
s##iommu_group
s##iommu_fwspec
s##workqueue_struct
s##kstatfs
s##iov_iter
s##hd_struct
s##gendisk
s##request_queue
s##kmem_cache
s##eventfd_ctx
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##mtd_info
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##mempolicy
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_plug
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s#anon_vma struct anon_vma { s#anon_vma * root ; s#rw_semaphore rwsem ; t#atomic_t refcount ; unsigned degree ; s#anon_vma * parent ; s#rb_root rb_root ; } 
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
gmap_create s#gmap * gmap_create ( s#mm_struct * , unsigned long ) 
gmap_get s#gmap * gmap_get ( s#gmap * ) 
gmap_put void gmap_put ( s#gmap * ) 
gmap_remove void gmap_remove ( s#gmap * ) 
gmap_enable void gmap_enable ( s#gmap * ) 
gmap_disable void gmap_disable ( s#gmap * ) 
gmap_get_enabled s#gmap * gmap_get_enabled ( void ) 
gmap_unmap_segment int gmap_unmap_segment ( s#gmap * , unsigned long , unsigned long ) 
gmap_map_segment int gmap_map_segment ( s#gmap * , unsigned long , unsigned long , unsigned long ) 
__gmap_translate unsigned long __gmap_translate ( s#gmap * , unsigned long ) 
gmap_translate unsigned long gmap_translate ( s#gmap * , unsigned long ) 
gmap_fault int gmap_fault ( s#gmap * , unsigned long , unsigned int ) 
__gmap_zap void __gmap_zap ( s#gmap * , unsigned long ) 
gmap_discard void gmap_discard ( s#gmap * , unsigned long , unsigned long ) 
s#gmap_notifier struct gmap_notifier { s#list_head list ; s#callback_head rcu ; void ( * notifier_call ) ( s#gmap * , unsigned long , unsigned long ) ; } 
gmap_register_pte_notifier void gmap_register_pte_notifier ( s#gmap_notifier * ) 
gmap_unregister_pte_notifier void gmap_unregister_pte_notifier ( s#gmap_notifier * ) 
gmap_mprotect_notify int gmap_mprotect_notify ( s#gmap * , unsigned long , unsigned long , int ) 
gmap_read_table int gmap_read_table ( s#gmap * , unsigned long , unsigned long * ) 
gmap_shadow_valid int gmap_shadow_valid ( s#gmap * , unsigned long , int ) 
gmap_shadow s#gmap * gmap_shadow ( s#gmap * , unsigned long , int ) 
gmap_shadow_r2t int gmap_shadow_r2t ( s#gmap * , unsigned long , unsigned long , int ) 
gmap_shadow_r3t int gmap_shadow_r3t ( s#gmap * , unsigned long , unsigned long , int ) 
gmap_shadow_sgt int gmap_shadow_sgt ( s#gmap * , unsigned long , unsigned long , int ) 
gmap_shadow_pgt_lookup int gmap_shadow_pgt_lookup ( s#gmap * , unsigned long , unsigned long * , int * , int * ) 
gmap_shadow_pgt int gmap_shadow_pgt ( s#gmap * , unsigned long , unsigned long , int ) 
gmap_shadow_page int gmap_shadow_page ( s#gmap * , unsigned long , t#pte_t ) 
ptep_notify void ptep_notify ( s#mm_struct * , unsigned long , t#pte_t * , unsigned long ) 
gmap_pmdp_invalidate void gmap_pmdp_invalidate ( s#mm_struct * , unsigned long ) 
gmap_pmdp_csp void gmap_pmdp_csp ( s#mm_struct * , unsigned long ) 
gmap_pmdp_idte_local void gmap_pmdp_idte_local ( s#mm_struct * , unsigned long ) 
gmap_pmdp_idte_global void gmap_pmdp_idte_global ( s#mm_struct * , unsigned long ) 
gmap_sync_dirty_log_pmd void gmap_sync_dirty_log_pmd ( s#gmap * , unsigned long [ 4 ] , unsigned long , unsigned long ) 
s390_enable_sie extern int s390_enable_sie ( void ) 
s390_enable_skey extern int s390_enable_skey ( void ) 
s390_reset_cmma extern void s390_reset_cmma ( s#mm_struct * ) 

/* arch/s390/mm/init.o */
empty_zero_page extern unsigned long empty_zero_page 
zero_page_mask extern unsigned long zero_page_mask 
s##device_private
s##sock
s##vfsmount
s##posix_acl
s##module
s##workqueue_struct
s##bpf_prog_array
s##cgroup_taskset
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##iov_iter
s##hd_struct
s##gendisk
s##request_queue
s##kmem_cache
s##eventfd_ctx
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##mmu_notifier_mm
s##xol_area
s##compat_timespec
s##pollfd
s##fs_pin
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_plug
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##mtd_info
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s390_dma_ops extern const s#dma_map_ops * s390_dma_ops 

/* arch/s390/mm/maccess.o */
xlate_dev_mem_ptr void * xlate_dev_mem_ptr ( t#phys_addr_t ) 
unxlate_dev_mem_ptr void unxlate_dev_mem_ptr ( t#phys_addr_t , void * ) 

/* arch/s390/mm/pgalloc.o */
page_table_allocate_pgste extern int page_table_allocate_pgste 

/* arch/s390/mm/pgtable.o */
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##compat_timespec
s##pollfd
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##vfsmount
s##posix_acl
s##module
s##device_private
s##sock
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##fwnode_handle
s##iommu_group
s##iommu_fwspec
s##workqueue_struct
s##kstatfs
s##iov_iter
s##hd_struct
s##gendisk
s##request_queue
s##kmem_cache
s##eventfd_ctx
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##mtd_info
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##mempolicy
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_plug
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
ptep_xchg_direct t#pte_t ptep_xchg_direct ( s#mm_struct * , unsigned long , t#pte_t * , t#pte_t ) 
ptep_xchg_lazy t#pte_t ptep_xchg_lazy ( s#mm_struct * , unsigned long , t#pte_t * , t#pte_t ) 
ptep_modify_prot_start t#pte_t ptep_modify_prot_start ( s#mm_struct * , unsigned long , t#pte_t * ) 
ptep_modify_prot_commit void ptep_modify_prot_commit ( s#mm_struct * , unsigned long , t#pte_t * , t#pte_t ) 
pmdp_xchg_direct t#pmd_t pmdp_xchg_direct ( s#mm_struct * , unsigned long , t#pmd_t * , t#pmd_t ) 
pmdp_xchg_lazy t#pmd_t pmdp_xchg_lazy ( s#mm_struct * , unsigned long , t#pmd_t * , t#pmd_t ) 
pudp_xchg_direct t#pud_t pudp_xchg_direct ( s#mm_struct * , unsigned long , t#pud_t * , t#pud_t ) 
ptep_test_and_clear_uc t#bool ptep_test_and_clear_uc ( s#mm_struct * , unsigned long , t#pte_t * ) 
set_guest_storage_key int set_guest_storage_key ( s#mm_struct * , unsigned long , unsigned char , t#bool ) 
cond_set_guest_storage_key int cond_set_guest_storage_key ( s#mm_struct * , unsigned long , unsigned char , unsigned char * , t#bool , t#bool , t#bool ) 
reset_guest_reference_bit int reset_guest_reference_bit ( s#mm_struct * , unsigned long ) 
get_guest_storage_key int get_guest_storage_key ( s#mm_struct * , unsigned long , unsigned char * ) 
pgste_perform_essa int pgste_perform_essa ( s#mm_struct * , unsigned long , int , unsigned long * , unsigned long * ) 
set_pgste_bits int set_pgste_bits ( s#mm_struct * , unsigned long , unsigned long , unsigned long ) 
get_pgste int get_pgste ( s#mm_struct * , unsigned long , unsigned long * ) 

/* arch/s390/net/pnet.o */
s##device_private
s##sock
s##seq_file
s##vfsmount
s##posix_acl
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
pnet_id_by_dev_port int pnet_id_by_dev_port ( s#device * , unsigned short , t#u8 * ) 

/* arch/s390/numa/numa.o */
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##module
s##writeback_control
s##kstatfs
s##seq_file
s##mem_cgroup
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##user_namespace
s##iov_iter
s##poll_table_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cred
s##bdi_writeback
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##device_private
s##sock
s##kernfs_open_node
s##kernfs_iattrs
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kmem_cache
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##compat_timespec
s##pollfd
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
t#pg_data_t typedef s#pglist_data pg_data_t 
node_data extern t#pg_data_t * node_data [ ] 
node_to_cpumask_map extern t#cpumask_t node_to_cpumask_map [ ( 1 << 4 ) ] 
__node_distance int __node_distance ( int , int ) 

/* arch/s390/pci/pci.o */
s#zpci_iomap_entry struct zpci_iomap_entry { t#u32 fh ; t#u8 bar ; t#u16 count ; } 
zpci_iomap_start extern s#zpci_iomap_entry * zpci_iomap_start 
s##proc_dir_entry
s##hotplug_slot
s##sock
s##vfsmount
s##posix_acl
s##module
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##compat_timespec
s##pollfd
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##iov_iter
s##swap_info_struct
s##device_private
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s#pci_slot struct pci_slot { s#pci_bus * bus ; s#list_head list ; s#hotplug_slot * hotplug ; unsigned char number ; s#kobject kobj ; } 
s#pci_device_id struct pci_device_id { t#__u32 vendor , device ; t#__u32 subvendor , subdevice ; t#__u32 class , class_mask ; t#kernel_ulong_t driver_data ; } 
t#pci_ers_result_t typedef unsigned int pci_ers_result_t 
e#pci_channel_state enum pci_channel_state { pci_channel_io_normal = ( pci_channel_state_t ) 1 , pci_channel_io_frozen = ( pci_channel_state_t ) 2 , pci_channel_io_perm_failure = ( pci_channel_state_t ) 3 , } 
s#pci_error_handlers struct pci_error_handlers { t#pci_ers_result_t ( * error_detected ) ( s#pci_dev * , e#pci_channel_state ) ; t#pci_ers_result_t ( * mmio_enabled ) ( s#pci_dev * ) ; t#pci_ers_result_t ( * slot_reset ) ( s#pci_dev * ) ; void ( * reset_prepare ) ( s#pci_dev * ) ; void ( * reset_done ) ( s#pci_dev * ) ; void ( * resume ) ( s#pci_dev * ) ; } 
s#pci_dynids struct pci_dynids { t#spinlock_t lock ; s#list_head list ; } 
s#pci_driver struct pci_driver { s#list_head node ; const char * name ; const s#pci_device_id * id_table ; int ( * probe ) ( s#pci_dev * , const s#pci_device_id * ) ; void ( * remove ) ( s#pci_dev * ) ; int ( * suspend ) ( s#pci_dev * , t#pm_message_t ) ; int ( * suspend_late ) ( s#pci_dev * , t#pm_message_t ) ; int ( * resume_early ) ( s#pci_dev * ) ; int ( * resume ) ( s#pci_dev * ) ; void ( * shutdown ) ( s#pci_dev * ) ; int ( * sriov_configure ) ( s#pci_dev * , int ) ; const s#pci_error_handlers * err_handler ; const s#attribute_group * * groups ; s#device_driver driver ; s#pci_dynids dynids ; } 
t#pci_power_t typedef int pci_power_t 
t#pci_channel_state_t typedef unsigned int pci_channel_state_t 
E#PCI_IOV_RESOURCES ( 5 ) + 2 
E#PCI_BRIDGE_RESOURCES ( E#PCI_IOV_RESOURCES + 6 - 1 ) + 1 
E#PCI_NUM_RESOURCES ( E#PCI_BRIDGE_RESOURCES + 4 - 1 ) + 1 
E#DEVICE_COUNT_RESOURCE E#PCI_NUM_RESOURCES 
t#pci_dev_flags_t typedef unsigned short pci_dev_flags_t 
s##pci_vpd
s##pci_sriov
s#pci_dev struct pci_dev { s#list_head bus_list ; s#pci_bus * bus ; s#pci_bus * subordinate ; void * sysdata ; s#proc_dir_entry * procent ; s#pci_slot * slot ; unsigned int devfn ; unsigned short vendor ; unsigned short device ; unsigned short subsystem_vendor ; unsigned short subsystem_device ; unsigned int class ; t#u8 revision ; t#u8 hdr_type ; t#u8 pcie_cap ; t#u8 msi_cap ; t#u8 msix_cap ; t#u8 pcie_mpss : 3 ; t#u8 rom_base_reg ; t#u8 pin ; t#u16 pcie_flags_reg ; unsigned long * dma_alias_mask ; s#pci_driver * driver ; t#u64 dma_mask ; s#device_dma_parameters dma_parms ; t#pci_power_t current_state ; unsigned int imm_ready : 1 ; t#u8 pm_cap ; unsigned int pme_support : 5 ; unsigned int pme_poll : 1 ; unsigned int d1_support : 1 ; unsigned int d2_support : 1 ; unsigned int no_d1d2 : 1 ; unsigned int no_d3cold : 1 ; unsigned int bridge_d3 : 1 ; unsigned int d3cold_allowed : 1 ; unsigned int mmio_always_on : 1 ; unsigned int wakeup_prepared : 1 ; unsigned int runtime_d3cold : 1 ; unsigned int ignore_hotplug : 1 ; unsigned int hotplug_user_indicators : 1 ; unsigned int d3_delay ; unsigned int d3cold_delay ; unsigned int eetlp_prefix_path : 1 ; t#pci_channel_state_t error_state ; s#device dev ; int cfg_size ; unsigned int irq ; s#resource resource [ E#DEVICE_COUNT_RESOURCE ] ; t#bool match_driver ; unsigned int transparent : 1 ; unsigned int multifunction : 1 ; unsigned int is_busmaster : 1 ; unsigned int no_msi : 1 ; unsigned int no_64bit_msi : 1 ; unsigned int block_cfg_access : 1 ; unsigned int broken_parity_status : 1 ; unsigned int irq_reroute_variant : 2 ; unsigned int msi_enabled : 1 ; unsigned int msix_enabled : 1 ; unsigned int ari_enabled : 1 ; unsigned int ats_enabled : 1 ; unsigned int pasid_enabled : 1 ; unsigned int pri_enabled : 1 ; unsigned int is_managed : 1 ; unsigned int needs_freset : 1 ; unsigned int state_saved : 1 ; unsigned int is_physfn : 1 ; unsigned int is_virtfn : 1 ; unsigned int reset_fn : 1 ; unsigned int is_hotplug_bridge : 1 ; unsigned int is_thunderbolt : 1 ; unsigned int __aer_firmware_first_valid : 1 ; unsigned int __aer_firmware_first : 1 ; unsigned int broken_intx_masking : 1 ; unsigned int io_window_1k : 1 ; unsigned int irq_managed : 1 ; unsigned int has_secondary_link : 1 ; unsigned int non_compliant_bars : 1 ; t#pci_dev_flags_t dev_flags ; t#atomic_t enable_cnt ; t#u32 saved_config_space [ 16 ] ; s#hlist_head saved_cap_space ; s#bin_attribute * rom_attr ; int rom_attr_enabled ; s#bin_attribute * res_attr [ E#DEVICE_COUNT_RESOURCE ] ; s#bin_attribute * res_attr_wc [ E#DEVICE_COUNT_RESOURCE ] ; const s#attribute_group * * msi_irq_groups ; s#pci_vpd * vpd ; union { s#pci_sriov * sriov ; s#pci_dev * physfn ; } ; t#u16 ats_cap ; t#u8 ats_stu ; t#atomic_t ats_ref_cnt ; t#phys_addr_t rom ; t#size_t romlen ; char * driver_override ; unsigned long priv_flags ; } 
s#pci_ops struct pci_ops { int ( * add_bus ) ( s#pci_bus * ) ; void ( * remove_bus ) ( s#pci_bus * ) ; void * ( * map_bus ) ( s#pci_bus * , unsigned int , int ) ; int ( * read ) ( s#pci_bus * , unsigned int , int , int , t#u32 * ) ; int ( * write ) ( s#pci_bus * , unsigned int , int , int , t#u32 ) ; } 
s#msi_msg struct msi_msg { t#u32 address_lo ; t#u32 address_hi ; t#u32 data ; } 
s##platform_msi_priv_data
s#platform_msi_desc struct platform_msi_desc { s#platform_msi_priv_data * msi_priv_data ; t#u16 msi_index ; } 
s#fsl_mc_msi_desc struct fsl_mc_msi_desc { t#u16 msi_index ; } 
s#msi_desc struct msi_desc { s#list_head list ; unsigned int irq ; unsigned int nvec_used ; s#device * dev ; s#msi_msg msg ; s#cpumask * affinity ; union { struct { t#u32 masked ; struct { t#__u8 is_msix : 1 ; t#__u8 multiple : 3 ; t#__u8 multi_cap : 3 ; t#__u8 maskbit : 1 ; t#__u8 is_64 : 1 ; t#__u16 entry_nr ; unsigned default_irq ; } msi_attrib ; union { t#u8 mask_pos ; void * mask_base ; } ; } ; s#platform_msi_desc platform ; s#fsl_mc_msi_desc fsl_mc ; } ; } 
s#msi_controller struct msi_controller { s#module * owner ; s#device * dev ; s#device_node * of_node ; s#list_head list ; int ( * setup_irq ) ( s#msi_controller * , s#pci_dev * , s#msi_desc * ) ; int ( * setup_irqs ) ( s#msi_controller * , s#pci_dev * , int , int ) ; void ( * teardown_irq ) ( s#msi_controller * , unsigned int ) ; } 
t#pci_bus_flags_t typedef unsigned short pci_bus_flags_t 
s#pci_bus struct pci_bus { s#list_head node ; s#pci_bus * parent ; s#list_head children ; s#list_head devices ; s#pci_dev * self ; s#list_head slots ; s#resource * resource [ 4 ] ; s#list_head resources ; s#resource busn_res ; s#pci_ops * ops ; s#msi_controller * msi ; void * sysdata ; s#proc_dir_entry * procdir ; unsigned char number ; unsigned char primary ; unsigned char max_bus_speed ; unsigned char cur_bus_speed ; char name [ 48 ] ; unsigned short bridge_ctl ; t#pci_bus_flags_t bus_flags ; s#device * bridge ; s#device dev ; s#bin_attribute * legacy_io ; s#bin_attribute * legacy_mem ; unsigned int is_added : 1 ; } 
pci_domain_nr int pci_domain_nr ( s#pci_bus * ) 
pci_proc_domain int pci_proc_domain ( s#pci_bus * ) 
ioremap void * ioremap ( unsigned long , unsigned long ) 
iounmap void iounmap ( volatile void * ) 
pci_iomap_range extern void * pci_iomap_range ( s#pci_dev * , int , unsigned long , unsigned long ) 
pci_iomap extern void * pci_iomap ( s#pci_dev * , int , unsigned long ) 
pci_iomap_wc_range extern void * pci_iomap_wc_range ( s#pci_dev * , int , unsigned long , unsigned long ) 
pci_iomap_wc extern void * pci_iomap_wc ( s#pci_dev * , int , unsigned long ) 
pci_iounmap void pci_iounmap ( s#pci_dev * , void * ) 
e#zpci_state enum zpci_state { ZPCI_FN_STATE_STANDBY = 0 , ZPCI_FN_STATE_CONFIGURED = 1 , ZPCI_FN_STATE_RESERVED = 2 , ZPCI_FN_STATE_ONLINE = 3 , } 
s#airq_iv struct airq_iv { unsigned long * vector ; unsigned long * avail ; unsigned long * bitlock ; unsigned long * ptr ; unsigned int * data ; unsigned long bits ; unsigned long end ; unsigned long flags ; t#spinlock_t lock ; } 
s#zpci_bar_struct struct zpci_bar_struct { s#resource * res ; void * mio_wb ; void * mio_wt ; t#u32 val ; t#u16 map_idx ; t#u8 size ; } 
s#zpci_fmb_fmt0 struct zpci_fmb_fmt0 { t#u64 dma_rbytes ; t#u64 dma_wbytes ; } 
s#zpci_fmb_fmt1 struct zpci_fmb_fmt1 { t#u64 rx_bytes ; t#u64 rx_packets ; t#u64 tx_bytes ; t#u64 tx_packets ; } 
s#zpci_fmb_fmt2 struct zpci_fmb_fmt2 { t#u64 consumed_work_units ; t#u64 max_work_units ; } 
s#zpci_fmb struct zpci_fmb { t#u32 format : 8 ; t#u32 fmt_ind : 24 ; t#u32 samples ; t#u64 last_update ; t#u64 ld_ops ; t#u64 st_ops ; t#u64 stb_ops ; t#u64 rpcit_ops ; union { s#zpci_fmb_fmt0 fmt0 ; s#zpci_fmb_fmt1 fmt1 ; s#zpci_fmb_fmt2 fmt2 ; } ; } 
e#pci_bus_speed enum pci_bus_speed { PCI_SPEED_33MHz = 0x00 , PCI_SPEED_66MHz = 0x01 , PCI_SPEED_66MHz_PCIX = 0x02 , PCI_SPEED_100MHz_PCIX = 0x03 , PCI_SPEED_133MHz_PCIX = 0x04 , PCI_SPEED_66MHz_PCIX_ECC = 0x05 , PCI_SPEED_100MHz_PCIX_ECC = 0x06 , PCI_SPEED_133MHz_PCIX_ECC = 0x07 , PCI_SPEED_66MHz_PCIX_266 = 0x09 , PCI_SPEED_100MHz_PCIX_266 = 0x0a , PCI_SPEED_133MHz_PCIX_266 = 0x0b , AGP_UNKNOWN = 0x0c , AGP_1X = 0x0d , AGP_2X = 0x0e , AGP_4X = 0x0f , AGP_8X = 0x10 , PCI_SPEED_66MHz_PCIX_533 = 0x11 , PCI_SPEED_100MHz_PCIX_533 = 0x12 , PCI_SPEED_133MHz_PCIX_533 = 0x13 , PCIE_SPEED_2_5GT = 0x14 , PCIE_SPEED_5_0GT = 0x15 , PCIE_SPEED_8_0GT = 0x16 , PCIE_SPEED_16_0GT = 0x17 , PCI_SPEED_UNKNOWN = 0xff , } 
s##s390_domain
s#zpci_dev struct zpci_dev { s#pci_bus * bus ; s#list_head entry ; e#zpci_state state ; t#u32 fid ; t#u32 fh ; t#u16 vfn ; t#u16 pchid ; t#u8 pfgid ; t#u8 pft ; t#u16 domain ; s#mutex lock ; t#u8 pfip [ 4 ] ; t#u32 uid ; t#u8 util_str [ 64 ] ; t#u64 msi_addr ; unsigned int max_msi ; unsigned int msi_first_bit ; unsigned int msi_nr_irqs ; s#airq_iv * aibv ; unsigned long aisb ; unsigned long * dma_table ; t#spinlock_t dma_table_lock ; int tlb_refresh ; t#spinlock_t iommu_bitmap_lock ; unsigned long * iommu_bitmap ; unsigned long * lazy_bitmap ; unsigned long iommu_size ; unsigned long iommu_pages ; unsigned int next_bit ; char res_name [ 16 ] ; t#bool mio_capable ; s#zpci_bar_struct bars [ 6 ] ; t#u64 start_dma ; t#u64 end_dma ; t#u64 dma_mask ; s#zpci_fmb * fmb ; t#u16 fmb_update ; t#u16 fmb_length ; t#atomic64_t allocated_pages ; t#atomic64_t mapped_pages ; t#atomic64_t unmapped_pages ; e#pci_bus_speed max_bus_speed ; s#dentry * debugfs_dev ; s#dentry * debugfs_perf ; s#s390_domain * s390_domain ; } 
zpci_enable_device int zpci_enable_device ( s#zpci_dev * ) 
zpci_disable_device int zpci_disable_device ( s#zpci_dev * ) 
s#zpci_report_error_header struct zpci_report_error_header { t#u8 version ; t#u8 action ; t#u16 length ; t#u8 data [ 0 ] ; } 
zpci_report_error int zpci_report_error ( s#pci_dev * , s#zpci_report_error_header * ) 

/* arch/s390/pci/pci_debug.o */
s##posix_acl
s##vfsmount
s##module
s##iov_iter
s##poll_table_struct
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##compat_timespec
s##pollfd
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##pipe_inode_info
s##writeback_control
s##swap_info_struct
s##device_private
s##sock
s##mem_cgroup
s##kernfs_open_node
s##kernfs_iattrs
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kmem_cache
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
pci_debug_msg_id extern t#debug_info_t * pci_debug_msg_id 
pci_debug_err_id extern t#debug_info_t * pci_debug_err_id 

/* arch/s390/pci/pci_dma.o */
s##device_private
s##sock
s##seq_file
s##vfsmount
s##posix_acl
s##module
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##compat_timespec
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##iov_iter
s##swap_info_struct
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s390_pci_dma_ops extern const s#dma_map_ops s390_pci_dma_ops 

/* arch/s390/pci/pci_insn.o */
__zpci_load int __zpci_load ( t#u64 * , t#u64 , t#u64 ) 
zpci_load int zpci_load ( t#u64 * , const volatile void * , unsigned long ) 
__zpci_store int __zpci_store ( t#u64 , t#u64 , t#u64 ) 
zpci_store int zpci_store ( const volatile void * , t#u64 , unsigned long ) 
__zpci_store_block int __zpci_store_block ( const t#u64 * , t#u64 , t#u64 ) 
zpci_write_block int zpci_write_block ( volatile void * , const void * , unsigned long ) 
zpci_barrier void zpci_barrier ( void ) 

/* block/badblocks.o */
s##device_private
s##sock
s##seq_file
s##vfsmount
s##posix_acl
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##fwnode_handle
s##iommu_group
s##iommu_fwspec
s#badblocks struct badblocks { s#device * dev ; int count ; int unacked_exist ; int shift ; t#u64 * page ; int changed ; t#seqlock_t lock ; t#sector_t sector ; t#sector_t size ; } 
badblocks_check int badblocks_check ( s#badblocks * , t#sector_t , int , t#sector_t * , int * ) 
badblocks_set int badblocks_set ( s#badblocks * , t#sector_t , int , int ) 
badblocks_clear int badblocks_clear ( s#badblocks * , t#sector_t , int ) 
ack_all_badblocks void ack_all_badblocks ( s#badblocks * ) 
badblocks_show t#ssize_t badblocks_show ( s#badblocks * , char * , int ) 
badblocks_store t#ssize_t badblocks_store ( s#badblocks * , const char * , t#size_t , int ) 
badblocks_init int badblocks_init ( s#badblocks * , int ) 
devm_init_badblocks int devm_init_badblocks ( s#device * , s#badblocks * ) 
badblocks_exit void badblocks_exit ( s#badblocks * ) 

/* block/bio.o */
s##kmem_cache
s##device_private
s##sock
s##vfsmount
s##posix_acl
s##module
s##workqueue_struct
s##bpf_prog_array
s##cgroup_taskset
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##pipe_inode_info
s#blk_mq_ctx struct blk_mq_ctx { struct { t#spinlock_t lock ; s#list_head rq_list ; } __attribute__ ( ( __aligned__ ( 256 ) ) ) ; unsigned int cpu ; unsigned int index_hw ; unsigned long rq_dispatched [ 2 ] ; unsigned long rq_merged ; unsigned long __attribute__ ( ( __aligned__ ( 256 ) ) ) rq_completed [ 2 ] ; s#request_queue * queue ; s#kobject kobj ; } 
t#req_flags_t typedef t#__u32 req_flags_t 
t#rq_end_io_fn typedef void ( rq_end_io_fn ) ( s#request * , t#blk_status_t ) 
e#mq_rq_state enum mq_rq_state { MQ_RQ_IDLE = 0 , MQ_RQ_IN_FLIGHT = 1 , MQ_RQ_COMPLETE = 2 , } 
t#smp_call_func_t typedef void ( * smp_call_func_t ) ( void * ) 
s#__call_single_data struct __call_single_data { s#llist_node llist ; t#smp_call_func_t func ; void * info ; unsigned int flags ; } 
s##blkcg_gq
s#request_list struct request_list { s#request_queue * q ; s#blkcg_gq * blkg ; int count [ 2 ] ; int starved [ 2 ] ; t#mempool_t * rq_pool ; t#wait_queue_head_t wait [ 2 ] ; unsigned int flags ; } 
s#request struct request { s#request_queue * q ; s#blk_mq_ctx * mq_ctx ; int cpu ; unsigned int cmd_flags ; t#req_flags_t rq_flags ; int internal_tag ; unsigned int __data_len ; int tag ; t#sector_t __sector ; s#bio * bio ; s#bio * biotail ; s#list_head queuelist ; union { s#hlist_node hash ; s#list_head ipi_list ; } ; union { s#rb_node rb_node ; s#bio_vec special_vec ; void * completion_data ; int error_count ; } ; union { struct { s#io_cq * icq ; void * priv [ 2 ] ; } elv ; struct { unsigned int seq ; s#list_head list ; t#rq_end_io_fn * saved_end_io ; } flush ; } ; s#gendisk * rq_disk ; s#hd_struct * part ; t#u64 start_time_ns ; t#u64 io_start_time_ns ; unsigned short wbt_flags ; unsigned short nr_phys_segments ; unsigned short nr_integrity_segments ; unsigned short write_hint ; unsigned short ioprio ; void * special ; unsigned int extra_len ; e#mq_rq_state state ; t#refcount_t ref ; unsigned int timeout ; unsigned long __deadline ; s#list_head timeout_list ; union { s#__call_single_data csd ; t#u64 fifo_time ; } ; t#rq_end_io_fn * end_io ; void * end_io_data ; s#request * next_rq ; s#request_list * rl ; } 
e#elv_merge enum elv_merge { ELEVATOR_NO_MERGE = 0 , ELEVATOR_FRONT_MERGE = 1 , ELEVATOR_BACK_MERGE = 2 , ELEVATOR_DISCARD_MERGE = 3 , } 
t#elevator_merge_fn typedef e#elv_merge ( elevator_merge_fn ) ( s#request_queue * , s#request * * , s#bio * ) 
t#elevator_merged_fn typedef void ( elevator_merged_fn ) ( s#request_queue * , s#request * , e#elv_merge ) 
t#elevator_merge_req_fn typedef void ( elevator_merge_req_fn ) ( s#request_queue * , s#request * , s#request * ) 
t#elevator_allow_bio_merge_fn typedef int ( elevator_allow_bio_merge_fn ) ( s#request_queue * , s#request * , s#bio * ) 
t#elevator_allow_rq_merge_fn typedef int ( elevator_allow_rq_merge_fn ) ( s#request_queue * , s#request * , s#request * ) 
t#elevator_bio_merged_fn typedef void ( elevator_bio_merged_fn ) ( s#request_queue * , s#request * , s#bio * ) 
t#elevator_dispatch_fn typedef int ( elevator_dispatch_fn ) ( s#request_queue * , int ) 
t#elevator_add_req_fn typedef void ( elevator_add_req_fn ) ( s#request_queue * , s#request * ) 
t#elevator_activate_req_fn typedef void ( elevator_activate_req_fn ) ( s#request_queue * , s#request * ) 
t#elevator_deactivate_req_fn typedef void ( elevator_deactivate_req_fn ) ( s#request_queue * , s#request * ) 
t#elevator_completed_req_fn typedef void ( elevator_completed_req_fn ) ( s#request_queue * , s#request * ) 
t#elevator_request_list_fn typedef s#request * ( elevator_request_list_fn ) ( s#request_queue * , s#request * ) 
t#elevator_init_icq_fn typedef void ( elevator_init_icq_fn ) ( s#io_cq * ) 
t#elevator_exit_icq_fn typedef void ( elevator_exit_icq_fn ) ( s#io_cq * ) 
t#elevator_set_req_fn typedef int ( elevator_set_req_fn ) ( s#request_queue * , s#request * , s#bio * , t#gfp_t ) 
t#elevator_put_req_fn typedef void ( elevator_put_req_fn ) ( s#request * ) 
t#elevator_may_queue_fn typedef int ( elevator_may_queue_fn ) ( s#request_queue * , unsigned int ) 
t#elevator_init_fn typedef int ( elevator_init_fn ) ( s#request_queue * , s#elevator_type * ) 
t#elevator_exit_fn typedef void ( elevator_exit_fn ) ( s#elevator_queue * ) 
t#elevator_registered_fn typedef void ( elevator_registered_fn ) ( s#request_queue * ) 
s#elevator_ops struct elevator_ops { t#elevator_merge_fn * elevator_merge_fn ; t#elevator_merged_fn * elevator_merged_fn ; t#elevator_merge_req_fn * elevator_merge_req_fn ; t#elevator_allow_bio_merge_fn * elevator_allow_bio_merge_fn ; t#elevator_allow_rq_merge_fn * elevator_allow_rq_merge_fn ; t#elevator_bio_merged_fn * elevator_bio_merged_fn ; t#elevator_dispatch_fn * elevator_dispatch_fn ; t#elevator_add_req_fn * elevator_add_req_fn ; t#elevator_activate_req_fn * elevator_activate_req_fn ; t#elevator_deactivate_req_fn * elevator_deactivate_req_fn ; t#elevator_completed_req_fn * elevator_completed_req_fn ; t#elevator_request_list_fn * elevator_former_req_fn ; t#elevator_request_list_fn * elevator_latter_req_fn ; t#elevator_init_icq_fn * elevator_init_icq_fn ; t#elevator_exit_icq_fn * elevator_exit_icq_fn ; t#elevator_set_req_fn * elevator_set_req_fn ; t#elevator_put_req_fn * elevator_put_req_fn ; t#elevator_may_queue_fn * elevator_may_queue_fn ; t#elevator_init_fn * elevator_init_fn ; t#elevator_exit_fn * elevator_exit_fn ; t#elevator_registered_fn * elevator_registered_fn ; } 
s#blk_flush_queue struct blk_flush_queue { unsigned int flush_queue_delayed : 1 ; unsigned int flush_pending_idx : 1 ; unsigned int flush_running_idx : 1 ; unsigned long flush_pending_since ; s#list_head flush_queue [ 2 ] ; s#list_head flush_data_in_flight ; s#request * flush_rq ; s#request * orig_rq ; t#spinlock_t mq_flush_lock ; } 
s#sbitmap_word struct sbitmap_word { unsigned long word ; unsigned long depth ; } 
s#sbitmap struct sbitmap { unsigned int depth ; unsigned int shift ; unsigned int map_nr ; s#sbitmap_word * map ; } 
t#wait_queue_func_t typedef int ( * wait_queue_func_t ) ( s#wait_queue_entry * , unsigned , int , void * ) 
s#wait_queue_entry struct wait_queue_entry { unsigned int flags ; void * private ; t#wait_queue_func_t func ; s#list_head entry ; } 
t#wait_queue_entry_t typedef s#wait_queue_entry wait_queue_entry_t 
s#sbq_wait_state struct sbq_wait_state { t#atomic_t wait_cnt ; t#wait_queue_head_t wait ; } 
s#sbitmap_queue struct sbitmap_queue { s#sbitmap sb ; unsigned int * alloc_hint ; unsigned int wake_batch ; t#atomic_t wake_index ; s#sbq_wait_state * ws ; t#bool round_robin ; unsigned int min_shallow_depth ; } 
s#blk_mq_tags struct blk_mq_tags { unsigned int nr_tags ; unsigned int nr_reserved_tags ; t#atomic_t active_queues ; s#sbitmap_queue bitmap_tags ; s#sbitmap_queue breserved_tags ; s#request * * rqs ; s#request * * static_rqs ; s#list_head page_list ; } 
s#blk_mq_hw_ctx struct blk_mq_hw_ctx { struct { t#spinlock_t lock ; s#list_head dispatch ; unsigned long state ; } __attribute__ ( ( __aligned__ ( 256 ) ) ) ; s#delayed_work run_work ; t#cpumask_var_t cpumask ; int next_cpu ; int next_cpu_batch ; unsigned long flags ; void * sched_data ; s#request_queue * queue ; s#blk_flush_queue * fq ; void * driver_data ; s#sbitmap ctx_map ; s#blk_mq_ctx * dispatch_from ; unsigned int dispatch_busy ; unsigned int nr_ctx ; s#blk_mq_ctx * * ctxs ; t#spinlock_t dispatch_wait_lock ; t#wait_queue_entry_t dispatch_wait ; t#atomic_t wait_index ; s#blk_mq_tags * tags ; s#blk_mq_tags * sched_tags ; unsigned long queued ; unsigned long run ; unsigned long dispatched [ 7 ] ; unsigned int numa_node ; unsigned int queue_num ; t#atomic_t nr_active ; unsigned int nr_expired ; s#hlist_node cpuhp_dead ; s#kobject kobj ; unsigned long poll_considered ; unsigned long poll_invoked ; unsigned long poll_success ; s#dentry * debugfs_dir ; s#dentry * sched_debugfs_dir ; s#srcu_struct srcu [ 0 ] ; } 
t#blk_mq_req_flags_t typedef t#__u32 blk_mq_req_flags_t 
s#blk_mq_alloc_data struct blk_mq_alloc_data { s#request_queue * q ; t#blk_mq_req_flags_t flags ; unsigned int shallow_depth ; s#blk_mq_ctx * ctx ; s#blk_mq_hw_ctx * hctx ; } 
s#elevator_mq_ops struct elevator_mq_ops { int ( * init_sched ) ( s#request_queue * , s#elevator_type * ) ; void ( * exit_sched ) ( s#elevator_queue * ) ; int ( * init_hctx ) ( s#blk_mq_hw_ctx * , unsigned int ) ; void ( * exit_hctx ) ( s#blk_mq_hw_ctx * , unsigned int ) ; t#bool ( * allow_merge ) ( s#request_queue * , s#request * , s#bio * ) ; t#bool ( * bio_merge ) ( s#blk_mq_hw_ctx * , s#bio * ) ; int ( * request_merge ) ( s#request_queue * , s#request * * , s#bio * ) ; void ( * request_merged ) ( s#request_queue * , s#request * , e#elv_merge ) ; void ( * requests_merged ) ( s#request_queue * , s#request * , s#request * ) ; void ( * limit_depth ) ( unsigned int , s#blk_mq_alloc_data * ) ; void ( * prepare_request ) ( s#request * , s#bio * ) ; void ( * finish_request ) ( s#request * ) ; void ( * insert_requests ) ( s#blk_mq_hw_ctx * , s#list_head * , t#bool ) ; s#request * ( * dispatch_request ) ( s#blk_mq_hw_ctx * ) ; t#bool ( * has_work ) ( s#blk_mq_hw_ctx * ) ; void ( * completed_request ) ( s#request * , t#u64 ) ; void ( * started_request ) ( s#request * ) ; void ( * requeue_request ) ( s#request * ) ; s#request * ( * former_request ) ( s#request_queue * , s#request * ) ; s#request * ( * next_request ) ( s#request_queue * , s#request * ) ; void ( * init_icq ) ( s#io_cq * ) ; void ( * exit_icq ) ( s#io_cq * ) ; } 
s#elv_fs_entry struct elv_fs_entry { s#attribute attr ; t#ssize_t ( * show ) ( s#elevator_queue * , char * ) ; t#ssize_t ( * store ) ( s#elevator_queue * , const char * , t#size_t ) ; } 
s##blk_mq_debugfs_attr
s#elevator_type struct elevator_type { s#kmem_cache * icq_cache ; union { s#elevator_ops sq ; s#elevator_mq_ops mq ; } ops ; t#size_t icq_size ; t#size_t icq_align ; s#elv_fs_entry * elevator_attrs ; char elevator_name [ ( 16 ) ] ; const char * elevator_alias ; s#module * elevator_owner ; t#bool uses_mq ; const s#blk_mq_debugfs_attr * queue_debugfs_attrs ; const s#blk_mq_debugfs_attr * hctx_debugfs_attrs ; char icq_cache_name [ ( 16 ) + 6 ] ; s#list_head list ; } 
s#elevator_queue struct elevator_queue { s#elevator_type * type ; void * elevator_data ; s#kobject kobj ; s#mutex sysfs_lock ; unsigned int registered : 1 ; unsigned int uses_mq : 1 ; s#hlist_head hash [ 1 << ( 6 ) ] ; } 
s##blk_queue_stats
s##rq_wb
t#request_fn_proc typedef void ( request_fn_proc ) ( s#request_queue * ) 
t#blk_qc_t typedef unsigned int blk_qc_t 
t#make_request_fn typedef t#blk_qc_t ( make_request_fn ) ( s#request_queue * , s#bio * ) 
t#poll_q_fn typedef t#bool ( poll_q_fn ) ( s#request_queue * , t#blk_qc_t ) 
t#prep_rq_fn typedef int ( prep_rq_fn ) ( s#request_queue * , s#request * ) 
t#unprep_rq_fn typedef void ( unprep_rq_fn ) ( s#request_queue * , s#request * ) 
t#softirq_done_fn typedef void ( softirq_done_fn ) ( s#request * ) 
e#blk_eh_timer_return enum blk_eh_timer_return { BLK_EH_DONE , BLK_EH_RESET_TIMER , } 
t#rq_timed_out_fn typedef e#blk_eh_timer_return ( rq_timed_out_fn ) ( s#request * ) 
t#dma_drain_needed_fn typedef int ( dma_drain_needed_fn ) ( s#request * ) 
t#lld_busy_fn typedef int ( lld_busy_fn ) ( s#request_queue * ) 
t#init_rq_fn typedef int ( init_rq_fn ) ( s#request_queue * , s#request * , t#gfp_t ) 
t#exit_rq_fn typedef void ( exit_rq_fn ) ( s#request_queue * , s#request * ) 
s#blk_mq_queue_data struct blk_mq_queue_data { s#request * rq ; t#bool last ; } 
t#queue_rq_fn typedef t#blk_status_t ( queue_rq_fn ) ( s#blk_mq_hw_ctx * , const s#blk_mq_queue_data * ) 
t#get_budget_fn typedef t#bool ( get_budget_fn ) ( s#blk_mq_hw_ctx * ) 
t#put_budget_fn typedef void ( put_budget_fn ) ( s#blk_mq_hw_ctx * ) 
t#timeout_fn typedef e#blk_eh_timer_return ( timeout_fn ) ( s#request * , t#bool ) 
t#poll_fn typedef int ( poll_fn ) ( s#blk_mq_hw_ctx * , unsigned int ) 
t#init_hctx_fn typedef int ( init_hctx_fn ) ( s#blk_mq_hw_ctx * , void * , unsigned int ) 
t#exit_hctx_fn typedef void ( exit_hctx_fn ) ( s#blk_mq_hw_ctx * , unsigned int ) 
s#blk_mq_tag_set struct blk_mq_tag_set { unsigned int * mq_map ; const s#blk_mq_ops * ops ; unsigned int nr_hw_queues ; unsigned int queue_depth ; unsigned int reserved_tags ; unsigned int cmd_size ; int numa_node ; unsigned int timeout ; unsigned int flags ; void * driver_data ; s#blk_mq_tags * * tags ; s#mutex tag_list_lock ; s#list_head tag_list ; } 
t#init_request_fn typedef int ( init_request_fn ) ( s#blk_mq_tag_set * , s#request * , unsigned int , unsigned int ) 
t#exit_request_fn typedef void ( exit_request_fn ) ( s#blk_mq_tag_set * , s#request * , unsigned int ) 
t#map_queues_fn typedef int ( map_queues_fn ) ( s#blk_mq_tag_set * ) 
s#blk_mq_ops struct blk_mq_ops { t#queue_rq_fn * queue_rq ; t#get_budget_fn * get_budget ; t#put_budget_fn * put_budget ; t#timeout_fn * timeout ; t#poll_fn * poll ; t#softirq_done_fn * complete ; t#init_hctx_fn * init_hctx ; t#exit_hctx_fn * exit_hctx ; t#init_request_fn * init_request ; t#exit_request_fn * exit_request ; void ( * initialize_rq_fn ) ( s#request * ) ; t#map_queues_fn * map_queues ; void ( * show_rq ) ( s#seq_file * , s#request * ) ; } 
s#blk_integrity_iter struct blk_integrity_iter { void * prot_buf ; void * data_buf ; t#sector_t seed ; unsigned int data_size ; unsigned short interval ; const char * disk_name ; } 
t#integrity_processing_fn typedef t#blk_status_t ( integrity_processing_fn ) ( s#blk_integrity_iter * ) 
s#blk_integrity_profile struct blk_integrity_profile { t#integrity_processing_fn * generate_fn ; t#integrity_processing_fn * verify_fn ; const char * name ; } 
s#blk_integrity struct blk_integrity { const s#blk_integrity_profile * profile ; unsigned char flags ; unsigned char tuple_size ; unsigned char interval_exp ; unsigned char tag_size ; } 
s#blk_queue_tag struct blk_queue_tag { s#request * * tag_index ; unsigned long * tag_map ; int max_depth ; int real_max_depth ; t#atomic_t refcnt ; int alloc_policy ; int next_tag ; } 
s#blk_rq_stat struct blk_rq_stat { t#u64 mean ; t#u64 min ; t#u64 max ; t#u32 nr_samples ; t#u64 batch ; } 
s#blk_stat_callback struct blk_stat_callback { s#list_head list ; s#timer_list timer ; s#blk_rq_stat * cpu_stat ; int ( * bucket_fn ) ( const s#request * ) ; unsigned int buckets ; s#blk_rq_stat * stat ; void ( * timer_fn ) ( s#blk_stat_callback * ) ; void * data ; s#callback_head rcu ; } 
e#blk_zoned_model enum blk_zoned_model { BLK_ZONED_NONE , BLK_ZONED_HA , BLK_ZONED_HM , } 
s#queue_limits struct queue_limits { unsigned long bounce_pfn ; unsigned long seg_boundary_mask ; unsigned long virt_boundary_mask ; unsigned int max_hw_sectors ; unsigned int max_dev_sectors ; unsigned int chunk_sectors ; unsigned int max_sectors ; unsigned int max_segment_size ; unsigned int physical_block_size ; unsigned int alignment_offset ; unsigned int io_min ; unsigned int io_opt ; unsigned int max_discard_sectors ; unsigned int max_hw_discard_sectors ; unsigned int max_write_same_sectors ; unsigned int max_write_zeroes_sectors ; unsigned int discard_granularity ; unsigned int discard_alignment ; unsigned short logical_block_size ; unsigned short max_segments ; unsigned short max_integrity_segments ; unsigned short max_discard_segments ; unsigned char misaligned ; unsigned char discard_misaligned ; unsigned char cluster ; unsigned char raid_partial_stripes_expensive ; e#blk_zoned_model zoned ; } 
s#rchan_buf struct rchan_buf { void * start ; void * data ; t#size_t offset ; t#size_t subbufs_produced ; t#size_t subbufs_consumed ; s#rchan * chan ; t#wait_queue_head_t read_wait ; s#irq_work wakeup_work ; s#dentry * dentry ; s#kref kref ; s#page * * page_array ; unsigned int page_count ; unsigned int finalized ; t#size_t * padding ; t#size_t prev_padding ; t#size_t bytes_consumed ; t#size_t early_bytes ; unsigned int cpu ; } 
s#rchan_callbacks struct rchan_callbacks { int ( * subbuf_start ) ( s#rchan_buf * , void * , void * , t#size_t ) ; void ( * buf_mapped ) ( s#rchan_buf * , s#file * ) ; void ( * buf_unmapped ) ( s#rchan_buf * , s#file * ) ; s#dentry * ( * create_buf_file ) ( const char * , s#dentry * , t#umode_t , s#rchan_buf * , int * ) ; int ( * remove_buf_file ) ( s#dentry * ) ; } 
s#rchan struct rchan { t#u32 version ; t#size_t subbuf_size ; t#size_t n_subbufs ; t#size_t alloc_size ; s#rchan_callbacks * cb ; s#kref kref ; void * private_data ; t#size_t last_toobig ; s#rchan_buf * * buf ; int is_global ; s#list_head list ; s#dentry * parent ; int has_base_filename ; char base_filename [ 255 ] ; } 
s#blk_trace struct blk_trace { int trace_state ; s#rchan * rchan ; unsigned long * sequence ; unsigned char * msg_data ; t#u16 act_mask ; t#u64 start_lba ; t#u64 end_lba ; t#u32 pid ; t#u32 dev ; s#dentry * dir ; s#dentry * dropped_file ; s#dentry * msg_file ; s#list_head running_list ; t#atomic_t dropped ; } 
s##bsg_job
t#bsg_job_fn typedef int ( bsg_job_fn ) ( s#bsg_job * ) 
s#sg_io_v4 struct sg_io_v4 { t#__s32 guard ; t#__u32 protocol ; t#__u32 subprotocol ; t#__u32 request_len ; t#__u64 request ; t#__u64 request_tag ; t#__u32 request_attr ; t#__u32 request_priority ; t#__u32 request_extra ; t#__u32 max_response_len ; t#__u64 response ; t#__u32 dout_iovec_count ; t#__u32 dout_xfer_len ; t#__u32 din_iovec_count ; t#__u32 din_xfer_len ; t#__u64 dout_xferp ; t#__u64 din_xferp ; t#__u32 timeout ; t#__u32 flags ; t#__u64 usr_ptr ; t#__u32 spare_in ; t#__u32 driver_status ; t#__u32 transport_status ; t#__u32 device_status ; t#__u32 retry_delay ; t#__u32 info ; t#__u32 duration ; t#__u32 response_len ; t#__s32 din_resid ; t#__s32 dout_resid ; t#__u64 generated_tag ; t#__u32 spare_out ; t#__u32 padding ; } 
s#bsg_ops struct bsg_ops { int ( * check_proto ) ( s#sg_io_v4 * ) ; int ( * fill_hdr ) ( s#request * , s#sg_io_v4 * , t#fmode_t ) ; int ( * complete_rq ) ( s#request * , s#sg_io_v4 * ) ; void ( * free_rq ) ( s#request * ) ; } 
s#bsg_class_device struct bsg_class_device { s#device * class_dev ; int minor ; s#request_queue * queue ; const s#bsg_ops * ops ; } 
s##throtl_data
s#request_queue struct request_queue { s#list_head queue_head ; s#request * last_merge ; s#elevator_queue * elevator ; int nr_rqs [ 2 ] ; int nr_rqs_elvpriv ; s#blk_queue_stats * stats ; s#rq_wb * rq_wb ; s#request_list root_rl ; t#request_fn_proc * request_fn ; t#make_request_fn * make_request_fn ; t#poll_q_fn * poll_fn ; t#prep_rq_fn * prep_rq_fn ; t#unprep_rq_fn * unprep_rq_fn ; t#softirq_done_fn * softirq_done_fn ; t#rq_timed_out_fn * rq_timed_out_fn ; t#dma_drain_needed_fn * dma_drain_needed ; t#lld_busy_fn * lld_busy_fn ; t#init_rq_fn * init_rq_fn ; t#exit_rq_fn * exit_rq_fn ; void ( * initialize_rq_fn ) ( s#request * ) ; const s#blk_mq_ops * mq_ops ; unsigned int * mq_map ; s#blk_mq_ctx * queue_ctx ; unsigned int nr_queues ; unsigned int queue_depth ; s#blk_mq_hw_ctx * * queue_hw_ctx ; unsigned int nr_hw_queues ; t#sector_t end_sector ; s#request * boundary_rq ; s#delayed_work delay_work ; s#backing_dev_info * backing_dev_info ; void * queuedata ; unsigned long queue_flags ; int id ; t#gfp_t bounce_gfp ; t#spinlock_t __queue_lock ; t#spinlock_t * queue_lock ; s#kobject kobj ; s#kobject mq_kobj ; s#blk_integrity integrity ; s#device * dev ; int rpm_status ; unsigned int nr_pending ; unsigned long nr_requests ; unsigned int nr_congestion_on ; unsigned int nr_congestion_off ; unsigned int nr_batching ; unsigned int dma_drain_size ; void * dma_drain_buffer ; unsigned int dma_pad_mask ; unsigned int dma_alignment ; s#blk_queue_tag * queue_tags ; unsigned int nr_sorted ; unsigned int in_flight [ 2 ] ; unsigned int request_fn_active ; unsigned int rq_timeout ; int poll_nsec ; s#blk_stat_callback * poll_cb ; s#blk_rq_stat poll_stat [ 16 ] ; s#timer_list timeout ; s#work_struct timeout_work ; s#list_head timeout_list ; s#list_head icq_list ; unsigned long blkcg_pols [ ( ( ( 5 ) + ( 8 * sizeof ( long ) ) - 1 ) / ( 8 * sizeof ( long ) ) ) ] ; s#blkcg_gq * root_blkg ; s#list_head blkg_list ; s#queue_limits limits ; unsigned int nr_zones ; unsigned long * seq_zones_bitmap ; unsigned long * seq_zones_wlock ; unsigned int sg_timeout ; unsigned int sg_reserved_size ; int node ; s#blk_trace * blk_trace ; s#mutex blk_trace_mutex ; s#blk_flush_queue * fq ; s#list_head requeue_list ; t#spinlock_t requeue_lock ; s#delayed_work requeue_work ; s#mutex sysfs_lock ; int bypass_depth ; t#atomic_t mq_freeze_depth ; t#bsg_job_fn * bsg_job_fn ; s#bsg_class_device bsg_dev ; s#throtl_data * td ; s#callback_head callback_head ; t#wait_queue_head_t mq_freeze_wq ; s#percpu_ref q_usage_counter ; s#list_head all_q_node ; s#blk_mq_tag_set * tag_set ; s#list_head tag_set_list ; s#bio_set bio_split ; s#dentry * debugfs_dir ; s#dentry * sched_debugfs_dir ; t#bool mq_sysfs_init_done ; t#size_t cmd_size ; void * rq_alloc_data ; s#work_struct release_work ; t#u64 write_hints [ 5 ] ; } 
s##eventfd_ctx
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##mmu_notifier_mm
s##xol_area
s##pid_namespace
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s#blk_plug struct blk_plug { s#list_head list ; s#list_head mq_list ; s#list_head cb_list ; } 
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##mtd_info
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s#partition_meta_info struct partition_meta_info { char uuid [ ( 36 + 1 ) ] ; t#u8 volname [ 64 ] ; } 
s#disk_stats struct disk_stats { unsigned long sectors [ 2 ] ; unsigned long ios [ 2 ] ; unsigned long merges [ 2 ] ; unsigned long ticks [ 2 ] ; unsigned long io_ticks ; unsigned long time_in_queue ; } 
s#hd_struct struct hd_struct { t#sector_t start_sect ; t#sector_t nr_sects ; t#seqcount_t nr_sects_seq ; t#sector_t alignment_offset ; unsigned int discard_alignment ; s#device __dev ; s#kobject * holder_dir ; int policy , partno ; s#partition_meta_info * info ; int make_it_fail ; unsigned long stamp ; t#atomic_t in_flight [ 2 ] ; s#disk_stats * dkstats ; s#percpu_ref ref ; s#callback_head callback_head ; } 
s#disk_part_tbl struct disk_part_tbl { s#callback_head callback_head ; int len ; s#hd_struct * last_lookup ; s#hd_struct * part [ ] ; } 
s##hd_geometry
s##pr_ops
s#block_device_operations struct block_device_operations { int ( * open ) ( s#block_device * , t#fmode_t ) ; void ( * release ) ( s#gendisk * , t#fmode_t ) ; int ( * rw_page ) ( s#block_device * , t#sector_t , s#page * , t#bool ) ; int ( * ioctl ) ( s#block_device * , t#fmode_t , unsigned , unsigned long ) ; int ( * compat_ioctl ) ( s#block_device * , t#fmode_t , unsigned , unsigned long ) ; unsigned int ( * check_events ) ( s#gendisk * , unsigned int ) ; int ( * media_changed ) ( s#gendisk * ) ; void ( * unlock_native_capacity ) ( s#gendisk * ) ; int ( * revalidate_disk ) ( s#gendisk * ) ; int ( * getgeo ) ( s#block_device * , s#hd_geometry * ) ; void ( * swap_slot_free_notify ) ( s#block_device * , unsigned long ) ; s#module * owner ; const s#pr_ops * pr_ops ; } 
s##timer_rand_state
s##disk_events
s##badblocks
s#gendisk struct gendisk { int major ; int first_minor ; int minors ; char disk_name [ 32 ] ; char * ( * devnode ) ( s#gendisk * , t#umode_t * ) ; unsigned int events ; unsigned int async_events ; s#disk_part_tbl * part_tbl ; s#hd_struct part0 ; const s#block_device_operations * fops ; s#request_queue * queue ; void * private_data ; int flags ; s#rw_semaphore lookup_sem ; s#kobject * slave_dir ; s#timer_rand_state * random ; t#atomic_t sync_io ; s#disk_events * ev ; s#kobject integrity_kobj ; int node_id ; s#badblocks * bb ; } 
fs_bio_set extern s#bio_set fs_bio_set 
bio_uninit extern void bio_uninit ( s#bio * ) 
bio_init extern void bio_init ( s#bio * , s#bio_vec * , unsigned short ) 
bio_reset extern void bio_reset ( s#bio * ) 
bio_chain void bio_chain ( s#bio * , s#bio * ) 
bio_alloc_bioset extern s#bio * bio_alloc_bioset ( t#gfp_t , unsigned int , s#bio_set * ) 
zero_fill_bio_iter void zero_fill_bio_iter ( s#bio * , s#bvec_iter ) 
bio_put extern void bio_put ( s#bio * ) 
bio_phys_segments extern int bio_phys_segments ( s#request_queue * , s#bio * ) 
__bio_clone_fast extern void __bio_clone_fast ( s#bio * , s#bio * ) 
bio_clone_fast extern s#bio * bio_clone_fast ( s#bio * , t#gfp_t , s#bio_set * ) 
bio_clone_bioset extern s#bio * bio_clone_bioset ( s#bio * , t#gfp_t , s#bio_set * ) 
bio_add_pc_page extern int bio_add_pc_page ( s#request_queue * , s#bio * , s#page * , unsigned int , unsigned int ) 
bio_add_page extern int bio_add_page ( s#bio * , s#page * , unsigned int , unsigned int ) 
bio_iov_iter_get_pages int bio_iov_iter_get_pages ( s#bio * , s#iov_iter * ) 
submit_bio_wait extern int submit_bio_wait ( s#bio * ) 
bio_advance extern void bio_advance ( s#bio * , unsigned ) 
bio_copy_data_iter extern void bio_copy_data_iter ( s#bio * , s#bvec_iter * , s#bio * , s#bvec_iter * ) 
bio_copy_data extern void bio_copy_data ( s#bio * , s#bio * ) 
bio_list_copy_data extern void bio_list_copy_data ( s#bio * , s#bio * ) 
bio_free_pages extern void bio_free_pages ( s#bio * ) 
bio_map_user_iov extern s#bio * bio_map_user_iov ( s#request_queue * , s#iov_iter * , t#gfp_t ) 
bio_map_kern extern s#bio * bio_map_kern ( s#request_queue * , void * , unsigned int , t#gfp_t ) 
bio_set_pages_dirty extern void bio_set_pages_dirty ( s#bio * ) 
bio_check_pages_dirty extern void bio_check_pages_dirty ( s#bio * ) 
generic_start_io_acct void generic_start_io_acct ( s#request_queue * , int , unsigned long , s#hd_struct * ) 
generic_end_io_acct void generic_end_io_acct ( s#request_queue * , int , s#hd_struct * , unsigned long ) 
bio_endio extern void bio_endio ( s#bio * ) 
bio_split extern s#bio * bio_split ( s#bio * , int , t#gfp_t , s#bio_set * ) 
bio_trim extern void bio_trim ( s#bio * , int , int ) 
bioset_exit extern void bioset_exit ( s#bio_set * ) 
bioset_free extern void bioset_free ( s#bio_set * ) 
bioset_init extern int bioset_init ( s#bio_set * , unsigned int , unsigned int , int ) 
bioset_create extern s#bio_set * bioset_create ( unsigned int , unsigned int , int ) 
bio_associate_blkcg int bio_associate_blkcg ( s#bio * , s#cgroup_subsys_state * ) 
bio_clone_blkcg_association void bio_clone_blkcg_association ( s#bio * , s#bio * ) 

/* block/bio-integrity.o */
s##device_private
s##sock
s##seq_file
s##vfsmount
s##posix_acl
s##module
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##compat_timespec
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##reclaim_state
s##workqueue_struct
s##cgroup_subsys_state
s##blkcg_gq
s##kmem_cache
s##blk_mq_debugfs_attr
s##blk_queue_stats
s##rq_wb
s##blk_trace
s##bsg_job
s##throtl_data
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##iov_iter
s##swap_info_struct
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##mtd_info
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##hd_geometry
s##pr_ops
s##timer_rand_state
s##disk_events
s##badblocks
bio_integrity_alloc extern s#bio_integrity_payload * bio_integrity_alloc ( s#bio * , t#gfp_t , unsigned int ) 
bio_integrity_add_page extern int bio_integrity_add_page ( s#bio * , s#page * , unsigned int , unsigned int ) 
bio_integrity_prep extern t#bool bio_integrity_prep ( s#bio * ) 
bio_integrity_advance extern void bio_integrity_advance ( s#bio * , unsigned int ) 
bio_integrity_trim extern void bio_integrity_trim ( s#bio * ) 
bio_integrity_clone extern int bio_integrity_clone ( s#bio * , s#bio * , t#gfp_t ) 
bioset_integrity_create extern int bioset_integrity_create ( s#bio_set * , int ) 
bioset_integrity_free extern void bioset_integrity_free ( s#bio_set * ) 

/* block/blk-cgroup.o */
s##vfsmount
s##posix_acl
s##sock
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##device_private
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pollfd
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##pipe_inode_info
s##swap_info_struct
s##kmem_cache
s##mem_cgroup
E#BLKG_RWSTAT_NR 4 
s#blkg_rwstat struct blkg_rwstat { s#percpu_counter cpu_cnt [ E#BLKG_RWSTAT_NR ] ; t#atomic64_t aux_cnt [ E#BLKG_RWSTAT_NR ] ; } 
s#blkg_policy_data struct blkg_policy_data { s#blkcg_gq * blkg ; int plid ; } 
s#blkcg_gq struct blkcg_gq { s#request_queue * q ; s#list_head q_node ; s#hlist_node blkcg_node ; s#blkcg * blkcg ; s#bdi_writeback_congested * wb_congested ; s#blkcg_gq * parent ; s#request_list rl ; t#atomic_t refcnt ; t#bool online ; s#blkg_rwstat stat_bytes ; s#blkg_rwstat stat_ios ; s#blkg_policy_data * pd [ 5 ] ; s#callback_head callback_head ; } 
s##workqueue_struct
s##blk_mq_debugfs_attr
s##blk_queue_stats
s##rq_wb
s##blk_trace
s##bsg_job
s##throtl_data
s##hd_geometry
s##pr_ops
s##timer_rand_state
s##disk_events
s##badblocks
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##mtd_info
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s#blkcg_policy_data struct blkcg_policy_data { s#blkcg * blkcg ; int plid ; } 
s#blkcg struct blkcg { s#cgroup_subsys_state css ; t#spinlock_t lock ; s#radix_tree_root blkg_tree ; s#blkcg_gq * blkg_hint ; s#hlist_head blkg_list ; s#blkcg_policy_data * cpd [ 5 ] ; s#list_head all_blkcgs_node ; s#list_head cgwb_list ; } 
blkcg_root extern s#blkcg blkcg_root 
blkcg_root_css extern s#cgroup_subsys_state * const blkcg_root_css 
blkg_lookup_slowpath s#blkcg_gq * blkg_lookup_slowpath ( s#blkcg * , s#request_queue * , t#bool ) 
__blkg_release_rcu void __blkg_release_rcu ( s#callback_head * ) 
blkg_dev_name const char * blkg_dev_name ( s#blkcg_gq * ) 
t#blkcg_pol_alloc_cpd_fn typedef s#blkcg_policy_data * ( blkcg_pol_alloc_cpd_fn ) ( t#gfp_t ) 
t#blkcg_pol_init_cpd_fn typedef void ( blkcg_pol_init_cpd_fn ) ( s#blkcg_policy_data * ) 
t#blkcg_pol_free_cpd_fn typedef void ( blkcg_pol_free_cpd_fn ) ( s#blkcg_policy_data * ) 
t#blkcg_pol_bind_cpd_fn typedef void ( blkcg_pol_bind_cpd_fn ) ( s#blkcg_policy_data * ) 
t#blkcg_pol_alloc_pd_fn typedef s#blkg_policy_data * ( blkcg_pol_alloc_pd_fn ) ( t#gfp_t , int ) 
t#blkcg_pol_init_pd_fn typedef void ( blkcg_pol_init_pd_fn ) ( s#blkg_policy_data * ) 
t#blkcg_pol_online_pd_fn typedef void ( blkcg_pol_online_pd_fn ) ( s#blkg_policy_data * ) 
t#blkcg_pol_offline_pd_fn typedef void ( blkcg_pol_offline_pd_fn ) ( s#blkg_policy_data * ) 
t#blkcg_pol_free_pd_fn typedef void ( blkcg_pol_free_pd_fn ) ( s#blkg_policy_data * ) 
t#blkcg_pol_reset_pd_stats_fn typedef void ( blkcg_pol_reset_pd_stats_fn ) ( s#blkg_policy_data * ) 
s#blkcg_policy struct blkcg_policy { int plid ; s#cftype * dfl_cftypes ; s#cftype * legacy_cftypes ; t#blkcg_pol_alloc_cpd_fn * cpd_alloc_fn ; t#blkcg_pol_init_cpd_fn * cpd_init_fn ; t#blkcg_pol_free_cpd_fn * cpd_free_fn ; t#blkcg_pol_bind_cpd_fn * cpd_bind_fn ; t#blkcg_pol_alloc_pd_fn * pd_alloc_fn ; t#blkcg_pol_init_pd_fn * pd_init_fn ; t#blkcg_pol_online_pd_fn * pd_online_fn ; t#blkcg_pol_offline_pd_fn * pd_offline_fn ; t#blkcg_pol_free_pd_fn * pd_free_fn ; t#blkcg_pol_reset_pd_stats_fn * pd_reset_stats_fn ; } 
blkcg_print_blkgs void blkcg_print_blkgs ( s#seq_file * , s#blkcg * , t#u64 ( * ) ( s#seq_file * , s#blkg_policy_data * , int ) , const s#blkcg_policy * , int , t#bool ) 
__blkg_prfill_u64 t#u64 __blkg_prfill_u64 ( s#seq_file * , s#blkg_policy_data * , t#u64 ) 
__blkg_prfill_rwstat t#u64 __blkg_prfill_rwstat ( s#seq_file * , s#blkg_policy_data * , const s#blkg_rwstat * ) 
blkg_prfill_stat t#u64 blkg_prfill_stat ( s#seq_file * , s#blkg_policy_data * , int ) 
blkg_prfill_rwstat t#u64 blkg_prfill_rwstat ( s#seq_file * , s#blkg_policy_data * , int ) 
blkg_print_stat_bytes int blkg_print_stat_bytes ( s#seq_file * , void * ) 
blkg_print_stat_ios int blkg_print_stat_ios ( s#seq_file * , void * ) 
blkg_print_stat_bytes_recursive int blkg_print_stat_bytes_recursive ( s#seq_file * , void * ) 
blkg_print_stat_ios_recursive int blkg_print_stat_ios_recursive ( s#seq_file * , void * ) 
blkg_stat_recursive_sum t#u64 blkg_stat_recursive_sum ( s#blkcg_gq * , s#blkcg_policy * , int ) 
blkg_rwstat_recursive_sum s#blkg_rwstat blkg_rwstat_recursive_sum ( s#blkcg_gq * , s#blkcg_policy * , int ) 
s#blkg_conf_ctx struct blkg_conf_ctx { s#gendisk * disk ; s#blkcg_gq * blkg ; char * body ; } 
blkg_conf_prep int blkg_conf_prep ( s#blkcg * , const s#blkcg_policy * , char * , s#blkg_conf_ctx * ) 
blkg_conf_finish void blkg_conf_finish ( s#blkg_conf_ctx * ) 
io_cgrp_subsys extern s#cgroup_subsys io_cgrp_subsys 
blkcg_activate_policy int blkcg_activate_policy ( s#request_queue * , const s#blkcg_policy * ) 
blkcg_deactivate_policy void blkcg_deactivate_policy ( s#request_queue * , const s#blkcg_policy * ) 
blkcg_policy_register int blkcg_policy_register ( s#blkcg_policy * ) 
blkcg_policy_unregister void blkcg_policy_unregister ( s#blkcg_policy * ) 

/* block/blk-core.o */
s##static_key_mod
__tracepoint_block_bio_remap extern s#tracepoint __tracepoint_block_bio_remap 
__tracepoint_block_rq_remap extern s#tracepoint __tracepoint_block_rq_remap 
__tracepoint_block_bio_complete extern s#tracepoint __tracepoint_block_bio_complete 
__tracepoint_block_split extern s#tracepoint __tracepoint_block_split 
__tracepoint_block_unplug extern s#tracepoint __tracepoint_block_unplug 
s##sock
s##vfsmount
s##posix_acl
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##trace_array
s##tracer
s##trace_buffer
s##ring_buffer_iter
s##event_filter
s##bpf_prog_array
s##device_private
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##kmem_cache
s##fs_pin
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##cgroup_taskset
s##workqueue_struct
s##pipe_inode_info
s##hd_geometry
s##pr_ops
s##timer_rand_state
s##disk_events
s##badblocks
s##eventfd_ctx
s##mempolicy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##robust_list_head
s##futex_pi_state
s##numa_group
s##task_delay_info
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##ring_buffer
s##bpf_prog
s##ftrace_hash
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##mtd_info
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##blk_mq_debugfs_attr
s##blk_queue_stats
s#rq_wait struct rq_wait { t#wait_queue_head_t wait ; t#atomic_t inflight ; } 
E#WBT_NUM_RWQ ( 0 ) + 3 
s#rq_wb struct rq_wb { unsigned int wb_background ; unsigned int wb_normal ; unsigned int wb_max ; int scale_step ; t#bool scaled_max ; short enable_state ; unsigned int unknown_cnt ; t#u64 win_nsec ; t#u64 cur_win_nsec ; s#blk_stat_callback * cb ; t#u64 sync_issue ; void * sync_cookie ; unsigned int wc ; unsigned int queue_depth ; unsigned long last_issue ; unsigned long last_comp ; unsigned long min_lat_nsec ; s#request_queue * queue ; s#rq_wait rq_wait [ E#WBT_NUM_RWQ ] ; } 
s##bsg_job
s##throtl_data
blk_queue_flag_set void blk_queue_flag_set ( unsigned int , s#request_queue * ) 
blk_queue_flag_clear void blk_queue_flag_clear ( unsigned int , s#request_queue * ) 
blk_queue_flag_test_and_set t#bool blk_queue_flag_test_and_set ( unsigned int , s#request_queue * ) 
blk_queue_flag_test_and_clear t#bool blk_queue_flag_test_and_clear ( unsigned int , s#request_queue * ) 
blk_rq_init extern void blk_rq_init ( s#request_queue * , s#request * ) 
errno_to_blk_status t#blk_status_t errno_to_blk_status ( int ) 
blk_status_to_errno int blk_status_to_errno ( t#blk_status_t ) 
blk_dump_rq_flags extern void blk_dump_rq_flags ( s#request * , char * ) 
blk_delay_queue extern void blk_delay_queue ( s#request_queue * , unsigned long ) 
blk_start_queue_async extern void blk_start_queue_async ( s#request_queue * ) 
blk_start_queue extern void blk_start_queue ( s#request_queue * ) 
blk_stop_queue extern void blk_stop_queue ( s#request_queue * ) 
blk_sync_queue extern void blk_sync_queue ( s#request_queue * ) 
blk_set_preempt_only extern int blk_set_preempt_only ( s#request_queue * ) 
blk_clear_preempt_only extern void blk_clear_preempt_only ( s#request_queue * ) 
__blk_run_queue_uncond extern void __blk_run_queue_uncond ( s#request_queue * ) 
__blk_run_queue extern void __blk_run_queue ( s#request_queue * ) 
blk_run_queue_async extern void blk_run_queue_async ( s#request_queue * ) 
blk_run_queue extern void blk_run_queue ( s#request_queue * ) 
blk_put_queue extern void blk_put_queue ( s#request_queue * ) 
blk_queue_bypass_start void blk_queue_bypass_start ( s#request_queue * ) 
blk_queue_bypass_end void blk_queue_bypass_end ( s#request_queue * ) 
blk_set_queue_dying extern void blk_set_queue_dying ( s#request_queue * ) 
blk_cleanup_queue extern void blk_cleanup_queue ( s#request_queue * ) 
blk_alloc_queue s#request_queue * blk_alloc_queue ( t#gfp_t ) 
blk_alloc_queue_node s#request_queue * blk_alloc_queue_node ( t#gfp_t , int , t#spinlock_t * ) 
blk_init_queue extern s#request_queue * blk_init_queue ( t#request_fn_proc * , t#spinlock_t * ) 
blk_init_queue_node extern s#request_queue * blk_init_queue_node ( t#request_fn_proc * , t#spinlock_t * , int ) 
blk_init_allocated_queue extern int blk_init_allocated_queue ( s#request_queue * ) 
blk_get_queue t#bool blk_get_queue ( s#request_queue * ) 
blk_get_request extern s#request * blk_get_request ( s#request_queue * , unsigned int , t#blk_mq_req_flags_t ) 
blk_requeue_request extern void blk_requeue_request ( s#request_queue * , s#request * ) 
part_round_stats extern void part_round_stats ( s#request_queue * , int , s#hd_struct * ) 
__blk_put_request extern void __blk_put_request ( s#request_queue * , s#request * ) 
blk_put_request extern void blk_put_request ( s#request * ) 
blk_init_request_from_bio extern void blk_init_request_from_bio ( s#request * , s#bio * ) 
generic_make_request extern t#blk_qc_t generic_make_request ( s#bio * ) 
direct_make_request extern t#blk_qc_t direct_make_request ( s#bio * ) 
submit_bio extern t#blk_qc_t submit_bio ( s#bio * ) 
blk_poll t#bool blk_poll ( s#request_queue * , t#blk_qc_t ) 
blk_insert_cloned_request extern t#blk_status_t blk_insert_cloned_request ( s#request_queue * , s#request * ) 
blk_rq_err_bytes extern unsigned int blk_rq_err_bytes ( const s#request * ) 
blk_peek_request extern s#request * blk_peek_request ( s#request_queue * ) 
blk_start_request extern void blk_start_request ( s#request * ) 
blk_fetch_request extern s#request * blk_fetch_request ( s#request_queue * ) 
blk_steal_bios void blk_steal_bios ( s#bio_list * , s#request * ) 
blk_update_request extern t#bool blk_update_request ( s#request * , t#blk_status_t , unsigned int ) 
blk_unprep_request extern void blk_unprep_request ( s#request * ) 
blk_finish_request extern void blk_finish_request ( s#request * , t#blk_status_t ) 
blk_end_request extern t#bool blk_end_request ( s#request * , t#blk_status_t , unsigned int ) 
blk_end_request_all extern void blk_end_request_all ( s#request * , t#blk_status_t ) 
__blk_end_request extern t#bool __blk_end_request ( s#request * , t#blk_status_t , unsigned int ) 
__blk_end_request_all extern void __blk_end_request_all ( s#request * , t#blk_status_t ) 
__blk_end_request_cur extern t#bool __blk_end_request_cur ( s#request * , t#blk_status_t ) 
blk_lld_busy extern int blk_lld_busy ( s#request_queue * ) 
blk_rq_unprep_clone extern void blk_rq_unprep_clone ( s#request * ) 
blk_rq_prep_clone extern int blk_rq_prep_clone ( s#request * , s#request * , s#bio_set * , t#gfp_t , int ( * ) ( s#bio * , s#bio * , void * ) , void * ) 
kblockd_schedule_work int kblockd_schedule_work ( s#work_struct * ) 
kblockd_schedule_work_on int kblockd_schedule_work_on ( int , s#work_struct * ) 
kblockd_mod_delayed_work_on int kblockd_mod_delayed_work_on ( int , s#delayed_work * , unsigned long ) 
blk_start_plug extern void blk_start_plug ( s#blk_plug * ) 
t#blk_plug_cb_fn typedef void ( * blk_plug_cb_fn ) ( s#blk_plug_cb * , t#bool ) 
s#blk_plug_cb struct blk_plug_cb { s#list_head list ; t#blk_plug_cb_fn callback ; void * data ; } 
blk_check_plugged extern s#blk_plug_cb * blk_check_plugged ( t#blk_plug_cb_fn , void * , int ) 
blk_finish_plug extern void blk_finish_plug ( s#blk_plug * ) 
blk_pm_runtime_init extern void blk_pm_runtime_init ( s#request_queue * , s#device * ) 
blk_pre_runtime_suspend extern int blk_pre_runtime_suspend ( s#request_queue * ) 
blk_post_runtime_suspend extern void blk_post_runtime_suspend ( s#request_queue * , int ) 
blk_pre_runtime_resume extern void blk_pre_runtime_resume ( s#request_queue * ) 
blk_post_runtime_resume extern void blk_post_runtime_resume ( s#request_queue * , int ) 
blk_set_runtime_active extern void blk_set_runtime_active ( s#request_queue * ) 

/* block/blk-exec.o */
s##sock
s##seq_file
s##vfsmount
s##posix_acl
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##workqueue_struct
s##cgroup_subsys_state
s##hd_geometry
s##pr_ops
s##timer_rand_state
s##disk_events
s##badblocks
s##kmem_cache
s##reclaim_state
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##swap_info_struct
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##mtd_info
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##blkcg_gq
s##blk_mq_debugfs_attr
s##blk_queue_stats
s##rq_wb
s##blk_trace
s##bsg_job
s##throtl_data
blk_execute_rq_nowait extern void blk_execute_rq_nowait ( s#request_queue * , s#gendisk * , s#request * , int , t#rq_end_io_fn * ) 
blk_execute_rq extern void blk_execute_rq ( s#request_queue * , s#gendisk * , s#request * , int ) 

/* block/blk-flush.o */
s##posix_acl
s##vfsmount
s##sock
s##seq_file
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##hd_geometry
s##pr_ops
s##kmem_cache
s##blkcg_gq
s##workqueue_struct
s##blk_mq_debugfs_attr
s##blk_queue_stats
s##rq_wb
s##cgroup_subsys_state
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##badblocks
s##reclaim_state
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##writeback_control
s##swap_info_struct
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
blkdev_issue_flush extern int blkdev_issue_flush ( s#block_device * , t#gfp_t , t#sector_t * ) 

/* block/blk-integrity.o */
s##sock
s##vfsmount
s##posix_acl
s##module
s##device_private
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##compat_timespec
s##pollfd
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##bpf_prog_array
s##cgroup_taskset
s##iov_iter
s##swap_info_struct
s##kmem_cache
s##mem_cgroup
s##mempolicy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##hd_geometry
s##pr_ops
s##timer_rand_state
s##disk_events
s##badblocks
s##workqueue_struct
s##reclaim_state
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##mtd_info
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##blk_mq_debugfs_attr
s##blk_queue_stats
s##rq_wb
s##blk_trace
s##bsg_job
s##throtl_data
blk_rq_count_integrity_sg extern int blk_rq_count_integrity_sg ( s#request_queue * , s#bio * ) 
blk_rq_map_integrity_sg extern int blk_rq_map_integrity_sg ( s#request_queue * , s#bio * , s#scatterlist * ) 
blk_integrity_compare extern int blk_integrity_compare ( s#gendisk * , s#gendisk * ) 
blk_integrity_merge_rq extern t#bool blk_integrity_merge_rq ( s#request_queue * , s#request * , s#request * ) 
blk_integrity_merge_bio extern t#bool blk_integrity_merge_bio ( s#request_queue * , s#request * , s#bio * ) 
blk_integrity_register extern void blk_integrity_register ( s#gendisk * , s#blk_integrity * ) 
blk_integrity_unregister extern void blk_integrity_unregister ( s#gendisk * ) 

/* block/blk-ioc.o */
s##sock
s##seq_file
s##vfsmount
s##posix_acl
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##workqueue_struct
s##cgroup_subsys_state
s##hd_geometry
s##pr_ops
s##timer_rand_state
s##disk_events
s##badblocks
s##kmem_cache
s##reclaim_state
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##swap_info_struct
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##mtd_info
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##blkcg_gq
s##blk_mq_debugfs_attr
s##blk_queue_stats
s##rq_wb
s##blk_trace
s##bsg_job
s##throtl_data
get_io_context void get_io_context ( s#io_context * ) 
put_io_context void put_io_context ( s#io_context * ) 
get_task_io_context s#io_context * get_task_io_context ( s#task_struct * , t#gfp_t , int ) 
ioc_lookup_icq s#io_cq * ioc_lookup_icq ( s#io_context * , s#request_queue * ) 

/* block/blk-lib.o */
s##posix_acl
s##vfsmount
s##sock
s##seq_file
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##hd_geometry
s##pr_ops
s##kmem_cache
s##blkcg_gq
s##workqueue_struct
s##blk_mq_debugfs_attr
s##blk_queue_stats
s##rq_wb
s##cgroup_subsys_state
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##badblocks
s##reclaim_state
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##writeback_control
s##swap_info_struct
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
__blkdev_issue_discard extern int __blkdev_issue_discard ( s#block_device * , t#sector_t , t#sector_t , t#gfp_t , int , s#bio * * ) 
blkdev_issue_discard extern int blkdev_issue_discard ( s#block_device * , t#sector_t , t#sector_t , t#gfp_t , unsigned long ) 
blkdev_issue_write_same extern int blkdev_issue_write_same ( s#block_device * , t#sector_t , t#sector_t , t#gfp_t , s#page * ) 
__blkdev_issue_zeroout extern int __blkdev_issue_zeroout ( s#block_device * , t#sector_t , t#sector_t , t#gfp_t , s#bio * * , unsigned ) 
blkdev_issue_zeroout extern int blkdev_issue_zeroout ( s#block_device * , t#sector_t , t#sector_t , t#gfp_t , unsigned ) 

/* block/blk-map.o */
s##kmem_cache
s##device_private
s##sock
s##seq_file
s##vfsmount
s##posix_acl
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##reclaim_state
s##workqueue_struct
s##cgroup_subsys_state
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##swap_info_struct
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##mtd_info
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##hd_geometry
s##pr_ops
s##timer_rand_state
s##disk_events
s##badblocks
s##blk_mq_debugfs_attr
s##blk_queue_stats
s##rq_wb
s##blkcg_gq
s##blk_trace
s##bsg_job
s##throtl_data
blk_rq_append_bio extern int blk_rq_append_bio ( s#request * , s#bio * * ) 
s#rq_map_data struct rq_map_data { s#page * * pages ; int page_order ; int nr_entries ; unsigned long offset ; int null_mapped ; int from_user ; } 
blk_rq_map_user_iov extern int blk_rq_map_user_iov ( s#request_queue * , s#request * , s#rq_map_data * , const s#iov_iter * , t#gfp_t ) 
blk_rq_map_user extern int blk_rq_map_user ( s#request_queue * , s#request * , s#rq_map_data * , void * , unsigned long , t#gfp_t ) 
blk_rq_unmap_user extern int blk_rq_unmap_user ( s#bio * ) 
blk_rq_map_kern extern int blk_rq_map_kern ( s#request_queue * , s#request * , void * , unsigned int , t#gfp_t ) 

/* block/blk-merge.o */
s##sock
s##seq_file
s##vfsmount
s##posix_acl
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##workqueue_struct
s##cgroup_subsys_state
s##hd_geometry
s##pr_ops
s##timer_rand_state
s##disk_events
s##badblocks
s##kmem_cache
s##reclaim_state
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##swap_info_struct
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##mtd_info
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##blkcg_gq
s##blk_mq_debugfs_attr
s##blk_queue_stats
s##rq_wb
s##bsg_job
s##throtl_data
blk_queue_split extern void blk_queue_split ( s#request_queue * , s#bio * * ) 
blk_recount_segments extern void blk_recount_segments ( s#request_queue * , s#bio * ) 
blk_rq_map_sg extern int blk_rq_map_sg ( s#request_queue * , s#request * , s#scatterlist * ) 

/* block/blk-mq.o */
s##sock
s##vfsmount
s##posix_acl
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##device_private
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##kmem_cache
s##fs_pin
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##bpf_prog_array
s##cgroup_taskset
s##pipe_inode_info
s##swap_info_struct
s##mem_cgroup
s##mempolicy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##hd_geometry
s##pr_ops
s##timer_rand_state
s##disk_events
s##badblocks
s##workqueue_struct
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##mtd_info
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s#blk_mq_debugfs_attr struct blk_mq_debugfs_attr { const char * name ; t#umode_t mode ; int ( * show ) ( void * , s#seq_file * ) ; t#ssize_t ( * write ) ( void * , const char * , t#size_t , t#loff_t * ) ; const s#seq_operations * seq_ops ; } 
s##blk_queue_stats
s##bsg_job
s##throtl_data
blk_freeze_queue_start void blk_freeze_queue_start ( s#request_queue * ) 
blk_mq_freeze_queue_wait void blk_mq_freeze_queue_wait ( s#request_queue * ) 
blk_mq_freeze_queue_wait_timeout int blk_mq_freeze_queue_wait_timeout ( s#request_queue * , unsigned long ) 
blk_mq_freeze_queue void blk_mq_freeze_queue ( s#request_queue * ) 
blk_mq_unfreeze_queue void blk_mq_unfreeze_queue ( s#request_queue * ) 
blk_mq_quiesce_queue_nowait void blk_mq_quiesce_queue_nowait ( s#request_queue * ) 
blk_mq_quiesce_queue void blk_mq_quiesce_queue ( s#request_queue * ) 
blk_mq_unquiesce_queue void blk_mq_unquiesce_queue ( s#request_queue * ) 
blk_mq_can_queue t#bool blk_mq_can_queue ( s#blk_mq_hw_ctx * ) 
blk_mq_alloc_request s#request * blk_mq_alloc_request ( s#request_queue * , unsigned int , t#blk_mq_req_flags_t ) 
blk_mq_alloc_request_hctx s#request * blk_mq_alloc_request_hctx ( s#request_queue * , unsigned int , t#blk_mq_req_flags_t , unsigned int ) 
blk_mq_free_request void blk_mq_free_request ( s#request * ) 
__blk_mq_end_request void __blk_mq_end_request ( s#request * , t#blk_status_t ) 
blk_mq_end_request void blk_mq_end_request ( s#request * , t#blk_status_t ) 
blk_mq_complete_request void blk_mq_complete_request ( s#request * ) 
blk_mq_complete_request_sync void blk_mq_complete_request_sync ( s#request * ) 
blk_mq_request_started int blk_mq_request_started ( s#request * ) 
blk_mq_request_completed int blk_mq_request_completed ( s#request * ) 
blk_mq_start_request void blk_mq_start_request ( s#request * ) 
blk_mq_requeue_request void blk_mq_requeue_request ( s#request * , t#bool ) 
blk_mq_add_to_requeue_list void blk_mq_add_to_requeue_list ( s#request * , t#bool , t#bool ) 
blk_mq_kick_requeue_list void blk_mq_kick_requeue_list ( s#request_queue * ) 
blk_mq_delay_kick_requeue_list void blk_mq_delay_kick_requeue_list ( s#request_queue * , unsigned long ) 
blk_mq_tag_to_rq s#request * blk_mq_tag_to_rq ( s#blk_mq_tags * , unsigned int ) 
blk_mq_flush_busy_ctxs void blk_mq_flush_busy_ctxs ( s#blk_mq_hw_ctx * , s#list_head * ) 
blk_mq_delay_run_hw_queue void blk_mq_delay_run_hw_queue ( s#blk_mq_hw_ctx * , unsigned long ) 
blk_mq_run_hw_queue t#bool blk_mq_run_hw_queue ( s#blk_mq_hw_ctx * , t#bool ) 
blk_mq_run_hw_queues void blk_mq_run_hw_queues ( s#request_queue * , t#bool ) 
blk_mq_queue_stopped t#bool blk_mq_queue_stopped ( s#request_queue * ) 
blk_mq_stop_hw_queue void blk_mq_stop_hw_queue ( s#blk_mq_hw_ctx * ) 
blk_mq_stop_hw_queues void blk_mq_stop_hw_queues ( s#request_queue * ) 
blk_mq_start_hw_queue void blk_mq_start_hw_queue ( s#blk_mq_hw_ctx * ) 
blk_mq_start_hw_queues void blk_mq_start_hw_queues ( s#request_queue * ) 
blk_mq_start_stopped_hw_queue void blk_mq_start_stopped_hw_queue ( s#blk_mq_hw_ctx * , t#bool ) 
blk_mq_start_stopped_hw_queues void blk_mq_start_stopped_hw_queues ( s#request_queue * , t#bool ) 
blk_mq_init_queue s#request_queue * blk_mq_init_queue ( s#blk_mq_tag_set * ) 
blk_mq_init_allocated_queue s#request_queue * blk_mq_init_allocated_queue ( s#blk_mq_tag_set * , s#request_queue * ) 
blk_mq_alloc_tag_set int blk_mq_alloc_tag_set ( s#blk_mq_tag_set * ) 
blk_mq_free_tag_set void blk_mq_free_tag_set ( s#blk_mq_tag_set * ) 
blk_mq_update_nr_hw_queues void blk_mq_update_nr_hw_queues ( s#blk_mq_tag_set * , int ) 

/* block/blk-mq-cpumap.o */
s##workqueue_struct
s##sock
s##seq_file
s##vfsmount
s##posix_acl
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##cgroup_subsys_state
s##hd_geometry
s##pr_ops
s##timer_rand_state
s##disk_events
s##badblocks
s##kmem_cache
s##reclaim_state
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##swap_info_struct
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##mtd_info
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##blkcg_gq
s##blk_mq_debugfs_attr
s##blk_queue_stats
s##rq_wb
s##blk_trace
s##bsg_job
s##throtl_data
blk_mq_map_queues int blk_mq_map_queues ( s#blk_mq_tag_set * ) 

/* block/blk-mq-debugfs.o */
s##vfsmount
s##posix_acl
s##module
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##compat_timespec
s##pollfd
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##device_private
s##sock
s##kernfs_open_node
s##kernfs_iattrs
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kmem_cache
s##blkcg_gq
s##workqueue_struct
s##blk_queue_stats
s##rq_wb
s##cgroup_subsys_state
s##blk_trace
s##bsg_job
s##throtl_data
s##hd_geometry
s##pr_ops
s##timer_rand_state
s##disk_events
s##badblocks
s##reclaim_state
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##iov_iter
s##swap_info_struct
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##mtd_info
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
__blk_mq_debugfs_rq_show int __blk_mq_debugfs_rq_show ( s#seq_file * , s#request * ) 
blk_mq_debugfs_rq_show int blk_mq_debugfs_rq_show ( s#seq_file * , void * ) 

/* block/blk-mq-pci.o */
s##workqueue_struct
s##sock
s##seq_file
s##vfsmount
s##posix_acl
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##device_private
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##cgroup_subsys_state
s##hd_geometry
s##pr_ops
s##timer_rand_state
s##disk_events
s##badblocks
s##kmem_cache
s##reclaim_state
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##swap_info_struct
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##mtd_info
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##blkcg_gq
s##blk_mq_debugfs_attr
s##blk_queue_stats
s##rq_wb
s##blk_trace
s##blk_flush_queue
s##bsg_job
s##throtl_data
s##msi_controller
s##proc_dir_entry
s##hotplug_slot
s##pci_vpd
s##pci_sriov
blk_mq_pci_map_queues int blk_mq_pci_map_queues ( s#blk_mq_tag_set * , s#pci_dev * , int ) 

/* block/blk-mq-rdma.o */
s##workqueue_struct
s##blk_mq_ctx
s##device_private
t#__addrpair typedef t#__u64 __addrpair 
t#__portpair typedef t#__u32 __portpair 
t#__kernel_sa_family_t typedef unsigned short __kernel_sa_family_t 
t#sa_family_t typedef t#__kernel_sa_family_t sa_family_t 
s#sockaddr struct sockaddr { t#sa_family_t sa_family ; char sa_data [ 14 ] ; } 
s##posix_acl
s##vfsmount
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
t#netdev_features_t typedef t#u64 netdev_features_t 
s#net_device_stats struct net_device_stats { unsigned long rx_packets ; unsigned long tx_packets ; unsigned long rx_bytes ; unsigned long tx_bytes ; unsigned long rx_errors ; unsigned long tx_errors ; unsigned long rx_dropped ; unsigned long tx_dropped ; unsigned long multicast ; unsigned long collisions ; unsigned long rx_length_errors ; unsigned long rx_over_errors ; unsigned long rx_crc_errors ; unsigned long rx_frame_errors ; unsigned long rx_fifo_errors ; unsigned long rx_missed_errors ; unsigned long tx_aborted_errors ; unsigned long tx_carrier_errors ; unsigned long tx_fifo_errors ; unsigned long tx_heartbeat_errors ; unsigned long tx_window_errors ; unsigned long rx_compressed ; unsigned long tx_compressed ; } 
e#netdev_tx enum netdev_tx { __NETDEV_TX_MIN = ( - ( ( int ) ( ~ 0U >> 1 ) ) - 1 ) , NETDEV_TX_OK = 0x00 , NETDEV_TX_BUSY = 0x10 , } 
t#netdev_tx_t typedef e#netdev_tx netdev_tx_t 
s##sec_path
t#select_queue_fallback_t typedef t#u16 ( * select_queue_fallback_t ) ( s#net_device * , s#sk_buff * , s#net_device * ) 
s#ifmap struct ifmap { unsigned long mem_start ; unsigned long mem_end ; unsigned short base_addr ; unsigned char irq ; unsigned char dma ; unsigned char port ; } 
t#raw_hdlc_proto typedef struct { unsigned short encoding ; unsigned short parity ; } raw_hdlc_proto 
t#cisco_proto typedef struct { unsigned int interval ; unsigned int timeout ; } cisco_proto 
t#fr_proto typedef struct { unsigned int t391 ; unsigned int t392 ; unsigned int n391 ; unsigned int n392 ; unsigned int n393 ; unsigned short lmi ; unsigned short dce ; } fr_proto 
t#fr_proto_pvc typedef struct { unsigned int dlci ; } fr_proto_pvc 
t#fr_proto_pvc_info typedef struct { unsigned int dlci ; char master [ 16 ] ; } fr_proto_pvc_info 
t#sync_serial_settings typedef struct { unsigned int clock_rate ; unsigned int clock_type ; unsigned short loopback ; } sync_serial_settings 
t#te1_settings typedef struct { unsigned int clock_rate ; unsigned int clock_type ; unsigned short loopback ; unsigned int slot_map ; } te1_settings 
s#if_settings struct if_settings { unsigned int type ; unsigned int size ; union { t#raw_hdlc_proto * raw_hdlc ; t#cisco_proto * cisco ; t#fr_proto * fr ; t#fr_proto_pvc * fr_pvc ; t#fr_proto_pvc_info * fr_pvc_info ; t#sync_serial_settings * sync ; t#te1_settings * te1 ; } ifs_ifsu ; } 
s#ifreq struct ifreq { union { char ifrn_name [ 16 ] ; } ifr_ifrn ; union { s#sockaddr ifru_addr ; s#sockaddr ifru_dstaddr ; s#sockaddr ifru_broadaddr ; s#sockaddr ifru_netmask ; s#sockaddr ifru_hwaddr ; short ifru_flags ; int ifru_ivalue ; int ifru_mtu ; s#ifmap ifru_map ; char ifru_slave [ 16 ] ; char ifru_newname [ 16 ] ; void * ifru_data ; s#if_settings ifru_settings ; } ifr_ifru ; } 
t#possible_net_t typedef struct { s#net * net ; } possible_net_t 
s#pneigh_entry struct pneigh_entry { s#pneigh_entry * next ; t#possible_net_t net ; s#net_device * dev ; t#u8 flags ; t#u8 key [ 0 ] ; } 
s#sk_buff_head struct sk_buff_head { s#sk_buff * next ; s#sk_buff * prev ; t#__u32 qlen ; t#spinlock_t lock ; } 
s#neigh_statistics struct neigh_statistics { unsigned long allocs ; unsigned long destroys ; unsigned long hash_grows ; unsigned long res_failed ; unsigned long lookups ; unsigned long hits ; unsigned long rcv_probes_mcast ; unsigned long rcv_probes_ucast ; unsigned long periodic_gc_runs ; unsigned long forced_gc_runs ; unsigned long unres_discards ; unsigned long table_fulls ; } 
s#neigh_hash_table struct neigh_hash_table { s#neighbour * * hash_buckets ; unsigned int hash_shift ; t#__u32 hash_rnd [ 4 ] ; s#callback_head rcu ; } 
s#neigh_table struct neigh_table { int family ; int entry_size ; int key_len ; t#__be16 protocol ; t#__u32 ( * hash ) ( const void * , const s#net_device * , t#__u32 * ) ; t#bool ( * key_eq ) ( const s#neighbour * , const void * ) ; int ( * constructor ) ( s#neighbour * ) ; int ( * pconstructor ) ( s#pneigh_entry * ) ; void ( * pdestructor ) ( s#pneigh_entry * ) ; void ( * proxy_redo ) ( s#sk_buff * ) ; char * id ; s#neigh_parms parms ; s#list_head parms_list ; int gc_interval ; int gc_thresh1 ; int gc_thresh2 ; int gc_thresh3 ; unsigned long last_flush ; s#delayed_work gc_work ; s#timer_list proxy_timer ; s#sk_buff_head proxy_queue ; t#atomic_t entries ; t#rwlock_t lock ; unsigned long last_rand ; s#neigh_statistics * stats ; s#neigh_hash_table * nht ; s#pneigh_entry * * phash_buckets ; } 
s#hh_cache struct hh_cache { unsigned int hh_len ; t#seqlock_t hh_lock ; unsigned long hh_data [ ( ( ( 32 ) + ( 16 - 1 ) ) & ~ ( 16 - 1 ) ) / sizeof ( long ) ] ; } 
s#neigh_ops struct neigh_ops { int family ; void ( * solicit ) ( s#neighbour * , s#sk_buff * ) ; void ( * error_report ) ( s#neighbour * , s#sk_buff * ) ; int ( * output ) ( s#neighbour * , s#sk_buff * ) ; int ( * connected_output ) ( s#neighbour * , s#sk_buff * ) ; } 
s#neighbour struct neighbour { s#neighbour * next ; s#neigh_table * tbl ; s#neigh_parms * parms ; unsigned long confirmed ; unsigned long updated ; t#rwlock_t lock ; t#atomic_t refcnt ; s#sk_buff_head arp_queue ; unsigned int arp_queue_len_bytes ; s#timer_list timer ; unsigned long used ; t#atomic_t probes ; t#__u8 flags ; t#__u8 nud_state ; t#__u8 type ; t#__u8 dead ; t#seqlock_t ha_lock ; unsigned char ha [ ( ( ( ( 32 ) ) + ( ( typeof ( ( 32 ) ) ) ( ( sizeof ( unsigned long ) ) ) - 1 ) ) & ~ ( ( typeof ( ( 32 ) ) ) ( ( sizeof ( unsigned long ) ) ) - 1 ) ) ] ; s#hh_cache hh ; int ( * output ) ( s#neighbour * , s#sk_buff * ) ; const s#neigh_ops * ops ; s#callback_head rcu ; s#net_device * dev ; t#u8 primary_key [ 0 ] ; } 
E#NEIGH_VAR_LOCKTIME 12 
s#neigh_parms struct neigh_parms { t#possible_net_t net ; s#net_device * dev ; s#list_head list ; int ( * neigh_setup ) ( s#neighbour * ) ; void ( * neigh_cleanup ) ( s#neighbour * ) ; s#neigh_table * tbl ; void * sysctl_table ; int dead ; t#atomic_t refcnt ; s#callback_head callback_head ; int reachable_time ; int data [ ( E#NEIGH_VAR_LOCKTIME + 1 ) ] ; unsigned long data_state [ ( ( ( ( E#NEIGH_VAR_LOCKTIME + 1 ) ) + ( 8 * sizeof ( long ) ) - 1 ) / ( 8 * sizeof ( long ) ) ) ] ; } 
s#rtnl_link_stats64 struct rtnl_link_stats64 { t#__u64 rx_packets ; t#__u64 tx_packets ; t#__u64 rx_bytes ; t#__u64 tx_bytes ; t#__u64 rx_errors ; t#__u64 tx_errors ; t#__u64 rx_dropped ; t#__u64 tx_dropped ; t#__u64 multicast ; t#__u64 collisions ; t#__u64 rx_length_errors ; t#__u64 rx_over_errors ; t#__u64 rx_crc_errors ; t#__u64 rx_frame_errors ; t#__u64 rx_fifo_errors ; t#__u64 rx_missed_errors ; t#__u64 tx_aborted_errors ; t#__u64 tx_carrier_errors ; t#__u64 tx_fifo_errors ; t#__u64 tx_heartbeat_errors ; t#__u64 tx_window_errors ; t#__u64 rx_compressed ; t#__u64 tx_compressed ; t#__u64 rx_nohandler ; } 
s#ifla_vf_info struct ifla_vf_info { t#__u32 vf ; t#__u8 mac [ 32 ] ; t#__u32 vlan ; t#__u32 qos ; t#__u32 spoofchk ; t#__u32 linkstate ; t#__u32 min_tx_rate ; t#__u32 max_tx_rate ; t#__u32 rss_query_en ; t#__u32 trusted ; t#__be16 vlan_proto ; } 
s#ifla_vf_stats struct ifla_vf_stats { t#__u64 rx_packets ; t#__u64 tx_packets ; t#__u64 rx_bytes ; t#__u64 tx_bytes ; t#__u64 broadcast ; t#__u64 multicast ; t#__u64 rx_dropped ; t#__u64 tx_dropped ; } 
s#nlattr struct nlattr { t#__u16 nla_len ; t#__u16 nla_type ; } 
e#tc_setup_type enum tc_setup_type { TC_SETUP_QDISC_MQPRIO , TC_SETUP_CLSU32 , TC_SETUP_CLSFLOWER , TC_SETUP_CLSMATCHALL , TC_SETUP_CLSBPF , TC_SETUP_BLOCK , TC_SETUP_QDISC_CBS , TC_SETUP_QDISC_RED , TC_SETUP_QDISC_PRIO , TC_SETUP_QDISC_MQ , } 
s#netlink_ext_ack struct netlink_ext_ack { const char * _msg ; const s#nlattr * bad_attr ; t#u8 cookie [ 20 ] ; t#u8 cookie_len ; } 
s#ndmsg struct ndmsg { t#__u8 ndm_family ; t#__u8 ndm_pad1 ; t#__u16 ndm_pad2 ; t#__s32 ndm_ifindex ; t#__u16 ndm_state ; t#__u8 ndm_flags ; t#__u8 ndm_type ; } 
s#nlmsghdr struct nlmsghdr { t#__u32 nlmsg_len ; t#__u16 nlmsg_type ; t#__u16 nlmsg_flags ; t#__u32 nlmsg_seq ; t#__u32 nlmsg_pid ; } 
s#netlink_callback struct netlink_callback { s#sk_buff * skb ; const s#nlmsghdr * nlh ; int ( * start ) ( s#netlink_callback * ) ; int ( * dump ) ( s#sk_buff * , s#netlink_callback * ) ; int ( * done ) ( s#netlink_callback * ) ; void * data ; s#module * module ; t#u16 family ; t#u16 min_dump_alloc ; unsigned int prev_seq , seq ; long args [ 6 ] ; } 
s#netdev_phys_item_id struct netdev_phys_item_id { unsigned char id [ 32 ] ; unsigned char id_len ; } 
s##udp_tunnel_info
e#bpf_netdev_command enum bpf_netdev_command { XDP_SETUP_PROG , XDP_SETUP_PROG_HW , XDP_QUERY_PROG , XDP_QUERY_PROG_HW , BPF_OFFLOAD_VERIFIER_PREP , BPF_OFFLOAD_TRANSLATE , BPF_OFFLOAD_DESTROY , BPF_OFFLOAD_MAP_ALLOC , BPF_OFFLOAD_MAP_FREE , XDP_QUERY_XSK_UMEM , XDP_SETUP_XSK_UMEM , } 
e#bpf_prog_type enum bpf_prog_type { BPF_PROG_TYPE_UNSPEC , BPF_PROG_TYPE_SOCKET_FILTER , BPF_PROG_TYPE_KPROBE , BPF_PROG_TYPE_SCHED_CLS , BPF_PROG_TYPE_SCHED_ACT , BPF_PROG_TYPE_TRACEPOINT , BPF_PROG_TYPE_XDP , BPF_PROG_TYPE_PERF_EVENT , BPF_PROG_TYPE_CGROUP_SKB , BPF_PROG_TYPE_CGROUP_SOCK , BPF_PROG_TYPE_LWT_IN , BPF_PROG_TYPE_LWT_OUT , BPF_PROG_TYPE_LWT_XMIT , BPF_PROG_TYPE_SOCK_OPS , BPF_PROG_TYPE_SK_SKB , BPF_PROG_TYPE_CGROUP_DEVICE , BPF_PROG_TYPE_SK_MSG , BPF_PROG_TYPE_RAW_TRACEPOINT , BPF_PROG_TYPE_CGROUP_SOCK_ADDR , } 
e#bpf_attach_type enum bpf_attach_type { BPF_CGROUP_INET_INGRESS , BPF_CGROUP_INET_EGRESS , BPF_CGROUP_INET_SOCK_CREATE , BPF_CGROUP_SOCK_OPS , BPF_SK_SKB_STREAM_PARSER , BPF_SK_SKB_STREAM_VERDICT , BPF_CGROUP_DEVICE , BPF_SK_MSG_VERDICT , BPF_CGROUP_INET4_BIND , BPF_CGROUP_INET6_BIND , BPF_CGROUP_INET4_CONNECT , BPF_CGROUP_INET6_CONNECT , BPF_CGROUP_INET4_POST_BIND , BPF_CGROUP_INET6_POST_BIND , BPF_CGROUP_UDP4_SENDMSG , BPF_CGROUP_UDP6_SENDMSG , __MAX_BPF_ATTACH_TYPE } 
s##bpf_prog_aux
s#sock_filter struct sock_filter { t#__u16 code ; t#__u8 jt ; t#__u8 jf ; t#__u32 k ; } 
s#sock_fprog_kern struct sock_fprog_kern { t#u16 len ; s#sock_filter * filter ; } 
s#bpf_insn struct bpf_insn { t#__u8 code ; t#__u8 dst_reg : 4 ; t#__u8 src_reg : 4 ; t#__s16 off ; t#__s32 imm ; } 
s#bpf_prog struct bpf_prog { t#u16 pages ; ; t#u16 jited : 1 , jit_requested : 1 , undo_set_mem : 1 , gpl_compatible : 1 , cb_access : 1 , dst_needed : 1 , blinded : 1 , is_func : 1 , has_callchain_buf : 1 ; e#bpf_prog_type type ; e#bpf_attach_type expected_attach_type ; t#u32 len ; t#u32 jited_len ; t#u8 tag [ 8 ] ; s#bpf_prog_aux * aux ; s#sock_fprog_kern * orig_prog ; unsigned int ( * bpf_func ) ( const void * , const s#bpf_insn * ) ; union { s#sock_filter insns [ 0 ] ; s#bpf_insn insnsi [ 0 ] ; } ; } 
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s#netdev_bpf struct netdev_bpf { e#bpf_netdev_command command ; union { struct { t#u32 flags ; s#bpf_prog * prog ; s#netlink_ext_ack * extack ; } ; struct { t#u32 prog_id ; t#u32 prog_flags ; } ; struct { s#bpf_prog * prog ; const s#bpf_prog_offload_ops * ops ; } verifier ; struct { s#bpf_prog * prog ; } offload ; struct { s#bpf_offloaded_map * offmap ; } ; struct { s#xdp_umem * umem ; t#u16 queue_id ; } xsk ; } ; } 
s#xdp_mem_info struct xdp_mem_info { t#u32 type ; t#u32 id ; } 
s#xdp_frame struct xdp_frame { void * data ; t#u16 len ; t#u16 headroom ; t#u16 metasize ; s#xdp_mem_info mem ; s#net_device * dev_rx ; } 
s#net_device_ops struct net_device_ops { int ( * ndo_init ) ( s#net_device * ) ; void ( * ndo_uninit ) ( s#net_device * ) ; int ( * ndo_open ) ( s#net_device * ) ; int ( * ndo_stop ) ( s#net_device * ) ; t#netdev_tx_t ( * ndo_start_xmit ) ( s#sk_buff * , s#net_device * ) ; t#netdev_features_t ( * ndo_features_check ) ( s#sk_buff * , s#net_device * , t#netdev_features_t ) ; t#u16 ( * ndo_select_queue ) ( s#net_device * , s#sk_buff * , s#net_device * , t#select_queue_fallback_t ) ; void ( * ndo_change_rx_flags ) ( s#net_device * , int ) ; void ( * ndo_set_rx_mode ) ( s#net_device * ) ; int ( * ndo_set_mac_address ) ( s#net_device * , void * ) ; int ( * ndo_validate_addr ) ( s#net_device * ) ; int ( * ndo_do_ioctl ) ( s#net_device * , s#ifreq * , int ) ; int ( * ndo_set_config ) ( s#net_device * , s#ifmap * ) ; int ( * ndo_change_mtu ) ( s#net_device * , int ) ; int ( * ndo_neigh_setup ) ( s#net_device * , s#neigh_parms * ) ; void ( * ndo_tx_timeout ) ( s#net_device * ) ; void ( * ndo_get_stats64 ) ( s#net_device * , s#rtnl_link_stats64 * ) ; t#bool ( * ndo_has_offload_stats ) ( const s#net_device * , int ) ; int ( * ndo_get_offload_stats ) ( int , const s#net_device * , void * ) ; s#net_device_stats * ( * ndo_get_stats ) ( s#net_device * ) ; int ( * ndo_vlan_rx_add_vid ) ( s#net_device * , t#__be16 , t#u16 ) ; int ( * ndo_vlan_rx_kill_vid ) ( s#net_device * , t#__be16 , t#u16 ) ; int ( * ndo_set_vf_mac ) ( s#net_device * , int , t#u8 * ) ; int ( * ndo_set_vf_vlan ) ( s#net_device * , int , t#u16 , t#u8 , t#__be16 ) ; int ( * ndo_set_vf_rate ) ( s#net_device * , int , int , int ) ; int ( * ndo_set_vf_spoofchk ) ( s#net_device * , int , t#bool ) ; int ( * ndo_set_vf_trust ) ( s#net_device * , int , t#bool ) ; int ( * ndo_get_vf_config ) ( s#net_device * , int , s#ifla_vf_info * ) ; int ( * ndo_set_vf_link_state ) ( s#net_device * , int , int ) ; int ( * ndo_get_vf_stats ) ( s#net_device * , int , s#ifla_vf_stats * ) ; int ( * ndo_set_vf_port ) ( s#net_device * , int , s#nlattr * [ ] ) ; int ( * ndo_get_vf_port ) ( s#net_device * , int , s#sk_buff * ) ; int ( * ndo_set_vf_guid ) ( s#net_device * , int , t#u64 , int ) ; int ( * ndo_set_vf_rss_query_en ) ( s#net_device * , int , t#bool ) ; int ( * ndo_setup_tc ) ( s#net_device * , e#tc_setup_type , void * ) ; int ( * ndo_fcoe_get_wwn ) ( s#net_device * , t#u64 * , int ) ; int ( * ndo_rx_flow_steer ) ( s#net_device * , const s#sk_buff * , t#u16 , t#u32 ) ; int ( * ndo_add_slave ) ( s#net_device * , s#net_device * , s#netlink_ext_ack * ) ; int ( * ndo_del_slave ) ( s#net_device * , s#net_device * ) ; t#netdev_features_t ( * ndo_fix_features ) ( s#net_device * , t#netdev_features_t ) ; int ( * ndo_set_features ) ( s#net_device * , t#netdev_features_t ) ; int ( * ndo_neigh_construct ) ( s#net_device * , s#neighbour * ) ; void ( * ndo_neigh_destroy ) ( s#net_device * , s#neighbour * ) ; int ( * ndo_fdb_add ) ( s#ndmsg * , s#nlattr * [ ] , s#net_device * , const unsigned char * , t#u16 , t#u16 ) ; int ( * ndo_fdb_del ) ( s#ndmsg * , s#nlattr * [ ] , s#net_device * , const unsigned char * , t#u16 ) ; int ( * ndo_fdb_dump ) ( s#sk_buff * , s#netlink_callback * , s#net_device * , s#net_device * , int * ) ; int ( * ndo_bridge_setlink ) ( s#net_device * , s#nlmsghdr * , t#u16 ) ; int ( * ndo_bridge_getlink ) ( s#sk_buff * , t#u32 , t#u32 , s#net_device * , t#u32 , int ) ; int ( * ndo_bridge_dellink ) ( s#net_device * , s#nlmsghdr * , t#u16 ) ; int ( * ndo_change_carrier ) ( s#net_device * , t#bool ) ; int ( * ndo_get_phys_port_id ) ( s#net_device * , s#netdev_phys_item_id * ) ; int ( * ndo_get_phys_port_name ) ( s#net_device * , char * , t#size_t ) ; void ( * ndo_udp_tunnel_add ) ( s#net_device * , s#udp_tunnel_info * ) ; void ( * ndo_udp_tunnel_del ) ( s#net_device * , s#udp_tunnel_info * ) ; void * ( * ndo_dfwd_add_station ) ( s#net_device * , s#net_device * ) ; void ( * ndo_dfwd_del_station ) ( s#net_device * , void * ) ; int ( * ndo_get_lock_subclass ) ( s#net_device * ) ; int ( * ndo_set_tx_maxrate ) ( s#net_device * , int , t#u32 ) ; int ( * ndo_get_iflink ) ( const s#net_device * ) ; int ( * ndo_change_proto_down ) ( s#net_device * , t#bool ) ; int ( * ndo_fill_metadata_dst ) ( s#net_device * , s#sk_buff * ) ; void ( * ndo_set_rx_headroom ) ( s#net_device * , int ) ; int ( * ndo_bpf ) ( s#net_device * , s#netdev_bpf * ) ; int ( * ndo_xdp_xmit ) ( s#net_device * , int , s#xdp_frame * * , t#u32 ) ; int ( * ndo_xsk_async_xmit ) ( s#net_device * , t#u32 ) ; } 
s#ethtool_cmd struct ethtool_cmd { t#__u32 cmd ; t#__u32 supported ; t#__u32 advertising ; t#__u16 speed ; t#__u8 duplex ; t#__u8 port ; t#__u8 phy_address ; t#__u8 transceiver ; t#__u8 autoneg ; t#__u8 mdio_support ; t#__u32 maxtxpkt ; t#__u32 maxrxpkt ; t#__u16 speed_hi ; t#__u8 eth_tp_mdix ; t#__u8 eth_tp_mdix_ctrl ; t#__u32 lp_advertising ; t#__u32 reserved [ 2 ] ; } 
s#ethtool_drvinfo struct ethtool_drvinfo { t#__u32 cmd ; char driver [ 32 ] ; char version [ 32 ] ; char fw_version [ 32 ] ; char bus_info [ 32 ] ; char erom_version [ 32 ] ; char reserved2 [ 12 ] ; t#__u32 n_priv_flags ; t#__u32 n_stats ; t#__u32 testinfo_len ; t#__u32 eedump_len ; t#__u32 regdump_len ; } 
s#ethtool_regs struct ethtool_regs { t#__u32 cmd ; t#__u32 version ; t#__u32 len ; t#__u8 data [ 0 ] ; } 
s#ethtool_wolinfo struct ethtool_wolinfo { t#__u32 cmd ; t#__u32 supported ; t#__u32 wolopts ; t#__u8 sopass [ 6 ] ; } 
s#ethtool_eeprom struct ethtool_eeprom { t#__u32 cmd ; t#__u32 magic ; t#__u32 offset ; t#__u32 len ; t#__u8 data [ 0 ] ; } 
s#ethtool_coalesce struct ethtool_coalesce { t#__u32 cmd ; t#__u32 rx_coalesce_usecs ; t#__u32 rx_max_coalesced_frames ; t#__u32 rx_coalesce_usecs_irq ; t#__u32 rx_max_coalesced_frames_irq ; t#__u32 tx_coalesce_usecs ; t#__u32 tx_max_coalesced_frames ; t#__u32 tx_coalesce_usecs_irq ; t#__u32 tx_max_coalesced_frames_irq ; t#__u32 stats_block_coalesce_usecs ; t#__u32 use_adaptive_rx_coalesce ; t#__u32 use_adaptive_tx_coalesce ; t#__u32 pkt_rate_low ; t#__u32 rx_coalesce_usecs_low ; t#__u32 rx_max_coalesced_frames_low ; t#__u32 tx_coalesce_usecs_low ; t#__u32 tx_max_coalesced_frames_low ; t#__u32 pkt_rate_high ; t#__u32 rx_coalesce_usecs_high ; t#__u32 rx_max_coalesced_frames_high ; t#__u32 tx_coalesce_usecs_high ; t#__u32 tx_max_coalesced_frames_high ; t#__u32 rate_sample_interval ; } 
s#ethtool_ringparam struct ethtool_ringparam { t#__u32 cmd ; t#__u32 rx_max_pending ; t#__u32 rx_mini_max_pending ; t#__u32 rx_jumbo_max_pending ; t#__u32 tx_max_pending ; t#__u32 rx_pending ; t#__u32 rx_mini_pending ; t#__u32 rx_jumbo_pending ; t#__u32 tx_pending ; } 
s#ethtool_pauseparam struct ethtool_pauseparam { t#__u32 cmd ; t#__u32 autoneg ; t#__u32 rx_pause ; t#__u32 tx_pause ; } 
s#ethtool_test struct ethtool_test { t#__u32 cmd ; t#__u32 flags ; t#__u32 reserved ; t#__u32 len ; t#__u64 data [ 0 ] ; } 
e#ethtool_phys_id_state enum ethtool_phys_id_state { ETHTOOL_ID_INACTIVE , ETHTOOL_ID_ACTIVE , ETHTOOL_ID_ON , ETHTOOL_ID_OFF } 
s#ethtool_stats struct ethtool_stats { t#__u32 cmd ; t#__u32 n_stats ; t#__u64 data [ 0 ] ; } 
s#ethtool_tcpip4_spec struct ethtool_tcpip4_spec { t#__be32 ip4src ; t#__be32 ip4dst ; t#__be16 psrc ; t#__be16 pdst ; t#__u8 tos ; } 
s#ethtool_ah_espip4_spec struct ethtool_ah_espip4_spec { t#__be32 ip4src ; t#__be32 ip4dst ; t#__be32 spi ; t#__u8 tos ; } 
s#ethtool_usrip4_spec struct ethtool_usrip4_spec { t#__be32 ip4src ; t#__be32 ip4dst ; t#__be32 l4_4_bytes ; t#__u8 tos ; t#__u8 ip_ver ; t#__u8 proto ; } 
s#ethtool_tcpip6_spec struct ethtool_tcpip6_spec { t#__be32 ip6src [ 4 ] ; t#__be32 ip6dst [ 4 ] ; t#__be16 psrc ; t#__be16 pdst ; t#__u8 tclass ; } 
s#ethtool_ah_espip6_spec struct ethtool_ah_espip6_spec { t#__be32 ip6src [ 4 ] ; t#__be32 ip6dst [ 4 ] ; t#__be32 spi ; t#__u8 tclass ; } 
s#ethtool_usrip6_spec struct ethtool_usrip6_spec { t#__be32 ip6src [ 4 ] ; t#__be32 ip6dst [ 4 ] ; t#__be32 l4_4_bytes ; t#__u8 tclass ; t#__u8 l4_proto ; } 
s#ethhdr struct ethhdr { unsigned char h_dest [ 6 ] ; unsigned char h_source [ 6 ] ; t#__be16 h_proto ; } 
u#ethtool_flow_union union ethtool_flow_union { s#ethtool_tcpip4_spec tcp_ip4_spec ; s#ethtool_tcpip4_spec udp_ip4_spec ; s#ethtool_tcpip4_spec sctp_ip4_spec ; s#ethtool_ah_espip4_spec ah_ip4_spec ; s#ethtool_ah_espip4_spec esp_ip4_spec ; s#ethtool_usrip4_spec usr_ip4_spec ; s#ethtool_tcpip6_spec tcp_ip6_spec ; s#ethtool_tcpip6_spec udp_ip6_spec ; s#ethtool_tcpip6_spec sctp_ip6_spec ; s#ethtool_ah_espip6_spec ah_ip6_spec ; s#ethtool_ah_espip6_spec esp_ip6_spec ; s#ethtool_usrip6_spec usr_ip6_spec ; s#ethhdr ether_spec ; t#__u8 hdata [ 52 ] ; } 
s#ethtool_flow_ext struct ethtool_flow_ext { t#__u8 padding [ 2 ] ; unsigned char h_dest [ 6 ] ; t#__be16 vlan_etype ; t#__be16 vlan_tci ; t#__be32 data [ 2 ] ; } 
s#ethtool_rx_flow_spec struct ethtool_rx_flow_spec { t#__u32 flow_type ; u#ethtool_flow_union h_u ; s#ethtool_flow_ext h_ext ; u#ethtool_flow_union m_u ; s#ethtool_flow_ext m_ext ; t#__u64 ring_cookie ; t#__u32 location ; } 
s#ethtool_rxnfc struct ethtool_rxnfc { t#__u32 cmd ; t#__u32 flow_type ; t#__u64 data ; s#ethtool_rx_flow_spec fs ; union { t#__u32 rule_cnt ; t#__u32 rss_context ; } ; t#__u32 rule_locs [ 0 ] ; } 
s#ethtool_flash struct ethtool_flash { t#__u32 cmd ; t#__u32 region ; char data [ 128 ] ; } 
s#ethtool_channels struct ethtool_channels { t#__u32 cmd ; t#__u32 max_rx ; t#__u32 max_tx ; t#__u32 max_other ; t#__u32 max_combined ; t#__u32 rx_count ; t#__u32 tx_count ; t#__u32 other_count ; t#__u32 combined_count ; } 
s#ethtool_dump struct ethtool_dump { t#__u32 cmd ; t#__u32 version ; t#__u32 flag ; t#__u32 len ; t#__u8 data [ 0 ] ; } 
s#ethtool_ts_info struct ethtool_ts_info { t#__u32 cmd ; t#__u32 so_timestamping ; t#__s32 phc_index ; t#__u32 tx_types ; t#__u32 tx_reserved [ 3 ] ; t#__u32 rx_filters ; t#__u32 rx_reserved [ 3 ] ; } 
s#ethtool_modinfo struct ethtool_modinfo { t#__u32 cmd ; t#__u32 type ; t#__u32 eeprom_len ; t#__u32 reserved [ 8 ] ; } 
s#ethtool_eee struct ethtool_eee { t#__u32 cmd ; t#__u32 supported ; t#__u32 advertised ; t#__u32 lp_advertised ; t#__u32 eee_active ; t#__u32 eee_enabled ; t#__u32 tx_lpi_enabled ; t#__u32 tx_lpi_timer ; t#__u32 reserved [ 2 ] ; } 
s#ethtool_tunable struct ethtool_tunable { t#__u32 cmd ; t#__u32 id ; t#__u32 type_id ; t#__u32 len ; void * data [ 0 ] ; } 
t#__s8 typedef __signed__ char __s8 
s#ethtool_link_settings struct ethtool_link_settings { t#__u32 cmd ; t#__u32 speed ; t#__u8 duplex ; t#__u8 port ; t#__u8 phy_address ; t#__u8 autoneg ; t#__u8 mdio_support ; t#__u8 eth_tp_mdix ; t#__u8 eth_tp_mdix_ctrl ; t#__s8 link_mode_masks_nwords ; t#__u8 transceiver ; t#__u8 reserved1 [ 3 ] ; t#__u32 reserved [ 7 ] ; t#__u32 link_mode_masks [ 0 ] ; } 
E#ETHTOOL_LINK_MODE_FEC_BASER_BIT 51 
E#__ETHTOOL_LINK_MODE_LAST E#ETHTOOL_LINK_MODE_FEC_BASER_BIT 
s#ethtool_link_ksettings struct ethtool_link_ksettings { s#ethtool_link_settings base ; struct { unsigned long supported [ ( ( ( ( E#__ETHTOOL_LINK_MODE_LAST + 1 ) ) + ( 8 * sizeof ( long ) ) - 1 ) / ( 8 * sizeof ( long ) ) ) ] ; unsigned long advertising [ ( ( ( ( E#__ETHTOOL_LINK_MODE_LAST + 1 ) ) + ( 8 * sizeof ( long ) ) - 1 ) / ( 8 * sizeof ( long ) ) ) ] ; unsigned long lp_advertising [ ( ( ( ( E#__ETHTOOL_LINK_MODE_LAST + 1 ) ) + ( 8 * sizeof ( long ) ) - 1 ) / ( 8 * sizeof ( long ) ) ) ] ; } link_modes ; } 
s#ethtool_fecparam struct ethtool_fecparam { t#__u32 cmd ; t#__u32 active_fec ; t#__u32 fec ; t#__u32 reserved ; } 
s#ethtool_ops struct ethtool_ops { int ( * get_settings ) ( s#net_device * , s#ethtool_cmd * ) ; int ( * set_settings ) ( s#net_device * , s#ethtool_cmd * ) ; void ( * get_drvinfo ) ( s#net_device * , s#ethtool_drvinfo * ) ; int ( * get_regs_len ) ( s#net_device * ) ; void ( * get_regs ) ( s#net_device * , s#ethtool_regs * , void * ) ; void ( * get_wol ) ( s#net_device * , s#ethtool_wolinfo * ) ; int ( * set_wol ) ( s#net_device * , s#ethtool_wolinfo * ) ; t#u32 ( * get_msglevel ) ( s#net_device * ) ; void ( * set_msglevel ) ( s#net_device * , t#u32 ) ; int ( * nway_reset ) ( s#net_device * ) ; t#u32 ( * get_link ) ( s#net_device * ) ; int ( * get_eeprom_len ) ( s#net_device * ) ; int ( * get_eeprom ) ( s#net_device * , s#ethtool_eeprom * , t#u8 * ) ; int ( * set_eeprom ) ( s#net_device * , s#ethtool_eeprom * , t#u8 * ) ; int ( * get_coalesce ) ( s#net_device * , s#ethtool_coalesce * ) ; int ( * set_coalesce ) ( s#net_device * , s#ethtool_coalesce * ) ; void ( * get_ringparam ) ( s#net_device * , s#ethtool_ringparam * ) ; int ( * set_ringparam ) ( s#net_device * , s#ethtool_ringparam * ) ; void ( * get_pauseparam ) ( s#net_device * , s#ethtool_pauseparam * ) ; int ( * set_pauseparam ) ( s#net_device * , s#ethtool_pauseparam * ) ; void ( * self_test ) ( s#net_device * , s#ethtool_test * , t#u64 * ) ; void ( * get_strings ) ( s#net_device * , t#u32 , t#u8 * ) ; int ( * set_phys_id ) ( s#net_device * , e#ethtool_phys_id_state ) ; void ( * get_ethtool_stats ) ( s#net_device * , s#ethtool_stats * , t#u64 * ) ; int ( * begin ) ( s#net_device * ) ; void ( * complete ) ( s#net_device * ) ; t#u32 ( * get_priv_flags ) ( s#net_device * ) ; int ( * set_priv_flags ) ( s#net_device * , t#u32 ) ; int ( * get_sset_count ) ( s#net_device * , int ) ; int ( * get_rxnfc ) ( s#net_device * , s#ethtool_rxnfc * , t#u32 * ) ; int ( * set_rxnfc ) ( s#net_device * , s#ethtool_rxnfc * ) ; int ( * flash_device ) ( s#net_device * , s#ethtool_flash * ) ; int ( * reset ) ( s#net_device * , t#u32 * ) ; t#u32 ( * get_rxfh_key_size ) ( s#net_device * ) ; t#u32 ( * get_rxfh_indir_size ) ( s#net_device * ) ; int ( * get_rxfh ) ( s#net_device * , t#u32 * , t#u8 * , t#u8 * ) ; int ( * set_rxfh ) ( s#net_device * , const t#u32 * , const t#u8 * , const t#u8 ) ; int ( * get_rxfh_context ) ( s#net_device * , t#u32 * , t#u8 * , t#u8 * , t#u32 ) ; int ( * set_rxfh_context ) ( s#net_device * , const t#u32 * , const t#u8 * , const t#u8 , t#u32 * , t#bool ) ; void ( * get_channels ) ( s#net_device * , s#ethtool_channels * ) ; int ( * set_channels ) ( s#net_device * , s#ethtool_channels * ) ; int ( * get_dump_flag ) ( s#net_device * , s#ethtool_dump * ) ; int ( * get_dump_data ) ( s#net_device * , s#ethtool_dump * , void * ) ; int ( * set_dump ) ( s#net_device * , s#ethtool_dump * ) ; int ( * get_ts_info ) ( s#net_device * , s#ethtool_ts_info * ) ; int ( * get_module_info ) ( s#net_device * , s#ethtool_modinfo * ) ; int ( * get_module_eeprom ) ( s#net_device * , s#ethtool_eeprom * , t#u8 * ) ; int ( * get_eee ) ( s#net_device * , s#ethtool_eee * ) ; int ( * set_eee ) ( s#net_device * , s#ethtool_eee * ) ; int ( * get_tunable ) ( s#net_device * , const s#ethtool_tunable * , void * ) ; int ( * set_tunable ) ( s#net_device * , const s#ethtool_tunable * , const void * ) ; int ( * get_per_queue_coalesce ) ( s#net_device * , t#u32 , s#ethtool_coalesce * ) ; int ( * set_per_queue_coalesce ) ( s#net_device * , t#u32 , s#ethtool_coalesce * ) ; int ( * get_link_ksettings ) ( s#net_device * , s#ethtool_link_ksettings * ) ; int ( * set_link_ksettings ) ( s#net_device * , const s#ethtool_link_ksettings * ) ; int ( * get_fecparam ) ( s#net_device * , s#ethtool_fecparam * ) ; int ( * set_fecparam ) ( s#net_device * , s#ethtool_fecparam * ) ; } 
s##switchdev_ops
s##kmem_cache
s#dst_ops struct dst_ops { unsigned short family ; unsigned int gc_thresh ; int ( * gc ) ( s#dst_ops * ) ; s#dst_entry * ( * check ) ( s#dst_entry * , t#__u32 ) ; unsigned int ( * default_advmss ) ( const s#dst_entry * ) ; unsigned int ( * mtu ) ( const s#dst_entry * ) ; t#u32 * ( * cow_metrics ) ( s#dst_entry * , unsigned long ) ; void ( * destroy ) ( s#dst_entry * ) ; void ( * ifdown ) ( s#dst_entry * , s#net_device * , int ) ; s#dst_entry * ( * negative_advice ) ( s#dst_entry * ) ; void ( * link_failure ) ( s#sk_buff * ) ; void ( * update_pmtu ) ( s#dst_entry * , s#sock * , s#sk_buff * , t#u32 ) ; void ( * redirect ) ( s#dst_entry * , s#sock * , s#sk_buff * ) ; int ( * local_out ) ( s#net * , s#sock * , s#sk_buff * ) ; s#neighbour * ( * neigh_lookup ) ( const s#dst_entry * , s#sk_buff * , const void * ) ; void ( * confirm_neigh ) ( const s#dst_entry * , const void * ) ; s#kmem_cache * kmem_cachep ; s#percpu_counter pcpuc_entries __attribute__ ( ( __aligned__ ( 256 ) ) ) ; } 
s##xfrm_state
s##lwtunnel_state
s##uncached_list
s#rtable struct rtable { s#dst_entry dst ; int rt_genid ; unsigned int rt_flags ; t#__u16 rt_type ; t#__u8 rt_is_input ; t#__u8 rt_uses_gateway ; int rt_iif ; t#__be32 rt_gateway ; t#u32 rt_mtu_locked : 1 , rt_pmtu : 31 ; t#u32 rt_table_id ; s#list_head rt_uncached ; s#uncached_list * rt_uncached_list ; } 
s##rt6_info
s##dn_route
s#dst_entry struct dst_entry { s#callback_head callback_head ; s#dst_entry * child ; s#net_device * dev ; s#dst_ops * ops ; unsigned long _metrics ; unsigned long expires ; s#dst_entry * path ; s#dst_entry * from ; s#xfrm_state * xfrm ; int ( * input ) ( s#sk_buff * ) ; int ( * output ) ( s#net * , s#sock * , s#sk_buff * ) ; unsigned short flags ; short error ; short obsolete ; unsigned short header_len ; unsigned short trailer_len ; unsigned short __pad3 ; t#__u32 tclassid ; long __pad_to_align_refcnt [ 2 ] ; t#atomic_t __refcnt ; int __use ; unsigned long lastuse ; s#lwtunnel_state * lwtstate ; union { s#dst_entry * next ; s#rtable * rt_next ; s#rt6_info * rt6_next ; s#dn_route * dn_next ; } ; } 
t#__be64 typedef t#__u64 __be64 
s#flowi_tunnel struct flowi_tunnel { t#__be64 tun_id ; } 
s#flowi_common struct flowi_common { int flowic_oif ; int flowic_iif ; t#__u32 flowic_mark ; t#__u8 flowic_tos ; t#__u8 flowic_scope ; t#__u8 flowic_proto ; t#__u8 flowic_flags ; t#__u32 flowic_secid ; s#flowi_tunnel flowic_tun_key ; t#kuid_t flowic_uid ; } 
t#__le16 typedef t#__u16 __le16 
u#flowi_uli union flowi_uli { struct { t#__be16 dport ; t#__be16 sport ; } ports ; struct { t#__u8 type ; t#__u8 code ; } icmpt ; struct { t#__le16 dport ; t#__le16 sport ; } dnports ; t#__be32 spi ; t#__be32 gre_key ; struct { t#__u8 type ; } mht ; } 
s#flowi6 struct flowi6 { s#flowi_common __fl_common ; s#in6_addr daddr ; s#in6_addr saddr ; t#__be32 flowlabel ; u#flowi_uli uli ; } 
s#l3mdev_ops struct l3mdev_ops { t#u32 ( * l3mdev_fib_table ) ( const s#net_device * ) ; s#sk_buff * ( * l3mdev_l3_rcv ) ( s#net_device * , s#sk_buff * , t#u16 ) ; s#sk_buff * ( * l3mdev_l3_out ) ( s#net_device * , s#sock * , s#sk_buff * , t#u16 ) ; s#dst_entry * ( * l3mdev_link_scope_lookup ) ( const s#net_device * , s#flowi6 * ) ; } 
s#nd_opt_hdr struct nd_opt_hdr { t#__u8 nd_opt_type ; t#__u8 nd_opt_len ; } 
E#__ND_OPT_ARRAY_MAX ( 14 ) + 1 
s#ndisc_options struct ndisc_options { s#nd_opt_hdr * nd_opt_array [ E#__ND_OPT_ARRAY_MAX ] ; s#nd_opt_hdr * nd_opts_ri ; s#nd_opt_hdr * nd_opts_ri_end ; s#nd_opt_hdr * nd_useropts ; s#nd_opt_hdr * nd_useropts_end ; } 
s##prefix_info
s#ip6_sf_list struct ip6_sf_list { s#ip6_sf_list * sf_next ; s#in6_addr sf_addr ; unsigned long sf_count [ 2 ] ; unsigned char sf_gsresp ; unsigned char sf_oldin ; unsigned char sf_crcount ; } 
s#ifmcaddr6 struct ifmcaddr6 { s#in6_addr mca_addr ; s#inet6_dev * idev ; s#ifmcaddr6 * next ; s#ip6_sf_list * mca_sources ; s#ip6_sf_list * mca_tomb ; unsigned int mca_sfmode ; unsigned char mca_crcount ; unsigned long mca_sfcount [ 2 ] ; s#timer_list mca_timer ; unsigned int mca_flags ; int mca_users ; t#atomic_t mca_refcnt ; t#spinlock_t mca_lock ; unsigned long mca_cstamp ; unsigned long mca_tstamp ; } 
s#ifacaddr6 struct ifacaddr6 { s#in6_addr aca_addr ; s#inet6_dev * aca_idev ; s#rt6_info * aca_rt ; s#ifacaddr6 * aca_next ; int aca_users ; t#atomic_t aca_refcnt ; unsigned long aca_cstamp ; unsigned long aca_tstamp ; } 
s#ipv6_stable_secret struct ipv6_stable_secret { t#bool initialized ; s#in6_addr secret ; } 
s#ipv6_devconf struct ipv6_devconf { t#__s32 forwarding ; t#__s32 hop_limit ; t#__s32 mtu6 ; t#__s32 accept_ra ; t#__s32 accept_redirects ; t#__s32 autoconf ; t#__s32 dad_transmits ; t#__s32 rtr_solicits ; t#__s32 rtr_solicit_interval ; t#__s32 rtr_solicit_max_interval ; t#__s32 rtr_solicit_delay ; t#__s32 force_mld_version ; t#__s32 mldv1_unsolicited_report_interval ; t#__s32 mldv2_unsolicited_report_interval ; t#__s32 use_tempaddr ; t#__s32 temp_valid_lft ; t#__s32 temp_prefered_lft ; t#__s32 regen_max_retry ; t#__s32 max_desync_factor ; t#__s32 max_addresses ; t#__s32 accept_ra_defrtr ; t#__s32 accept_ra_min_hop_limit ; t#__s32 accept_ra_pinfo ; t#__s32 ignore_routes_with_linkdown ; t#__s32 accept_ra_rtr_pref ; t#__s32 rtr_probe_interval ; t#__s32 accept_ra_rt_info_min_plen ; t#__s32 accept_ra_rt_info_max_plen ; t#__s32 proxy_ndp ; t#__s32 accept_source_route ; t#__s32 accept_ra_from_local ; t#__s32 mc_forwarding ; t#__s32 disable_ipv6 ; t#__s32 drop_unicast_in_l2_multicast ; t#__s32 accept_dad ; t#__s32 force_tllao ; t#__s32 ndisc_notify ; t#__s32 suppress_frag_ndisc ; t#__s32 accept_ra_mtu ; t#__s32 drop_unsolicited_na ; s#ipv6_stable_secret stable_secret ; t#__s32 use_oif_addrs_only ; t#__s32 keep_addr_on_down ; t#__s32 seg6_enabled ; t#__s32 seg6_require_hmac ; t#__u32 enhanced_dad ; t#__u32 addr_gen_mode ; t#__s32 disable_policy ; s#ctl_table_header * sysctl_header ; } 
E#__IPSTATS_MIB_MAX ( 0 ) + 37 
s#u64_stats_sync struct u64_stats_sync { } 
s#ipstats_mib struct ipstats_mib { t#u64 mibs [ E#__IPSTATS_MIB_MAX ] ; s#u64_stats_sync syncp ; } 
E#__ICMP6_MIB_MAX ( 0 ) + 6 
s#icmpv6_mib_device struct icmpv6_mib_device { t#atomic_long_t mibs [ E#__ICMP6_MIB_MAX ] ; } 
s#icmpv6msg_mib_device struct icmpv6msg_mib_device { t#atomic_long_t mibs [ 512 ] ; } 
s#ipv6_devstat struct ipv6_devstat { s#proc_dir_entry * proc_dir_entry ; __typeof__ ( s#ipstats_mib ) * ipv6 ; __typeof__ ( s#icmpv6_mib_device ) * icmpv6dev ; __typeof__ ( s#icmpv6msg_mib_device ) * icmpv6msgdev ; } 
s#inet6_dev struct inet6_dev { s#net_device * dev ; s#list_head addr_list ; s#ifmcaddr6 * mc_list ; s#ifmcaddr6 * mc_tomb ; t#spinlock_t mc_lock ; unsigned char mc_qrv ; unsigned char mc_gq_running ; unsigned char mc_ifc_count ; unsigned char mc_dad_count ; unsigned long mc_v1_seen ; unsigned long mc_qi ; unsigned long mc_qri ; unsigned long mc_maxdelay ; s#timer_list mc_gq_timer ; s#timer_list mc_ifc_timer ; s#timer_list mc_dad_timer ; s#ifacaddr6 * ac_list ; t#rwlock_t lock ; t#atomic_t refcnt ; t#__u32 if_flags ; int dead ; t#u32 desync_factor ; t#u8 rndid [ 8 ] ; s#list_head tempaddr_list ; s#in6_addr token ; s#neigh_parms * nd_parms ; s#ipv6_devconf cnf ; s#ipv6_devstat stats ; s#timer_list rs_timer ; t#__s32 rs_interval ; t#__u8 rs_probes ; unsigned long tstamp ; s#callback_head rcu ; } 
s#ndisc_ops struct ndisc_ops { int ( * is_useropt ) ( t#u8 ) ; int ( * parse_options ) ( const s#net_device * , s#nd_opt_hdr * , s#ndisc_options * ) ; void ( * update ) ( const s#net_device * , s#neighbour * , t#u32 , t#u8 , const s#ndisc_options * ) ; int ( * opt_addr_space ) ( const s#net_device * , t#u8 , s#neighbour * , t#u8 * , t#u8 * * ) ; void ( * fill_addr_option ) ( const s#net_device * , s#sk_buff * , t#u8 , const t#u8 * ) ; void ( * prefix_rcv_add_addr ) ( s#net * , s#net_device * , const s#prefix_info * , s#inet6_dev * , s#in6_addr * , int , t#u32 , t#bool , t#bool , t#__u32 , t#u32 , t#bool ) ; } 
s#xfrmdev_ops struct xfrmdev_ops { int ( * xdo_dev_state_add ) ( s#xfrm_state * ) ; void ( * xdo_dev_state_delete ) ( s#xfrm_state * ) ; void ( * xdo_dev_state_free ) ( s#xfrm_state * ) ; t#bool ( * xdo_dev_offload_ok ) ( s#sk_buff * , s#xfrm_state * ) ; void ( * xdo_dev_state_advance_esn ) ( s#xfrm_state * ) ; } 
e#tls_offload_ctx_dir enum tls_offload_ctx_dir { TLS_OFFLOAD_CTX_DIR_RX , TLS_OFFLOAD_CTX_DIR_TX , } 
s##tls_crypto_info
s##tls_context
s#tlsdev_ops struct tlsdev_ops { int ( * tls_dev_add ) ( s#net_device * , s#sock * , e#tls_offload_ctx_dir , s#tls_crypto_info * , t#u32 ) ; void ( * tls_dev_del ) ( s#net_device * , s#tls_context * , e#tls_offload_ctx_dir ) ; void ( * tls_dev_resync_rx ) ( s#net_device * , s#sock * , t#u32 , t#u64 ) ; } 
s#header_ops struct header_ops { int ( * create ) ( s#sk_buff * , s#net_device * , unsigned short , const void * , const void * , unsigned int ) ; int ( * parse ) ( const s#sk_buff * , unsigned char * ) ; int ( * cache ) ( const s#neighbour * , s#hh_cache * , t#__be16 ) ; void ( * cache_update ) ( s#hh_cache * , const s#net_device * , const unsigned char * ) ; t#bool ( * validate ) ( const char * , unsigned int ) ; } 
s#netdev_hw_addr_list struct netdev_hw_addr_list { s#list_head list ; int count ; } 
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s#rps_map struct rps_map { unsigned int len ; s#callback_head rcu ; t#u16 cpus [ 0 ] ; } 
s#rps_dev_flow struct rps_dev_flow { t#u16 cpu ; t#u16 filter ; unsigned int last_qtail ; } 
s#rps_dev_flow_table struct rps_dev_flow_table { unsigned int mask ; s#callback_head rcu ; s#rps_dev_flow flows [ 0 ] ; } 
s#xdp_rxq_info struct xdp_rxq_info { s#net_device * dev ; t#u32 queue_index ; t#u32 reg_state ; s#xdp_mem_info mem ; } 
s#netdev_rx_queue struct netdev_rx_queue { s#rps_map * rps_map ; s#rps_dev_flow_table * rps_flow_table ; s#kobject kobj ; s#net_device * dev ; s#xdp_rxq_info xdp_rxq ; s#xdp_umem * umem ; } 
e#rx_handler_result enum rx_handler_result { RX_HANDLER_CONSUMED , RX_HANDLER_ANOTHER , RX_HANDLER_EXACT , RX_HANDLER_PASS , } 
t#rx_handler_result_t typedef e#rx_handler_result rx_handler_result_t 
t#rx_handler_func_t typedef t#rx_handler_result_t rx_handler_func_t ( s#sk_buff * * ) 
s#gnet_stats_queue struct gnet_stats_queue { t#__u32 qlen ; t#__u32 backlog ; t#__u32 drops ; t#__u32 requeues ; t#__u32 overlimits ; } 
s#tcf_result struct tcf_result { union { struct { unsigned long class ; t#u32 classid ; } ; const s#tcf_proto * goto_tp ; struct { t#bool ingress ; s#gnet_stats_queue * qstats ; } ; } ; } 
s##tcf_walker
t#tc_setup_cb_t typedef int tc_setup_cb_t ( e#tc_setup_type , void * , void * ) 
s#dql struct dql { unsigned int num_queued ; unsigned int adj_limit ; unsigned int last_obj_cnt ; unsigned int limit __attribute__ ( ( __aligned__ ( 256 ) ) ) ; unsigned int num_completed ; unsigned int prev_ovlimit ; unsigned int prev_num_queued ; unsigned int prev_last_obj_cnt ; unsigned int lowest_slack ; unsigned long slack_start_time ; unsigned int max_limit ; unsigned int min_limit ; unsigned int slack_hold_time ; } 
s#netdev_queue struct netdev_queue { s#net_device * dev ; s#Qdisc * qdisc ; s#Qdisc * qdisc_sleeping ; s#kobject kobj ; int numa_node ; unsigned long tx_maxrate ; unsigned long trans_timeout ; s#net_device * sb_dev ; s#xdp_umem * umem ; t#spinlock_t _xmit_lock __attribute__ ( ( __aligned__ ( 256 ) ) ) ; int xmit_lock_owner ; unsigned long trans_start ; unsigned long state ; s#dql dql ; } 
s#tcmsg struct tcmsg { unsigned char tcm_family ; unsigned char tcm__pad1 ; unsigned short tcm__pad2 ; int tcm_ifindex ; t#__u32 tcm_handle ; t#__u32 tcm_parent ; t#__u32 tcm_info ; } 
s##qdisc_walker
s#tc_stats struct tc_stats { t#__u64 bytes ; t#__u32 packets ; t#__u32 drops ; t#__u32 overlimits ; t#__u32 bps ; t#__u32 pps ; t#__u32 qlen ; t#__u32 backlog ; } 
s#gnet_dump struct gnet_dump { t#spinlock_t * lock ; s#sk_buff * skb ; s#nlattr * tail ; int compat_tc_stats ; int compat_xstats ; int padattr ; void * xstats ; int xstats_len ; s#tc_stats tc_stats ; } 
s#Qdisc_class_ops struct Qdisc_class_ops { s#netdev_queue * ( * select_queue ) ( s#Qdisc * , s#tcmsg * ) ; int ( * graft ) ( s#Qdisc * , unsigned long , s#Qdisc * , s#Qdisc * * , s#netlink_ext_ack * ) ; s#Qdisc * ( * leaf ) ( s#Qdisc * , unsigned long ) ; void ( * qlen_notify ) ( s#Qdisc * , unsigned long ) ; unsigned long ( * find ) ( s#Qdisc * , t#u32 ) ; int ( * change ) ( s#Qdisc * , t#u32 , t#u32 , s#nlattr * * , unsigned long * , s#netlink_ext_ack * ) ; int ( * delete ) ( s#Qdisc * , unsigned long ) ; void ( * walk ) ( s#Qdisc * , s#qdisc_walker * ) ; s#tcf_block * ( * tcf_block ) ( s#Qdisc * , unsigned long , s#netlink_ext_ack * ) ; unsigned long ( * bind_tcf ) ( s#Qdisc * , unsigned long , t#u32 ) ; void ( * unbind_tcf ) ( s#Qdisc * , unsigned long ) ; int ( * dump ) ( s#Qdisc * , unsigned long , s#sk_buff * , s#tcmsg * ) ; int ( * dump_stats ) ( s#Qdisc * , unsigned long , s#gnet_dump * ) ; } 
s#Qdisc_ops struct Qdisc_ops { s#Qdisc_ops * next ; const s#Qdisc_class_ops * cl_ops ; char id [ 16 ] ; int priv_size ; unsigned int static_flags ; int ( * enqueue ) ( s#sk_buff * , s#Qdisc * , s#sk_buff * * ) ; s#sk_buff * ( * dequeue ) ( s#Qdisc * ) ; s#sk_buff * ( * peek ) ( s#Qdisc * ) ; int ( * init ) ( s#Qdisc * , s#nlattr * , s#netlink_ext_ack * ) ; void ( * reset ) ( s#Qdisc * ) ; void ( * destroy ) ( s#Qdisc * ) ; int ( * change ) ( s#Qdisc * , s#nlattr * , s#netlink_ext_ack * ) ; void ( * attach ) ( s#Qdisc * ) ; int ( * change_tx_queue_len ) ( s#Qdisc * , unsigned int ) ; int ( * dump ) ( s#Qdisc * , s#sk_buff * ) ; int ( * dump_stats ) ( s#Qdisc * , s#gnet_dump * ) ; void ( * ingress_block_set ) ( s#Qdisc * , t#u32 ) ; void ( * egress_block_set ) ( s#Qdisc * , t#u32 ) ; t#u32 ( * ingress_block_get ) ( s#Qdisc * ) ; t#u32 ( * egress_block_get ) ( s#Qdisc * ) ; s#module * owner ; } 
s#tc_sizespec struct tc_sizespec { unsigned char cell_log ; unsigned char size_log ; short cell_align ; int overhead ; unsigned int linklayer ; unsigned int mpu ; unsigned int mtu ; unsigned int tsize ; } 
s#qdisc_size_table struct qdisc_size_table { s#callback_head rcu ; s#list_head list ; s#tc_sizespec szopts ; int refcnt ; t#u16 data [ ] ; } 
s##net_rate_estimator
s#gnet_stats_basic_packed struct gnet_stats_basic_packed { t#__u64 bytes ; t#__u32 packets ; } 
s#gnet_stats_basic_cpu struct gnet_stats_basic_cpu { s#gnet_stats_basic_packed bstats ; s#u64_stats_sync syncp ; } 
s#qdisc_skb_head struct qdisc_skb_head { s#sk_buff * head ; s#sk_buff * tail ; union { t#u32 qlen ; t#atomic_t atomic_qlen ; } ; t#spinlock_t lock ; } 
s#Qdisc struct Qdisc { int ( * enqueue ) ( s#sk_buff * , s#Qdisc * , s#sk_buff * * ) ; s#sk_buff * ( * dequeue ) ( s#Qdisc * ) ; unsigned int flags ; t#u32 limit ; const s#Qdisc_ops * ops ; s#qdisc_size_table * stab ; s#hlist_node hash ; t#u32 handle ; t#u32 parent ; s#netdev_queue * dev_queue ; s#net_rate_estimator * rate_est ; s#gnet_stats_basic_cpu * cpu_bstats ; s#gnet_stats_queue * cpu_qstats ; s#sk_buff_head gso_skb __attribute__ ( ( __aligned__ ( 256 ) ) ) ; s#qdisc_skb_head q ; s#gnet_stats_basic_packed bstats ; t#seqcount_t running ; s#gnet_stats_queue qstats ; unsigned long state ; s#Qdisc * next_sched ; s#sk_buff_head skb_bad_txq ; int padded ; t#refcount_t refcnt ; t#spinlock_t busylock __attribute__ ( ( __aligned__ ( 256 ) ) ) ; t#spinlock_t seqlock ; s#callback_head rcu ; } 
s#tcf_block struct tcf_block { s#list_head chain_list ; t#u32 index ; t#refcount_t refcnt ; s#net * net ; s#Qdisc * q ; s#list_head cb_list ; s#list_head owner_list ; t#bool keep_dst ; unsigned int offloadcnt ; unsigned int nooffloaddevcnt ; struct { s#tcf_chain * chain ; s#list_head filter_chain_list ; } chain0 ; s#callback_head rcu ; } 
s#tcf_chain struct tcf_chain { s#tcf_proto * filter_chain ; s#list_head list ; s#tcf_block * block ; t#u32 index ; unsigned int refcnt ; unsigned int action_refcnt ; t#bool explicitly_created ; const s#tcf_proto_ops * tmplt_ops ; void * tmplt_priv ; } 
s#tcf_proto_ops struct tcf_proto_ops { s#list_head head ; char kind [ 16 ] ; int ( * classify ) ( s#sk_buff * , const s#tcf_proto * , s#tcf_result * ) ; int ( * init ) ( s#tcf_proto * ) ; void ( * destroy ) ( s#tcf_proto * , s#netlink_ext_ack * ) ; void * ( * get ) ( s#tcf_proto * , t#u32 ) ; int ( * change ) ( s#net * , s#sk_buff * , s#tcf_proto * , unsigned long , t#u32 , s#nlattr * * , void * * , t#bool , s#netlink_ext_ack * ) ; int ( * delete ) ( s#tcf_proto * , void * , t#bool * , s#netlink_ext_ack * ) ; void ( * walk ) ( s#tcf_proto * , s#tcf_walker * ) ; int ( * reoffload ) ( s#tcf_proto * , t#bool , t#tc_setup_cb_t * , void * , s#netlink_ext_ack * ) ; void ( * bind_class ) ( void * , t#u32 , unsigned long ) ; void * ( * tmplt_create ) ( s#net * , s#tcf_chain * , s#nlattr * * , s#netlink_ext_ack * ) ; void ( * tmplt_destroy ) ( void * ) ; int ( * dump ) ( s#net * , s#tcf_proto * , void * , s#sk_buff * , s#tcmsg * ) ; int ( * tmplt_dump ) ( s#sk_buff * , s#net * , void * ) ; s#module * owner ; } 
s#tcf_proto struct tcf_proto { s#tcf_proto * next ; void * root ; int ( * classify ) ( s#sk_buff * , const s#tcf_proto * , s#tcf_result * ) ; t#__be16 protocol ; t#u32 prio ; void * data ; const s#tcf_proto_ops * ops ; s#tcf_chain * chain ; s#callback_head rcu ; } 
s#mini_Qdisc struct mini_Qdisc { s#tcf_proto * filter_list ; s#gnet_stats_basic_cpu * cpu_bstats ; s#gnet_stats_queue * cpu_qstats ; s#callback_head rcu ; } 
s##nf_hook_entry
s##cpu_rmap
s#xps_map struct xps_map { unsigned int len ; unsigned int alloc_len ; s#callback_head rcu ; t#u16 queues [ 0 ] ; } 
s#xps_dev_maps struct xps_dev_maps { s#callback_head rcu ; s#xps_map * attr_map [ 0 ] ; } 
s#pcpu_lstats struct pcpu_lstats { t#u64 packets ; t#u64 bytes ; s#u64_stats_sync syncp ; } 
s#pcpu_sw_netstats struct pcpu_sw_netstats { t#u64 rx_packets ; t#u64 rx_bytes ; t#u64 tx_packets ; t#u64 tx_bytes ; s#u64_stats_sync syncp ; } 
s##pcpu_dstats
s##garp_port
s##mrp_port
s#nla_policy struct nla_policy { t#u16 type ; t#u16 len ; void * validation_data ; } 
s#rtnl_link_ops struct rtnl_link_ops { s#list_head list ; const char * kind ; t#size_t priv_size ; void ( * setup ) ( s#net_device * ) ; int maxtype ; const s#nla_policy * policy ; int ( * validate ) ( s#nlattr * [ ] , s#nlattr * [ ] , s#netlink_ext_ack * ) ; int ( * newlink ) ( s#net * , s#net_device * , s#nlattr * [ ] , s#nlattr * [ ] , s#netlink_ext_ack * ) ; int ( * changelink ) ( s#net_device * , s#nlattr * [ ] , s#nlattr * [ ] , s#netlink_ext_ack * ) ; void ( * dellink ) ( s#net_device * , s#list_head * ) ; t#size_t ( * get_size ) ( const s#net_device * ) ; int ( * fill_info ) ( s#sk_buff * , const s#net_device * ) ; t#size_t ( * get_xstats_size ) ( const s#net_device * ) ; int ( * fill_xstats ) ( s#sk_buff * , const s#net_device * ) ; unsigned int ( * get_num_tx_queues ) ( void ) ; unsigned int ( * get_num_rx_queues ) ( void ) ; int slave_maxtype ; const s#nla_policy * slave_policy ; int ( * slave_validate ) ( s#nlattr * [ ] , s#nlattr * [ ] ) ; int ( * slave_changelink ) ( s#net_device * , s#net_device * , s#nlattr * [ ] , s#nlattr * [ ] ) ; t#size_t ( * get_slave_size ) ( const s#net_device * , const s#net_device * ) ; int ( * fill_slave_info ) ( s#sk_buff * , const s#net_device * , const s#net_device * ) ; s#net * ( * get_link_net ) ( const s#net_device * ) ; t#size_t ( * get_linkxstats_size ) ( const s#net_device * , int ) ; int ( * fill_linkxstats ) ( s#sk_buff * , const s#net_device * , int * , int ) ; } 
s#ieee_ets struct ieee_ets { t#__u8 willing ; t#__u8 ets_cap ; t#__u8 cbs ; t#__u8 tc_tx_bw [ 8 ] ; t#__u8 tc_rx_bw [ 8 ] ; t#__u8 tc_tsa [ 8 ] ; t#__u8 prio_tc [ 8 ] ; t#__u8 tc_reco_bw [ 8 ] ; t#__u8 tc_reco_tsa [ 8 ] ; t#__u8 reco_prio_tc [ 8 ] ; } 
s#ieee_maxrate struct ieee_maxrate { t#__u64 tc_maxrate [ 8 ] ; } 
s#ieee_qcn struct ieee_qcn { t#__u8 rpg_enable [ 8 ] ; t#__u32 rppp_max_rps [ 8 ] ; t#__u32 rpg_time_reset [ 8 ] ; t#__u32 rpg_byte_reset [ 8 ] ; t#__u32 rpg_threshold [ 8 ] ; t#__u32 rpg_max_rate [ 8 ] ; t#__u32 rpg_ai_rate [ 8 ] ; t#__u32 rpg_hai_rate [ 8 ] ; t#__u32 rpg_gd [ 8 ] ; t#__u32 rpg_min_dec_fac [ 8 ] ; t#__u32 rpg_min_rate [ 8 ] ; t#__u32 cndd_state_machine [ 8 ] ; } 
s#ieee_qcn_stats struct ieee_qcn_stats { t#__u64 rppp_rp_centiseconds [ 8 ] ; t#__u32 rppp_created_rps [ 8 ] ; } 
s#ieee_pfc struct ieee_pfc { t#__u8 pfc_cap ; t#__u8 pfc_en ; t#__u8 mbc ; t#__u16 delay ; t#__u64 requests [ 8 ] ; t#__u64 indications [ 8 ] ; } 
s#dcb_app struct dcb_app { t#__u8 selector ; t#__u8 priority ; t#__u16 protocol ; } 
s#dcb_peer_app_info struct dcb_peer_app_info { t#__u8 willing ; t#__u8 error ; } 
s#cee_pg struct cee_pg { t#__u8 willing ; t#__u8 error ; t#__u8 pg_en ; t#__u8 tcs_supported ; t#__u8 pg_bw [ 8 ] ; t#__u8 prio_pg [ 8 ] ; } 
s#cee_pfc struct cee_pfc { t#__u8 willing ; t#__u8 error ; t#__u8 pfc_en ; t#__u8 tcs_supported ; } 
s#dcbnl_buffer struct dcbnl_buffer { t#__u8 prio2buffer [ 8 ] ; t#__u32 buffer_size [ 8 ] ; t#__u32 total_size ; } 
s#dcbnl_rtnl_ops struct dcbnl_rtnl_ops { int ( * ieee_getets ) ( s#net_device * , s#ieee_ets * ) ; int ( * ieee_setets ) ( s#net_device * , s#ieee_ets * ) ; int ( * ieee_getmaxrate ) ( s#net_device * , s#ieee_maxrate * ) ; int ( * ieee_setmaxrate ) ( s#net_device * , s#ieee_maxrate * ) ; int ( * ieee_getqcn ) ( s#net_device * , s#ieee_qcn * ) ; int ( * ieee_setqcn ) ( s#net_device * , s#ieee_qcn * ) ; int ( * ieee_getqcnstats ) ( s#net_device * , s#ieee_qcn_stats * ) ; int ( * ieee_getpfc ) ( s#net_device * , s#ieee_pfc * ) ; int ( * ieee_setpfc ) ( s#net_device * , s#ieee_pfc * ) ; int ( * ieee_getapp ) ( s#net_device * , s#dcb_app * ) ; int ( * ieee_setapp ) ( s#net_device * , s#dcb_app * ) ; int ( * ieee_delapp ) ( s#net_device * , s#dcb_app * ) ; int ( * ieee_peer_getets ) ( s#net_device * , s#ieee_ets * ) ; int ( * ieee_peer_getpfc ) ( s#net_device * , s#ieee_pfc * ) ; t#u8 ( * getstate ) ( s#net_device * ) ; t#u8 ( * setstate ) ( s#net_device * , t#u8 ) ; void ( * getpermhwaddr ) ( s#net_device * , t#u8 * ) ; void ( * setpgtccfgtx ) ( s#net_device * , int , t#u8 , t#u8 , t#u8 , t#u8 ) ; void ( * setpgbwgcfgtx ) ( s#net_device * , int , t#u8 ) ; void ( * setpgtccfgrx ) ( s#net_device * , int , t#u8 , t#u8 , t#u8 , t#u8 ) ; void ( * setpgbwgcfgrx ) ( s#net_device * , int , t#u8 ) ; void ( * getpgtccfgtx ) ( s#net_device * , int , t#u8 * , t#u8 * , t#u8 * , t#u8 * ) ; void ( * getpgbwgcfgtx ) ( s#net_device * , int , t#u8 * ) ; void ( * getpgtccfgrx ) ( s#net_device * , int , t#u8 * , t#u8 * , t#u8 * , t#u8 * ) ; void ( * getpgbwgcfgrx ) ( s#net_device * , int , t#u8 * ) ; void ( * setpfccfg ) ( s#net_device * , int , t#u8 ) ; void ( * getpfccfg ) ( s#net_device * , int , t#u8 * ) ; t#u8 ( * setall ) ( s#net_device * ) ; t#u8 ( * getcap ) ( s#net_device * , int , t#u8 * ) ; int ( * getnumtcs ) ( s#net_device * , int , t#u8 * ) ; int ( * setnumtcs ) ( s#net_device * , int , t#u8 ) ; t#u8 ( * getpfcstate ) ( s#net_device * ) ; void ( * setpfcstate ) ( s#net_device * , t#u8 ) ; void ( * getbcncfg ) ( s#net_device * , int , t#u32 * ) ; void ( * setbcncfg ) ( s#net_device * , int , t#u32 ) ; void ( * getbcnrp ) ( s#net_device * , int , t#u8 * ) ; void ( * setbcnrp ) ( s#net_device * , int , t#u8 ) ; int ( * setapp ) ( s#net_device * , t#u8 , t#u16 , t#u8 ) ; int ( * getapp ) ( s#net_device * , t#u8 , t#u16 ) ; t#u8 ( * getfeatcfg ) ( s#net_device * , int , t#u8 * ) ; t#u8 ( * setfeatcfg ) ( s#net_device * , int , t#u8 ) ; t#u8 ( * getdcbx ) ( s#net_device * ) ; t#u8 ( * setdcbx ) ( s#net_device * , t#u8 ) ; int ( * peer_getappinfo ) ( s#net_device * , s#dcb_peer_app_info * , t#u16 * ) ; int ( * peer_getapptable ) ( s#net_device * , s#dcb_app * ) ; int ( * cee_peer_getpg ) ( s#net_device * , s#cee_pg * ) ; int ( * cee_peer_getpfc ) ( s#net_device * , s#cee_pfc * ) ; int ( * dcbnl_getbuffer ) ( s#net_device * , s#dcbnl_buffer * ) ; int ( * dcbnl_setbuffer ) ( s#net_device * , s#dcbnl_buffer * ) ; } 
t#s16 typedef signed short s16 
s#netdev_tc_txq struct netdev_tc_txq { t#u16 count ; t#u16 offset ; } 
s#netprio_map struct netprio_map { s#callback_head rcu ; t#u32 priomap_len ; t#u32 priomap [ ] ; } 
s##phy_device
s##sfp_bus
s#net_device struct net_device { char name [ 16 ] ; s#hlist_node name_hlist ; char * ifalias ; unsigned long mem_end ; unsigned long mem_start ; unsigned long base_addr ; int irq ; t#atomic_t carrier_changes ; unsigned long state ; s#list_head dev_list ; s#list_head napi_list ; s#list_head unreg_list ; s#list_head close_list ; s#list_head ptype_all ; s#list_head ptype_specific ; struct { s#list_head upper ; s#list_head lower ; } adj_list ; t#netdev_features_t features ; t#netdev_features_t hw_features ; t#netdev_features_t wanted_features ; t#netdev_features_t vlan_features ; t#netdev_features_t hw_enc_features ; t#netdev_features_t mpls_features ; t#netdev_features_t gso_partial_features ; int ifindex ; int group ; s#net_device_stats stats ; t#atomic_long_t rx_dropped ; t#atomic_long_t tx_dropped ; t#atomic_long_t rx_nohandler ; const s#net_device_ops * netdev_ops ; const s#ethtool_ops * ethtool_ops ; const s#switchdev_ops * switchdev_ops ; const s#l3mdev_ops * l3mdev_ops ; const s#ndisc_ops * ndisc_ops ; const s#xfrmdev_ops * xfrmdev_ops ; const s#tlsdev_ops * tlsdev_ops ; const s#header_ops * header_ops ; unsigned int flags ; unsigned int priv_flags ; unsigned short gflags ; unsigned short padded ; unsigned char operstate ; unsigned char link_mode ; unsigned char if_port ; unsigned char dma ; unsigned int mtu ; unsigned int min_mtu ; unsigned int max_mtu ; unsigned short type ; unsigned short hard_header_len ; unsigned char min_header_len ; unsigned short needed_headroom ; unsigned short needed_tailroom ; unsigned char perm_addr [ 32 ] ; unsigned char addr_assign_type ; unsigned char addr_len ; unsigned short neigh_priv_len ; unsigned short dev_id ; unsigned short dev_port ; t#spinlock_t addr_list_lock ; unsigned char name_assign_type ; t#bool uc_promisc ; s#netdev_hw_addr_list uc ; s#netdev_hw_addr_list mc ; s#netdev_hw_addr_list dev_addrs ; s#kset * queues_kset ; unsigned int promiscuity ; unsigned int allmulti ; s#vlan_info * vlan_info ; s#tipc_bearer * tipc_ptr ; void * atalk_ptr ; s#in_device * ip_ptr ; s#dn_dev * dn_ptr ; s#inet6_dev * ip6_ptr ; void * ax25_ptr ; s#wireless_dev * ieee80211_ptr ; s#wpan_dev * ieee802154_ptr ; s#mpls_dev * mpls_ptr ; unsigned char * dev_addr ; s#netdev_rx_queue * _rx ; unsigned int num_rx_queues ; unsigned int real_num_rx_queues ; s#bpf_prog * xdp_prog ; unsigned long gro_flush_timeout ; t#rx_handler_func_t * rx_handler ; void * rx_handler_data ; s#mini_Qdisc * miniq_ingress ; s#netdev_queue * ingress_queue ; s#nf_hook_entry * nf_hooks_ingress ; unsigned char broadcast [ 32 ] ; s#cpu_rmap * rx_cpu_rmap ; s#hlist_node index_hlist ; s#netdev_queue * _tx __attribute__ ( ( __aligned__ ( 256 ) ) ) ; unsigned int num_tx_queues ; unsigned int real_num_tx_queues ; s#Qdisc * qdisc ; s#hlist_head qdisc_hash [ 1 << ( 4 ) ] ; unsigned int tx_queue_len ; t#spinlock_t tx_global_lock ; int watchdog_timeo ; s#xps_dev_maps * xps_cpus_map ; s#xps_dev_maps * xps_rxqs_map ; s#mini_Qdisc * miniq_egress ; s#timer_list watchdog_timer ; int * pcpu_refcnt ; s#list_head todo_list ; s#list_head link_watch_list ; enum { NETREG_UNINITIALIZED = 0 , NETREG_REGISTERED , NETREG_UNREGISTERING , NETREG_UNREGISTERED , NETREG_RELEASED , NETREG_DUMMY , } reg_state : 8 ; t#bool dismantle ; enum { RTNL_LINK_INITIALIZED , RTNL_LINK_INITIALIZING , } rtnl_link_state : 16 ; t#bool needs_free_netdev ; void ( * priv_destructor ) ( s#net_device * ) ; t#possible_net_t nd_net ; union { void * ml_priv ; s#pcpu_lstats * lstats ; s#pcpu_sw_netstats * tstats ; s#pcpu_dstats * dstats ; } ; s#garp_port * garp_port ; s#mrp_port * mrp_port ; s#device dev ; const s#attribute_group * sysfs_groups [ 4 ] ; const s#attribute_group * sysfs_rx_queue_group ; const s#rtnl_link_ops * rtnl_link_ops ; unsigned int gso_max_size ; t#u16 gso_max_segs ; const s#dcbnl_rtnl_ops * dcbnl_ops ; t#s16 num_tc ; s#netdev_tc_txq tc_to_txq [ 16 ] ; t#u8 prio_tc_map [ 15 + 1 ] ; s#netprio_map * priomap ; s#phy_device * phydev ; s#sfp_bus * sfp_bus ; s#lock_class_key * qdisc_tx_busylock ; s#lock_class_key * qdisc_running_key ; t#bool proto_down ; unsigned wol_enabled : 1 ; } 
s##prot_inuse
s#netns_core struct netns_core { s#ctl_table_header * sysctl_hdr ; int sysctl_somaxconn ; s#prot_inuse * inuse ; } 
E#__TCP_MIB_MAX ( 0 ) + 16 
s#tcp_mib struct tcp_mib { unsigned long mibs [ E#__TCP_MIB_MAX ] ; } 
E#__LINUX_MIB_MAX ( 0 ) + 112 
s#linux_mib struct linux_mib { unsigned long mibs [ E#__LINUX_MIB_MAX ] ; } 
E#__UDP_MIB_MAX ( 0 ) + 9 
s#udp_mib struct udp_mib { unsigned long mibs [ E#__UDP_MIB_MAX ] ; } 
E#__ICMP_MIB_MAX ( 0 ) + 28 
s#icmp_mib struct icmp_mib { unsigned long mibs [ E#__ICMP_MIB_MAX ] ; } 
s#icmpmsg_mib struct icmpmsg_mib { t#atomic_long_t mibs [ 512 ] ; } 
s#icmpv6_mib struct icmpv6_mib { unsigned long mibs [ E#__ICMP6_MIB_MAX ] ; } 
s#icmpv6msg_mib struct icmpv6msg_mib { t#atomic_long_t mibs [ 512 ] ; } 
s#netns_mib struct netns_mib { __typeof__ ( s#tcp_mib ) * tcp_statistics ; __typeof__ ( s#ipstats_mib ) * ip_statistics ; __typeof__ ( s#linux_mib ) * net_statistics ; __typeof__ ( s#udp_mib ) * udp_statistics ; __typeof__ ( s#udp_mib ) * udplite_statistics ; __typeof__ ( s#icmp_mib ) * icmp_statistics ; __typeof__ ( s#icmpmsg_mib ) * icmpmsg_statistics ; s#proc_dir_entry * proc_net_devsnmp6 ; __typeof__ ( s#udp_mib ) * udp_stats_in6 ; __typeof__ ( s#udp_mib ) * udplite_stats_in6 ; __typeof__ ( s#ipstats_mib ) * ipv6_statistics ; __typeof__ ( s#icmpv6_mib ) * icmpv6_statistics ; __typeof__ ( s#icmpv6msg_mib ) * icmpv6msg_statistics ; } 
s#netns_packet struct netns_packet { s#mutex sklist_lock ; s#hlist_head sklist ; } 
s#netns_unix struct netns_unix { int sysctl_max_dgram_qlen ; s#ctl_table_header * ctl ; } 
s##ipv4_devconf
s#fib_kuid_range struct fib_kuid_range { t#kuid_t start ; t#kuid_t end ; } 
s#fib_rule struct fib_rule { s#list_head list ; int iifindex ; int oifindex ; t#u32 mark ; t#u32 mark_mask ; t#u32 flags ; t#u32 table ; t#u8 action ; t#u8 l3mdev ; t#u32 target ; t#__be64 tun_id ; s#fib_rule * ctarget ; s#net * fr_net ; t#atomic_t refcnt ; t#u32 pref ; int suppress_ifgroup ; int suppress_prefixlen ; char iifname [ 16 ] ; char oifname [ 16 ] ; s#fib_kuid_range uid_range ; s#callback_head rcu ; } 
s#flowi4 struct flowi4 { s#flowi_common __fl_common ; t#__be32 saddr ; t#__be32 daddr ; u#flowi_uli uli ; } 
s#flowidn struct flowidn { s#flowi_common __fl_common ; t#__le16 daddr ; t#__le16 saddr ; u#flowi_uli uli ; } 
s#flowi struct flowi { union { s#flowi_common __fl_common ; s#flowi4 ip4 ; s#flowi6 ip6 ; s#flowidn dn ; } u ; } 
s#fib_lookup_arg struct fib_lookup_arg { void * lookup_ptr ; void * result ; s#fib_rule * rule ; t#u32 table ; int flags ; } 
s#fib_rule_hdr struct fib_rule_hdr { t#__u8 family ; t#__u8 dst_len ; t#__u8 src_len ; t#__u8 tos ; t#__u8 table ; t#__u8 res1 ; t#__u8 res2 ; t#__u8 action ; t#__u32 flags ; } 
s#fib_rules_ops struct fib_rules_ops { int family ; s#list_head list ; int rule_size ; int addr_size ; int unresolved_rules ; int nr_goto_rules ; unsigned int fib_rules_seq ; int ( * action ) ( s#fib_rule * , s#flowi * , int , s#fib_lookup_arg * ) ; t#bool ( * suppress ) ( s#fib_rule * , s#fib_lookup_arg * ) ; int ( * match ) ( s#fib_rule * , s#flowi * , int ) ; int ( * configure ) ( s#fib_rule * , s#sk_buff * , s#fib_rule_hdr * , s#nlattr * * ) ; int ( * delete ) ( s#fib_rule * ) ; int ( * compare ) ( s#fib_rule * , s#fib_rule_hdr * , s#nlattr * * ) ; int ( * fill ) ( s#fib_rule * , s#sk_buff * , s#fib_rule_hdr * ) ; t#size_t ( * nlmsg_payload ) ( s#fib_rule * ) ; void ( * flush_cache ) ( s#fib_rules_ops * ) ; int nlgroup ; const s#nla_policy * policy ; s#list_head rules_list ; s#module * owner ; s#net * fro_net ; s#callback_head rcu ; } 
s#fib_table struct fib_table { s#hlist_node tb_hlist ; t#u32 tb_id ; int tb_num_default ; s#callback_head rcu ; unsigned long * tb_data ; unsigned long __data [ 0 ] ; } 
s#inet_peer_base struct inet_peer_base { s#rb_root rb_root ; t#seqlock_t lock ; int total ; } 
s#rhash_head struct rhash_head { s#rhash_head * next ; } 
s#frag_v4_compare_key struct frag_v4_compare_key { t#__be32 saddr ; t#__be32 daddr ; t#u32 user ; t#u32 vif ; t#__be16 id ; t#u16 protocol ; } 
s#frag_v6_compare_key struct frag_v6_compare_key { s#in6_addr saddr ; s#in6_addr daddr ; t#u32 user ; t#__be32 id ; t#u32 iif ; } 
s#inet_frag_queue struct inet_frag_queue { s#rhash_head node ; union { s#frag_v4_compare_key v4 ; s#frag_v6_compare_key v6 ; } key ; s#timer_list timer ; t#spinlock_t lock ; t#refcount_t refcnt ; s#rb_root rb_fragments ; s#sk_buff * fragments_tail ; s#sk_buff * last_run_head ; t#ktime_t stamp ; int len ; int meat ; t#__u8 flags ; t#u16 max_size ; s#netns_frags * net ; s#callback_head rcu ; } 
t#rht_hashfn_t typedef t#u32 ( * rht_hashfn_t ) ( const void * , t#u32 , t#u32 ) 
t#rht_obj_hashfn_t typedef t#u32 ( * rht_obj_hashfn_t ) ( const void * , t#u32 , t#u32 ) 
s#bucket_table struct bucket_table { unsigned int size ; unsigned int nest ; unsigned int rehash ; t#u32 hash_rnd ; unsigned int locks_mask ; t#spinlock_t * locks ; s#list_head walkers ; s#callback_head rcu ; s#bucket_table * future_tbl ; s#rhash_head * buckets [ ] __attribute__ ( ( __aligned__ ( 256 ) ) ) ; } 
s#rhashtable struct rhashtable { s#bucket_table * tbl ; unsigned int key_len ; unsigned int max_elems ; s#rhashtable_params p ; t#bool rhlist ; s#work_struct run_work ; s#mutex mutex ; t#spinlock_t lock ; t#atomic_t nelems ; } 
s#rhashtable_compare_arg struct rhashtable_compare_arg { s#rhashtable * ht ; const void * key ; } 
t#rht_obj_cmpfn_t typedef int ( * rht_obj_cmpfn_t ) ( s#rhashtable_compare_arg * , const void * ) 
s#rhashtable_params struct rhashtable_params { t#u16 nelem_hint ; t#u16 key_len ; t#u16 key_offset ; t#u16 head_offset ; unsigned int max_size ; t#u16 min_size ; t#bool automatic_shrinking ; t#u8 locks_mul ; t#u32 nulls_base ; t#rht_hashfn_t hashfn ; t#rht_obj_hashfn_t obj_hashfn ; t#rht_obj_cmpfn_t obj_cmpfn ; } 
s#inet_frags struct inet_frags { unsigned int qsize ; void ( * constructor ) ( s#inet_frag_queue * , const void * ) ; void ( * destructor ) ( s#inet_frag_queue * ) ; void ( * frag_expire ) ( unsigned long ) ; s#kmem_cache * frags_cachep ; const char * frags_cache_name ; s#rhashtable_params rhash_params ; } 
s#netns_frags struct netns_frags { long high_thresh ; long low_thresh ; int timeout ; int max_dist ; s#inet_frags * f ; s#rhashtable rhashtable __attribute__ ( ( __aligned__ ( 256 ) ) ) ; t#atomic_long_t mem __attribute__ ( ( __aligned__ ( 256 ) ) ) ; } 
s##xt_table
s#local_ports struct local_ports { t#seqlock_t lock ; int range [ 2 ] ; t#bool warned ; } 
s##inet_hashinfo
s#inet_timewait_death_row struct inet_timewait_death_row { t#atomic_t tw_count ; s#inet_hashinfo * hashinfo __attribute__ ( ( __aligned__ ( 256 ) ) ) ; int sysctl_max_tw_buckets ; } 
s#ping_group_range struct ping_group_range { t#seqlock_t lock ; t#kgid_t range [ 2 ] ; } 
s#fib_notifier_ops struct fib_notifier_ops { int family ; s#list_head list ; unsigned int ( * fib_seq_read ) ( s#net * ) ; int ( * fib_dump ) ( s#net * , s#notifier_block * ) ; s#module * owner ; s#callback_head rcu ; } 
s#netns_ipv4 struct netns_ipv4 { s#ctl_table_header * forw_hdr ; s#ctl_table_header * frags_hdr ; s#ctl_table_header * ipv4_hdr ; s#ctl_table_header * route_hdr ; s#ctl_table_header * xfrm4_hdr ; s#ipv4_devconf * devconf_all ; s#ipv4_devconf * devconf_dflt ; s#fib_rules_ops * rules_ops ; t#bool fib_has_custom_rules ; s#fib_table * fib_main ; s#fib_table * fib_default ; int fib_num_tclassid_users ; s#hlist_head * fib_table_hash ; t#bool fib_offload_disabled ; s#sock * fibnl ; s#sock * * icmp_sk ; s#sock * mc_autojoin_sk ; s#inet_peer_base * peers ; s#sock * * tcp_sk ; s#netns_frags frags ; s#xt_table * iptable_filter ; s#xt_table * iptable_mangle ; s#xt_table * iptable_raw ; s#xt_table * arptable_filter ; s#xt_table * iptable_security ; s#xt_table * nat_table ; int sysctl_icmp_echo_ignore_all ; int sysctl_icmp_echo_ignore_broadcasts ; int sysctl_icmp_ignore_bogus_error_responses ; int sysctl_icmp_ratelimit ; int sysctl_icmp_ratemask ; int sysctl_icmp_errors_use_inbound_ifaddr ; s#local_ports ip_local_ports ; int sysctl_tcp_ecn ; int sysctl_tcp_ecn_fallback ; int sysctl_ip_default_ttl ; int sysctl_ip_no_pmtu_disc ; int sysctl_ip_fwd_use_pmtu ; int sysctl_ip_nonlocal_bind ; int sysctl_ip_dynaddr ; int sysctl_ip_early_demux ; int sysctl_tcp_early_demux ; int sysctl_udp_early_demux ; int sysctl_fwmark_reflect ; int sysctl_tcp_fwmark_accept ; int sysctl_tcp_l3mdev_accept ; int sysctl_tcp_mtu_probing ; int sysctl_tcp_base_mss ; int sysctl_tcp_probe_threshold ; t#u32 sysctl_tcp_probe_interval ; int sysctl_tcp_keepalive_time ; int sysctl_tcp_keepalive_probes ; int sysctl_tcp_keepalive_intvl ; int sysctl_tcp_syn_retries ; int sysctl_tcp_synack_retries ; int sysctl_tcp_syncookies ; int sysctl_tcp_reordering ; int sysctl_tcp_retries1 ; int sysctl_tcp_retries2 ; int sysctl_tcp_orphan_retries ; int sysctl_tcp_fin_timeout ; unsigned int sysctl_tcp_notsent_lowat ; int sysctl_tcp_tw_reuse ; s#inet_timewait_death_row tcp_death_row ; int sysctl_max_syn_backlog ; int sysctl_udp_l3mdev_accept ; int sysctl_igmp_max_memberships ; int sysctl_igmp_max_msf ; int sysctl_igmp_llm_reports ; int sysctl_igmp_qrv ; s#ping_group_range ping_group_range ; t#atomic_t dev_addr_genid ; unsigned long * sysctl_local_reserved_ports ; int sysctl_ip_prot_sock ; s#list_head mr_tables ; s#fib_rules_ops * mr_rules_ops ; int sysctl_fib_multipath_use_neigh ; int sysctl_fib_multipath_hash_policy ; s#fib_notifier_ops * notifier_ops ; unsigned int fib_seq ; s#fib_notifier_ops * ipmr_notifier_ops ; unsigned int ipmr_seq ; t#atomic_t rt_genid ; } 
s#netns_sysctl_ipv6 struct netns_sysctl_ipv6 { s#ctl_table_header * hdr ; s#ctl_table_header * route_hdr ; s#ctl_table_header * icmp_hdr ; s#ctl_table_header * frags_hdr ; s#ctl_table_header * xfrm6_hdr ; int bindv6only ; int flush_delay ; int ip6_rt_max_size ; int ip6_rt_gc_min_interval ; int ip6_rt_gc_timeout ; int ip6_rt_gc_interval ; int ip6_rt_gc_elasticity ; int ip6_rt_mtu_expires ; int ip6_rt_min_advmss ; int flowlabel_consistency ; int auto_flowlabels ; int icmpv6_time ; int anycast_src_echo_reply ; int ip_nonlocal_bind ; int fwmark_reflect ; int idgen_retries ; int idgen_delay ; int flowlabel_state_ranges ; } 
s##rt6_statistics
s##fib6_table
s##seg6_pernet_data
s#netns_ipv6 struct netns_ipv6 { s#netns_sysctl_ipv6 sysctl ; s#ipv6_devconf * devconf_all ; s#ipv6_devconf * devconf_dflt ; s#inet_peer_base * peers ; s#netns_frags frags ; s#xt_table * ip6table_filter ; s#xt_table * ip6table_mangle ; s#xt_table * ip6table_raw ; s#xt_table * ip6table_security ; s#xt_table * ip6table_nat ; s#rt6_info * ip6_null_entry ; s#rt6_statistics * rt6_stats ; s#timer_list ip6_fib_timer ; s#hlist_head * fib_table_hash ; s#fib6_table * fib6_main_tbl ; s#list_head fib6_walkers ; s#dst_ops ip6_dst_ops ; t#rwlock_t fib6_walker_lock ; t#spinlock_t fib6_gc_lock ; unsigned int ip6_rt_gc_expire ; unsigned long ip6_rt_last_gc ; s#rt6_info * ip6_prohibit_entry ; s#rt6_info * ip6_blk_hole_entry ; s#fib6_table * fib6_local_tbl ; s#fib_rules_ops * fib6_rules_ops ; s#sock * * icmp_sk ; s#sock * ndisc_sk ; s#sock * tcp_sk ; s#sock * igmp_sk ; s#sock * mc_autojoin_sk ; s#list_head mr6_tables ; s#fib_rules_ops * mr6_rules_ops ; t#atomic_t dev_addr_genid ; t#atomic_t fib6_sernum ; s#seg6_pernet_data * seg6_data ; s#fib_notifier_ops * notifier_ops ; struct { s#hlist_head head ; t#spinlock_t lock ; t#u32 seq ; } ip6addrlbl_table ; } 
s##sctp_mib
s#netns_sctp struct netns_sctp { __typeof__ ( s#sctp_mib ) * sctp_statistics ; s#proc_dir_entry * proc_net_sctp ; s#ctl_table_header * sysctl_header ; s#sock * ctl_sock ; s#list_head local_addr_list ; s#list_head addr_waitq ; s#timer_list addr_wq_timer ; s#list_head auto_asconf_splist ; t#spinlock_t addr_wq_lock ; t#spinlock_t local_addr_lock ; unsigned int rto_initial ; unsigned int rto_min ; unsigned int rto_max ; int rto_alpha ; int rto_beta ; int max_burst ; int cookie_preserve_enable ; char * sctp_hmac_alg ; unsigned int valid_cookie_life ; unsigned int sack_timeout ; unsigned int hb_interval ; int max_retrans_association ; int max_retrans_path ; int max_retrans_init ; int pf_retrans ; int pf_enable ; int sndbuf_policy ; int rcvbuf_policy ; int default_auto_asconf ; int addip_enable ; int addip_noauth ; int prsctp_enable ; int reconf_enable ; int auth_enable ; int scope_policy ; int rwnd_upd_shift ; unsigned long max_autoclose ; } 
s##nf_queue_handler
s##nf_logger
E#NFPROTO_NUMPROTO ( 12 ) + 1 
s#netns_nf struct netns_nf { s#proc_dir_entry * proc_netfilter ; const s#nf_queue_handler * queue_handler ; const s#nf_logger * nf_loggers [ E#NFPROTO_NUMPROTO ] ; s#ctl_table_header * nf_log_dir_header ; s#nf_hook_entry * hooks [ E#NFPROTO_NUMPROTO ] [ 8 ] ; t#bool defrag_ipv4 ; t#bool defrag_ipv6 ; } 
s##ebt_table
s#netns_xt struct netns_xt { s#list_head tables [ E#NFPROTO_NUMPROTO ] ; t#bool notrack_deprecated_warning ; t#bool clusterip_deprecated_warning ; s#ebt_table * broute_table ; s#ebt_table * frame_filter ; s#ebt_table * frame_nat ; } 
s#hlist_nulls_node struct hlist_nulls_node { s#hlist_nulls_node * next , * * pprev ; } 
s#hlist_nulls_head struct hlist_nulls_head { s#hlist_nulls_node * first ; } 
s#ct_pcpu struct ct_pcpu { t#spinlock_t lock ; s#hlist_nulls_head unconfirmed ; s#hlist_nulls_head dying ; } 
s#ip_conntrack_stat struct ip_conntrack_stat { unsigned int found ; unsigned int invalid ; unsigned int ignore ; unsigned int insert ; unsigned int insert_failed ; unsigned int drop ; unsigned int early_drop ; unsigned int error ; unsigned int expect_new ; unsigned int expect_create ; unsigned int expect_delete ; unsigned int search_restart ; } 
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s#nf_proto_net struct nf_proto_net { s#ctl_table_header * ctl_table_header ; s#ctl_table * ctl_table ; unsigned int users ; } 
s#nf_generic_net struct nf_generic_net { s#nf_proto_net pn ; unsigned int timeout ; } 
E#TCP_CONNTRACK_TIMEOUT_MAX 14 
s#nf_tcp_net struct nf_tcp_net { s#nf_proto_net pn ; unsigned int timeouts [ E#TCP_CONNTRACK_TIMEOUT_MAX ] ; unsigned int tcp_loose ; unsigned int tcp_be_liberal ; unsigned int tcp_max_retrans ; } 
E#UDP_CT_MAX 2 
s#nf_udp_net struct nf_udp_net { s#nf_proto_net pn ; unsigned int timeouts [ E#UDP_CT_MAX ] ; } 
s#nf_icmp_net struct nf_icmp_net { s#nf_proto_net pn ; unsigned int timeout ; } 
E#__CT_DCCP_MAX 10 
s#nf_dccp_net struct nf_dccp_net { s#nf_proto_net pn ; int dccp_loose ; unsigned int dccp_timeout [ ( E#__CT_DCCP_MAX - 1 ) + 1 ] ; } 
E#SCTP_CONNTRACK_MAX 10 
s#nf_sctp_net struct nf_sctp_net { s#nf_proto_net pn ; unsigned int timeouts [ E#SCTP_CONNTRACK_MAX ] ; } 
s#nf_ip_net struct nf_ip_net { s#nf_generic_net generic ; s#nf_tcp_net tcp ; s#nf_udp_net udp ; s#nf_icmp_net icmp ; s#nf_icmp_net icmpv6 ; s#nf_dccp_net dccp ; s#nf_sctp_net sctp ; } 
s#netns_ct struct netns_ct { t#atomic_t count ; unsigned int expect_count ; s#delayed_work ecache_dwork ; t#bool ecache_dwork_pending ; s#ctl_table_header * sysctl_header ; s#ctl_table_header * acct_sysctl_header ; s#ctl_table_header * tstamp_sysctl_header ; s#ctl_table_header * event_sysctl_header ; s#ctl_table_header * helper_sysctl_header ; unsigned int sysctl_log_invalid ; int sysctl_events ; int sysctl_acct ; int sysctl_auto_assign_helper ; t#bool auto_assign_helper_warned ; int sysctl_tstamp ; int sysctl_checksum ; s#ct_pcpu * pcpu_lists ; s#ip_conntrack_stat * stat ; s#nf_ct_event_notifier * nf_conntrack_event_cb ; s#nf_exp_event_notifier * nf_expect_event_cb ; s#nf_ip_net nf_ct_proto ; unsigned int labels_used ; } 
s##nft_af_info
s#netns_nftables struct netns_nftables { s#list_head af_info ; s#list_head commit_list ; s#nft_af_info * ipv4 ; s#nft_af_info * ipv6 ; s#nft_af_info * inet ; s#nft_af_info * arp ; s#nft_af_info * bridge ; s#nft_af_info * netdev ; unsigned int base_seq ; t#u8 gencursor ; } 
s#netns_nf_frag struct netns_nf_frag { s#netns_frags frags ; } 
s##net_generic
E#XFRM_POLICY_MAX 3 
s#xfrm_policy_hash struct xfrm_policy_hash { s#hlist_head * table ; unsigned int hmask ; t#u8 dbits4 ; t#u8 sbits4 ; t#u8 dbits6 ; t#u8 sbits6 ; } 
s#xfrm_policy_hthresh struct xfrm_policy_hthresh { s#work_struct work ; t#seqlock_t lock ; t#u8 lbits4 ; t#u8 rbits4 ; t#u8 lbits6 ; t#u8 rbits6 ; } 
s#tasklet_struct struct tasklet_struct { s#tasklet_struct * next ; unsigned long state ; t#atomic_t count ; void ( * func ) ( unsigned long ) ; unsigned long data ; } 
s#flow_cache_percpu struct flow_cache_percpu { s#hlist_head * hash_table ; unsigned int hash_count ; t#u32 hash_rnd ; int hash_rnd_recalc ; s#tasklet_struct flush_tasklet ; } 
s#flow_cache struct flow_cache { t#u32 hash_shift ; s#flow_cache_percpu * percpu ; s#hlist_node node ; unsigned int low_watermark ; unsigned int high_watermark ; s#timer_list rnd_timer ; } 
s#netns_xfrm struct netns_xfrm { s#list_head state_all ; s#hlist_head * state_bydst ; s#hlist_head * state_bysrc ; s#hlist_head * state_byspi ; unsigned int state_hmask ; unsigned int state_num ; s#work_struct state_hash_work ; s#list_head policy_all ; s#hlist_head * policy_byidx ; unsigned int policy_idx_hmask ; s#hlist_head policy_inexact [ E#XFRM_POLICY_MAX ] ; s#xfrm_policy_hash policy_bydst [ E#XFRM_POLICY_MAX ] ; unsigned int policy_count [ E#XFRM_POLICY_MAX * 2 ] ; s#work_struct policy_hash_work ; s#xfrm_policy_hthresh policy_hthresh ; s#sock * nlsk ; s#sock * nlsk_stash ; t#u32 sysctl_aevent_etime ; t#u32 sysctl_aevent_rseqth ; int sysctl_larval_drop ; t#u32 sysctl_acq_expires ; s#ctl_table_header * sysctl_hdr ; s#dst_ops xfrm4_dst_ops ; s#dst_ops xfrm6_dst_ops ; t#spinlock_t xfrm_state_lock ; t#spinlock_t xfrm_policy_lock ; s#mutex xfrm_cfg_mutex ; s#flow_cache flow_cache_global ; t#atomic_t flow_cache_genid ; s#list_head flow_cache_gc_list ; t#atomic_t flow_cache_gc_count ; t#spinlock_t flow_cache_gc_lock ; s#work_struct flow_cache_gc_work ; s#work_struct flow_cache_flush_work ; s#mutex flow_flush_sem ; } 
s##netns_ipvs
s##mpls_route
s#netns_mpls struct netns_mpls { int ip_ttl_propagate ; int default_ttl ; t#size_t platform_labels ; s#mpls_route * * platform_label ; s#ctl_table_header * ctl ; } 
s#net struct net { t#atomic_t passive ; t#atomic_t count ; t#spinlock_t rules_mod_lock ; t#atomic64_t cookie_gen ; s#list_head list ; s#list_head cleanup_list ; s#list_head exit_list ; s#user_namespace * user_ns ; s#ucounts * ucounts ; t#spinlock_t nsid_lock ; s#idr netns_ids ; s#ns_common ns ; s#proc_dir_entry * proc_net ; s#proc_dir_entry * proc_net_stat ; s#ctl_table_set sysctls ; s#sock * rtnl ; s#sock * genl_sock ; s#uevent_sock * uevent_sock ; s#list_head dev_base_head ; s#hlist_head * dev_name_head ; s#hlist_head * dev_index_head ; unsigned int dev_base_seq ; int ifindex ; unsigned int dev_unreg_count ; s#list_head rules_ops ; s#list_head fib_notifier_ops ; s#net_device * loopback_dev ; s#netns_core core ; s#netns_mib mib ; s#netns_packet packet ; s#netns_unix unx ; s#netns_ipv4 ipv4 ; s#netns_ipv6 ipv6 ; s#netns_sctp sctp ; s#netns_nf nf ; s#netns_xt xt ; s#netns_ct ct ; s#netns_nftables nft ; s#netns_nf_frag nf_frag ; s#ctl_table_header * nf_frag_frags_hdr ; s#sock * nfnl ; s#sock * nfnl_stash ; s#list_head nfnl_acct_list ; s#list_head nfct_timeout_list ; s#net_generic * gen ; s#netns_xfrm xfrm ; s#netns_ipvs * ipvs ; s#netns_mpls mpls ; s#sock * diag_nlsk ; t#atomic_t fnhe_genid ; } 
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##eventfd_ctx
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s#msghdr struct msghdr { void * msg_name ; int msg_namelen ; s#iov_iter msg_iter ; void * msg_control ; t#__kernel_size_t msg_controllen ; unsigned int msg_flags ; s#kiocb * msg_iocb ; } 
s#request_sock struct request_sock { s#sock_common __req_common ; s#request_sock * dl_next ; t#u16 mss ; t#u8 num_retrans ; t#u8 cookie_ts : 1 ; t#u8 num_timeout : 7 ; t#u32 ts_recent ; s#timer_list rsk_timer ; const s#request_sock_ops * rsk_ops ; s#sock * sk ; t#u32 * saved_syn ; t#u32 secid ; t#u32 peer_secid ; } 
s#request_sock_ops struct request_sock_ops { int family ; int obj_size ; s#kmem_cache * slab ; char * slab_name ; int ( * rtx_syn_ack ) ( const s#sock * , s#request_sock * ) ; void ( * send_ack ) ( const s#sock * , s#sk_buff * , s#request_sock * ) ; void ( * send_reset ) ( const s#sock * , s#sk_buff * ) ; void ( * destructor ) ( s#request_sock * ) ; void ( * syn_ack_timeout ) ( const s#request_sock * ) ; } 
s#timewait_sock_ops struct timewait_sock_ops { s#kmem_cache * twsk_slab ; char * twsk_slab_name ; unsigned int twsk_obj_size ; int ( * twsk_unique ) ( s#sock * , s#sock * , void * ) ; void ( * twsk_destructor ) ( s#sock * ) ; } 
s##udp_table
s##raw_hashinfo
s#smc_hashinfo struct smc_hashinfo { t#rwlock_t lock ; s#hlist_head ht ; } 
s#proto struct proto { void ( * close ) ( s#sock * , long ) ; int ( * pre_connect ) ( s#sock * , s#sockaddr * , int ) ; int ( * connect ) ( s#sock * , s#sockaddr * , int ) ; int ( * disconnect ) ( s#sock * , int ) ; s#sock * ( * accept ) ( s#sock * , int , int * , t#bool ) ; int ( * ioctl ) ( s#sock * , int , unsigned long ) ; int ( * init ) ( s#sock * ) ; void ( * destroy ) ( s#sock * ) ; void ( * shutdown ) ( s#sock * , int ) ; int ( * setsockopt ) ( s#sock * , int , int , char * , unsigned int ) ; int ( * getsockopt ) ( s#sock * , int , int , char * , int * ) ; void ( * keepalive ) ( s#sock * , int ) ; int ( * compat_setsockopt ) ( s#sock * , int , int , char * , unsigned int ) ; int ( * compat_getsockopt ) ( s#sock * , int , int , char * , int * ) ; int ( * compat_ioctl ) ( s#sock * , unsigned int , unsigned long ) ; int ( * sendmsg ) ( s#sock * , s#msghdr * , t#size_t ) ; int ( * recvmsg ) ( s#sock * , s#msghdr * , t#size_t , int , int , int * ) ; int ( * sendpage ) ( s#sock * , s#page * , int , t#size_t , int ) ; int ( * bind ) ( s#sock * , s#sockaddr * , int ) ; int ( * backlog_rcv ) ( s#sock * , s#sk_buff * ) ; void ( * release_cb ) ( s#sock * ) ; int ( * hash ) ( s#sock * ) ; void ( * unhash ) ( s#sock * ) ; void ( * rehash ) ( s#sock * ) ; int ( * get_port ) ( s#sock * , unsigned short ) ; unsigned int inuse_idx ; t#bool ( * stream_memory_free ) ( const s#sock * ) ; t#bool ( * stream_memory_read ) ( const s#sock * ) ; void ( * enter_memory_pressure ) ( s#sock * ) ; t#atomic_long_t * memory_allocated ; s#percpu_counter * sockets_allocated ; int * memory_pressure ; long * sysctl_mem ; int * sysctl_wmem ; int * sysctl_rmem ; int max_header ; t#bool no_autobind ; s#kmem_cache * slab ; unsigned int obj_size ; int slab_flags ; s#percpu_counter * orphan_count ; s#request_sock_ops * rsk_prot ; s#timewait_sock_ops * twsk_prot ; union { s#inet_hashinfo * hashinfo ; s#udp_table * udp_table ; s#raw_hashinfo * raw_hash ; s#smc_hashinfo * smc_hash ; } h ; s#module * owner ; char name [ 32 ] ; s#list_head node ; int ( * diag_destroy ) ( s#sock * , int ) ; } 
s#sock_common struct sock_common { union { t#__addrpair skc_addrpair ; struct { t#__be32 skc_daddr ; t#__be32 skc_rcv_saddr ; } ; } ; union { unsigned int skc_hash ; t#__u16 skc_u16hashes [ 2 ] ; } ; union { t#__portpair skc_portpair ; struct { t#__be16 skc_dport ; t#__u16 skc_num ; } ; } ; unsigned short skc_family ; volatile unsigned char skc_state ; unsigned char skc_reuse : 4 ; unsigned char skc_reuseport : 1 ; unsigned char skc_ipv6only : 1 ; unsigned char skc_net_refcnt : 1 ; int skc_bound_dev_if ; union { s#hlist_node skc_bind_node ; s#hlist_node skc_portaddr_node ; } ; s#proto * skc_prot ; t#possible_net_t skc_net ; s#in6_addr skc_v6_daddr ; s#in6_addr skc_v6_rcv_saddr ; t#atomic64_t skc_cookie ; union { unsigned long skc_flags ; s#sock * skc_listener ; s#inet_timewait_death_row * skc_tw_dr ; } ; int skc_dontcopy_begin [ 0 ] ; union { s#hlist_node skc_node ; s#hlist_nulls_node skc_nulls_node ; } ; unsigned short skc_tx_queue_mapping ; unsigned short skc_rx_queue_mapping ; union { int skc_incoming_cpu ; t#u32 skc_rcv_wnd ; t#u32 skc_tw_rcv_nxt ; } ; t#atomic_t skc_refcnt ; int skc_dontcopy_end [ 0 ] ; union { t#u32 skc_rxhash ; t#u32 skc_window_clamp ; t#u32 skc_tw_snd_nxt ; } ; } 
t#socket_lock_t typedef struct { t#spinlock_t slock ; int owned ; t#wait_queue_head_t wq ; } socket_lock_t 
s#sk_filter struct sk_filter { t#refcount_t refcnt ; s#callback_head rcu ; s#bpf_prog * prog ; } 
s#socket_wq struct socket_wq { t#wait_queue_head_t wait ; s#fasync_struct * fasync_list ; unsigned long flags ; s#callback_head rcu ; } 
s##xfrm_policy
t#socket_state typedef enum { SS_FREE = 0 , SS_UNCONNECTED , SS_CONNECTING , SS_CONNECTED , SS_DISCONNECTING } socket_state 
t#read_descriptor_t typedef struct { t#size_t written ; t#size_t count ; union { char * buf ; void * data ; } arg ; int error ; } read_descriptor_t 
t#sk_read_actor_t typedef int ( * sk_read_actor_t ) ( t#read_descriptor_t * , s#sk_buff * , unsigned int , t#size_t ) 
s#proto_ops struct proto_ops { int family ; s#module * owner ; int ( * release ) ( s#socket * ) ; int ( * bind ) ( s#socket * , s#sockaddr * , int ) ; int ( * connect ) ( s#socket * , s#sockaddr * , int , int ) ; int ( * socketpair ) ( s#socket * , s#socket * ) ; int ( * accept ) ( s#socket * , s#socket * , int , t#bool ) ; int ( * getname ) ( s#socket * , s#sockaddr * , int * , int ) ; unsigned int ( * poll ) ( s#file * , s#socket * , s#poll_table_struct * ) ; int ( * ioctl ) ( s#socket * , unsigned int , unsigned long ) ; int ( * compat_ioctl ) ( s#socket * , unsigned int , unsigned long ) ; int ( * listen ) ( s#socket * , int ) ; int ( * shutdown ) ( s#socket * , int ) ; int ( * setsockopt ) ( s#socket * , int , int , char * , unsigned int ) ; int ( * getsockopt ) ( s#socket * , int , int , char * , int * ) ; int ( * compat_setsockopt ) ( s#socket * , int , int , char * , unsigned int ) ; int ( * compat_getsockopt ) ( s#socket * , int , int , char * , int * ) ; int ( * sendmsg ) ( s#socket * , s#msghdr * , t#size_t ) ; int ( * recvmsg ) ( s#socket * , s#msghdr * , t#size_t , int ) ; int ( * mmap ) ( s#file * , s#socket * , s#vm_area_struct * ) ; t#ssize_t ( * sendpage ) ( s#socket * , s#page * , int , t#size_t , int ) ; t#ssize_t ( * splice_read ) ( s#socket * , t#loff_t * , s#pipe_inode_info * , t#size_t , unsigned int ) ; int ( * set_peek_off ) ( s#sock * , int ) ; int ( * peek_len ) ( s#socket * ) ; int ( * read_sock ) ( s#sock * , t#read_descriptor_t * , t#sk_read_actor_t ) ; int ( * sendpage_locked ) ( s#sock * , s#page * , int , t#size_t , int ) ; int ( * sendmsg_locked ) ( s#sock * , s#msghdr * , t#size_t ) ; } 
s#socket struct socket { t#socket_state state ; ; short type ; ; unsigned long flags ; s#socket_wq * wq ; s#file * file ; s#sock * sk ; const s#proto_ops * ops ; } 
s#sock_cgroup_data struct sock_cgroup_data { union { struct { t#u32 classid ; t#u16 prioidx ; t#u8 padding ; t#u8 is_data ; } __attribute__ ( ( packed ) ) ; t#u64 val ; } ; } 
s##sock_reuseport
s#sock struct sock { s#sock_common __sk_common ; t#socket_lock_t sk_lock ; t#atomic_t sk_drops ; int sk_rcvlowat ; s#sk_buff_head sk_error_queue ; s#sk_buff_head sk_receive_queue ; struct { t#atomic_t rmem_alloc ; int len ; s#sk_buff * head ; s#sk_buff * tail ; } sk_backlog ; int sk_forward_alloc ; unsigned int sk_ll_usec ; unsigned int sk_napi_id ; int sk_rcvbuf ; s#sk_filter * sk_filter ; union { s#socket_wq * sk_wq ; s#socket_wq * sk_wq_raw ; } ; s#xfrm_policy * sk_policy [ 2 ] ; s#dst_entry * sk_rx_dst ; s#dst_entry * sk_dst_cache ; t#atomic_t sk_omem_alloc ; int sk_sndbuf ; int sk_wmem_queued ; t#atomic_t sk_wmem_alloc ; unsigned long sk_tsq_flags ; s#sk_buff * sk_send_head ; s#sk_buff_head sk_write_queue ; t#__s32 sk_peek_off ; int sk_write_pending ; t#__u32 sk_dst_pending_confirm ; t#u32 sk_pacing_status ; long sk_sndtimeo ; s#timer_list sk_timer ; t#__u32 sk_priority ; t#__u32 sk_mark ; t#u32 sk_pacing_rate ; t#u32 sk_max_pacing_rate ; s#page_frag sk_frag ; t#netdev_features_t sk_route_caps ; t#netdev_features_t sk_route_nocaps ; int sk_gso_type ; unsigned int sk_gso_max_size ; t#gfp_t sk_allocation ; t#__u32 sk_txhash ; unsigned int __sk_flags_offset [ 0 ] ; ; unsigned int sk_padding : 1 , sk_kern_sock : 1 , sk_no_check_tx : 1 , sk_no_check_rx : 1 , sk_userlocks : 4 , sk_protocol : 8 , sk_type : 16 ; ; t#u16 sk_gso_max_segs ; unsigned long sk_lingertime ; s#proto * sk_prot_creator ; t#rwlock_t sk_callback_lock ; int sk_err , sk_err_soft ; t#u32 sk_ack_backlog ; t#u32 sk_max_ack_backlog ; t#kuid_t sk_uid ; s#pid * sk_peer_pid ; const s#cred * sk_peer_cred ; long sk_rcvtimeo ; t#ktime_t sk_stamp ; t#u16 sk_tsflags ; t#u8 sk_shutdown ; t#u32 sk_tskey ; s#socket * sk_socket ; void * sk_user_data ; void * sk_security ; s#sock_cgroup_data sk_cgrp_data ; s#mem_cgroup * sk_memcg ; void ( * sk_state_change ) ( s#sock * ) ; void ( * sk_data_ready ) ( s#sock * ) ; void ( * sk_write_space ) ( s#sock * ) ; void ( * sk_error_report ) ( s#sock * ) ; int ( * sk_backlog_rcv ) ( s#sock * , s#sk_buff * ) ; s#sk_buff * ( * sk_validate_xmit_skb ) ( s#sock * , s#net_device * , s#sk_buff * ) ; void ( * sk_destruct ) ( s#sock * ) ; void * suse_kabi_padding ; s#sock_reuseport * sk_reuseport_cb ; s#callback_head sk_rcu ; } 
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##hd_geometry
s##pr_ops
s##timer_rand_state
s##disk_events
s##badblocks
s##blkcg_gq
s##blk_mq_alloc_data
s##blk_mq_debugfs_attr
s##blk_queue_stats
s##rq_wb
s##blk_stat_callback
s##blk_trace
s##blk_flush_queue
s##bsg_job
s##throtl_data
s##blk_mq_tags
s##ib_uverbs_file
s##ib_umem_odp
s#rdma_cgroup struct rdma_cgroup { s#cgroup_subsys_state css ; s#list_head rpools ; } 
s#ib_rdmacg_object struct ib_rdmacg_object { s#rdma_cgroup * cg ; } 
s#ib_ucontext struct ib_ucontext { s#ib_device * device ; s#ib_uverbs_file * ufile ; t#bool closing ; t#bool cleanup_retryable ; void ( * invalidate_range ) ( s#ib_umem_odp * , unsigned long , unsigned long ) ; s#mutex per_mm_list_lock ; s#list_head per_mm_list ; s#ib_rdmacg_object cg_obj ; } 
s##uverbs_api_object
s#ib_uobject struct ib_uobject { t#u64 user_handle ; s#ib_uverbs_file * ufile ; s#ib_ucontext * context ; void * object ; s#list_head list ; s#ib_rdmacg_object cg_obj ; int id ; s#kref ref ; t#atomic_t usecnt ; s#callback_head rcu ; const s#uverbs_api_object * uapi_object ; } 
t#ib_comp_handler typedef void ( * ib_comp_handler ) ( s#ib_cq * , void * ) 
e#ib_poll_context enum ib_poll_context { IB_POLL_DIRECT , IB_POLL_SOFTIRQ , IB_POLL_WORKQUEUE , IB_POLL_UNBOUND_WORKQUEUE , } 
s#ib_cqe struct ib_cqe { void ( * done ) ( s#ib_cq * , s#ib_wc * ) ; } 
e#ib_wc_status enum ib_wc_status { IB_WC_SUCCESS , IB_WC_LOC_LEN_ERR , IB_WC_LOC_QP_OP_ERR , IB_WC_LOC_EEC_OP_ERR , IB_WC_LOC_PROT_ERR , IB_WC_WR_FLUSH_ERR , IB_WC_MW_BIND_ERR , IB_WC_BAD_RESP_ERR , IB_WC_LOC_ACCESS_ERR , IB_WC_REM_INV_REQ_ERR , IB_WC_REM_ACCESS_ERR , IB_WC_REM_OP_ERR , IB_WC_RETRY_EXC_ERR , IB_WC_RNR_RETRY_EXC_ERR , IB_WC_LOC_RDD_VIOL_ERR , IB_WC_REM_INV_RD_REQ_ERR , IB_WC_REM_ABORT_ERR , IB_WC_INV_EECN_ERR , IB_WC_INV_EEC_STATE_ERR , IB_WC_FATAL_ERR , IB_WC_RESP_TIMEOUT_ERR , IB_WC_GENERAL_ERR } 
e#ib_wc_opcode enum ib_wc_opcode { IB_WC_SEND , IB_WC_RDMA_WRITE , IB_WC_RDMA_READ , IB_WC_COMP_SWAP , IB_WC_FETCH_ADD , IB_WC_LSO , IB_WC_LOCAL_INV , IB_WC_REG_MR , IB_WC_MASKED_COMP_SWAP , IB_WC_MASKED_FETCH_ADD , IB_WC_RECV = 1 << 7 , IB_WC_RECV_RDMA_WITH_IMM } 
s#ib_dm struct ib_dm { s#ib_device * device ; t#u32 length ; t#u32 flags ; s#ib_uobject * uobject ; t#atomic_t usecnt ; } 
e#rdma_restrack_type enum rdma_restrack_type { RDMA_RESTRACK_PD , RDMA_RESTRACK_CQ , RDMA_RESTRACK_QP , RDMA_RESTRACK_CM_ID , RDMA_RESTRACK_MR , RDMA_RESTRACK_MAX } 
s#rdma_restrack_entry struct rdma_restrack_entry { t#bool valid ; s#kref kref ; s#completion comp ; s#task_struct * task ; const char * kern_name ; s#hlist_node node ; e#rdma_restrack_type type ; } 
s#ib_mr struct ib_mr { s#ib_device * device ; s#ib_pd * pd ; t#u32 lkey ; t#u32 rkey ; t#u64 iova ; t#u64 length ; unsigned int page_size ; t#bool need_inval ; union { s#ib_uobject * uobject ; s#list_head qp_entry ; } ; s#ib_dm * dm ; s#rdma_restrack_entry res ; } 
s#ib_pd struct ib_pd { t#u32 local_dma_lkey ; t#u32 flags ; s#ib_device * device ; s#ib_uobject * uobject ; t#atomic_t usecnt ; t#u32 unsafe_global_rkey ; s#ib_mr * __internal_mr ; s#rdma_restrack_entry res ; } 
e#ib_srq_type enum ib_srq_type { IB_SRQT_BASIC , IB_SRQT_XRC , IB_SRQT_TM , } 
s#ib_xrcd struct ib_xrcd { s#ib_device * device ; t#atomic_t usecnt ; s#inode * inode ; s#mutex tgt_qp_mutex ; s#list_head tgt_qp_list ; } 
s#ib_srq struct ib_srq { s#ib_device * device ; s#ib_pd * pd ; s#ib_uobject * uobject ; void ( * event_handler ) ( s#ib_event * , void * ) ; void * srq_context ; e#ib_srq_type srq_type ; t#atomic_t usecnt ; struct { s#ib_cq * cq ; union { struct { s#ib_xrcd * xrcd ; t#u32 srq_num ; } xrc ; } ; } ext ; } 
u#ib_gid union ib_gid { t#u8 raw [ 16 ] ; struct { t#__be64 subnet_prefix ; t#__be64 interface_id ; } global ; } 
e#ib_gid_type enum ib_gid_type { IB_GID_TYPE_IB = 0 , IB_GID_TYPE_ROCE = 0 , IB_GID_TYPE_ROCE_UDP_ENCAP = 1 , IB_GID_TYPE_SIZE } 
s#ib_gid_attr struct ib_gid_attr { s#net_device * ndev ; s#ib_device * device ; u#ib_gid gid ; e#ib_gid_type gid_type ; t#u16 index ; t#u8 port_num ; } 
e#ib_qp_type enum ib_qp_type { IB_QPT_SMI , IB_QPT_GSI , IB_QPT_RC , IB_QPT_UC , IB_QPT_UD , IB_QPT_RAW_IPV6 , IB_QPT_RAW_ETHERTYPE , IB_QPT_RAW_PACKET = 8 , IB_QPT_XRC_INI = 9 , IB_QPT_XRC_TGT , IB_QPT_MAX , IB_QPT_DRIVER = 0xFF , IB_QPT_RESERVED1 = 0x1000 , IB_QPT_RESERVED2 , IB_QPT_RESERVED3 , IB_QPT_RESERVED4 , IB_QPT_RESERVED5 , IB_QPT_RESERVED6 , IB_QPT_RESERVED7 , IB_QPT_RESERVED8 , IB_QPT_RESERVED9 , IB_QPT_RESERVED10 , } 
e#ib_wq_state enum ib_wq_state { IB_WQS_RESET , IB_WQS_RDY , IB_WQS_ERR } 
e#ib_wq_type enum ib_wq_type { IB_WQT_RQ } 
s#ib_wq struct ib_wq { s#ib_device * device ; s#ib_uobject * uobject ; void * wq_context ; void ( * event_handler ) ( s#ib_event * , void * ) ; s#ib_pd * pd ; s#ib_cq * cq ; t#u32 wq_num ; e#ib_wq_state state ; e#ib_wq_type wq_type ; t#atomic_t usecnt ; } 
s#ib_rwq_ind_table struct ib_rwq_ind_table { s#ib_device * device ; s#ib_uobject * uobject ; t#atomic_t usecnt ; t#u32 ind_tbl_num ; t#u32 log_ind_tbl_size ; s#ib_wq * * ind_tbl ; } 
e#port_pkey_state enum port_pkey_state { IB_PORT_PKEY_NOT_VALID = 0 , IB_PORT_PKEY_VALID = 1 , IB_PORT_PKEY_LISTED = 2 , } 
s#ib_port_pkey struct ib_port_pkey { e#port_pkey_state state ; t#u16 pkey_index ; t#u8 port_num ; s#list_head qp_list ; s#list_head to_error_list ; s#ib_qp_security * sec ; } 
s#ib_ports_pkeys struct ib_ports_pkeys { s#ib_port_pkey main ; s#ib_port_pkey alt ; } 
s#ib_qp_security struct ib_qp_security { s#ib_qp * qp ; s#ib_device * dev ; s#mutex mutex ; s#ib_ports_pkeys * ports_pkeys ; s#list_head shared_qp_list ; void * security ; t#bool destroying ; t#atomic_t error_list_count ; s#completion error_complete ; int error_comps_pending ; } 
s#ib_qp struct ib_qp { s#ib_device * device ; s#ib_pd * pd ; s#ib_cq * send_cq ; s#ib_cq * recv_cq ; t#spinlock_t mr_lock ; int mrs_used ; s#list_head rdma_mrs ; s#list_head sig_mrs ; s#ib_srq * srq ; s#ib_xrcd * xrcd ; s#list_head xrcd_list ; t#atomic_t usecnt ; s#list_head open_list ; s#ib_qp * real_qp ; s#ib_uobject * uobject ; void ( * event_handler ) ( s#ib_event * , void * ) ; void * qp_context ; const s#ib_gid_attr * av_sgid_attr ; const s#ib_gid_attr * alt_path_sgid_attr ; t#u32 qp_num ; t#u32 max_write_sge ; t#u32 max_read_sge ; e#ib_qp_type qp_type ; s#ib_rwq_ind_table * rwq_ind_tbl ; s#ib_qp_security * qp_sec ; t#u8 port ; s#rdma_restrack_entry res ; } 
s#ib_wc struct ib_wc { union { t#u64 wr_id ; s#ib_cqe * wr_cqe ; } ; e#ib_wc_status status ; e#ib_wc_opcode opcode ; t#u32 vendor_err ; t#u32 byte_len ; s#ib_qp * qp ; union { t#__be32 imm_data ; t#u32 invalidate_rkey ; } ex ; t#u32 src_qp ; t#u32 slid ; int wc_flags ; t#u16 pkey_index ; t#u8 sl ; t#u8 dlid_path_bits ; t#u8 port_num ; t#u8 smac [ 6 ] ; t#u16 vlan_id ; t#u8 network_hdr_type ; } 
t#irq_poll_fn typedef int ( irq_poll_fn ) ( s#irq_poll * , int ) 
s#irq_poll struct irq_poll { s#list_head list ; unsigned long state ; int weight ; t#irq_poll_fn * poll ; } 
s#ib_cq struct ib_cq { s#ib_device * device ; s#ib_uobject * uobject ; t#ib_comp_handler comp_handler ; void ( * event_handler ) ( s#ib_event * , void * ) ; void * cq_context ; int cqe ; t#atomic_t usecnt ; e#ib_poll_context poll_ctx ; s#ib_wc * wc ; union { s#irq_poll iop ; s#work_struct work ; } ; s#workqueue_struct * comp_wq ; s#rdma_restrack_entry res ; } 
e#ib_event_type enum ib_event_type { IB_EVENT_CQ_ERR , IB_EVENT_QP_FATAL , IB_EVENT_QP_REQ_ERR , IB_EVENT_QP_ACCESS_ERR , IB_EVENT_COMM_EST , IB_EVENT_SQ_DRAINED , IB_EVENT_PATH_MIG , IB_EVENT_PATH_MIG_ERR , IB_EVENT_DEVICE_FATAL , IB_EVENT_PORT_ACTIVE , IB_EVENT_PORT_ERR , IB_EVENT_LID_CHANGE , IB_EVENT_PKEY_CHANGE , IB_EVENT_SM_CHANGE , IB_EVENT_SRQ_ERR , IB_EVENT_SRQ_LIMIT_REACHED , IB_EVENT_QP_LAST_WQE_REACHED , IB_EVENT_CLIENT_REREGISTER , IB_EVENT_GID_CHANGE , IB_EVENT_WQ_FATAL , } 
s#ib_event struct ib_event { s#ib_device * device ; union { s#ib_cq * cq ; s#ib_qp * qp ; s#ib_srq * srq ; s#ib_wq * wq ; t#u8 port_num ; } element ; e#ib_event_type event ; } 
s#ib_event_handler struct ib_event_handler { s#ib_device * device ; void ( * handler ) ( s#ib_event_handler * , s#ib_event * ) ; s#list_head list ; } 
s##ib_pkey_cache
s##ib_gid_table
e#ib_port_state enum ib_port_state { IB_PORT_NOP = 0 , IB_PORT_DOWN = 1 , IB_PORT_INIT = 2 , IB_PORT_ARMED = 3 , IB_PORT_ACTIVE = 4 , IB_PORT_ACTIVE_DEFER = 5 } 
s#ib_port_cache struct ib_port_cache { t#u64 subnet_prefix ; s#ib_pkey_cache * pkey ; s#ib_gid_table * gid ; t#u8 lmc ; e#ib_port_state port_state ; } 
s#ib_cache struct ib_cache { t#rwlock_t lock ; s#ib_event_handler event_handler ; s#ib_port_cache * ports ; } 
s#ib_port_immutable struct ib_port_immutable { int pkey_tbl_len ; int gid_tbl_len ; t#u32 core_cap_flags ; t#u32 max_mad_size ; } 
s#ib_port_pkey_list struct ib_port_pkey_list { t#spinlock_t list_lock ; s#list_head pkey_list ; } 
s##iw_cm_verbs
s#rdma_hw_stats struct rdma_hw_stats { s#mutex lock ; unsigned long timestamp ; unsigned long lifespan ; const char * const * names ; int num_counters ; t#u64 value [ ] ; } 
e#ib_atomic_cap enum ib_atomic_cap { IB_ATOMIC_NONE , IB_ATOMIC_HCA , IB_ATOMIC_GLOB } 
t#uint64_t typedef t#__u64 uint64_t 
s#ib_odp_caps struct ib_odp_caps { t#uint64_t general_caps ; struct { t#uint32_t rc_odp_caps ; t#uint32_t uc_odp_caps ; t#uint32_t ud_odp_caps ; } per_transport_caps ; } 
s#ib_rss_caps struct ib_rss_caps { t#u32 supported_qpts ; t#u32 max_rwq_indirection_tables ; t#u32 max_rwq_indirection_table_size ; } 
s#ib_tm_caps struct ib_tm_caps { t#u32 max_rndv_hdr_size ; t#u32 max_num_tags ; t#u32 flags ; t#u32 max_ops ; t#u32 max_sge ; } 
s#ib_cq_caps struct ib_cq_caps { t#u16 max_cq_moderation_count ; t#u16 max_cq_moderation_period ; } 
s#ib_device_attr struct ib_device_attr { t#u64 fw_ver ; t#__be64 sys_image_guid ; t#u64 max_mr_size ; t#u64 page_size_cap ; t#u32 vendor_id ; t#u32 vendor_part_id ; t#u32 hw_ver ; int max_qp ; int max_qp_wr ; t#u64 device_cap_flags ; int max_send_sge ; int max_recv_sge ; int max_sge_rd ; int max_cq ; int max_cqe ; int max_mr ; int max_pd ; int max_qp_rd_atom ; int max_ee_rd_atom ; int max_res_rd_atom ; int max_qp_init_rd_atom ; int max_ee_init_rd_atom ; e#ib_atomic_cap atomic_cap ; e#ib_atomic_cap masked_atomic_cap ; int max_ee ; int max_rdd ; int max_mw ; int max_raw_ipv6_qp ; int max_raw_ethy_qp ; int max_mcast_grp ; int max_mcast_qp_attach ; int max_total_mcast_qp_attach ; int max_ah ; int max_fmr ; int max_map_per_fmr ; int max_srq ; int max_srq_wr ; int max_srq_sge ; unsigned int max_fast_reg_page_list_len ; t#u16 max_pkeys ; t#u8 local_ca_ack_delay ; int sig_prot_cap ; int sig_guard_cap ; s#ib_odp_caps odp_caps ; t#uint64_t timestamp_mask ; t#uint64_t hca_core_clock ; s#ib_rss_caps rss_caps ; t#u32 max_wq_type_rq ; t#u32 raw_packet_caps ; s#ib_tm_caps tm_caps ; s#ib_cq_caps cq_caps ; t#u64 max_dm_size ; } 
s#ib_udata struct ib_udata { const void * inbuf ; void * outbuf ; t#size_t inlen ; t#size_t outlen ; } 
e#ib_mtu enum ib_mtu { IB_MTU_256 = 1 , IB_MTU_512 = 2 , IB_MTU_1024 = 3 , IB_MTU_2048 = 4 , IB_MTU_4096 = 5 } 
s#ib_port_attr struct ib_port_attr { t#u64 subnet_prefix ; e#ib_port_state state ; e#ib_mtu max_mtu ; e#ib_mtu active_mtu ; int gid_tbl_len ; unsigned int ip_gids : 1 ; t#u32 port_cap_flags ; t#u32 max_msg_sz ; t#u32 bad_pkey_cntr ; t#u32 qkey_viol_cntr ; t#u16 pkey_tbl_len ; t#u32 sm_lid ; t#u32 lid ; t#u8 lmc ; t#u8 max_vl_num ; t#u8 sm_sl ; t#u8 subnet_timeout ; t#u8 init_type_reply ; t#u8 active_width ; t#u8 active_speed ; t#u8 phys_state ; } 
e#rdma_link_layer enum rdma_link_layer { IB_LINK_LAYER_UNSPECIFIED , IB_LINK_LAYER_INFINIBAND , IB_LINK_LAYER_ETHERNET , } 
s#ib_device_modify struct ib_device_modify { t#u64 sys_image_guid ; char node_desc [ 64 ] ; } 
s#ib_port_modify struct ib_port_modify { t#u32 set_port_cap_mask ; t#u32 clr_port_cap_mask ; t#u8 init_type ; } 
e#rdma_ah_attr_type enum rdma_ah_attr_type { RDMA_AH_ATTR_TYPE_UNDEFINED , RDMA_AH_ATTR_TYPE_IB , RDMA_AH_ATTR_TYPE_ROCE , RDMA_AH_ATTR_TYPE_OPA , } 
s#ib_ah struct ib_ah { s#ib_device * device ; s#ib_pd * pd ; s#ib_uobject * uobject ; const s#ib_gid_attr * sgid_attr ; e#rdma_ah_attr_type type ; } 
s#ib_global_route struct ib_global_route { const s#ib_gid_attr * sgid_attr ; u#ib_gid dgid ; t#u32 flow_label ; t#u8 sgid_index ; t#u8 hop_limit ; t#u8 traffic_class ; } 
s#ib_ah_attr struct ib_ah_attr { t#u16 dlid ; t#u8 src_path_bits ; } 
s#roce_ah_attr struct roce_ah_attr { t#u8 dmac [ 6 ] ; } 
s#opa_ah_attr struct opa_ah_attr { t#u32 dlid ; t#u8 src_path_bits ; t#bool make_grd ; } 
s#rdma_ah_attr struct rdma_ah_attr { s#ib_global_route grh ; t#u8 sl ; t#u8 static_rate ; t#u8 port_num ; t#u8 ah_flags ; e#rdma_ah_attr_type type ; union { s#ib_ah_attr ib ; s#roce_ah_attr roce ; s#opa_ah_attr opa ; } ; } 
s#ib_srq_attr struct ib_srq_attr { t#u32 max_wr ; t#u32 max_sge ; t#u32 srq_limit ; } 
s#ib_srq_init_attr struct ib_srq_init_attr { void ( * event_handler ) ( s#ib_event * , void * ) ; void * srq_context ; s#ib_srq_attr attr ; e#ib_srq_type srq_type ; struct { s#ib_cq * cq ; union { struct { s#ib_xrcd * xrcd ; } xrc ; struct { t#u32 max_num_tags ; } tag_matching ; } ; } ext ; } 
e#ib_srq_attr_mask enum ib_srq_attr_mask { IB_SRQ_MAX_WR = 1 << 0 , IB_SRQ_LIMIT = 1 << 1 , } 
s#ib_sge struct ib_sge { t#u64 addr ; t#u32 length ; t#u32 lkey ; } 
s#ib_recv_wr struct ib_recv_wr { s#ib_recv_wr * next ; union { t#u64 wr_id ; s#ib_cqe * wr_cqe ; } ; s#ib_sge * sg_list ; int num_sge ; } 
s#ib_qp_cap struct ib_qp_cap { t#u32 max_send_wr ; t#u32 max_recv_wr ; t#u32 max_send_sge ; t#u32 max_recv_sge ; t#u32 max_inline_data ; t#u32 max_rdma_ctxs ; } 
e#ib_sig_type enum ib_sig_type { IB_SIGNAL_ALL_WR , IB_SIGNAL_REQ_WR } 
s#ib_qp_init_attr struct ib_qp_init_attr { void ( * event_handler ) ( s#ib_event * , void * ) ; void * qp_context ; s#ib_cq * send_cq ; s#ib_cq * recv_cq ; s#ib_srq * srq ; s#ib_xrcd * xrcd ; s#ib_qp_cap cap ; e#ib_sig_type sq_sig_type ; e#ib_qp_type qp_type ; t#u32 create_flags ; t#u8 port_num ; s#ib_rwq_ind_table * rwq_ind_tbl ; t#u32 source_qpn ; } 
e#ib_qp_state enum ib_qp_state { IB_QPS_RESET , IB_QPS_INIT , IB_QPS_RTR , IB_QPS_RTS , IB_QPS_SQD , IB_QPS_SQE , IB_QPS_ERR } 
e#ib_mig_state enum ib_mig_state { IB_MIG_MIGRATED , IB_MIG_REARM , IB_MIG_ARMED } 
s#ib_qp_attr struct ib_qp_attr { e#ib_qp_state qp_state ; e#ib_qp_state cur_qp_state ; e#ib_mtu path_mtu ; e#ib_mig_state path_mig_state ; t#u32 qkey ; t#u32 rq_psn ; t#u32 sq_psn ; t#u32 dest_qp_num ; int qp_access_flags ; s#ib_qp_cap cap ; s#rdma_ah_attr ah_attr ; s#rdma_ah_attr alt_ah_attr ; t#u16 pkey_index ; t#u16 alt_pkey_index ; t#u8 en_sqd_async_notify ; t#u8 sq_draining ; t#u8 max_rd_atomic ; t#u8 max_dest_rd_atomic ; t#u8 min_rnr_timer ; t#u8 port_num ; t#u8 timeout ; t#u8 retry_cnt ; t#u8 rnr_retry ; t#u8 alt_port_num ; t#u8 alt_timeout ; t#u32 rate_limit ; } 
E#IB_UVERBS_WR_RDMA_WRITE 0 
E#IB_UVERBS_WR_RDMA_WRITE_WITH_IMM 1 
E#IB_UVERBS_WR_SEND 2 
E#IB_UVERBS_WR_SEND_WITH_IMM 3 
E#IB_UVERBS_WR_RDMA_READ 4 
E#IB_UVERBS_WR_ATOMIC_CMP_AND_SWP 5 
E#IB_UVERBS_WR_ATOMIC_FETCH_AND_ADD 6 
E#IB_UVERBS_WR_TSO 10 
E#IB_UVERBS_WR_SEND_WITH_INV 9 
E#IB_UVERBS_WR_RDMA_READ_WITH_INV 11 
E#IB_UVERBS_WR_LOCAL_INV 7 
E#IB_UVERBS_WR_MASKED_ATOMIC_CMP_AND_SWP 12 
E#IB_UVERBS_WR_MASKED_ATOMIC_FETCH_AND_ADD 13 
e#ib_wr_opcode enum ib_wr_opcode { IB_WR_RDMA_WRITE = E#IB_UVERBS_WR_RDMA_WRITE , IB_WR_RDMA_WRITE_WITH_IMM = E#IB_UVERBS_WR_RDMA_WRITE_WITH_IMM , IB_WR_SEND = E#IB_UVERBS_WR_SEND , IB_WR_SEND_WITH_IMM = E#IB_UVERBS_WR_SEND_WITH_IMM , IB_WR_RDMA_READ = E#IB_UVERBS_WR_RDMA_READ , IB_WR_ATOMIC_CMP_AND_SWP = E#IB_UVERBS_WR_ATOMIC_CMP_AND_SWP , IB_WR_ATOMIC_FETCH_AND_ADD = E#IB_UVERBS_WR_ATOMIC_FETCH_AND_ADD , IB_WR_LSO = E#IB_UVERBS_WR_TSO , IB_WR_SEND_WITH_INV = E#IB_UVERBS_WR_SEND_WITH_INV , IB_WR_RDMA_READ_WITH_INV = E#IB_UVERBS_WR_RDMA_READ_WITH_INV , IB_WR_LOCAL_INV = E#IB_UVERBS_WR_LOCAL_INV , IB_WR_MASKED_ATOMIC_CMP_AND_SWP = E#IB_UVERBS_WR_MASKED_ATOMIC_CMP_AND_SWP , IB_WR_MASKED_ATOMIC_FETCH_AND_ADD = E#IB_UVERBS_WR_MASKED_ATOMIC_FETCH_AND_ADD , IB_WR_REG_MR = 0x20 , IB_WR_REG_SIG_MR , IB_WR_RESERVED1 = 0xf0 , IB_WR_RESERVED2 , IB_WR_RESERVED3 , IB_WR_RESERVED4 , IB_WR_RESERVED5 , IB_WR_RESERVED6 , IB_WR_RESERVED7 , IB_WR_RESERVED8 , IB_WR_RESERVED9 , IB_WR_RESERVED10 , } 
s#ib_send_wr struct ib_send_wr { s#ib_send_wr * next ; union { t#u64 wr_id ; s#ib_cqe * wr_cqe ; } ; s#ib_sge * sg_list ; int num_sge ; e#ib_wr_opcode opcode ; int send_flags ; union { t#__be32 imm_data ; t#u32 invalidate_rkey ; } ex ; } 
s#ib_cq_init_attr struct ib_cq_init_attr { unsigned int cqe ; int comp_vector ; t#u32 flags ; } 
E#IB_CQ_SOLICITED 1 << 0 
E#IB_CQ_NEXT_COMP 1 << 1 
e#ib_cq_notify_flags enum ib_cq_notify_flags { IB_CQ_SOLICITED = 1 << 0 , IB_CQ_NEXT_COMP = 1 << 1 , IB_CQ_SOLICITED_MASK = E#IB_CQ_SOLICITED | E#IB_CQ_NEXT_COMP , IB_CQ_REPORT_MISSED_EVENTS = 1 << 2 , } 
e#ib_mr_type enum ib_mr_type { IB_MR_TYPE_MEM_REG , IB_MR_TYPE_SIGNATURE , IB_MR_TYPE_SG_GAPS , } 
e#ib_mw_type enum ib_mw_type { IB_MW_TYPE_1 = 1 , IB_MW_TYPE_2 = 2 } 
s#ib_mw struct ib_mw { s#ib_device * device ; s#ib_pd * pd ; s#ib_uobject * uobject ; t#u32 rkey ; e#ib_mw_type type ; } 
s#ib_fmr struct ib_fmr { s#ib_device * device ; s#ib_pd * pd ; s#list_head list ; t#u32 lkey ; t#u32 rkey ; } 
s#ib_fmr_attr struct ib_fmr_attr { int max_pages ; int max_maps ; t#u8 page_shift ; } 
s#ib_grh struct ib_grh { t#__be32 version_tclass_flow ; t#__be16 paylen ; t#u8 next_hdr ; t#u8 hop_limit ; u#ib_gid sgid ; u#ib_gid dgid ; } 
s##ib_mad_hdr
s#ib_flow struct ib_flow { s#ib_qp * qp ; s#ib_device * device ; s#ib_uobject * uobject ; } 
e#ib_flow_attr_type enum ib_flow_attr_type { IB_FLOW_ATTR_NORMAL = 0x0 , IB_FLOW_ATTR_ALL_DEFAULT = 0x1 , IB_FLOW_ATTR_MC_DEFAULT = 0x2 , IB_FLOW_ATTR_SNIFFER = 0x3 } 
s#ib_flow_attr struct ib_flow_attr { e#ib_flow_attr_type type ; t#u16 size ; t#u16 priority ; t#u32 flags ; t#u8 num_of_specs ; t#u8 port ; } 
e#ib_sig_err_type enum ib_sig_err_type { IB_SIG_BAD_GUARD , IB_SIG_BAD_REFTAG , IB_SIG_BAD_APPTAG , } 
s#ib_sig_err struct ib_sig_err { e#ib_sig_err_type err_type ; t#u32 expected ; t#u32 actual ; t#u64 sig_err_offset ; t#u32 key ; } 
s#ib_mr_status struct ib_mr_status { t#u32 fail_status ; s#ib_sig_err sig_err ; } 
s#ib_wq_init_attr struct ib_wq_init_attr { void * wq_context ; e#ib_wq_type wq_type ; t#u32 max_wr ; t#u32 max_sge ; s#ib_cq * cq ; void ( * event_handler ) ( s#ib_event * , void * ) ; t#u32 create_flags ; } 
s#ib_wq_attr struct ib_wq_attr { e#ib_wq_state wq_state ; e#ib_wq_state curr_wq_state ; t#u32 flags ; t#u32 flags_mask ; } 
s#ib_rwq_ind_table_init_attr struct ib_rwq_ind_table_init_attr { t#u32 log_ind_tbl_size ; s#ib_wq * * ind_tbl ; } 
e#ib_flow_action_type enum ib_flow_action_type { IB_FLOW_ACTION_UNSPECIFIED , IB_FLOW_ACTION_ESP = 1 , } 
s#ib_flow_action struct ib_flow_action { s#ib_device * device ; s#ib_uobject * uobject ; e#ib_flow_action_type type ; t#atomic_t usecnt ; } 
e#ib_uverbs_flow_action_esp_keymat enum ib_uverbs_flow_action_esp_keymat { IB_UVERBS_FLOW_ACTION_ESP_KEYMAT_AES_GCM , } 
s#ib_uverbs_flow_action_esp_keymat_aes_gcm struct ib_uverbs_flow_action_esp_keymat_aes_gcm { t#__u64 __attribute__ ( ( aligned ( 8 ) ) ) iv ; t#__u32 iv_algo ; t#__u32 salt ; t#__u32 icv_len ; t#__u32 key_len ; t#__u32 aes_key [ 256 / 32 ] ; } 
s#ib_flow_action_attrs_esp_keymats struct ib_flow_action_attrs_esp_keymats { e#ib_uverbs_flow_action_esp_keymat protocol ; union { s#ib_uverbs_flow_action_esp_keymat_aes_gcm aes_gcm ; } keymat ; } 
e#ib_uverbs_flow_action_esp_replay enum ib_uverbs_flow_action_esp_replay { IB_UVERBS_FLOW_ACTION_ESP_REPLAY_NONE , IB_UVERBS_FLOW_ACTION_ESP_REPLAY_BMP , } 
s#ib_uverbs_flow_action_esp_replay_bmp struct ib_uverbs_flow_action_esp_replay_bmp { t#__u32 size ; } 
s#ib_flow_action_attrs_esp_replays struct ib_flow_action_attrs_esp_replays { e#ib_uverbs_flow_action_esp_replay protocol ; union { s#ib_uverbs_flow_action_esp_replay_bmp bmp ; } replay ; } 
s#ib_flow_eth_filter struct ib_flow_eth_filter { t#u8 dst_mac [ 6 ] ; t#u8 src_mac [ 6 ] ; t#__be16 ether_type ; t#__be16 vlan_tag ; t#u8 real_sz [ 0 ] ; } 
s#ib_flow_spec_eth struct ib_flow_spec_eth { t#u32 type ; t#u16 size ; s#ib_flow_eth_filter val ; s#ib_flow_eth_filter mask ; } 
s#ib_flow_ib_filter struct ib_flow_ib_filter { t#__be16 dlid ; t#__u8 sl ; t#u8 real_sz [ 0 ] ; } 
s#ib_flow_spec_ib struct ib_flow_spec_ib { t#u32 type ; t#u16 size ; s#ib_flow_ib_filter val ; s#ib_flow_ib_filter mask ; } 
s#ib_flow_ipv4_filter struct ib_flow_ipv4_filter { t#__be32 src_ip ; t#__be32 dst_ip ; t#u8 proto ; t#u8 tos ; t#u8 ttl ; t#u8 flags ; t#u8 real_sz [ 0 ] ; } 
s#ib_flow_spec_ipv4 struct ib_flow_spec_ipv4 { t#u32 type ; t#u16 size ; s#ib_flow_ipv4_filter val ; s#ib_flow_ipv4_filter mask ; } 
s#ib_flow_tcp_udp_filter struct ib_flow_tcp_udp_filter { t#__be16 dst_port ; t#__be16 src_port ; t#u8 real_sz [ 0 ] ; } 
s#ib_flow_spec_tcp_udp struct ib_flow_spec_tcp_udp { t#u32 type ; t#u16 size ; s#ib_flow_tcp_udp_filter val ; s#ib_flow_tcp_udp_filter mask ; } 
s#ib_flow_ipv6_filter struct ib_flow_ipv6_filter { t#u8 src_ip [ 16 ] ; t#u8 dst_ip [ 16 ] ; t#__be32 flow_label ; t#u8 next_hdr ; t#u8 traffic_class ; t#u8 hop_limit ; t#u8 real_sz [ 0 ] ; } 
s#ib_flow_spec_ipv6 struct ib_flow_spec_ipv6 { t#u32 type ; t#u16 size ; s#ib_flow_ipv6_filter val ; s#ib_flow_ipv6_filter mask ; } 
s#ib_flow_tunnel_filter struct ib_flow_tunnel_filter { t#__be32 tunnel_id ; t#u8 real_sz [ 0 ] ; } 
s#ib_flow_spec_tunnel struct ib_flow_spec_tunnel { t#u32 type ; t#u16 size ; s#ib_flow_tunnel_filter val ; s#ib_flow_tunnel_filter mask ; } 
s#ib_flow_esp_filter struct ib_flow_esp_filter { t#__be32 spi ; t#__be32 seq ; t#u8 real_sz [ 0 ] ; } 
s#ib_flow_spec_esp struct ib_flow_spec_esp { t#u32 type ; t#u16 size ; s#ib_flow_esp_filter val ; s#ib_flow_esp_filter mask ; } 
s#ib_flow_gre_filter struct ib_flow_gre_filter { t#__be16 c_ks_res0_ver ; t#__be16 protocol ; t#__be32 key ; t#u8 real_sz [ 0 ] ; } 
s#ib_flow_spec_gre struct ib_flow_spec_gre { t#u32 type ; t#u16 size ; s#ib_flow_gre_filter val ; s#ib_flow_gre_filter mask ; } 
s#ib_flow_mpls_filter struct ib_flow_mpls_filter { t#__be32 tag ; t#u8 real_sz [ 0 ] ; } 
s#ib_flow_spec_mpls struct ib_flow_spec_mpls { t#u32 type ; t#u16 size ; s#ib_flow_mpls_filter val ; s#ib_flow_mpls_filter mask ; } 
e#ib_flow_spec_type enum ib_flow_spec_type { IB_FLOW_SPEC_ETH = 0x20 , IB_FLOW_SPEC_IB = 0x22 , IB_FLOW_SPEC_IPV4 = 0x30 , IB_FLOW_SPEC_IPV6 = 0x31 , IB_FLOW_SPEC_ESP = 0x34 , IB_FLOW_SPEC_TCP = 0x40 , IB_FLOW_SPEC_UDP = 0x41 , IB_FLOW_SPEC_VXLAN_TUNNEL = 0x50 , IB_FLOW_SPEC_GRE = 0x51 , IB_FLOW_SPEC_MPLS = 0x60 , IB_FLOW_SPEC_INNER = 0x100 , IB_FLOW_SPEC_ACTION_TAG = 0x1000 , IB_FLOW_SPEC_ACTION_DROP = 0x1001 , IB_FLOW_SPEC_ACTION_HANDLE = 0x1002 , IB_FLOW_SPEC_ACTION_COUNT = 0x1003 , } 
s#ib_flow_spec_action_tag struct ib_flow_spec_action_tag { e#ib_flow_spec_type type ; t#u16 size ; t#u32 tag_id ; } 
s#ib_flow_spec_action_drop struct ib_flow_spec_action_drop { e#ib_flow_spec_type type ; t#u16 size ; } 
s#ib_flow_spec_action_handle struct ib_flow_spec_action_handle { e#ib_flow_spec_type type ; t#u16 size ; s#ib_flow_action * act ; } 
s#ib_counters struct ib_counters { s#ib_device * device ; s#ib_uobject * uobject ; t#atomic_t usecnt ; } 
s#ib_flow_spec_action_count struct ib_flow_spec_action_count { e#ib_flow_spec_type type ; t#u16 size ; s#ib_counters * counters ; } 
u#ib_flow_spec union ib_flow_spec { struct { t#u32 type ; t#u16 size ; } ; s#ib_flow_spec_eth eth ; s#ib_flow_spec_ib ib ; s#ib_flow_spec_ipv4 ipv4 ; s#ib_flow_spec_tcp_udp tcp_udp ; s#ib_flow_spec_ipv6 ipv6 ; s#ib_flow_spec_tunnel tunnel ; s#ib_flow_spec_esp esp ; s#ib_flow_spec_gre gre ; s#ib_flow_spec_mpls mpls ; s#ib_flow_spec_action_tag flow_tag ; s#ib_flow_spec_action_drop drop ; s#ib_flow_spec_action_handle action ; s#ib_flow_spec_action_count flow_count ; } 
s#ib_flow_spec_list struct ib_flow_spec_list { s#ib_flow_spec_list * next ; u#ib_flow_spec spec ; } 
s#ib_flow_action_attrs_esp struct ib_flow_action_attrs_esp { s#ib_flow_action_attrs_esp_keymats * keymat ; s#ib_flow_action_attrs_esp_replays * replay ; s#ib_flow_spec_list * encap ; t#u32 esn ; t#u32 spi ; t#u32 seq ; t#u32 tfc_pad ; t#u64 flags ; t#u64 hard_limit_pkts ; } 
s##uverbs_attr_bundle
s#ib_dm_alloc_attr struct ib_dm_alloc_attr { t#u64 length ; t#u32 alignment ; t#u32 flags ; } 
s#ib_dm_mr_attr struct ib_dm_mr_attr { t#u64 length ; t#u64 offset ; t#u32 access_flags ; } 
s#ib_counters_read_attr struct ib_counters_read_attr { t#u64 * counters_buff ; t#u32 ncounters ; t#u32 flags ; } 
e#rdma_netdev_t enum rdma_netdev_t { RDMA_NETDEV_OPA_VNIC , RDMA_NETDEV_IPOIB , } 
s#rdma_netdev_alloc_params struct rdma_netdev_alloc_params { t#size_t sizeof_priv ; unsigned int txqs ; unsigned int rxqs ; void * param ; int ( * initialize_rdma_netdev ) ( s#ib_device * , t#u8 , s#net_device * , void * ) ; } 
s#rdmacg_device struct rdmacg_device { s#list_head dev_node ; s#list_head rpools ; char * name ; } 
s#rdma_restrack_root struct rdma_restrack_root { s#rw_semaphore rwsem ; s#hlist_head hash [ 1 << ( 8 ) ] ; int ( * fill_res_entry ) ( s#sk_buff * , s#rdma_restrack_entry * ) ; } 
s##uverbs_object_tree_def
e#rdma_driver_id enum rdma_driver_id { RDMA_DRIVER_UNKNOWN , RDMA_DRIVER_MLX5 , RDMA_DRIVER_MLX4 , RDMA_DRIVER_CXGB3 , RDMA_DRIVER_CXGB4 , RDMA_DRIVER_MTHCA , RDMA_DRIVER_BNXT_RE , RDMA_DRIVER_OCRDMA , RDMA_DRIVER_NES , RDMA_DRIVER_I40IW , RDMA_DRIVER_VMW_PVRDMA , RDMA_DRIVER_QEDR , RDMA_DRIVER_HNS , RDMA_DRIVER_USNIC , RDMA_DRIVER_RXE , RDMA_DRIVER_HFI1 , RDMA_DRIVER_QIB , } 
s#ib_device struct ib_device { s#device * dma_device ; char name [ 64 ] ; s#list_head event_handler_list ; t#spinlock_t event_handler_lock ; t#rwlock_t client_data_lock ; s#list_head core_list ; s#list_head client_data_list ; s#ib_cache cache ; s#ib_port_immutable * port_immutable ; int num_comp_vectors ; s#ib_port_pkey_list * port_pkey_list ; s#iw_cm_verbs * iwcm ; s#rdma_hw_stats * ( * alloc_hw_stats ) ( s#ib_device * , t#u8 ) ; int ( * get_hw_stats ) ( s#ib_device * , s#rdma_hw_stats * , t#u8 , int ) ; int ( * query_device ) ( s#ib_device * , s#ib_device_attr * , s#ib_udata * ) ; int ( * query_port ) ( s#ib_device * , t#u8 , s#ib_port_attr * ) ; e#rdma_link_layer ( * get_link_layer ) ( s#ib_device * , t#u8 ) ; s#net_device * ( * get_netdev ) ( s#ib_device * , t#u8 ) ; int ( * query_gid ) ( s#ib_device * , t#u8 , int , u#ib_gid * ) ; int ( * add_gid ) ( const s#ib_gid_attr * , void * * ) ; int ( * del_gid ) ( const s#ib_gid_attr * , void * * ) ; int ( * query_pkey ) ( s#ib_device * , t#u8 , t#u16 , t#u16 * ) ; int ( * modify_device ) ( s#ib_device * , int , s#ib_device_modify * ) ; int ( * modify_port ) ( s#ib_device * , t#u8 , int , s#ib_port_modify * ) ; s#ib_ucontext * ( * alloc_ucontext ) ( s#ib_device * , s#ib_udata * ) ; int ( * dealloc_ucontext ) ( s#ib_ucontext * ) ; int ( * mmap ) ( s#ib_ucontext * , s#vm_area_struct * ) ; s#ib_pd * ( * alloc_pd ) ( s#ib_device * , s#ib_ucontext * , s#ib_udata * ) ; int ( * dealloc_pd ) ( s#ib_pd * ) ; s#ib_ah * ( * create_ah ) ( s#ib_pd * , s#rdma_ah_attr * , s#ib_udata * ) ; int ( * modify_ah ) ( s#ib_ah * , s#rdma_ah_attr * ) ; int ( * query_ah ) ( s#ib_ah * , s#rdma_ah_attr * ) ; int ( * destroy_ah ) ( s#ib_ah * ) ; s#ib_srq * ( * create_srq ) ( s#ib_pd * , s#ib_srq_init_attr * , s#ib_udata * ) ; int ( * modify_srq ) ( s#ib_srq * , s#ib_srq_attr * , e#ib_srq_attr_mask , s#ib_udata * ) ; int ( * query_srq ) ( s#ib_srq * , s#ib_srq_attr * ) ; int ( * destroy_srq ) ( s#ib_srq * ) ; int ( * post_srq_recv ) ( s#ib_srq * , const s#ib_recv_wr * , const s#ib_recv_wr * * ) ; s#ib_qp * ( * create_qp ) ( s#ib_pd * , s#ib_qp_init_attr * , s#ib_udata * ) ; int ( * modify_qp ) ( s#ib_qp * , s#ib_qp_attr * , int , s#ib_udata * ) ; int ( * query_qp ) ( s#ib_qp * , s#ib_qp_attr * , int , s#ib_qp_init_attr * ) ; int ( * destroy_qp ) ( s#ib_qp * ) ; int ( * post_send ) ( s#ib_qp * , const s#ib_send_wr * , const s#ib_send_wr * * ) ; int ( * post_recv ) ( s#ib_qp * , const s#ib_recv_wr * , const s#ib_recv_wr * * ) ; s#ib_cq * ( * create_cq ) ( s#ib_device * , const s#ib_cq_init_attr * , s#ib_ucontext * , s#ib_udata * ) ; int ( * modify_cq ) ( s#ib_cq * , t#u16 , t#u16 ) ; int ( * destroy_cq ) ( s#ib_cq * ) ; int ( * resize_cq ) ( s#ib_cq * , int , s#ib_udata * ) ; int ( * poll_cq ) ( s#ib_cq * , int , s#ib_wc * ) ; int ( * peek_cq ) ( s#ib_cq * , int ) ; int ( * req_notify_cq ) ( s#ib_cq * , e#ib_cq_notify_flags ) ; int ( * req_ncomp_notif ) ( s#ib_cq * , int ) ; s#ib_mr * ( * get_dma_mr ) ( s#ib_pd * , int ) ; s#ib_mr * ( * reg_user_mr ) ( s#ib_pd * , t#u64 , t#u64 , t#u64 , int , s#ib_udata * ) ; int ( * rereg_user_mr ) ( s#ib_mr * , int , t#u64 , t#u64 , t#u64 , int , s#ib_pd * , s#ib_udata * ) ; int ( * dereg_mr ) ( s#ib_mr * ) ; s#ib_mr * ( * alloc_mr ) ( s#ib_pd * , e#ib_mr_type , t#u32 ) ; int ( * map_mr_sg ) ( s#ib_mr * , s#scatterlist * , int , unsigned int * ) ; s#ib_mw * ( * alloc_mw ) ( s#ib_pd * , e#ib_mw_type , s#ib_udata * ) ; int ( * dealloc_mw ) ( s#ib_mw * ) ; s#ib_fmr * ( * alloc_fmr ) ( s#ib_pd * , int , s#ib_fmr_attr * ) ; int ( * map_phys_fmr ) ( s#ib_fmr * , t#u64 * , int , t#u64 ) ; int ( * unmap_fmr ) ( s#list_head * ) ; int ( * dealloc_fmr ) ( s#ib_fmr * ) ; int ( * attach_mcast ) ( s#ib_qp * , u#ib_gid * , t#u16 ) ; int ( * detach_mcast ) ( s#ib_qp * , u#ib_gid * , t#u16 ) ; int ( * process_mad ) ( s#ib_device * , int , t#u8 , const s#ib_wc * , const s#ib_grh * , const s#ib_mad_hdr * , t#size_t , s#ib_mad_hdr * , t#size_t * , t#u16 * ) ; s#ib_xrcd * ( * alloc_xrcd ) ( s#ib_device * , s#ib_ucontext * , s#ib_udata * ) ; int ( * dealloc_xrcd ) ( s#ib_xrcd * ) ; s#ib_flow * ( * create_flow ) ( s#ib_qp * , s#ib_flow_attr * , int , s#ib_udata * ) ; int ( * destroy_flow ) ( s#ib_flow * ) ; int ( * check_mr_status ) ( s#ib_mr * , t#u32 , s#ib_mr_status * ) ; void ( * disassociate_ucontext ) ( s#ib_ucontext * ) ; void ( * drain_rq ) ( s#ib_qp * ) ; void ( * drain_sq ) ( s#ib_qp * ) ; int ( * set_vf_link_state ) ( s#ib_device * , int , t#u8 , int ) ; int ( * get_vf_config ) ( s#ib_device * , int , t#u8 , s#ifla_vf_info * ) ; int ( * get_vf_stats ) ( s#ib_device * , int , t#u8 , s#ifla_vf_stats * ) ; int ( * set_vf_guid ) ( s#ib_device * , int , t#u8 , t#u64 , int ) ; s#ib_wq * ( * create_wq ) ( s#ib_pd * , s#ib_wq_init_attr * , s#ib_udata * ) ; int ( * destroy_wq ) ( s#ib_wq * ) ; int ( * modify_wq ) ( s#ib_wq * , s#ib_wq_attr * , t#u32 , s#ib_udata * ) ; s#ib_rwq_ind_table * ( * create_rwq_ind_table ) ( s#ib_device * , s#ib_rwq_ind_table_init_attr * , s#ib_udata * ) ; int ( * destroy_rwq_ind_table ) ( s#ib_rwq_ind_table * ) ; s#ib_flow_action * ( * create_flow_action_esp ) ( s#ib_device * , const s#ib_flow_action_attrs_esp * , s#uverbs_attr_bundle * ) ; int ( * destroy_flow_action ) ( s#ib_flow_action * ) ; int ( * modify_flow_action_esp ) ( s#ib_flow_action * , const s#ib_flow_action_attrs_esp * , s#uverbs_attr_bundle * ) ; s#ib_dm * ( * alloc_dm ) ( s#ib_device * , s#ib_ucontext * , s#ib_dm_alloc_attr * , s#uverbs_attr_bundle * ) ; int ( * dealloc_dm ) ( s#ib_dm * ) ; s#ib_mr * ( * reg_dm_mr ) ( s#ib_pd * , s#ib_dm * , s#ib_dm_mr_attr * , s#uverbs_attr_bundle * ) ; s#ib_counters * ( * create_counters ) ( s#ib_device * , s#uverbs_attr_bundle * ) ; int ( * destroy_counters ) ( s#ib_counters * ) ; int ( * read_counters ) ( s#ib_counters * , s#ib_counters_read_attr * , s#uverbs_attr_bundle * ) ; s#net_device * ( * alloc_rdma_netdev ) ( s#ib_device * , t#u8 , e#rdma_netdev_t , const char * , unsigned char , void ( * ) ( s#net_device * ) ) ; int ( * rdma_netdev_get_params ) ( s#ib_device * , t#u8 , e#rdma_netdev_t , s#rdma_netdev_alloc_params * ) ; s#module * owner ; s#device dev ; const s#attribute_group * groups [ 3 ] ; s#kobject * ports_kobj ; s#list_head port_list ; enum { IB_DEV_UNINITIALIZED , IB_DEV_REGISTERED , IB_DEV_UNREGISTERED } reg_state ; int uverbs_abi_ver ; t#u64 uverbs_cmd_mask ; t#u64 uverbs_ex_cmd_mask ; char node_desc [ 64 ] ; t#__be64 node_guid ; t#u32 local_dma_lkey ; t#u16 is_switch : 1 ; t#u8 node_type ; t#u8 phys_port_cnt ; s#ib_device_attr attrs ; s#attribute_group * hw_stats_ag ; s#rdma_hw_stats * hw_stats ; s#rdmacg_device cg_device ; t#u32 index ; s#rdma_restrack_root res ; int ( * get_port_immutable ) ( s#ib_device * , t#u8 , s#ib_port_immutable * ) ; void ( * get_dev_fw_str ) ( s#ib_device * , char * ) ; const s#cpumask * ( * get_vector_affinity ) ( s#ib_device * , int ) ; const s#uverbs_object_tree_def * const * driver_specs ; e#rdma_driver_id driver_id ; t#refcount_t refcount ; s#completion unreg_completion ; } 
blk_mq_rdma_map_queues int blk_mq_rdma_map_queues ( s#blk_mq_tag_set * , s#ib_device * , int ) 

/* block/blk-mq-sched.o */
s##sock
s##vfsmount
s##posix_acl
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##workqueue_struct
s##cgroup_subsys_state
s##hd_geometry
s##pr_ops
s##timer_rand_state
s##disk_events
s##badblocks
s##kmem_cache
s##reclaim_state
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##swap_info_struct
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##mtd_info
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##blkcg_gq
s##blk_queue_stats
s##bsg_job
s##throtl_data
blk_mq_sched_free_hctx_data void blk_mq_sched_free_hctx_data ( s#request_queue * , void ( * ) ( s#blk_mq_hw_ctx * ) ) 
blk_mq_sched_mark_restart_hctx void blk_mq_sched_mark_restart_hctx ( s#blk_mq_hw_ctx * ) 
blk_mq_sched_try_merge t#bool blk_mq_sched_try_merge ( s#request_queue * , s#bio * , s#request * * ) 
blk_mq_bio_list_merge t#bool blk_mq_bio_list_merge ( s#request_queue * , s#list_head * , s#bio * ) 
blk_mq_sched_try_insert_merge t#bool blk_mq_sched_try_insert_merge ( s#request_queue * , s#request * ) 
blk_mq_sched_request_inserted void blk_mq_sched_request_inserted ( s#request * ) 

/* block/blk-mq-sysfs.o */
s##device_private
s##sock
s##vfsmount
s##posix_acl
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##workqueue_struct
s##bpf_prog_array
s##cgroup_taskset
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##pipe_inode_info
s##swap_info_struct
s##kmem_cache
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_flush_queue
s##blk_mq_debugfs_attr
s##blk_queue_stats
s##rq_wb
s##blk_trace
s##bsg_job
s##throtl_data
s##hd_geometry
s##pr_ops
s##timer_rand_state
s##disk_events
s##badblocks
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##mtd_info
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
blk_mq_register_dev int blk_mq_register_dev ( s#device * , s#request_queue * ) 

/* block/blk-mq-tag.o */
s##workqueue_struct
s##sock
s##seq_file
s##vfsmount
s##posix_acl
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##cgroup_subsys_state
s##hd_geometry
s##pr_ops
s##timer_rand_state
s##disk_events
s##badblocks
s##kmem_cache
s##reclaim_state
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##swap_info_struct
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##mtd_info
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##blkcg_gq
s##blk_mq_debugfs_attr
s##blk_queue_stats
s##rq_wb
s##blk_trace
s##bsg_job
s##throtl_data
t#busy_tag_iter_fn typedef void ( busy_tag_iter_fn ) ( s#request * , void * , t#bool ) 
blk_mq_tagset_busy_iter void blk_mq_tagset_busy_iter ( s#blk_mq_tag_set * , t#busy_tag_iter_fn * , void * ) 
blk_mq_tagset_wait_completed_request void blk_mq_tagset_wait_completed_request ( s#blk_mq_tag_set * ) 
blk_mq_unique_tag t#u32 blk_mq_unique_tag ( s#request * ) 

/* block/blk-mq-virtio.o */
s##workqueue_struct
s##sock
s##seq_file
s##vfsmount
s##posix_acl
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##device_private
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##cgroup_subsys_state
s##hd_geometry
s##pr_ops
s##timer_rand_state
s##disk_events
s##badblocks
s##kmem_cache
s##reclaim_state
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##swap_info_struct
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##mtd_info
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##blkcg_gq
s##blk_mq_debugfs_attr
s##blk_queue_stats
s##rq_wb
s##blk_trace
s##blk_flush_queue
s##bsg_job
s##throtl_data
s#virtio_device_id struct virtio_device_id { t#__u32 device ; t#__u32 vendor ; } 
s#virtqueue struct virtqueue { s#list_head list ; void ( * callback ) ( s#virtqueue * ) ; const char * name ; s#virtio_device * vdev ; unsigned int index ; unsigned int num_free ; void * priv ; } 
t#vq_callback_t typedef void vq_callback_t ( s#virtqueue * ) 
s##irq_affinity
s#virtio_config_ops struct virtio_config_ops { void ( * get ) ( s#virtio_device * , unsigned , void * , unsigned ) ; void ( * set ) ( s#virtio_device * , unsigned , const void * , unsigned ) ; t#u32 ( * generation ) ( s#virtio_device * ) ; t#u8 ( * get_status ) ( s#virtio_device * ) ; void ( * set_status ) ( s#virtio_device * , t#u8 ) ; void ( * reset ) ( s#virtio_device * ) ; int ( * find_vqs ) ( s#virtio_device * , unsigned , s#virtqueue * [ ] , t#vq_callback_t * [ ] , const char * const [ ] , const t#bool * , s#irq_affinity * ) ; void ( * del_vqs ) ( s#virtio_device * ) ; t#u64 ( * get_features ) ( s#virtio_device * ) ; int ( * finalize_features ) ( s#virtio_device * ) ; const char * ( * bus_name ) ( s#virtio_device * ) ; int ( * set_vq_affinity ) ( s#virtqueue * , const s#cpumask * ) ; const s#cpumask * ( * get_vq_affinity ) ( s#virtio_device * , int ) ; } 
t#__virtio64 typedef t#__u64 __virtio64 
t#__virtio32 typedef t#__u32 __virtio32 
t#__virtio16 typedef t#__u16 __virtio16 
s#vring_desc struct vring_desc { t#__virtio64 addr ; t#__virtio32 len ; t#__virtio16 flags ; t#__virtio16 next ; } 
s#vring_avail struct vring_avail { t#__virtio16 flags ; t#__virtio16 idx ; t#__virtio16 ring [ ] ; } 
s#vring_used_elem struct vring_used_elem { t#__virtio32 id ; t#__virtio32 len ; } 
s#vring_used struct vring_used { t#__virtio16 flags ; t#__virtio16 idx ; s#vring_used_elem ring [ ] ; } 
s#vring struct vring { unsigned int num ; s#vring_desc * desc ; s#vring_avail * avail ; s#vring_used * used ; } 
s#vringh struct vringh { t#bool little_endian ; t#bool event_indices ; t#bool weak_barriers ; t#u16 last_avail_idx ; t#u16 last_used_idx ; t#u32 completed ; s#vring vring ; void ( * notify ) ( s#vringh * ) ; } 
t#vrh_callback_t typedef void vrh_callback_t ( s#virtio_device * , s#vringh * ) 
s#vringh_config_ops struct vringh_config_ops { int ( * find_vrhs ) ( s#virtio_device * , unsigned , s#vringh * [ ] , t#vrh_callback_t * [ ] ) ; void ( * del_vrhs ) ( s#virtio_device * ) ; } 
s#virtio_device struct virtio_device { int index ; t#bool failed ; t#bool config_enabled ; t#bool config_change_pending ; t#spinlock_t config_lock ; s#device dev ; s#virtio_device_id id ; const s#virtio_config_ops * config ; const s#vringh_config_ops * vringh_config ; s#list_head vqs ; t#u64 features ; void * priv ; } 
blk_mq_virtio_map_queues int blk_mq_virtio_map_queues ( s#blk_mq_tag_set * , s#virtio_device * , int ) 

/* block/blk-settings.o */
blk_max_low_pfn extern unsigned long blk_max_low_pfn 
s##sock
s##seq_file
s##vfsmount
s##posix_acl
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##workqueue_struct
s##cgroup_subsys_state
s##hd_geometry
s##pr_ops
s##timer_rand_state
s##disk_events
s##badblocks
s##kmem_cache
s##reclaim_state
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##swap_info_struct
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##mtd_info
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##blkcg_gq
s##blk_mq_debugfs_attr
s##blk_queue_stats
s##blk_trace
s##bsg_job
s##throtl_data
blk_queue_prep_rq extern void blk_queue_prep_rq ( s#request_queue * , t#prep_rq_fn * ) 
blk_queue_unprep_rq extern void blk_queue_unprep_rq ( s#request_queue * , t#unprep_rq_fn * ) 
blk_queue_softirq_done extern void blk_queue_softirq_done ( s#request_queue * , t#softirq_done_fn * ) 
blk_queue_rq_timeout extern void blk_queue_rq_timeout ( s#request_queue * , unsigned int ) 
blk_queue_rq_timed_out extern void blk_queue_rq_timed_out ( s#request_queue * , t#rq_timed_out_fn * ) 
blk_queue_lld_busy extern void blk_queue_lld_busy ( s#request_queue * , t#lld_busy_fn * ) 
blk_set_default_limits extern void blk_set_default_limits ( s#queue_limits * ) 
blk_set_stacking_limits extern void blk_set_stacking_limits ( s#queue_limits * ) 
blk_queue_make_request extern void blk_queue_make_request ( s#request_queue * , t#make_request_fn * ) 
blk_queue_bounce_limit extern void blk_queue_bounce_limit ( s#request_queue * , t#u64 ) 
blk_queue_max_hw_sectors extern void blk_queue_max_hw_sectors ( s#request_queue * , unsigned int ) 
blk_queue_chunk_sectors extern void blk_queue_chunk_sectors ( s#request_queue * , unsigned int ) 
blk_queue_max_discard_sectors extern void blk_queue_max_discard_sectors ( s#request_queue * , unsigned int ) 
blk_queue_max_write_same_sectors extern void blk_queue_max_write_same_sectors ( s#request_queue * , unsigned int ) 
blk_queue_max_write_zeroes_sectors extern void blk_queue_max_write_zeroes_sectors ( s#request_queue * , unsigned int ) 
blk_queue_max_segments extern void blk_queue_max_segments ( s#request_queue * , unsigned short ) 
blk_queue_max_discard_segments extern void blk_queue_max_discard_segments ( s#request_queue * , unsigned short ) 
blk_queue_max_segment_size extern void blk_queue_max_segment_size ( s#request_queue * , unsigned int ) 
blk_queue_logical_block_size extern void blk_queue_logical_block_size ( s#request_queue * , unsigned short ) 
blk_queue_physical_block_size extern void blk_queue_physical_block_size ( s#request_queue * , unsigned int ) 
blk_queue_alignment_offset extern void blk_queue_alignment_offset ( s#request_queue * , unsigned int ) 
blk_limits_io_min extern void blk_limits_io_min ( s#queue_limits * , unsigned int ) 
blk_queue_io_min extern void blk_queue_io_min ( s#request_queue * , unsigned int ) 
blk_limits_io_opt extern void blk_limits_io_opt ( s#queue_limits * , unsigned int ) 
blk_queue_io_opt extern void blk_queue_io_opt ( s#request_queue * , unsigned int ) 
blk_queue_stack_limits extern void blk_queue_stack_limits ( s#request_queue * , s#request_queue * ) 
blk_stack_limits extern int blk_stack_limits ( s#queue_limits * , s#queue_limits * , t#sector_t ) 
bdev_stack_limits extern int bdev_stack_limits ( s#queue_limits * , s#block_device * , t#sector_t ) 
disk_stack_limits extern void disk_stack_limits ( s#gendisk * , s#block_device * , t#sector_t ) 
blk_queue_dma_pad extern void blk_queue_dma_pad ( s#request_queue * , unsigned int ) 
blk_queue_update_dma_pad extern void blk_queue_update_dma_pad ( s#request_queue * , unsigned int ) 
blk_queue_dma_drain extern int blk_queue_dma_drain ( s#request_queue * , t#dma_drain_needed_fn * , void * , unsigned int ) 
blk_queue_segment_boundary extern void blk_queue_segment_boundary ( s#request_queue * , unsigned long ) 
blk_queue_virt_boundary extern void blk_queue_virt_boundary ( s#request_queue * , unsigned long ) 
blk_queue_dma_alignment extern void blk_queue_dma_alignment ( s#request_queue * , int ) 
blk_queue_update_dma_alignment extern void blk_queue_update_dma_alignment ( s#request_queue * , int ) 
blk_queue_flush_queueable extern void blk_queue_flush_queueable ( s#request_queue * , t#bool ) 
blk_set_queue_depth extern void blk_set_queue_depth ( s#request_queue * , unsigned int ) 
blk_queue_write_cache extern void blk_queue_write_cache ( s#request_queue * , t#bool , t#bool ) 

/* block/blk-softirq.o */
s##kmem_cache
s##device_private
s##sock
s##seq_file
s##vfsmount
s##posix_acl
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##reclaim_state
s##workqueue_struct
s##cgroup_subsys_state
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##swap_info_struct
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##mtd_info
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##hd_geometry
s##pr_ops
s##timer_rand_state
s##disk_events
s##badblocks
s##blk_mq_debugfs_attr
s##blk_queue_stats
s##rq_wb
s##blkcg_gq
s##blk_trace
s##bsg_job
s##throtl_data
__blk_complete_request extern void __blk_complete_request ( s#request * ) 
blk_complete_request extern void blk_complete_request ( s#request * ) 

/* block/blk-stat.o */
s##kmem_cache
s##device_private
s##sock
s##seq_file
s##vfsmount
s##posix_acl
s##module
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##compat_timespec
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##reclaim_state
s##workqueue_struct
s##cgroup_subsys_state
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##iov_iter
s##swap_info_struct
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##mtd_info
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##hd_geometry
s##pr_ops
s##timer_rand_state
s##disk_events
s##badblocks
s##blk_mq_debugfs_attr
s##blk_queue_stats
s##rq_wb
s##blkcg_gq
s##blk_trace
s##bsg_job
s##throtl_data
blk_stat_alloc_callback s#blk_stat_callback * blk_stat_alloc_callback ( void ( * ) ( s#blk_stat_callback * ) , int ( * ) ( const s#request * ) , unsigned int , void * ) 
blk_stat_add_callback void blk_stat_add_callback ( s#request_queue * , s#blk_stat_callback * ) 
blk_stat_remove_callback void blk_stat_remove_callback ( s#request_queue * , s#blk_stat_callback * ) 
blk_stat_free_callback void blk_stat_free_callback ( s#blk_stat_callback * ) 
blk_stat_enable_accounting void blk_stat_enable_accounting ( s#request_queue * ) 

/* block/blk-sysfs.o */
s##device_private
s##sock
s##vfsmount
s##posix_acl
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##workqueue_struct
s##bpf_prog_array
s##cgroup_taskset
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##pipe_inode_info
s##swap_info_struct
s##kmem_cache
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##mmu_notifier_mm
s##xol_area
s##pid_namespace
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_queue_stats
s##bsg_job
s##throtl_data
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##mtd_info
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##hd_geometry
s##pr_ops
s##timer_rand_state
s##disk_events
s##badblocks
blk_register_queue extern int blk_register_queue ( s#gendisk * ) 

/* block/blk-tag.o */
s##kmem_cache
s##device_private
s##sock
s##seq_file
s##vfsmount
s##posix_acl
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##reclaim_state
s##workqueue_struct
s##cgroup_subsys_state
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##swap_info_struct
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##mtd_info
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##hd_geometry
s##pr_ops
s##timer_rand_state
s##disk_events
s##badblocks
s##blk_mq_debugfs_attr
s##blk_queue_stats
s##rq_wb
s##blkcg_gq
s##blk_trace
s##bsg_job
s##throtl_data
blk_queue_find_tag extern s#request * blk_queue_find_tag ( s#request_queue * , int ) 
blk_free_tags extern void blk_free_tags ( s#blk_queue_tag * ) 
blk_queue_free_tags extern void blk_queue_free_tags ( s#request_queue * ) 
blk_init_tags extern s#blk_queue_tag * blk_init_tags ( int , int ) 
blk_queue_init_tags extern int blk_queue_init_tags ( s#request_queue * , int , s#blk_queue_tag * , int ) 
blk_queue_resize_tags extern int blk_queue_resize_tags ( s#request_queue * , int ) 
blk_queue_start_tag extern int blk_queue_start_tag ( s#request_queue * , s#request * ) 

/* block/blk-timeout.o */
s##kmem_cache
s##device_private
s##sock
s##vfsmount
s##posix_acl
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##reclaim_state
s##workqueue_struct
s##cgroup_subsys_state
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##swap_info_struct
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##mtd_info
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##hd_geometry
s##pr_ops
s##timer_rand_state
s##disk_events
s##badblocks
s##blk_mq_debugfs_attr
s##blk_queue_stats
s##rq_wb
s##blkcg_gq
s##blk_trace
s##bsg_job
s##throtl_data
blk_abort_request extern void blk_abort_request ( s#request * ) 

/* block/blk-wbt.o */
s##blk_mq_ctx
s##device_private
s##sock
s##vfsmount
s##posix_acl
s##module
s##workqueue_struct
s##bpf_prog_array
s##cgroup_taskset
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##iov_iter
s##kmem_cache
s##eventfd_ctx
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##mmu_notifier_mm
s##xol_area
s##compat_timespec
s##fs_pin
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##ring_buffer
s##bpf_prog
s##static_key_mod
s##trace_array
s##tracer
s##trace_buffer
s##ring_buffer_iter
s##event_filter
s##ftrace_hash
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##uprobe
s##gs_cb
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##mtd_info
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##hd_geometry
s##pr_ops
s##timer_rand_state
s##disk_events
s##badblocks
s##blk_mq_hw_ctx
s##blk_mq_alloc_data
s##blk_mq_debugfs_attr
s##blk_queue_stats
s##blk_mq_ops
s##blk_trace
s##blk_flush_queue
s##bsg_job
s##throtl_data
s##blk_mq_tag_set
wbt_disable_default void wbt_disable_default ( s#request_queue * ) 
wbt_enable_default void wbt_enable_default ( s#request_queue * ) 

/* block/blk-zoned.o */
s##kmem_cache
s##device_private
s##sock
s##seq_file
s##vfsmount
s##posix_acl
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##reclaim_state
s##workqueue_struct
s##cgroup_subsys_state
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##swap_info_struct
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##mtd_info
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##hd_geometry
s##pr_ops
s##timer_rand_state
s##disk_events
s##badblocks
s##blk_mq_debugfs_attr
s##blk_queue_stats
s##rq_wb
s##blkcg_gq
s##blk_trace
s##bsg_job
s##throtl_data
blk_req_needs_zone_write_lock t#bool blk_req_needs_zone_write_lock ( s#request * ) 
__blk_req_zone_write_lock void __blk_req_zone_write_lock ( s#request * ) 
__blk_req_zone_write_unlock void __blk_req_zone_write_unlock ( s#request * ) 
blkdev_nr_zones extern unsigned int blkdev_nr_zones ( s#block_device * ) 
s#blk_zone struct blk_zone { t#__u64 start ; t#__u64 len ; t#__u64 wp ; t#__u8 type ; t#__u8 cond ; t#__u8 non_seq ; t#__u8 reset ; t#__u8 reserved [ 36 ] ; } 
blkdev_report_zones extern int blkdev_report_zones ( s#block_device * , t#sector_t , s#blk_zone * , unsigned int * , t#gfp_t ) 
blkdev_reset_zones extern int blkdev_reset_zones ( s#block_device * , t#sector_t , t#sector_t , t#gfp_t ) 

/* block/bsg.o */
s##blk_mq_ctx
s##device_private
s##sock
s##seq_file
s##vfsmount
s##posix_acl
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##reclaim_state
s##workqueue_struct
s##cgroup_subsys_state
s##kmem_cache
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##swap_info_struct
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##mtd_info
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##hd_geometry
s##pr_ops
s##timer_rand_state
s##disk_events
s##badblocks
s##blkcg_gq
s##blk_flush_queue
s##blk_mq_tags
s##blk_mq_alloc_data
s##blk_mq_debugfs_attr
s##blk_queue_stats
s##rq_wb
s##blk_stat_callback
s##blk_trace
s##bsg_job
s##throtl_data
bsg_unregister_queue void bsg_unregister_queue ( s#request_queue * ) 
bsg_scsi_register_queue int bsg_scsi_register_queue ( s#request_queue * , s#device * ) 

/* block/bsg-lib.o */
s##device_private
s##sock
s##seq_file
s##vfsmount
s##posix_acl
s##module
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##compat_timespec
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_mq_ctx
s##kmem_cache
s##blkcg_gq
s##workqueue_struct
s##blk_flush_queue
s##blk_mq_tags
s##blk_mq_alloc_data
s##blk_mq_debugfs_attr
s##blk_queue_stats
s##rq_wb
s##cgroup_subsys_state
s##blk_stat_callback
s##blk_trace
s##throtl_data
s##hd_geometry
s##pr_ops
s##timer_rand_state
s##disk_events
s##badblocks
s##reclaim_state
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##iov_iter
s##swap_info_struct
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##mtd_info
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s#bsg_buffer struct bsg_buffer { unsigned int payload_len ; int sg_cnt ; s#scatterlist * sg_list ; } 
s#bsg_job struct bsg_job { s#device * dev ; s#kref kref ; unsigned int timeout ; void * request ; void * reply ; unsigned int request_len ; unsigned int reply_len ; s#bsg_buffer request_payload ; s#bsg_buffer reply_payload ; int result ; unsigned int reply_payload_rcv_len ; void * dd_data ; } 
bsg_job_put void bsg_job_put ( s#bsg_job * ) 
bsg_job_get int bsg_job_get ( s#bsg_job * ) 
bsg_job_done void bsg_job_done ( s#bsg_job * , int , unsigned int ) 
bsg_setup_queue s#request_queue * bsg_setup_queue ( s#device * , const char * , t#bsg_job_fn * , int ) 

/* block/elevator.o */
s##kmem_cache
s##device_private
s##sock
s##vfsmount
s##posix_acl
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##mmu_notifier_mm
s##xol_area
s##pid_namespace
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##bpf_prog_array
s##cgroup_taskset
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##reclaim_state
s##workqueue_struct
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##swap_info_struct
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##mtd_info
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##hd_geometry
s##pr_ops
s##timer_rand_state
s##disk_events
s##badblocks
s##blk_mq_debugfs_attr
s##blk_queue_stats
s##bsg_job
s##throtl_data
elv_bio_merge_ok extern t#bool elv_bio_merge_ok ( s#request * , s#bio * ) 
elevator_alloc extern s#elevator_queue * elevator_alloc ( s#request_queue * , s#elevator_type * ) 
elv_rqhash_del void elv_rqhash_del ( s#request_queue * , s#request * ) 
elv_rqhash_add void elv_rqhash_add ( s#request_queue * , s#request * ) 
elv_rb_add extern void elv_rb_add ( s#rb_root * , s#request * ) 
elv_rb_del extern void elv_rb_del ( s#rb_root * , s#request * ) 
elv_rb_find extern s#request * elv_rb_find ( s#rb_root * , t#sector_t ) 
elv_dispatch_sort extern void elv_dispatch_sort ( s#request_queue * , s#request * ) 
elv_dispatch_add_tail extern void elv_dispatch_add_tail ( s#request_queue * , s#request * ) 
__elv_add_request extern void __elv_add_request ( s#request_queue * , s#request * , int ) 
elv_add_request extern void elv_add_request ( s#request_queue * , s#request * , int ) 
elv_register extern int elv_register ( s#elevator_type * ) 
elv_unregister extern void elv_unregister ( s#elevator_type * ) 
elv_rb_former_request extern s#request * elv_rb_former_request ( s#request_queue * , s#request * ) 
elv_rb_latter_request extern s#request * elv_rb_latter_request ( s#request_queue * , s#request * ) 

/* block/genhd.o */
s##device_private
s##sock
s##vfsmount
s##posix_acl
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##workqueue_struct
s##bpf_prog_array
s##cgroup_taskset
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##pipe_inode_info
s##swap_info_struct
s##kmem_cache
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_mq_debugfs_attr
s##blk_queue_stats
s##rq_wb
s##blk_trace
s##bsg_job
s##throtl_data
s##hd_geometry
s##pr_ops
s##timer_rand_state
s##disk_events
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##mtd_info
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
disk_get_part extern s#hd_struct * disk_get_part ( s#gendisk * , int ) 
s#disk_part_iter struct disk_part_iter { s#gendisk * disk ; s#hd_struct * part ; int idx ; unsigned int flags ; } 
disk_part_iter_init extern void disk_part_iter_init ( s#disk_part_iter * , s#gendisk * , unsigned int ) 
disk_part_iter_next extern s#hd_struct * disk_part_iter_next ( s#disk_part_iter * ) 
disk_part_iter_exit extern void disk_part_iter_exit ( s#disk_part_iter * ) 
disk_map_sector_rcu extern s#hd_struct * disk_map_sector_rcu ( s#gendisk * , t#sector_t ) 
register_blkdev extern int register_blkdev ( unsigned int , const char * ) 
unregister_blkdev extern void unregister_blkdev ( unsigned int , const char * ) 
blk_register_region extern void blk_register_region ( t#dev_t , unsigned long , s#module * , s#kobject * ( * ) ( t#dev_t , int * , void * ) , int ( * ) ( t#dev_t , void * ) , void * ) 
blk_unregister_region extern void blk_unregister_region ( t#dev_t , unsigned long ) 
device_add_disk extern void device_add_disk ( s#device * , s#gendisk * , const s#attribute_group * * ) 
device_add_disk_no_queue_reg extern void device_add_disk_no_queue_reg ( s#device * , s#gendisk * ) 
del_gendisk extern void del_gendisk ( s#gendisk * ) 
get_gendisk extern s#gendisk * get_gendisk ( t#dev_t , int * ) 
bdget_disk extern s#block_device * bdget_disk ( s#gendisk * , int ) 
blk_lookup_devt extern t#dev_t blk_lookup_devt ( const char * , int ) 
alloc_disk extern s#gendisk * alloc_disk ( int ) 
alloc_disk_node extern s#gendisk * alloc_disk_node ( int , int ) 
get_disk_and_module extern s#kobject * get_disk_and_module ( s#gendisk * ) 
put_disk extern void put_disk ( s#gendisk * ) 
put_disk_and_module extern void put_disk_and_module ( s#gendisk * ) 
set_device_ro extern void set_device_ro ( s#block_device * , int ) 
set_disk_ro extern void set_disk_ro ( s#gendisk * , int ) 
bdev_read_only extern int bdev_read_only ( s#block_device * ) 
invalidate_partition extern int invalidate_partition ( s#gendisk * , int ) 

/* block/ioctl.o */
s##posix_acl
s##vfsmount
s##module
s##device_private
s##sock
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##mmu_notifier_mm
s##xol_area
s##pid_namespace
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##bpf_prog_array
s##cgroup_taskset
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s#hd_geometry struct hd_geometry { unsigned char heads ; unsigned char sectors ; unsigned short cylinders ; unsigned long start ; } 
e#pr_type enum pr_type { PR_WRITE_EXCLUSIVE = 1 , PR_EXCLUSIVE_ACCESS = 2 , PR_WRITE_EXCLUSIVE_REG_ONLY = 3 , PR_EXCLUSIVE_ACCESS_REG_ONLY = 4 , PR_WRITE_EXCLUSIVE_ALL_REGS = 5 , PR_EXCLUSIVE_ACCESS_ALL_REGS = 6 , } 
s#pr_ops struct pr_ops { int ( * pr_register ) ( s#block_device * , t#u64 , t#u64 , t#u32 ) ; int ( * pr_reserve ) ( s#block_device * , t#u64 , e#pr_type , t#u32 ) ; int ( * pr_release ) ( s#block_device * , t#u64 , e#pr_type ) ; int ( * pr_preempt ) ( s#block_device * , t#u64 , t#u64 , e#pr_type , t#bool ) ; int ( * pr_clear ) ( s#block_device * , t#u64 ) ; } 
s##blk_mq_ctx
s##kmem_cache
s##blk_mq_hw_ctx
s##blk_mq_alloc_data
s##blk_mq_debugfs_attr
s##blk_queue_stats
s##rq_wb
s##blk_mq_ops
s##workqueue_struct
s##blk_stat_callback
s##blk_flush_queue
s##bsg_job
s##throtl_data
s##blk_mq_tag_set
s##timer_rand_state
s##disk_events
s##badblocks
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##swap_info_struct
s##nlm_lockowner
s##nfs4_lock_state
s##kernfs_open_node
s##kernfs_iattrs
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
__blkdev_reread_part extern int __blkdev_reread_part ( s#block_device * ) 
blkdev_reread_part extern int blkdev_reread_part ( s#block_device * ) 
__blkdev_driver_ioctl extern int __blkdev_driver_ioctl ( s#block_device * , t#fmode_t , unsigned int , unsigned long ) 
blkdev_ioctl extern int blkdev_ioctl ( s#block_device * , t#fmode_t , unsigned , unsigned long ) 

/* block/ioprio.o */
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##module
s##writeback_control
s##kstatfs
s##iov_iter
s##kmem_cache
s##fs_pin
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##mem_cgroup
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##device_private
s##sock
s##kernfs_open_node
s##kernfs_iattrs
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##hd_geometry
s##pr_ops
s##blk_mq_ctx
s##bpf_prog_array
s##cgroup_taskset
s##workqueue_struct
s##blkcg_gq
s##blk_mq_hw_ctx
s##blk_mq_alloc_data
s##blk_mq_debugfs_attr
s##blk_queue_stats
s##rq_wb
s##blk_mq_ops
s##blk_stat_callback
s##blk_trace
s##blk_flush_queue
s##bsg_job
s##throtl_data
s##blk_mq_tag_set
s##timer_rand_state
s##disk_events
s##badblocks
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##compat_timespec
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##reclaim_state
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##ring_buffer
s##bpf_prog
s##static_key_mod
s##trace_array
s##tracer
s##trace_buffer
s##ring_buffer_iter
s##event_filter
s##ftrace_hash
s##numa_group
s##task_delay_info
s##uprobe
s##gs_cb
set_task_ioprio extern int set_task_ioprio ( s#task_struct * , int ) 

/* block/partition-generic.o */
s##posix_acl
s##vfsmount
s##sock
s##seq_file
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##hd_geometry
s##pr_ops
s##blk_mq_ctx
s##kmem_cache
s##blkcg_gq
s##blk_mq_hw_ctx
s##blk_mq_alloc_data
s##blk_mq_debugfs_attr
s##blk_queue_stats
s##rq_wb
s##blk_mq_ops
s##workqueue_struct
s##cgroup_subsys_state
s##blk_stat_callback
s##blk_flush_queue
s##bsg_job
s##throtl_data
s##blk_mq_tag_set
s##timer_rand_state
s##disk_events
s##badblocks
s##reclaim_state
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##writeback_control
s##swap_info_struct
s##nlm_lockowner
s##nfs4_lock_state
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
bdevname extern const char * bdevname ( s#block_device * , char * ) 
bio_devname extern const char * bio_devname ( s#bio * , char * ) 
__bdevname extern const char * __bdevname ( t#dev_t , char * ) 
t#Sector typedef struct { s#page * v ; } Sector 
read_dev_sector unsigned char * read_dev_sector ( s#block_device * , t#sector_t , t#Sector * ) 

/* block/scsi_ioctl.o */
scsi_command_size_tbl extern const unsigned char scsi_command_size_tbl [ 8 ] 
blk_verify_command extern int blk_verify_command ( unsigned char * , t#fmode_t ) 
s##blk_mq_ctx
s##device_private
s##sock
s##seq_file
s##vfsmount
s##posix_acl
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##reclaim_state
s##workqueue_struct
s##cgroup_subsys_state
s##kmem_cache
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##swap_info_struct
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##mtd_info
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##hd_geometry
s##pr_ops
s##timer_rand_state
s##disk_events
s##badblocks
s##blkcg_gq
s##blk_flush_queue
s##blk_mq_tags
s##blk_mq_alloc_data
s##blk_mq_debugfs_attr
s##blk_queue_stats
s##rq_wb
s##blk_stat_callback
s##blk_trace
s##bsg_job
s##throtl_data
s#scsi_ioctl_command struct scsi_ioctl_command { unsigned int inlen ; unsigned int outlen ; unsigned char data [ 0 ] ; } 
sg_scsi_ioctl extern int sg_scsi_ioctl ( s#request_queue * , s#gendisk * , t#fmode_t , s#scsi_ioctl_command * ) 
scsi_cmd_ioctl extern int scsi_cmd_ioctl ( s#request_queue * , s#gendisk * , t#fmode_t , unsigned int , void * ) 
scsi_verify_blk_ioctl extern int scsi_verify_blk_ioctl ( s#block_device * , unsigned int ) 
scsi_cmd_blk_ioctl extern int scsi_cmd_blk_ioctl ( s#block_device * , t#fmode_t , unsigned int , void * ) 
s#scsi_request struct scsi_request { unsigned char __cmd [ 16 ] ; unsigned char * cmd ; unsigned short cmd_len ; int result ; unsigned int sense_len ; unsigned int resid_len ; int retries ; void * sense ; } 
scsi_req_init void scsi_req_init ( s#scsi_request * ) 

/* block/sed-opal.o */
s##opal_dev
free_opal_dev void free_opal_dev ( s#opal_dev * ) 
t#sec_send_recv typedef int ( sec_send_recv ) ( void * , t#u16 , t#u8 , void * , t#size_t , t#bool ) 
init_opal_dev s#opal_dev * init_opal_dev ( void * , t#sec_send_recv * ) 
opal_unlock_from_suspend t#bool opal_unlock_from_suspend ( s#opal_dev * ) 
sed_ioctl int sed_ioctl ( s#opal_dev * , unsigned int , void * ) 

/* block/t10-pi.o */
t10_pi_type1_crc extern const s#blk_integrity_profile t10_pi_type1_crc 
t10_pi_type1_ip extern const s#blk_integrity_profile t10_pi_type1_ip 
t10_pi_type3_crc extern const s#blk_integrity_profile t10_pi_type3_crc 
t10_pi_type3_ip extern const s#blk_integrity_profile t10_pi_type3_ip 
s##kmem_cache
s##device_private
s##sock
s##seq_file
s##vfsmount
s##posix_acl
s##module
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##compat_timespec
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##reclaim_state
s##workqueue_struct
s##cgroup_subsys_state
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##iov_iter
s##swap_info_struct
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##mtd_info
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##hd_geometry
s##pr_ops
s##timer_rand_state
s##disk_events
s##badblocks
s##blk_mq_hw_ctx
s##blk_mq_alloc_data
s##blk_mq_debugfs_attr
s##blk_queue_stats
s##rq_wb
s##blkcg_gq
s##blk_mq_ops
s##blk_mq_ctx
s##blk_stat_callback
s##blk_trace
s##blk_flush_queue
s##bsg_job
s##throtl_data
s##blk_mq_tag_set
t10_pi_prepare extern void t10_pi_prepare ( s#request * , t#u8 ) 
t10_pi_complete extern void t10_pi_complete ( s#request * , t#u8 , unsigned int ) 

/* certs/system_keyring.o */
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##mm_struct
s##vm_area_struct
s##compat_timespec
s##pollfd
s##pid_namespace
s##user_namespace
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##pipe_inode_info
s##page
s##task_delay_info
s##ftrace_ret_stack
s##mem_cgroup
s##uprobe_task
s##gs_cb
s##key_user
s#key_preparsed_payload struct key_preparsed_payload { char * description ; u#key_payload payload ; const void * data ; t#size_t datalen ; t#size_t quotalen ; t#time_t expiry ; } 
s#key_match_data struct key_match_data { t#bool ( * cmp ) ( const s#key * , const s#key_match_data * ) ; const void * raw_data ; void * preparsed ; unsigned lookup_type ; } 
s##seq_file
s#key_construction struct key_construction { s#key * key ; s#key * authkey ; } 
t#request_key_actor_t typedef int ( * request_key_actor_t ) ( s#key_construction * , const char * , void * ) 
s#key_type struct key_type { const char * name ; t#size_t def_datalen ; int ( * vet_description ) ( const char * ) ; int ( * preparse ) ( s#key_preparsed_payload * ) ; void ( * free_preparse ) ( s#key_preparsed_payload * ) ; int ( * instantiate ) ( s#key * , s#key_preparsed_payload * ) ; int ( * update ) ( s#key * , s#key_preparsed_payload * ) ; int ( * match_preparse ) ( s#key_match_data * ) ; void ( * match_free ) ( s#key_match_data * ) ; void ( * revoke ) ( s#key * ) ; void ( * destroy ) ( s#key * ) ; void ( * describe ) ( const s#key * , s#seq_file * ) ; long ( * read ) ( const s#key * , char * , t#size_t ) ; t#request_key_actor_t request_key ; s#key_restriction * ( * lookup_restriction ) ( const char * ) ; s#list_head link ; s#lock_class_key lock_class ; } 
s##assoc_array_ptr
e#key_being_used_for enum key_being_used_for { VERIFYING_MODULE_SIGNATURE , VERIFYING_FIRMWARE_SIGNATURE , VERIFYING_KEXEC_PE_SIGNATURE , VERIFYING_KEY_SIGNATURE , VERIFYING_KEY_SELF_SIGNATURE , VERIFYING_UNSPECIFIED_SIGNATURE , NR__KEY_BEING_USED_FOR } 
verify_pkcs7_signature extern int verify_pkcs7_signature ( const void * , t#size_t , const void * , t#size_t , s#key * , e#key_being_used_for , int ( * ) ( void * , const void * , t#size_t , t#size_t ) , void * ) 

/* crypto/ablkcipher.o */
s##posix_acl
s##vfsmount
s##sock
s##bio_vec
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##cgroup_namespace
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##key_user
s##key_type
s##assoc_array_ptr
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kmem_cache
s#scatter_walk struct scatter_walk { s#scatterlist * sg ; unsigned int offset ; } 
s#ablkcipher_walk struct ablkcipher_walk { struct { s#page * page ; unsigned int offset ; } src , dst ; s#scatter_walk in ; unsigned int nbytes ; s#scatter_walk out ; unsigned int total ; s#list_head buffers ; t#u8 * iv_buffer ; t#u8 * iv ; int flags ; unsigned int blocksize ; } 
__ablkcipher_walk_complete void __ablkcipher_walk_complete ( s#ablkcipher_walk * ) 
s##net_device
s##sec_path
s##rtattr
s#skcipher_givcrypt_request struct skcipher_givcrypt_request { t#u64 seq ; t#u8 * giv ; s#ablkcipher_request creq ; } 
ablkcipher_walk_done int ablkcipher_walk_done ( s#ablkcipher_request * , s#ablkcipher_walk * , int ) 
ablkcipher_walk_phys int ablkcipher_walk_phys ( s#ablkcipher_request * , s#ablkcipher_walk * ) 
crypto_ablkcipher_type extern const s#crypto_type crypto_ablkcipher_type 
crypto_givcipher_type extern const s#crypto_type crypto_givcipher_type 

/* crypto/acompress.o */
s##vfsmount
s##posix_acl
s##sock
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pollfd
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##cgroup_namespace
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##writeback_control
s##bio_vec
s##swap_info_struct
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kmem_cache
s##mem_cgroup
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##net_device
s##sec_path
s##rtattr
s##skcipher_givcrypt_request
s#acomp_req struct acomp_req { s#crypto_async_request base ; s#scatterlist * src ; s#scatterlist * dst ; unsigned int slen ; unsigned int dlen ; t#u32 flags ; void * __ctx [ ] __attribute__ ( ( __aligned__ ( __alignof__ ( unsigned long long ) ) ) ) ; } 
s#crypto_acomp struct crypto_acomp { int ( * compress ) ( s#acomp_req * ) ; int ( * decompress ) ( s#acomp_req * ) ; void ( * dst_free ) ( s#scatterlist * ) ; unsigned int reqsize ; s#crypto_tfm base ; } 
crypto_alloc_acomp s#crypto_acomp * crypto_alloc_acomp ( const char * , t#u32 , t#u32 ) 
acomp_request_alloc s#acomp_req * acomp_request_alloc ( s#crypto_acomp * ) 
acomp_request_free void acomp_request_free ( s#acomp_req * ) 
s#acomp_alg struct acomp_alg { int ( * compress ) ( s#acomp_req * ) ; int ( * decompress ) ( s#acomp_req * ) ; void ( * dst_free ) ( s#scatterlist * ) ; int ( * init ) ( s#crypto_acomp * ) ; void ( * exit ) ( s#crypto_acomp * ) ; unsigned int reqsize ; s#crypto_alg base ; } 
crypto_register_acomp int crypto_register_acomp ( s#acomp_alg * ) 
crypto_unregister_acomp int crypto_unregister_acomp ( s#acomp_alg * ) 
crypto_register_acomps int crypto_register_acomps ( s#acomp_alg * , int ) 
crypto_unregister_acomps void crypto_unregister_acomps ( s#acomp_alg * , int ) 

/* crypto/aead.o */
s##vfsmount
s##posix_acl
s##sock
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pollfd
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##sec_path
s##neigh_parms
s##neighbour
s##udp_tunnel_info
s##bpf_prog
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##l3mdev_ops
s##ndisc_ops
s##xfrm_state
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##mini_Qdisc
s##Qdisc
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##writeback_control
s##bio_vec
s##swap_info_struct
s##kmem_cache
s##mem_cgroup
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##rtnl_link_ops
s##phy_device
s##sfp_bus
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##xt_table
s##inet_hashinfo
s##fib_notifier_ops
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##workqueue_struct
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##bpf_prog_array
s##cgroup_taskset
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s#rtattr struct rtattr { unsigned short rta_len ; unsigned short rta_type ; } 
s##skcipher_givcrypt_request
s#crypto_aead struct crypto_aead { unsigned int authsize ; unsigned int reqsize ; s#crypto_tfm base ; } 
crypto_aead_setkey int crypto_aead_setkey ( s#crypto_aead * , const t#u8 * , unsigned int ) 
crypto_aead_setauthsize int crypto_aead_setauthsize ( s#crypto_aead * , unsigned int ) 
s#aead_request struct aead_request { s#crypto_async_request base ; unsigned int assoclen ; unsigned int cryptlen ; t#u8 * iv ; s#scatterlist * src ; s#scatterlist * dst ; void * __ctx [ ] __attribute__ ( ( __aligned__ ( __alignof__ ( unsigned long long ) ) ) ) ; } 
s#aead_alg struct aead_alg { int ( * setkey ) ( s#crypto_aead * , const t#u8 * , unsigned int ) ; int ( * setauthsize ) ( s#crypto_aead * , unsigned int ) ; int ( * encrypt ) ( s#aead_request * ) ; int ( * decrypt ) ( s#aead_request * ) ; int ( * init ) ( s#crypto_aead * ) ; void ( * exit ) ( s#crypto_aead * ) ; const char * geniv ; unsigned int ivsize ; unsigned int maxauthsize ; unsigned int chunksize ; s#crypto_alg base ; } 
s#aead_instance struct aead_instance { void ( * free ) ( s#aead_instance * ) ; union { struct { char head [ __builtin_offsetof ( struct aead_alg , base ) ] ; s#crypto_instance base ; } s ; s#aead_alg alg ; } ; } 
aead_geniv_alloc s#aead_instance * aead_geniv_alloc ( s#crypto_template * , s#rtattr * * , t#u32 , t#u32 ) 
aead_geniv_free void aead_geniv_free ( s#aead_instance * ) 
aead_init_geniv int aead_init_geniv ( s#crypto_aead * ) 
aead_exit_geniv void aead_exit_geniv ( s#crypto_aead * ) 
s#crypto_spawn struct crypto_spawn { s#list_head list ; s#crypto_alg * alg ; s#crypto_instance * inst ; const s#crypto_type * frontend ; t#u32 mask ; } 
s#crypto_aead_spawn struct crypto_aead_spawn { s#crypto_spawn base ; } 
crypto_grab_aead int crypto_grab_aead ( s#crypto_aead_spawn * , const char * , t#u32 , t#u32 ) 
crypto_alloc_aead s#crypto_aead * crypto_alloc_aead ( const char * , t#u32 , t#u32 ) 
crypto_register_aead int crypto_register_aead ( s#aead_alg * ) 
crypto_unregister_aead void crypto_unregister_aead ( s#aead_alg * ) 
crypto_register_aeads int crypto_register_aeads ( s#aead_alg * , int ) 
crypto_unregister_aeads void crypto_unregister_aeads ( s#aead_alg * , int ) 
aead_register_instance int aead_register_instance ( s#crypto_template * , s#aead_instance * ) 

/* crypto/aes_generic.o */
crypto_ft_tab extern const t#u32 crypto_ft_tab [ 4 ] [ 256 ] 
crypto_fl_tab extern const t#u32 crypto_fl_tab [ 4 ] [ 256 ] 
crypto_it_tab extern const t#u32 crypto_it_tab [ 4 ] [ 256 ] 
crypto_il_tab extern const t#u32 crypto_il_tab [ 4 ] [ 256 ] 
s#crypto_aes_ctx struct crypto_aes_ctx { t#u32 key_enc [ ( ( 15 * 16 ) / sizeof ( u32 ) ) ] ; t#u32 key_dec [ ( ( 15 * 16 ) / sizeof ( u32 ) ) ] ; t#u32 key_length ; } 
crypto_aes_expand_key int crypto_aes_expand_key ( s#crypto_aes_ctx * , const t#u8 * , unsigned int ) 
s##scatterlist
s##crypto_type
s##skcipher_givcrypt_request
s##sock
s##seq_file
s##vfsmount
s##posix_acl
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##device
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
crypto_aes_set_key int crypto_aes_set_key ( s#crypto_tfm * , const t#u8 * , unsigned int ) 

/* crypto/af_alg.o */
s##posix_acl
s##vfsmount
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##sec_path
s##workqueue_struct
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##l3mdev_ops
s##ndisc_ops
s##xfrm_state
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##phy_device
s##sfp_bus
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##kmem_cache
s##xt_table
s##inet_hashinfo
s##fib_notifier_ops
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##lwtunnel_state
s##rtable
s##dn_route
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##mempolicy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##request_sock_ops
s##timewait_sock_ops
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sock_reuseport
s#af_alg_type struct af_alg_type { void * ( * bind ) ( const char * , t#u32 , t#u32 ) ; void ( * release ) ( void * ) ; int ( * setkey ) ( void * , const t#u8 * , unsigned int ) ; int ( * accept ) ( void * , s#sock * ) ; int ( * accept_nokey ) ( void * , s#sock * ) ; int ( * setauthsize ) ( void * , unsigned int ) ; s#proto_ops * ops ; s#proto_ops * ops_nokey ; s#module * owner ; char name [ 14 ] ; } 
af_alg_register_type int af_alg_register_type ( const s#af_alg_type * ) 
af_alg_unregister_type int af_alg_unregister_type ( const s#af_alg_type * ) 
af_alg_release int af_alg_release ( s#socket * ) 
af_alg_release_parent void af_alg_release_parent ( s#sock * ) 
af_alg_accept int af_alg_accept ( s#sock * , s#socket * , t#bool ) 
s#af_alg_sgl struct af_alg_sgl { s#scatterlist sg [ 16 + 1 ] ; s#page * pages [ 16 ] ; unsigned int npages ; } 
af_alg_make_sg int af_alg_make_sg ( s#af_alg_sgl * , s#iov_iter * , int ) 
af_alg_link_sg void af_alg_link_sg ( s#af_alg_sgl * , s#af_alg_sgl * ) 
af_alg_free_sg void af_alg_free_sg ( s#af_alg_sgl * ) 
s#af_alg_iv struct af_alg_iv { t#__u32 ivlen ; t#__u8 iv [ 0 ] ; } 
s#af_alg_control struct af_alg_control { s#af_alg_iv * iv ; int op ; unsigned int aead_assoclen ; } 
af_alg_cmsg_send int af_alg_cmsg_send ( s#msghdr * , s#af_alg_control * ) 
s#af_alg_completion struct af_alg_completion { s#completion completion ; int err ; } 
af_alg_wait_for_completion int af_alg_wait_for_completion ( int , s#af_alg_completion * ) 
s##crypto_type
s##skcipher_givcrypt_request
af_alg_complete void af_alg_complete ( s#crypto_async_request * , int ) 
af_alg_alloc_tsgl int af_alg_alloc_tsgl ( s#sock * ) 
af_alg_count_tsgl unsigned int af_alg_count_tsgl ( s#sock * , t#size_t , t#size_t ) 
af_alg_pull_tsgl void af_alg_pull_tsgl ( s#sock * , t#size_t , s#scatterlist * , t#size_t ) 
s#af_alg_rsgl struct af_alg_rsgl { s#af_alg_sgl sgl ; s#list_head list ; t#size_t sg_num_bytes ; } 
s##aead_request
s##skcipher_request
s#af_alg_async_req struct af_alg_async_req { s#kiocb * iocb ; s#sock * sk ; s#af_alg_rsgl first_rsgl ; s#af_alg_rsgl * last_rsgl ; s#list_head rsgl_list ; s#scatterlist * tsgl ; unsigned int tsgl_entries ; unsigned int outlen ; unsigned int areqlen ; union { s#aead_request aead_req ; s#skcipher_request skcipher_req ; } cra_u ; } 
af_alg_free_areq_sgls void af_alg_free_areq_sgls ( s#af_alg_async_req * ) 
af_alg_wait_for_wmem int af_alg_wait_for_wmem ( s#sock * , unsigned int ) 
af_alg_wmem_wakeup void af_alg_wmem_wakeup ( s#sock * ) 
af_alg_wait_for_data int af_alg_wait_for_data ( s#sock * , unsigned ) 
af_alg_data_wakeup void af_alg_data_wakeup ( s#sock * ) 
af_alg_sendmsg int af_alg_sendmsg ( s#socket * , s#msghdr * , t#size_t , unsigned int ) 
af_alg_sendpage t#ssize_t af_alg_sendpage ( s#socket * , s#page * , int , t#size_t , int ) 
af_alg_free_resources void af_alg_free_resources ( s#af_alg_async_req * ) 
af_alg_async_cb void af_alg_async_cb ( s#crypto_async_request * , int ) 
t#poll_table typedef s#poll_table_struct poll_table 
af_alg_poll unsigned int af_alg_poll ( s#file * , s#socket * , t#poll_table * ) 
af_alg_alloc_areq s#af_alg_async_req * af_alg_alloc_areq ( s#sock * , unsigned int ) 
af_alg_get_rsgl int af_alg_get_rsgl ( s#sock * , s#msghdr * , int , s#af_alg_async_req * , t#size_t , t#size_t * ) 

/* crypto/ahash.o */
s##posix_acl
s##vfsmount
s##sock
s##bio_vec
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##cgroup_namespace
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##key_user
s##key_type
s##assoc_array_ptr
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kmem_cache
s#crypto_hash_walk struct crypto_hash_walk { char * data ; unsigned int offset ; unsigned int alignmask ; s#page * pg ; unsigned int entrylen ; unsigned int total ; s#scatterlist * sg ; unsigned int flags ; } 
crypto_hash_walk_done int crypto_hash_walk_done ( s#crypto_hash_walk * , int ) 
s##net_device
s##sec_path
s##rtattr
s##skcipher_givcrypt_request
s#ahash_request struct ahash_request { s#crypto_async_request base ; unsigned int nbytes ; s#scatterlist * src ; t#u8 * result ; void * priv ; void * __ctx [ ] __attribute__ ( ( __aligned__ ( __alignof__ ( unsigned long long ) ) ) ) ; } 
crypto_hash_walk_first int crypto_hash_walk_first ( s#ahash_request * , s#crypto_hash_walk * ) 
crypto_ahash_walk_first int crypto_ahash_walk_first ( s#ahash_request * , s#crypto_hash_walk * ) 
s#crypto_ahash struct crypto_ahash { int ( * init ) ( s#ahash_request * ) ; int ( * update ) ( s#ahash_request * ) ; int ( * final ) ( s#ahash_request * ) ; int ( * finup ) ( s#ahash_request * ) ; int ( * digest ) ( s#ahash_request * ) ; int ( * export ) ( s#ahash_request * , void * ) ; int ( * import ) ( s#ahash_request * , const void * ) ; int ( * setkey ) ( s#crypto_ahash * , const t#u8 * , unsigned int ) ; unsigned int reqsize ; s#crypto_tfm base ; } 
crypto_ahash_setkey int crypto_ahash_setkey ( s#crypto_ahash * , const t#u8 * , unsigned int ) 
crypto_ahash_final int crypto_ahash_final ( s#ahash_request * ) 
crypto_ahash_finup int crypto_ahash_finup ( s#ahash_request * ) 
crypto_ahash_digest int crypto_ahash_digest ( s#ahash_request * ) 
crypto_ahash_type extern const s#crypto_type crypto_ahash_type 
crypto_alloc_ahash s#crypto_ahash * crypto_alloc_ahash ( const char * , t#u32 , t#u32 ) 
crypto_has_ahash int crypto_has_ahash ( const char * , t#u32 , t#u32 ) 
s#hash_alg_common struct hash_alg_common { unsigned int digestsize ; unsigned int statesize ; s#crypto_alg base ; } 
s#ahash_alg struct ahash_alg { int ( * init ) ( s#ahash_request * ) ; int ( * update ) ( s#ahash_request * ) ; int ( * final ) ( s#ahash_request * ) ; int ( * finup ) ( s#ahash_request * ) ; int ( * digest ) ( s#ahash_request * ) ; int ( * export ) ( s#ahash_request * , void * ) ; int ( * import ) ( s#ahash_request * , const void * ) ; int ( * setkey ) ( s#crypto_ahash * , const t#u8 * , unsigned int ) ; s#hash_alg_common halg ; } 
crypto_register_ahash int crypto_register_ahash ( s#ahash_alg * ) 
crypto_unregister_ahash int crypto_unregister_ahash ( s#ahash_alg * ) 
s#ahash_instance struct ahash_instance { s#ahash_alg alg ; } 
ahash_register_instance int ahash_register_instance ( s#crypto_template * , s#ahash_instance * ) 
ahash_free_instance void ahash_free_instance ( s#crypto_instance * ) 
s#crypto_ahash_spawn struct crypto_ahash_spawn { s#crypto_spawn base ; } 
crypto_init_ahash_spawn int crypto_init_ahash_spawn ( s#crypto_ahash_spawn * , s#hash_alg_common * , s#crypto_instance * ) 
ahash_attr_alg s#hash_alg_common * ahash_attr_alg ( s#rtattr * , t#u32 , t#u32 ) 
crypto_hash_alg_has_setkey t#bool crypto_hash_alg_has_setkey ( s#hash_alg_common * ) 

/* crypto/akcipher.o */
s##vfsmount
s##posix_acl
s##sock
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pollfd
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##cgroup_namespace
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##writeback_control
s##bio_vec
s##swap_info_struct
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kmem_cache
s##mem_cgroup
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##net_device
s##sec_path
s##rtattr
s##skcipher_givcrypt_request
s#crypto_akcipher_spawn struct crypto_akcipher_spawn { s#crypto_spawn base ; } 
crypto_grab_akcipher int crypto_grab_akcipher ( s#crypto_akcipher_spawn * , const char * , t#u32 , t#u32 ) 
s#crypto_akcipher struct crypto_akcipher { s#crypto_tfm base ; } 
crypto_alloc_akcipher s#crypto_akcipher * crypto_alloc_akcipher ( const char * , t#u32 , t#u32 ) 
s#akcipher_request struct akcipher_request { s#crypto_async_request base ; s#scatterlist * src ; s#scatterlist * dst ; unsigned int src_len ; unsigned int dst_len ; void * __ctx [ ] __attribute__ ( ( __aligned__ ( __alignof__ ( unsigned long long ) ) ) ) ; } 
s#akcipher_alg struct akcipher_alg { int ( * sign ) ( s#akcipher_request * ) ; int ( * verify ) ( s#akcipher_request * ) ; int ( * encrypt ) ( s#akcipher_request * ) ; int ( * decrypt ) ( s#akcipher_request * ) ; int ( * set_pub_key ) ( s#crypto_akcipher * , const void * , unsigned int ) ; int ( * set_priv_key ) ( s#crypto_akcipher * , const void * , unsigned int ) ; unsigned int ( * max_size ) ( s#crypto_akcipher * ) ; int ( * init ) ( s#crypto_akcipher * ) ; void ( * exit ) ( s#crypto_akcipher * ) ; unsigned int reqsize ; s#crypto_alg base ; } 
crypto_register_akcipher int crypto_register_akcipher ( s#akcipher_alg * ) 
crypto_unregister_akcipher void crypto_unregister_akcipher ( s#akcipher_alg * ) 
s#akcipher_instance struct akcipher_instance { void ( * free ) ( s#akcipher_instance * ) ; union { struct { char head [ __builtin_offsetof ( struct akcipher_alg , base ) ] ; s#crypto_instance base ; } s ; s#akcipher_alg alg ; } ; } 
akcipher_register_instance int akcipher_register_instance ( s#crypto_template * , s#akcipher_instance * ) 

/* crypto/algapi.o */
s##vfsmount
s##posix_acl
s##sock
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pollfd
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##sec_path
s##neigh_parms
s##neighbour
s##udp_tunnel_info
s##bpf_prog
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##l3mdev_ops
s##ndisc_ops
s##xfrm_state
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##mini_Qdisc
s##Qdisc
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##writeback_control
s##bio_vec
s##swap_info_struct
s##kmem_cache
s##mem_cgroup
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##rtnl_link_ops
s##phy_device
s##sfp_bus
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##xt_table
s##inet_hashinfo
s##fib_notifier_ops
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##workqueue_struct
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##bpf_prog_array
s##cgroup_taskset
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##skcipher_givcrypt_request
crypto_remove_spawns void crypto_remove_spawns ( s#crypto_alg * , s#list_head * , s#crypto_alg * ) 
crypto_alg_tested void crypto_alg_tested ( const char * , int ) 
crypto_remove_final void crypto_remove_final ( s#list_head * ) 
crypto_register_alg int crypto_register_alg ( s#crypto_alg * ) 
crypto_unregister_alg int crypto_unregister_alg ( s#crypto_alg * ) 
crypto_register_algs int crypto_register_algs ( s#crypto_alg * , int ) 
crypto_unregister_algs int crypto_unregister_algs ( s#crypto_alg * , int ) 
crypto_register_template int crypto_register_template ( s#crypto_template * ) 
crypto_unregister_template void crypto_unregister_template ( s#crypto_template * ) 
crypto_lookup_template s#crypto_template * crypto_lookup_template ( const char * ) 
crypto_register_instance int crypto_register_instance ( s#crypto_template * , s#crypto_instance * ) 
crypto_unregister_instance int crypto_unregister_instance ( s#crypto_instance * ) 
crypto_init_spawn int crypto_init_spawn ( s#crypto_spawn * , s#crypto_alg * , s#crypto_instance * , t#u32 ) 
crypto_init_spawn2 int crypto_init_spawn2 ( s#crypto_spawn * , s#crypto_alg * , s#crypto_instance * , const s#crypto_type * ) 
crypto_grab_spawn int crypto_grab_spawn ( s#crypto_spawn * , const char * , t#u32 , t#u32 ) 
crypto_drop_spawn void crypto_drop_spawn ( s#crypto_spawn * ) 
crypto_spawn_tfm s#crypto_tfm * crypto_spawn_tfm ( s#crypto_spawn * , t#u32 , t#u32 ) 
crypto_spawn_tfm2 void * crypto_spawn_tfm2 ( s#crypto_spawn * ) 
crypto_register_notifier int crypto_register_notifier ( s#notifier_block * ) 
crypto_unregister_notifier int crypto_unregister_notifier ( s#notifier_block * ) 
s#crypto_attr_type struct crypto_attr_type { t#u32 type ; t#u32 mask ; } 
crypto_get_attr_type s#crypto_attr_type * crypto_get_attr_type ( s#rtattr * * ) 
crypto_check_attr_type int crypto_check_attr_type ( s#rtattr * * , t#u32 ) 
crypto_attr_alg_name const char * crypto_attr_alg_name ( s#rtattr * ) 
crypto_attr_alg2 s#crypto_alg * crypto_attr_alg2 ( s#rtattr * , const s#crypto_type * , t#u32 , t#u32 ) 
crypto_attr_u32 int crypto_attr_u32 ( s#rtattr * , t#u32 * ) 
crypto_inst_setname int crypto_inst_setname ( s#crypto_instance * , const char * , s#crypto_alg * ) 
crypto_alloc_instance2 void * crypto_alloc_instance2 ( const char * , s#crypto_alg * , unsigned int ) 
crypto_alloc_instance s#crypto_instance * crypto_alloc_instance ( const char * , s#crypto_alg * ) 
s#crypto_queue struct crypto_queue { s#list_head list ; s#list_head * backlog ; unsigned int qlen ; unsigned int max_qlen ; } 
crypto_init_queue void crypto_init_queue ( s#crypto_queue * , unsigned int ) 
crypto_enqueue_request int crypto_enqueue_request ( s#crypto_queue * , s#crypto_async_request * ) 
crypto_dequeue_request s#crypto_async_request * crypto_dequeue_request ( s#crypto_queue * ) 
crypto_tfm_in_queue int crypto_tfm_in_queue ( s#crypto_queue * , s#crypto_tfm * ) 
crypto_inc void crypto_inc ( t#u8 * , unsigned int ) 
__crypto_xor void __crypto_xor ( t#u8 * , const t#u8 * , const t#u8 * , unsigned int ) 
crypto_alg_extsize unsigned int crypto_alg_extsize ( s#crypto_alg * ) 
crypto_type_has_alg int crypto_type_has_alg ( const char * , const s#crypto_type * , t#u32 , t#u32 ) 

/* crypto/api.o */
crypto_alg_list extern s#list_head crypto_alg_list 
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##sock
s##seq_file
s##bio_vec
s##key_user
s##key_type
s##assoc_array_ptr
s##poll_table_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##user_namespace
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##mem_cgroup
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kmem_cache
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
crypto_alg_sem extern s#rw_semaphore crypto_alg_sem 
s#blocking_notifier_head struct blocking_notifier_head { s#rw_semaphore rwsem ; s#notifier_block * head ; } 
crypto_chain extern s#blocking_notifier_head crypto_chain 
s##net_device
s##sec_path
s##rtattr
s##skcipher_givcrypt_request
crypto_mod_get s#crypto_alg * crypto_mod_get ( s#crypto_alg * ) 
crypto_mod_put void crypto_mod_put ( s#crypto_alg * ) 
s#crypto_larval struct crypto_larval { s#crypto_alg alg ; s#crypto_alg * adult ; s#completion completion ; t#u32 mask ; } 
crypto_larval_alloc s#crypto_larval * crypto_larval_alloc ( const char * , t#u32 , t#u32 ) 
crypto_larval_kill void crypto_larval_kill ( s#crypto_alg * ) 
crypto_alg_lookup s#crypto_alg * crypto_alg_lookup ( const char * , t#u32 , t#u32 ) 
crypto_larval_lookup s#crypto_alg * crypto_larval_lookup ( const char * , t#u32 , t#u32 ) 
crypto_probing_notify int crypto_probing_notify ( unsigned long , void * ) 
crypto_alg_mod_lookup s#crypto_alg * crypto_alg_mod_lookup ( const char * , t#u32 , t#u32 ) 
crypto_shoot_alg void crypto_shoot_alg ( s#crypto_alg * ) 
__crypto_alloc_tfm s#crypto_tfm * __crypto_alloc_tfm ( s#crypto_alg * , t#u32 , t#u32 ) 
crypto_alloc_base s#crypto_tfm * crypto_alloc_base ( const char * , t#u32 , t#u32 ) 
crypto_create_tfm void * crypto_create_tfm ( s#crypto_alg * , const s#crypto_type * ) 
crypto_find_alg s#crypto_alg * crypto_find_alg ( const char * , const s#crypto_type * , t#u32 , t#u32 ) 
crypto_alloc_tfm void * crypto_alloc_tfm ( const char * , const s#crypto_type * , t#u32 , t#u32 ) 
crypto_destroy_tfm void crypto_destroy_tfm ( void * , s#crypto_tfm * ) 
crypto_has_alg int crypto_has_alg ( const char * , t#u32 , t#u32 ) 
crypto_req_done void crypto_req_done ( s#crypto_async_request * , int ) 

/* crypto/asymmetric_keys/asymmetric_type.o */
E#NR__KEY_BEING_USED_FOR 6 
key_being_used_for extern const char * const key_being_used_for [ E#NR__KEY_BEING_USED_FOR ] 
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##sock
s##bio_vec
s##pipe_inode_info
s##poll_table_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##user_namespace
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##mem_cgroup
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##device
s##kmem_cache
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##key_user
s##assoc_array_ptr
s#asymmetric_key_id struct asymmetric_key_id { unsigned short len ; unsigned char data [ ] ; } 
find_asymmetric_key extern s#key * find_asymmetric_key ( s#key * , const s#asymmetric_key_id * , const s#asymmetric_key_id * , t#bool ) 
asymmetric_key_generate_id extern s#asymmetric_key_id * asymmetric_key_generate_id ( const void * , t#size_t , const void * , t#size_t ) 
asymmetric_key_id_same extern t#bool asymmetric_key_id_same ( const s#asymmetric_key_id * , const s#asymmetric_key_id * ) 
asymmetric_key_id_partial extern t#bool asymmetric_key_id_partial ( const s#asymmetric_key_id * , const s#asymmetric_key_id * ) 
key_type_asymmetric extern s#key_type key_type_asymmetric 
s#asymmetric_key_parser struct asymmetric_key_parser { s#list_head link ; s#module * owner ; const char * name ; int ( * parse ) ( s#key_preparsed_payload * ) ; } 
register_asymmetric_key_parser extern int register_asymmetric_key_parser ( s#asymmetric_key_parser * ) 
unregister_asymmetric_key_parser extern void unregister_asymmetric_key_parser ( s#asymmetric_key_parser * ) 

/* crypto/asymmetric_keys/pkcs7_parser.o */
s#public_key struct public_key { void * key ; t#u32 keylen ; const char * id_type ; const char * pkey_algo ; } 
s#public_key_signature struct public_key_signature { s#asymmetric_key_id * auth_ids [ 2 ] ; t#u8 * s ; t#u32 s_size ; t#u8 * digest ; t#u8 digest_size ; const char * pkey_algo ; const char * hash_algo ; } 
s#x509_certificate struct x509_certificate { s#x509_certificate * next ; s#x509_certificate * signer ; s#public_key * pub ; s#public_key_signature * sig ; char * issuer ; char * subject ; s#asymmetric_key_id * id ; s#asymmetric_key_id * skid ; t#time64_t valid_from ; t#time64_t valid_to ; const void * tbs ; unsigned tbs_size ; unsigned raw_sig_size ; const void * raw_sig ; const void * raw_serial ; unsigned raw_serial_size ; unsigned raw_issuer_size ; const void * raw_issuer ; const void * raw_subject ; unsigned raw_subject_size ; unsigned raw_skid_size ; const void * raw_skid ; unsigned index ; t#bool seen ; t#bool verified ; t#bool self_signed ; t#bool unsupported_key ; t#bool unsupported_sig ; t#bool blacklisted ; } 
s#pkcs7_signed_info struct pkcs7_signed_info { s#pkcs7_signed_info * next ; s#x509_certificate * signer ; unsigned index ; t#bool unsupported_crypto ; t#bool blacklisted ; const void * msgdigest ; unsigned msgdigest_len ; unsigned authattrs_len ; const void * authattrs ; unsigned long aa_set ; t#time64_t signing_time ; s#public_key_signature * sig ; } 
e#OID enum OID { OID_id_dsa_with_sha1 , OID_id_dsa , OID_id_ecdsa_with_sha1 , OID_id_ecPublicKey , OID_rsaEncryption , OID_md2WithRSAEncryption , OID_md3WithRSAEncryption , OID_md4WithRSAEncryption , OID_sha1WithRSAEncryption , OID_sha256WithRSAEncryption , OID_sha384WithRSAEncryption , OID_sha512WithRSAEncryption , OID_sha224WithRSAEncryption , OID_data , OID_signed_data , OID_email_address , OID_contentType , OID_messageDigest , OID_signingTime , OID_smimeCapabilites , OID_smimeAuthenticatedAttrs , OID_md2 , OID_md4 , OID_md5 , OID_msIndirectData , OID_msStatementType , OID_msSpOpusInfo , OID_msPeImageDataObjId , OID_msIndividualSPKeyPurpose , OID_msOutlookExpress , OID_certAuthInfoAccess , OID_sha1 , OID_sha256 , OID_sha384 , OID_sha512 , OID_sha224 , OID_commonName , OID_surname , OID_countryName , OID_locality , OID_stateOrProvinceName , OID_organizationName , OID_organizationUnitName , OID_title , OID_description , OID_name , OID_givenName , OID_initials , OID_generationalQualifier , OID_subjectKeyIdentifier , OID_keyUsage , OID_subjectAltName , OID_issuerAltName , OID_basicConstraints , OID_crlDistributionPoints , OID_certPolicies , OID_authorityKeyIdentifier , OID_extKeyUsage , OID__NR } 
s#pkcs7_message struct pkcs7_message { s#x509_certificate * certs ; s#x509_certificate * crl ; s#pkcs7_signed_info * signed_infos ; t#u8 version ; t#bool have_authattrs ; e#OID data_type ; t#size_t data_len ; t#size_t data_hdrlen ; const void * data ; } 
pkcs7_free_message extern void pkcs7_free_message ( s#pkcs7_message * ) 
pkcs7_parse_message extern s#pkcs7_message * pkcs7_parse_message ( const void * , t#size_t ) 
pkcs7_get_content_data extern int pkcs7_get_content_data ( const s#pkcs7_message * , const void * * , t#size_t * , t#size_t * ) 

/* crypto/asymmetric_keys/pkcs7_trust.o */
s##task_struct
s##key_user
s##seq_file
s##assoc_array_ptr
pkcs7_validate_trust extern int pkcs7_validate_trust ( s#pkcs7_message * , s#key * ) 

/* crypto/asymmetric_keys/pkcs7_verify.o */
pkcs7_verify extern int pkcs7_verify ( s#pkcs7_message * , e#key_being_used_for ) 

/* crypto/asymmetric_keys/public_key.o */
public_key_free extern void public_key_free ( s#public_key * ) 
public_key_verify_signature int public_key_verify_signature ( const s#public_key * , const s#public_key_signature * ) 
s##sock
s##vfsmount
s##posix_acl
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##key_user
s##assoc_array_ptr
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##device
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s#asymmetric_key_subtype struct asymmetric_key_subtype { s#module * owner ; const char * name ; unsigned short name_len ; void ( * describe ) ( const s#key * , s#seq_file * ) ; void ( * destroy ) ( void * , void * ) ; int ( * verify_signature ) ( const s#key * , const s#public_key_signature * ) ; } 
public_key_subtype extern s#asymmetric_key_subtype public_key_subtype 

/* crypto/asymmetric_keys/signature.o */
public_key_signature_free extern void public_key_signature_free ( s#public_key_signature * ) 
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##posix_acl
s##module
s##writeback_control
s##kstatfs
s##iov_iter
s##swap_info_struct
s##dev_pagemap
s##kmem_cache
s##mem_cgroup
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##user_namespace
s##bdi_writeback
s##poll_table_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##compat_timespec
s##pollfd
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##key_user
s##assoc_array_ptr
verify_signature extern int verify_signature ( const s#key * , const s#public_key_signature * ) 

/* crypto/asymmetric_keys/x509_cert_parser.o */
x509_free_certificate extern void x509_free_certificate ( s#x509_certificate * ) 
x509_cert_parse extern s#x509_certificate * x509_cert_parse ( const void * , t#size_t ) 
x509_decode_time extern int x509_decode_time ( t#time64_t * , t#size_t , unsigned char , const unsigned char * , t#size_t ) 

/* crypto/async_tx/async_memcpy.o */
t#dma_cookie_t typedef t#s32 dma_cookie_t 
e#dma_ctrl_flags enum dma_ctrl_flags { DMA_PREP_INTERRUPT = ( 1 << 0 ) , DMA_CTRL_ACK = ( 1 << 1 ) , DMA_PREP_PQ_DISABLE_P = ( 1 << 2 ) , DMA_PREP_PQ_DISABLE_Q = ( 1 << 3 ) , DMA_PREP_CONTINUE = ( 1 << 4 ) , DMA_PREP_FENCE = ( 1 << 5 ) , DMA_CTRL_REUSE = ( 1 << 6 ) , } 
t#dma_filter_fn typedef t#bool ( * dma_filter_fn ) ( s#dma_chan * , void * ) 
s#dma_slave_map struct dma_slave_map { const char * devname ; const char * slave ; void * param ; } 
s#dma_filter struct dma_filter { t#dma_filter_fn fn ; int mapcnt ; const s#dma_slave_map * map ; } 
E#DMA_TX_TYPE_END 14 
t#dma_cap_mask_t typedef struct { unsigned long bits [ ( ( ( E#DMA_TX_TYPE_END ) + ( 8 * sizeof ( long ) ) - 1 ) / ( 8 * sizeof ( long ) ) ) ] ; } dma_cap_mask_t 
e#dmaengine_alignment enum dmaengine_alignment { DMAENGINE_ALIGN_1_BYTE = 0 , DMAENGINE_ALIGN_2_BYTES = 1 , DMAENGINE_ALIGN_4_BYTES = 2 , DMAENGINE_ALIGN_8_BYTES = 3 , DMAENGINE_ALIGN_16_BYTES = 4 , DMAENGINE_ALIGN_32_BYTES = 5 , DMAENGINE_ALIGN_64_BYTES = 6 , } 
s##device_private
s##sock
s##seq_file
s##vfsmount
s##posix_acl
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
e#dma_residue_granularity enum dma_residue_granularity { DMA_RESIDUE_GRANULARITY_DESCRIPTOR = 0 , DMA_RESIDUE_GRANULARITY_SEGMENT = 1 , DMA_RESIDUE_GRANULARITY_BURST = 2 , } 
E#SUM_CHECK_P 0 
E#SUM_CHECK_Q 1 
e#sum_check_flags enum sum_check_flags { SUM_CHECK_P_RESULT = ( 1 << E#SUM_CHECK_P ) , SUM_CHECK_Q_RESULT = ( 1 << E#SUM_CHECK_Q ) , } 
e#dma_transfer_direction enum dma_transfer_direction { DMA_MEM_TO_MEM , DMA_MEM_TO_DEV , DMA_DEV_TO_MEM , DMA_DEV_TO_DEV , DMA_TRANS_NONE , } 
s#data_chunk struct data_chunk { t#size_t size ; t#size_t icg ; t#size_t dst_icg ; t#size_t src_icg ; } 
s#dma_interleaved_template struct dma_interleaved_template { t#dma_addr_t src_start ; t#dma_addr_t dst_start ; e#dma_transfer_direction dir ; t#bool src_inc ; t#bool dst_inc ; t#bool src_sgl ; t#bool dst_sgl ; t#size_t numf ; t#size_t frame_size ; s#data_chunk sgl [ 0 ] ; } 
e#dma_slave_buswidth enum dma_slave_buswidth { DMA_SLAVE_BUSWIDTH_UNDEFINED = 0 , DMA_SLAVE_BUSWIDTH_1_BYTE = 1 , DMA_SLAVE_BUSWIDTH_2_BYTES = 2 , DMA_SLAVE_BUSWIDTH_3_BYTES = 3 , DMA_SLAVE_BUSWIDTH_4_BYTES = 4 , DMA_SLAVE_BUSWIDTH_8_BYTES = 8 , DMA_SLAVE_BUSWIDTH_16_BYTES = 16 , DMA_SLAVE_BUSWIDTH_32_BYTES = 32 , DMA_SLAVE_BUSWIDTH_64_BYTES = 64 , } 
s#dma_slave_config struct dma_slave_config { e#dma_transfer_direction direction ; t#phys_addr_t src_addr ; t#phys_addr_t dst_addr ; e#dma_slave_buswidth src_addr_width ; e#dma_slave_buswidth dst_addr_width ; t#u32 src_maxburst ; t#u32 dst_maxburst ; t#u32 src_port_window_size ; t#u32 dst_port_window_size ; t#bool device_fc ; unsigned int slave_id ; } 
e#dma_status enum dma_status { DMA_COMPLETE , DMA_IN_PROGRESS , DMA_PAUSED , DMA_ERROR , } 
s#dma_tx_state struct dma_tx_state { t#dma_cookie_t last ; t#dma_cookie_t used ; t#u32 residue ; } 
s#dma_device struct dma_device { unsigned int chancnt ; unsigned int privatecnt ; s#list_head channels ; s#list_head global_node ; s#dma_filter filter ; t#dma_cap_mask_t cap_mask ; unsigned short max_xor ; unsigned short max_pq ; e#dmaengine_alignment copy_align ; e#dmaengine_alignment xor_align ; e#dmaengine_alignment pq_align ; e#dmaengine_alignment fill_align ; int dev_id ; s#device * dev ; t#u32 src_addr_widths ; t#u32 dst_addr_widths ; t#u32 directions ; t#u32 max_burst ; t#bool descriptor_reuse ; e#dma_residue_granularity residue_granularity ; int ( * device_alloc_chan_resources ) ( s#dma_chan * ) ; void ( * device_free_chan_resources ) ( s#dma_chan * ) ; s#dma_async_tx_descriptor * ( * device_prep_dma_memcpy ) ( s#dma_chan * , t#dma_addr_t , t#dma_addr_t , t#size_t , unsigned long ) ; s#dma_async_tx_descriptor * ( * device_prep_dma_xor ) ( s#dma_chan * , t#dma_addr_t , t#dma_addr_t * , unsigned int , t#size_t , unsigned long ) ; s#dma_async_tx_descriptor * ( * device_prep_dma_xor_val ) ( s#dma_chan * , t#dma_addr_t * , unsigned int , t#size_t , e#sum_check_flags * , unsigned long ) ; s#dma_async_tx_descriptor * ( * device_prep_dma_pq ) ( s#dma_chan * , t#dma_addr_t * , t#dma_addr_t * , unsigned int , const unsigned char * , t#size_t , unsigned long ) ; s#dma_async_tx_descriptor * ( * device_prep_dma_pq_val ) ( s#dma_chan * , t#dma_addr_t * , t#dma_addr_t * , unsigned int , const unsigned char * , t#size_t , e#sum_check_flags * , unsigned long ) ; s#dma_async_tx_descriptor * ( * device_prep_dma_memset ) ( s#dma_chan * , t#dma_addr_t , int , t#size_t , unsigned long ) ; s#dma_async_tx_descriptor * ( * device_prep_dma_memset_sg ) ( s#dma_chan * , s#scatterlist * , unsigned int , int , unsigned long ) ; s#dma_async_tx_descriptor * ( * device_prep_dma_interrupt ) ( s#dma_chan * , unsigned long ) ; s#dma_async_tx_descriptor * ( * device_prep_dma_sg ) ( s#dma_chan * , s#scatterlist * , unsigned int , s#scatterlist * , unsigned int , unsigned long ) ; s#dma_async_tx_descriptor * ( * device_prep_slave_sg ) ( s#dma_chan * , s#scatterlist * , unsigned int , e#dma_transfer_direction , unsigned long , void * ) ; s#dma_async_tx_descriptor * ( * device_prep_dma_cyclic ) ( s#dma_chan * , t#dma_addr_t , t#size_t , t#size_t , e#dma_transfer_direction , unsigned long ) ; s#dma_async_tx_descriptor * ( * device_prep_interleaved_dma ) ( s#dma_chan * , s#dma_interleaved_template * , unsigned long ) ; s#dma_async_tx_descriptor * ( * device_prep_dma_imm_data ) ( s#dma_chan * , t#dma_addr_t , t#u64 , unsigned long ) ; int ( * device_config ) ( s#dma_chan * , s#dma_slave_config * ) ; int ( * device_pause ) ( s#dma_chan * ) ; int ( * device_resume ) ( s#dma_chan * ) ; int ( * device_terminate_all ) ( s#dma_chan * ) ; void ( * device_synchronize ) ( s#dma_chan * ) ; e#dma_status ( * device_tx_status ) ( s#dma_chan * , t#dma_cookie_t , s#dma_tx_state * ) ; void ( * device_issue_pending ) ( s#dma_chan * ) ; } 
s#dma_chan_dev struct dma_chan_dev { s#dma_chan * chan ; s#device device ; int dev_id ; t#atomic_t * idr_ref ; } 
s#dma_chan_percpu struct dma_chan_percpu { unsigned long memcpy_count ; unsigned long bytes_transferred ; } 
s#dma_router struct dma_router { s#device * dev ; void ( * route_free ) ( s#device * , void * ) ; } 
s#dma_chan struct dma_chan { s#dma_device * device ; t#dma_cookie_t cookie ; t#dma_cookie_t completed_cookie ; int chan_id ; s#dma_chan_dev * dev ; s#list_head device_node ; s#dma_chan_percpu * local ; int client_count ; int table_count ; s#dma_router * router ; void * route_data ; void * private ; } 
t#dma_async_tx_callback typedef void ( * dma_async_tx_callback ) ( void * ) 
e#dmaengine_tx_result enum dmaengine_tx_result { DMA_TRANS_NOERROR = 0 , DMA_TRANS_READ_FAILED , DMA_TRANS_WRITE_FAILED , DMA_TRANS_ABORTED , } 
s#dmaengine_result struct dmaengine_result { e#dmaengine_tx_result result ; t#u32 residue ; } 
t#dma_async_tx_callback_result typedef void ( * dma_async_tx_callback_result ) ( void * , const s#dmaengine_result * ) 
s#dmaengine_unmap_data struct dmaengine_unmap_data { t#u8 map_cnt ; t#u8 to_cnt ; t#u8 from_cnt ; t#u8 bidi_cnt ; s#device * dev ; s#kref kref ; t#size_t len ; t#dma_addr_t addr [ 0 ] ; } 
s#dma_async_tx_descriptor struct dma_async_tx_descriptor { t#dma_cookie_t cookie ; e#dma_ctrl_flags flags ; t#dma_addr_t phys ; s#dma_chan * chan ; t#dma_cookie_t ( * tx_submit ) ( s#dma_async_tx_descriptor * ) ; int ( * desc_free ) ( s#dma_async_tx_descriptor * ) ; t#dma_async_tx_callback callback ; t#dma_async_tx_callback_result callback_result ; void * callback_param ; s#dmaengine_unmap_data * unmap ; } 
e#async_tx_flags enum async_tx_flags { ASYNC_TX_XOR_ZERO_DST = ( 1 << 0 ) , ASYNC_TX_XOR_DROP_DST = ( 1 << 1 ) , ASYNC_TX_ACK = ( 1 << 2 ) , ASYNC_TX_FENCE = ( 1 << 3 ) , ASYNC_TX_PQ_XOR_DST = ( 1 << 4 ) , } 
s#async_submit_ctl struct async_submit_ctl { e#async_tx_flags flags ; s#dma_async_tx_descriptor * depend_tx ; t#dma_async_tx_callback cb_fn ; void * cb_param ; void * scribble ; } 
async_memcpy s#dma_async_tx_descriptor * async_memcpy ( s#page * , s#page * , unsigned int , unsigned int , t#size_t , s#async_submit_ctl * ) 

/* crypto/async_tx/async_pq.o */
s##device_private
s##sock
s##seq_file
s##vfsmount
s##posix_acl
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_mq_ctx
s##kmem_cache
s##blkcg_gq
s##blk_mq_hw_ctx
s##blk_mq_alloc_data
s##blk_mq_debugfs_attr
s##blk_queue_stats
s##rq_wb
s##blk_mq_ops
s##workqueue_struct
s##cgroup_subsys_state
s##blk_stat_callback
s##blk_trace
s##blk_flush_queue
s##bsg_job
s##throtl_data
s##blk_mq_tag_set
s##hd_geometry
s##pr_ops
s##timer_rand_state
s##disk_events
s##badblocks
s##reclaim_state
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##swap_info_struct
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##mtd_info
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
async_gen_syndrome s#dma_async_tx_descriptor * async_gen_syndrome ( s#page * * , unsigned int , int , t#size_t , s#async_submit_ctl * ) 
async_syndrome_val s#dma_async_tx_descriptor * async_syndrome_val ( s#page * * , unsigned int , int , t#size_t , e#sum_check_flags * , s#page * , s#async_submit_ctl * ) 

/* crypto/async_tx/async_raid6_recov.o */
s##device_private
s##sock
s##seq_file
s##vfsmount
s##posix_acl
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_mq_ctx
s##kmem_cache
s##blkcg_gq
s##blk_mq_hw_ctx
s##blk_mq_alloc_data
s##blk_mq_debugfs_attr
s##blk_queue_stats
s##rq_wb
s##blk_mq_ops
s##workqueue_struct
s##cgroup_subsys_state
s##blk_stat_callback
s##blk_trace
s##blk_flush_queue
s##bsg_job
s##throtl_data
s##blk_mq_tag_set
s##hd_geometry
s##pr_ops
s##timer_rand_state
s##disk_events
s##badblocks
s##reclaim_state
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##swap_info_struct
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##mtd_info
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
async_raid6_2data_recov s#dma_async_tx_descriptor * async_raid6_2data_recov ( int , t#size_t , int , int , s#page * * , s#async_submit_ctl * ) 
async_raid6_datap_recov s#dma_async_tx_descriptor * async_raid6_datap_recov ( int , t#size_t , int , s#page * * , s#async_submit_ctl * ) 

/* crypto/async_tx/async_tx.o */
s##device_private
s##sock
s##seq_file
s##vfsmount
s##posix_acl
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
async_tx_submit void async_tx_submit ( s#dma_chan * , s#dma_async_tx_descriptor * , s#async_submit_ctl * ) 
async_trigger_callback s#dma_async_tx_descriptor * async_trigger_callback ( s#async_submit_ctl * ) 
async_tx_quiesce void async_tx_quiesce ( s#dma_async_tx_descriptor * * ) 

/* crypto/async_tx/async_xor.o */
s##device_private
s##sock
s##seq_file
s##vfsmount
s##posix_acl
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
async_xor s#dma_async_tx_descriptor * async_xor ( s#page * , s#page * * , unsigned int , int , t#size_t , s#async_submit_ctl * ) 
async_xor_val s#dma_async_tx_descriptor * async_xor_val ( s#page * , s#page * * , unsigned int , int , t#size_t , e#sum_check_flags * , s#async_submit_ctl * ) 

/* crypto/authenc.o */
s#crypto_authenc_keys struct crypto_authenc_keys { const t#u8 * authkey ; const t#u8 * enckey ; unsigned int authkeylen ; unsigned int enckeylen ; } 
crypto_authenc_extractkeys int crypto_authenc_extractkeys ( s#crypto_authenc_keys * , const t#u8 * , unsigned int ) 

/* crypto/blkcipher.o */
s##vfsmount
s##posix_acl
s##sock
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pollfd
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##cgroup_namespace
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##writeback_control
s##bio_vec
s##swap_info_struct
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kmem_cache
s##mem_cgroup
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##net_device
s##sec_path
s##rtattr
s#blkcipher_walk struct blkcipher_walk { union { struct { s#page * page ; unsigned long offset ; } phys ; struct { t#u8 * page ; t#u8 * addr ; } virt ; } src , dst ; s#scatter_walk in ; unsigned int nbytes ; s#scatter_walk out ; unsigned int total ; void * page ; t#u8 * buffer ; t#u8 * iv ; unsigned int ivsize ; int flags ; unsigned int walk_blocksize ; unsigned int cipher_blocksize ; unsigned int alignmask ; } 
blkcipher_walk_done int blkcipher_walk_done ( s#blkcipher_desc * , s#blkcipher_walk * , int ) 
blkcipher_walk_virt int blkcipher_walk_virt ( s#blkcipher_desc * , s#blkcipher_walk * ) 
blkcipher_walk_phys int blkcipher_walk_phys ( s#blkcipher_desc * , s#blkcipher_walk * ) 
blkcipher_walk_virt_block int blkcipher_walk_virt_block ( s#blkcipher_desc * , s#blkcipher_walk * , unsigned int ) 
blkcipher_aead_walk_virt_block int blkcipher_aead_walk_virt_block ( s#blkcipher_desc * , s#blkcipher_walk * , s#crypto_aead * , unsigned int ) 
crypto_blkcipher_type extern const s#crypto_type crypto_blkcipher_type 

/* crypto/blowfish_common.o */
s##scatterlist
s##crypto_type
s##skcipher_givcrypt_request
s##sock
s##seq_file
s##vfsmount
s##posix_acl
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##device
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
blowfish_setkey int blowfish_setkey ( s#crypto_tfm * , const t#u8 * , unsigned int ) 

/* crypto/cast5_generic.o */
s#cast5_ctx struct cast5_ctx { t#u32 Km [ 16 ] ; t#u8 Kr [ 16 ] ; int rr ; } 
__cast5_encrypt void __cast5_encrypt ( s#cast5_ctx * , t#u8 * , const t#u8 * ) 
__cast5_decrypt void __cast5_decrypt ( s#cast5_ctx * , t#u8 * , const t#u8 * ) 
s##scatterlist
s##crypto_type
s##skcipher_givcrypt_request
s##sock
s##seq_file
s##vfsmount
s##posix_acl
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##device
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
cast5_setkey int cast5_setkey ( s#crypto_tfm * , const t#u8 * , unsigned int ) 

/* crypto/cast6_generic.o */
s#cast6_ctx struct cast6_ctx { t#u32 Km [ 12 ] [ 4 ] ; t#u8 Kr [ 12 ] [ 4 ] ; } 
__cast6_setkey int __cast6_setkey ( s#cast6_ctx * , const t#u8 * , unsigned int , t#u32 * ) 
s##scatterlist
s##crypto_type
s##skcipher_givcrypt_request
s##sock
s##seq_file
s##vfsmount
s##posix_acl
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##device
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
cast6_setkey int cast6_setkey ( s#crypto_tfm * , const t#u8 * , unsigned int ) 
__cast6_encrypt void __cast6_encrypt ( s#cast6_ctx * , t#u8 * , const t#u8 * ) 
__cast6_decrypt void __cast6_decrypt ( s#cast6_ctx * , t#u8 * , const t#u8 * ) 

/* crypto/cast_common.o */
cast_s1 extern const t#u32 cast_s1 [ 256 ] 
cast_s2 extern const t#u32 cast_s2 [ 256 ] 
cast_s3 extern const t#u32 cast_s3 [ 256 ] 
cast_s4 extern const t#u32 cast_s4 [ 256 ] 

/* crypto/chacha20_generic.o */
s#chacha20_ctx struct chacha20_ctx { t#u32 key [ 8 ] ; } 
crypto_chacha20_init void crypto_chacha20_init ( t#u32 * , s#chacha20_ctx * , t#u8 * ) 
s##seq_file
s##net_device
s##sock
s##sec_path
s##vfsmount
s##posix_acl
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##user_struct
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##rtattr
s#skcipher_request struct skcipher_request { unsigned int cryptlen ; t#u8 * iv ; s#scatterlist * src ; s#scatterlist * dst ; s#crypto_async_request base ; void * __ctx [ ] __attribute__ ( ( __aligned__ ( __alignof__ ( unsigned long long ) ) ) ) ; } 
s#crypto_skcipher struct crypto_skcipher { int ( * setkey ) ( s#crypto_skcipher * , const t#u8 * , unsigned int ) ; int ( * encrypt ) ( s#skcipher_request * ) ; int ( * decrypt ) ( s#skcipher_request * ) ; unsigned int ivsize ; unsigned int reqsize ; unsigned int keysize ; s#crypto_tfm base ; } 
crypto_chacha20_setkey int crypto_chacha20_setkey ( s#crypto_skcipher * , const t#u8 * , unsigned int ) 
crypto_chacha20_crypt int crypto_chacha20_crypt ( s#skcipher_request * ) 

/* crypto/crct10dif_common.o */
crc_t10dif_generic extern t#__u16 crc_t10dif_generic ( t#__u16 , const unsigned char * , t#size_t ) 

/* crypto/cryptd.o */
s##seq_file
s##net_device
s##sock
s##sec_path
s##vfsmount
s##posix_acl
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##user_struct
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##rtattr
s#cryptd_ablkcipher struct cryptd_ablkcipher { s#crypto_ablkcipher base ; } 
cryptd_alloc_ablkcipher s#cryptd_ablkcipher * cryptd_alloc_ablkcipher ( const char * , t#u32 , t#u32 ) 
cryptd_ablkcipher_child s#crypto_blkcipher * cryptd_ablkcipher_child ( s#cryptd_ablkcipher * ) 
cryptd_ablkcipher_queued t#bool cryptd_ablkcipher_queued ( s#cryptd_ablkcipher * ) 
cryptd_free_ablkcipher void cryptd_free_ablkcipher ( s#cryptd_ablkcipher * ) 
s#cryptd_skcipher struct cryptd_skcipher { s#crypto_skcipher base ; } 
cryptd_alloc_skcipher s#cryptd_skcipher * cryptd_alloc_skcipher ( const char * , t#u32 , t#u32 ) 
cryptd_skcipher_child s#crypto_skcipher * cryptd_skcipher_child ( s#cryptd_skcipher * ) 
cryptd_skcipher_queued t#bool cryptd_skcipher_queued ( s#cryptd_skcipher * ) 
cryptd_free_skcipher void cryptd_free_skcipher ( s#cryptd_skcipher * ) 
s#cryptd_ahash struct cryptd_ahash { s#crypto_ahash base ; } 
cryptd_alloc_ahash s#cryptd_ahash * cryptd_alloc_ahash ( const char * , t#u32 , t#u32 ) 
cryptd_ahash_child s#crypto_shash * cryptd_ahash_child ( s#cryptd_ahash * ) 
cryptd_shash_desc s#shash_desc * cryptd_shash_desc ( s#ahash_request * ) 
cryptd_ahash_queued t#bool cryptd_ahash_queued ( s#cryptd_ahash * ) 
cryptd_free_ahash void cryptd_free_ahash ( s#cryptd_ahash * ) 
s#cryptd_aead struct cryptd_aead { s#crypto_aead base ; } 
cryptd_alloc_aead s#cryptd_aead * cryptd_alloc_aead ( const char * , t#u32 , t#u32 ) 
cryptd_aead_child s#crypto_aead * cryptd_aead_child ( s#cryptd_aead * ) 
cryptd_aead_queued t#bool cryptd_aead_queued ( s#cryptd_aead * ) 
cryptd_free_aead void cryptd_free_aead ( s#cryptd_aead * ) 

/* crypto/crypto_engine.o */
s##vfsmount
s##posix_acl
s##sock
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pollfd
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##bpf_prog_array
s##cgroup_taskset
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##writeback_control
s##bio_vec
s##swap_info_struct
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kmem_cache
s##mem_cgroup
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##net_device
s##sec_path
s##rtattr
s##skcipher_givcrypt_request
t#kthread_work_func_t typedef void ( * kthread_work_func_t ) ( s#kthread_work * ) 
s#kthread_work struct kthread_work { s#list_head node ; t#kthread_work_func_t func ; s#kthread_worker * worker ; int canceling ; } 
s#kthread_worker struct kthread_worker { unsigned int flags ; t#spinlock_t lock ; s#list_head work_list ; s#list_head delayed_work_list ; s#task_struct * task ; s#kthread_work * current_work ; } 
s#crypto_engine struct crypto_engine { char name [ 30 ] ; t#bool idling ; t#bool busy ; t#bool running ; t#bool cur_req_prepared ; s#list_head list ; t#spinlock_t queue_lock ; s#crypto_queue queue ; t#bool rt ; int ( * prepare_crypt_hardware ) ( s#crypto_engine * ) ; int ( * unprepare_crypt_hardware ) ( s#crypto_engine * ) ; int ( * prepare_cipher_request ) ( s#crypto_engine * , s#ablkcipher_request * ) ; int ( * unprepare_cipher_request ) ( s#crypto_engine * , s#ablkcipher_request * ) ; int ( * prepare_hash_request ) ( s#crypto_engine * , s#ahash_request * ) ; int ( * unprepare_hash_request ) ( s#crypto_engine * , s#ahash_request * ) ; int ( * cipher_one_request ) ( s#crypto_engine * , s#ablkcipher_request * ) ; int ( * hash_one_request ) ( s#crypto_engine * , s#ahash_request * ) ; s#kthread_worker * kworker ; s#kthread_work pump_requests ; void * priv_data ; s#crypto_async_request * cur_req ; } 
crypto_transfer_cipher_request int crypto_transfer_cipher_request ( s#crypto_engine * , s#ablkcipher_request * , t#bool ) 
crypto_transfer_cipher_request_to_engine int crypto_transfer_cipher_request_to_engine ( s#crypto_engine * , s#ablkcipher_request * ) 
crypto_transfer_hash_request int crypto_transfer_hash_request ( s#crypto_engine * , s#ahash_request * , t#bool ) 
crypto_transfer_hash_request_to_engine int crypto_transfer_hash_request_to_engine ( s#crypto_engine * , s#ahash_request * ) 
crypto_finalize_cipher_request void crypto_finalize_cipher_request ( s#crypto_engine * , s#ablkcipher_request * , int ) 
crypto_finalize_hash_request void crypto_finalize_hash_request ( s#crypto_engine * , s#ahash_request * , int ) 
crypto_engine_start int crypto_engine_start ( s#crypto_engine * ) 
crypto_engine_stop int crypto_engine_stop ( s#crypto_engine * ) 
crypto_engine_alloc_init s#crypto_engine * crypto_engine_alloc_init ( s#device * , t#bool ) 
crypto_engine_exit int crypto_engine_exit ( s#crypto_engine * ) 

/* crypto/crypto_null.o */
s##seq_file
s##net_device
s##sock
s##sec_path
s##vfsmount
s##posix_acl
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##user_struct
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##rtattr
crypto_get_default_null_skcipher s#crypto_skcipher * crypto_get_default_null_skcipher ( void ) 
crypto_put_default_null_skcipher void crypto_put_default_null_skcipher ( void ) 

/* crypto/crypto_wq.o */
s##workqueue_struct
kcrypto_wq extern s#workqueue_struct * kcrypto_wq 

/* crypto/des_generic.o */
des_ekey extern unsigned long des_ekey ( t#u32 * , const t#u8 * ) 
__des3_ede_setkey extern int __des3_ede_setkey ( t#u32 * , t#u32 * , const t#u8 * , unsigned int ) 

/* crypto/dh_helper.o */
s#dh struct dh { void * key ; void * p ; void * g ; unsigned int key_size ; unsigned int p_size ; unsigned int g_size ; } 
crypto_dh_key_len int crypto_dh_key_len ( const s#dh * ) 
s#dh_q struct dh_q { void * key ; void * p ; void * q ; void * g ; unsigned int key_size ; unsigned int p_size ; unsigned int q_size ; unsigned int g_size ; } 
crypto_dh_key_len_q int crypto_dh_key_len_q ( const s#dh_q * ) 
crypto_dh_encode_key_q int crypto_dh_encode_key_q ( char * , unsigned int , const s#dh_q * ) 
crypto_dh_decode_key_q int crypto_dh_decode_key_q ( const char * , unsigned int , s#dh_q * ) 
crypto_dh_encode_key int crypto_dh_encode_key ( char * , unsigned int , const s#dh * ) 
crypto_dh_decode_key int crypto_dh_decode_key ( const char * , unsigned int , s#dh * ) 

/* crypto/ecdh_helper.o */
s#ecdh struct ecdh { unsigned short curve_id ; char * key ; unsigned short key_size ; } 
crypto_ecdh_key_len int crypto_ecdh_key_len ( const s#ecdh * ) 
crypto_ecdh_encode_key int crypto_ecdh_encode_key ( char * , unsigned int , const s#ecdh * ) 
crypto_ecdh_decode_key int crypto_ecdh_decode_key ( const char * , unsigned int , s#ecdh * ) 

/* crypto/fips.o */
fips_enabled extern int fips_enabled 

/* crypto/gf128mul.o */
t#__le64 typedef t#__u64 __le64 
t#le128 typedef struct { t#__le64 b , a ; } le128 
gf128mul_x8_ble void gf128mul_x8_ble ( t#le128 * , const t#le128 * ) 
t#be128 typedef struct { t#__be64 a , b ; } be128 
gf128mul_lle void gf128mul_lle ( t#be128 * , const t#be128 * ) 
gf128mul_bbe void gf128mul_bbe ( t#be128 * , const t#be128 * ) 
s#gf128mul_4k struct gf128mul_4k { t#be128 t [ 256 ] ; } 
s#gf128mul_64k struct gf128mul_64k { s#gf128mul_4k * t [ 16 ] ; } 
gf128mul_init_64k_bbe s#gf128mul_64k * gf128mul_init_64k_bbe ( const t#be128 * ) 
gf128mul_free_64k void gf128mul_free_64k ( s#gf128mul_64k * ) 
gf128mul_64k_bbe void gf128mul_64k_bbe ( t#be128 * , const s#gf128mul_64k * ) 
gf128mul_init_4k_lle s#gf128mul_4k * gf128mul_init_4k_lle ( const t#be128 * ) 
gf128mul_init_4k_bbe s#gf128mul_4k * gf128mul_init_4k_bbe ( const t#be128 * ) 
gf128mul_4k_lle void gf128mul_4k_lle ( t#be128 * , const s#gf128mul_4k * ) 
gf128mul_4k_bbe void gf128mul_4k_bbe ( t#be128 * , const s#gf128mul_4k * ) 

/* crypto/hash_info.o */
E#HASH_ALGO__LAST 18 
hash_algo_name extern const char * const hash_algo_name [ E#HASH_ALGO__LAST ] 
hash_digest_size extern const int hash_digest_size [ E#HASH_ALGO__LAST ] 

/* crypto/kpp.o */
s##vfsmount
s##posix_acl
s##sock
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pollfd
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##cgroup_namespace
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##writeback_control
s##bio_vec
s##swap_info_struct
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kmem_cache
s##mem_cgroup
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##net_device
s##sec_path
s##rtattr
s##skcipher_givcrypt_request
s#crypto_kpp struct crypto_kpp { s#crypto_tfm base ; } 
crypto_alloc_kpp s#crypto_kpp * crypto_alloc_kpp ( const char * , t#u32 , t#u32 ) 
s#kpp_request struct kpp_request { s#crypto_async_request base ; s#scatterlist * src ; s#scatterlist * dst ; unsigned int src_len ; unsigned int dst_len ; void * __ctx [ ] __attribute__ ( ( __aligned__ ( __alignof__ ( unsigned long long ) ) ) ) ; } 
s#kpp_alg struct kpp_alg { int ( * set_secret ) ( s#crypto_kpp * , const void * , unsigned int ) ; int ( * generate_public_key ) ( s#kpp_request * ) ; int ( * compute_shared_secret ) ( s#kpp_request * ) ; unsigned int ( * max_size ) ( s#crypto_kpp * ) ; int ( * init ) ( s#crypto_kpp * ) ; void ( * exit ) ( s#crypto_kpp * ) ; unsigned int reqsize ; s#crypto_alg base ; } 
crypto_register_kpp int crypto_register_kpp ( s#kpp_alg * ) 
crypto_unregister_kpp void crypto_unregister_kpp ( s#kpp_alg * ) 

/* crypto/lrw.o */
s#lrw_table_ctx struct lrw_table_ctx { s#gf128mul_64k * table ; t#be128 mulinc [ 128 ] ; } 
lrw_init_table int lrw_init_table ( s#lrw_table_ctx * , const t#u8 * ) 
lrw_free_table void lrw_free_table ( s#lrw_table_ctx * ) 
s##seq_file
s##net_device
s##sock
s##sec_path
s##vfsmount
s##posix_acl
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##user_struct
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##rtattr
s#lrw_crypt_req struct lrw_crypt_req { t#be128 * tbuf ; unsigned int tbuflen ; s#lrw_table_ctx * table_ctx ; void * crypt_ctx ; void ( * crypt_fn ) ( void * , t#u8 * , unsigned int ) ; } 
lrw_crypt int lrw_crypt ( s#blkcipher_desc * , s#scatterlist * , s#scatterlist * , unsigned int , s#lrw_crypt_req * ) 

/* crypto/mcryptd.o */
s##workqueue_struct
s#mcryptd_alg_state struct mcryptd_alg_state { s#mcryptd_alg_cstate * alg_cstate ; unsigned long ( * flusher ) ( s#mcryptd_alg_cstate * ) ; } 
s#mcryptd_alg_cstate struct mcryptd_alg_cstate { unsigned long next_flush ; unsigned next_seq_num ; t#bool flusher_engaged ; s#delayed_work flush ; int cpu ; s#mcryptd_alg_state * alg_state ; void * mgr ; t#spinlock_t work_lock ; s#list_head work_list ; s#list_head flush_list ; } 
mcryptd_arm_flusher void mcryptd_arm_flusher ( s#mcryptd_alg_cstate * , unsigned long ) 
mcryptd_flusher void mcryptd_flusher ( s#work_struct * ) 
s##seq_file
s##net_device
s##sock
s##sec_path
s##vfsmount
s##posix_acl
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##user_struct
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##rtattr
s##skcipher_givcrypt_request
s#mcryptd_ahash struct mcryptd_ahash { s#crypto_ahash base ; } 
mcryptd_alloc_ahash s#mcryptd_ahash * mcryptd_alloc_ahash ( const char * , t#u32 , t#u32 ) 
mcryptd_ahash_child s#crypto_ahash * mcryptd_ahash_child ( s#mcryptd_ahash * ) 
mcryptd_ahash_desc s#ahash_request * mcryptd_ahash_desc ( s#ahash_request * ) 
mcryptd_free_ahash void mcryptd_free_ahash ( s#mcryptd_ahash * ) 

/* crypto/md5.o */
md5_zero_message_hash extern const t#u8 md5_zero_message_hash [ 16 ] 

/* crypto/memneq.o */
__crypto_memneq __attribute__ ( ( noinline ) ) unsigned long __crypto_memneq ( const void * , const void * , t#size_t ) 

/* crypto/poly1305_generic.o */
s##seq_file
s##net_device
s##sock
s##sec_path
s##vfsmount
s##posix_acl
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##user_struct
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##rtattr
s##skcipher_givcrypt_request
crypto_poly1305_init int crypto_poly1305_init ( s#shash_desc * ) 
s#poly1305_desc_ctx struct poly1305_desc_ctx { t#u32 r [ 5 ] ; t#u32 s [ 4 ] ; t#u32 h [ 5 ] ; t#u8 buf [ 16 ] ; unsigned int buflen ; t#bool rset ; t#bool sset ; } 
crypto_poly1305_setdesckey unsigned int crypto_poly1305_setdesckey ( s#poly1305_desc_ctx * , const t#u8 * , unsigned int ) 
crypto_poly1305_update int crypto_poly1305_update ( s#shash_desc * , const t#u8 * , unsigned int ) 
crypto_poly1305_final int crypto_poly1305_final ( s#shash_desc * , t#u8 * ) 

/* crypto/rng.o */
s##vfsmount
s##posix_acl
s##sock
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pollfd
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##cgroup_namespace
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##writeback_control
s##bio_vec
s##swap_info_struct
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kmem_cache
s##mem_cgroup
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##net_device
s##sec_path
s##rtattr
s##skcipher_givcrypt_request
s#crypto_rng struct crypto_rng { s#crypto_tfm base ; } 
crypto_default_rng extern s#crypto_rng * crypto_default_rng 
crypto_rng_reset int crypto_rng_reset ( s#crypto_rng * , const t#u8 * , unsigned int ) 
crypto_alloc_rng s#crypto_rng * crypto_alloc_rng ( const char * , t#u32 , t#u32 ) 
crypto_get_default_rng int crypto_get_default_rng ( void ) 
crypto_put_default_rng void crypto_put_default_rng ( void ) 
crypto_del_default_rng int crypto_del_default_rng ( void ) 
s#rng_alg struct rng_alg { int ( * generate ) ( s#crypto_rng * , const t#u8 * , unsigned int , t#u8 * , unsigned int ) ; int ( * seed ) ( s#crypto_rng * , const t#u8 * , unsigned int ) ; void ( * set_ent ) ( s#crypto_rng * , const t#u8 * , unsigned int ) ; unsigned int seedsize ; s#crypto_alg base ; } 
crypto_register_rng int crypto_register_rng ( s#rng_alg * ) 
crypto_unregister_rng void crypto_unregister_rng ( s#rng_alg * ) 
crypto_register_rngs int crypto_register_rngs ( s#rng_alg * , int ) 
crypto_unregister_rngs void crypto_unregister_rngs ( s#rng_alg * , int ) 

/* crypto/rsa_helper.o */
s#rsa_key struct rsa_key { const t#u8 * n ; const t#u8 * e ; const t#u8 * d ; const t#u8 * p ; const t#u8 * q ; const t#u8 * dp ; const t#u8 * dq ; const t#u8 * qinv ; t#size_t n_sz ; t#size_t e_sz ; t#size_t d_sz ; t#size_t p_sz ; t#size_t q_sz ; t#size_t dp_sz ; t#size_t dq_sz ; t#size_t qinv_sz ; } 
rsa_parse_pub_key int rsa_parse_pub_key ( s#rsa_key * , const void * , unsigned int ) 
rsa_parse_priv_key int rsa_parse_priv_key ( s#rsa_key * , const void * , unsigned int ) 

/* crypto/scatterwalk.o */
scatterwalk_copychunks void scatterwalk_copychunks ( void * , s#scatter_walk * , t#size_t , int ) 
scatterwalk_map_and_copy void scatterwalk_map_and_copy ( void * , s#scatterlist * , unsigned int , unsigned int , int ) 
scatterwalk_ffwd s#scatterlist * scatterwalk_ffwd ( s#scatterlist [ 2 ] , s#scatterlist * , unsigned int ) 

/* crypto/scompress.o */
s##vfsmount
s##posix_acl
s##sock
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pollfd
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##cgroup_namespace
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##writeback_control
s##bio_vec
s##swap_info_struct
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kmem_cache
s##mem_cgroup
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##net_device
s##sec_path
s##rtattr
s##skcipher_givcrypt_request
s#crypto_scomp struct crypto_scomp { s#crypto_tfm base ; } 
s#scomp_alg struct scomp_alg { void * ( * alloc_ctx ) ( s#crypto_scomp * ) ; void ( * free_ctx ) ( s#crypto_scomp * , void * ) ; int ( * compress ) ( s#crypto_scomp * , const t#u8 * , unsigned int , t#u8 * , unsigned int * , void * ) ; int ( * decompress ) ( s#crypto_scomp * , const t#u8 * , unsigned int , t#u8 * , unsigned int * , void * ) ; s#crypto_alg base ; } 
crypto_register_scomp int crypto_register_scomp ( s#scomp_alg * ) 
crypto_unregister_scomp int crypto_unregister_scomp ( s#scomp_alg * ) 
crypto_register_scomps int crypto_register_scomps ( s#scomp_alg * , int ) 
crypto_unregister_scomps void crypto_unregister_scomps ( s#scomp_alg * , int ) 

/* crypto/serpent_generic.o */
s#serpent_ctx struct serpent_ctx { t#u32 expkey [ 132 ] ; } 
__serpent_setkey int __serpent_setkey ( s#serpent_ctx * , const t#u8 * , unsigned int ) 
s##scatterlist
s##crypto_type
s##skcipher_givcrypt_request
s##sock
s##seq_file
s##vfsmount
s##posix_acl
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##device
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
serpent_setkey int serpent_setkey ( s#crypto_tfm * , const t#u8 * , unsigned int ) 
__serpent_encrypt void __serpent_encrypt ( s#serpent_ctx * , t#u8 * , const t#u8 * ) 
__serpent_decrypt void __serpent_decrypt ( s#serpent_ctx * , t#u8 * , const t#u8 * ) 

/* crypto/sha1_generic.o */
sha1_zero_message_hash extern const t#u8 sha1_zero_message_hash [ 20 ] 
s##seq_file
s##net_device
s##sock
s##sec_path
s##vfsmount
s##posix_acl
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##user_struct
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##rtattr
s##skcipher_givcrypt_request
crypto_sha1_update extern int crypto_sha1_update ( s#shash_desc * , const t#u8 * , unsigned int ) 
crypto_sha1_finup extern int crypto_sha1_finup ( s#shash_desc * , const t#u8 * , unsigned int , t#u8 * ) 

/* crypto/sha256_generic.o */
sha224_zero_message_hash extern const t#u8 sha224_zero_message_hash [ 28 ] 
sha256_zero_message_hash extern const t#u8 sha256_zero_message_hash [ 32 ] 
s##seq_file
s##net_device
s##sock
s##sec_path
s##vfsmount
s##posix_acl
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##user_struct
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##rtattr
s##skcipher_givcrypt_request
crypto_sha256_update extern int crypto_sha256_update ( s#shash_desc * , const t#u8 * , unsigned int ) 
crypto_sha256_finup extern int crypto_sha256_finup ( s#shash_desc * , const t#u8 * , unsigned int , t#u8 * ) 

/* crypto/sha512_generic.o */
s##seq_file
s##net_device
s##sock
s##sec_path
s##vfsmount
s##posix_acl
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##user_struct
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##rtattr
s##skcipher_givcrypt_request
crypto_sha512_update extern int crypto_sha512_update ( s#shash_desc * , const t#u8 * , unsigned int ) 
crypto_sha512_finup extern int crypto_sha512_finup ( s#shash_desc * , const t#u8 * , unsigned int , t#u8 * ) 

/* crypto/shash.o */
s##vfsmount
s##posix_acl
s##sock
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pollfd
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##cgroup_namespace
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##writeback_control
s##bio_vec
s##swap_info_struct
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kmem_cache
s##mem_cgroup
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##net_device
s##sec_path
s##rtattr
s##skcipher_givcrypt_request
shash_no_setkey int shash_no_setkey ( s#crypto_shash * , const t#u8 * , unsigned int ) 
crypto_shash_setkey int crypto_shash_setkey ( s#crypto_shash * , const t#u8 * , unsigned int ) 
crypto_shash_update int crypto_shash_update ( s#shash_desc * , const t#u8 * , unsigned int ) 
crypto_shash_final int crypto_shash_final ( s#shash_desc * , t#u8 * ) 
crypto_shash_finup int crypto_shash_finup ( s#shash_desc * , const t#u8 * , unsigned int , t#u8 * ) 
crypto_shash_digest int crypto_shash_digest ( s#shash_desc * , const t#u8 * , unsigned int , t#u8 * ) 
shash_ahash_update int shash_ahash_update ( s#ahash_request * , s#shash_desc * ) 
shash_ahash_finup int shash_ahash_finup ( s#ahash_request * , s#shash_desc * ) 
shash_ahash_digest int shash_ahash_digest ( s#ahash_request * , s#shash_desc * ) 
crypto_alloc_shash s#crypto_shash * crypto_alloc_shash ( const char * , t#u32 , t#u32 ) 
s#shash_alg struct shash_alg { int ( * init ) ( s#shash_desc * ) ; int ( * update ) ( s#shash_desc * , const t#u8 * , unsigned int ) ; int ( * final ) ( s#shash_desc * , t#u8 * ) ; int ( * finup ) ( s#shash_desc * , const t#u8 * , unsigned int , t#u8 * ) ; int ( * digest ) ( s#shash_desc * , const t#u8 * , unsigned int , t#u8 * ) ; int ( * export ) ( s#shash_desc * , void * ) ; int ( * import ) ( s#shash_desc * , const void * ) ; int ( * setkey ) ( s#crypto_shash * , const t#u8 * , unsigned int ) ; unsigned int descsize ; unsigned int digestsize __attribute__ ( ( aligned ( __alignof__ ( struct hash_alg_common ) ) ) ) ; unsigned int statesize ; s#crypto_alg base ; } 
crypto_register_shash int crypto_register_shash ( s#shash_alg * ) 
crypto_unregister_shash int crypto_unregister_shash ( s#shash_alg * ) 
crypto_register_shashes int crypto_register_shashes ( s#shash_alg * , int ) 
crypto_unregister_shashes int crypto_unregister_shashes ( s#shash_alg * , int ) 
s#shash_instance struct shash_instance { s#shash_alg alg ; } 
shash_register_instance int shash_register_instance ( s#crypto_template * , s#shash_instance * ) 
shash_free_instance void shash_free_instance ( s#crypto_instance * ) 
s#crypto_shash_spawn struct crypto_shash_spawn { s#crypto_spawn base ; } 
crypto_init_shash_spawn int crypto_init_shash_spawn ( s#crypto_shash_spawn * , s#shash_alg * , s#crypto_instance * ) 
shash_attr_alg s#shash_alg * shash_attr_alg ( s#rtattr * , t#u32 , t#u32 ) 

/* crypto/skcipher.o */
s##posix_acl
s##vfsmount
s##sock
s##bio_vec
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##proc_ns_operations
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##sec_path
s##neigh_parms
s##neighbour
s##udp_tunnel_info
s##bpf_prog
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##l3mdev_ops
s##ndisc_ops
s##xfrm_state
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##mini_Qdisc
s##Qdisc
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##rtnl_link_ops
s##phy_device
s##sfp_bus
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##kmem_cache
s##xt_table
s##inet_hashinfo
s##fib_notifier_ops
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##workqueue_struct
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##bpf_prog_array
s##cgroup_taskset
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##key_user
s##key_type
s##assoc_array_ptr
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##bdi_writeback
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s#skcipher_walk struct skcipher_walk { union { struct { s#page * page ; unsigned long offset ; } phys ; struct { t#u8 * page ; void * addr ; } virt ; } src , dst ; s#scatter_walk in ; unsigned int nbytes ; s#scatter_walk out ; unsigned int total ; s#list_head buffers ; t#u8 * page ; t#u8 * buffer ; t#u8 * oiv ; void * iv ; unsigned int ivsize ; int flags ; unsigned int blocksize ; unsigned int stride ; unsigned int alignmask ; } 
skcipher_walk_done int skcipher_walk_done ( s#skcipher_walk * , int ) 
skcipher_walk_complete void skcipher_walk_complete ( s#skcipher_walk * , int ) 
skcipher_walk_next int skcipher_walk_next ( s#skcipher_walk * ) 
skcipher_walk_virt int skcipher_walk_virt ( s#skcipher_walk * , s#skcipher_request * , t#bool ) 
skcipher_walk_atomise void skcipher_walk_atomise ( s#skcipher_walk * ) 
skcipher_walk_async int skcipher_walk_async ( s#skcipher_walk * , s#skcipher_request * ) 
skcipher_walk_aead int skcipher_walk_aead ( s#skcipher_walk * , s#aead_request * , t#bool ) 
skcipher_walk_aead_encrypt int skcipher_walk_aead_encrypt ( s#skcipher_walk * , s#aead_request * , t#bool ) 
skcipher_walk_aead_decrypt int skcipher_walk_aead_decrypt ( s#skcipher_walk * , s#aead_request * , t#bool ) 
s#crypto_skcipher_spawn struct crypto_skcipher_spawn { s#crypto_spawn base ; } 
crypto_grab_skcipher int crypto_grab_skcipher ( s#crypto_skcipher_spawn * , const char * , t#u32 , t#u32 ) 
crypto_alloc_skcipher s#crypto_skcipher * crypto_alloc_skcipher ( const char * , t#u32 , t#u32 ) 
s#crypto_sync_skcipher struct crypto_sync_skcipher { s#crypto_skcipher base ; } 
crypto_alloc_sync_skcipher s#crypto_sync_skcipher * crypto_alloc_sync_skcipher ( const char * , t#u32 , t#u32 ) 
crypto_has_skcipher2 int crypto_has_skcipher2 ( const char * , t#u32 , t#u32 ) 
s#skcipher_alg struct skcipher_alg { int ( * setkey ) ( s#crypto_skcipher * , const t#u8 * , unsigned int ) ; int ( * encrypt ) ( s#skcipher_request * ) ; int ( * decrypt ) ( s#skcipher_request * ) ; int ( * init ) ( s#crypto_skcipher * ) ; void ( * exit ) ( s#crypto_skcipher * ) ; unsigned int min_keysize ; unsigned int max_keysize ; unsigned int ivsize ; unsigned int chunksize ; unsigned int walksize ; s#crypto_alg base ; } 
crypto_register_skcipher int crypto_register_skcipher ( s#skcipher_alg * ) 
crypto_unregister_skcipher void crypto_unregister_skcipher ( s#skcipher_alg * ) 
crypto_register_skciphers int crypto_register_skciphers ( s#skcipher_alg * , int ) 
crypto_unregister_skciphers void crypto_unregister_skciphers ( s#skcipher_alg * , int ) 
s#skcipher_instance struct skcipher_instance { void ( * free ) ( s#skcipher_instance * ) ; union { struct { char head [ __builtin_offsetof ( struct skcipher_alg , base ) ] ; s#crypto_instance base ; } s ; s#skcipher_alg alg ; } ; } 
skcipher_register_instance int skcipher_register_instance ( s#crypto_template * , s#skcipher_instance * ) 

/* crypto/testmgr.o */
alg_test int alg_test ( const char * , const char * , t#u32 , t#u32 ) 

/* crypto/twofish_common.o */
s#twofish_ctx struct twofish_ctx { t#u32 s [ 4 ] [ 256 ] , w [ 8 ] , k [ 32 ] ; } 
__twofish_setkey int __twofish_setkey ( s#twofish_ctx * , const t#u8 * , unsigned int , t#u32 * ) 
s##scatterlist
s##crypto_type
s##skcipher_givcrypt_request
s##sock
s##seq_file
s##vfsmount
s##posix_acl
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##device
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
twofish_setkey int twofish_setkey ( s#crypto_tfm * , const t#u8 * , unsigned int ) 

/* crypto/xor.o */
xor_blocks extern void xor_blocks ( unsigned int , unsigned int , void * , void * * ) 

/* crypto/xts.o */
s##seq_file
s##net_device
s##sock
s##sec_path
s##vfsmount
s##posix_acl
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##user_struct
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##rtattr
s#xts_crypt_req struct xts_crypt_req { t#le128 * tbuf ; unsigned int tbuflen ; void * tweak_ctx ; void ( * tweak_fn ) ( void * , t#u8 * , const t#u8 * ) ; void * crypt_ctx ; void ( * crypt_fn ) ( void * , t#u8 * , unsigned int ) ; } 
xts_crypt int xts_crypt ( s#blkcipher_desc * , s#scatterlist * , s#scatterlist * , unsigned int , s#xts_crypt_req * ) 

/* drivers/base/attribute_container.o */
s#klist struct klist { t#spinlock_t k_lock ; s#list_head k_list ; void ( * get ) ( s#klist_node * ) ; void ( * put ) ( s#klist_node * ) ; } 
s##sock
s##seq_file
s##vfsmount
s##posix_acl
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s#device_private struct device_private { s#klist klist_children ; s#klist_node knode_parent ; s#klist_node knode_driver ; s#klist_node knode_bus ; s#list_head deferred_probe ; s#device * device ; } 
s##of_device_id
s##acpi_device_id
s#driver_private struct driver_private { s#kobject kobj ; s#klist klist_devices ; s#klist_node knode_bus ; s#module_kobject * mkobj ; s#device_driver * driver ; } 
s##iommu_ops
s#subsys_private struct subsys_private { s#kset subsys ; s#kset * devices_kset ; s#list_head interfaces ; s#mutex mutex ; s#kset * drivers_kset ; s#klist klist_devices ; s#klist klist_drivers ; s#blocking_notifier_head bus_notifier ; unsigned int drivers_autoprobe : 1 ; s#bus_type * bus ; s#kset glue_dirs ; s#class * class ; } 
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##fwnode_handle
s##iommu_group
s##iommu_fwspec
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s#attribute_container struct attribute_container { s#list_head node ; s#klist containers ; s#class * class ; const s#attribute_group * grp ; s#device_attribute * * attrs ; int ( * match ) ( s#attribute_container * , s#device * ) ; unsigned long flags ; } 
attribute_container_classdev_to_container s#attribute_container * attribute_container_classdev_to_container ( s#device * ) 
attribute_container_register int attribute_container_register ( s#attribute_container * ) 
attribute_container_unregister int attribute_container_unregister ( s#attribute_container * ) 
attribute_container_find_class_device s#device * attribute_container_find_class_device ( s#attribute_container * , s#device * ) 

/* drivers/base/bus.o */
s##sock
s##seq_file
s##vfsmount
s##posix_acl
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##of_device_id
s##acpi_device_id
s#wake_irq struct wake_irq { s#device * dev ; unsigned int status ; int irq ; } 
s#plist_head struct plist_head { s#list_head node_list ; } 
e#pm_qos_type enum pm_qos_type { PM_QOS_UNITIALIZED , PM_QOS_MAX , PM_QOS_MIN , PM_QOS_SUM } 
s#pm_qos_constraints struct pm_qos_constraints { s#plist_head list ; t#s32 target_value ; t#s32 default_value ; t#s32 no_constraint_value ; e#pm_qos_type type ; s#blocking_notifier_head * notifiers ; } 
s#pm_qos_flags struct pm_qos_flags { s#list_head list ; t#s32 effective_flags ; } 
e#dev_pm_qos_req_type enum dev_pm_qos_req_type { DEV_PM_QOS_RESUME_LATENCY = 1 , DEV_PM_QOS_LATENCY_TOLERANCE , DEV_PM_QOS_FLAGS , } 
s#pm_qos_flags_request struct pm_qos_flags_request { s#list_head node ; t#s32 flags ; } 
s#dev_pm_qos_request struct dev_pm_qos_request { e#dev_pm_qos_req_type type ; union { s#plist_node pnode ; s#pm_qos_flags_request flr ; } data ; s#device * dev ; } 
s#dev_pm_qos struct dev_pm_qos { s#pm_qos_constraints resume_latency ; s#pm_qos_constraints latency_tolerance ; s#pm_qos_flags flags ; s#dev_pm_qos_request * resume_latency_req ; s#dev_pm_qos_request * latency_tolerance_req ; s#dev_pm_qos_request * flags_req ; } 
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##fwnode_handle
s##iommu_group
s##iommu_fwspec
s##iommu_ops
s#bus_attribute struct bus_attribute { s#attribute attr ; t#ssize_t ( * show ) ( s#bus_type * , char * ) ; t#ssize_t ( * store ) ( s#bus_type * , const char * , t#size_t ) ; } 
bus_create_file extern int bus_create_file ( s#bus_type * , s#bus_attribute * ) 
bus_remove_file extern void bus_remove_file ( s#bus_type * , s#bus_attribute * ) 
bus_for_each_dev int bus_for_each_dev ( s#bus_type * , s#device * , void * , int ( * ) ( s#device * , void * ) ) 
bus_find_device s#device * bus_find_device ( s#bus_type * , s#device * , void * , int ( * ) ( s#device * , void * ) ) 
bus_find_device_by_name s#device * bus_find_device_by_name ( s#bus_type * , s#device * , const char * ) 
subsys_find_device_by_id s#device * subsys_find_device_by_id ( s#bus_type * , unsigned int , s#device * ) 
bus_for_each_drv int bus_for_each_drv ( s#bus_type * , s#device_driver * , void * , int ( * ) ( s#device_driver * , void * ) ) 
bus_rescan_devices extern int bus_rescan_devices ( s#bus_type * ) 
device_reprobe extern int device_reprobe ( s#device * ) 
bus_register extern int bus_register ( s#bus_type * ) 
bus_unregister extern void bus_unregister ( s#bus_type * ) 
bus_register_notifier extern int bus_register_notifier ( s#bus_type * , s#notifier_block * ) 
bus_unregister_notifier extern int bus_unregister_notifier ( s#bus_type * , s#notifier_block * ) 
bus_get_kset extern s#kset * bus_get_kset ( s#bus_type * ) 
bus_get_device_klist extern s#klist * bus_get_device_klist ( s#bus_type * ) 
bus_sort_breadthfirst void bus_sort_breadthfirst ( s#bus_type * , int ( * ) ( const s#device * , const s#device * ) ) 
s#klist_iter struct klist_iter { s#klist * i_klist ; s#klist_node * i_cur ; } 
s#subsys_dev_iter struct subsys_dev_iter { s#klist_iter ki ; const s#device_type * type ; } 
subsys_dev_iter_init void subsys_dev_iter_init ( s#subsys_dev_iter * , s#bus_type * , s#device * , const s#device_type * ) 
subsys_dev_iter_next s#device * subsys_dev_iter_next ( s#subsys_dev_iter * ) 
subsys_dev_iter_exit void subsys_dev_iter_exit ( s#subsys_dev_iter * ) 
s#subsys_interface struct subsys_interface { const char * name ; s#bus_type * subsys ; s#list_head node ; int ( * add_dev ) ( s#device * , s#subsys_interface * ) ; void ( * remove_dev ) ( s#device * , s#subsys_interface * ) ; } 
subsys_interface_register int subsys_interface_register ( s#subsys_interface * ) 
subsys_interface_unregister void subsys_interface_unregister ( s#subsys_interface * ) 
subsys_system_register int subsys_system_register ( s#bus_type * , const s#attribute_group * * ) 
subsys_virtual_register int subsys_virtual_register ( s#bus_type * , const s#attribute_group * * ) 

/* drivers/base/class.o */
s##sock
s##seq_file
s##vfsmount
s##posix_acl
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##of_device_id
s##acpi_device_id
s##iommu_ops
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##fwnode_handle
s##iommu_group
s##iommu_fwspec
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##block_device_operations
s##request_queue
s##timer_rand_state
s##disk_events
s##badblocks
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
__class_register extern int __class_register ( s#class * , s#lock_class_key * ) 
__class_create extern s#class * __class_create ( s#module * , const char * , s#lock_class_key * ) 
s#class_dev_iter struct class_dev_iter { s#klist_iter ki ; const s#device_type * type ; } 
class_dev_iter_init extern void class_dev_iter_init ( s#class_dev_iter * , s#class * , s#device * , const s#device_type * ) 
class_dev_iter_next extern s#device * class_dev_iter_next ( s#class_dev_iter * ) 
class_dev_iter_exit extern void class_dev_iter_exit ( s#class_dev_iter * ) 
class_for_each_device extern int class_for_each_device ( s#class * , s#device * , void * , int ( * ) ( s#device * , void * ) ) 
class_find_device extern s#device * class_find_device ( s#class * , s#device * , const void * , int ( * ) ( s#device * , const void * ) ) 
show_class_attr_string extern t#ssize_t show_class_attr_string ( s#class * , s#class_attribute * , char * ) 
s##class_compat
class_compat_register s#class_compat * class_compat_register ( const char * ) 
class_compat_unregister void class_compat_unregister ( s#class_compat * ) 
class_compat_create_link int class_compat_create_link ( s#class_compat * , s#device * , s#device * ) 
class_compat_remove_link void class_compat_remove_link ( s#class_compat * , s#device * , s#device * ) 
class_create_file_ns extern int class_create_file_ns ( s#class * , const s#class_attribute * , const void * ) 
class_remove_file_ns extern void class_remove_file_ns ( s#class * , const s#class_attribute * , const void * ) 
class_unregister extern void class_unregister ( s#class * ) 
class_destroy extern void class_destroy ( s#class * ) 
s#class_interface struct class_interface { s#list_head node ; s#class * class ; int ( * add_dev ) ( s#device * , s#class_interface * ) ; void ( * remove_dev ) ( s#device * , s#class_interface * ) ; } 
class_interface_register extern int class_interface_register ( s#class_interface * ) 
class_interface_unregister extern void class_interface_unregister ( s#class_interface * ) 

/* drivers/base/component.o */
s##device_private
s##sock
s##seq_file
s##vfsmount
s##posix_acl
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##fwnode_handle
s##iommu_group
s##iommu_fwspec
s##component_match
component_match_add_release void component_match_add_release ( s#device * , s#component_match * * , void ( * ) ( s#device * , void * ) , int ( * ) ( s#device * , void * ) , void * ) 
s#component_master_ops struct component_master_ops { int ( * bind ) ( s#device * ) ; void ( * unbind ) ( s#device * ) ; } 
component_master_add_with_match int component_master_add_with_match ( s#device * , const s#component_master_ops * , s#component_match * ) 
component_master_del void component_master_del ( s#device * , const s#component_master_ops * ) 
component_unbind_all void component_unbind_all ( s#device * , void * ) 
component_bind_all int component_bind_all ( s#device * , void * ) 
s#component_ops struct component_ops { int ( * bind ) ( s#device * , s#device * , void * ) ; void ( * unbind ) ( s#device * , s#device * , void * ) ; } 
component_add int component_add ( s#device * , const s#component_ops * ) 
component_del void component_del ( s#device * , const s#component_ops * ) 

/* drivers/base/core.o */
s##sock
s##vfsmount
s##posix_acl
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##sec_path
s##neigh_parms
s##neighbour
s##udp_tunnel_info
s##bpf_prog
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##l3mdev_ops
s##ndisc_ops
s##xfrm_state
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##mini_Qdisc
s##Qdisc
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##rtnl_link_ops
s##phy_device
s##sfp_bus
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##kmem_cache
s##xt_table
s##inet_hashinfo
s##fib_notifier_ops
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##workqueue_struct
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##bpf_prog_array
s##cgroup_taskset
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##block_device_operations
s##request_queue
s##timer_rand_state
s##disk_events
s##badblocks
s##mtd_info
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##iommu_ops
s##dma_coherent_mem
t#phandle typedef t#u32 phandle 
s#property struct property { char * name ; int length ; void * value ; s#property * next ; unsigned long _flags ; unsigned int unique_id ; s#bin_attribute attr ; } 
s#device_node struct device_node { const char * name ; const char * type ; t#phandle t#phandle ; const char * full_name ; s#fwnode_handle fwnode ; s#property * properties ; s#property * deadprops ; s#device_node * parent ; s#device_node * child ; s#device_node * sibling ; s#kobject kobj ; unsigned long _flags ; void * data ; } 
s##iommu_group
s##iommu_fwspec
e#device_link_state enum device_link_state { DL_STATE_NONE = - 1 , DL_STATE_DORMANT = 0 , DL_STATE_AVAILABLE , DL_STATE_CONSUMER_PROBE , DL_STATE_ACTIVE , DL_STATE_SUPPLIER_UNBIND , } 
s#device_link struct device_link { s#device * supplier ; s#list_head s_node ; s#device * consumer ; s#list_head c_node ; e#device_link_state status ; t#u32 flags ; t#bool rpm_active ; s#callback_head callback_head ; } 
device_link_add s#device_link * device_link_add ( s#device * , s#device * , t#u32 ) 
device_link_del void device_link_del ( s#device_link * ) 
dev_driver_string extern const char * dev_driver_string ( const s#device * ) 
device_store_ulong t#ssize_t device_store_ulong ( s#device * , s#device_attribute * , const char * , t#size_t ) 
device_show_ulong t#ssize_t device_show_ulong ( s#device * , s#device_attribute * , char * ) 
device_store_int t#ssize_t device_store_int ( s#device * , s#device_attribute * , const char * , t#size_t ) 
device_show_int t#ssize_t device_show_int ( s#device * , s#device_attribute * , char * ) 
device_store_bool t#ssize_t device_store_bool ( s#device * , s#device_attribute * , const char * , t#size_t ) 
device_show_bool t#ssize_t device_show_bool ( s#device * , s#device_attribute * , char * ) 
device_create_file extern int device_create_file ( s#device * , const s#device_attribute * ) 
device_remove_file extern void device_remove_file ( s#device * , const s#device_attribute * ) 
device_remove_file_self extern t#bool device_remove_file_self ( s#device * , const s#device_attribute * ) 
device_create_bin_file extern int device_create_bin_file ( s#device * , const s#bin_attribute * ) 
device_remove_bin_file extern void device_remove_bin_file ( s#device * , const s#bin_attribute * ) 
device_initialize extern void device_initialize ( s#device * ) 
dev_set_name extern __attribute__ ( ( format ( printf , 2 , 3 ) ) ) int dev_set_name ( s#device * , const char * , ... ) 
device_add extern int device_add ( s#device * ) 
device_register extern int device_register ( s#device * ) 
get_device extern s#device * get_device ( s#device * ) 
put_device extern void put_device ( s#device * ) 
kill_device extern t#bool kill_device ( s#device * ) 
device_del extern void device_del ( s#device * ) 
device_unregister extern void device_unregister ( s#device * ) 
device_for_each_child extern int device_for_each_child ( s#device * , void * , int ( * ) ( s#device * , void * ) ) 
device_for_each_child_reverse extern int device_for_each_child_reverse ( s#device * , void * , int ( * ) ( s#device * , void * ) ) 
device_find_child extern s#device * device_find_child ( s#device * , void * , int ( * ) ( s#device * , void * ) ) 
__root_device_register extern s#device * __root_device_register ( const char * , s#module * ) 
root_device_unregister extern void root_device_unregister ( s#device * ) 
t#__gnuc_va_list typedef __builtin_va_list __gnuc_va_list 
t#va_list typedef t#__gnuc_va_list va_list 
device_create_vargs extern __attribute__ ( ( format ( printf , 5 , 0 ) ) ) s#device * device_create_vargs ( s#class * , s#device * , t#dev_t , void * , const char * , t#va_list ) 
device_create extern __attribute__ ( ( format ( printf , 5 , 6 ) ) ) s#device * device_create ( s#class * , s#device * , t#dev_t , void * , const char * , ... ) 
device_create_with_groups extern __attribute__ ( ( format ( printf , 6 , 7 ) ) ) s#device * device_create_with_groups ( s#class * , s#device * , t#dev_t , void * , const s#attribute_group * * , const char * , ... ) 
device_destroy extern void device_destroy ( s#class * , t#dev_t ) 
device_rename extern int device_rename ( s#device * , const char * ) 
e#dpm_order enum dpm_order { DPM_ORDER_NONE , DPM_ORDER_DEV_AFTER_PARENT , DPM_ORDER_PARENT_BEFORE_DEV , DPM_ORDER_DEV_LAST , } 
device_move extern int device_move ( s#device * , s#device * , e#dpm_order ) 
dev_vprintk_emit extern __attribute__ ( ( format ( printf , 3 , 0 ) ) ) int dev_vprintk_emit ( int , const s#device * , const char * , t#va_list ) 
dev_printk_emit extern __attribute__ ( ( format ( printf , 3 , 4 ) ) ) int dev_printk_emit ( int , const s#device * , const char * , ... ) 
dev_printk extern __attribute__ ( ( format ( printf , 3 , 4 ) ) ) void dev_printk ( const char * , const s#device * , const char * , ... ) 
dev_emerg extern __attribute__ ( ( format ( printf , 2 , 3 ) ) ) void dev_emerg ( const s#device * , const char * , ... ) 
dev_alert extern __attribute__ ( ( format ( printf , 2 , 3 ) ) ) void dev_alert ( const s#device * , const char * , ... ) 
dev_crit extern __attribute__ ( ( format ( printf , 2 , 3 ) ) ) void dev_crit ( const s#device * , const char * , ... ) 
dev_err extern __attribute__ ( ( format ( printf , 2 , 3 ) ) ) void dev_err ( const s#device * , const char * , ... ) 
dev_warn extern __attribute__ ( ( format ( printf , 2 , 3 ) ) ) void dev_warn ( const s#device * , const char * , ... ) 
dev_notice extern __attribute__ ( ( format ( printf , 2 , 3 ) ) ) void dev_notice ( const s#device * , const char * , ... ) 
_dev_info extern __attribute__ ( ( format ( printf , 2 , 3 ) ) ) void _dev_info ( const s#device * , const char * , ... ) 
set_primary_fwnode extern void set_primary_fwnode ( s#device * , s#fwnode_handle * ) 

/* drivers/base/cpu.o */
s##sock
s##seq_file
s##vfsmount
s##posix_acl
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##wake_irq
s##dma_map_ops
s##dma_coherent_mem
s##iommu_group
s##iommu_fwspec
s##iommu_ops
cpu_subsys extern s#bus_type cpu_subsys 
get_cpu_device extern s#device * get_cpu_device ( unsigned ) 
cpu_device_create extern __attribute__ ( ( format ( printf , 4 , 5 ) ) ) s#device * cpu_device_create ( s#device * , void * , const s#attribute_group * * , const char * , ... ) 
cpu_is_hotpluggable extern t#bool cpu_is_hotpluggable ( unsigned ) 

/* drivers/base/dd.o */
s##sock
s##vfsmount
s##posix_acl
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##bpf_prog_array
s##cgroup_taskset
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##of_device_id
s##acpi_device_id
s##iommu_ops
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
device_bind_driver extern int device_bind_driver ( s#device * ) 
wait_for_device_probe extern void wait_for_device_probe ( void ) 
device_attach extern int device_attach ( s#device * ) 
driver_attach extern int driver_attach ( s#device_driver * ) 
device_release_driver extern void device_release_driver ( s#device * ) 

/* drivers/base/devcon.o */
s##device_private
s##sock
s##seq_file
s##file
s##vm_operations_struct
s##vm_area_struct
s##kernfs_open_node
s##kernfs_iattrs
s##module
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##fwnode_handle
s##iommu_group
s##iommu_fwspec
s#device_connection struct device_connection { const char * endpoint [ 2 ] ; const char * id ; s#list_head list ; } 
device_connection_find_match void * device_connection_find_match ( s#device * , const char * , void * , void * ( * ) ( s#device_connection * , int , void * ) ) 
device_connection_find s#device * device_connection_find ( s#device * , const char * ) 
device_connection_add void device_connection_add ( s#device_connection * ) 
device_connection_remove void device_connection_remove ( s#device_connection * ) 

/* drivers/base/devres.o */
s##sock
s##seq_file
s##vfsmount
s##posix_acl
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##of_device_id
s##acpi_device_id
s##iommu_ops
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##fwnode_handle
s##iommu_group
s##iommu_fwspec
t#dr_release_t typedef void ( * dr_release_t ) ( s#device * , void * ) 
devres_alloc_node extern void * devres_alloc_node ( t#dr_release_t , t#size_t , t#gfp_t , int ) 
t#dr_match_t typedef int ( * dr_match_t ) ( s#device * , void * , void * ) 
devres_for_each_res extern void devres_for_each_res ( s#device * , t#dr_release_t , t#dr_match_t , void * , void ( * ) ( s#device * , void * , void * ) , void * ) 
devres_free extern void devres_free ( void * ) 
devres_add extern void devres_add ( s#device * , void * ) 
devres_find extern void * devres_find ( s#device * , t#dr_release_t , t#dr_match_t , void * ) 
devres_get extern void * devres_get ( s#device * , void * , t#dr_match_t , void * ) 
devres_remove extern void * devres_remove ( s#device * , t#dr_release_t , t#dr_match_t , void * ) 
devres_destroy extern int devres_destroy ( s#device * , t#dr_release_t , t#dr_match_t , void * ) 
devres_release extern int devres_release ( s#device * , t#dr_release_t , t#dr_match_t , void * ) 
devres_open_group extern void * devres_open_group ( s#device * , void * , t#gfp_t ) 
devres_close_group extern void devres_close_group ( s#device * , void * ) 
devres_remove_group extern void devres_remove_group ( s#device * , void * ) 
devres_release_group extern int devres_release_group ( s#device * , void * ) 
devm_add_action int devm_add_action ( s#device * , void ( * ) ( void * ) , void * ) 
devm_remove_action void devm_remove_action ( s#device * , void ( * ) ( void * ) , void * ) 
devm_release_action void devm_release_action ( s#device * , void ( * ) ( void * ) , void * ) 
devm_kmalloc extern void * devm_kmalloc ( s#device * , t#size_t , t#gfp_t ) 
devm_kstrdup extern char * devm_kstrdup ( s#device * , const char * , t#gfp_t ) 
devm_kvasprintf extern __attribute__ ( ( format ( printf , 3 , 0 ) ) ) char * devm_kvasprintf ( s#device * , t#gfp_t , const char * , t#va_list ) 
devm_kasprintf extern __attribute__ ( ( format ( printf , 3 , 4 ) ) ) char * devm_kasprintf ( s#device * , t#gfp_t , const char * , ... ) 
devm_kfree extern void devm_kfree ( s#device * , void * ) 
devm_kmemdup extern void * devm_kmemdup ( s#device * , const void * , t#size_t , t#gfp_t ) 
devm_get_free_pages extern unsigned long devm_get_free_pages ( s#device * , t#gfp_t , unsigned int ) 
devm_free_pages extern void devm_free_pages ( s#device * , unsigned long ) 
__devm_alloc_percpu void * __devm_alloc_percpu ( s#device * , t#size_t , t#size_t ) 
devm_free_percpu void devm_free_percpu ( s#device * , void * ) 

/* drivers/base/dma-mapping.o */
s##device_private
s##sock
s##seq_file
s##vfsmount
s##posix_acl
s##module
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##compat_timespec
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##iov_iter
s##swap_info_struct
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##iommu_group
s##iommu_fwspec
dmam_alloc_coherent extern void * dmam_alloc_coherent ( s#device * , t#size_t , t#dma_addr_t * , t#gfp_t ) 
dmam_free_coherent extern void dmam_free_coherent ( s#device * , t#size_t , void * , t#dma_addr_t ) 
dmam_alloc_noncoherent extern void * dmam_alloc_noncoherent ( s#device * , t#size_t , t#dma_addr_t * , t#gfp_t ) 
dmam_free_noncoherent extern void dmam_free_noncoherent ( s#device * , t#size_t , void * , t#dma_addr_t ) 
dma_common_get_sgtable int dma_common_get_sgtable ( s#device * , s#sg_table * , void * , t#dma_addr_t , t#size_t ) 
dma_common_mmap extern int dma_common_mmap ( s#device * , s#vm_area_struct * , void * , t#dma_addr_t , t#size_t ) 

/* drivers/base/driver.o */
s##sock
s##seq_file
s##vfsmount
s##posix_acl
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##fwnode_handle
s##iommu_group
s##iommu_fwspec
s##iommu_ops
s##of_device_id
s##acpi_device_id
driver_for_each_device extern int driver_for_each_device ( s#device_driver * , s#device * , void * , int ( * ) ( s#device * , void * ) ) 
driver_find_device s#device * driver_find_device ( s#device_driver * , s#device * , void * , int ( * ) ( s#device * , void * ) ) 
s#driver_attribute struct driver_attribute { s#attribute attr ; t#ssize_t ( * show ) ( s#device_driver * , char * ) ; t#ssize_t ( * store ) ( s#device_driver * , const char * , t#size_t ) ; } 
driver_create_file extern int driver_create_file ( s#device_driver * , const s#driver_attribute * ) 
driver_remove_file extern void driver_remove_file ( s#device_driver * , const s#driver_attribute * ) 
driver_register extern int driver_register ( s#device_driver * ) 
driver_unregister extern void driver_unregister ( s#device_driver * ) 
driver_find extern s#device_driver * driver_find ( const char * , s#bus_type * ) 

/* drivers/base/firmware.o */
s##sock
s##seq_file
s##vfsmount
s##posix_acl
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##of_device_id
s##acpi_device_id
s##iommu_ops
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##fwnode_handle
s##iommu_group
s##iommu_fwspec
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
firmware_kobj extern s#kobject * firmware_kobj 

/* drivers/base/firmware_class.o */
s##posix_acl
s##vfsmount
s##sock
s##pipe_inode_info
s##poll_table_struct
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pollfd
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##mempolicy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##kmem_cache
s##workqueue_struct
s##blk_plug
s##of_device_id
s##acpi_device_id
s##iommu_ops
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##fwnode_handle
s##iommu_group
s##iommu_fwspec
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s#firmware struct firmware { t#size_t size ; const t#u8 * data ; s#page * * pages ; void * priv ; } 
request_firmware int request_firmware ( const s#firmware * * , const char * , s#device * ) 
firmware_request_nowarn int firmware_request_nowarn ( const s#firmware * * , const char * , s#device * ) 
request_firmware_direct int request_firmware_direct ( const s#firmware * * , const char * , s#device * ) 
request_firmware_into_buf int request_firmware_into_buf ( const s#firmware * * , const char * , s#device * , void * , t#size_t ) 
release_firmware void release_firmware ( const s#firmware * ) 
request_firmware_nowait int request_firmware_nowait ( s#module * , t#bool , const char * , s#device * , t#gfp_t , void * , void ( * ) ( const s#firmware * , void * ) ) 

/* drivers/base/hypervisor.o */
s##sock
s##seq_file
s##file
s##vm_operations_struct
s##vm_area_struct
s##kernfs_open_node
s##kernfs_iattrs
hypervisor_kobj extern s#kobject * hypervisor_kobj 

/* drivers/base/memory.o */
register_memory_notifier extern int register_memory_notifier ( s#notifier_block * ) 
unregister_memory_notifier extern void unregister_memory_notifier ( s#notifier_block * ) 
register_memory_isolate_notifier extern int register_memory_isolate_notifier ( s#notifier_block * ) 
unregister_memory_isolate_notifier extern void unregister_memory_isolate_notifier ( s#notifier_block * ) 

/* drivers/base/platform.o */
s##sock
s##seq_file
s##vfsmount
s##posix_acl
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##iommu_ops
s##dma_coherent_mem
s##iommu_group
s##iommu_fwspec
platform_bus extern s#device platform_bus 
s#platform_device_id struct platform_device_id { char name [ 20 ] ; t#kernel_ulong_t driver_data ; } 
s##mfd_cell
s#pdev_archdata struct pdev_archdata { } 
s#platform_device struct platform_device { const char * name ; int id ; t#bool id_auto ; s#device dev ; t#u32 num_resources ; s#resource * resource ; const s#platform_device_id * id_entry ; char * driver_override ; s#mfd_cell * mfd_cell ; s#pdev_archdata archdata ; } 
platform_get_resource extern s#resource * platform_get_resource ( s#platform_device * , unsigned int , unsigned int ) 
devm_platform_ioremap_resource extern void * devm_platform_ioremap_resource ( s#platform_device * , unsigned int ) 
platform_get_irq extern int platform_get_irq ( s#platform_device * , unsigned int ) 
platform_irq_count extern int platform_irq_count ( s#platform_device * ) 
platform_get_resource_byname extern s#resource * platform_get_resource_byname ( s#platform_device * , unsigned int , const char * ) 
platform_get_irq_byname extern int platform_get_irq_byname ( s#platform_device * , const char * ) 
platform_add_devices extern int platform_add_devices ( s#platform_device * * , int ) 
platform_device_put extern void platform_device_put ( s#platform_device * ) 
platform_device_alloc extern s#platform_device * platform_device_alloc ( const char * , int ) 
platform_device_add_resources extern int platform_device_add_resources ( s#platform_device * , const s#resource * , unsigned int ) 
platform_device_add_data extern int platform_device_add_data ( s#platform_device * , const void * , t#size_t ) 
s#property_entry struct property_entry { const char * name ; t#size_t length ; t#bool is_array ; t#bool is_string ; union { union { const void * raw_data ; const t#u8 * u8_data ; const t#u16 * u16_data ; const t#u32 * u32_data ; const t#u64 * u64_data ; const char * const * str ; } pointer ; union { unsigned long long raw_data ; t#u8 u8_data ; t#u16 u16_data ; t#u32 u32_data ; t#u64 u64_data ; const char * str ; } value ; } ; } 
platform_device_add_properties extern int platform_device_add_properties ( s#platform_device * , s#property_entry * ) 
platform_device_add extern int platform_device_add ( s#platform_device * ) 
platform_device_del extern void platform_device_del ( s#platform_device * ) 
platform_device_register extern int platform_device_register ( s#platform_device * ) 
platform_device_unregister extern void platform_device_unregister ( s#platform_device * ) 
s#platform_device_info struct platform_device_info { s#device * parent ; s#fwnode_handle * fwnode ; const char * name ; int id ; const s#resource * res ; unsigned int num_res ; const void * data ; t#size_t size_data ; t#u64 dma_mask ; s#property_entry * properties ; } 
platform_device_register_full extern s#platform_device * platform_device_register_full ( const s#platform_device_info * ) 
s#platform_driver struct platform_driver { int ( * probe ) ( s#platform_device * ) ; int ( * remove ) ( s#platform_device * ) ; void ( * shutdown ) ( s#platform_device * ) ; int ( * suspend ) ( s#platform_device * , t#pm_message_t ) ; int ( * resume ) ( s#platform_device * ) ; s#device_driver driver ; const s#platform_device_id * id_table ; t#bool prevent_deferred_probe ; } 
__platform_driver_register extern int __platform_driver_register ( s#platform_driver * , s#module * ) 
platform_driver_unregister extern void platform_driver_unregister ( s#platform_driver * ) 
__platform_driver_probe extern int __platform_driver_probe ( s#platform_driver * , int ( * ) ( s#platform_device * ) , s#module * ) 
__platform_create_bundle extern s#platform_device * __platform_create_bundle ( s#platform_driver * , int ( * ) ( s#platform_device * ) , s#resource * , unsigned int , const void * , t#size_t , s#module * ) 
__platform_register_drivers int __platform_register_drivers ( s#platform_driver * const * , unsigned int , s#module * ) 
platform_unregister_drivers void platform_unregister_drivers ( s#platform_driver * const * , unsigned int ) 
platform_bus_type extern s#bus_type platform_bus_type 
dma_get_required_mask extern t#u64 dma_get_required_mask ( s#device * ) 

/* drivers/base/power/common.o */
s##device_private
s##sock
s##seq_file
s##file
s##vm_operations_struct
s##vm_area_struct
s##kernfs_open_node
s##kernfs_iattrs
s##module
s##driver_private
s##iommu_ops
s##subsys_private
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##mm_struct
s##compat_timespec
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##pipe_inode_info
s##page
s##task_delay_info
s##ftrace_ret_stack
s##mem_cgroup
s##uprobe_task
s##gs_cb
s##dma_map_ops
s##dma_coherent_mem
s##iommu_group
s##iommu_fwspec
dev_pm_get_subsys_data extern int dev_pm_get_subsys_data ( s#device * ) 
dev_pm_put_subsys_data extern void dev_pm_put_subsys_data ( s#device * ) 
dev_pm_domain_attach extern int dev_pm_domain_attach ( s#device * , t#bool ) 
dev_pm_domain_detach extern void dev_pm_domain_detach ( s#device * , t#bool ) 
dev_pm_domain_set extern void dev_pm_domain_set ( s#device * , s#dev_pm_domain * ) 

/* drivers/base/power/generic_ops.o */
s##device_private
s##sock
s##vfsmount
s##posix_acl
s##module
s##workqueue_struct
s##bpf_prog_array
s##cgroup_taskset
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##iov_iter
s##hd_struct
s##gendisk
s##request_queue
s##kmem_cache
s##eventfd_ctx
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##mmu_notifier_mm
s##xol_area
s##compat_timespec
s##pollfd
s##pid_namespace
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_plug
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##mtd_info
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##fwnode_handle
s##iommu_group
s##iommu_fwspec
pm_generic_runtime_suspend extern int pm_generic_runtime_suspend ( s#device * ) 
pm_generic_runtime_resume extern int pm_generic_runtime_resume ( s#device * ) 
pm_generic_suspend_noirq extern int pm_generic_suspend_noirq ( s#device * ) 
pm_generic_suspend_late extern int pm_generic_suspend_late ( s#device * ) 
pm_generic_suspend extern int pm_generic_suspend ( s#device * ) 
pm_generic_freeze_noirq extern int pm_generic_freeze_noirq ( s#device * ) 
pm_generic_freeze_late extern int pm_generic_freeze_late ( s#device * ) 
pm_generic_freeze extern int pm_generic_freeze ( s#device * ) 
pm_generic_poweroff_noirq extern int pm_generic_poweroff_noirq ( s#device * ) 
pm_generic_poweroff_late extern int pm_generic_poweroff_late ( s#device * ) 
pm_generic_poweroff extern int pm_generic_poweroff ( s#device * ) 
pm_generic_thaw_noirq extern int pm_generic_thaw_noirq ( s#device * ) 
pm_generic_thaw_early extern int pm_generic_thaw_early ( s#device * ) 
pm_generic_thaw extern int pm_generic_thaw ( s#device * ) 
pm_generic_resume_noirq extern int pm_generic_resume_noirq ( s#device * ) 
pm_generic_resume_early extern int pm_generic_resume_early ( s#device * ) 
pm_generic_resume extern int pm_generic_resume ( s#device * ) 
pm_generic_restore_noirq extern int pm_generic_restore_noirq ( s#device * ) 
pm_generic_restore_early extern int pm_generic_restore_early ( s#device * ) 
pm_generic_restore extern int pm_generic_restore ( s#device * ) 
pm_complete_with_resume_check extern void pm_complete_with_resume_check ( s#device * ) 

/* drivers/base/power/main.o */
dpm_resume_start extern void dpm_resume_start ( t#pm_message_t ) 
dpm_resume_end extern void dpm_resume_end ( t#pm_message_t ) 
dpm_suspend_end extern int dpm_suspend_end ( t#pm_message_t ) 
dpm_suspend_start extern int dpm_suspend_start ( t#pm_message_t ) 
__suspend_report_result extern void __suspend_report_result ( const char * , void * , int ) 
s##sock
s##vfsmount
s##posix_acl
s##module
s##workqueue_struct
s##bpf_prog_array
s##cgroup_taskset
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##iov_iter
s##hd_struct
s##gendisk
s##request_queue
s##kmem_cache
s##eventfd_ctx
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##mmu_notifier_mm
s##xol_area
s##compat_timespec
s##fs_pin
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_plug
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##ring_buffer
s##bpf_prog
s##static_key_mod
s##trace_array
s##tracer
s##trace_buffer
s##ring_buffer_iter
s##event_filter
s##ftrace_hash
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##uprobe
s##gs_cb
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##mtd_info
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##of_device_id
s##acpi_device_id
s##module_kobject
s##iommu_ops
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##fwnode_handle
s##iommu_group
s##iommu_fwspec
device_pm_wait_for_dev extern int device_pm_wait_for_dev ( s#device * , s#device * ) 
dpm_for_each_dev extern void dpm_for_each_dev ( void * , void ( * ) ( s#device * , void * ) ) 

/* drivers/base/power/qos.o */
e#pm_qos_flags_status enum pm_qos_flags_status { PM_QOS_FLAGS_UNDEFINED = - 1 , PM_QOS_FLAGS_NONE , PM_QOS_FLAGS_SOME , PM_QOS_FLAGS_ALL , } 
s##device_private
s##sock
s##vfsmount
s##posix_acl
s##module
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##mmu_notifier_mm
s##xol_area
s##compat_timespec
s##kmem_cache
s##fs_pin
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##bpf_prog_array
s##cgroup_taskset
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##ring_buffer
s##bpf_prog
s##static_key_mod
s##trace_array
s##tracer
s##trace_buffer
s##ring_buffer_iter
s##event_filter
s##ftrace_hash
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##uprobe
s##gs_cb
s##iov_iter
s##swap_info_struct
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##fwnode_handle
s##iommu_group
s##iommu_fwspec
dev_pm_qos_flags e#pm_qos_flags_status dev_pm_qos_flags ( s#device * , t#s32 ) 
dev_pm_qos_add_request int dev_pm_qos_add_request ( s#device * , s#dev_pm_qos_request * , e#dev_pm_qos_req_type , t#s32 ) 
dev_pm_qos_update_request int dev_pm_qos_update_request ( s#dev_pm_qos_request * , t#s32 ) 
dev_pm_qos_remove_request int dev_pm_qos_remove_request ( s#dev_pm_qos_request * ) 
dev_pm_qos_add_notifier int dev_pm_qos_add_notifier ( s#device * , s#notifier_block * ) 
dev_pm_qos_remove_notifier int dev_pm_qos_remove_notifier ( s#device * , s#notifier_block * ) 
dev_pm_qos_add_ancestor_request int dev_pm_qos_add_ancestor_request ( s#device * , s#dev_pm_qos_request * , e#dev_pm_qos_req_type , t#s32 ) 
dev_pm_qos_expose_latency_limit int dev_pm_qos_expose_latency_limit ( s#device * , t#s32 ) 
dev_pm_qos_hide_latency_limit void dev_pm_qos_hide_latency_limit ( s#device * ) 
dev_pm_qos_expose_flags int dev_pm_qos_expose_flags ( s#device * , t#s32 ) 
dev_pm_qos_hide_flags void dev_pm_qos_hide_flags ( s#device * ) 
dev_pm_qos_update_user_latency_tolerance int dev_pm_qos_update_user_latency_tolerance ( s#device * , t#s32 ) 
dev_pm_qos_expose_latency_tolerance int dev_pm_qos_expose_latency_tolerance ( s#device * ) 
dev_pm_qos_hide_latency_tolerance void dev_pm_qos_hide_latency_tolerance ( s#device * ) 

/* drivers/base/power/runtime.o */
s##sock
s##seq_file
s##file
s##vm_operations_struct
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##compat_timespec
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##pipe_inode_info
s##address_space
s##dev_pagemap
s##kmem_cache
s##mem_cgroup
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##kernfs_open_node
s##kernfs_iattrs
s##module
s##of_device_id
s##acpi_device_id
s##module_kobject
s##iommu_ops
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##fwnode_handle
s##iommu_group
s##iommu_fwspec
pm_runtime_autosuspend_expiration extern unsigned long pm_runtime_autosuspend_expiration ( s#device * ) 
pm_runtime_set_memalloc_noio extern void pm_runtime_set_memalloc_noio ( s#device * , t#bool ) 
pm_schedule_suspend extern int pm_schedule_suspend ( s#device * , unsigned int ) 
__pm_runtime_idle extern int __pm_runtime_idle ( s#device * , int ) 
__pm_runtime_suspend extern int __pm_runtime_suspend ( s#device * , int ) 
__pm_runtime_resume extern int __pm_runtime_resume ( s#device * , int ) 
pm_runtime_get_if_in_use extern int pm_runtime_get_if_in_use ( s#device * ) 
__pm_runtime_set_status extern int __pm_runtime_set_status ( s#device * , unsigned int ) 
pm_runtime_barrier extern int pm_runtime_barrier ( s#device * ) 
__pm_runtime_disable extern void __pm_runtime_disable ( s#device * , t#bool ) 
pm_runtime_enable extern void pm_runtime_enable ( s#device * ) 
pm_runtime_forbid extern void pm_runtime_forbid ( s#device * ) 
pm_runtime_allow extern void pm_runtime_allow ( s#device * ) 
pm_runtime_no_callbacks extern void pm_runtime_no_callbacks ( s#device * ) 
pm_runtime_irq_safe extern void pm_runtime_irq_safe ( s#device * ) 
pm_runtime_set_autosuspend_delay extern void pm_runtime_set_autosuspend_delay ( s#device * , int ) 
__pm_runtime_use_autosuspend extern void __pm_runtime_use_autosuspend ( s#device * , t#bool ) 
pm_runtime_force_suspend extern int pm_runtime_force_suspend ( s#device * ) 
pm_runtime_force_resume extern int pm_runtime_force_resume ( s#device * ) 

/* drivers/base/power/sysfs.o */
power_group_name extern const char power_group_name [ ] 

/* drivers/base/power/wakeirq.o */
s##device_private
s##sock
s##seq_file
s##vfsmount
s##posix_acl
s##module
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##compat_timespec
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##iov_iter
s##swap_info_struct
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
dev_pm_set_wake_irq extern int dev_pm_set_wake_irq ( s#device * , int ) 
dev_pm_clear_wake_irq extern void dev_pm_clear_wake_irq ( s#device * ) 
dev_pm_set_dedicated_wake_irq extern int dev_pm_set_dedicated_wake_irq ( s#device * , int ) 
dev_pm_enable_wake_irq extern void dev_pm_enable_wake_irq ( s#device * ) 
dev_pm_disable_wake_irq extern void dev_pm_disable_wake_irq ( s#device * ) 

/* drivers/base/power/wakeup.o */
s##device_private
s##sock
s##vfsmount
s##posix_acl
s##module
s##workqueue_struct
s##bpf_prog_array
s##cgroup_taskset
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##iov_iter
s##hd_struct
s##gendisk
s##request_queue
s##kmem_cache
s##eventfd_ctx
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##mmu_notifier_mm
s##xol_area
s##compat_timespec
s##fs_pin
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_plug
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##ring_buffer
s##bpf_prog
s##static_key_mod
s##trace_array
s##tracer
s##trace_buffer
s##ring_buffer_iter
s##event_filter
s##ftrace_hash
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##uprobe
s##gs_cb
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##mtd_info
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##fwnode_handle
s##iommu_group
s##iommu_fwspec
wakeup_source_prepare extern void wakeup_source_prepare ( s#wakeup_source * , const char * ) 
wakeup_source_create extern s#wakeup_source * wakeup_source_create ( const char * ) 
wakeup_source_drop extern void wakeup_source_drop ( s#wakeup_source * ) 
wakeup_source_destroy extern void wakeup_source_destroy ( s#wakeup_source * ) 
wakeup_source_add extern void wakeup_source_add ( s#wakeup_source * ) 
wakeup_source_remove extern void wakeup_source_remove ( s#wakeup_source * ) 
wakeup_source_register extern s#wakeup_source * wakeup_source_register ( const char * ) 
wakeup_source_unregister extern void wakeup_source_unregister ( s#wakeup_source * ) 
device_wakeup_enable extern int device_wakeup_enable ( s#device * ) 
device_wakeup_disable extern int device_wakeup_disable ( s#device * ) 
device_set_wakeup_capable extern void device_set_wakeup_capable ( s#device * , t#bool ) 
device_init_wakeup extern int device_init_wakeup ( s#device * , t#bool ) 
device_set_wakeup_enable extern int device_set_wakeup_enable ( s#device * , t#bool ) 
__pm_stay_awake extern void __pm_stay_awake ( s#wakeup_source * ) 
pm_stay_awake extern void pm_stay_awake ( s#device * ) 
__pm_relax extern void __pm_relax ( s#wakeup_source * ) 
pm_relax extern void pm_relax ( s#device * ) 
pm_wakeup_ws_event extern void pm_wakeup_ws_event ( s#wakeup_source * , unsigned int , t#bool ) 
pm_wakeup_dev_event extern void pm_wakeup_dev_event ( s#device * , unsigned int , t#bool ) 
pm_print_active_wakeup_sources extern void pm_print_active_wakeup_sources ( void ) 
pm_system_wakeup extern void pm_system_wakeup ( void ) 

/* drivers/base/property.o */
s##device_private
s##sock
s##vfsmount
s##posix_acl
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##sec_path
s##neigh_parms
s##neighbour
s##udp_tunnel_info
s##bpf_prog
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##l3mdev_ops
s##ndisc_ops
s##xfrm_state
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##mini_Qdisc
s##Qdisc
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##rtnl_link_ops
s##gpio_desc
s#mii_bus struct mii_bus { s#module * owner ; const char * name ; char id [ 61 ] ; void * priv ; int ( * read ) ( s#mii_bus * , int , int ) ; int ( * write ) ( s#mii_bus * , int , int , t#u16 ) ; int ( * reset ) ( s#mii_bus * ) ; s#mutex mdio_lock ; s#device * parent ; enum { MDIOBUS_ALLOCATED = 1 , MDIOBUS_REGISTERED , MDIOBUS_UNREGISTERED , MDIOBUS_RELEASED , } state ; s#device dev ; s#mdio_device * mdio_map [ 32 ] ; t#u32 phy_mask ; t#u32 phy_ignore_ta_mask ; int irq [ 32 ] ; int reset_delay_us ; int num_reset_gpios ; s#gpio_desc * * reset_gpiod ; } 
s##iommu_ops
s##subsys_private
s##driver_private
s#mdio_device struct mdio_device { s#device dev ; const s#dev_pm_ops * pm_ops ; s#mii_bus * bus ; char modalias [ 32 ] ; int ( * bus_match ) ( s#device * , s#device_driver * ) ; void ( * device_free ) ( s#mdio_device * ) ; void ( * device_remove ) ( s#mdio_device * ) ; int addr ; int flags ; s#gpio_desc * reset ; } 
s#mdio_driver_common struct mdio_driver_common { s#device_driver driver ; int flags ; } 
s#phy_driver struct phy_driver { s#mdio_driver_common mdiodrv ; t#u32 phy_id ; char * name ; unsigned int phy_id_mask ; t#u32 features ; t#u32 flags ; const void * driver_data ; int ( * soft_reset ) ( s#phy_device * ) ; int ( * config_init ) ( s#phy_device * ) ; int ( * probe ) ( s#phy_device * ) ; int ( * suspend ) ( s#phy_device * ) ; int ( * resume ) ( s#phy_device * ) ; int ( * config_aneg ) ( s#phy_device * ) ; int ( * aneg_done ) ( s#phy_device * ) ; int ( * read_status ) ( s#phy_device * ) ; int ( * ack_interrupt ) ( s#phy_device * ) ; int ( * config_intr ) ( s#phy_device * ) ; int ( * did_interrupt ) ( s#phy_device * ) ; void ( * remove ) ( s#phy_device * ) ; int ( * match_phy_device ) ( s#phy_device * ) ; int ( * ts_info ) ( s#phy_device * , s#ethtool_ts_info * ) ; int ( * hwtstamp ) ( s#phy_device * , s#ifreq * ) ; t#bool ( * rxtstamp ) ( s#phy_device * , s#sk_buff * , int ) ; void ( * txtstamp ) ( s#phy_device * , s#sk_buff * , int ) ; int ( * set_wol ) ( s#phy_device * , s#ethtool_wolinfo * ) ; void ( * get_wol ) ( s#phy_device * , s#ethtool_wolinfo * ) ; void ( * link_change_notify ) ( s#phy_device * ) ; int ( * read_mmd ) ( s#phy_device * , int , t#u16 ) ; int ( * write_mmd ) ( s#phy_device * , int , t#u16 , t#u16 ) ; int ( * read_page ) ( s#phy_device * ) ; int ( * write_page ) ( s#phy_device * , int ) ; int ( * module_info ) ( s#phy_device * , s#ethtool_modinfo * ) ; int ( * module_eeprom ) ( s#phy_device * , s#ethtool_eeprom * , t#u8 * ) ; int ( * get_sset_count ) ( s#phy_device * ) ; void ( * get_strings ) ( s#phy_device * , t#u8 * ) ; void ( * get_stats ) ( s#phy_device * , s#ethtool_stats * , t#u64 * ) ; int ( * get_tunable ) ( s#phy_device * , s#ethtool_tunable * , void * ) ; int ( * set_tunable ) ( s#phy_device * , s#ethtool_tunable * , const void * ) ; int ( * set_loopback ) ( s#phy_device * , t#bool ) ; } 
s#phy_c45_device_ids struct phy_c45_device_ids { t#u32 devices_in_package ; t#u32 device_ids [ 8 ] ; } 
e#phy_state enum phy_state { PHY_DOWN = 0 , PHY_STARTING , PHY_READY , PHY_PENDING , PHY_UP , PHY_AN , PHY_RUNNING , PHY_NOLINK , PHY_FORCING , PHY_CHANGELINK , PHY_HALTED , PHY_RESUMING } 
t#phy_interface_t typedef enum { PHY_INTERFACE_MODE_NA , PHY_INTERFACE_MODE_MII , PHY_INTERFACE_MODE_GMII , PHY_INTERFACE_MODE_SGMII , PHY_INTERFACE_MODE_TBI , PHY_INTERFACE_MODE_REVMII , PHY_INTERFACE_MODE_RMII , PHY_INTERFACE_MODE_RGMII , PHY_INTERFACE_MODE_RGMII_ID , PHY_INTERFACE_MODE_RGMII_RXID , PHY_INTERFACE_MODE_RGMII_TXID , PHY_INTERFACE_MODE_RTBI , PHY_INTERFACE_MODE_SMII , PHY_INTERFACE_MODE_XGMII , PHY_INTERFACE_MODE_MOCA , PHY_INTERFACE_MODE_QSGMII , PHY_INTERFACE_MODE_TRGMII , PHY_INTERFACE_MODE_1000BASEX , PHY_INTERFACE_MODE_2500BASEX , PHY_INTERFACE_MODE_RXAUI , PHY_INTERFACE_MODE_XAUI , PHY_INTERFACE_MODE_10GKR , PHY_INTERFACE_MODE_MAX , } phy_interface_t 
s##workqueue_struct
s##phylink
s#phy_device struct phy_device { s#mdio_device mdio ; s#phy_driver * drv ; t#u32 phy_id ; s#phy_c45_device_ids c45_ids ; t#bool is_c45 ; t#bool is_internal ; t#bool is_pseudo_fixed_link ; t#bool has_fixups ; t#bool suspended ; t#bool sysfs_links ; t#bool loopback_enabled ; e#phy_state state ; t#u32 dev_flags ; t#phy_interface_t interface ; int speed ; int duplex ; int pause ; int asym_pause ; int link ; t#u32 interrupts ; t#u32 supported ; t#u32 advertising ; t#u32 lp_advertising ; t#u32 eee_broken_modes ; int autoneg ; int link_timeout ; int irq ; void * priv ; s#work_struct phy_queue ; s#delayed_work state_queue ; s#mutex lock ; s#phylink * phylink ; s#net_device * attached_dev ; t#u8 mdix ; t#u8 mdix_ctrl ; void ( * phy_link_change ) ( s#phy_device * , t#bool , t#bool ) ; void ( * adjust_link ) ( s#net_device * ) ; } 
s##sfp_bus
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##kmem_cache
s##xt_table
s##inet_hashinfo
s##fib_notifier_ops
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##bpf_prog_array
s##cgroup_taskset
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##iommu_group
s##iommu_fwspec
dev_fwnode s#fwnode_handle * dev_fwnode ( s#device * ) 
device_property_present t#bool device_property_present ( s#device * , const char * ) 
fwnode_property_present t#bool fwnode_property_present ( const s#fwnode_handle * , const char * ) 
device_property_read_u8_array int device_property_read_u8_array ( s#device * , const char * , t#u8 * , t#size_t ) 
device_property_read_u16_array int device_property_read_u16_array ( s#device * , const char * , t#u16 * , t#size_t ) 
device_property_read_u32_array int device_property_read_u32_array ( s#device * , const char * , t#u32 * , t#size_t ) 
device_property_read_u64_array int device_property_read_u64_array ( s#device * , const char * , t#u64 * , t#size_t ) 
device_property_read_string_array int device_property_read_string_array ( s#device * , const char * , const char * * , t#size_t ) 
device_property_read_string int device_property_read_string ( s#device * , const char * , const char * * ) 
device_property_match_string int device_property_match_string ( s#device * , const char * , const char * ) 
fwnode_property_read_u8_array int fwnode_property_read_u8_array ( const s#fwnode_handle * , const char * , t#u8 * , t#size_t ) 
fwnode_property_read_u16_array int fwnode_property_read_u16_array ( const s#fwnode_handle * , const char * , t#u16 * , t#size_t ) 
fwnode_property_read_u32_array int fwnode_property_read_u32_array ( const s#fwnode_handle * , const char * , t#u32 * , t#size_t ) 
fwnode_property_read_u64_array int fwnode_property_read_u64_array ( const s#fwnode_handle * , const char * , t#u64 * , t#size_t ) 
fwnode_property_read_string_array int fwnode_property_read_string_array ( const s#fwnode_handle * , const char * , const char * * , t#size_t ) 
fwnode_property_read_string int fwnode_property_read_string ( const s#fwnode_handle * , const char * , const char * * ) 
fwnode_property_match_string int fwnode_property_match_string ( const s#fwnode_handle * , const char * , const char * ) 
fwnode_property_get_reference_args int fwnode_property_get_reference_args ( const s#fwnode_handle * , const char * , const char * , unsigned int , unsigned int , s#fwnode_reference_args * ) 
property_entries_dup s#property_entry * property_entries_dup ( const s#property_entry * ) 
property_entries_free void property_entries_free ( const s#property_entry * ) 
device_remove_properties void device_remove_properties ( s#device * ) 
device_add_properties int device_add_properties ( s#device * , const s#property_entry * ) 
fwnode_get_next_parent s#fwnode_handle * fwnode_get_next_parent ( s#fwnode_handle * ) 
fwnode_get_parent s#fwnode_handle * fwnode_get_parent ( const s#fwnode_handle * ) 
fwnode_get_next_child_node s#fwnode_handle * fwnode_get_next_child_node ( const s#fwnode_handle * , s#fwnode_handle * ) 
fwnode_get_next_available_child_node s#fwnode_handle * fwnode_get_next_available_child_node ( const s#fwnode_handle * , s#fwnode_handle * ) 
device_get_next_child_node s#fwnode_handle * device_get_next_child_node ( s#device * , s#fwnode_handle * ) 
fwnode_get_named_child_node s#fwnode_handle * fwnode_get_named_child_node ( const s#fwnode_handle * , const char * ) 
device_get_named_child_node s#fwnode_handle * device_get_named_child_node ( s#device * , const char * ) 
fwnode_handle_get void fwnode_handle_get ( s#fwnode_handle * ) 
fwnode_handle_put void fwnode_handle_put ( s#fwnode_handle * ) 
fwnode_device_is_available t#bool fwnode_device_is_available ( const s#fwnode_handle * ) 
device_get_child_node_count unsigned int device_get_child_node_count ( s#device * ) 
device_dma_supported t#bool device_dma_supported ( s#device * ) 
e#dev_dma_attr enum dev_dma_attr { DEV_DMA_NOT_SUPPORTED , DEV_DMA_NON_COHERENT , DEV_DMA_COHERENT , } 
device_get_dma_attr e#dev_dma_attr device_get_dma_attr ( s#device * ) 
fwnode_get_phy_mode int fwnode_get_phy_mode ( s#fwnode_handle * ) 
device_get_phy_mode int device_get_phy_mode ( s#device * ) 
fwnode_get_mac_address void * fwnode_get_mac_address ( s#fwnode_handle * , char * , int ) 
device_get_mac_address void * device_get_mac_address ( s#device * , char * , int ) 
fwnode_irq_get int fwnode_irq_get ( s#fwnode_handle * , unsigned int ) 
fwnode_graph_get_next_endpoint s#fwnode_handle * fwnode_graph_get_next_endpoint ( const s#fwnode_handle * , s#fwnode_handle * ) 
fwnode_graph_get_port_parent s#fwnode_handle * fwnode_graph_get_port_parent ( const s#fwnode_handle * ) 
fwnode_graph_get_remote_port_parent s#fwnode_handle * fwnode_graph_get_remote_port_parent ( const s#fwnode_handle * ) 
fwnode_graph_get_remote_port s#fwnode_handle * fwnode_graph_get_remote_port ( const s#fwnode_handle * ) 
fwnode_graph_get_remote_endpoint s#fwnode_handle * fwnode_graph_get_remote_endpoint ( const s#fwnode_handle * ) 
fwnode_graph_get_remote_node s#fwnode_handle * fwnode_graph_get_remote_node ( const s#fwnode_handle * , t#u32 , t#u32 ) 
fwnode_graph_parse_endpoint int fwnode_graph_parse_endpoint ( const s#fwnode_handle * , s#fwnode_endpoint * ) 

/* drivers/base/syscore.o */
s#syscore_ops struct syscore_ops { s#list_head node ; int ( * suspend ) ( void ) ; void ( * resume ) ( void ) ; void ( * shutdown ) ( void ) ; } 
register_syscore_ops extern void register_syscore_ops ( s#syscore_ops * ) 
unregister_syscore_ops extern void unregister_syscore_ops ( s#syscore_ops * ) 
syscore_suspend extern int syscore_suspend ( void ) 
syscore_resume extern void syscore_resume ( void ) 

/* drivers/base/transport_class.o */
s##module
s##sock
s##seq_file
s##file
s##vm_operations_struct
s##vm_area_struct
s##kernfs_open_node
s##kernfs_iattrs
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##fwnode_handle
s##iommu_group
s##iommu_fwspec
s#transport_container struct transport_container { s#attribute_container ac ; const s#attribute_group * statistics ; } 
s#transport_class struct transport_class { s#class class ; int ( * setup ) ( s#transport_container * , s#device * , s#device * ) ; int ( * configure ) ( s#transport_container * , s#device * , s#device * ) ; int ( * remove ) ( s#transport_container * , s#device * , s#device * ) ; } 
transport_class_register int transport_class_register ( s#transport_class * ) 
transport_class_unregister void transport_class_unregister ( s#transport_class * ) 
s#anon_transport_class struct anon_transport_class { s#transport_class tclass ; s#attribute_container container ; } 
anon_transport_class_register int anon_transport_class_register ( s#anon_transport_class * ) 
anon_transport_class_unregister void anon_transport_class_unregister ( s#anon_transport_class * ) 
transport_setup_device void transport_setup_device ( s#device * ) 
transport_add_device void transport_add_device ( s#device * ) 
transport_configure_device void transport_configure_device ( s#device * ) 
transport_remove_device void transport_remove_device ( s#device * ) 
transport_destroy_device void transport_destroy_device ( s#device * ) 

/* drivers/block/loop.o */
s##posix_acl
s##vfsmount
s##sock
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##proc_ns_operations
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##blk_mq_ctx
s##kmem_cache
s##blkcg_gq
s##workqueue_struct
s##blk_flush_queue
s##blk_mq_tags
s##blk_mq_alloc_data
s##blk_mq_debugfs_attr
s##blk_queue_stats
s##rq_wb
s##blk_stat_callback
s##blk_trace
s##bsg_job
s##throtl_data
s##hd_geometry
s##pr_ops
s##timer_rand_state
s##disk_events
s##badblocks
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##key_user
s##key_type
s##assoc_array_ptr
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s#loop_device struct loop_device { int lo_number ; t#atomic_t lo_refcnt ; t#loff_t lo_offset ; t#loff_t lo_sizelimit ; int lo_flags ; int ( * transfer ) ( s#loop_device * , int , s#page * , unsigned , s#page * , unsigned , int , t#sector_t ) ; char lo_file_name [ 64 ] ; char lo_crypt_name [ 64 ] ; char lo_encrypt_key [ 32 ] ; int lo_encrypt_key_size ; s#loop_func_table * lo_encryption ; t#__u32 lo_init [ 2 ] ; t#kuid_t lo_key_owner ; int ( * ioctl ) ( s#loop_device * , int , unsigned long ) ; s#file * lo_backing_file ; s#block_device * lo_device ; void * key_data ; t#gfp_t old_gfp_mask ; t#spinlock_t lo_lock ; int lo_state ; s#mutex lo_ctl_mutex ; s#kthread_worker worker ; s#task_struct * worker_task ; t#bool use_dio ; s#request_queue * lo_queue ; s#blk_mq_tag_set tag_set ; s#gendisk * lo_disk ; } 
s#loop_info64 struct loop_info64 { t#__u64 lo_device ; t#__u64 lo_inode ; t#__u64 lo_rdevice ; t#__u64 lo_offset ; t#__u64 lo_sizelimit ; t#__u32 lo_number ; t#__u32 lo_encrypt_type ; t#__u32 lo_encrypt_key_size ; t#__u32 lo_flags ; t#__u8 lo_file_name [ 64 ] ; t#__u8 lo_crypt_name [ 64 ] ; t#__u8 lo_encrypt_key [ 32 ] ; t#__u64 lo_init [ 2 ] ; } 
s#loop_func_table struct loop_func_table { int number ; int ( * transfer ) ( s#loop_device * , int , s#page * , unsigned , s#page * , unsigned , int , t#sector_t ) ; int ( * init ) ( s#loop_device * , const s#loop_info64 * ) ; int ( * release ) ( s#loop_device * ) ; int ( * ioctl ) ( s#loop_device * , int , unsigned long ) ; s#module * owner ; } 
loop_register_transfer int loop_register_transfer ( s#loop_func_table * ) 
loop_unregister_transfer int loop_unregister_transfer ( int ) 

/* drivers/block/rbd.o */
s##device_private
s##sock
s##vfsmount
s##posix_acl
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##workqueue_struct
s##bpf_prog_array
s##cgroup_taskset
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##key_user
s##key_type
s##assoc_array_ptr
s##swap_info_struct
s##kmem_cache
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##proc_ns_operations
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##net_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##sec_path
s##xt_table
s##inet_hashinfo
s##fib_notifier_ops
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##neighbour
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##nf_hook_entry
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_mq_ctx
s##blk_flush_queue
s##blk_mq_tags
s##blk_mq_alloc_data
s##blk_mq_debugfs_attr
s##blk_queue_stats
s##rq_wb
s##blk_stat_callback
s##blk_trace
s##bsg_job
s##throtl_data
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##kstatfs
s#fid struct fid { union { struct { t#u32 ino ; t#u32 gen ; t#u32 parent_ino ; t#u32 parent_gen ; } i32 ; struct { t#u32 block ; t#u16 partref ; t#u16 parent_partref ; t#u32 generation ; t#u32 parent_block ; t#u32 parent_generation ; } udf ; t#__u32 raw [ 0 ] ; } ; } 
s##iomap
s#export_operations struct export_operations { int ( * encode_fh ) ( s#inode * , t#__u32 * , int * , s#inode * ) ; s#dentry * ( * fh_to_dentry ) ( s#super_block * , s#fid * , int , int ) ; s#dentry * ( * fh_to_parent ) ( s#super_block * , s#fid * , int , int ) ; int ( * get_name ) ( s#dentry * , char * , s#dentry * ) ; s#dentry * ( * get_parent ) ( s#dentry * ) ; int ( * commit_metadata ) ( s#inode * ) ; int ( * get_uuid ) ( s#super_block * , t#u8 * , t#u32 * , t#u64 * ) ; int ( * map_blocks ) ( s#inode * , t#loff_t , t#u64 , s#iomap * , t#bool , t#u32 * ) ; int ( * commit_blocks ) ( s#inode * , s#iomap * , int , s#iattr * ) ; } 
s##xattr_handler
s##fscrypt_operations
s##mtd_info
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##hd_geometry
s##pr_ops
s##timer_rand_state
s##disk_events
s##badblocks
s##rbd_client
s#ceph_snap_context struct ceph_snap_context { t#refcount_t nref ; t#u64 seq ; t#u32 num_snaps ; t#u64 snaps [ ] ; } 
s#rbd_image_header struct rbd_image_header { char * object_prefix ; t#__u8 obj_order ; t#u64 stripe_unit ; t#u64 stripe_count ; t#s64 data_pool_id ; t#u64 features ; t#u64 image_size ; s#ceph_snap_context * snapc ; char * snap_names ; t#u64 * snap_sizes ; } 
s##rbd_spec
s##rbd_options
s#ceph_object_id struct ceph_object_id { char * name ; char inline_name [ 52 ] ; int name_len ; } 
s#ceph_string struct ceph_string { s#kref kref ; union { s#rb_node node ; s#callback_head rcu ; } ; t#size_t len ; char str [ ] ; } 
s#ceph_object_locator struct ceph_object_locator { t#s64 pool ; s#ceph_string * pool_ns ; } 
s#ceph_file_layout struct ceph_file_layout { t#u32 stripe_unit ; t#u32 stripe_count ; t#u32 object_size ; t#s64 pool_id ; s#ceph_string * pool_ns ; } 
e#rbd_watch_state enum rbd_watch_state { RBD_WATCH_STATE_UNREGISTERED , RBD_WATCH_STATE_REGISTERED , RBD_WATCH_STATE_ERROR , } 
s#ceph_fsid struct ceph_fsid { unsigned char fsid [ 16 ] ; } 
t#__le32 typedef t#__u32 __le32 
s#__kernel_sockaddr_storage struct __kernel_sockaddr_storage { t#__kernel_sa_family_t ss_family ; char __data [ 128 - sizeof ( unsigned short ) ] ; } 
s#ceph_entity_addr struct ceph_entity_addr { t#__le32 type ; t#__le32 nonce ; s#__kernel_sockaddr_storage in_addr ; } 
s##ceph_crypto_key
s#ceph_options struct ceph_options { int flags ; s#ceph_fsid fsid ; s#ceph_entity_addr my_addr ; unsigned long mount_timeout ; unsigned long osd_idle_ttl ; unsigned long osd_keepalive_timeout ; unsigned long osd_request_timeout ; s#ceph_entity_addr * mon_addr ; int num_mon ; char * name ; s#ceph_crypto_key * key ; } 
s#ceph_entity_name struct ceph_entity_name { t#__u8 type ; t#__le64 num ; } 
s#ceph_msg_header struct ceph_msg_header { t#__le64 seq ; t#__le64 tid ; t#__le16 type ; t#__le16 priority ; t#__le16 version ; t#__le32 front_len ; t#__le32 middle_len ; t#__le32 data_len ; t#__le16 data_off ; s#ceph_entity_name src ; t#__le16 compat_version ; t#__le16 reserved ; t#__le32 crc ; } 
s#ceph_msg_footer struct ceph_msg_footer { t#__le32 front_crc , middle_crc , data_crc ; t#__le64 sig ; t#__u8 flags ; } 
s#ceph_msg_footer_old struct ceph_msg_footer_old { t#__le32 front_crc , middle_crc , data_crc ; t#__u8 flags ; } 
s#ceph_buffer struct ceph_buffer { s#kref kref ; s#kvec vec ; t#size_t alloc_len ; } 
e#ceph_msg_data_type enum ceph_msg_data_type { CEPH_MSG_DATA_NONE , CEPH_MSG_DATA_PAGES , CEPH_MSG_DATA_PAGELIST , CEPH_MSG_DATA_BIO , CEPH_MSG_DATA_BVECS , CEPH_MSG_DATA_SG , } 
s#ceph_bio_iter struct ceph_bio_iter { s#bio * bio ; s#bvec_iter iter ; } 
s#ceph_bvec_iter struct ceph_bvec_iter { s#bio_vec * bvecs ; s#bvec_iter iter ; } 
s#ceph_pagelist struct ceph_pagelist { s#list_head head ; void * mapped_tail ; t#size_t length ; t#size_t room ; s#list_head free_list ; t#size_t num_pages_free ; t#refcount_t refcnt ; } 
s#ceph_msg_data struct ceph_msg_data { e#ceph_msg_data_type type ; union { struct { s#ceph_bio_iter bio_pos ; t#u32 bio_length ; } ; s#ceph_bvec_iter bvec_pos ; struct { s#page * * pages ; t#size_t length ; unsigned int alignment ; t#bool own_pages ; } ; s#ceph_pagelist * pagelist ; struct { s#scatterlist * sgl ; unsigned int sgl_init_offset ; t#u64 sgl_length ; } ; } ; } 
s#ceph_msg_data_cursor struct ceph_msg_data_cursor { t#size_t total_resid ; s#ceph_msg_data * data ; t#size_t resid ; t#bool last_piece ; t#bool need_crc ; union { s#ceph_bio_iter bio_iter ; s#bvec_iter bvec_iter ; struct { unsigned int page_offset ; unsigned short page_index ; unsigned short page_count ; } ; struct { s#page * page ; t#size_t offset ; } ; struct { s#scatterlist * sg ; unsigned int sg_consumed ; } ; } ; } 
s#ceph_authorizer struct ceph_authorizer { void ( * destroy ) ( s#ceph_authorizer * ) ; } 
s#ceph_auth_handshake struct ceph_auth_handshake { s#ceph_authorizer * authorizer ; void * authorizer_buf ; t#size_t authorizer_buf_len ; void * authorizer_reply_buf ; t#size_t authorizer_reply_buf_len ; int ( * sign_message ) ( s#ceph_auth_handshake * , s#ceph_msg * ) ; int ( * check_message_signature ) ( s#ceph_auth_handshake * , s#ceph_msg * ) ; } 
s#ceph_connection_operations struct ceph_connection_operations { s#ceph_connection * ( * get ) ( s#ceph_connection * ) ; void ( * put ) ( s#ceph_connection * ) ; void ( * dispatch ) ( s#ceph_connection * , s#ceph_msg * ) ; s#ceph_auth_handshake * ( * get_authorizer ) ( s#ceph_connection * , int * , int ) ; int ( * add_authorizer_challenge ) ( s#ceph_connection * , void * , int ) ; int ( * verify_authorizer_reply ) ( s#ceph_connection * ) ; int ( * invalidate_authorizer ) ( s#ceph_connection * ) ; void ( * fault ) ( s#ceph_connection * ) ; void ( * peer_reset ) ( s#ceph_connection * ) ; s#ceph_msg * ( * alloc_msg ) ( s#ceph_connection * , s#ceph_msg_header * , int * ) ; void ( * reencode_message ) ( s#ceph_msg * ) ; int ( * sign_message ) ( s#ceph_msg * ) ; int ( * check_message_signature ) ( s#ceph_msg * ) ; } 
s#ceph_entity_inst struct ceph_entity_inst { s#ceph_entity_name name ; s#ceph_entity_addr addr ; } 
s#ceph_messenger struct ceph_messenger { s#ceph_entity_inst inst ; s#ceph_entity_addr my_enc_addr ; t#atomic_t stopping ; t#possible_net_t net ; t#u32 global_seq ; t#spinlock_t global_seq_lock ; } 
s#ceph_msg_connect struct ceph_msg_connect { t#__le64 features ; t#__le32 host_type ; t#__le32 global_seq ; t#__le32 connect_seq ; t#__le32 protocol_version ; t#__le32 authorizer_protocol ; t#__le32 authorizer_len ; t#__u8 flags ; } 
s#ceph_msg_connect_reply struct ceph_msg_connect_reply { t#__u8 tag ; t#__le64 features ; t#__le32 global_seq ; t#__le32 connect_seq ; t#__le32 protocol_version ; t#__le32 authorizer_len ; t#__u8 flags ; } 
s#ceph_timespec struct ceph_timespec { t#__le32 tv_sec ; t#__le32 tv_nsec ; } 
s#ceph_connection struct ceph_connection { void * private ; const s#ceph_connection_operations * ops ; s#ceph_messenger * msgr ; t#atomic_t sock_state ; s#socket * sock ; s#ceph_entity_addr peer_addr ; s#ceph_entity_addr peer_addr_for_me ; unsigned long flags ; unsigned long state ; const char * error_msg ; s#ceph_entity_name peer_name ; t#u64 peer_features ; t#u32 connect_seq ; t#u32 peer_global_seq ; s#ceph_auth_handshake * auth ; int auth_retry ; s#mutex mutex ; s#list_head out_queue ; s#list_head out_sent ; t#u64 out_seq ; t#u64 in_seq , in_seq_acked ; char in_banner [ 30 ] ; s#ceph_msg_connect out_connect ; s#ceph_msg_connect_reply in_reply ; s#ceph_entity_addr actual_peer_addr ; s#ceph_msg_header out_hdr ; s#ceph_msg * out_msg ; t#bool out_msg_done ; s#kvec out_kvec [ 8 ] , * out_kvec_cur ; int out_kvec_left ; int out_skip ; int out_kvec_bytes ; int out_more ; t#__le64 out_temp_ack ; s#ceph_timespec out_temp_keepalive2 ; s#ceph_msg_header in_hdr ; s#ceph_msg * in_msg ; t#u32 in_front_crc , in_middle_crc , in_data_crc ; char in_tag ; int in_base_pos ; t#__le64 in_temp_ack ; s#timespec last_keepalive_ack ; s#delayed_work work ; unsigned long delay ; } 
s#ceph_msgpool struct ceph_msgpool { const char * name ; t#mempool_t * pool ; int type ; int front_len ; int max_data_items ; } 
s#ceph_msg struct ceph_msg { s#ceph_msg_header hdr ; union { s#ceph_msg_footer footer ; s#ceph_msg_footer_old old_footer ; } ; s#kvec front ; s#ceph_buffer * middle ; t#size_t data_length ; s#ceph_msg_data * data ; int num_data_items ; int max_data_items ; s#ceph_msg_data_cursor cursor ; s#ceph_connection * con ; s#list_head list_head ; s#kref kref ; t#bool more_to_follow ; t#bool needs_out_seq ; int front_alloc_len ; unsigned long ack_stamp ; s#ceph_msgpool * pool ; } 
s#ceph_monmap struct ceph_monmap { s#ceph_fsid fsid ; t#u32 epoch ; t#u32 num_mon ; s#ceph_entity_inst mon_inst [ 0 ] ; } 
s#ceph_auth_client_ops struct ceph_auth_client_ops { const char * name ; int ( * is_authenticated ) ( s#ceph_auth_client * ) ; int ( * should_authenticate ) ( s#ceph_auth_client * ) ; int ( * build_request ) ( s#ceph_auth_client * , void * , void * ) ; int ( * handle_reply ) ( s#ceph_auth_client * , int , void * , void * ) ; int ( * create_authorizer ) ( s#ceph_auth_client * , int , s#ceph_auth_handshake * ) ; int ( * update_authorizer ) ( s#ceph_auth_client * , int , s#ceph_auth_handshake * ) ; int ( * add_authorizer_challenge ) ( s#ceph_auth_client * , s#ceph_authorizer * , void * , int ) ; int ( * verify_authorizer_reply ) ( s#ceph_auth_client * , s#ceph_authorizer * ) ; void ( * invalidate_authorizer ) ( s#ceph_auth_client * , int ) ; void ( * reset ) ( s#ceph_auth_client * ) ; void ( * destroy ) ( s#ceph_auth_client * ) ; int ( * sign_message ) ( s#ceph_auth_handshake * , s#ceph_msg * ) ; int ( * check_message_signature ) ( s#ceph_auth_handshake * , s#ceph_msg * ) ; } 
s#ceph_auth_client struct ceph_auth_client { t#u32 protocol ; void * private ; const s#ceph_auth_client_ops * ops ; t#bool negotiating ; const char * name ; t#u64 global_id ; const s#ceph_crypto_key * key ; unsigned want_keys ; s#mutex mutex ; } 
s#ceph_mon_subscribe_item struct ceph_mon_subscribe_item { t#__le64 start ; t#__u8 flags ; } 
s#ceph_mon_client struct ceph_mon_client { s#ceph_client * client ; s#ceph_monmap * monmap ; s#mutex mutex ; s#delayed_work delayed_work ; s#ceph_auth_client * auth ; s#ceph_msg * m_auth , * m_auth_reply , * m_subscribe , * m_subscribe_ack ; int pending_auth ; t#bool hunting ; int cur_mon ; unsigned long sub_renew_after ; unsigned long sub_renew_sent ; s#ceph_connection con ; t#bool had_a_connection ; int hunt_mult ; s#rb_root generic_request_tree ; t#u64 last_tid ; struct { s#ceph_mon_subscribe_item item ; t#bool want ; t#u32 have ; } subs [ 4 ] ; int fs_cluster_id ; s#dentry * debugfs_file ; } 
s#ceph_client struct ceph_client { s#ceph_fsid fsid ; t#bool have_fsid ; void * private ; s#ceph_options * options ; s#mutex mount_mutex ; t#wait_queue_head_t auth_wq ; int auth_err ; int ( * extra_mon_dispatch ) ( s#ceph_client * , s#ceph_msg * ) ; t#u64 supported_features ; t#u64 required_features ; s#ceph_messenger msgr ; s#ceph_mon_client monc ; s#ceph_osd_client osdc ; s#dentry * debugfs_dir ; s#dentry * debugfs_monmap ; s#dentry * debugfs_osdmap ; s#dentry * debugfs_options ; } 
s#crush_bucket struct crush_bucket { t#__s32 id ; t#__u16 type ; t#__u8 alg ; t#__u8 hash ; t#__u32 weight ; t#__u32 size ; t#__s32 * items ; } 
s#crush_rule_mask struct crush_rule_mask { t#__u8 ruleset ; t#__u8 type ; t#__u8 min_size ; t#__u8 max_size ; } 
s#crush_rule_step struct crush_rule_step { t#__u32 op ; t#__s32 arg1 ; t#__s32 arg2 ; } 
s#crush_rule struct crush_rule { t#__u32 len ; s#crush_rule_mask mask ; s#crush_rule_step steps [ 0 ] ; } 
s#crush_map struct crush_map { s#crush_bucket * * buckets ; s#crush_rule * * rules ; t#__s32 max_buckets ; t#__u32 max_rules ; t#__s32 max_devices ; t#__u32 choose_local_tries ; t#__u32 choose_local_fallback_tries ; t#__u32 choose_total_tries ; t#__u32 chooseleaf_descend_once ; t#__u8 chooseleaf_vary_r ; t#__u8 chooseleaf_stable ; t#size_t working_size ; s#rb_root choose_args ; } 
s#ceph_osdmap struct ceph_osdmap { s#ceph_fsid fsid ; t#u32 epoch ; s#ceph_timespec created , modified ; t#u32 flags ; t#u32 max_osd ; t#u32 * osd_state ; t#u32 * osd_weight ; s#ceph_entity_addr * osd_addr ; s#rb_root pg_temp ; s#rb_root primary_temp ; s#rb_root pg_upmap ; s#rb_root pg_upmap_items ; t#u32 * osd_primary_affinity ; s#rb_root pg_pools ; t#u32 pool_max ; s#crush_map * crush ; s#mutex crush_workspace_mutex ; void * crush_workspace ; } 
s#ceph_osd struct ceph_osd { t#refcount_t o_ref ; s#ceph_osd_client * o_osdc ; int o_osd ; int o_incarnation ; s#rb_node o_node ; s#ceph_connection o_con ; s#rb_root o_requests ; s#rb_root o_linger_requests ; s#rb_root o_backoff_mappings ; s#rb_root o_backoffs_by_id ; s#list_head o_osd_lru ; s#ceph_auth_handshake o_auth ; unsigned long lru_ttl ; s#list_head o_keepalive_item ; s#mutex lock ; } 
s#ceph_osd_client struct ceph_osd_client { s#ceph_client * client ; s#ceph_osdmap * osdmap ; s#rw_semaphore lock ; s#rb_root osds ; s#list_head osd_lru ; t#spinlock_t osd_lru_lock ; t#u32 epoch_barrier ; s#ceph_osd homeless_osd ; t#atomic64_t last_tid ; t#u64 last_linger_id ; s#rb_root linger_requests ; s#rb_root map_checks ; s#rb_root linger_map_checks ; t#atomic_t num_requests ; t#atomic_t num_homeless ; t#bool abort_on_full ; int abort_err ; s#delayed_work timeout_work ; s#delayed_work osds_timeout_work ; s#dentry * debugfs_file ; t#mempool_t * req_mempool ; s#ceph_msgpool msgpool_op ; s#ceph_msgpool msgpool_op_reply ; s#workqueue_struct * notify_wq ; s#workqueue_struct * completion_wq ; } 
s#ceph_pg struct ceph_pg { t#uint64_t pool ; t#uint32_t seed ; } 
s#ceph_spg struct ceph_spg { s#ceph_pg pgid ; t#s8 shard ; } 
s#ceph_osds struct ceph_osds { int osds [ 32 ] ; int size ; int primary ; } 
s#ceph_osd_request_target struct ceph_osd_request_target { s#ceph_object_id base_oid ; s#ceph_object_locator base_oloc ; s#ceph_object_id target_oid ; s#ceph_object_locator target_oloc ; s#ceph_pg pgid ; s#ceph_spg spgid ; t#u32 pg_num ; t#u32 pg_num_mask ; s#ceph_osds acting ; s#ceph_osds up ; int size ; int min_size ; t#bool sort_bitwise ; t#bool recovery_deletes ; unsigned int flags ; t#bool paused ; t#u32 epoch ; t#u32 last_force_resend ; int osd ; } 
t#ceph_osdc_callback_t typedef void ( * ceph_osdc_callback_t ) ( s#ceph_osd_request * ) 
e#ceph_osd_data_type enum ceph_osd_data_type { CEPH_OSD_DATA_TYPE_NONE = 0 , CEPH_OSD_DATA_TYPE_PAGES , CEPH_OSD_DATA_TYPE_PAGELIST , CEPH_OSD_DATA_TYPE_BIO , CEPH_OSD_DATA_TYPE_BVECS , CEPH_OSD_DATA_TYPE_SG , } 
s#ceph_osd_data struct ceph_osd_data { e#ceph_osd_data_type type ; union { struct { s#page * * pages ; t#u64 length ; t#u32 alignment ; t#bool pages_from_pool ; t#bool own_pages ; } ; s#ceph_pagelist * pagelist ; struct { s#ceph_bio_iter bio_pos ; t#u32 bio_length ; } ; struct { s#scatterlist * sgl ; t#size_t sgl_length ; unsigned int sgl_init_offset ; } ; struct { s#ceph_bvec_iter bvec_pos ; t#u32 num_bvecs ; } ; } ; } 
s#ceph_osd_req_op struct ceph_osd_req_op { t#u16 op ; t#u32 flags ; t#u32 indata_len ; t#u32 outdata_len ; t#s32 rval ; union { s#ceph_osd_data raw_data_in ; struct { t#u64 offset , length ; t#u64 truncate_size ; t#u32 truncate_seq ; s#ceph_osd_data osd_data ; } extent ; struct { t#u32 name_len ; t#u32 value_len ; t#__u8 cmp_op ; t#__u8 cmp_mode ; s#ceph_osd_data request_data ; s#ceph_osd_data response_data ; } xattr ; struct { const char * class_name ; const char * method_name ; s#ceph_osd_data request_info ; s#ceph_osd_data request_data ; s#ceph_osd_data response_data ; t#__u8 class_len ; t#__u8 method_len ; t#u32 indata_len ; } cls ; struct { t#u64 cookie ; t#__u8 op ; t#u32 gen ; } watch ; struct { s#ceph_osd_data request_data ; } notify_ack ; struct { t#u64 cookie ; s#ceph_osd_data request_data ; s#ceph_osd_data response_data ; } notify ; struct { s#ceph_osd_data response_data ; } list_watchers ; struct { t#u64 expected_object_size ; t#u64 expected_write_size ; } alloc_hint ; struct { t#u64 offset ; t#u64 length ; t#u64 data_length ; s#ceph_osd_data request_data ; } writesame ; } ; } 
s#ceph_osd_request struct ceph_osd_request { t#u64 r_tid ; s#rb_node r_node ; s#rb_node r_mc_node ; s#work_struct r_complete_work ; s#ceph_osd * r_osd ; s#ceph_osd_request_target r_t ; s#ceph_msg * r_request , * r_reply ; t#u32 r_sent ; unsigned int r_num_ops ; int r_result ; s#ceph_osd_client * r_osdc ; s#kref r_kref ; t#bool r_mempool ; s#completion r_completion ; t#ceph_osdc_callback_t r_callback ; s#list_head r_unsafe_item ; s#inode * r_inode ; void * r_priv ; t#u64 r_snapid ; s#ceph_snap_context * r_snapc ; s#timespec r_mtime ; t#u64 r_data_offset ; t#bool r_linger ; unsigned long r_stamp ; unsigned long r_start_stamp ; int r_attempts ; t#u32 r_map_dne_bound ; s#ceph_osd_req_op r_ops [ ] ; } 
t#rados_watchcb2_t typedef void ( * rados_watchcb2_t ) ( void * , t#u64 , t#u64 , t#u64 , void * , t#size_t ) 
t#rados_watcherrcb_t typedef void ( * rados_watcherrcb_t ) ( void * , t#u64 , int ) 
s#ceph_osd_linger_request struct ceph_osd_linger_request { s#ceph_osd_client * osdc ; t#u64 linger_id ; t#bool committed ; t#bool is_watch ; s#ceph_osd * osd ; s#ceph_osd_request * reg_req ; s#ceph_osd_request * ping_req ; unsigned long ping_sent ; unsigned long watch_valid_thru ; s#list_head pending_lworks ; s#ceph_osd_request_target t ; t#u32 map_dne_bound ; s#timespec mtime ; s#kref kref ; s#mutex lock ; s#rb_node node ; s#rb_node osdc_node ; s#rb_node mc_node ; s#list_head scan_item ; s#completion reg_commit_wait ; s#completion notify_finish_wait ; int reg_commit_error ; int notify_finish_error ; int last_error ; t#u32 register_gen ; t#u64 notify_id ; t#rados_watchcb2_t wcb ; t#rados_watcherrcb_t errcb ; void * data ; s#page * * * preply_pages ; t#size_t * preply_len ; } 
e#rbd_lock_state enum rbd_lock_state { RBD_LOCK_STATE_UNLOCKED , RBD_LOCK_STATE_LOCKED , RBD_LOCK_STATE_RELEASING , } 
s#rbd_client_id struct rbd_client_id { t#u64 gid ; t#u64 handle ; } 
s#rbd_mapping struct rbd_mapping { t#u64 size ; t#u64 features ; } 
s#rbd_device struct rbd_device { int dev_id ; int major ; int minor ; s#gendisk * disk ; t#u32 image_format ; s#rbd_client * rbd_client ; char name [ 32 ] ; t#spinlock_t lock ; s#rbd_image_header header ; unsigned long flags ; s#rbd_spec * spec ; s#rbd_options * opts ; char * config_info ; s#ceph_object_id header_oid ; s#ceph_object_locator header_oloc ; s#ceph_file_layout layout ; s#mutex watch_mutex ; e#rbd_watch_state watch_state ; s#ceph_osd_linger_request * watch_handle ; t#u64 watch_cookie ; s#delayed_work watch_dwork ; s#rw_semaphore lock_rwsem ; e#rbd_lock_state lock_state ; char lock_cookie [ 32 ] ; s#rbd_client_id owner_cid ; s#work_struct acquired_lock_work ; s#work_struct released_lock_work ; s#delayed_work lock_dwork ; s#work_struct unlock_work ; t#wait_queue_head_t lock_waitq ; s#workqueue_struct * task_wq ; s#rbd_spec * parent_spec ; t#u64 parent_overlap ; t#atomic_t parent_ref ; s#rbd_device * parent ; s#blk_mq_tag_set tag_set ; s#rw_semaphore header_rwsem ; s#rbd_mapping mapping ; s#list_head node ; s#device dev ; unsigned long open_count ; } 
s##rbd_obj_request
t#rbd_img_callback_t typedef void ( * rbd_img_callback_t ) ( s#rbd_img_request * ) 
s#rbd_img_request struct rbd_img_request { s#rbd_device * rbd_dev ; t#u64 offset ; t#u64 length ; unsigned long flags ; t#u64 snap_id ; s#ceph_snap_context * snapc ; s#request * rq ; s#rbd_obj_request * obj_request ; void * lio_cmd_data ; t#spinlock_t completion_lock ; t#u32 next_completion ; t#rbd_img_callback_t callback ; t#u64 xferred ; t#u64 completed ; int result ; t#u32 obj_request_count ; s#list_head obj_requests ; s#kref kref ; } 
rbd_img_request_put extern void rbd_img_request_put ( s#rbd_img_request * ) 
e#obj_operation_type enum obj_operation_type { OBJ_OP_READ = 1 , OBJ_OP_WRITE , OBJ_OP_DISCARD , OBJ_OP_CMP_AND_WRITE , OBJ_OP_WRITESAME , } 
rbd_img_request_create extern s#rbd_img_request * rbd_img_request_create ( s#rbd_device * , t#u64 , t#u64 , e#obj_operation_type , s#ceph_snap_context * ) 
e#obj_request_type enum obj_request_type { OBJ_REQUEST_NODATA = 1 , OBJ_REQUEST_BIO , OBJ_REQUEST_BVECS , OBJ_REQUEST_SG , } 
rbd_img_request_fill extern int rbd_img_request_fill ( s#rbd_img_request * , e#obj_request_type , void * ) 
rbd_img_cmp_and_write_request_fill extern int rbd_img_cmp_and_write_request_fill ( s#rbd_img_request * , s#scatterlist * , t#u64 , s#scatterlist * , t#u64 ) 
rbd_img_request_submit extern int rbd_img_request_submit ( s#rbd_img_request * ) 
rbd_dev_setxattr extern int rbd_dev_setxattr ( s#rbd_device * , char * , void * , int ) 
rbd_dev_cmpsetxattr extern int rbd_dev_cmpsetxattr ( s#rbd_device * , char * , void * , int , void * , int ) 
rbd_dev_getxattr extern int rbd_dev_getxattr ( s#rbd_device * , char * , int , void * * , int * ) 

/* drivers/cdrom/cdrom.o */
s#cdrom_msf0 struct cdrom_msf0 { t#__u8 minute ; t#__u8 second ; t#__u8 frame ; } 
u#cdrom_addr union cdrom_addr { s#cdrom_msf0 msf ; int lba ; } 
s#cdrom_multisession struct cdrom_multisession { u#cdrom_addr addr ; t#__u8 xa_flag ; t#__u8 addr_format ; } 
s#cdrom_mcn struct cdrom_mcn { t#__u8 medium_catalog_number [ 14 ] ; } 
s#scsi_sense_hdr struct scsi_sense_hdr { t#u8 response_code ; t#u8 sense_key ; t#u8 asc ; t#u8 ascq ; t#u8 byte4 ; t#u8 byte5 ; t#u8 byte6 ; t#u8 additional_length ; } 
s#packet_command struct packet_command { unsigned char cmd [ 12 ] ; unsigned char * buffer ; unsigned int buflen ; int stat ; s#scsi_sense_hdr * sshdr ; unsigned char data_direction ; int quiet ; int timeout ; void * reserved [ 1 ] ; } 
s#cdrom_device_ops struct cdrom_device_ops { int ( * open ) ( s#cdrom_device_info * , int ) ; void ( * release ) ( s#cdrom_device_info * ) ; int ( * drive_status ) ( s#cdrom_device_info * , int ) ; unsigned int ( * check_events ) ( s#cdrom_device_info * , unsigned int , int ) ; int ( * media_changed ) ( s#cdrom_device_info * , int ) ; int ( * tray_move ) ( s#cdrom_device_info * , int ) ; int ( * lock_door ) ( s#cdrom_device_info * , int ) ; int ( * select_speed ) ( s#cdrom_device_info * , int ) ; int ( * select_disc ) ( s#cdrom_device_info * , int ) ; int ( * get_last_session ) ( s#cdrom_device_info * , s#cdrom_multisession * ) ; int ( * get_mcn ) ( s#cdrom_device_info * , s#cdrom_mcn * ) ; int ( * reset ) ( s#cdrom_device_info * ) ; int ( * audio_ioctl ) ( s#cdrom_device_info * , unsigned int , void * ) ; const int capability ; int ( * generic_packet ) ( s#cdrom_device_info * , s#packet_command * ) ; } 
s##device_private
s##sock
s##seq_file
s##vfsmount
s##posix_acl
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_mq_ctx
s##blkcg_gq
s##kmem_cache
s##workqueue_struct
s##blk_flush_queue
s##blk_mq_tags
s##blk_mq_alloc_data
s##blk_mq_debugfs_attr
s##blk_queue_stats
s##rq_wb
s##cgroup_subsys_state
s##blk_stat_callback
s##blk_trace
s##bsg_job
s##throtl_data
s##reclaim_state
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##swap_info_struct
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##mtd_info
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##hd_geometry
s##pr_ops
s##timer_rand_state
s##disk_events
s##badblocks
s#cdrom_device_info struct cdrom_device_info { const s#cdrom_device_ops * ops ; s#list_head list ; s#gendisk * disk ; void * handle ; int mask ; int speed ; int capacity ; unsigned int options : 30 ; unsigned mc_flags : 2 ; unsigned int vfs_events ; unsigned int ioctl_events ; int use_count ; char name [ 20 ] ; t#__u8 sanyo_slot : 2 ; t#__u8 keeplocked : 1 ; t#__u8 reserved : 5 ; int cdda_method ; t#__u8 last_sense ; t#__u8 media_written ; unsigned short mmc3_profile ; int for_data ; int ( * exit ) ( s#cdrom_device_info * ) ; int mrw_mode_page ; } 
cdrom_dummy_generic_packet extern int cdrom_dummy_generic_packet ( s#cdrom_device_info * , s#packet_command * ) 
cdrom_check_events extern unsigned int cdrom_check_events ( s#cdrom_device_info * , unsigned int ) 
cdrom_get_last_written extern int cdrom_get_last_written ( s#cdrom_device_info * , long * ) 
register_cdrom extern int register_cdrom ( s#cdrom_device_info * ) 
unregister_cdrom extern void unregister_cdrom ( s#cdrom_device_info * ) 
cdrom_open extern int cdrom_open ( s#cdrom_device_info * , s#block_device * , t#fmode_t ) 
cdrom_release extern void cdrom_release ( s#cdrom_device_info * , t#fmode_t ) 
cdrom_ioctl extern int cdrom_ioctl ( s#cdrom_device_info * , s#block_device * , t#fmode_t , unsigned int , unsigned long ) 
cdrom_media_changed extern int cdrom_media_changed ( s#cdrom_device_info * ) 
cdrom_number_of_slots extern int cdrom_number_of_slots ( s#cdrom_device_info * ) 
cdrom_mode_select extern int cdrom_mode_select ( s#cdrom_device_info * , s#packet_command * ) 
cdrom_mode_sense extern int cdrom_mode_sense ( s#cdrom_device_info * , s#packet_command * , int , int ) 
init_cdrom_command extern void init_cdrom_command ( s#packet_command * , void * , int , int ) 
s#media_event_desc struct media_event_desc { t#__u8 reserved1 : 4 ; t#__u8 media_event_code : 4 ; t#__u8 reserved2 : 6 ; t#__u8 media_present : 1 ; t#__u8 door_open : 1 ; t#__u8 start_slot ; t#__u8 end_slot ; } 
cdrom_get_media_event extern int cdrom_get_media_event ( s#cdrom_device_info * , s#media_event_desc * ) 

/* drivers/char/hw_random/core.o */
s#hwrng struct hwrng { const char * name ; int ( * init ) ( s#hwrng * ) ; void ( * cleanup ) ( s#hwrng * ) ; int ( * data_present ) ( s#hwrng * , int ) ; int ( * data_read ) ( s#hwrng * , t#u32 * ) ; int ( * read ) ( s#hwrng * , void * , t#size_t , t#bool ) ; unsigned long priv ; unsigned short quality ; s#list_head list ; s#kref ref ; s#completion cleanup_done ; } 
hwrng_register extern int hwrng_register ( s#hwrng * ) 
hwrng_unregister extern void hwrng_unregister ( s#hwrng * ) 
s##device_private
s##sock
s##vfsmount
s##posix_acl
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##bpf_prog_array
s##cgroup_taskset
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##fwnode_handle
s##iommu_group
s##iommu_fwspec
devm_hwrng_register extern int devm_hwrng_register ( s#device * , s#hwrng * ) 
devm_hwrng_unregister extern void devm_hwrng_unregister ( s#device * , s#hwrng * ) 

/* drivers/char/misc.o */
s##sock
s##vfsmount
s##posix_acl
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##fwnode_handle
s##iommu_group
s##iommu_fwspec
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s#miscdevice struct miscdevice { int minor ; const char * name ; const s#file_operations * fops ; s#list_head list ; s#device * parent ; s#device * this_device ; const s#attribute_group * * groups ; const char * nodename ; t#umode_t mode ; } 
misc_register extern int misc_register ( s#miscdevice * ) 
misc_deregister extern void misc_deregister ( s#miscdevice * ) 

/* drivers/char/random.o */
add_device_randomness extern void add_device_randomness ( const void * , unsigned int ) 
add_input_randomness extern void add_input_randomness ( unsigned int , unsigned int , unsigned int ) 
add_interrupt_randomness extern void add_interrupt_randomness ( int , int ) 
s##device_private
s##sock
s##vfsmount
s##posix_acl
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_array
s##tracer
s##trace_buffer
s##ring_buffer_iter
s##event_filter
s##bpf_prog_array
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##kmem_cache
s##fs_pin
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##ipc_namespace
s##mnt_namespace
s##net
s##cgroup_taskset
s##workqueue_struct
s##pipe_inode_info
s##swap_info_struct
s##mem_cgroup
s##mempolicy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##request_queue
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##numa_group
s##task_delay_info
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##ring_buffer
s##bpf_prog
s##ftrace_hash
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##mtd_info
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##block_device_operations
s##timer_rand_state
s##disk_events
s##badblocks
add_disk_randomness extern void add_disk_randomness ( s#gendisk * ) 
get_random_bytes extern void get_random_bytes ( void * , int ) 
wait_for_random_bytes extern int wait_for_random_bytes ( void ) 
s#random_ready_callback struct random_ready_callback { s#list_head list ; void ( * func ) ( s#random_ready_callback * ) ; s#module * owner ; } 
add_random_ready_callback extern int add_random_ready_callback ( s#random_ready_callback * ) 
del_random_ready_callback extern void del_random_ready_callback ( s#random_ready_callback * ) 
get_random_bytes_arch extern void get_random_bytes_arch ( void * , int ) 
get_random_u64 t#u64 get_random_u64 ( void ) 
get_random_u32 t#u32 get_random_u32 ( void ) 
add_hwgenerator_randomness void add_hwgenerator_randomness ( const char * , t#size_t , t#size_t ) 
add_bootloader_randomness extern void add_bootloader_randomness ( const void * , unsigned int ) 

/* drivers/char/tpm/tpm-chip.o */
s##device_private
s##sock
s##seq_file
s##vfsmount
s##posix_acl
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##nlm_lockowner
s##nfs4_lock_state
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s#tpm_class_ops struct tpm_class_ops { unsigned int flags ; const t#u8 req_complete_mask ; const t#u8 req_complete_val ; t#bool ( * req_canceled ) ( s#tpm_chip * , t#u8 ) ; int ( * recv ) ( s#tpm_chip * , t#u8 * , t#size_t ) ; int ( * send ) ( s#tpm_chip * , t#u8 * , t#size_t ) ; void ( * cancel ) ( s#tpm_chip * ) ; t#u8 ( * status ) ( s#tpm_chip * ) ; t#bool ( * update_timeouts ) ( s#tpm_chip * , unsigned long * ) ; int ( * go_idle ) ( s#tpm_chip * ) ; int ( * cmd_ready ) ( s#tpm_chip * ) ; int ( * request_locality ) ( s#tpm_chip * , int ) ; int ( * relinquish_locality ) ( s#tpm_chip * , int ) ; void ( * clk_enable ) ( s#tpm_chip * , t#bool ) ; } 
s#tpm_bios_log struct tpm_bios_log { void * bios_event_log ; void * bios_event_log_end ; } 
s##seq_operations
s#tpm_chip_seqops struct tpm_chip_seqops { s#tpm_chip * chip ; const s#seq_operations * seqops ; } 
E#TPM_NUM_EVENT_LOG_FILES 3 
s#tpm_space struct tpm_space { t#u32 context_tbl [ 3 ] ; t#u8 * context_buf ; t#u32 session_tbl [ 3 ] ; t#u8 * session_buf ; } 
s#tpm_chip struct tpm_chip { s#device dev ; s#device devs ; s#cdev cdev ; s#cdev cdevs ; s#rw_semaphore ops_sem ; const s#tpm_class_ops * ops ; s#tpm_bios_log log ; s#tpm_chip_seqops bin_log_seqops ; s#tpm_chip_seqops ascii_log_seqops ; unsigned int flags ; int dev_num ; unsigned long is_open ; char hwrng_name [ 64 ] ; s#hwrng hwrng ; s#mutex tpm_mutex ; unsigned long timeout_a ; unsigned long timeout_b ; unsigned long timeout_c ; unsigned long timeout_d ; t#bool timeout_adjusted ; unsigned long duration [ 3 ] ; t#bool duration_adjusted ; s#dentry * bios_dir [ E#TPM_NUM_EVENT_LOG_FILES ] ; const s#attribute_group * groups [ 3 ] ; unsigned int groups_cnt ; t#u16 active_banks [ 7 ] ; s#tpm_space work_space ; t#u32 nr_commands ; t#u32 * cc_attrs_tbl ; int locality ; } 
tpm_try_get_ops int tpm_try_get_ops ( s#tpm_chip * ) 
tpm_put_ops void tpm_put_ops ( s#tpm_chip * ) 
tpm_chip_alloc s#tpm_chip * tpm_chip_alloc ( s#device * , const s#tpm_class_ops * ) 
tpmm_chip_alloc s#tpm_chip * tpmm_chip_alloc ( s#device * , const s#tpm_class_ops * ) 
tpm_chip_register int tpm_chip_register ( s#tpm_chip * ) 
tpm_chip_unregister void tpm_chip_unregister ( s#tpm_chip * ) 

/* drivers/char/tpm/tpm-interface.o */
s##device_private
s##sock
s##seq_file
s##vfsmount
s##posix_acl
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##nlm_lockowner
s##nfs4_lock_state
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##seq_operations
tpm_calc_ordinal_duration unsigned long tpm_calc_ordinal_duration ( s#tpm_chip * , t#u32 ) 
tpm_transmit_cmd t#ssize_t tpm_transmit_cmd ( s#tpm_chip * , s#tpm_space * , const void * , t#size_t , t#size_t , unsigned int , const char * ) 
s#permanent_flags_t struct permanent_flags_t { t#__be16 tag ; t#u8 disable ; t#u8 ownership ; t#u8 deactivated ; t#u8 readPubek ; t#u8 disableOwnerClear ; t#u8 allowMaintenance ; t#u8 physicalPresenceLifetimeLock ; t#u8 physicalPresenceHWEnable ; t#u8 physicalPresenceCMDEnable ; t#u8 CEKPUsed ; t#u8 TPMpost ; t#u8 TPMpostLock ; t#u8 FIPS ; t#u8 operator ; t#u8 enableRevokeEK ; t#u8 nvLocked ; t#u8 readSRKPub ; t#u8 tpmEstablished ; t#u8 maintenanceDone ; t#u8 disableFullDALogicInfo ; } 
s#stclear_flags_t struct stclear_flags_t { t#__be16 tag ; t#u8 deactivated ; t#u8 disableForceClear ; t#u8 physicalPresence ; t#u8 physicalPresenceLock ; t#u8 bGlobalLock ; } 
s#tpm_version_t struct tpm_version_t { t#u8 Major ; t#u8 Minor ; t#u8 revMajor ; t#u8 revMinor ; } 
s#tpm_version_1_2_t struct tpm_version_1_2_t { t#__be16 tag ; t#u8 Major ; t#u8 Minor ; t#u8 revMajor ; t#u8 revMinor ; } 
s#timeout_t struct timeout_t { t#__be32 a ; t#__be32 b ; t#__be32 c ; t#__be32 d ; } 
s#duration_t struct duration_t { t#__be32 tpm_short ; t#__be32 tpm_medium ; t#__be32 tpm_long ; } 
t#cap_t typedef union { s#permanent_flags_t perm_flags ; s#stclear_flags_t stclear_flags ; t#__u8 owned ; t#__be32 num_pcrs ; s#tpm_version_t tpm_version ; s#tpm_version_1_2_t tpm_version_1_2 ; t#__be32 manufacturer_id ; s#timeout_t timeout ; s#duration_t duration ; } cap_t 
tpm_getcap t#ssize_t tpm_getcap ( s#tpm_chip * , t#u32 , t#cap_t * , const char * , t#size_t ) 
tpm_get_timeouts int tpm_get_timeouts ( s#tpm_chip * ) 
tpm_is_tpm2 extern int tpm_is_tpm2 ( s#tpm_chip * ) 
tpm_pcr_read extern int tpm_pcr_read ( s#tpm_chip * , int , t#u8 * ) 
tpm_pcr_extend extern int tpm_pcr_extend ( s#tpm_chip * , int , const t#u8 * ) 
tpm_do_selftest int tpm_do_selftest ( s#tpm_chip * ) 
tpm_send extern int tpm_send ( s#tpm_chip * , void * , t#size_t ) 
wait_for_tpm_stat int wait_for_tpm_stat ( s#tpm_chip * , t#u8 , unsigned long , t#wait_queue_head_t * , t#bool ) 
tpm_pm_suspend int tpm_pm_suspend ( s#device * ) 
tpm_pm_resume int tpm_pm_resume ( s#device * ) 
tpm_get_random extern int tpm_get_random ( s#tpm_chip * , t#u8 * , t#size_t ) 
s##trusted_key_payload
s##trusted_key_options
tpm_seal_trusted extern int tpm_seal_trusted ( s#tpm_chip * , s#trusted_key_payload * , s#trusted_key_options * ) 
tpm_unseal_trusted extern int tpm_unseal_trusted ( s#tpm_chip * , s#trusted_key_payload * , s#trusted_key_options * ) 

/* drivers/char/tpm/tpm2-cmd.o */
s##device_private
s##sock
s##seq_file
s##vfsmount
s##posix_acl
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##seq_operations
tpm2_get_tpm_pt t#ssize_t tpm2_get_tpm_pt ( s#tpm_chip * , t#u32 , t#u32 * , const char * ) 
tpm2_calc_ordinal_duration unsigned long tpm2_calc_ordinal_duration ( s#tpm_chip * , t#u32 ) 
tpm2_probe int tpm2_probe ( s#tpm_chip * ) 

/* drivers/connector/connector.o */
s#cb_id struct cb_id { t#__u32 idx ; t#__u32 val ; } 
s#cn_msg struct cn_msg { s#cb_id id ; t#__u32 seq ; t#__u32 ack ; t#__u16 len ; t#__u16 flags ; t#__u8 data [ 0 ] ; } 
cn_netlink_send_mult int cn_netlink_send_mult ( s#cn_msg * , t#u16 , t#u32 , t#u32 , t#gfp_t ) 
cn_netlink_send int cn_netlink_send ( s#cn_msg * , t#u32 , t#u32 , t#gfp_t ) 
s#scm_creds struct scm_creds { t#u32 pid ; t#kuid_t uid ; t#kgid_t gid ; } 
s##posix_acl
s##vfsmount
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##sec_path
s##workqueue_struct
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##l3mdev_ops
s##ndisc_ops
s##xfrm_state
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##phy_device
s##sfp_bus
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##kmem_cache
s##xt_table
s##inet_hashinfo
s##fib_notifier_ops
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##lwtunnel_state
s##rtable
s##dn_route
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##mempolicy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##request_sock_ops
s##timewait_sock_ops
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sock_reuseport
s#netlink_skb_parms struct netlink_skb_parms { s#scm_creds creds ; t#__u32 portid ; t#__u32 dst_group ; t#__u32 flags ; s#sock * sk ; t#bool nsid_is_set ; int nsid ; } 
cn_add_callback int cn_add_callback ( s#cb_id * , const char * , void ( * ) ( s#cn_msg * , s#netlink_skb_parms * ) ) 
cn_del_callback void cn_del_callback ( s#cb_id * ) 

/* drivers/dax/super.o */
dax_read_lock int dax_read_lock ( void ) 
dax_read_unlock void dax_read_unlock ( int ) 
s##posix_acl
s##sock
s##seq_file
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##hd_geometry
s##pr_ops
s##blk_mq_ctx
s##kmem_cache
s##blkcg_gq
s##blk_mq_hw_ctx
s##blk_mq_alloc_data
s##blk_mq_debugfs_attr
s##blk_queue_stats
s##rq_wb
s##blk_mq_ops
s##workqueue_struct
s##cgroup_subsys_state
s##blk_stat_callback
s##blk_trace
s##blk_flush_queue
s##bsg_job
s##throtl_data
s##blk_mq_tag_set
s##timer_rand_state
s##disk_events
s##badblocks
s##reclaim_state
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##writeback_control
s##swap_info_struct
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##mtd_info
s#vfsmount struct vfsmount { s#dentry * mnt_root ; s#super_block * mnt_sb ; int mnt_flags ; void * suse_kabi_padding ; } 
s##fsnotify_mark_connector
s##fscrypt_info
bdev_dax_pgoff int bdev_dax_pgoff ( s#block_device * , t#sector_t , t#size_t , unsigned long * ) 
s##dax_device
fs_dax_get_by_bdev s#dax_device * fs_dax_get_by_bdev ( s#block_device * ) 
__bdev_dax_supported t#bool __bdev_dax_supported ( s#block_device * , int ) 
dax_attribute_group extern s#attribute_group dax_attribute_group 
t#pfn_t typedef struct { t#u64 val ; } pfn_t 
dax_direct_access long dax_direct_access ( s#dax_device * , unsigned long , long , void * * , t#pfn_t * ) 
dax_copy_from_iter t#size_t dax_copy_from_iter ( s#dax_device * , unsigned long , void * , t#size_t , s#iov_iter * ) 
dax_copy_to_iter t#size_t dax_copy_to_iter ( s#dax_device * , unsigned long , void * , t#size_t , s#iov_iter * ) 
dax_flush void dax_flush ( s#dax_device * , void * , t#size_t ) 
dax_write_cache void dax_write_cache ( s#dax_device * , t#bool ) 
dax_write_cache_enabled t#bool dax_write_cache_enabled ( s#dax_device * ) 
dax_alive t#bool dax_alive ( s#dax_device * ) 
kill_dax void kill_dax ( s#dax_device * ) 
s#dax_operations struct dax_operations { long ( * direct_access ) ( s#dax_device * , unsigned long , long , void * * , t#pfn_t * ) ; t#size_t ( * copy_from_iter ) ( s#dax_device * , unsigned long , void * , t#size_t , s#iov_iter * ) ; t#size_t ( * copy_to_iter ) ( s#dax_device * , unsigned long , void * , t#size_t , s#iov_iter * ) ; } 
alloc_dax s#dax_device * alloc_dax ( void * , const char * , const s#dax_operations * ) 
put_dax void put_dax ( s#dax_device * ) 
dax_get_by_host s#dax_device * dax_get_by_host ( const char * ) 
inode_dax s#dax_device * inode_dax ( s#inode * ) 
dax_inode s#inode * dax_inode ( s#dax_device * ) 
dax_get_private void * dax_get_private ( s#dax_device * ) 

/* drivers/dma-buf/dma-buf.o */
s##vfsmount
s##posix_acl
s##sock
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##pipe_inode_info
s##writeback_control
s##bio_vec
s##swap_info_struct
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kmem_cache
s##mem_cgroup
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s#dma_buf_attachment struct dma_buf_attachment { s#dma_buf * dmabuf ; s#device * dev ; s#list_head node ; void * priv ; } 
s#dma_buf_ops struct dma_buf_ops { int ( * attach ) ( s#dma_buf * , s#device * , s#dma_buf_attachment * ) ; void ( * detach ) ( s#dma_buf * , s#dma_buf_attachment * ) ; s#sg_table * ( * map_dma_buf ) ( s#dma_buf_attachment * , e#dma_data_direction ) ; void ( * unmap_dma_buf ) ( s#dma_buf_attachment * , s#sg_table * , e#dma_data_direction ) ; void ( * release ) ( s#dma_buf * ) ; int ( * begin_cpu_access ) ( s#dma_buf * , e#dma_data_direction ) ; int ( * end_cpu_access ) ( s#dma_buf * , e#dma_data_direction ) ; void * ( * map_atomic ) ( s#dma_buf * , unsigned long ) ; void ( * unmap_atomic ) ( s#dma_buf * , unsigned long , void * ) ; void * ( * map ) ( s#dma_buf * , unsigned long ) ; void ( * unmap ) ( s#dma_buf * , unsigned long , void * ) ; int ( * mmap ) ( s#dma_buf * , s#vm_area_struct * ) ; void * ( * vmap ) ( s#dma_buf * ) ; void ( * vunmap ) ( s#dma_buf * , void * ) ; } 
s#ww_acquire_ctx struct ww_acquire_ctx { s#task_struct * task ; unsigned long stamp ; unsigned acquired ; } 
s#ww_mutex struct ww_mutex { s#mutex base ; s#ww_acquire_ctx * ctx ; } 
s#dma_fence_ops struct dma_fence_ops { const char * ( * get_driver_name ) ( s#dma_fence * ) ; const char * ( * get_timeline_name ) ( s#dma_fence * ) ; t#bool ( * enable_signaling ) ( s#dma_fence * ) ; t#bool ( * signaled ) ( s#dma_fence * ) ; signed long ( * wait ) ( s#dma_fence * , t#bool , signed long ) ; void ( * release ) ( s#dma_fence * ) ; void ( * fence_value_str ) ( s#dma_fence * , char * , int ) ; void ( * timeline_value_str ) ( s#dma_fence * , char * , int ) ; } 
s#dma_fence struct dma_fence { s#kref refcount ; const s#dma_fence_ops * ops ; s#callback_head rcu ; s#list_head cb_list ; t#spinlock_t * lock ; t#u64 context ; unsigned seqno ; unsigned long flags ; t#ktime_t timestamp ; int error ; } 
s#reservation_object_list struct reservation_object_list { s#callback_head rcu ; t#u32 shared_count , shared_max ; s#dma_fence * shared [ ] ; } 
s#reservation_object struct reservation_object { s#ww_mutex lock ; t#seqcount_t seq ; s#dma_fence * fence_excl ; s#reservation_object_list * fence ; s#reservation_object_list * staged ; } 
t#dma_fence_func_t typedef void ( * dma_fence_func_t ) ( s#dma_fence * , s#dma_fence_cb * ) 
s#dma_fence_cb struct dma_fence_cb { s#list_head node ; t#dma_fence_func_t func ; } 
s#dma_buf_poll_cb_t struct dma_buf_poll_cb_t { s#dma_fence_cb cb ; t#wait_queue_head_t * poll ; unsigned long active ; } 
s#dma_buf struct dma_buf { t#size_t size ; s#file * file ; s#list_head attachments ; const s#dma_buf_ops * ops ; s#mutex lock ; unsigned vmapping_counter ; void * vmap_ptr ; const char * exp_name ; s#module * owner ; s#list_head list_node ; void * priv ; s#reservation_object * resv ; t#wait_queue_head_t poll ; s#dma_buf_poll_cb_t cb_excl , cb_shared ; } 
s#dma_buf_export_info struct dma_buf_export_info { const char * exp_name ; s#module * owner ; const s#dma_buf_ops * ops ; t#size_t size ; int flags ; s#reservation_object * resv ; void * priv ; } 
dma_buf_export s#dma_buf * dma_buf_export ( const s#dma_buf_export_info * ) 
dma_buf_fd int dma_buf_fd ( s#dma_buf * , int ) 
dma_buf_get s#dma_buf * dma_buf_get ( int ) 
dma_buf_put void dma_buf_put ( s#dma_buf * ) 
dma_buf_attach s#dma_buf_attachment * dma_buf_attach ( s#dma_buf * , s#device * ) 
dma_buf_detach void dma_buf_detach ( s#dma_buf * , s#dma_buf_attachment * ) 
dma_buf_map_attachment s#sg_table * dma_buf_map_attachment ( s#dma_buf_attachment * , e#dma_data_direction ) 
dma_buf_unmap_attachment void dma_buf_unmap_attachment ( s#dma_buf_attachment * , s#sg_table * , e#dma_data_direction ) 
dma_buf_begin_cpu_access int dma_buf_begin_cpu_access ( s#dma_buf * , e#dma_data_direction ) 
dma_buf_end_cpu_access int dma_buf_end_cpu_access ( s#dma_buf * , e#dma_data_direction ) 
dma_buf_kmap_atomic void * dma_buf_kmap_atomic ( s#dma_buf * , unsigned long ) 
dma_buf_kunmap_atomic void dma_buf_kunmap_atomic ( s#dma_buf * , unsigned long , void * ) 
dma_buf_kmap void * dma_buf_kmap ( s#dma_buf * , unsigned long ) 
dma_buf_kunmap void dma_buf_kunmap ( s#dma_buf * , unsigned long , void * ) 
dma_buf_mmap int dma_buf_mmap ( s#dma_buf * , s#vm_area_struct * , unsigned long ) 
dma_buf_vmap void * dma_buf_vmap ( s#dma_buf * ) 
dma_buf_vunmap void dma_buf_vunmap ( s#dma_buf * , void * ) 

/* drivers/dma-buf/dma-fence.o */
s##static_key_mod
__tracepoint_dma_fence_emit extern s#tracepoint __tracepoint_dma_fence_emit 
__tracepoint_dma_fence_enable_signal extern s#tracepoint __tracepoint_dma_fence_enable_signal 
dma_fence_context_alloc t#u64 dma_fence_context_alloc ( unsigned ) 
dma_fence_signal_locked int dma_fence_signal_locked ( s#dma_fence * ) 
dma_fence_signal int dma_fence_signal ( s#dma_fence * ) 
dma_fence_wait_timeout signed long dma_fence_wait_timeout ( s#dma_fence * , t#bool , signed long ) 
dma_fence_release void dma_fence_release ( s#kref * ) 
dma_fence_free void dma_fence_free ( s#dma_fence * ) 
dma_fence_enable_sw_signaling void dma_fence_enable_sw_signaling ( s#dma_fence * ) 
dma_fence_add_callback int dma_fence_add_callback ( s#dma_fence * , s#dma_fence_cb * , t#dma_fence_func_t ) 
dma_fence_get_status int dma_fence_get_status ( s#dma_fence * ) 
dma_fence_remove_callback t#bool dma_fence_remove_callback ( s#dma_fence * , s#dma_fence_cb * ) 
dma_fence_default_wait signed long dma_fence_default_wait ( s#dma_fence * , t#bool , signed long ) 
dma_fence_wait_any_timeout signed long dma_fence_wait_any_timeout ( s#dma_fence * * , t#uint32_t , t#bool , signed long , t#uint32_t * ) 
dma_fence_init void dma_fence_init ( s#dma_fence * , const s#dma_fence_ops * , t#spinlock_t * , t#u64 , unsigned ) 

/* drivers/dma-buf/dma-fence-array.o */
dma_fence_array_ops extern const s#dma_fence_ops dma_fence_array_ops 
s#dma_fence_array struct dma_fence_array { s#dma_fence base ; t#spinlock_t lock ; unsigned num_fences ; t#atomic_t num_pending ; s#dma_fence * * fences ; s#irq_work work ; } 
dma_fence_array_create s#dma_fence_array * dma_fence_array_create ( int , s#dma_fence * * , t#u64 , unsigned , t#bool ) 
dma_fence_match_context t#bool dma_fence_match_context ( s#dma_fence * , t#u64 ) 

/* drivers/dma-buf/reservation.o */
s#ww_class struct ww_class { t#atomic_long_t stamp ; s#lock_class_key acquire_key ; s#lock_class_key mutex_key ; const char * acquire_name ; const char * mutex_name ; } 
reservation_ww_class extern s#ww_class reservation_ww_class 
reservation_seqcount_class extern s#lock_class_key reservation_seqcount_class 
reservation_seqcount_string extern const char reservation_seqcount_string [ ] 
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##mm_struct
s##vm_area_struct
s##compat_timespec
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##pipe_inode_info
s##page
s##task_delay_info
s##ftrace_ret_stack
s##mem_cgroup
s##uprobe_task
s##gs_cb
reservation_object_reserve_shared int reservation_object_reserve_shared ( s#reservation_object * ) 
reservation_object_add_shared_fence void reservation_object_add_shared_fence ( s#reservation_object * , s#dma_fence * ) 
reservation_object_add_excl_fence void reservation_object_add_excl_fence ( s#reservation_object * , s#dma_fence * ) 
reservation_object_copy_fences int reservation_object_copy_fences ( s#reservation_object * , s#reservation_object * ) 
reservation_object_get_fences_rcu int reservation_object_get_fences_rcu ( s#reservation_object * , s#dma_fence * * , unsigned * , s#dma_fence * * * ) 
reservation_object_wait_timeout_rcu long reservation_object_wait_timeout_rcu ( s#reservation_object * , t#bool , t#bool , unsigned long ) 
reservation_object_test_signaled_rcu t#bool reservation_object_test_signaled_rcu ( s#reservation_object * , t#bool ) 

/* drivers/dma-buf/seqno-fence.o */
seqno_fence_ops extern const s#dma_fence_ops seqno_fence_ops 

/* drivers/dma-buf/sync_file.o */
s##vfsmount
s##posix_acl
s##module
s##writeback_control
s##kstatfs
s##seq_file
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##compat_timespec
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##mem_cgroup
s##uprobe
s##gs_cb
s##iov_iter
s##swap_info_struct
s##dev_pagemap
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s#sync_file struct sync_file { s#file * file ; char user_name [ 32 ] ; s#list_head sync_file_list ; t#wait_queue_head_t wq ; unsigned long flags ; s#dma_fence * fence ; s#dma_fence_cb cb ; } 
sync_file_create s#sync_file * sync_file_create ( s#dma_fence * ) 
sync_file_get_fence s#dma_fence * sync_file_get_fence ( int ) 

/* drivers/fpga/altera-pr-ip-core.o */
s##device_private
s##sock
s##seq_file
s##vfsmount
s##posix_acl
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
alt_pr_register int alt_pr_register ( s#device * , void * ) 
alt_pr_unregister int alt_pr_unregister ( s#device * ) 

/* drivers/fpga/dfl.o */
s##sock
s##seq_file
s##vfsmount
s##posix_acl
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##device_private
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##mfd_cell
s#dfl_fpga_port_ops struct dfl_fpga_port_ops { const char * name ; s#module * owner ; s#list_head node ; int ( * get_id ) ( s#platform_device * ) ; int ( * enable_set ) ( s#platform_device * , t#bool ) ; } 
dfl_fpga_port_ops_get s#dfl_fpga_port_ops * dfl_fpga_port_ops_get ( s#platform_device * ) 
dfl_fpga_port_ops_put void dfl_fpga_port_ops_put ( s#dfl_fpga_port_ops * ) 
dfl_fpga_port_ops_add void dfl_fpga_port_ops_add ( s#dfl_fpga_port_ops * ) 
dfl_fpga_port_ops_del void dfl_fpga_port_ops_del ( s#dfl_fpga_port_ops * ) 
dfl_fpga_check_port_id int dfl_fpga_check_port_id ( s#platform_device * , void * ) 
dfl_fpga_dev_feature_uinit void dfl_fpga_dev_feature_uinit ( s#platform_device * ) 
s#dfl_feature struct dfl_feature { t#u64 id ; int resource_index ; void * ioaddr ; const s#dfl_feature_ops * ops ; } 
s#dfl_feature_ops struct dfl_feature_ops { int ( * init ) ( s#platform_device * , s#dfl_feature * ) ; void ( * uinit ) ( s#platform_device * , s#dfl_feature * ) ; long ( * ioctl ) ( s#platform_device * , s#dfl_feature * , unsigned int , unsigned long ) ; } 
s#dfl_feature_driver struct dfl_feature_driver { t#u64 id ; const s#dfl_feature_ops * ops ; } 
dfl_fpga_dev_feature_init int dfl_fpga_dev_feature_init ( s#platform_device * , s#dfl_feature_driver * ) 
dfl_fpga_dev_ops_register int dfl_fpga_dev_ops_register ( s#platform_device * , const s#file_operations * , s#module * ) 
dfl_fpga_dev_ops_unregister void dfl_fpga_dev_ops_unregister ( s#platform_device * ) 
s#dfl_fpga_enum_info struct dfl_fpga_enum_info { s#device * dev ; s#list_head dfls ; } 
dfl_fpga_enum_info_alloc s#dfl_fpga_enum_info * dfl_fpga_enum_info_alloc ( s#device * ) 
dfl_fpga_enum_info_free void dfl_fpga_enum_info_free ( s#dfl_fpga_enum_info * ) 
dfl_fpga_enum_info_add_dfl int dfl_fpga_enum_info_add_dfl ( s#dfl_fpga_enum_info * , t#resource_size_t , t#resource_size_t , void * ) 
e#fpga_mgr_states enum fpga_mgr_states { FPGA_MGR_STATE_UNKNOWN , FPGA_MGR_STATE_POWER_OFF , FPGA_MGR_STATE_POWER_UP , FPGA_MGR_STATE_RESET , FPGA_MGR_STATE_FIRMWARE_REQ , FPGA_MGR_STATE_FIRMWARE_REQ_ERR , FPGA_MGR_STATE_WRITE_INIT , FPGA_MGR_STATE_WRITE_INIT_ERR , FPGA_MGR_STATE_WRITE , FPGA_MGR_STATE_WRITE_ERR , FPGA_MGR_STATE_WRITE_COMPLETE , FPGA_MGR_STATE_WRITE_COMPLETE_ERR , FPGA_MGR_STATE_OPERATING , } 
s#fpga_compat_id struct fpga_compat_id { t#u64 id_h ; t#u64 id_l ; } 
s##sg_table
s#fpga_image_info struct fpga_image_info { t#u32 flags ; t#u32 enable_timeout_us ; t#u32 disable_timeout_us ; t#u32 config_complete_timeout_us ; char * firmware_name ; s#sg_table * sgt ; const char * buf ; t#size_t count ; int region_id ; s#device * dev ; } 
s#fpga_manager_ops struct fpga_manager_ops { t#size_t initial_header_size ; e#fpga_mgr_states ( * state ) ( s#fpga_manager * ) ; t#u64 ( * status ) ( s#fpga_manager * ) ; int ( * write_init ) ( s#fpga_manager * , s#fpga_image_info * , const char * , t#size_t ) ; int ( * write ) ( s#fpga_manager * , const char * , t#size_t ) ; int ( * write_sg ) ( s#fpga_manager * , s#sg_table * ) ; int ( * write_complete ) ( s#fpga_manager * , s#fpga_image_info * ) ; void ( * fpga_remove ) ( s#fpga_manager * ) ; const s#attribute_group * * groups ; } 
s#fpga_manager struct fpga_manager { const char * name ; s#device dev ; s#mutex ref_mutex ; e#fpga_mgr_states state ; s#fpga_compat_id * compat_id ; const s#fpga_manager_ops * mops ; void * priv ; } 
s#fpga_region struct fpga_region { s#device dev ; s#mutex mutex ; s#list_head bridge_list ; s#fpga_manager * mgr ; s#fpga_image_info * info ; s#fpga_compat_id * compat_id ; void * priv ; int ( * get_bridges ) ( s#fpga_region * ) ; } 
s#dfl_fpga_cdev struct dfl_fpga_cdev { s#device * parent ; s#fpga_region * region ; s#device * fme_dev ; s#mutex lock ; s#list_head port_dev_list ; } 
dfl_fpga_feature_devs_enumerate s#dfl_fpga_cdev * dfl_fpga_feature_devs_enumerate ( s#dfl_fpga_enum_info * ) 
dfl_fpga_feature_devs_remove void dfl_fpga_feature_devs_remove ( s#dfl_fpga_cdev * ) 
__dfl_fpga_cdev_find_port s#platform_device * __dfl_fpga_cdev_find_port ( s#dfl_fpga_cdev * , void * , int ( * ) ( s#platform_device * , void * ) ) 

/* drivers/fpga/fpga-bridge.o */
s##device_private
s##sock
s##seq_file
s##vfsmount
s##posix_acl
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##iommu_group
s##iommu_fwspec
s#fpga_bridge_ops struct fpga_bridge_ops { int ( * enable_show ) ( s#fpga_bridge * ) ; int ( * enable_set ) ( s#fpga_bridge * , t#bool ) ; void ( * fpga_bridge_remove ) ( s#fpga_bridge * ) ; const s#attribute_group * * groups ; } 
s##sg_table
s#fpga_bridge struct fpga_bridge { const char * name ; s#device dev ; s#mutex mutex ; const s#fpga_bridge_ops * br_ops ; s#fpga_image_info * info ; s#list_head node ; void * priv ; } 
fpga_bridge_enable int fpga_bridge_enable ( s#fpga_bridge * ) 
fpga_bridge_disable int fpga_bridge_disable ( s#fpga_bridge * ) 
of_fpga_bridge_get s#fpga_bridge * of_fpga_bridge_get ( s#device_node * , s#fpga_image_info * ) 
fpga_bridge_get s#fpga_bridge * fpga_bridge_get ( s#device * , s#fpga_image_info * ) 
fpga_bridge_put void fpga_bridge_put ( s#fpga_bridge * ) 
fpga_bridges_enable int fpga_bridges_enable ( s#list_head * ) 
fpga_bridges_disable int fpga_bridges_disable ( s#list_head * ) 
fpga_bridges_put void fpga_bridges_put ( s#list_head * ) 
of_fpga_bridge_get_to_list int of_fpga_bridge_get_to_list ( s#device_node * , s#fpga_image_info * , s#list_head * ) 
fpga_bridge_get_to_list int fpga_bridge_get_to_list ( s#device * , s#fpga_image_info * , s#list_head * ) 
fpga_bridge_create s#fpga_bridge * fpga_bridge_create ( s#device * , const char * , const s#fpga_bridge_ops * , void * ) 
fpga_bridge_free void fpga_bridge_free ( s#fpga_bridge * ) 
fpga_bridge_register int fpga_bridge_register ( s#fpga_bridge * ) 
fpga_bridge_unregister void fpga_bridge_unregister ( s#fpga_bridge * ) 

/* drivers/fpga/fpga-mgr.o */
s##device_private
s##sock
s##seq_file
s##vfsmount
s##posix_acl
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##iommu_group
s##iommu_fwspec
fpga_image_info_alloc s#fpga_image_info * fpga_image_info_alloc ( s#device * ) 
fpga_image_info_free void fpga_image_info_free ( s#fpga_image_info * ) 
fpga_mgr_load int fpga_mgr_load ( s#fpga_manager * , s#fpga_image_info * ) 
fpga_mgr_get s#fpga_manager * fpga_mgr_get ( s#device * ) 
of_fpga_mgr_get s#fpga_manager * of_fpga_mgr_get ( s#device_node * ) 
fpga_mgr_put void fpga_mgr_put ( s#fpga_manager * ) 
fpga_mgr_lock int fpga_mgr_lock ( s#fpga_manager * ) 
fpga_mgr_unlock void fpga_mgr_unlock ( s#fpga_manager * ) 
fpga_mgr_create s#fpga_manager * fpga_mgr_create ( s#device * , const char * , const s#fpga_manager_ops * , void * ) 
fpga_mgr_free void fpga_mgr_free ( s#fpga_manager * ) 
fpga_mgr_register int fpga_mgr_register ( s#fpga_manager * ) 
fpga_mgr_unregister void fpga_mgr_unregister ( s#fpga_manager * ) 

/* drivers/fpga/fpga-region.o */
s##device_private
s##sock
s##seq_file
s##vfsmount
s##posix_acl
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##fwnode_handle
s##iommu_group
s##iommu_fwspec
s##sg_table
fpga_region_class_find s#fpga_region * fpga_region_class_find ( s#device * , const void * , int ( * ) ( s#device * , const void * ) ) 
fpga_region_program_fpga int fpga_region_program_fpga ( s#fpga_region * ) 
fpga_region_create s#fpga_region * fpga_region_create ( s#device * , s#fpga_manager * , int ( * ) ( s#fpga_region * ) ) 
fpga_region_free void fpga_region_free ( s#fpga_region * ) 
fpga_region_register int fpga_region_register ( s#fpga_region * ) 
fpga_region_unregister void fpga_region_unregister ( s#fpga_region * ) 

/* drivers/gpu/drm/ati_pcigart.o */
s##device_private
s##sock
s##vfsmount
s##posix_acl
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##nlm_lockowner
s##nfs4_lock_state
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##iommu_group
s##iommu_fwspec
s#drm_hw_lock struct drm_hw_lock { __volatile__ unsigned int lock ; char padding [ 60 ] ; } 
s#drm_lock_data struct drm_lock_data { s#drm_hw_lock * hw_lock ; s#drm_file * file_priv ; t#wait_queue_head_t lock_queue ; unsigned long lock_time ; t#spinlock_t spinlock ; t#uint32_t kernel_waiters ; t#uint32_t user_waiters ; int idle_has_lock ; } 
s#drm_master struct drm_master { s#kref refcount ; s#drm_device * dev ; char * unique ; int unique_len ; s#idr magic_map ; s#drm_lock_data lock ; void * driver_priv ; s#drm_master * lessor ; int lessee_id ; s#list_head lessee_list ; s#list_head lessees ; s#idr leases ; s#idr lessee_idr ; } 
t#drm_magic_t typedef unsigned int drm_magic_t 
s#drm_minor struct drm_minor { int index ; int type ; s#device * kdev ; s#drm_device * dev ; s#dentry * debugfs_root ; s#list_head debugfs_list ; s#mutex debugfs_lock ; } 
s#drm_prime_file_private struct drm_prime_file_private { s#mutex lock ; s#rb_root dmabufs ; s#rb_root handles ; } 
s#drm_file struct drm_file { unsigned authenticated : 1 ; unsigned stereo_allowed : 1 ; unsigned universal_planes : 1 ; unsigned atomic : 1 ; unsigned aspect_ratio_allowed : 1 ; unsigned writeback_connectors : 1 ; unsigned is_master : 1 ; s#drm_master * master ; s#pid * pid ; t#drm_magic_t magic ; s#list_head lhead ; s#drm_minor * minor ; s#idr object_idr ; t#spinlock_t table_lock ; s#idr syncobj_idr ; t#spinlock_t syncobj_table_lock ; s#file * filp ; void * driver_priv ; s#list_head fbs ; s#mutex fbs_lock ; s#list_head blobs ; t#wait_queue_head_t event_wait ; s#list_head pending_event_list ; s#list_head event_list ; int event_space ; s#mutex event_read_lock ; s#drm_prime_file_private prime ; unsigned long lock_count ; } 
s#drm_property struct drm_property { s#list_head head ; s#drm_mode_object base ; t#uint32_t flags ; char name [ 32 ] ; t#uint32_t num_values ; t#uint64_t * values ; s#drm_device * dev ; s#list_head enum_list ; } 
s#drm_object_properties struct drm_object_properties { int count ; s#drm_property * properties [ 24 ] ; t#uint64_t values [ 24 ] ; } 
s#drm_mode_object struct drm_mode_object { t#uint32_t id ; t#uint32_t type ; s#drm_object_properties * properties ; s#kref refcount ; void ( * free_cb ) ( s#kref * ) ; } 
e#drm_mode_status enum drm_mode_status { MODE_OK = 0 , MODE_HSYNC , MODE_VSYNC , MODE_H_ILLEGAL , MODE_V_ILLEGAL , MODE_BAD_WIDTH , MODE_NOMODE , MODE_NO_INTERLACE , MODE_NO_DBLESCAN , MODE_NO_VSCAN , MODE_MEM , MODE_VIRTUAL_X , MODE_VIRTUAL_Y , MODE_MEM_VIRT , MODE_NOCLOCK , MODE_CLOCK_HIGH , MODE_CLOCK_LOW , MODE_CLOCK_RANGE , MODE_BAD_HVALUE , MODE_BAD_VVALUE , MODE_BAD_VSCAN , MODE_HSYNC_NARROW , MODE_HSYNC_WIDE , MODE_HBLANK_NARROW , MODE_HBLANK_WIDE , MODE_VSYNC_NARROW , MODE_VSYNC_WIDE , MODE_VBLANK_NARROW , MODE_VBLANK_WIDE , MODE_PANEL , MODE_INTERLACE_WIDTH , MODE_ONE_WIDTH , MODE_ONE_HEIGHT , MODE_ONE_SIZE , MODE_NO_REDUCED , MODE_NO_STEREO , MODE_NO_420 , MODE_STALE = - 3 , MODE_BAD = - 2 , MODE_ERROR = - 1 } 
e#hdmi_picture_aspect enum hdmi_picture_aspect { HDMI_PICTURE_ASPECT_NONE , HDMI_PICTURE_ASPECT_4_3 , HDMI_PICTURE_ASPECT_16_9 , HDMI_PICTURE_ASPECT_64_27 , HDMI_PICTURE_ASPECT_256_135 , HDMI_PICTURE_ASPECT_RESERVED , } 
s#drm_display_mode struct drm_display_mode { s#list_head head ; s#drm_mode_object base ; char name [ 32 ] ; e#drm_mode_status status ; unsigned int type ; int clock ; int hdisplay ; int hsync_start ; int hsync_end ; int htotal ; int hskew ; int vdisplay ; int vsync_start ; int vsync_end ; int vtotal ; int vscan ; unsigned int flags ; int width_mm ; int height_mm ; int crtc_clock ; int crtc_hdisplay ; int crtc_hblank_start ; int crtc_hblank_end ; int crtc_hsync_start ; int crtc_hsync_end ; int crtc_htotal ; int crtc_hskew ; int crtc_vdisplay ; int crtc_vblank_start ; int crtc_vblank_end ; int crtc_vsync_start ; int crtc_vsync_end ; int crtc_vtotal ; int * private ; int private_flags ; int vrefresh ; int hsync ; e#hdmi_picture_aspect picture_aspect_ratio ; s#list_head export_head ; } 
e#irqreturn enum irqreturn { IRQ_NONE = ( 0 << 0 ) , IRQ_HANDLED = ( 1 << 0 ) , IRQ_WAKE_THREAD = ( 1 << 1 ) , } 
t#irqreturn_t typedef e#irqreturn irqreturn_t 
s##drm_gem_object
s#va_format struct va_format { const char * fmt ; t#va_list * va ; } 
s#drm_printer struct drm_printer { void ( * printfn ) ( s#drm_printer * , s#va_format * ) ; void ( * puts ) ( s#drm_printer * , const char * ) ; void * arg ; const char * prefix ; } 
s##dma_buf
s##reservation_object
s##dma_buf_attachment
s#drm_mode_create_dumb struct drm_mode_create_dumb { t#__u32 height ; t#__u32 width ; t#__u32 bpp ; t#__u32 flags ; t#__u32 handle ; t#__u32 pitch ; t#__u64 size ; } 
e#drm_ioctl_flags enum drm_ioctl_flags { DRM_AUTH = ( 1UL << ( 0 ) ) , DRM_MASTER = ( 1UL << ( 1 ) ) , DRM_ROOT_ONLY = ( 1UL << ( 2 ) ) , DRM_UNLOCKED = ( 1UL << ( 4 ) ) , DRM_RENDER_ALLOW = ( 1UL << ( 5 ) ) , } 
t#drm_ioctl_t typedef int drm_ioctl_t ( s#drm_device * , void * , s#drm_file * ) 
s#drm_ioctl_desc struct drm_ioctl_desc { unsigned int cmd ; e#drm_ioctl_flags flags ; t#drm_ioctl_t * func ; const char * name ; } 
s#drm_driver struct drm_driver { int ( * load ) ( s#drm_device * , unsigned long ) ; int ( * open ) ( s#drm_device * , s#drm_file * ) ; void ( * postclose ) ( s#drm_device * , s#drm_file * ) ; void ( * lastclose ) ( s#drm_device * ) ; void ( * unload ) ( s#drm_device * ) ; void ( * release ) ( s#drm_device * ) ; t#u32 ( * get_vblank_counter ) ( s#drm_device * , unsigned int ) ; int ( * enable_vblank ) ( s#drm_device * , unsigned int ) ; void ( * disable_vblank ) ( s#drm_device * , unsigned int ) ; t#bool ( * get_scanout_position ) ( s#drm_device * , unsigned int , t#bool , int * , int * , t#ktime_t * , t#ktime_t * , const s#drm_display_mode * ) ; t#bool ( * get_vblank_timestamp ) ( s#drm_device * , unsigned int , int * , t#ktime_t * , t#bool ) ; t#irqreturn_t ( * irq_handler ) ( int , void * ) ; void ( * irq_preinstall ) ( s#drm_device * ) ; int ( * irq_postinstall ) ( s#drm_device * ) ; void ( * irq_uninstall ) ( s#drm_device * ) ; int ( * master_create ) ( s#drm_device * , s#drm_master * ) ; void ( * master_destroy ) ( s#drm_device * , s#drm_master * ) ; int ( * master_set ) ( s#drm_device * , s#drm_file * , t#bool ) ; void ( * master_drop ) ( s#drm_device * , s#drm_file * ) ; int ( * debugfs_init ) ( s#drm_minor * ) ; void ( * gem_free_object ) ( s#drm_gem_object * ) ; void ( * gem_free_object_unlocked ) ( s#drm_gem_object * ) ; int ( * gem_open_object ) ( s#drm_gem_object * , s#drm_file * ) ; void ( * gem_close_object ) ( s#drm_gem_object * , s#drm_file * ) ; void ( * gem_print_info ) ( s#drm_printer * , unsigned int , const s#drm_gem_object * ) ; s#drm_gem_object * ( * gem_create_object ) ( s#drm_device * , t#size_t ) ; int ( * prime_handle_to_fd ) ( s#drm_device * , s#drm_file * , t#uint32_t , t#uint32_t , int * ) ; int ( * prime_fd_to_handle ) ( s#drm_device * , s#drm_file * , int , t#uint32_t * ) ; s#dma_buf * ( * gem_prime_export ) ( s#drm_device * , s#drm_gem_object * , int ) ; s#drm_gem_object * ( * gem_prime_import ) ( s#drm_device * , s#dma_buf * ) ; int ( * gem_prime_pin ) ( s#drm_gem_object * ) ; void ( * gem_prime_unpin ) ( s#drm_gem_object * ) ; s#reservation_object * ( * gem_prime_res_obj ) ( s#drm_gem_object * ) ; s#sg_table * ( * gem_prime_get_sg_table ) ( s#drm_gem_object * ) ; s#drm_gem_object * ( * gem_prime_import_sg_table ) ( s#drm_device * , s#dma_buf_attachment * , s#sg_table * ) ; void * ( * gem_prime_vmap ) ( s#drm_gem_object * ) ; void ( * gem_prime_vunmap ) ( s#drm_gem_object * , void * ) ; int ( * gem_prime_mmap ) ( s#drm_gem_object * , s#vm_area_struct * ) ; int ( * dumb_create ) ( s#drm_file * , s#drm_device * , s#drm_mode_create_dumb * ) ; int ( * dumb_map_offset ) ( s#drm_file * , s#drm_device * , t#uint32_t , t#uint64_t * ) ; int ( * dumb_destroy ) ( s#drm_file * , s#drm_device * , t#uint32_t ) ; const s#vm_operations_struct * gem_vm_ops ; int major ; int minor ; int patchlevel ; char * name ; char * desc ; char * date ; t#u32 driver_features ; const s#drm_ioctl_desc * ioctls ; int num_ioctls ; const s#file_operations * fops ; s#list_head legacy_dev_list ; int ( * firstopen ) ( s#drm_device * ) ; void ( * preclose ) ( s#drm_device * , s#drm_file * ) ; int ( * dma_ioctl ) ( s#drm_device * , void * , s#drm_file * ) ; int ( * dma_quiescent ) ( s#drm_device * ) ; int ( * context_dtor ) ( s#drm_device * , int ) ; int dev_priv_size ; } 
s#drm_open_hash struct drm_open_hash { s#hlist_head * table ; t#u8 order ; } 
s#drm_buf struct drm_buf { int idx ; int total ; int order ; int used ; unsigned long offset ; void * address ; unsigned long bus_address ; s#drm_buf * next ; __volatile__ int waiting ; __volatile__ int pending ; s#drm_file * file_priv ; int context ; int while_locked ; enum { DRM_LIST_NONE = 0 , DRM_LIST_FREE = 1 , DRM_LIST_WAIT = 2 , DRM_LIST_PEND = 3 , DRM_LIST_PRIO = 4 , DRM_LIST_RECLAIM = 5 } list ; int dev_priv_size ; void * dev_private ; } 
s#drm_dma_handle struct drm_dma_handle { t#dma_addr_t busaddr ; void * vaddr ; t#size_t size ; } 
s#drm_buf_entry struct drm_buf_entry { int buf_size ; int buf_count ; s#drm_buf * buflist ; int seg_count ; int page_order ; s#drm_dma_handle * * seglist ; int low_mark ; int high_mark ; } 
s#drm_device_dma struct drm_device_dma { s#drm_buf_entry bufs [ 22 + 1 ] ; int buf_count ; s#drm_buf * * buflist ; int seg_count ; int page_count ; unsigned long * pagelist ; unsigned long byte_count ; enum { _DRM_DMA_USE_AGP = 0x01 , _DRM_DMA_USE_SG = 0x02 , _DRM_DMA_USE_FB = 0x04 , _DRM_DMA_USE_PCI_RO = 0x08 } flags ; } 
s#drm_vblank_crtc struct drm_vblank_crtc { s#drm_device * dev ; t#wait_queue_head_t queue ; s#timer_list disable_timer ; t#seqlock_t seqlock ; t#u64 count ; t#ktime_t time ; t#atomic_t refcount ; t#u32 last ; unsigned int inmodeset ; unsigned int pipe ; int framedur_ns ; int linedur_ns ; s#drm_display_mode hwmode ; t#bool enabled ; } 
s#agp_version struct agp_version { t#u16 major ; t#u16 minor ; } 
s##msi_controller
s##proc_dir_entry
s##hotplug_slot
s##pci_vpd
s##pci_sriov
e#chipset_type enum chipset_type { NOT_SUPPORTED , SUPPORTED , } 
s#agp_kern_info struct agp_kern_info { s#agp_version version ; s#pci_dev * device ; e#chipset_type chipset ; unsigned long mode ; unsigned long aper_base ; t#size_t aper_size ; int max_memory ; int current_memory ; t#bool cant_use_aperture ; unsigned long page_mask ; const s#vm_operations_struct * vm_ops ; } 
s##agp_bridge_data
s#drm_agp_head struct drm_agp_head { s#agp_kern_info agp_info ; s#list_head memory ; unsigned long mode ; s#agp_bridge_data * bridge ; int enabled ; int acquired ; unsigned long base ; int agp_mtrr ; int cant_use_aperture ; unsigned long page_mask ; } 
s#drm_sg_mem struct drm_sg_mem { unsigned long handle ; void * virtual ; int pages ; s#page * * pagelist ; t#dma_addr_t * busaddr ; } 
e#drm_map_type enum drm_map_type { _DRM_FRAME_BUFFER = 0 , _DRM_REGISTERS = 1 , _DRM_SHM = 2 , _DRM_AGP = 3 , _DRM_SCATTER_GATHER = 4 , _DRM_CONSISTENT = 5 } 
e#drm_map_flags enum drm_map_flags { _DRM_RESTRICTED = 0x01 , _DRM_READ_ONLY = 0x02 , _DRM_LOCKED = 0x04 , _DRM_KERNEL = 0x08 , _DRM_WRITE_COMBINING = 0x10 , _DRM_CONTAINS_LOCK = 0x20 , _DRM_REMOVABLE = 0x40 , _DRM_DRIVER = 0x80 } 
s#drm_local_map struct drm_local_map { t#resource_size_t offset ; unsigned long size ; e#drm_map_type type ; e#drm_map_flags flags ; void * handle ; int mtrr ; } 
s#drm_modeset_lock struct drm_modeset_lock { s#ww_mutex mutex ; s#list_head head ; } 
s#drm_modeset_acquire_ctx struct drm_modeset_acquire_ctx { s#ww_acquire_ctx ww_ctx ; s#drm_modeset_lock * contended ; s#list_head locked ; t#bool trylock_only ; t#bool interruptible ; } 
s#ida struct ida { s#radix_tree_root ida_rt ; } 
s#drm_format_info struct drm_format_info { t#u32 format ; t#u8 depth ; t#u8 num_planes ; t#u8 cpp [ 3 ] ; t#u8 hsub ; t#u8 vsub ; t#bool has_alpha ; t#bool is_yuv ; } 
s#drm_clip_rect struct drm_clip_rect { unsigned short x1 ; unsigned short y1 ; unsigned short x2 ; unsigned short y2 ; } 
s#drm_framebuffer_funcs struct drm_framebuffer_funcs { void ( * destroy ) ( s#drm_framebuffer * ) ; int ( * create_handle ) ( s#drm_framebuffer * , s#drm_file * , unsigned int * ) ; int ( * dirty ) ( s#drm_framebuffer * , s#drm_file * , unsigned , unsigned , s#drm_clip_rect * , unsigned ) ; } 
s#drm_framebuffer struct drm_framebuffer { s#drm_device * dev ; s#list_head head ; s#drm_mode_object base ; char comm [ 16 ] ; const s#drm_format_info * format ; const s#drm_framebuffer_funcs * funcs ; unsigned int pitches [ 4 ] ; unsigned int offsets [ 4 ] ; t#uint64_t modifier ; unsigned int width ; unsigned int height ; int flags ; int hot_x ; int hot_y ; s#list_head filp_head ; s#drm_gem_object * obj [ 4 ] ; } 
s#drm_mode_fb_cmd2 struct drm_mode_fb_cmd2 { t#__u32 fb_id ; t#__u32 width ; t#__u32 height ; t#__u32 pixel_format ; t#__u32 flags ; t#__u32 handles [ 4 ] ; t#__u32 pitches [ 4 ] ; t#__u32 offsets [ 4 ] ; t#__u64 modifier [ 4 ] ; } 
s##drm_atomic_state
s#drm_mode_config_funcs struct drm_mode_config_funcs { s#drm_framebuffer * ( * fb_create ) ( s#drm_device * , s#drm_file * , const s#drm_mode_fb_cmd2 * ) ; const s#drm_format_info * ( * get_format_info ) ( const s#drm_mode_fb_cmd2 * ) ; void ( * output_poll_changed ) ( s#drm_device * ) ; e#drm_mode_status ( * mode_valid ) ( s#drm_device * , const s#drm_display_mode * ) ; int ( * atomic_check ) ( s#drm_device * , s#drm_atomic_state * ) ; int ( * atomic_commit ) ( s#drm_device * , s#drm_atomic_state * , t#bool ) ; s#drm_atomic_state * ( * atomic_state_alloc ) ( s#drm_device * ) ; void ( * atomic_state_clear ) ( s#drm_atomic_state * ) ; void ( * atomic_state_free ) ( s#drm_atomic_state * ) ; } 
s##drm_mode_config_helper_funcs
s#drm_mode_config struct drm_mode_config { s#mutex mutex ; s#drm_modeset_lock connection_mutex ; s#drm_modeset_acquire_ctx * acquire_ctx ; s#mutex idr_mutex ; s#idr crtc_idr ; s#idr tile_idr ; s#mutex fb_lock ; int num_fb ; s#list_head fb_list ; t#spinlock_t connector_list_lock ; int num_connector ; s#ida connector_ida ; s#list_head connector_list ; s#llist_head connector_free_list ; s#work_struct connector_free_work ; int num_encoder ; s#list_head encoder_list ; int num_total_plane ; s#list_head plane_list ; int num_crtc ; s#list_head crtc_list ; s#list_head property_list ; int min_width , min_height ; int max_width , max_height ; const s#drm_mode_config_funcs * funcs ; t#resource_size_t fb_base ; t#bool poll_enabled ; t#bool poll_running ; t#bool delayed_event ; s#delayed_work output_poll_work ; s#mutex blob_lock ; s#list_head property_blob_list ; s#drm_property * edid_property ; s#drm_property * dpms_property ; s#drm_property * path_property ; s#drm_property * tile_property ; s#drm_property * link_status_property ; s#drm_property * plane_type_property ; s#drm_property * prop_src_x ; s#drm_property * prop_src_y ; s#drm_property * prop_src_w ; s#drm_property * prop_src_h ; s#drm_property * prop_crtc_x ; s#drm_property * prop_crtc_y ; s#drm_property * prop_crtc_w ; s#drm_property * prop_crtc_h ; s#drm_property * prop_fb_id ; s#drm_property * prop_in_fence_fd ; s#drm_property * prop_out_fence_ptr ; s#drm_property * prop_crtc_id ; s#drm_property * prop_active ; s#drm_property * prop_mode_id ; s#drm_property * dvi_i_subconnector_property ; s#drm_property * dvi_i_select_subconnector_property ; s#drm_property * tv_subconnector_property ; s#drm_property * tv_select_subconnector_property ; s#drm_property * tv_mode_property ; s#drm_property * tv_left_margin_property ; s#drm_property * tv_right_margin_property ; s#drm_property * tv_top_margin_property ; s#drm_property * tv_bottom_margin_property ; s#drm_property * tv_brightness_property ; s#drm_property * tv_contrast_property ; s#drm_property * tv_flicker_reduction_property ; s#drm_property * tv_overscan_property ; s#drm_property * tv_saturation_property ; s#drm_property * tv_hue_property ; s#drm_property * scaling_mode_property ; s#drm_property * aspect_ratio_property ; s#drm_property * content_type_property ; s#drm_property * degamma_lut_property ; s#drm_property * degamma_lut_size_property ; s#drm_property * ctm_property ; s#drm_property * gamma_lut_property ; s#drm_property * gamma_lut_size_property ; s#drm_property * suggested_x_property ; s#drm_property * suggested_y_property ; s#drm_property * non_desktop_property ; s#drm_property * panel_orientation_property ; s#drm_property * writeback_fb_id_property ; s#drm_property * writeback_pixel_formats_property ; s#drm_property * writeback_out_fence_ptr_property ; t#uint32_t preferred_depth , prefer_shadow ; t#bool async_page_flip ; t#bool allow_fb_modifiers ; t#bool normalize_zpos ; s#drm_property * modifiers_property ; t#uint32_t cursor_width , cursor_height ; s#drm_atomic_state * suspend_state ; const s#drm_mode_config_helper_funcs * helper_private ; } 
s##drm_vma_offset_manager
s##drm_fb_helper
s#drm_device struct drm_device { s#list_head legacy_dev_list ; int if_version ; s#kref ref ; s#device * dev ; s#drm_driver * driver ; void * dev_private ; s#drm_minor * primary ; s#drm_minor * render ; t#bool registered ; s#drm_master * master ; t#bool unplugged ; s#inode * anon_inode ; char * unique ; s#mutex struct_mutex ; s#mutex master_mutex ; int open_count ; t#spinlock_t buf_lock ; int buf_use ; t#atomic_t buf_alloc ; s#mutex filelist_mutex ; s#list_head filelist ; s#list_head filelist_internal ; s#mutex clientlist_mutex ; s#list_head clientlist ; s#list_head maplist ; s#drm_open_hash map_hash ; s#list_head ctxlist ; s#mutex ctxlist_mutex ; s#idr ctx_idr ; s#list_head vmalist ; s#drm_device_dma * dma ; __volatile__ long context_flag ; int last_context ; t#bool irq_enabled ; int irq ; t#bool vblank_disable_immediate ; s#drm_vblank_crtc * vblank ; t#spinlock_t vblank_time_lock ; t#spinlock_t vbl_lock ; t#u32 max_vblank_count ; s#list_head vblank_event_list ; t#spinlock_t event_lock ; s#drm_agp_head * agp ; s#pci_dev * pdev ; s#drm_sg_mem * sg ; unsigned int num_crtcs ; struct { int context ; s#drm_hw_lock * lock ; } sigdata ; s#drm_local_map * agp_buffer_map ; unsigned int agp_buffer_token ; s#drm_mode_config mode_config ; s#mutex object_name_lock ; s#idr object_name_idr ; s#drm_vma_offset_manager * vma_offset_manager ; int switch_power_state ; s#drm_fb_helper * fb_helper ; } 
s#drm_ati_pcigart_info struct drm_ati_pcigart_info { int gart_table_location ; int gart_reg_if ; void * addr ; t#dma_addr_t bus_addr ; t#dma_addr_t table_mask ; s#drm_dma_handle * table_handle ; s#drm_local_map mapping ; int table_size ; } 
drm_ati_pcigart_cleanup extern int drm_ati_pcigart_cleanup ( s#drm_device * , s#drm_ati_pcigart_info * ) 
drm_ati_pcigart_init extern int drm_ati_pcigart_init ( s#drm_device * , s#drm_ati_pcigart_info * ) 

/* drivers/gpu/drm/bridge/panel.o */
s##device_private
s##sock
s##vfsmount
s##posix_acl
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##nlm_lockowner
s##nfs4_lock_state
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##iommu_group
s##iommu_fwspec
s##drm_master
s##drm_gem_object
s##dma_buf
s##reservation_object
s##dma_buf_attachment
s##drm_device_dma
s##msi_controller
s##proc_dir_entry
s##hotplug_slot
s##pci_vpd
s##pci_sriov
s##agp_bridge_data
s##drm_sg_mem
s##drm_local_map
s##drm_atomic_state
s#drm_mode_config_helper_funcs struct drm_mode_config_helper_funcs { void ( * atomic_commit_tail ) ( s#drm_atomic_state * ) ; } 
s##drm_vma_offset_manager
s##drm_fb_helper
e#drm_color_encoding enum drm_color_encoding { DRM_COLOR_YCBCR_BT601 , DRM_COLOR_YCBCR_BT709 , DRM_COLOR_YCBCR_BT2020 , DRM_COLOR_ENCODING_MAX , } 
e#drm_color_range enum drm_color_range { DRM_COLOR_YCBCR_LIMITED_RANGE , DRM_COLOR_YCBCR_FULL_RANGE , DRM_COLOR_RANGE_MAX , } 
s#drm_rect struct drm_rect { int x1 , y1 , x2 , y2 ; } 
s##drm_crtc_commit
s#drm_plane_state struct drm_plane_state { s#drm_plane * plane ; s#drm_crtc * crtc ; s#drm_framebuffer * fb ; s#dma_fence * fence ; t#int32_t crtc_x ; t#int32_t crtc_y ; t#uint32_t crtc_w , crtc_h ; t#uint32_t src_x ; t#uint32_t src_y ; t#uint32_t src_h , src_w ; t#u16 alpha ; unsigned int rotation ; unsigned int zpos ; unsigned int normalized_zpos ; e#drm_color_encoding color_encoding ; e#drm_color_range color_range ; s#drm_rect src , dst ; t#bool visible ; s#drm_crtc_commit * commit ; s#drm_atomic_state * state ; } 
s#drm_plane_funcs struct drm_plane_funcs { int ( * update_plane ) ( s#drm_plane * , s#drm_crtc * , s#drm_framebuffer * , int , int , unsigned int , unsigned int , t#uint32_t , t#uint32_t , t#uint32_t , t#uint32_t , s#drm_modeset_acquire_ctx * ) ; int ( * disable_plane ) ( s#drm_plane * , s#drm_modeset_acquire_ctx * ) ; void ( * destroy ) ( s#drm_plane * ) ; void ( * reset ) ( s#drm_plane * ) ; int ( * set_property ) ( s#drm_plane * , s#drm_property * , t#uint64_t ) ; s#drm_plane_state * ( * atomic_duplicate_state ) ( s#drm_plane * ) ; void ( * atomic_destroy_state ) ( s#drm_plane * , s#drm_plane_state * ) ; int ( * atomic_set_property ) ( s#drm_plane * , s#drm_plane_state * , s#drm_property * , t#uint64_t ) ; int ( * atomic_get_property ) ( s#drm_plane * , const s#drm_plane_state * , s#drm_property * , t#uint64_t * ) ; int ( * late_register ) ( s#drm_plane * ) ; void ( * early_unregister ) ( s#drm_plane * ) ; void ( * atomic_print_state ) ( s#drm_printer * , const s#drm_plane_state * ) ; t#bool ( * format_mod_supported ) ( s#drm_plane * , t#uint32_t , t#uint64_t ) ; } 
e#drm_plane_type enum drm_plane_type { DRM_PLANE_TYPE_OVERLAY , DRM_PLANE_TYPE_PRIMARY , DRM_PLANE_TYPE_CURSOR , } 
s#drm_plane_helper_funcs struct drm_plane_helper_funcs { int ( * prepare_fb ) ( s#drm_plane * , s#drm_plane_state * ) ; void ( * cleanup_fb ) ( s#drm_plane * , s#drm_plane_state * ) ; int ( * atomic_check ) ( s#drm_plane * , s#drm_plane_state * ) ; void ( * atomic_update ) ( s#drm_plane * , s#drm_plane_state * ) ; void ( * atomic_disable ) ( s#drm_plane * , s#drm_plane_state * ) ; int ( * atomic_async_check ) ( s#drm_plane * , s#drm_plane_state * ) ; void ( * atomic_async_update ) ( s#drm_plane * , s#drm_plane_state * ) ; } 
s#drm_plane struct drm_plane { s#drm_device * dev ; s#list_head head ; char * name ; s#drm_modeset_lock mutex ; s#drm_mode_object base ; t#uint32_t possible_crtcs ; t#uint32_t * format_types ; unsigned int format_count ; t#bool format_default ; t#uint64_t * modifiers ; unsigned int modifier_count ; s#drm_crtc * crtc ; s#drm_framebuffer * fb ; s#drm_framebuffer * old_fb ; const s#drm_plane_funcs * funcs ; s#drm_object_properties properties ; e#drm_plane_type type ; unsigned index ; const s#drm_plane_helper_funcs * helper_private ; s#drm_plane_state * state ; s#drm_property * alpha_property ; s#drm_property * zpos_property ; s#drm_property * rotation_property ; s#drm_property * color_encoding_property ; s#drm_property * color_range_property ; } 
e#drm_connector_status enum drm_connector_status { connector_status_connected = 1 , connector_status_disconnected = 2 , connector_status_unknown = 3 , } 
e#subpixel_order enum subpixel_order { SubPixelUnknown = 0 , SubPixelHorizontalRGB , SubPixelHorizontalBGR , SubPixelVerticalRGB , SubPixelVerticalBGR , SubPixelNone , } 
s#drm_scrambling struct drm_scrambling { t#bool supported ; t#bool low_rates ; } 
s#drm_scdc struct drm_scdc { t#bool supported ; t#bool read_request ; s#drm_scrambling scrambling ; } 
s#drm_hdmi_info struct drm_hdmi_info { s#drm_scdc scdc ; unsigned long y420_vdb_modes [ ( ( ( 128 ) + ( 8 * sizeof ( long ) ) - 1 ) / ( 8 * sizeof ( long ) ) ) ] ; unsigned long y420_cmdb_modes [ ( ( ( 128 ) + ( 8 * sizeof ( long ) ) - 1 ) / ( 8 * sizeof ( long ) ) ) ] ; t#u64 y420_cmdb_map ; t#u8 y420_dc_modes ; } 
s#drm_display_info struct drm_display_info { char name [ 32 ] ; unsigned int width_mm ; unsigned int height_mm ; unsigned int pixel_clock ; unsigned int bpc ; e#subpixel_order subpixel_order ; int panel_orientation ; t#u32 color_formats ; const t#u32 * bus_formats ; unsigned int num_bus_formats ; t#u32 bus_flags ; int max_tmds_clock ; t#bool dvi_dual ; t#bool has_hdmi_infoframe ; t#u8 edid_hdmi_dc_modes ; t#u8 cea_rev ; s#drm_hdmi_info hdmi ; t#bool non_desktop ; } 
e#drm_link_status enum drm_link_status { DRM_LINK_STATUS_GOOD = 0 , DRM_LINK_STATUS_BAD = 1 , } 
e#drm_mode_subconnector enum drm_mode_subconnector { DRM_MODE_SUBCONNECTOR_Automatic = 0 , DRM_MODE_SUBCONNECTOR_Unknown = 0 , DRM_MODE_SUBCONNECTOR_DVID = 3 , DRM_MODE_SUBCONNECTOR_DVIA = 4 , DRM_MODE_SUBCONNECTOR_Composite = 5 , DRM_MODE_SUBCONNECTOR_SVIDEO = 6 , DRM_MODE_SUBCONNECTOR_Component = 8 , DRM_MODE_SUBCONNECTOR_SCART = 9 , } 
s#drm_tv_connector_state struct drm_tv_connector_state { e#drm_mode_subconnector subconnector ; struct { unsigned int left ; unsigned int right ; unsigned int top ; unsigned int bottom ; } margins ; unsigned int mode ; unsigned int brightness ; unsigned int contrast ; unsigned int flicker_reduction ; unsigned int overscan ; unsigned int saturation ; unsigned int hue ; } 
s##drm_writeback_job
s#drm_connector_state struct drm_connector_state { s#drm_connector * connector ; s#drm_crtc * crtc ; s#drm_encoder * best_encoder ; e#drm_link_status link_status ; s#drm_atomic_state * state ; s#drm_crtc_commit * commit ; s#drm_tv_connector_state tv ; e#hdmi_picture_aspect picture_aspect_ratio ; unsigned int content_type ; unsigned int scaling_mode ; unsigned int content_protection ; s#drm_writeback_job * writeback_job ; } 
s#drm_connector_funcs struct drm_connector_funcs { int ( * dpms ) ( s#drm_connector * , int ) ; void ( * reset ) ( s#drm_connector * ) ; e#drm_connector_status ( * detect ) ( s#drm_connector * , t#bool ) ; void ( * force ) ( s#drm_connector * ) ; int ( * fill_modes ) ( s#drm_connector * , t#uint32_t , t#uint32_t ) ; int ( * set_property ) ( s#drm_connector * , s#drm_property * , t#uint64_t ) ; int ( * late_register ) ( s#drm_connector * ) ; void ( * early_unregister ) ( s#drm_connector * ) ; void ( * destroy ) ( s#drm_connector * ) ; s#drm_connector_state * ( * atomic_duplicate_state ) ( s#drm_connector * ) ; void ( * atomic_destroy_state ) ( s#drm_connector * , s#drm_connector_state * ) ; int ( * atomic_set_property ) ( s#drm_connector * , s#drm_connector_state * , s#drm_property * , t#uint64_t ) ; int ( * atomic_get_property ) ( s#drm_connector * , const s#drm_connector_state * , s#drm_property * , t#uint64_t * ) ; void ( * atomic_print_state ) ( s#drm_printer * , const s#drm_connector_state * ) ; } 
s#drm_property_blob struct drm_property_blob { s#drm_mode_object base ; s#drm_device * dev ; s#list_head head_global ; s#list_head head_file ; t#size_t length ; void * data ; } 
t#uint8_t typedef t#__u8 uint8_t 
s#drm_connector_helper_funcs struct drm_connector_helper_funcs { int ( * get_modes ) ( s#drm_connector * ) ; int ( * detect_ctx ) ( s#drm_connector * , s#drm_modeset_acquire_ctx * , t#bool ) ; e#drm_mode_status ( * mode_valid ) ( s#drm_connector * , s#drm_display_mode * ) ; s#drm_encoder * ( * best_encoder ) ( s#drm_connector * ) ; s#drm_encoder * ( * atomic_best_encoder ) ( s#drm_connector * , s#drm_connector_state * ) ; int ( * atomic_check ) ( s#drm_connector * , s#drm_connector_state * ) ; void ( * atomic_commit ) ( s#drm_connector * , s#drm_connector_state * ) ; } 
e#drm_connector_force enum drm_connector_force { DRM_FORCE_UNSPECIFIED , DRM_FORCE_OFF , DRM_FORCE_ON , DRM_FORCE_ON_DIGITAL , } 
s#drm_cmdline_mode struct drm_cmdline_mode { t#bool specified ; t#bool refresh_specified ; t#bool bpp_specified ; int xres , yres ; int bpp ; int refresh ; t#bool rb ; t#bool interlace ; t#bool cvt ; t#bool margins ; e#drm_connector_force force ; } 
s#drm_tile_group struct drm_tile_group { s#kref refcount ; s#drm_device * dev ; int id ; t#u8 group_data [ 8 ] ; } 
t#uint16_t typedef t#__u16 uint16_t 
s#drm_connector struct drm_connector { s#drm_device * dev ; s#device * kdev ; s#device_attribute * attr ; s#list_head head ; s#drm_mode_object base ; char * name ; s#mutex mutex ; unsigned index ; int connector_type ; int connector_type_id ; t#bool interlace_allowed ; t#bool doublescan_allowed ; t#bool stereo_allowed ; t#bool ycbcr_420_allowed ; t#bool registered ; s#list_head modes ; e#drm_connector_status status ; s#list_head probed_modes ; s#drm_display_info display_info ; const s#drm_connector_funcs * funcs ; s#drm_property_blob * edid_blob_ptr ; s#drm_object_properties properties ; s#drm_property * scaling_mode_property ; s#drm_property * content_protection_property ; s#drm_property_blob * path_blob_ptr ; t#uint8_t polled ; int dpms ; const s#drm_connector_helper_funcs * helper_private ; s#drm_cmdline_mode cmdline_mode ; e#drm_connector_force force ; t#bool override_edid ; t#uint32_t encoder_ids [ 3 ] ; s#drm_encoder * encoder ; t#uint8_t eld [ 128 ] ; t#bool latency_present [ 2 ] ; int video_latency [ 2 ] ; int audio_latency [ 2 ] ; int null_edid_counter ; unsigned bad_edid_counter ; t#bool edid_corrupt ; s#dentry * debugfs_entry ; s#drm_connector_state * state ; s#drm_property_blob * tile_blob_ptr ; t#bool has_tile ; s#drm_tile_group * tile_group ; t#bool tile_is_single_monitor ; t#uint8_t num_h_tile , num_v_tile ; t#uint8_t tile_h_loc , tile_v_loc ; t#uint16_t tile_h_size , tile_v_size ; s#llist_node free_node ; } 
s#drm_mode_set struct drm_mode_set { s#drm_framebuffer * fb ; s#drm_crtc * crtc ; s#drm_display_mode * mode ; t#uint32_t x ; t#uint32_t y ; s#drm_connector * * connectors ; t#size_t num_connectors ; } 
s#drm_event struct drm_event { t#__u32 type ; t#__u32 length ; } 
s#drm_pending_event struct drm_pending_event { s#completion * completion ; void ( * completion_release ) ( s#completion * ) ; s#drm_event * event ; s#dma_fence * fence ; s#drm_file * file_priv ; s#list_head link ; s#list_head pending_link ; } 
s#drm_event_vblank struct drm_event_vblank { s#drm_event base ; t#__u64 user_data ; t#__u32 tv_sec ; t#__u32 tv_usec ; t#__u32 sequence ; t#__u32 crtc_id ; } 
s#drm_event_crtc_sequence struct drm_event_crtc_sequence { s#drm_event base ; t#__u64 user_data ; t#__s64 time_ns ; t#__u64 sequence ; } 
s#drm_pending_vblank_event struct drm_pending_vblank_event { s#drm_pending_event base ; unsigned int pipe ; t#u64 sequence ; union { s#drm_event base ; s#drm_event_vblank vbl ; s#drm_event_crtc_sequence seq ; } event ; } 
s#drm_crtc_state struct drm_crtc_state { s#drm_crtc * crtc ; t#bool enable ; t#bool active ; t#bool planes_changed : 1 ; t#bool mode_changed : 1 ; t#bool active_changed : 1 ; t#bool connectors_changed : 1 ; t#bool zpos_changed : 1 ; t#bool color_mgmt_changed : 1 ; t#bool no_vblank : 1 ; t#u32 plane_mask ; t#u32 connector_mask ; t#u32 encoder_mask ; s#drm_display_mode adjusted_mode ; s#drm_display_mode mode ; s#drm_property_blob * mode_blob ; s#drm_property_blob * degamma_lut ; s#drm_property_blob * ctm ; s#drm_property_blob * gamma_lut ; t#u32 target_vblank ; t#u32 pageflip_flags ; s#drm_pending_vblank_event * event ; s#drm_crtc_commit * commit ; s#drm_atomic_state * state ; } 
s#drm_crtc_funcs struct drm_crtc_funcs { void ( * reset ) ( s#drm_crtc * ) ; int ( * cursor_set ) ( s#drm_crtc * , s#drm_file * , t#uint32_t , t#uint32_t , t#uint32_t ) ; int ( * cursor_set2 ) ( s#drm_crtc * , s#drm_file * , t#uint32_t , t#uint32_t , t#uint32_t , t#int32_t , t#int32_t ) ; int ( * cursor_move ) ( s#drm_crtc * , int , int ) ; int ( * gamma_set ) ( s#drm_crtc * , t#u16 * , t#u16 * , t#u16 * , t#uint32_t , s#drm_modeset_acquire_ctx * ) ; void ( * destroy ) ( s#drm_crtc * ) ; int ( * set_config ) ( s#drm_mode_set * , s#drm_modeset_acquire_ctx * ) ; int ( * page_flip ) ( s#drm_crtc * , s#drm_framebuffer * , s#drm_pending_vblank_event * , t#uint32_t , s#drm_modeset_acquire_ctx * ) ; int ( * page_flip_target ) ( s#drm_crtc * , s#drm_framebuffer * , s#drm_pending_vblank_event * , t#uint32_t , t#uint32_t , s#drm_modeset_acquire_ctx * ) ; int ( * set_property ) ( s#drm_crtc * , s#drm_property * , t#uint64_t ) ; s#drm_crtc_state * ( * atomic_duplicate_state ) ( s#drm_crtc * ) ; void ( * atomic_destroy_state ) ( s#drm_crtc * , s#drm_crtc_state * ) ; int ( * atomic_set_property ) ( s#drm_crtc * , s#drm_crtc_state * , s#drm_property * , t#uint64_t ) ; int ( * atomic_get_property ) ( s#drm_crtc * , const s#drm_crtc_state * , s#drm_property * , t#uint64_t * ) ; int ( * late_register ) ( s#drm_crtc * ) ; void ( * early_unregister ) ( s#drm_crtc * ) ; int ( * set_crc_source ) ( s#drm_crtc * , const char * , t#size_t * ) ; void ( * atomic_print_state ) ( s#drm_printer * , const s#drm_crtc_state * ) ; t#u32 ( * get_vblank_counter ) ( s#drm_crtc * ) ; int ( * enable_vblank ) ( s#drm_crtc * ) ; void ( * disable_vblank ) ( s#drm_crtc * ) ; } 
e##mode_set_atomic
s#drm_crtc_helper_funcs struct drm_crtc_helper_funcs { void ( * dpms ) ( s#drm_crtc * , int ) ; void ( * prepare ) ( s#drm_crtc * ) ; void ( * commit ) ( s#drm_crtc * ) ; e#drm_mode_status ( * mode_valid ) ( s#drm_crtc * , const s#drm_display_mode * ) ; t#bool ( * mode_fixup ) ( s#drm_crtc * , const s#drm_display_mode * , s#drm_display_mode * ) ; int ( * mode_set ) ( s#drm_crtc * , s#drm_display_mode * , s#drm_display_mode * , int , int , s#drm_framebuffer * ) ; void ( * mode_set_nofb ) ( s#drm_crtc * ) ; int ( * mode_set_base ) ( s#drm_crtc * , int , int , s#drm_framebuffer * ) ; int ( * mode_set_base_atomic ) ( s#drm_crtc * , s#drm_framebuffer * , int , int , e#mode_set_atomic ) ; void ( * disable ) ( s#drm_crtc * ) ; int ( * atomic_check ) ( s#drm_crtc * , s#drm_crtc_state * ) ; void ( * atomic_begin ) ( s#drm_crtc * , s#drm_crtc_state * ) ; void ( * atomic_flush ) ( s#drm_crtc * , s#drm_crtc_state * ) ; void ( * atomic_enable ) ( s#drm_crtc * , s#drm_crtc_state * ) ; void ( * atomic_disable ) ( s#drm_crtc * , s#drm_crtc_state * ) ; } 
s#drm_crtc_crc_entry struct drm_crtc_crc_entry { t#bool has_frame_counter ; t#uint32_t frame ; t#uint32_t crcs [ 10 ] ; } 
s#drm_crtc_crc struct drm_crtc_crc { t#spinlock_t lock ; const char * source ; t#bool opened , overflow ; s#drm_crtc_crc_entry * entries ; int head , tail ; t#size_t values_cnt ; t#wait_queue_head_t wq ; } 
s#drm_crtc struct drm_crtc { s#drm_device * dev ; s#device_node * port ; s#list_head head ; char * name ; s#drm_modeset_lock mutex ; s#drm_mode_object base ; s#drm_plane * primary ; s#drm_plane * cursor ; unsigned index ; int cursor_x ; int cursor_y ; t#bool enabled ; s#drm_display_mode mode ; s#drm_display_mode hwmode ; int x , y ; const s#drm_crtc_funcs * funcs ; t#uint32_t gamma_size ; t#uint16_t * gamma_store ; const s#drm_crtc_helper_funcs * helper_private ; s#drm_object_properties properties ; s#drm_crtc_state * state ; s#list_head commit_list ; t#spinlock_t commit_lock ; s#dentry * debugfs_entry ; s#drm_crtc_crc crc ; unsigned int fence_context ; t#spinlock_t fence_lock ; unsigned long fence_seqno ; char timeline_name [ 32 ] ; } 
s#drm_encoder_funcs struct drm_encoder_funcs { void ( * reset ) ( s#drm_encoder * ) ; void ( * destroy ) ( s#drm_encoder * ) ; int ( * late_register ) ( s#drm_encoder * ) ; void ( * early_unregister ) ( s#drm_encoder * ) ; } 
s#drm_encoder_helper_funcs struct drm_encoder_helper_funcs { void ( * dpms ) ( s#drm_encoder * , int ) ; e#drm_mode_status ( * mode_valid ) ( s#drm_encoder * , const s#drm_display_mode * ) ; t#bool ( * mode_fixup ) ( s#drm_encoder * , const s#drm_display_mode * , s#drm_display_mode * ) ; void ( * prepare ) ( s#drm_encoder * ) ; void ( * commit ) ( s#drm_encoder * ) ; void ( * mode_set ) ( s#drm_encoder * , s#drm_display_mode * , s#drm_display_mode * ) ; void ( * atomic_mode_set ) ( s#drm_encoder * , s#drm_crtc_state * , s#drm_connector_state * ) ; s#drm_crtc * ( * get_crtc ) ( s#drm_encoder * ) ; e#drm_connector_status ( * detect ) ( s#drm_encoder * , s#drm_connector * ) ; void ( * disable ) ( s#drm_encoder * ) ; void ( * enable ) ( s#drm_encoder * ) ; int ( * atomic_check ) ( s#drm_encoder * , s#drm_crtc_state * , s#drm_connector_state * ) ; } 
s#drm_encoder struct drm_encoder { s#drm_device * dev ; s#list_head head ; s#drm_mode_object base ; char * name ; int encoder_type ; unsigned index ; t#uint32_t possible_crtcs ; t#uint32_t possible_clones ; s#drm_crtc * crtc ; s#drm_bridge * bridge ; const s#drm_encoder_funcs * funcs ; const s#drm_encoder_helper_funcs * helper_private ; } 
s#drm_bridge_timings struct drm_bridge_timings { t#u32 sampling_edge ; t#u32 setup_time_ps ; t#u32 hold_time_ps ; } 
s#drm_bridge_funcs struct drm_bridge_funcs { int ( * attach ) ( s#drm_bridge * ) ; void ( * detach ) ( s#drm_bridge * ) ; e#drm_mode_status ( * mode_valid ) ( s#drm_bridge * , const s#drm_display_mode * ) ; t#bool ( * mode_fixup ) ( s#drm_bridge * , const s#drm_display_mode * , s#drm_display_mode * ) ; void ( * disable ) ( s#drm_bridge * ) ; void ( * post_disable ) ( s#drm_bridge * ) ; void ( * mode_set ) ( s#drm_bridge * , s#drm_display_mode * , s#drm_display_mode * ) ; void ( * pre_enable ) ( s#drm_bridge * ) ; void ( * enable ) ( s#drm_bridge * ) ; } 
s#drm_bridge struct drm_bridge { s#drm_device * dev ; s#drm_encoder * encoder ; s#drm_bridge * next ; s#list_head list ; const s#drm_bridge_timings * timings ; const s#drm_bridge_funcs * funcs ; void * driver_private ; } 
s##display_timing
s#drm_panel_funcs struct drm_panel_funcs { int ( * disable ) ( s#drm_panel * ) ; int ( * unprepare ) ( s#drm_panel * ) ; int ( * prepare ) ( s#drm_panel * ) ; int ( * enable ) ( s#drm_panel * ) ; int ( * get_modes ) ( s#drm_panel * ) ; int ( * get_timings ) ( s#drm_panel * , unsigned int , s#display_timing * ) ; } 
s#drm_panel struct drm_panel { s#drm_device * drm ; s#drm_connector * connector ; s#device * dev ; const s#drm_panel_funcs * funcs ; s#list_head list ; } 
drm_panel_bridge_add s#drm_bridge * drm_panel_bridge_add ( s#drm_panel * , t#u32 ) 
drm_panel_bridge_remove void drm_panel_bridge_remove ( s#drm_bridge * ) 
devm_drm_panel_bridge_add s#drm_bridge * devm_drm_panel_bridge_add ( s#device * , s#drm_panel * , t#u32 ) 

/* drivers/gpu/drm/drm_atomic.o */
__drm_crtc_commit_free void __drm_crtc_commit_free ( s#kref * ) 
s##device_private
s##sock
s##vfsmount
s##posix_acl
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##nlm_lockowner
s##nfs4_lock_state
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##iommu_group
s##iommu_fwspec
s##drm_master
s##drm_gem_object
s##dma_buf
s##reservation_object
s##dma_buf_attachment
s##drm_device_dma
s##msi_controller
s##proc_dir_entry
s##hotplug_slot
s##pci_vpd
s##pci_sriov
s##agp_bridge_data
s##drm_sg_mem
s##drm_local_map
s##drm_mode_config_helper_funcs
s##drm_vma_offset_manager
s##drm_fb_helper
s##drm_encoder_helper_funcs
s#drm_crtc_commit struct drm_crtc_commit { s#drm_crtc * crtc ; s#kref ref ; s#completion flip_done ; s#completion hw_done ; s#completion cleanup_done ; s#list_head commit_entry ; s#drm_pending_vblank_event * event ; t#bool abort_completion ; } 
s#drm_writeback_job struct drm_writeback_job { s#work_struct cleanup_work ; s#list_head list_entry ; s#drm_framebuffer * fb ; s#dma_fence * out_fence ; } 
s##drm_connector_helper_funcs
s##drm_crtc_helper_funcs
s##drm_plane_helper_funcs
s#__drm_planes_state struct __drm_planes_state { s#drm_plane * ptr ; s#drm_plane_state * state , * old_state , * new_state ; } 
s#__drm_crtcs_state struct __drm_crtcs_state { s#drm_crtc * ptr ; s#drm_crtc_state * state , * old_state , * new_state ; s#drm_crtc_commit * commit ; t#s32 * out_fence_ptr ; t#u64 last_vblank_count ; } 
s#__drm_connnectors_state struct __drm_connnectors_state { s#drm_connector * ptr ; s#drm_connector_state * state , * old_state , * new_state ; t#s32 * out_fence_ptr ; } 
s#drm_private_state struct drm_private_state { s#drm_atomic_state * state ; } 
s#drm_private_state_funcs struct drm_private_state_funcs { s#drm_private_state * ( * atomic_duplicate_state ) ( s#drm_private_obj * ) ; void ( * atomic_destroy_state ) ( s#drm_private_obj * , s#drm_private_state * ) ; } 
s#drm_private_obj struct drm_private_obj { s#drm_private_state * state ; const s#drm_private_state_funcs * funcs ; } 
s#__drm_private_objs_state struct __drm_private_objs_state { s#drm_private_obj * ptr ; s#drm_private_state * state , * old_state , * new_state ; } 
s#drm_atomic_state struct drm_atomic_state { s#kref ref ; s#drm_device * dev ; t#bool allow_modeset : 1 ; t#bool legacy_cursor_update : 1 ; t#bool async_update : 1 ; s#__drm_planes_state * planes ; s#__drm_crtcs_state * crtcs ; int num_connector ; s#__drm_connnectors_state * connectors ; int num_private_objs ; s#__drm_private_objs_state * private_objs ; s#drm_modeset_acquire_ctx * acquire_ctx ; s#drm_crtc_commit * fake_commit ; s#work_struct commit_work ; } 
drm_atomic_state_default_release void drm_atomic_state_default_release ( s#drm_atomic_state * ) 
drm_atomic_state_init int drm_atomic_state_init ( s#drm_device * , s#drm_atomic_state * ) 
drm_atomic_state_alloc s#drm_atomic_state * drm_atomic_state_alloc ( s#drm_device * ) 
drm_atomic_state_default_clear void drm_atomic_state_default_clear ( s#drm_atomic_state * ) 
drm_atomic_state_clear void drm_atomic_state_clear ( s#drm_atomic_state * ) 
__drm_atomic_state_free void __drm_atomic_state_free ( s#kref * ) 
drm_atomic_get_crtc_state s#drm_crtc_state * drm_atomic_get_crtc_state ( s#drm_atomic_state * , s#drm_crtc * ) 
drm_atomic_set_mode_for_crtc int drm_atomic_set_mode_for_crtc ( s#drm_crtc_state * , const s#drm_display_mode * ) 
drm_atomic_set_mode_prop_for_crtc int drm_atomic_set_mode_prop_for_crtc ( s#drm_crtc_state * , s#drm_property_blob * ) 
drm_atomic_crtc_set_property int drm_atomic_crtc_set_property ( s#drm_crtc * , s#drm_crtc_state * , s#drm_property * , t#uint64_t ) 
drm_atomic_get_plane_state s#drm_plane_state * drm_atomic_get_plane_state ( s#drm_atomic_state * , s#drm_plane * ) 
drm_atomic_private_obj_init void drm_atomic_private_obj_init ( s#drm_private_obj * , s#drm_private_state * , const s#drm_private_state_funcs * ) 
drm_atomic_private_obj_fini void drm_atomic_private_obj_fini ( s#drm_private_obj * ) 
drm_atomic_get_private_obj_state s#drm_private_state * drm_atomic_get_private_obj_state ( s#drm_atomic_state * , s#drm_private_obj * ) 
drm_atomic_get_connector_state s#drm_connector_state * drm_atomic_get_connector_state ( s#drm_atomic_state * , s#drm_connector * ) 
drm_atomic_set_crtc_for_plane int drm_atomic_set_crtc_for_plane ( s#drm_plane_state * , s#drm_crtc * ) 
drm_atomic_set_fb_for_plane void drm_atomic_set_fb_for_plane ( s#drm_plane_state * , s#drm_framebuffer * ) 
drm_atomic_set_fence_for_plane void drm_atomic_set_fence_for_plane ( s#drm_plane_state * , s#dma_fence * ) 
drm_atomic_set_crtc_for_connector int drm_atomic_set_crtc_for_connector ( s#drm_connector_state * , s#drm_crtc * ) 
drm_atomic_set_writeback_fb_for_connector int drm_atomic_set_writeback_fb_for_connector ( s#drm_connector_state * , s#drm_framebuffer * ) 
drm_atomic_add_affected_connectors int drm_atomic_add_affected_connectors ( s#drm_atomic_state * , s#drm_crtc * ) 
drm_atomic_add_affected_planes int drm_atomic_add_affected_planes ( s#drm_atomic_state * , s#drm_crtc * ) 
drm_atomic_check_only int drm_atomic_check_only ( s#drm_atomic_state * ) 
drm_atomic_commit int drm_atomic_commit ( s#drm_atomic_state * ) 
drm_atomic_nonblocking_commit int drm_atomic_nonblocking_commit ( s#drm_atomic_state * ) 
drm_state_dump void drm_state_dump ( s#drm_device * , s#drm_printer * ) 

/* drivers/gpu/drm/drm_atomic_helper.o */
s##device_private
s##sock
s##vfsmount
s##posix_acl
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##nlm_lockowner
s##nfs4_lock_state
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##iommu_group
s##iommu_fwspec
s##drm_master
s##drm_gem_object
s##dma_buf
s##reservation_object
s##dma_buf_attachment
s##drm_device_dma
s##msi_controller
s##proc_dir_entry
s##hotplug_slot
s##pci_vpd
s##pci_sriov
s##agp_bridge_data
s##drm_sg_mem
s##drm_local_map
e##mode_set_atomic
s##drm_vma_offset_manager
s##drm_fb_helper
drm_atomic_helper_check_modeset int drm_atomic_helper_check_modeset ( s#drm_device * , s#drm_atomic_state * ) 
drm_atomic_helper_check_plane_state int drm_atomic_helper_check_plane_state ( s#drm_plane_state * , const s#drm_crtc_state * , int , int , t#bool , t#bool ) 
drm_atomic_helper_check_planes int drm_atomic_helper_check_planes ( s#drm_device * , s#drm_atomic_state * ) 
drm_atomic_helper_check int drm_atomic_helper_check ( s#drm_device * , s#drm_atomic_state * ) 
drm_atomic_helper_update_legacy_modeset_state void drm_atomic_helper_update_legacy_modeset_state ( s#drm_device * , s#drm_atomic_state * ) 
drm_atomic_helper_commit_modeset_disables void drm_atomic_helper_commit_modeset_disables ( s#drm_device * , s#drm_atomic_state * ) 
drm_atomic_helper_commit_modeset_enables void drm_atomic_helper_commit_modeset_enables ( s#drm_device * , s#drm_atomic_state * ) 
drm_atomic_helper_wait_for_fences int drm_atomic_helper_wait_for_fences ( s#drm_device * , s#drm_atomic_state * , t#bool ) 
drm_atomic_helper_wait_for_vblanks void drm_atomic_helper_wait_for_vblanks ( s#drm_device * , s#drm_atomic_state * ) 
drm_atomic_helper_wait_for_flip_done void drm_atomic_helper_wait_for_flip_done ( s#drm_device * , s#drm_atomic_state * ) 
drm_atomic_helper_commit_tail void drm_atomic_helper_commit_tail ( s#drm_atomic_state * ) 
drm_atomic_helper_commit_tail_rpm void drm_atomic_helper_commit_tail_rpm ( s#drm_atomic_state * ) 
drm_atomic_helper_async_check int drm_atomic_helper_async_check ( s#drm_device * , s#drm_atomic_state * ) 
drm_atomic_helper_async_commit void drm_atomic_helper_async_commit ( s#drm_device * , s#drm_atomic_state * ) 
drm_atomic_helper_commit int drm_atomic_helper_commit ( s#drm_device * , s#drm_atomic_state * , t#bool ) 
drm_atomic_helper_setup_commit int drm_atomic_helper_setup_commit ( s#drm_atomic_state * , t#bool ) 
drm_atomic_helper_wait_for_dependencies void drm_atomic_helper_wait_for_dependencies ( s#drm_atomic_state * ) 
drm_atomic_helper_fake_vblank void drm_atomic_helper_fake_vblank ( s#drm_atomic_state * ) 
drm_atomic_helper_commit_hw_done void drm_atomic_helper_commit_hw_done ( s#drm_atomic_state * ) 
drm_atomic_helper_commit_cleanup_done void drm_atomic_helper_commit_cleanup_done ( s#drm_atomic_state * ) 
drm_atomic_helper_prepare_planes int drm_atomic_helper_prepare_planes ( s#drm_device * , s#drm_atomic_state * ) 
drm_atomic_helper_commit_planes void drm_atomic_helper_commit_planes ( s#drm_device * , s#drm_atomic_state * , t#uint32_t ) 
drm_atomic_helper_commit_planes_on_crtc void drm_atomic_helper_commit_planes_on_crtc ( s#drm_crtc_state * ) 
drm_atomic_helper_disable_planes_on_crtc void drm_atomic_helper_disable_planes_on_crtc ( s#drm_crtc_state * , t#bool ) 
drm_atomic_helper_cleanup_planes void drm_atomic_helper_cleanup_planes ( s#drm_device * , s#drm_atomic_state * ) 
drm_atomic_helper_swap_state int drm_atomic_helper_swap_state ( s#drm_atomic_state * , t#bool ) 
drm_atomic_helper_update_plane int drm_atomic_helper_update_plane ( s#drm_plane * , s#drm_crtc * , s#drm_framebuffer * , int , int , unsigned int , unsigned int , t#uint32_t , t#uint32_t , t#uint32_t , t#uint32_t , s#drm_modeset_acquire_ctx * ) 
drm_atomic_helper_disable_plane int drm_atomic_helper_disable_plane ( s#drm_plane * , s#drm_modeset_acquire_ctx * ) 
drm_atomic_helper_set_config int drm_atomic_helper_set_config ( s#drm_mode_set * , s#drm_modeset_acquire_ctx * ) 
drm_atomic_helper_disable_all int drm_atomic_helper_disable_all ( s#drm_device * , s#drm_modeset_acquire_ctx * ) 
drm_atomic_helper_shutdown void drm_atomic_helper_shutdown ( s#drm_device * ) 
drm_atomic_helper_suspend s#drm_atomic_state * drm_atomic_helper_suspend ( s#drm_device * ) 
drm_atomic_helper_commit_duplicated_state int drm_atomic_helper_commit_duplicated_state ( s#drm_atomic_state * , s#drm_modeset_acquire_ctx * ) 
drm_atomic_helper_resume int drm_atomic_helper_resume ( s#drm_device * , s#drm_atomic_state * ) 
drm_atomic_helper_page_flip int drm_atomic_helper_page_flip ( s#drm_crtc * , s#drm_framebuffer * , s#drm_pending_vblank_event * , t#uint32_t , s#drm_modeset_acquire_ctx * ) 
drm_atomic_helper_page_flip_target int drm_atomic_helper_page_flip_target ( s#drm_crtc * , s#drm_framebuffer * , s#drm_pending_vblank_event * , t#uint32_t , t#uint32_t , s#drm_modeset_acquire_ctx * ) 
drm_atomic_helper_best_encoder s#drm_encoder * drm_atomic_helper_best_encoder ( s#drm_connector * ) 
drm_atomic_helper_crtc_reset void drm_atomic_helper_crtc_reset ( s#drm_crtc * ) 
__drm_atomic_helper_crtc_duplicate_state void __drm_atomic_helper_crtc_duplicate_state ( s#drm_crtc * , s#drm_crtc_state * ) 
drm_atomic_helper_crtc_duplicate_state s#drm_crtc_state * drm_atomic_helper_crtc_duplicate_state ( s#drm_crtc * ) 
__drm_atomic_helper_crtc_destroy_state void __drm_atomic_helper_crtc_destroy_state ( s#drm_crtc_state * ) 
drm_atomic_helper_crtc_destroy_state void drm_atomic_helper_crtc_destroy_state ( s#drm_crtc * , s#drm_crtc_state * ) 
drm_atomic_helper_plane_reset void drm_atomic_helper_plane_reset ( s#drm_plane * ) 
__drm_atomic_helper_plane_duplicate_state void __drm_atomic_helper_plane_duplicate_state ( s#drm_plane * , s#drm_plane_state * ) 
drm_atomic_helper_plane_duplicate_state s#drm_plane_state * drm_atomic_helper_plane_duplicate_state ( s#drm_plane * ) 
__drm_atomic_helper_plane_destroy_state void __drm_atomic_helper_plane_destroy_state ( s#drm_plane_state * ) 
drm_atomic_helper_plane_destroy_state void drm_atomic_helper_plane_destroy_state ( s#drm_plane * , s#drm_plane_state * ) 
__drm_atomic_helper_connector_reset void __drm_atomic_helper_connector_reset ( s#drm_connector * , s#drm_connector_state * ) 
drm_atomic_helper_connector_reset void drm_atomic_helper_connector_reset ( s#drm_connector * ) 
__drm_atomic_helper_connector_duplicate_state void __drm_atomic_helper_connector_duplicate_state ( s#drm_connector * , s#drm_connector_state * ) 
drm_atomic_helper_connector_duplicate_state s#drm_connector_state * drm_atomic_helper_connector_duplicate_state ( s#drm_connector * ) 
drm_atomic_helper_duplicate_state s#drm_atomic_state * drm_atomic_helper_duplicate_state ( s#drm_device * , s#drm_modeset_acquire_ctx * ) 
__drm_atomic_helper_connector_destroy_state void __drm_atomic_helper_connector_destroy_state ( s#drm_connector_state * ) 
drm_atomic_helper_connector_destroy_state void drm_atomic_helper_connector_destroy_state ( s#drm_connector * , s#drm_connector_state * ) 
drm_atomic_helper_legacy_gamma_set int drm_atomic_helper_legacy_gamma_set ( s#drm_crtc * , t#u16 * , t#u16 * , t#u16 * , t#uint32_t , s#drm_modeset_acquire_ctx * ) 
__drm_atomic_helper_private_obj_duplicate_state void __drm_atomic_helper_private_obj_duplicate_state ( s#drm_private_obj * , s#drm_private_state * ) 

/* drivers/gpu/drm/drm_auth.o */
s##device_private
s##sock
s##vfsmount
s##posix_acl
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##nlm_lockowner
s##nfs4_lock_state
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##iommu_group
s##iommu_fwspec
s##drm_gem_object
s##dma_buf
s##reservation_object
s##dma_buf_attachment
s##msi_controller
s##proc_dir_entry
s##hotplug_slot
s##pci_vpd
s##pci_sriov
s##agp_bridge_data
s##drm_atomic_state
s##drm_mode_config_helper_funcs
s##drm_vma_offset_manager
s##drm_fb_helper
drm_is_current_master t#bool drm_is_current_master ( s#drm_file * ) 
drm_master_get s#drm_master * drm_master_get ( s#drm_master * ) 
drm_master_put void drm_master_put ( s#drm_master * * ) 

/* drivers/gpu/drm/drm_blend.o */
s##device_private
s##sock
s##vfsmount
s##posix_acl
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##nlm_lockowner
s##nfs4_lock_state
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##iommu_group
s##iommu_fwspec
s##drm_master
s##drm_gem_object
s##dma_buf
s##reservation_object
s##dma_buf_attachment
s##drm_device_dma
s##msi_controller
s##proc_dir_entry
s##hotplug_slot
s##pci_vpd
s##pci_sriov
s##agp_bridge_data
s##drm_sg_mem
s##drm_local_map
s##drm_encoder
s##drm_writeback_job
s##drm_connector_helper_funcs
s##drm_crtc_helper_funcs
s##drm_mode_config_helper_funcs
s##drm_vma_offset_manager
s##drm_fb_helper
s##drm_plane_helper_funcs
drm_plane_create_alpha_property int drm_plane_create_alpha_property ( s#drm_plane * ) 
drm_plane_create_rotation_property int drm_plane_create_rotation_property ( s#drm_plane * , unsigned int , unsigned int ) 
drm_rotation_simplify unsigned int drm_rotation_simplify ( unsigned int , unsigned int ) 
drm_plane_create_zpos_property int drm_plane_create_zpos_property ( s#drm_plane * , unsigned int , unsigned int , unsigned int ) 
drm_plane_create_zpos_immutable_property int drm_plane_create_zpos_immutable_property ( s#drm_plane * , unsigned int ) 
drm_atomic_normalize_zpos int drm_atomic_normalize_zpos ( s#drm_device * , s#drm_atomic_state * ) 

/* drivers/gpu/drm/drm_bridge.o */
s##drm_device
s##vfsmount
s##posix_acl
s##sock
s##seq_file
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##pipe_inode_info
s##writeback_control
s##bio_vec
s##swap_info_struct
s##device_private
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##iommu_group
s##iommu_fwspec
s##kmem_cache
s##mem_cgroup
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##drm_format_info
s##drm_file
s##drm_gem_object
s##dma_fence
s##drm_crtc_commit
s##drm_atomic_state
s##drm_printer
s##drm_plane_helper_funcs
s##drm_writeback_job
s##drm_connector_helper_funcs
s##drm_pending_vblank_event
s##drm_crtc_helper_funcs
s##drm_encoder_helper_funcs
drm_bridge_add void drm_bridge_add ( s#drm_bridge * ) 
drm_bridge_remove void drm_bridge_remove ( s#drm_bridge * ) 
drm_bridge_attach int drm_bridge_attach ( s#drm_encoder * , s#drm_bridge * , s#drm_bridge * ) 
drm_bridge_mode_fixup t#bool drm_bridge_mode_fixup ( s#drm_bridge * , const s#drm_display_mode * , s#drm_display_mode * ) 
drm_bridge_mode_valid e#drm_mode_status drm_bridge_mode_valid ( s#drm_bridge * , const s#drm_display_mode * ) 
drm_bridge_disable void drm_bridge_disable ( s#drm_bridge * ) 
drm_bridge_post_disable void drm_bridge_post_disable ( s#drm_bridge * ) 
drm_bridge_mode_set void drm_bridge_mode_set ( s#drm_bridge * , s#drm_display_mode * , s#drm_display_mode * ) 
drm_bridge_pre_enable void drm_bridge_pre_enable ( s#drm_bridge * ) 
drm_bridge_enable void drm_bridge_enable ( s#drm_bridge * ) 

/* drivers/gpu/drm/drm_bufs.o */
s##device_private
s##sock
s##vfsmount
s##posix_acl
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##nlm_lockowner
s##nfs4_lock_state
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##iommu_group
s##iommu_fwspec
s##drm_gem_object
s##dma_buf
s##reservation_object
s##dma_buf_attachment
s##msi_controller
s##proc_dir_entry
s##hotplug_slot
s##pci_vpd
s##pci_sriov
s##agp_bridge_data
s##drm_atomic_state
s##drm_mode_config_helper_funcs
s##drm_vma_offset_manager
s##drm_fb_helper
drm_legacy_addmap int drm_legacy_addmap ( s#drm_device * , t#resource_size_t , unsigned int , e#drm_map_type , e#drm_map_flags , s#drm_local_map * * ) 
drm_legacy_rmmap_locked int drm_legacy_rmmap_locked ( s#drm_device * , s#drm_local_map * ) 
drm_legacy_rmmap void drm_legacy_rmmap ( s#drm_device * , s#drm_local_map * ) 
s#drm_buf_desc struct drm_buf_desc { int count ; int size ; int low_mark ; int high_mark ; enum { _DRM_PAGE_ALIGN = 0x01 , _DRM_AGP_BUFFER = 0x02 , _DRM_SG_BUFFER = 0x04 , _DRM_FB_BUFFER = 0x08 , _DRM_PCI_BUFFER_RO = 0x10 } flags ; unsigned long agp_start ; } 
drm_legacy_addbufs_pci int drm_legacy_addbufs_pci ( s#drm_device * , s#drm_buf_desc * ) 
drm_legacy_getsarea s#drm_local_map * drm_legacy_getsarea ( s#drm_device * ) 

/* drivers/gpu/drm/drm_cache.o */
s##posix_acl
s##vfsmount
s##module
s##writeback_control
s##kstatfs
s##seq_file
s##mem_cgroup
s##export_operations
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mempolicy
s##iov_iter
s##poll_table_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cred
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##compat_timespec
s##pollfd
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##device
s##kmem_cache
drm_clflush_pages void drm_clflush_pages ( s#page * [ ] , unsigned long ) 
drm_clflush_sg void drm_clflush_sg ( s#sg_table * ) 
drm_clflush_virt_range void drm_clflush_virt_range ( void * , unsigned long ) 

/* drivers/gpu/drm/drm_client.o */
s##device_private
s##sock
s##vfsmount
s##posix_acl
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##nlm_lockowner
s##nfs4_lock_state
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##iommu_group
s##iommu_fwspec
s##drm_master
s#drm_mm struct drm_mm { void ( * color_adjust ) ( const s#drm_mm_node * , unsigned long , t#u64 * , t#u64 * ) ; s#list_head hole_stack ; s#drm_mm_node head_node ; s#rb_root interval_tree ; s#rb_root_cached holes_size ; s#rb_root holes_addr ; unsigned long scan_active ; } 
s#drm_mm_node struct drm_mm_node { unsigned long color ; t#u64 start ; t#u64 size ; s#drm_mm * mm ; s#list_head node_list ; s#list_head hole_stack ; s#rb_node rb ; s#rb_node rb_hole_size ; s#rb_node rb_hole_addr ; t#u64 __subtree_last ; t#u64 hole_size ; t#bool allocated : 1 ; t#bool scanned_block : 1 ; } 
s#drm_vma_offset_node struct drm_vma_offset_node { t#rwlock_t vm_lock ; s#drm_mm_node vm_node ; s#rb_root vm_files ; t#bool readonly : 1 ; } 
s##dma_buf
s##dma_buf_attachment
s#drm_gem_object struct drm_gem_object { s#kref refcount ; unsigned handle_count ; s#drm_device * dev ; s#file * filp ; s#drm_vma_offset_node vma_node ; t#size_t size ; int name ; s#dma_buf * dma_buf ; s#dma_buf_attachment * import_attach ; } 
s##reservation_object
s##drm_device_dma
s##msi_controller
s##proc_dir_entry
s##hotplug_slot
s##pci_vpd
s##pci_sriov
s##agp_bridge_data
s##drm_sg_mem
s##drm_local_map
s##drm_atomic_state
s##drm_mode_config_helper_funcs
s#drm_vma_offset_manager struct drm_vma_offset_manager { t#rwlock_t vm_lock ; s#drm_mm vm_addr_space_mm ; } 
s##drm_fb_helper
s#drm_client_funcs struct drm_client_funcs { s#module * owner ; void ( * unregister ) ( s#drm_client_dev * ) ; int ( * restore ) ( s#drm_client_dev * ) ; int ( * hotplug ) ( s#drm_client_dev * ) ; } 
s#drm_client_dev struct drm_client_dev { s#drm_device * dev ; const char * name ; s#list_head list ; const s#drm_client_funcs * funcs ; s#drm_file * file ; } 
drm_client_close void drm_client_close ( s#drm_client_dev * ) 
drm_client_init int drm_client_init ( s#drm_device * , s#drm_client_dev * , const char * , const s#drm_client_funcs * ) 
drm_client_add void drm_client_add ( s#drm_client_dev * ) 
drm_client_release void drm_client_release ( s#drm_client_dev * ) 
drm_client_dev_hotplug void drm_client_dev_hotplug ( s#drm_device * ) 
s#drm_client_buffer struct drm_client_buffer { s#drm_client_dev * client ; t#u32 handle ; t#u32 pitch ; s#drm_gem_object * gem ; void * vaddr ; s#drm_framebuffer * fb ; } 
drm_client_framebuffer_create s#drm_client_buffer * drm_client_framebuffer_create ( s#drm_client_dev * , t#u32 , t#u32 , t#u32 ) 
drm_client_framebuffer_delete void drm_client_framebuffer_delete ( s#drm_client_buffer * ) 

/* drivers/gpu/drm/drm_color_mgmt.o */
drm_color_lut_extract t#uint32_t drm_color_lut_extract ( t#uint32_t , t#uint32_t ) 
s##device_private
s##sock
s##vfsmount
s##posix_acl
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##nlm_lockowner
s##nfs4_lock_state
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##iommu_group
s##iommu_fwspec
s##drm_master
s##drm_gem_object
s##dma_buf
s##reservation_object
s##dma_buf_attachment
s##drm_device_dma
s##msi_controller
s##proc_dir_entry
s##hotplug_slot
s##pci_vpd
s##pci_sriov
s##agp_bridge_data
s##drm_sg_mem
s##drm_local_map
s##drm_atomic_state
s##drm_mode_config_helper_funcs
s##drm_vma_offset_manager
s##drm_fb_helper
s##drm_crtc_commit
s##drm_plane_helper_funcs
s##drm_encoder
s##drm_writeback_job
s##drm_connector_helper_funcs
s##drm_crtc_helper_funcs
t#uint typedef unsigned int uint 
drm_crtc_enable_color_mgmt void drm_crtc_enable_color_mgmt ( s#drm_crtc * , t#uint , t#bool , t#uint ) 
drm_mode_crtc_set_gamma_size int drm_mode_crtc_set_gamma_size ( s#drm_crtc * , int ) 
drm_plane_create_color_properties int drm_plane_create_color_properties ( s#drm_plane * , t#u32 , t#u32 , e#drm_color_encoding , e#drm_color_range ) 

/* drivers/gpu/drm/drm_connector.o */
s##device_private
s##sock
s##vfsmount
s##posix_acl
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##nlm_lockowner
s##nfs4_lock_state
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##iommu_group
s##iommu_fwspec
s##drm_master
s##drm_gem_object
s##dma_buf
s##reservation_object
s##dma_buf_attachment
s##drm_device_dma
s##msi_controller
s##proc_dir_entry
s##hotplug_slot
s##pci_vpd
s##pci_sriov
s##agp_bridge_data
s##drm_sg_mem
s##drm_local_map
s##drm_atomic_state
s##drm_mode_config_helper_funcs
s##drm_vma_offset_manager
s##drm_fb_helper
s##drm_crtc_commit
s##drm_plane_helper_funcs
s##drm_crtc_helper_funcs
s##drm_encoder_helper_funcs
s##drm_writeback_job
s##drm_connector_helper_funcs
drm_connector_init int drm_connector_init ( s#drm_device * , s#drm_connector * , const s#drm_connector_funcs * , int ) 
drm_connector_attach_encoder int drm_connector_attach_encoder ( s#drm_connector * , s#drm_encoder * ) 
drm_connector_has_possible_encoder t#bool drm_connector_has_possible_encoder ( s#drm_connector * , s#drm_encoder * ) 
drm_connector_cleanup void drm_connector_cleanup ( s#drm_connector * ) 
drm_connector_register int drm_connector_register ( s#drm_connector * ) 
drm_connector_unregister void drm_connector_unregister ( s#drm_connector * ) 
drm_get_connector_status_name const char * drm_get_connector_status_name ( e#drm_connector_status ) 
s#drm_connector_list_iter struct drm_connector_list_iter { s#drm_device * dev ; s#drm_connector * conn ; } 
drm_connector_list_iter_begin void drm_connector_list_iter_begin ( s#drm_device * , s#drm_connector_list_iter * ) 
drm_connector_list_iter_next s#drm_connector * drm_connector_list_iter_next ( s#drm_connector_list_iter * ) 
drm_connector_list_iter_end void drm_connector_list_iter_end ( s#drm_connector_list_iter * ) 
drm_get_subpixel_order_name const char * drm_get_subpixel_order_name ( e#subpixel_order ) 
drm_display_info_set_bus_formats int drm_display_info_set_bus_formats ( s#drm_display_info * , const t#u32 * , unsigned int ) 
drm_mode_create_dvi_i_properties int drm_mode_create_dvi_i_properties ( s#drm_device * ) 
drm_connector_attach_content_type_property int drm_connector_attach_content_type_property ( s#drm_connector * ) 
e#hdmi_infoframe_type enum hdmi_infoframe_type { HDMI_INFOFRAME_TYPE_VENDOR = 0x81 , HDMI_INFOFRAME_TYPE_AVI = 0x82 , HDMI_INFOFRAME_TYPE_SPD = 0x83 , HDMI_INFOFRAME_TYPE_AUDIO = 0x84 , } 
e#hdmi_colorspace enum hdmi_colorspace { HDMI_COLORSPACE_RGB , HDMI_COLORSPACE_YUV422 , HDMI_COLORSPACE_YUV444 , HDMI_COLORSPACE_YUV420 , HDMI_COLORSPACE_RESERVED4 , HDMI_COLORSPACE_RESERVED5 , HDMI_COLORSPACE_RESERVED6 , HDMI_COLORSPACE_IDO_DEFINED , } 
e#hdmi_scan_mode enum hdmi_scan_mode { HDMI_SCAN_MODE_NONE , HDMI_SCAN_MODE_OVERSCAN , HDMI_SCAN_MODE_UNDERSCAN , HDMI_SCAN_MODE_RESERVED , } 
e#hdmi_colorimetry enum hdmi_colorimetry { HDMI_COLORIMETRY_NONE , HDMI_COLORIMETRY_ITU_601 , HDMI_COLORIMETRY_ITU_709 , HDMI_COLORIMETRY_EXTENDED , } 
e#hdmi_active_aspect enum hdmi_active_aspect { HDMI_ACTIVE_ASPECT_16_9_TOP = 2 , HDMI_ACTIVE_ASPECT_14_9_TOP = 3 , HDMI_ACTIVE_ASPECT_16_9_CENTER = 4 , HDMI_ACTIVE_ASPECT_PICTURE = 8 , HDMI_ACTIVE_ASPECT_4_3 = 9 , HDMI_ACTIVE_ASPECT_16_9 = 10 , HDMI_ACTIVE_ASPECT_14_9 = 11 , HDMI_ACTIVE_ASPECT_4_3_SP_14_9 = 13 , HDMI_ACTIVE_ASPECT_16_9_SP_14_9 = 14 , HDMI_ACTIVE_ASPECT_16_9_SP_4_3 = 15 , } 
e#hdmi_extended_colorimetry enum hdmi_extended_colorimetry { HDMI_EXTENDED_COLORIMETRY_XV_YCC_601 , HDMI_EXTENDED_COLORIMETRY_XV_YCC_709 , HDMI_EXTENDED_COLORIMETRY_S_YCC_601 , HDMI_EXTENDED_COLORIMETRY_ADOBE_YCC_601 , HDMI_EXTENDED_COLORIMETRY_ADOBE_RGB , HDMI_EXTENDED_COLORIMETRY_BT2020_CONST_LUM , HDMI_EXTENDED_COLORIMETRY_BT2020 , HDMI_EXTENDED_COLORIMETRY_RESERVED , } 
e#hdmi_quantization_range enum hdmi_quantization_range { HDMI_QUANTIZATION_RANGE_DEFAULT , HDMI_QUANTIZATION_RANGE_LIMITED , HDMI_QUANTIZATION_RANGE_FULL , HDMI_QUANTIZATION_RANGE_RESERVED , } 
e#hdmi_nups enum hdmi_nups { HDMI_NUPS_UNKNOWN , HDMI_NUPS_HORIZONTAL , HDMI_NUPS_VERTICAL , HDMI_NUPS_BOTH , } 
e#hdmi_ycc_quantization_range enum hdmi_ycc_quantization_range { HDMI_YCC_QUANTIZATION_RANGE_LIMITED , HDMI_YCC_QUANTIZATION_RANGE_FULL , } 
e#hdmi_content_type enum hdmi_content_type { HDMI_CONTENT_TYPE_GRAPHICS , HDMI_CONTENT_TYPE_PHOTO , HDMI_CONTENT_TYPE_CINEMA , HDMI_CONTENT_TYPE_GAME , } 
s#hdmi_avi_infoframe struct hdmi_avi_infoframe { e#hdmi_infoframe_type type ; unsigned char version ; unsigned char length ; e#hdmi_colorspace colorspace ; e#hdmi_scan_mode scan_mode ; e#hdmi_colorimetry colorimetry ; e#hdmi_picture_aspect picture_aspect ; e#hdmi_active_aspect active_aspect ; t#bool itc ; e#hdmi_extended_colorimetry extended_colorimetry ; e#hdmi_quantization_range quantization_range ; e#hdmi_nups nups ; unsigned char video_code ; e#hdmi_ycc_quantization_range ycc_quantization_range ; e#hdmi_content_type content_type ; unsigned char pixel_repeat ; unsigned short top_bar ; unsigned short bottom_bar ; unsigned short left_bar ; unsigned short right_bar ; } 
drm_hdmi_avi_infoframe_content_type void drm_hdmi_avi_infoframe_content_type ( s#hdmi_avi_infoframe * , const s#drm_connector_state * ) 
drm_mode_create_tv_properties int drm_mode_create_tv_properties ( s#drm_device * , unsigned int , const char * const [ ] ) 
drm_mode_create_scaling_mode_property int drm_mode_create_scaling_mode_property ( s#drm_device * ) 
drm_connector_attach_scaling_mode_property int drm_connector_attach_scaling_mode_property ( s#drm_connector * , t#u32 ) 
drm_connector_attach_content_protection_property int drm_connector_attach_content_protection_property ( s#drm_connector * ) 
drm_mode_create_aspect_ratio_property int drm_mode_create_aspect_ratio_property ( s#drm_device * ) 
drm_mode_create_content_type_property int drm_mode_create_content_type_property ( s#drm_device * ) 
drm_mode_create_suggested_offset_properties int drm_mode_create_suggested_offset_properties ( s#drm_device * ) 
drm_connector_set_path_property int drm_connector_set_path_property ( s#drm_connector * , const char * ) 
drm_connector_set_tile_property int drm_connector_set_tile_property ( s#drm_connector * ) 
s#est_timings struct est_timings { t#u8 t1 ; t#u8 t2 ; t#u8 mfg_rsvd ; } 
s#std_timing struct std_timing { t#u8 hsize ; t#u8 vfreq_aspect ; } 
s#detailed_pixel_timing struct detailed_pixel_timing { t#u8 hactive_lo ; t#u8 hblank_lo ; t#u8 hactive_hblank_hi ; t#u8 vactive_lo ; t#u8 vblank_lo ; t#u8 vactive_vblank_hi ; t#u8 hsync_offset_lo ; t#u8 hsync_pulse_width_lo ; t#u8 vsync_offset_pulse_width_lo ; t#u8 hsync_vsync_offset_pulse_width_hi ; t#u8 width_mm_lo ; t#u8 height_mm_lo ; t#u8 width_height_mm_hi ; t#u8 hborder ; t#u8 vborder ; t#u8 misc ; } 
s#detailed_data_string struct detailed_data_string { t#u8 str [ 13 ] ; } 
s#detailed_data_monitor_range struct detailed_data_monitor_range { t#u8 min_vfreq ; t#u8 max_vfreq ; t#u8 min_hfreq_khz ; t#u8 max_hfreq_khz ; t#u8 pixel_clock_mhz ; t#u8 flags ; union { struct { t#u8 reserved ; t#u8 hfreq_start_khz ; t#u8 c ; t#__le16 m ; t#u8 k ; t#u8 j ; } __attribute__ ( ( packed ) ) gtf2 ; struct { t#u8 version ; t#u8 data1 ; t#u8 data2 ; t#u8 supported_aspects ; t#u8 flags ; t#u8 supported_scalings ; t#u8 preferred_refresh ; } __attribute__ ( ( packed ) ) cvt ; } formula ; } 
s#detailed_data_wpindex struct detailed_data_wpindex { t#u8 white_yx_lo ; t#u8 white_x_hi ; t#u8 white_y_hi ; t#u8 gamma ; } 
s#cvt_timing struct cvt_timing { t#u8 code [ 3 ] ; } 
s#detailed_non_pixel struct detailed_non_pixel { t#u8 pad1 ; t#u8 type ; t#u8 pad2 ; union { s#detailed_data_string str ; s#detailed_data_monitor_range range ; s#detailed_data_wpindex color ; s#std_timing timings [ 6 ] ; s#cvt_timing cvt [ 4 ] ; } data ; } 
s#detailed_timing struct detailed_timing { t#__le16 pixel_clock ; union { s#detailed_pixel_timing pixel_data ; s#detailed_non_pixel other_data ; } data ; } 
s#edid struct edid { t#u8 header [ 8 ] ; t#u8 mfg_id [ 2 ] ; t#u8 prod_code [ 2 ] ; t#u32 serial ; t#u8 mfg_week ; t#u8 mfg_year ; t#u8 version ; t#u8 revision ; t#u8 input ; t#u8 width_cm ; t#u8 height_cm ; t#u8 gamma ; t#u8 features ; t#u8 red_green_lo ; t#u8 black_white_lo ; t#u8 red_x ; t#u8 red_y ; t#u8 green_x ; t#u8 green_y ; t#u8 blue_x ; t#u8 blue_y ; t#u8 white_x ; t#u8 white_y ; s#est_timings established_timings ; s#std_timing standard_timings [ 8 ] ; s#detailed_timing detailed_timings [ 4 ] ; t#u8 extensions ; t#u8 checksum ; } 
drm_connector_update_edid_property int drm_connector_update_edid_property ( s#drm_connector * , const s#edid * ) 
drm_connector_set_link_status_property void drm_connector_set_link_status_property ( s#drm_connector * , t#uint64_t ) 
drm_connector_init_panel_orientation_property int drm_connector_init_panel_orientation_property ( s#drm_connector * , int , int ) 
drm_mode_put_tile_group void drm_mode_put_tile_group ( s#drm_device * , s#drm_tile_group * ) 
drm_mode_get_tile_group s#drm_tile_group * drm_mode_get_tile_group ( s#drm_device * , char [ 8 ] ) 
drm_mode_create_tile_group s#drm_tile_group * drm_mode_create_tile_group ( s#drm_device * , char [ 8 ] ) 

/* drivers/gpu/drm/drm_crtc.o */
s##device_private
s##sock
s##vfsmount
s##posix_acl
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##nlm_lockowner
s##nfs4_lock_state
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##iommu_group
s##iommu_fwspec
s##drm_gem_object
s##dma_buf
s##reservation_object
s##dma_buf_attachment
s##drm_device_dma
s##msi_controller
s##proc_dir_entry
s##hotplug_slot
s##pci_vpd
s##pci_sriov
s##agp_bridge_data
s##drm_sg_mem
s##drm_local_map
s##drm_plane_helper_funcs
s##drm_encoder
s##drm_writeback_job
s##drm_connector_helper_funcs
s##drm_mode_config_helper_funcs
s##drm_vma_offset_manager
s##drm_fb_helper
s##drm_crtc_helper_funcs
drm_crtc_from_index s#drm_crtc * drm_crtc_from_index ( s#drm_device * , int ) 
drm_crtc_force_disable int drm_crtc_force_disable ( s#drm_crtc * ) 
drm_crtc_force_disable_all int drm_crtc_force_disable_all ( s#drm_device * ) 
drm_crtc_init_with_planes __attribute__ ( ( format ( printf , 6 , 7 ) ) ) int drm_crtc_init_with_planes ( s#drm_device * , s#drm_crtc * , s#drm_plane * , s#drm_plane * , const s#drm_crtc_funcs * , const char * , ... ) 
drm_crtc_cleanup void drm_crtc_cleanup ( s#drm_crtc * ) 
drm_mode_set_config_internal int drm_mode_set_config_internal ( s#drm_mode_set * ) 
drm_crtc_check_viewport int drm_crtc_check_viewport ( const s#drm_crtc * , int , int , const s#drm_display_mode * , const s#drm_framebuffer * ) 

/* drivers/gpu/drm/drm_crtc_helper.o */
s##device_private
s##sock
s##vfsmount
s##posix_acl
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##nlm_lockowner
s##nfs4_lock_state
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##iommu_group
s##iommu_fwspec
s##drm_master
s##drm_gem_object
s##dma_buf
s##reservation_object
s##dma_buf_attachment
s##drm_device_dma
s##msi_controller
s##proc_dir_entry
s##hotplug_slot
s##pci_vpd
s##pci_sriov
s##agp_bridge_data
s##drm_sg_mem
s##drm_local_map
s##drm_writeback_job
e#mode_set_atomic enum mode_set_atomic { LEAVE_ATOMIC_MODE_SET , ENTER_ATOMIC_MODE_SET , } 
s##drm_vma_offset_manager
s#drm_fb_helper_crtc struct drm_fb_helper_crtc { s#drm_mode_set mode_set ; s#drm_display_mode * desired_mode ; int x , y ; int rotation ; } 
s#drm_fb_helper_connector struct drm_fb_helper_connector { s#drm_connector * connector ; } 
s#drm_fb_helper_surface_size struct drm_fb_helper_surface_size { t#u32 fb_width ; t#u32 fb_height ; t#u32 surface_width ; t#u32 surface_height ; t#u32 surface_bpp ; t#u32 surface_depth ; } 
s#drm_fb_offset struct drm_fb_offset { int x , y ; } 
s#drm_fb_helper_funcs struct drm_fb_helper_funcs { int ( * fb_probe ) ( s#drm_fb_helper * , s#drm_fb_helper_surface_size * ) ; t#bool ( * initial_config ) ( s#drm_fb_helper * , s#drm_fb_helper_crtc * * , s#drm_display_mode * * , s#drm_fb_offset * , t#bool * , int , int ) ; } 
s#fb_bitfield struct fb_bitfield { t#__u32 offset ; t#__u32 length ; t#__u32 msb_right ; } 
s#fb_var_screeninfo struct fb_var_screeninfo { t#__u32 xres ; t#__u32 yres ; t#__u32 xres_virtual ; t#__u32 yres_virtual ; t#__u32 xoffset ; t#__u32 yoffset ; t#__u32 bits_per_pixel ; t#__u32 grayscale ; s#fb_bitfield red ; s#fb_bitfield green ; s#fb_bitfield blue ; s#fb_bitfield transp ; t#__u32 nonstd ; t#__u32 activate ; t#__u32 height ; t#__u32 width ; t#__u32 accel_flags ; t#__u32 pixclock ; t#__u32 left_margin ; t#__u32 right_margin ; t#__u32 upper_margin ; t#__u32 lower_margin ; t#__u32 hsync_len ; t#__u32 vsync_len ; t#__u32 sync ; t#__u32 vmode ; t#__u32 rotate ; t#__u32 colorspace ; t#__u32 reserved [ 4 ] ; } 
s#fb_fix_screeninfo struct fb_fix_screeninfo { char id [ 16 ] ; unsigned long smem_start ; t#__u32 smem_len ; t#__u32 type ; t#__u32 type_aux ; t#__u32 visual ; t#__u16 xpanstep ; t#__u16 ypanstep ; t#__u16 ywrapstep ; t#__u32 line_length ; unsigned long mmio_start ; t#__u32 mmio_len ; t#__u32 accel ; t#__u16 capabilities ; t#__u16 reserved [ 2 ] ; } 
s#fb_chroma struct fb_chroma { t#__u32 redx ; t#__u32 greenx ; t#__u32 bluex ; t#__u32 whitex ; t#__u32 redy ; t#__u32 greeny ; t#__u32 bluey ; t#__u32 whitey ; } 
s#fb_videomode struct fb_videomode { const char * name ; t#u32 refresh ; t#u32 xres ; t#u32 yres ; t#u32 pixclock ; t#u32 left_margin ; t#u32 right_margin ; t#u32 upper_margin ; t#u32 lower_margin ; t#u32 hsync_len ; t#u32 vsync_len ; t#u32 sync ; t#u32 vmode ; t#u32 flag ; } 
s#fb_monspecs struct fb_monspecs { s#fb_chroma chroma ; s#fb_videomode * modedb ; t#__u8 manufacturer [ 4 ] ; t#__u8 monitor [ 14 ] ; t#__u8 serial_no [ 14 ] ; t#__u8 ascii [ 14 ] ; t#__u32 modedb_len ; t#__u32 model ; t#__u32 serial ; t#__u32 year ; t#__u32 week ; t#__u32 hfmin ; t#__u32 hfmax ; t#__u32 dclkmin ; t#__u32 dclkmax ; t#__u16 input ; t#__u16 dpms ; t#__u16 signal ; t#__u16 vfmin ; t#__u16 vfmax ; t#__u16 gamma ; t#__u16 gtf : 1 ; t#__u16 misc ; t#__u8 version ; t#__u8 revision ; t#__u8 max_x ; t#__u8 max_y ; } 
s#fb_pixmap struct fb_pixmap { t#u8 * addr ; t#u32 size ; t#u32 offset ; t#u32 buf_align ; t#u32 scan_align ; t#u32 access_align ; t#u32 flags ; t#u32 blit_x ; t#u32 blit_y ; void ( * writeio ) ( s#fb_info * , void * , void * , unsigned int ) ; void ( * readio ) ( s#fb_info * , void * , void * , unsigned int ) ; } 
s#fb_cmap struct fb_cmap { t#__u32 start ; t#__u32 len ; t#__u16 * red ; t#__u16 * green ; t#__u16 * blue ; t#__u16 * transp ; } 
s#fb_deferred_io struct fb_deferred_io { unsigned long delay ; s#mutex lock ; s#list_head pagelist ; void ( * first_io ) ( s#fb_info * ) ; void ( * deferred_io ) ( s#fb_info * , s#list_head * ) ; } 
s#fb_fillrect struct fb_fillrect { t#__u32 dx ; t#__u32 dy ; t#__u32 width ; t#__u32 height ; t#__u32 color ; t#__u32 rop ; } 
s#fb_copyarea struct fb_copyarea { t#__u32 dx ; t#__u32 dy ; t#__u32 width ; t#__u32 height ; t#__u32 sx ; t#__u32 sy ; } 
s#fb_image struct fb_image { t#__u32 dx ; t#__u32 dy ; t#__u32 width ; t#__u32 height ; t#__u32 fg_color ; t#__u32 bg_color ; t#__u8 depth ; const char * data ; s#fb_cmap cmap ; } 
s#fbcurpos struct fbcurpos { t#__u16 x , y ; } 
s#fb_cursor struct fb_cursor { t#__u16 set ; t#__u16 enable ; t#__u16 rop ; const char * mask ; s#fbcurpos hot ; s#fb_image image ; } 
s#fb_blit_caps struct fb_blit_caps { t#u32 x ; t#u32 y ; t#u32 len ; t#u32 flags ; } 
s#fb_ops struct fb_ops { s#module * owner ; int ( * fb_open ) ( s#fb_info * , int ) ; int ( * fb_release ) ( s#fb_info * , int ) ; t#ssize_t ( * fb_read ) ( s#fb_info * , char * , t#size_t , t#loff_t * ) ; t#ssize_t ( * fb_write ) ( s#fb_info * , const char * , t#size_t , t#loff_t * ) ; int ( * fb_check_var ) ( s#fb_var_screeninfo * , s#fb_info * ) ; int ( * fb_set_par ) ( s#fb_info * ) ; int ( * fb_setcolreg ) ( unsigned , unsigned , unsigned , unsigned , unsigned , s#fb_info * ) ; int ( * fb_setcmap ) ( s#fb_cmap * , s#fb_info * ) ; int ( * fb_blank ) ( int , s#fb_info * ) ; int ( * fb_pan_display ) ( s#fb_var_screeninfo * , s#fb_info * ) ; void ( * fb_fillrect ) ( s#fb_info * , const s#fb_fillrect * ) ; void ( * fb_copyarea ) ( s#fb_info * , const s#fb_copyarea * ) ; void ( * fb_imageblit ) ( s#fb_info * , const s#fb_image * ) ; int ( * fb_cursor ) ( s#fb_info * , s#fb_cursor * ) ; int ( * fb_sync ) ( s#fb_info * ) ; int ( * fb_ioctl ) ( s#fb_info * , unsigned int , unsigned long ) ; int ( * fb_compat_ioctl ) ( s#fb_info * , unsigned , unsigned long ) ; int ( * fb_mmap ) ( s#fb_info * , s#vm_area_struct * ) ; void ( * fb_get_caps ) ( s#fb_info * , s#fb_blit_caps * , s#fb_var_screeninfo * ) ; void ( * fb_destroy ) ( s#fb_info * ) ; int ( * fb_debug_enter ) ( s#fb_info * ) ; int ( * fb_debug_leave ) ( s#fb_info * ) ; } 
s#aperture struct aperture { t#resource_size_t base ; t#resource_size_t size ; } 
s#apertures_struct struct apertures_struct { unsigned int count ; s#aperture ranges [ 0 ] ; } 
s#fb_info struct fb_info { t#atomic_t count ; int node ; int flags ; int fbcon_rotate_hint ; s#mutex lock ; s#mutex mm_lock ; s#fb_var_screeninfo var ; s#fb_fix_screeninfo fix ; s#fb_monspecs monspecs ; s#work_struct queue ; s#fb_pixmap pixmap ; s#fb_pixmap sprite ; s#fb_cmap cmap ; s#list_head modelist ; s#fb_videomode * mode ; s#delayed_work deferred_work ; s#fb_deferred_io * fbdefio ; s#fb_ops * fbops ; s#device * device ; s#device * dev ; int class_flag ; union { char * screen_base ; char * screen_buffer ; } ; unsigned long screen_size ; void * pseudo_palette ; t#u32 state ; void * fbcon_par ; void * par ; s#apertures_struct * apertures ; t#bool skip_vt_switch ; } 
s#drm_fb_helper struct drm_fb_helper { s#drm_client_dev client ; s#drm_client_buffer * buffer ; s#drm_framebuffer * fb ; s#drm_device * dev ; int crtc_count ; s#drm_fb_helper_crtc * crtc_info ; int connector_count ; int connector_info_alloc_count ; int sw_rotations ; s#drm_fb_helper_connector * * connector_info ; const s#drm_fb_helper_funcs * funcs ; s#fb_info * fbdev ; t#u32 pseudo_palette [ 17 ] ; s#drm_clip_rect dirty_clip ; t#spinlock_t dirty_lock ; s#work_struct dirty_work ; s#work_struct resume_work ; s#mutex lock ; s#list_head kernel_fb_list ; t#bool delayed_hotplug ; t#bool deferred_setup ; int preferred_bpp ; } 
drm_helper_encoder_in_use t#bool drm_helper_encoder_in_use ( s#drm_encoder * ) 
drm_helper_crtc_in_use t#bool drm_helper_crtc_in_use ( s#drm_crtc * ) 
drm_helper_disable_unused_functions void drm_helper_disable_unused_functions ( s#drm_device * ) 
drm_crtc_helper_set_mode t#bool drm_crtc_helper_set_mode ( s#drm_crtc * , s#drm_display_mode * , int , int , s#drm_framebuffer * ) 
drm_crtc_helper_set_config int drm_crtc_helper_set_config ( s#drm_mode_set * , s#drm_modeset_acquire_ctx * ) 
drm_helper_connector_dpms int drm_helper_connector_dpms ( s#drm_connector * , int ) 
drm_helper_resume_force_mode void drm_helper_resume_force_mode ( s#drm_device * ) 
drm_helper_crtc_mode_set int drm_helper_crtc_mode_set ( s#drm_crtc * , s#drm_display_mode * , s#drm_display_mode * , int , int , s#drm_framebuffer * ) 
drm_helper_crtc_mode_set_base int drm_helper_crtc_mode_set_base ( s#drm_crtc * , int , int , s#drm_framebuffer * ) 

/* drivers/gpu/drm/drm_debugfs.o */
s##vfsmount
s##posix_acl
s##sock
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##pipe_inode_info
s##writeback_control
s##bio_vec
s##swap_info_struct
s##device_private
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##iommu_group
s##iommu_fwspec
s##kmem_cache
s##mem_cgroup
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##nlm_lockowner
s##nfs4_lock_state
s##fsnotify_mark_connector
s##fscrypt_info
s#drm_info_list struct drm_info_list { const char * name ; int ( * show ) ( s#seq_file * , void * ) ; t#u32 driver_features ; void * data ; } 
s##drm_master
s##drm_gem_object
s##dma_buf
s##reservation_object
s##dma_buf_attachment
s##drm_device_dma
s##msi_controller
s##proc_dir_entry
s##hotplug_slot
s##pci_vpd
s##pci_sriov
s##agp_bridge_data
s##drm_sg_mem
s##drm_local_map
s##drm_encoder
s##drm_writeback_job
s##drm_connector_helper_funcs
s##drm_crtc_helper_funcs
s##drm_plane_helper_funcs
s##drm_mode_config_helper_funcs
s##drm_vma_offset_manager
s##drm_fb_helper
drm_debugfs_create_files int drm_debugfs_create_files ( const s#drm_info_list * , int , s#dentry * , s#drm_minor * ) 
drm_debugfs_remove_files int drm_debugfs_remove_files ( const s#drm_info_list * , int , s#drm_minor * ) 

/* drivers/gpu/drm/drm_debugfs_crc.o */
s##device_private
s##sock
s##vfsmount
s##posix_acl
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##nlm_lockowner
s##nfs4_lock_state
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##iommu_group
s##iommu_fwspec
s##drm_master
s##drm_gem_object
s##dma_buf
s##reservation_object
s##dma_buf_attachment
s##drm_device_dma
s##msi_controller
s##proc_dir_entry
s##hotplug_slot
s##pci_vpd
s##pci_sriov
s##agp_bridge_data
s##drm_sg_mem
s##drm_local_map
s##drm_atomic_state
s##drm_mode_config_helper_funcs
s##drm_vma_offset_manager
s##drm_fb_helper
s##drm_crtc_commit
s##drm_plane_helper_funcs
s##drm_encoder
s##drm_writeback_job
s##drm_connector_helper_funcs
s##drm_crtc_helper_funcs
drm_crtc_add_crc_entry int drm_crtc_add_crc_entry ( s#drm_crtc * , t#bool , t#uint32_t , t#uint32_t * ) 

/* drivers/gpu/drm/drm_dp_cec.o */
s##sock
s##vfsmount
s##posix_acl
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##mmu_notifier_mm
s##xol_area
s##pid_namespace
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##bpf_prog_array
s##cgroup_taskset
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##device_private
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##iommu_group
s##iommu_fwspec
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##nlm_lockowner
s##nfs4_lock_state
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s#i2c_msg struct i2c_msg { t#__u16 addr ; t#__u16 flags ; t#__u16 len ; t#__u8 * buf ; } 
u#i2c_smbus_data union i2c_smbus_data { t#__u8 byte ; t#__u16 word ; t#__u8 block [ 32 + 2 ] ; } 
s#i2c_algorithm struct i2c_algorithm { int ( * master_xfer ) ( s#i2c_adapter * , s#i2c_msg * , int ) ; int ( * smbus_xfer ) ( s#i2c_adapter * , t#u16 , unsigned short , char , t#u8 , int , u#i2c_smbus_data * ) ; t#u32 ( * functionality ) ( s#i2c_adapter * ) ; } 
s#i2c_lock_operations struct i2c_lock_operations { void ( * lock_bus ) ( s#i2c_adapter * , unsigned int ) ; int ( * trylock_bus ) ( s#i2c_adapter * , unsigned int ) ; void ( * unlock_bus ) ( s#i2c_adapter * , unsigned int ) ; } 
s#rt_mutex struct rt_mutex { t#raw_spinlock_t wait_lock ; s#rb_root_cached waiters ; s#task_struct * owner ; } 
s##gpio_desc
s#i2c_bus_recovery_info struct i2c_bus_recovery_info { int ( * recover_bus ) ( s#i2c_adapter * ) ; int ( * get_scl ) ( s#i2c_adapter * ) ; void ( * set_scl ) ( s#i2c_adapter * , int ) ; int ( * get_sda ) ( s#i2c_adapter * ) ; void ( * prepare_recovery ) ( s#i2c_adapter * ) ; void ( * unprepare_recovery ) ( s#i2c_adapter * ) ; s#gpio_desc * scl_gpiod ; s#gpio_desc * sda_gpiod ; } 
s#i2c_adapter_quirks struct i2c_adapter_quirks { t#u64 flags ; int max_num_msgs ; t#u16 max_write_len ; t#u16 max_read_len ; t#u16 max_comb_1st_msg_len ; t#u16 max_comb_2nd_msg_len ; } 
e#irq_domain_bus_token enum irq_domain_bus_token { DOMAIN_BUS_ANY = 0 , DOMAIN_BUS_WIRED , DOMAIN_BUS_PCI_MSI , DOMAIN_BUS_PLATFORM_MSI , DOMAIN_BUS_NEXUS , DOMAIN_BUS_IPI , DOMAIN_BUS_FSL_MC_MSI , } 
s#irq_fwspec struct irq_fwspec { s#fwnode_handle * fwnode ; int param_count ; t#u32 param [ 16 ] ; } 
t#irq_hw_number_t typedef unsigned long irq_hw_number_t 
s#irq_domain_ops struct irq_domain_ops { int ( * match ) ( s#irq_domain * , s#device_node * , e#irq_domain_bus_token ) ; int ( * select ) ( s#irq_domain * , s#irq_fwspec * , e#irq_domain_bus_token ) ; int ( * map ) ( s#irq_domain * , unsigned int , t#irq_hw_number_t ) ; void ( * unmap ) ( s#irq_domain * , unsigned int ) ; int ( * xlate ) ( s#irq_domain * , s#device_node * , const t#u32 * , unsigned int , unsigned long * , unsigned int * ) ; } 
s##irq_domain_chip_generic
s#irq_domain struct irq_domain { s#list_head link ; const char * name ; const s#irq_domain_ops * ops ; void * host_data ; unsigned int flags ; s#fwnode_handle * fwnode ; e#irq_domain_bus_token bus_token ; s#irq_domain_chip_generic * gc ; t#irq_hw_number_t hwirq_max ; unsigned int revmap_direct_max_irq ; unsigned int revmap_size ; s#radix_tree_root revmap_tree ; unsigned int linear_revmap [ ] ; } 
s#i2c_adapter struct i2c_adapter { s#module * owner ; unsigned int class ; const s#i2c_algorithm * algo ; void * algo_data ; const s#i2c_lock_operations * lock_ops ; s#rt_mutex bus_lock ; s#rt_mutex mux_lock ; int timeout ; int retries ; s#device dev ; int nr ; char name [ 48 ] ; s#completion dev_released ; s#mutex userspace_clients_lock ; s#list_head userspace_clients ; s#i2c_bus_recovery_info * bus_recovery_info ; const s#i2c_adapter_quirks * quirks ; s#irq_domain * host_notify_domain ; } 
s##drm_crtc
s#drm_dp_aux_msg struct drm_dp_aux_msg { unsigned int address ; t#u8 request ; t#u8 reply ; void * buffer ; t#size_t size ; } 
s#cec_devnode struct cec_devnode { s#device dev ; s#cdev cdev ; int minor ; t#bool registered ; t#bool unregistered ; s#list_head fhs ; s#mutex lock ; } 
s#input_id struct input_id { t#__u16 bustype ; t#__u16 vendor ; t#__u16 product ; t#__u16 version ; } 
s#rc_map_table struct rc_map_table { t#u32 scancode ; t#u32 keycode ; } 
e#rc_type enum rc_type { RC_TYPE_UNKNOWN = 0 , RC_TYPE_OTHER = 1 , RC_TYPE_RC5 = 2 , RC_TYPE_RC5X_20 = 3 , RC_TYPE_RC5_SZ = 4 , RC_TYPE_JVC = 5 , RC_TYPE_SONY12 = 6 , RC_TYPE_SONY15 = 7 , RC_TYPE_SONY20 = 8 , RC_TYPE_NEC = 9 , RC_TYPE_NECX = 10 , RC_TYPE_NEC32 = 11 , RC_TYPE_SANYO = 12 , RC_TYPE_MCIR2_KBD = 13 , RC_TYPE_MCIR2_MSE = 14 , RC_TYPE_RC6_0 = 15 , RC_TYPE_RC6_6A_20 = 16 , RC_TYPE_RC6_6A_24 = 17 , RC_TYPE_RC6_6A_32 = 18 , RC_TYPE_RC6_MCE = 19 , RC_TYPE_SHARP = 20 , RC_TYPE_XMP = 21 , RC_TYPE_CEC = 22 , } 
s#rc_map struct rc_map { s#rc_map_table * scan ; unsigned int size ; unsigned int len ; unsigned int alloc ; e#rc_type rc_type ; const char * name ; t#spinlock_t lock ; } 
s##ir_raw_event_ctrl
s#input_keymap_entry struct input_keymap_entry { t#__u8 flags ; t#__u8 len ; t#__u16 index ; t#__u32 keycode ; t#__u8 scancode [ 32 ] ; } 
s#ff_trigger struct ff_trigger { t#__u16 button ; t#__u16 interval ; } 
s#ff_replay struct ff_replay { t#__u16 length ; t#__u16 delay ; } 
s#ff_envelope struct ff_envelope { t#__u16 attack_length ; t#__u16 attack_level ; t#__u16 fade_length ; t#__u16 fade_level ; } 
s#ff_constant_effect struct ff_constant_effect { t#__s16 level ; s#ff_envelope envelope ; } 
s#ff_ramp_effect struct ff_ramp_effect { t#__s16 start_level ; t#__s16 end_level ; s#ff_envelope envelope ; } 
s#ff_periodic_effect struct ff_periodic_effect { t#__u16 waveform ; t#__u16 period ; t#__s16 magnitude ; t#__s16 offset ; t#__u16 phase ; s#ff_envelope envelope ; t#__u32 custom_len ; t#__s16 * custom_data ; } 
s#ff_condition_effect struct ff_condition_effect { t#__u16 right_saturation ; t#__u16 left_saturation ; t#__s16 right_coeff ; t#__s16 left_coeff ; t#__u16 deadband ; t#__s16 center ; } 
s#ff_rumble_effect struct ff_rumble_effect { t#__u16 strong_magnitude ; t#__u16 weak_magnitude ; } 
s#ff_effect struct ff_effect { t#__u16 type ; t#__s16 id ; t#__u16 direction ; s#ff_trigger trigger ; s#ff_replay replay ; union { s#ff_constant_effect constant ; s#ff_ramp_effect ramp ; s#ff_periodic_effect periodic ; s#ff_condition_effect condition [ 2 ] ; s#ff_rumble_effect rumble ; } u ; } 
s#ff_device struct ff_device { int ( * upload ) ( s#input_dev * , s#ff_effect * , s#ff_effect * ) ; int ( * erase ) ( s#input_dev * , int ) ; int ( * playback ) ( s#input_dev * , int , int ) ; void ( * set_gain ) ( s#input_dev * , t#u16 ) ; void ( * set_autocenter ) ( s#input_dev * , t#u16 ) ; void ( * destroy ) ( s#ff_device * ) ; void * private ; unsigned long ffbit [ ( ( ( ( 0x7f + 1 ) ) + ( 8 * sizeof ( long ) ) - 1 ) / ( 8 * sizeof ( long ) ) ) ] ; s#mutex mutex ; int max_effects ; s#ff_effect * effects ; s#file * effect_owners [ ] ; } 
s##input_mt
s#input_absinfo struct input_absinfo { t#__s32 value ; t#__s32 minimum ; t#__s32 maximum ; t#__s32 fuzz ; t#__s32 flat ; t#__s32 resolution ; } 
s#input_value struct input_value { t#__u16 type ; t#__u16 code ; t#__s32 value ; } 
s#input_device_id struct input_device_id { t#kernel_ulong_t flags ; t#__u16 bustype ; t#__u16 vendor ; t#__u16 product ; t#__u16 version ; t#kernel_ulong_t evbit [ 0x1f / 64 + 1 ] ; t#kernel_ulong_t keybit [ 0x2ff / 64 + 1 ] ; t#kernel_ulong_t relbit [ 0x0f / 64 + 1 ] ; t#kernel_ulong_t absbit [ 0x3f / 64 + 1 ] ; t#kernel_ulong_t mscbit [ 0x07 / 64 + 1 ] ; t#kernel_ulong_t ledbit [ 0x0f / 64 + 1 ] ; t#kernel_ulong_t sndbit [ 0x07 / 64 + 1 ] ; t#kernel_ulong_t ffbit [ 0x7f / 64 + 1 ] ; t#kernel_ulong_t swbit [ 0x0f / 64 + 1 ] ; t#kernel_ulong_t driver_info ; } 
s#input_handler struct input_handler { void * private ; void ( * event ) ( s#input_handle * , unsigned int , unsigned int , int ) ; void ( * events ) ( s#input_handle * , const s#input_value * , unsigned int ) ; t#bool ( * filter ) ( s#input_handle * , unsigned int , unsigned int , int ) ; t#bool ( * match ) ( s#input_handler * , s#input_dev * ) ; int ( * connect ) ( s#input_handler * , s#input_dev * , const s#input_device_id * ) ; void ( * disconnect ) ( s#input_handle * ) ; void ( * start ) ( s#input_handle * ) ; t#bool legacy_minors ; int minor ; const char * name ; const s#input_device_id * id_table ; s#list_head h_list ; s#list_head node ; } 
s#input_handle struct input_handle { void * private ; int open ; const char * name ; s#input_dev * dev ; s#input_handler * handler ; s#list_head d_node ; s#list_head h_node ; } 
s#input_dev struct input_dev { const char * name ; const char * phys ; const char * uniq ; s#input_id id ; unsigned long propbit [ ( ( ( ( 0x1f + 1 ) ) + ( 8 * sizeof ( long ) ) - 1 ) / ( 8 * sizeof ( long ) ) ) ] ; unsigned long evbit [ ( ( ( ( 0x1f + 1 ) ) + ( 8 * sizeof ( long ) ) - 1 ) / ( 8 * sizeof ( long ) ) ) ] ; unsigned long keybit [ ( ( ( ( 0x2ff + 1 ) ) + ( 8 * sizeof ( long ) ) - 1 ) / ( 8 * sizeof ( long ) ) ) ] ; unsigned long relbit [ ( ( ( ( 0x0f + 1 ) ) + ( 8 * sizeof ( long ) ) - 1 ) / ( 8 * sizeof ( long ) ) ) ] ; unsigned long absbit [ ( ( ( ( 0x3f + 1 ) ) + ( 8 * sizeof ( long ) ) - 1 ) / ( 8 * sizeof ( long ) ) ) ] ; unsigned long mscbit [ ( ( ( ( 0x07 + 1 ) ) + ( 8 * sizeof ( long ) ) - 1 ) / ( 8 * sizeof ( long ) ) ) ] ; unsigned long ledbit [ ( ( ( ( 0x0f + 1 ) ) + ( 8 * sizeof ( long ) ) - 1 ) / ( 8 * sizeof ( long ) ) ) ] ; unsigned long sndbit [ ( ( ( ( 0x07 + 1 ) ) + ( 8 * sizeof ( long ) ) - 1 ) / ( 8 * sizeof ( long ) ) ) ] ; unsigned long ffbit [ ( ( ( ( 0x7f + 1 ) ) + ( 8 * sizeof ( long ) ) - 1 ) / ( 8 * sizeof ( long ) ) ) ] ; unsigned long swbit [ ( ( ( ( 0x0f + 1 ) ) + ( 8 * sizeof ( long ) ) - 1 ) / ( 8 * sizeof ( long ) ) ) ] ; unsigned int hint_events_per_packet ; unsigned int keycodemax ; unsigned int keycodesize ; void * keycode ; int ( * setkeycode ) ( s#input_dev * , const s#input_keymap_entry * , unsigned int * ) ; int ( * getkeycode ) ( s#input_dev * , s#input_keymap_entry * ) ; s#ff_device * ff ; unsigned int repeat_key ; s#timer_list timer ; int rep [ ( 0x01 + 1 ) ] ; s#input_mt * mt ; s#input_absinfo * absinfo ; unsigned long key [ ( ( ( ( 0x2ff + 1 ) ) + ( 8 * sizeof ( long ) ) - 1 ) / ( 8 * sizeof ( long ) ) ) ] ; unsigned long led [ ( ( ( ( 0x0f + 1 ) ) + ( 8 * sizeof ( long ) ) - 1 ) / ( 8 * sizeof ( long ) ) ) ] ; unsigned long snd [ ( ( ( ( 0x07 + 1 ) ) + ( 8 * sizeof ( long ) ) - 1 ) / ( 8 * sizeof ( long ) ) ) ] ; unsigned long sw [ ( ( ( ( 0x0f + 1 ) ) + ( 8 * sizeof ( long ) ) - 1 ) / ( 8 * sizeof ( long ) ) ) ] ; int ( * open ) ( s#input_dev * ) ; void ( * close ) ( s#input_dev * ) ; int ( * flush ) ( s#input_dev * , s#file * ) ; int ( * event ) ( s#input_dev * , unsigned int , unsigned int , int ) ; s#input_handle * grab ; t#spinlock_t event_lock ; s#mutex mutex ; unsigned int users ; t#bool going_away ; s#device dev ; s#list_head h_list ; s#list_head node ; unsigned int num_vals ; unsigned int max_vals ; s#input_value * vals ; t#bool devres_managed ; } 
e#rc_driver_type enum rc_driver_type { RC_DRIVER_SCANCODE = 0 , RC_DRIVER_IR_RAW , RC_DRIVER_IR_RAW_TX , } 
s#rc_scancode_filter struct rc_scancode_filter { t#u32 data ; t#u32 mask ; } 
s#rc_dev struct rc_dev { s#device dev ; t#atomic_t initialized ; t#bool managed_alloc ; const s#attribute_group * sysfs_groups [ 5 ] ; const char * input_name ; const char * input_phys ; s#input_id input_id ; char * driver_name ; const char * map_name ; s#rc_map rc_map ; s#mutex lock ; unsigned int minor ; s#ir_raw_event_ctrl * raw ; s#input_dev * input_dev ; e#rc_driver_type driver_type ; t#bool idle ; t#bool encode_wakeup ; t#u64 allowed_protocols ; t#u64 enabled_protocols ; t#u64 allowed_wakeup_protocols ; e#rc_type wakeup_protocol ; s#rc_scancode_filter scancode_filter ; s#rc_scancode_filter scancode_wakeup_filter ; t#u32 scancode_mask ; t#u32 users ; void * priv ; t#spinlock_t keylock ; t#bool keypressed ; unsigned long keyup_jiffies ; s#timer_list timer_keyup ; t#u32 last_keycode ; e#rc_type last_protocol ; t#u32 last_scancode ; t#u8 last_toggle ; t#u32 timeout ; t#u32 min_timeout ; t#u32 max_timeout ; t#u32 rx_resolution ; t#u32 tx_resolution ; int ( * change_protocol ) ( s#rc_dev * , t#u64 * ) ; int ( * open ) ( s#rc_dev * ) ; void ( * close ) ( s#rc_dev * ) ; int ( * s_tx_mask ) ( s#rc_dev * , t#u32 ) ; int ( * s_tx_carrier ) ( s#rc_dev * , t#u32 ) ; int ( * s_tx_duty_cycle ) ( s#rc_dev * , t#u32 ) ; int ( * s_rx_carrier_range ) ( s#rc_dev * , t#u32 , t#u32 ) ; int ( * tx_ir ) ( s#rc_dev * , unsigned * , unsigned ) ; void ( * s_idle ) ( s#rc_dev * , t#bool ) ; int ( * s_learning_mode ) ( s#rc_dev * , int ) ; int ( * s_carrier_report ) ( s#rc_dev * , int ) ; int ( * s_filter ) ( s#rc_dev * , s#rc_scancode_filter * ) ; int ( * s_wakeup_filter ) ( s#rc_dev * , s#rc_scancode_filter * ) ; int ( * s_timeout ) ( s#rc_dev * , unsigned int ) ; } 
s#cec_msg struct cec_msg { t#__u64 tx_ts ; t#__u64 rx_ts ; t#__u32 len ; t#__u32 timeout ; t#__u32 sequence ; t#__u32 flags ; t#__u8 msg [ 16 ] ; t#__u8 reply ; t#__u8 rx_status ; t#__u8 tx_status ; t#__u8 tx_arb_lost_cnt ; t#__u8 tx_nack_cnt ; t#__u8 tx_low_drive_cnt ; t#__u8 tx_error_cnt ; } 
s#cec_event_state_change struct cec_event_state_change { t#__u16 phys_addr ; t#__u16 log_addr_mask ; } 
s#cec_event_lost_msgs struct cec_event_lost_msgs { t#__u32 lost_msgs ; } 
s#cec_event struct cec_event { t#__u64 ts ; t#__u32 event ; t#__u32 flags ; union { s#cec_event_state_change state_change ; s#cec_event_lost_msgs lost_msgs ; t#__u32 raw [ 16 ] ; } ; } 
s#cec_fh struct cec_fh { s#list_head list ; s#list_head xfer_list ; s#cec_adapter * adap ; t#u8 mode_initiator ; t#u8 mode_follower ; t#wait_queue_head_t wait ; unsigned int pending_events ; s#cec_event events [ 2 ] ; s#mutex lock ; s#list_head msgs ; unsigned int queued_msgs ; } 
s#cec_data struct cec_data { s#list_head list ; s#list_head xfer_list ; s#cec_adapter * adap ; s#cec_msg msg ; s#cec_fh * fh ; s#delayed_work work ; s#completion c ; t#u8 attempts ; t#bool new_initiator ; t#bool blocking ; t#bool completed ; } 
s#cec_adap_ops struct cec_adap_ops { int ( * adap_enable ) ( s#cec_adapter * , t#bool ) ; int ( * adap_monitor_all_enable ) ( s#cec_adapter * , t#bool ) ; int ( * adap_log_addr ) ( s#cec_adapter * , t#u8 ) ; int ( * adap_transmit ) ( s#cec_adapter * , t#u8 , t#u32 , s#cec_msg * ) ; void ( * adap_status ) ( s#cec_adapter * , s#seq_file * ) ; int ( * received ) ( s#cec_adapter * , s#cec_msg * ) ; } 
s#cec_log_addrs struct cec_log_addrs { t#__u8 log_addr [ 4 ] ; t#__u16 log_addr_mask ; t#__u8 cec_version ; t#__u8 num_log_addrs ; t#__u32 vendor_id ; t#__u32 flags ; char osd_name [ 15 ] ; t#__u8 primary_device_type [ 4 ] ; t#__u8 log_addr_type [ 4 ] ; t#__u8 all_device_types [ 4 ] ; t#__u8 features [ 4 ] [ 12 ] ; } 
s#cec_adapter struct cec_adapter { s#module * owner ; char name [ 32 ] ; s#cec_devnode devnode ; s#mutex lock ; s#rc_dev * rc ; s#list_head transmit_queue ; unsigned int transmit_queue_sz ; s#list_head wait_queue ; s#cec_data * transmitting ; s#task_struct * kthread_config ; s#completion config_completion ; s#task_struct * kthread ; t#wait_queue_head_t kthread_waitq ; t#wait_queue_head_t waitq ; const s#cec_adap_ops * ops ; void * priv ; t#u32 capabilities ; t#u8 available_log_addrs ; t#u16 phys_addr ; t#bool needs_hpd ; t#bool is_configuring ; t#bool is_configured ; t#u32 monitor_all_cnt ; t#u32 follower_cnt ; s#cec_fh * cec_follower ; s#cec_fh * cec_initiator ; t#bool passthrough ; s#cec_log_addrs log_addrs ; s#dentry * cec_dir ; s#dentry * status_file ; t#u16 phys_addrs [ 15 ] ; t#u32 sequence ; char input_name [ 32 ] ; char input_phys [ 32 ] ; char input_drv [ 32 ] ; } 
s#drm_dp_aux_cec struct drm_dp_aux_cec { s#mutex lock ; s#cec_adapter * adap ; const char * name ; s#device * parent ; s#delayed_work unregister_work ; } 
s#drm_dp_aux struct drm_dp_aux { const char * name ; s#i2c_adapter ddc ; s#device * dev ; s#drm_crtc * crtc ; s#mutex hw_mutex ; s#work_struct crc_work ; t#u8 crc_count ; t#ssize_t ( * transfer ) ( s#drm_dp_aux * , s#drm_dp_aux_msg * ) ; unsigned i2c_nack_count ; unsigned i2c_defer_count ; s#drm_dp_aux_cec cec ; } 
drm_dp_cec_irq void drm_dp_cec_irq ( s#drm_dp_aux * ) 
s##edid
drm_dp_cec_set_edid void drm_dp_cec_set_edid ( s#drm_dp_aux * , const s#edid * ) 
drm_dp_cec_unset_edid void drm_dp_cec_unset_edid ( s#drm_dp_aux * ) 
drm_dp_cec_register_connector void drm_dp_cec_register_connector ( s#drm_dp_aux * , const char * , s#device * ) 
drm_dp_cec_unregister_connector void drm_dp_cec_unregister_connector ( s#drm_dp_aux * ) 

/* drivers/gpu/drm/drm_dp_dual_mode_helper.o */
s##sock
s##vfsmount
s##posix_acl
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##device_private
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##iommu_group
s##iommu_fwspec
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##nlm_lockowner
s##nfs4_lock_state
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##gpio_desc
s##irq_domain_chip_generic
drm_dp_dual_mode_read t#ssize_t drm_dp_dual_mode_read ( s#i2c_adapter * , t#u8 , void * , t#size_t ) 
drm_dp_dual_mode_write t#ssize_t drm_dp_dual_mode_write ( s#i2c_adapter * , t#u8 , const void * , t#size_t ) 
e#drm_dp_dual_mode_type enum drm_dp_dual_mode_type { DRM_DP_DUAL_MODE_NONE , DRM_DP_DUAL_MODE_UNKNOWN , DRM_DP_DUAL_MODE_TYPE1_DVI , DRM_DP_DUAL_MODE_TYPE1_HDMI , DRM_DP_DUAL_MODE_TYPE2_DVI , DRM_DP_DUAL_MODE_TYPE2_HDMI , DRM_DP_DUAL_MODE_LSPCON , } 
drm_dp_dual_mode_detect e#drm_dp_dual_mode_type drm_dp_dual_mode_detect ( s#i2c_adapter * ) 
drm_dp_dual_mode_max_tmds_clock int drm_dp_dual_mode_max_tmds_clock ( e#drm_dp_dual_mode_type , s#i2c_adapter * ) 
drm_dp_dual_mode_get_tmds_output int drm_dp_dual_mode_get_tmds_output ( e#drm_dp_dual_mode_type , s#i2c_adapter * , t#bool * ) 
drm_dp_dual_mode_set_tmds_output int drm_dp_dual_mode_set_tmds_output ( e#drm_dp_dual_mode_type , s#i2c_adapter * , t#bool ) 
drm_dp_get_dual_mode_type_name const char * drm_dp_get_dual_mode_type_name ( e#drm_dp_dual_mode_type ) 
e#drm_lspcon_mode enum drm_lspcon_mode { DRM_LSPCON_MODE_INVALID , DRM_LSPCON_MODE_LS , DRM_LSPCON_MODE_PCON , } 
drm_lspcon_get_mode int drm_lspcon_get_mode ( s#i2c_adapter * , e#drm_lspcon_mode * ) 
drm_lspcon_set_mode int drm_lspcon_set_mode ( s#i2c_adapter * , e#drm_lspcon_mode ) 

/* drivers/gpu/drm/drm_dp_helper.o */
drm_dp_channel_eq_ok t#bool drm_dp_channel_eq_ok ( const t#u8 [ 6 ] , int ) 
drm_dp_clock_recovery_ok t#bool drm_dp_clock_recovery_ok ( const t#u8 [ 6 ] , int ) 
drm_dp_get_adjust_request_voltage t#u8 drm_dp_get_adjust_request_voltage ( const t#u8 [ 6 ] , int ) 
drm_dp_get_adjust_request_pre_emphasis t#u8 drm_dp_get_adjust_request_pre_emphasis ( const t#u8 [ 6 ] , int ) 
drm_dp_link_train_clock_recovery_delay void drm_dp_link_train_clock_recovery_delay ( const t#u8 [ 0xf ] ) 
drm_dp_link_train_channel_eq_delay void drm_dp_link_train_channel_eq_delay ( const t#u8 [ 0xf ] ) 
drm_dp_link_rate_to_bw_code t#u8 drm_dp_link_rate_to_bw_code ( int ) 
drm_dp_bw_code_to_link_rate int drm_dp_bw_code_to_link_rate ( t#u8 ) 
s##sock
s##vfsmount
s##posix_acl
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##device_private
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##iommu_group
s##iommu_fwspec
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##nlm_lockowner
s##nfs4_lock_state
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##gpio_desc
s##irq_domain_chip_generic
s##drm_master
s##drm_gem_object
s##dma_buf
s##reservation_object
s##dma_buf_attachment
s##drm_device_dma
s##msi_controller
s##proc_dir_entry
s##hotplug_slot
s##pci_vpd
s##pci_sriov
s##agp_bridge_data
s##drm_sg_mem
s##drm_local_map
s##drm_atomic_state
s##drm_mode_config_helper_funcs
s##drm_vma_offset_manager
s##drm_fb_helper
s##drm_crtc_commit
s##drm_plane_helper_funcs
s##drm_encoder_helper_funcs
s##drm_writeback_job
s##drm_connector_helper_funcs
s##drm_crtc_helper_funcs
s##cec_adapter
drm_dp_dpcd_read t#ssize_t drm_dp_dpcd_read ( s#drm_dp_aux * , unsigned int , void * , t#size_t ) 
drm_dp_dpcd_write t#ssize_t drm_dp_dpcd_write ( s#drm_dp_aux * , unsigned int , void * , t#size_t ) 
drm_dp_dpcd_read_link_status int drm_dp_dpcd_read_link_status ( s#drm_dp_aux * , t#u8 [ 6 ] ) 
s#drm_dp_link struct drm_dp_link { unsigned char revision ; unsigned int rate ; unsigned int num_lanes ; unsigned long capabilities ; } 
drm_dp_link_probe int drm_dp_link_probe ( s#drm_dp_aux * , s#drm_dp_link * ) 
drm_dp_link_power_up int drm_dp_link_power_up ( s#drm_dp_aux * , s#drm_dp_link * ) 
drm_dp_link_power_down int drm_dp_link_power_down ( s#drm_dp_aux * , s#drm_dp_link * ) 
drm_dp_link_configure int drm_dp_link_configure ( s#drm_dp_aux * , s#drm_dp_link * ) 
drm_dp_downstream_max_clock int drm_dp_downstream_max_clock ( const t#u8 [ 0xf ] , const t#u8 [ 4 ] ) 
drm_dp_downstream_max_bpc int drm_dp_downstream_max_bpc ( const t#u8 [ 0xf ] , const t#u8 [ 4 ] ) 
drm_dp_downstream_id int drm_dp_downstream_id ( s#drm_dp_aux * , char [ 6 ] ) 
drm_dp_downstream_debug void drm_dp_downstream_debug ( s#seq_file * , const t#u8 [ 0xf ] , const t#u8 [ 4 ] , s#drm_dp_aux * ) 
drm_dp_aux_init void drm_dp_aux_init ( s#drm_dp_aux * ) 
drm_dp_aux_register int drm_dp_aux_register ( s#drm_dp_aux * ) 
drm_dp_aux_unregister void drm_dp_aux_unregister ( s#drm_dp_aux * ) 
drm_dp_psr_setup_time int drm_dp_psr_setup_time ( const t#u8 [ 2 ] ) 
drm_dp_start_crc int drm_dp_start_crc ( s#drm_dp_aux * , s#drm_crtc * ) 
drm_dp_stop_crc int drm_dp_stop_crc ( s#drm_dp_aux * ) 
s#drm_dp_dpcd_ident struct drm_dp_dpcd_ident { t#u8 oui [ 3 ] ; t#u8 device_id [ 6 ] ; t#u8 hw_rev ; t#u8 sw_major_rev ; t#u8 sw_minor_rev ; } 
s#drm_dp_desc struct drm_dp_desc { s#drm_dp_dpcd_ident ident ; t#u32 quirks ; } 
drm_dp_read_desc int drm_dp_read_desc ( s#drm_dp_aux * , s#drm_dp_desc * , t#bool ) 

/* drivers/gpu/drm/drm_dp_mst_topology.o */
s##device_private
s##sock
s##vfsmount
s##posix_acl
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##nlm_lockowner
s##nfs4_lock_state
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##iommu_group
s##iommu_fwspec
s##drm_master
s##drm_gem_object
s##dma_buf
s##reservation_object
s##dma_buf_attachment
s##drm_device_dma
s##msi_controller
s##proc_dir_entry
s##hotplug_slot
s##pci_vpd
s##pci_sriov
s##agp_bridge_data
s##drm_sg_mem
s##drm_local_map
s##drm_vma_offset_manager
s##drm_fb_helper
s##drm_writeback_job
e##mode_set_atomic
s#drm_dp_nak_reply struct drm_dp_nak_reply { t#u8 guid [ 16 ] ; t#u8 reason ; t#u8 nak_data ; } 
s#drm_dp_link_addr_reply_port struct drm_dp_link_addr_reply_port { t#bool input_port ; t#u8 peer_device_type ; t#u8 port_number ; t#bool mcs ; t#bool ddps ; t#bool legacy_device_plug_status ; t#u8 dpcd_revision ; t#u8 peer_guid [ 16 ] ; t#u8 num_sdp_streams ; t#u8 num_sdp_stream_sinks ; } 
s#drm_dp_link_address_ack_reply struct drm_dp_link_address_ack_reply { t#u8 guid [ 16 ] ; t#u8 nports ; s#drm_dp_link_addr_reply_port ports [ 16 ] ; } 
s#drm_dp_port_number_rep struct drm_dp_port_number_rep { t#u8 port_number ; } 
s#drm_dp_enum_path_resources_ack_reply struct drm_dp_enum_path_resources_ack_reply { t#u8 port_number ; t#u16 full_payload_bw_number ; t#u16 avail_payload_bw_number ; } 
s#drm_dp_allocate_payload_ack_reply struct drm_dp_allocate_payload_ack_reply { t#u8 port_number ; t#u8 vcpi ; t#u16 allocated_pbn ; } 
s#drm_dp_query_payload_ack_reply struct drm_dp_query_payload_ack_reply { t#u8 port_number ; t#u8 allocated_pbn ; } 
s#drm_dp_remote_dpcd_read_ack_reply struct drm_dp_remote_dpcd_read_ack_reply { t#u8 port_number ; t#u8 num_bytes ; t#u8 bytes [ 255 ] ; } 
s#drm_dp_remote_dpcd_write_ack_reply struct drm_dp_remote_dpcd_write_ack_reply { t#u8 port_number ; } 
s#drm_dp_remote_dpcd_write_nak_reply struct drm_dp_remote_dpcd_write_nak_reply { t#u8 port_number ; t#u8 reason ; t#u8 bytes_written_before_failure ; } 
s#drm_dp_remote_i2c_read_ack_reply struct drm_dp_remote_i2c_read_ack_reply { t#u8 port_number ; t#u8 num_bytes ; t#u8 bytes [ 255 ] ; } 
s#drm_dp_remote_i2c_read_nak_reply struct drm_dp_remote_i2c_read_nak_reply { t#u8 port_number ; t#u8 nak_reason ; t#u8 i2c_nak_transaction ; } 
s#drm_dp_remote_i2c_write_ack_reply struct drm_dp_remote_i2c_write_ack_reply { t#u8 port_number ; } 
u#ack_replies union ack_replies { s#drm_dp_nak_reply nak ; s#drm_dp_link_address_ack_reply link_addr ; s#drm_dp_port_number_rep port_number ; s#drm_dp_enum_path_resources_ack_reply path_resources ; s#drm_dp_allocate_payload_ack_reply allocate_payload ; s#drm_dp_query_payload_ack_reply query_payload ; s#drm_dp_remote_dpcd_read_ack_reply remote_dpcd_read_ack ; s#drm_dp_remote_dpcd_write_ack_reply remote_dpcd_write_ack ; s#drm_dp_remote_dpcd_write_nak_reply remote_dpcd_write_nack ; s#drm_dp_remote_i2c_read_ack_reply remote_i2c_read_ack ; s#drm_dp_remote_i2c_read_nak_reply remote_i2c_read_nack ; s#drm_dp_remote_i2c_write_ack_reply remote_i2c_write_ack ; } 
s#drm_dp_sideband_msg_reply_body struct drm_dp_sideband_msg_reply_body { t#u8 reply_type ; t#u8 req_type ; u#ack_replies u ; } 
s#drm_dp_sideband_msg_tx struct drm_dp_sideband_msg_tx { t#u8 msg [ 256 ] ; t#u8 chunk [ 48 ] ; t#u8 cur_offset ; t#u8 cur_len ; s#drm_dp_mst_branch * dst ; s#list_head next ; int seqno ; int state ; t#bool path_msg ; s#drm_dp_sideband_msg_reply_body reply ; } 
s#drm_dp_mst_branch struct drm_dp_mst_branch { s#kref kref ; t#u8 rad [ 8 ] ; t#u8 lct ; int num_ports ; int msg_slots ; s#list_head ports ; s#drm_dp_mst_port * port_parent ; s#drm_dp_mst_topology_mgr * mgr ; s#drm_dp_sideband_msg_tx * tx_slots [ 2 ] ; int last_seqno ; t#bool link_address_sent ; t#u8 guid [ 16 ] ; } 
s##gpio_desc
s##irq_domain_chip_generic
s##cec_adapter
s#drm_dp_vcpi struct drm_dp_vcpi { int vcpi ; int pbn ; int aligned_pbn ; int num_slots ; } 
s#drm_dp_mst_port struct drm_dp_mst_port { s#kref kref ; t#u8 port_num ; t#bool input ; t#bool mcs ; t#bool ddps ; t#u8 pdt ; t#bool ldps ; t#u8 dpcd_rev ; t#u8 num_sdp_streams ; t#u8 num_sdp_stream_sinks ; t#uint16_t available_pbn ; s#list_head next ; s#drm_dp_mst_branch * mstb ; s#drm_dp_aux aux ; s#drm_dp_mst_branch * parent ; s#drm_dp_vcpi vcpi ; s#drm_connector * connector ; s#drm_dp_mst_topology_mgr * mgr ; s#edid * cached_edid ; t#bool has_audio ; } 
s#drm_dp_mst_topology_cbs struct drm_dp_mst_topology_cbs { s#drm_connector * ( * add_connector ) ( s#drm_dp_mst_topology_mgr * , s#drm_dp_mst_port * , const char * ) ; void ( * register_connector ) ( s#drm_connector * ) ; void ( * destroy_connector ) ( s#drm_dp_mst_topology_mgr * , s#drm_connector * ) ; void ( * hotplug ) ( s#drm_dp_mst_topology_mgr * ) ; } 
s#drm_dp_sideband_msg_hdr struct drm_dp_sideband_msg_hdr { t#u8 lct ; t#u8 lcr ; t#u8 rad [ 8 ] ; t#bool broadcast ; t#bool path_msg ; t#u8 msg_len ; t#bool somt ; t#bool eomt ; t#bool seqno ; } 
s#drm_dp_sideband_msg_rx struct drm_dp_sideband_msg_rx { t#u8 chunk [ 48 ] ; t#u8 msg [ 256 ] ; t#u8 curchunk_len ; t#u8 curchunk_idx ; t#u8 curchunk_hdrlen ; t#u8 curlen ; t#bool have_somt ; t#bool have_eomt ; s#drm_dp_sideband_msg_hdr initial_hdr ; } 
s#drm_dp_mst_topology_state struct drm_dp_mst_topology_state { s#drm_private_state base ; int avail_slots ; s#drm_atomic_state * state ; s#drm_dp_mst_topology_mgr * mgr ; } 
s#drm_dp_payload struct drm_dp_payload { int payload_state ; int start_slot ; int num_slots ; int vcpi ; } 
s#drm_dp_mst_topology_mgr struct drm_dp_mst_topology_mgr { s#drm_private_obj base ; s#drm_device * dev ; const s#drm_dp_mst_topology_cbs * cbs ; int max_dpcd_transaction_bytes ; s#drm_dp_aux * aux ; int max_payloads ; int conn_base_id ; s#drm_dp_sideband_msg_rx down_rep_recv ; s#drm_dp_sideband_msg_rx up_req_recv ; s#mutex lock ; t#bool mst_state ; s#drm_dp_mst_branch * mst_primary ; t#u8 dpcd [ 0xf ] ; t#u8 sink_count ; int pbn_div ; s#drm_dp_mst_topology_state * state ; const s#drm_private_state_funcs * funcs ; s#mutex qlock ; s#list_head tx_msg_downq ; s#mutex payload_lock ; s#drm_dp_vcpi * * proposed_vcpis ; s#drm_dp_payload * payloads ; unsigned long payload_mask ; unsigned long vcpi_mask ; t#wait_queue_head_t tx_waitq ; s#work_struct work ; s#work_struct tx_work ; s#list_head destroy_connector_list ; s#mutex destroy_connector_lock ; s#work_struct destroy_connector_work ; } 
drm_dp_send_power_updown_phy int drm_dp_send_power_updown_phy ( s#drm_dp_mst_topology_mgr * , s#drm_dp_mst_port * , t#bool ) 
drm_dp_update_payload_part1 int drm_dp_update_payload_part1 ( s#drm_dp_mst_topology_mgr * ) 
drm_dp_update_payload_part2 int drm_dp_update_payload_part2 ( s#drm_dp_mst_topology_mgr * ) 
drm_dp_mst_topology_mgr_set_mst int drm_dp_mst_topology_mgr_set_mst ( s#drm_dp_mst_topology_mgr * , t#bool ) 
drm_dp_mst_topology_mgr_suspend void drm_dp_mst_topology_mgr_suspend ( s#drm_dp_mst_topology_mgr * ) 
drm_dp_mst_topology_mgr_resume int drm_dp_mst_topology_mgr_resume ( s#drm_dp_mst_topology_mgr * ) 
drm_dp_mst_hpd_irq int drm_dp_mst_hpd_irq ( s#drm_dp_mst_topology_mgr * , t#u8 * , t#bool * ) 
drm_dp_mst_detect_port e#drm_connector_status drm_dp_mst_detect_port ( s#drm_connector * , s#drm_dp_mst_topology_mgr * , s#drm_dp_mst_port * ) 
drm_dp_mst_port_has_audio t#bool drm_dp_mst_port_has_audio ( s#drm_dp_mst_topology_mgr * , s#drm_dp_mst_port * ) 
drm_dp_mst_get_edid s#edid * drm_dp_mst_get_edid ( s#drm_connector * , s#drm_dp_mst_topology_mgr * , s#drm_dp_mst_port * ) 
drm_dp_find_vcpi_slots int drm_dp_find_vcpi_slots ( s#drm_dp_mst_topology_mgr * , int ) 
drm_dp_atomic_find_vcpi_slots int drm_dp_atomic_find_vcpi_slots ( s#drm_atomic_state * , s#drm_dp_mst_topology_mgr * , s#drm_dp_mst_port * , int ) 
drm_dp_atomic_release_vcpi_slots int drm_dp_atomic_release_vcpi_slots ( s#drm_atomic_state * , s#drm_dp_mst_topology_mgr * , int ) 
drm_dp_mst_allocate_vcpi t#bool drm_dp_mst_allocate_vcpi ( s#drm_dp_mst_topology_mgr * , s#drm_dp_mst_port * , int , int ) 
drm_dp_mst_get_vcpi_slots int drm_dp_mst_get_vcpi_slots ( s#drm_dp_mst_topology_mgr * , s#drm_dp_mst_port * ) 
drm_dp_mst_reset_vcpi_slots void drm_dp_mst_reset_vcpi_slots ( s#drm_dp_mst_topology_mgr * , s#drm_dp_mst_port * ) 
drm_dp_mst_deallocate_vcpi void drm_dp_mst_deallocate_vcpi ( s#drm_dp_mst_topology_mgr * , s#drm_dp_mst_port * ) 
drm_dp_check_act_status int drm_dp_check_act_status ( s#drm_dp_mst_topology_mgr * ) 
drm_dp_calc_pbn_mode int drm_dp_calc_pbn_mode ( int , int ) 
drm_dp_mst_dump_topology void drm_dp_mst_dump_topology ( s#seq_file * , s#drm_dp_mst_topology_mgr * ) 
drm_atomic_get_mst_topology_state s#drm_dp_mst_topology_state * drm_atomic_get_mst_topology_state ( s#drm_atomic_state * , s#drm_dp_mst_topology_mgr * ) 
drm_dp_mst_topology_mgr_init int drm_dp_mst_topology_mgr_init ( s#drm_dp_mst_topology_mgr * , s#drm_device * , s#drm_dp_aux * , int , int , int ) 
drm_dp_mst_topology_mgr_destroy void drm_dp_mst_topology_mgr_destroy ( s#drm_dp_mst_topology_mgr * ) 

/* drivers/gpu/drm/drm_drv.o */
drm_debug extern unsigned int drm_debug 
s##device_private
s##sock
s##posix_acl
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##nlm_lockowner
s##nfs4_lock_state
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##iommu_group
s##iommu_fwspec
s##drm_gem_object
s##dma_buf
s##reservation_object
s##dma_buf_attachment
s##msi_controller
s##proc_dir_entry
s##hotplug_slot
s##pci_vpd
s##pci_sriov
s##agp_bridge_data
s##drm_atomic_state
s##drm_mode_config_helper_funcs
s##drm_vma_offset_manager
s##drm_fb_helper
drm_put_dev void drm_put_dev ( s#drm_device * ) 
drm_dev_enter t#bool drm_dev_enter ( s#drm_device * , int * ) 
drm_dev_exit void drm_dev_exit ( int ) 
drm_dev_unplug void drm_dev_unplug ( s#drm_device * ) 
drm_dev_init int drm_dev_init ( s#drm_device * , s#drm_driver * , s#device * ) 
drm_dev_fini void drm_dev_fini ( s#drm_device * ) 
drm_dev_alloc s#drm_device * drm_dev_alloc ( s#drm_driver * , s#device * ) 
drm_dev_get void drm_dev_get ( s#drm_device * ) 
drm_dev_put void drm_dev_put ( s#drm_device * ) 
drm_dev_unref void drm_dev_unref ( s#drm_device * ) 
drm_dev_register int drm_dev_register ( s#drm_device * , unsigned long ) 
drm_dev_unregister void drm_dev_unregister ( s#drm_device * ) 
drm_dev_set_unique int drm_dev_set_unique ( s#drm_device * , const char * ) 

/* drivers/gpu/drm/drm_edid.o */
drm_edid_header_is_valid int drm_edid_header_is_valid ( const t#u8 * ) 
drm_edid_block_valid t#bool drm_edid_block_valid ( t#u8 * , int , t#bool , t#bool * ) 
drm_edid_is_valid t#bool drm_edid_is_valid ( s#edid * ) 
s##device_private
s##sock
s##vfsmount
s##posix_acl
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##nlm_lockowner
s##nfs4_lock_state
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##iommu_group
s##iommu_fwspec
s##drm_master
s##drm_gem_object
s##dma_buf
s##reservation_object
s##dma_buf_attachment
s##drm_device_dma
s##msi_controller
s##proc_dir_entry
s##hotplug_slot
s##pci_vpd
s##pci_sriov
s##agp_bridge_data
s##drm_sg_mem
s##drm_local_map
s##drm_atomic_state
s##drm_mode_config_helper_funcs
s##drm_vma_offset_manager
s##drm_fb_helper
s##drm_crtc_commit
s##drm_plane_helper_funcs
s##drm_crtc_helper_funcs
s##drm_encoder_helper_funcs
s##drm_writeback_job
s##drm_connector_helper_funcs
drm_add_override_edid_modes int drm_add_override_edid_modes ( s#drm_connector * ) 
drm_do_get_edid s#edid * drm_do_get_edid ( s#drm_connector * , int ( * ) ( void * , t#u8 * , unsigned int , t#size_t ) , void * ) 
s##gpio_desc
s##irq_domain_chip_generic
drm_probe_ddc t#bool drm_probe_ddc ( s#i2c_adapter * ) 
drm_get_edid s#edid * drm_get_edid ( s#drm_connector * , s#i2c_adapter * ) 
drm_get_edid_switcheroo s#edid * drm_get_edid_switcheroo ( s#drm_connector * , s#i2c_adapter * ) 
drm_edid_duplicate s#edid * drm_edid_duplicate ( const s#edid * ) 
drm_mode_find_dmt s#drm_display_mode * drm_mode_find_dmt ( s#drm_device * , int , int , int , t#bool ) 
drm_match_cea_mode t#u8 drm_match_cea_mode ( const s#drm_display_mode * ) 
drm_get_cea_aspect_ratio e#hdmi_picture_aspect drm_get_cea_aspect_ratio ( const t#u8 ) 
drm_edid_get_monitor_name void drm_edid_get_monitor_name ( s#edid * , char * , int ) 
s#cea_sad struct cea_sad { t#u8 format ; t#u8 channels ; t#u8 freq ; t#u8 byte2 ; } 
drm_edid_to_sad int drm_edid_to_sad ( s#edid * , s#cea_sad * * ) 
drm_edid_to_speaker_allocation int drm_edid_to_speaker_allocation ( s#edid * , t#u8 * * ) 
drm_av_sync_delay int drm_av_sync_delay ( s#drm_connector * , const s#drm_display_mode * ) 
drm_detect_hdmi_monitor t#bool drm_detect_hdmi_monitor ( s#edid * ) 
drm_detect_monitor_audio t#bool drm_detect_monitor_audio ( s#edid * ) 
drm_rgb_quant_range_selectable t#bool drm_rgb_quant_range_selectable ( s#edid * ) 
drm_default_rgb_quant_range e#hdmi_quantization_range drm_default_rgb_quant_range ( const s#drm_display_mode * ) 
drm_add_edid_modes int drm_add_edid_modes ( s#drm_connector * , s#edid * ) 
drm_add_modes_noedid int drm_add_modes_noedid ( s#drm_connector * , int , int ) 
drm_set_preferred_mode void drm_set_preferred_mode ( s#drm_connector * , int , int ) 
drm_hdmi_avi_infoframe_from_display_mode int drm_hdmi_avi_infoframe_from_display_mode ( s#hdmi_avi_infoframe * , const s#drm_display_mode * , t#bool ) 
drm_hdmi_avi_infoframe_quant_range void drm_hdmi_avi_infoframe_quant_range ( s#hdmi_avi_infoframe * , const s#drm_display_mode * , e#hdmi_quantization_range , t#bool , t#bool ) 
e#hdmi_3d_structure enum hdmi_3d_structure { HDMI_3D_STRUCTURE_INVALID = - 1 , HDMI_3D_STRUCTURE_FRAME_PACKING = 0 , HDMI_3D_STRUCTURE_FIELD_ALTERNATIVE , HDMI_3D_STRUCTURE_LINE_ALTERNATIVE , HDMI_3D_STRUCTURE_SIDE_BY_SIDE_FULL , HDMI_3D_STRUCTURE_L_DEPTH , HDMI_3D_STRUCTURE_L_DEPTH_GFX_GFX_DEPTH , HDMI_3D_STRUCTURE_TOP_AND_BOTTOM , HDMI_3D_STRUCTURE_SIDE_BY_SIDE_HALF = 8 , } 
s#hdmi_vendor_infoframe struct hdmi_vendor_infoframe { e#hdmi_infoframe_type type ; unsigned char version ; unsigned char length ; unsigned int oui ; t#u8 vic ; e#hdmi_3d_structure s3d_struct ; unsigned int s3d_ext_data ; } 
drm_hdmi_vendor_infoframe_from_display_mode int drm_hdmi_vendor_infoframe_from_display_mode ( s#hdmi_vendor_infoframe * , s#drm_connector * , const s#drm_display_mode * ) 

/* drivers/gpu/drm/drm_encoder.o */
s##device_private
s##sock
s##vfsmount
s##posix_acl
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##nlm_lockowner
s##nfs4_lock_state
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##iommu_group
s##iommu_fwspec
s##drm_master
s##drm_gem_object
s##dma_buf
s##reservation_object
s##dma_buf_attachment
s##drm_device_dma
s##msi_controller
s##proc_dir_entry
s##hotplug_slot
s##pci_vpd
s##pci_sriov
s##agp_bridge_data
s##drm_sg_mem
s##drm_local_map
s##drm_atomic_state
s##drm_mode_config_helper_funcs
s##drm_vma_offset_manager
s##drm_fb_helper
s##drm_crtc_commit
s##drm_plane_helper_funcs
s##drm_writeback_job
s##drm_connector_helper_funcs
s##drm_crtc_helper_funcs
s##drm_encoder_helper_funcs
drm_encoder_init __attribute__ ( ( format ( printf , 5 , 6 ) ) ) int drm_encoder_init ( s#drm_device * , s#drm_encoder * , const s#drm_encoder_funcs * , int , const char * , ... ) 
drm_encoder_cleanup void drm_encoder_cleanup ( s#drm_encoder * ) 

/* drivers/gpu/drm/drm_encoder_slave.o */
s##device_private
s##sock
s##vfsmount
s##posix_acl
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##nlm_lockowner
s##nfs4_lock_state
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##iommu_group
s##iommu_fwspec
s##drm_master
s##drm_gem_object
s##dma_buf
s##reservation_object
s##dma_buf_attachment
s##drm_device_dma
s##msi_controller
s##proc_dir_entry
s##hotplug_slot
s##pci_vpd
s##pci_sriov
s##agp_bridge_data
s##drm_sg_mem
s##drm_local_map
s##drm_atomic_state
s##drm_mode_config_helper_funcs
s##drm_vma_offset_manager
s##drm_fb_helper
s##drm_crtc_commit
s##drm_plane_helper_funcs
s##drm_writeback_job
s##drm_connector_helper_funcs
s##drm_crtc_helper_funcs
s##drm_encoder_helper_funcs
s#drm_encoder_slave_funcs struct drm_encoder_slave_funcs { void ( * set_config ) ( s#drm_encoder * , void * ) ; void ( * destroy ) ( s#drm_encoder * ) ; void ( * dpms ) ( s#drm_encoder * , int ) ; void ( * save ) ( s#drm_encoder * ) ; void ( * restore ) ( s#drm_encoder * ) ; t#bool ( * mode_fixup ) ( s#drm_encoder * , const s#drm_display_mode * , s#drm_display_mode * ) ; int ( * mode_valid ) ( s#drm_encoder * , s#drm_display_mode * ) ; void ( * mode_set ) ( s#drm_encoder * , s#drm_display_mode * , s#drm_display_mode * ) ; e#drm_connector_status ( * detect ) ( s#drm_encoder * , s#drm_connector * ) ; int ( * get_modes ) ( s#drm_encoder * , s#drm_connector * ) ; int ( * create_resources ) ( s#drm_encoder * , s#drm_connector * ) ; int ( * set_property ) ( s#drm_encoder * , s#drm_connector * , s#drm_property * , t#uint64_t ) ; } 
s#drm_encoder_slave struct drm_encoder_slave { s#drm_encoder base ; const s#drm_encoder_slave_funcs * slave_funcs ; void * slave_priv ; void * bus_priv ; } 
s##gpio_desc
s##irq_domain_chip_generic
s#i2c_board_info struct i2c_board_info { char type [ 20 ] ; unsigned short flags ; unsigned short addr ; const char * dev_name ; void * platform_data ; s#dev_archdata * archdata ; s#device_node * of_node ; s#fwnode_handle * fwnode ; const s#property_entry * properties ; const s#resource * resources ; unsigned int num_resources ; int irq ; } 
drm_i2c_encoder_init int drm_i2c_encoder_init ( s#drm_device * , s#drm_encoder_slave * , s#i2c_adapter * , const s#i2c_board_info * ) 
drm_i2c_encoder_destroy void drm_i2c_encoder_destroy ( s#drm_encoder * ) 
drm_i2c_encoder_dpms void drm_i2c_encoder_dpms ( s#drm_encoder * , int ) 
drm_i2c_encoder_mode_fixup t#bool drm_i2c_encoder_mode_fixup ( s#drm_encoder * , const s#drm_display_mode * , s#drm_display_mode * ) 
drm_i2c_encoder_prepare void drm_i2c_encoder_prepare ( s#drm_encoder * ) 
drm_i2c_encoder_commit void drm_i2c_encoder_commit ( s#drm_encoder * ) 
drm_i2c_encoder_mode_set void drm_i2c_encoder_mode_set ( s#drm_encoder * , s#drm_display_mode * , s#drm_display_mode * ) 
drm_i2c_encoder_detect e#drm_connector_status drm_i2c_encoder_detect ( s#drm_encoder * , s#drm_connector * ) 
drm_i2c_encoder_save void drm_i2c_encoder_save ( s#drm_encoder * ) 
drm_i2c_encoder_restore void drm_i2c_encoder_restore ( s#drm_encoder * ) 

/* drivers/gpu/drm/drm_fb_helper.o */
s##device_private
s##sock
s##vfsmount
s##posix_acl
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##nlm_lockowner
s##nfs4_lock_state
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##iommu_group
s##iommu_fwspec
s##drm_master
s##drm_gem_object
s##reservation_object
s##drm_device_dma
s##msi_controller
s##proc_dir_entry
s##hotplug_slot
s##pci_vpd
s##pci_sriov
s##agp_bridge_data
s##drm_sg_mem
s##drm_local_map
s##drm_writeback_job
s##drm_vma_offset_manager
drm_fb_helper_add_one_connector int drm_fb_helper_add_one_connector ( s#drm_fb_helper * , s#drm_connector * ) 
drm_fb_helper_single_add_all_connectors int drm_fb_helper_single_add_all_connectors ( s#drm_fb_helper * ) 
drm_fb_helper_remove_one_connector int drm_fb_helper_remove_one_connector ( s#drm_fb_helper * , s#drm_connector * ) 
drm_fb_helper_debug_enter int drm_fb_helper_debug_enter ( s#fb_info * ) 
drm_fb_helper_debug_leave int drm_fb_helper_debug_leave ( s#fb_info * ) 
drm_fb_helper_restore_fbdev_mode_unlocked int drm_fb_helper_restore_fbdev_mode_unlocked ( s#drm_fb_helper * ) 
drm_fb_helper_blank int drm_fb_helper_blank ( int , s#fb_info * ) 
drm_fb_helper_prepare void drm_fb_helper_prepare ( s#drm_device * , s#drm_fb_helper * , const s#drm_fb_helper_funcs * ) 
drm_fb_helper_init int drm_fb_helper_init ( s#drm_device * , s#drm_fb_helper * , int ) 
drm_fb_helper_alloc_fbi s#fb_info * drm_fb_helper_alloc_fbi ( s#drm_fb_helper * ) 
drm_fb_helper_unregister_fbi void drm_fb_helper_unregister_fbi ( s#drm_fb_helper * ) 
drm_fb_helper_fini void drm_fb_helper_fini ( s#drm_fb_helper * ) 
drm_fb_helper_unlink_fbi void drm_fb_helper_unlink_fbi ( s#drm_fb_helper * ) 
drm_fb_helper_deferred_io void drm_fb_helper_deferred_io ( s#fb_info * , s#list_head * ) 
drm_fb_helper_defio_init int drm_fb_helper_defio_init ( s#drm_fb_helper * ) 
drm_fb_helper_sys_read t#ssize_t drm_fb_helper_sys_read ( s#fb_info * , char * , t#size_t , t#loff_t * ) 
drm_fb_helper_sys_write t#ssize_t drm_fb_helper_sys_write ( s#fb_info * , const char * , t#size_t , t#loff_t * ) 
drm_fb_helper_sys_fillrect void drm_fb_helper_sys_fillrect ( s#fb_info * , const s#fb_fillrect * ) 
drm_fb_helper_sys_copyarea void drm_fb_helper_sys_copyarea ( s#fb_info * , const s#fb_copyarea * ) 
drm_fb_helper_sys_imageblit void drm_fb_helper_sys_imageblit ( s#fb_info * , const s#fb_image * ) 
drm_fb_helper_cfb_fillrect void drm_fb_helper_cfb_fillrect ( s#fb_info * , const s#fb_fillrect * ) 
drm_fb_helper_cfb_copyarea void drm_fb_helper_cfb_copyarea ( s#fb_info * , const s#fb_copyarea * ) 
drm_fb_helper_cfb_imageblit void drm_fb_helper_cfb_imageblit ( s#fb_info * , const s#fb_image * ) 
drm_fb_helper_set_suspend void drm_fb_helper_set_suspend ( s#drm_fb_helper * , t#bool ) 
drm_fb_helper_set_suspend_unlocked void drm_fb_helper_set_suspend_unlocked ( s#drm_fb_helper * , t#bool ) 
drm_fb_helper_setcmap int drm_fb_helper_setcmap ( s#fb_cmap * , s#fb_info * ) 
drm_fb_helper_ioctl int drm_fb_helper_ioctl ( s#fb_info * , unsigned int , unsigned long ) 
drm_fb_helper_check_var int drm_fb_helper_check_var ( s#fb_var_screeninfo * , s#fb_info * ) 
drm_fb_helper_set_par int drm_fb_helper_set_par ( s#fb_info * ) 
drm_fb_helper_pan_display int drm_fb_helper_pan_display ( s#fb_var_screeninfo * , s#fb_info * ) 
drm_fb_helper_fill_fix void drm_fb_helper_fill_fix ( s#fb_info * , t#uint32_t , t#uint32_t ) 
drm_fb_helper_fill_var void drm_fb_helper_fill_var ( s#fb_info * , s#drm_fb_helper * , t#uint32_t , t#uint32_t ) 
drm_has_preferred_mode s#drm_display_mode * drm_has_preferred_mode ( s#drm_fb_helper_connector * , int , int ) 
drm_pick_cmdline_mode s#drm_display_mode * drm_pick_cmdline_mode ( s#drm_fb_helper_connector * ) 
drm_fb_helper_initial_config int drm_fb_helper_initial_config ( s#drm_fb_helper * , int ) 
drm_fb_helper_hotplug_event int drm_fb_helper_hotplug_event ( s#drm_fb_helper * ) 
drm_fb_helper_fbdev_setup int drm_fb_helper_fbdev_setup ( s#drm_device * , s#drm_fb_helper * , const s#drm_fb_helper_funcs * , unsigned int , unsigned int ) 
drm_fb_helper_fbdev_teardown void drm_fb_helper_fbdev_teardown ( s#drm_device * ) 
drm_fb_helper_lastclose void drm_fb_helper_lastclose ( s#drm_device * ) 
drm_fb_helper_output_poll_changed void drm_fb_helper_output_poll_changed ( s#drm_device * ) 
drm_fb_helper_generic_probe int drm_fb_helper_generic_probe ( s#drm_fb_helper * , s#drm_fb_helper_surface_size * ) 
drm_fbdev_generic_setup int drm_fbdev_generic_setup ( s#drm_device * , unsigned int ) 
drm_fb_helper_modinit int drm_fb_helper_modinit ( void ) 

/* drivers/gpu/drm/drm_file.o */
s##posix_acl
s##vfsmount
s##sock
s##bio_vec
s##pipe_inode_info
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##writeback_control
s##swap_info_struct
s##device_private
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##iommu_group
s##iommu_fwspec
s##kmem_cache
s##mem_cgroup
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##fsnotify_mark_connector
s##fscrypt_info
drm_open int drm_open ( s#inode * , s#file * ) 
drm_release int drm_release ( s#inode * , s#file * ) 
drm_read t#ssize_t drm_read ( s#file * , char * , t#size_t , t#loff_t * ) 
drm_poll unsigned int drm_poll ( s#file * , s#poll_table_struct * ) 
s##drm_gem_object
s##dma_buf
s##reservation_object
s##dma_buf_attachment
s##msi_controller
s##proc_dir_entry
s##hotplug_slot
s##pci_vpd
s##pci_sriov
s##agp_bridge_data
s##drm_atomic_state
s##drm_mode_config_helper_funcs
s##drm_vma_offset_manager
s##drm_fb_helper
drm_event_reserve_init_locked int drm_event_reserve_init_locked ( s#drm_device * , s#drm_file * , s#drm_pending_event * , s#drm_event * ) 
drm_event_reserve_init int drm_event_reserve_init ( s#drm_device * , s#drm_file * , s#drm_pending_event * , s#drm_event * ) 
drm_event_cancel_free void drm_event_cancel_free ( s#drm_device * , s#drm_pending_event * ) 
drm_send_event_locked void drm_send_event_locked ( s#drm_device * , s#drm_pending_event * ) 
drm_send_event void drm_send_event ( s#drm_device * , s#drm_pending_event * ) 

/* drivers/gpu/drm/drm_flip_work.o */
s#drm_flip_task struct drm_flip_task { s#list_head node ; void * data ; } 
drm_flip_work_allocate_task s#drm_flip_task * drm_flip_work_allocate_task ( void * , t#gfp_t ) 
t#drm_flip_func_t typedef void ( * drm_flip_func_t ) ( s#drm_flip_work * , void * ) 
s#drm_flip_work struct drm_flip_work { const char * name ; t#drm_flip_func_t func ; s#work_struct worker ; s#list_head queued ; s#list_head commited ; t#spinlock_t lock ; } 
drm_flip_work_queue_task void drm_flip_work_queue_task ( s#drm_flip_work * , s#drm_flip_task * ) 
drm_flip_work_queue void drm_flip_work_queue ( s#drm_flip_work * , void * ) 
s##workqueue_struct
drm_flip_work_commit void drm_flip_work_commit ( s#drm_flip_work * , s#workqueue_struct * ) 
drm_flip_work_init void drm_flip_work_init ( s#drm_flip_work * , const char * , t#drm_flip_func_t ) 
drm_flip_work_cleanup void drm_flip_work_cleanup ( s#drm_flip_work * ) 

/* drivers/gpu/drm/drm_fourcc.o */
drm_mode_legacy_fb_format t#uint32_t drm_mode_legacy_fb_format ( t#uint32_t , t#uint32_t ) 
s#drm_format_name_buf struct drm_format_name_buf { char str [ 32 ] ; } 
drm_get_format_name const char * drm_get_format_name ( t#uint32_t , s#drm_format_name_buf * ) 
drm_format_info const s#drm_format_info * drm_format_info ( t#u32 ) 
s##device_private
s##sock
s##vfsmount
s##posix_acl
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##nlm_lockowner
s##nfs4_lock_state
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##iommu_group
s##iommu_fwspec
s##drm_master
s##drm_gem_object
s##dma_buf
s##reservation_object
s##dma_buf_attachment
s##drm_device_dma
s##msi_controller
s##proc_dir_entry
s##hotplug_slot
s##pci_vpd
s##pci_sriov
s##agp_bridge_data
s##drm_sg_mem
s##drm_local_map
s##drm_atomic_state
s##drm_mode_config_helper_funcs
s##drm_vma_offset_manager
s##drm_fb_helper
drm_get_format_info const s#drm_format_info * drm_get_format_info ( s#drm_device * , const s#drm_mode_fb_cmd2 * ) 
drm_format_num_planes int drm_format_num_planes ( t#uint32_t ) 
drm_format_plane_cpp int drm_format_plane_cpp ( t#uint32_t , int ) 
drm_format_horz_chroma_subsampling int drm_format_horz_chroma_subsampling ( t#uint32_t ) 
drm_format_vert_chroma_subsampling int drm_format_vert_chroma_subsampling ( t#uint32_t ) 
drm_format_plane_width int drm_format_plane_width ( int , t#uint32_t , int ) 
drm_format_plane_height int drm_format_plane_height ( int , t#uint32_t , int ) 

/* drivers/gpu/drm/drm_framebuffer.o */
s##device_private
s##sock
s##vfsmount
s##posix_acl
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##nlm_lockowner
s##nfs4_lock_state
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##iommu_group
s##iommu_fwspec
s##drm_gem_object
s##dma_buf
s##reservation_object
s##dma_buf_attachment
s##drm_device_dma
s##msi_controller
s##proc_dir_entry
s##hotplug_slot
s##pci_vpd
s##pci_sriov
s##agp_bridge_data
s##drm_sg_mem
s##drm_local_map
s##drm_encoder
s##drm_writeback_job
s##drm_connector_helper_funcs
s##drm_crtc_helper_funcs
s##drm_plane_helper_funcs
s##drm_mode_config_helper_funcs
s##drm_vma_offset_manager
s##drm_fb_helper
drm_framebuffer_init int drm_framebuffer_init ( s#drm_device * , s#drm_framebuffer * , const s#drm_framebuffer_funcs * ) 
drm_framebuffer_lookup s#drm_framebuffer * drm_framebuffer_lookup ( s#drm_device * , s#drm_file * , t#uint32_t ) 
drm_framebuffer_unregister_private void drm_framebuffer_unregister_private ( s#drm_framebuffer * ) 
drm_framebuffer_cleanup void drm_framebuffer_cleanup ( s#drm_framebuffer * ) 
drm_framebuffer_remove void drm_framebuffer_remove ( s#drm_framebuffer * ) 
drm_framebuffer_plane_width int drm_framebuffer_plane_width ( int , const s#drm_framebuffer * , int ) 
drm_framebuffer_plane_height int drm_framebuffer_plane_height ( int , const s#drm_framebuffer * , int ) 

/* drivers/gpu/drm/drm_gem.o */
s##device_private
s##sock
s##vfsmount
s##posix_acl
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##workqueue_struct
s##bpf_prog_array
s##cgroup_taskset
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##pipe_inode_info
s##hd_struct
s##gendisk
s##request_queue
s##kmem_cache
s##eventfd_ctx
s#mempolicy struct mempolicy { t#atomic_t refcnt ; unsigned short mode ; unsigned short flags ; union { short preferred_node ; t#nodemask_t nodes ; } v ; union { t#nodemask_t cpuset_mems_allowed ; t#nodemask_t user_nodemask ; } w ; } 
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##mmu_notifier_mm
s##xol_area
s##pid_namespace
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_plug
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##kstatfs
s##export_operations
s#xattr_handler struct xattr_handler { const char * name ; const char * prefix ; int flags ; t#bool ( * list ) ( s#dentry * ) ; int ( * get ) ( const s#xattr_handler * , s#dentry * , s#inode * , const char * , void * , t#size_t ) ; int ( * set ) ( const s#xattr_handler * , s#dentry * , s#inode * , const char * , const void * , t#size_t , int ) ; } 
s##fscrypt_operations
s##mtd_info
s##nlm_lockowner
s##nfs4_lock_state
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##iommu_group
s##iommu_fwspec
s##drm_master
s##reservation_object
s##drm_device_dma
s##msi_controller
s##proc_dir_entry
s##hotplug_slot
s##pci_vpd
s##pci_sriov
s##agp_bridge_data
s##drm_sg_mem
s##drm_local_map
s##drm_atomic_state
s##drm_mode_config_helper_funcs
s##drm_fb_helper
drm_gem_object_init int drm_gem_object_init ( s#drm_device * , s#drm_gem_object * , t#size_t ) 
drm_gem_private_object_init void drm_gem_private_object_init ( s#drm_device * , s#drm_gem_object * , t#size_t ) 
drm_gem_handle_delete int drm_gem_handle_delete ( s#drm_file * , t#u32 ) 
drm_gem_dumb_map_offset int drm_gem_dumb_map_offset ( s#drm_file * , s#drm_device * , t#u32 , t#u64 * ) 
drm_gem_dumb_destroy int drm_gem_dumb_destroy ( s#drm_file * , s#drm_device * , t#uint32_t ) 
drm_gem_handle_create int drm_gem_handle_create ( s#drm_file * , s#drm_gem_object * , t#u32 * ) 
drm_gem_free_mmap_offset void drm_gem_free_mmap_offset ( s#drm_gem_object * ) 
drm_gem_create_mmap_offset_size int drm_gem_create_mmap_offset_size ( s#drm_gem_object * , t#size_t ) 
drm_gem_create_mmap_offset int drm_gem_create_mmap_offset ( s#drm_gem_object * ) 
drm_gem_get_pages s#page * * drm_gem_get_pages ( s#drm_gem_object * ) 
drm_gem_put_pages void drm_gem_put_pages ( s#drm_gem_object * , s#page * * , t#bool , t#bool ) 
drm_gem_object_lookup s#drm_gem_object * drm_gem_object_lookup ( s#drm_file * , t#u32 ) 
drm_gem_object_release void drm_gem_object_release ( s#drm_gem_object * ) 
drm_gem_object_free void drm_gem_object_free ( s#kref * ) 
drm_gem_object_put_unlocked void drm_gem_object_put_unlocked ( s#drm_gem_object * ) 
drm_gem_object_put void drm_gem_object_put ( s#drm_gem_object * ) 
drm_gem_vm_open void drm_gem_vm_open ( s#vm_area_struct * ) 
drm_gem_vm_close void drm_gem_vm_close ( s#vm_area_struct * ) 
drm_gem_mmap_obj int drm_gem_mmap_obj ( s#drm_gem_object * , unsigned long , s#vm_area_struct * ) 
drm_gem_mmap int drm_gem_mmap ( s#file * , s#vm_area_struct * ) 

/* drivers/gpu/drm/drm_gem_framebuffer_helper.o */
s##device_private
s##sock
s##vfsmount
s##posix_acl
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##nlm_lockowner
s##nfs4_lock_state
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##iommu_group
s##iommu_fwspec
s##drm_master
s##drm_device_dma
s##msi_controller
s##proc_dir_entry
s##hotplug_slot
s##pci_vpd
s##pci_sriov
s##agp_bridge_data
s##drm_sg_mem
s##drm_local_map
s##drm_encoder_helper_funcs
s##drm_writeback_job
s##drm_connector_helper_funcs
s##drm_crtc_helper_funcs
s##drm_plane_helper_funcs
s##drm_mode_config_helper_funcs
drm_gem_fb_get_obj s#drm_gem_object * drm_gem_fb_get_obj ( s#drm_framebuffer * , unsigned int ) 
drm_gem_fb_destroy void drm_gem_fb_destroy ( s#drm_framebuffer * ) 
drm_gem_fb_create_handle int drm_gem_fb_create_handle ( s#drm_framebuffer * , s#drm_file * , unsigned int * ) 
drm_gem_fb_create_with_funcs s#drm_framebuffer * drm_gem_fb_create_with_funcs ( s#drm_device * , s#drm_file * , const s#drm_mode_fb_cmd2 * , const s#drm_framebuffer_funcs * ) 
drm_gem_fb_create s#drm_framebuffer * drm_gem_fb_create ( s#drm_device * , s#drm_file * , const s#drm_mode_fb_cmd2 * ) 
drm_gem_fb_prepare_fb int drm_gem_fb_prepare_fb ( s#drm_plane * , s#drm_plane_state * ) 
s#drm_simple_display_pipe_funcs struct drm_simple_display_pipe_funcs { e#drm_mode_status ( * mode_valid ) ( s#drm_crtc * , const s#drm_display_mode * ) ; void ( * enable ) ( s#drm_simple_display_pipe * , s#drm_crtc_state * , s#drm_plane_state * ) ; void ( * disable ) ( s#drm_simple_display_pipe * ) ; int ( * check ) ( s#drm_simple_display_pipe * , s#drm_plane_state * , s#drm_crtc_state * ) ; void ( * update ) ( s#drm_simple_display_pipe * , s#drm_plane_state * ) ; int ( * prepare_fb ) ( s#drm_simple_display_pipe * , s#drm_plane_state * ) ; void ( * cleanup_fb ) ( s#drm_simple_display_pipe * , s#drm_plane_state * ) ; int ( * enable_vblank ) ( s#drm_simple_display_pipe * ) ; void ( * disable_vblank ) ( s#drm_simple_display_pipe * ) ; } 
s#drm_simple_display_pipe struct drm_simple_display_pipe { s#drm_crtc crtc ; s#drm_plane plane ; s#drm_encoder encoder ; s#drm_connector * connector ; const s#drm_simple_display_pipe_funcs * funcs ; } 
drm_gem_fb_simple_display_pipe_prepare_fb int drm_gem_fb_simple_display_pipe_prepare_fb ( s#drm_simple_display_pipe * , s#drm_plane_state * ) 
drm_gem_fbdev_fb_create s#drm_framebuffer * drm_gem_fbdev_fb_create ( s#drm_device * , s#drm_fb_helper_surface_size * , unsigned int , s#drm_gem_object * , const s#drm_framebuffer_funcs * ) 

/* drivers/gpu/drm/drm_global.o */
e#drm_global_types enum drm_global_types { DRM_GLOBAL_TTM_MEM = 0 , DRM_GLOBAL_TTM_BO , DRM_GLOBAL_TTM_OBJECT , DRM_GLOBAL_NUM } 
s#drm_global_reference struct drm_global_reference { e#drm_global_types global_type ; t#size_t size ; void * object ; int ( * init ) ( s#drm_global_reference * ) ; void ( * release ) ( s#drm_global_reference * ) ; } 
drm_global_item_ref int drm_global_item_ref ( s#drm_global_reference * ) 
drm_global_item_unref void drm_global_item_unref ( s#drm_global_reference * ) 

/* drivers/gpu/drm/drm_hashtab.o */
drm_ht_create int drm_ht_create ( s#drm_open_hash * , unsigned int ) 
s#drm_hash_item struct drm_hash_item { s#hlist_node head ; unsigned long key ; } 
drm_ht_insert_item int drm_ht_insert_item ( s#drm_open_hash * , s#drm_hash_item * ) 
drm_ht_just_insert_please int drm_ht_just_insert_please ( s#drm_open_hash * , s#drm_hash_item * , unsigned long , int , int , unsigned long ) 
drm_ht_find_item int drm_ht_find_item ( s#drm_open_hash * , unsigned long , s#drm_hash_item * * ) 
drm_ht_remove_item int drm_ht_remove_item ( s#drm_open_hash * , s#drm_hash_item * ) 
drm_ht_remove void drm_ht_remove ( s#drm_open_hash * ) 

/* drivers/gpu/drm/drm_ioc32.o */
s##vfsmount
s##posix_acl
s##sock
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##pipe_inode_info
s##writeback_control
s##bio_vec
s##swap_info_struct
s##device_private
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##iommu_group
s##iommu_fwspec
s##kmem_cache
s##mem_cgroup
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##nlm_lockowner
s##nfs4_lock_state
s##fsnotify_mark_connector
s##fscrypt_info
drm_compat_ioctl long drm_compat_ioctl ( s#file * , unsigned int , unsigned long ) 

/* drivers/gpu/drm/drm_ioctl.o */
s##device_private
s##sock
s##vfsmount
s##posix_acl
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##nlm_lockowner
s##nfs4_lock_state
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##iommu_group
s##iommu_fwspec
s##drm_gem_object
s##dma_buf
s##reservation_object
s##dma_buf_attachment
s##msi_controller
s##proc_dir_entry
s##hotplug_slot
s##pci_vpd
s##pci_sriov
s##agp_bridge_data
s##drm_atomic_state
s##drm_mode_config_helper_funcs
s##drm_vma_offset_manager
s##drm_fb_helper
drm_noop int drm_noop ( s#drm_device * , void * , s#drm_file * ) 
drm_invalid_op int drm_invalid_op ( s#drm_device * , void * , s#drm_file * ) 
drm_ioctl_permit int drm_ioctl_permit ( t#u32 , s#drm_file * ) 
drm_ioctl_kernel long drm_ioctl_kernel ( s#file * , t#drm_ioctl_t , void * , t#u32 ) 
drm_ioctl long drm_ioctl ( s#file * , unsigned int , unsigned long ) 
drm_ioctl_flags t#bool drm_ioctl_flags ( unsigned int , unsigned int * ) 

/* drivers/gpu/drm/drm_irq.o */
s##device_private
s##sock
s##vfsmount
s##posix_acl
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##nlm_lockowner
s##nfs4_lock_state
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##iommu_group
s##iommu_fwspec
s##drm_master
s##drm_gem_object
s##dma_buf
s##reservation_object
s##dma_buf_attachment
s##drm_device_dma
s##msi_controller
s##proc_dir_entry
s##hotplug_slot
s##pci_vpd
s##pci_sriov
s##agp_bridge_data
s##drm_sg_mem
s##drm_local_map
s##drm_atomic_state
s##drm_mode_config_helper_funcs
s##drm_vma_offset_manager
s##drm_fb_helper
drm_irq_install int drm_irq_install ( s#drm_device * , int ) 
drm_irq_uninstall int drm_irq_uninstall ( s#drm_device * ) 

/* drivers/gpu/drm/drm_lease.o */
s##device_private
s##sock
s##vfsmount
s##posix_acl
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##nlm_lockowner
s##nfs4_lock_state
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##iommu_group
s##iommu_fwspec
s##drm_gem_object
s##dma_buf
s##reservation_object
s##dma_buf_attachment
s##msi_controller
s##proc_dir_entry
s##hotplug_slot
s##pci_vpd
s##pci_sriov
s##agp_bridge_data
s##drm_atomic_state
s##drm_vma_offset_manager
s##drm_fb_helper
drm_lease_owner s#drm_master * drm_lease_owner ( s#drm_master * ) 
_drm_lease_held t#bool _drm_lease_held ( s#drm_file * , int ) 
drm_lease_held t#bool drm_lease_held ( s#drm_file * , int ) 
drm_lease_filter_crtcs t#uint32_t drm_lease_filter_crtcs ( s#drm_file * , t#uint32_t ) 

/* drivers/gpu/drm/drm_lock.o */
s##device_private
s##sock
s##vfsmount
s##posix_acl
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##nlm_lockowner
s##nfs4_lock_state
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##iommu_group
s##iommu_fwspec
s##drm_gem_object
s##dma_buf
s##reservation_object
s##dma_buf_attachment
s##msi_controller
s##proc_dir_entry
s##hotplug_slot
s##pci_vpd
s##pci_sriov
s##agp_bridge_data
s##drm_atomic_state
s##drm_mode_config_helper_funcs
s##drm_vma_offset_manager
s##drm_fb_helper
drm_legacy_idlelock_take void drm_legacy_idlelock_take ( s#drm_lock_data * ) 
drm_legacy_idlelock_release void drm_legacy_idlelock_release ( s#drm_lock_data * ) 

/* drivers/gpu/drm/drm_memory.o */
s##device_private
s##sock
s##vfsmount
s##posix_acl
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##nlm_lockowner
s##nfs4_lock_state
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##iommu_group
s##iommu_fwspec
s##drm_gem_object
s##dma_buf
s##reservation_object
s##dma_buf_attachment
s##msi_controller
s##proc_dir_entry
s##hotplug_slot
s##pci_vpd
s##pci_sriov
s##agp_bridge_data
s##drm_atomic_state
s##drm_mode_config_helper_funcs
s##drm_vma_offset_manager
s##drm_fb_helper
drm_legacy_ioremap void drm_legacy_ioremap ( s#drm_local_map * , s#drm_device * ) 
drm_legacy_ioremap_wc void drm_legacy_ioremap_wc ( s#drm_local_map * , s#drm_device * ) 
drm_legacy_ioremapfree void drm_legacy_ioremapfree ( s#drm_local_map * , s#drm_device * ) 
drm_get_max_iomem t#u64 drm_get_max_iomem ( void ) 

/* drivers/gpu/drm/drm_mm.o */
__drm_mm_interval_first s#drm_mm_node * __drm_mm_interval_first ( const s#drm_mm * , t#u64 , t#u64 ) 
drm_mm_reserve_node int drm_mm_reserve_node ( s#drm_mm * , s#drm_mm_node * ) 
E#DRM_MM_INSERT_HIGH ( 0 ) + 2 
E#DRM_MM_INSERT_ONCE ( 1UL << ( 31 ) ) 
E#DRM_MM_INSERT_LOW ( 0 ) + 1 
e#drm_mm_insert_mode enum drm_mm_insert_mode { DRM_MM_INSERT_BEST = 0 , DRM_MM_INSERT_LOW , DRM_MM_INSERT_HIGH , DRM_MM_INSERT_EVICT , DRM_MM_INSERT_ONCE = ( 1UL << ( 31 ) ) , DRM_MM_INSERT_HIGHEST = E#DRM_MM_INSERT_HIGH | E#DRM_MM_INSERT_ONCE , DRM_MM_INSERT_LOWEST = E#DRM_MM_INSERT_LOW | E#DRM_MM_INSERT_ONCE , } 
drm_mm_insert_node_in_range int drm_mm_insert_node_in_range ( s#drm_mm * , s#drm_mm_node * , t#u64 , t#u64 , unsigned long , t#u64 , t#u64 , e#drm_mm_insert_mode ) 
drm_mm_remove_node void drm_mm_remove_node ( s#drm_mm_node * ) 
drm_mm_replace_node void drm_mm_replace_node ( s#drm_mm_node * , s#drm_mm_node * ) 
s#drm_mm_scan struct drm_mm_scan { s#drm_mm * mm ; t#u64 size ; t#u64 alignment ; t#u64 remainder_mask ; t#u64 range_start ; t#u64 range_end ; t#u64 hit_start ; t#u64 hit_end ; unsigned long color ; e#drm_mm_insert_mode mode ; } 
drm_mm_scan_init_with_range void drm_mm_scan_init_with_range ( s#drm_mm_scan * , s#drm_mm * , t#u64 , t#u64 , unsigned long , t#u64 , t#u64 , e#drm_mm_insert_mode ) 
drm_mm_scan_add_block t#bool drm_mm_scan_add_block ( s#drm_mm_scan * , s#drm_mm_node * ) 
drm_mm_scan_remove_block t#bool drm_mm_scan_remove_block ( s#drm_mm_scan * , s#drm_mm_node * ) 
drm_mm_scan_color_evict s#drm_mm_node * drm_mm_scan_color_evict ( s#drm_mm_scan * ) 
drm_mm_init void drm_mm_init ( s#drm_mm * , t#u64 , t#u64 ) 
drm_mm_takedown void drm_mm_takedown ( s#drm_mm * ) 
drm_mm_print void drm_mm_print ( const s#drm_mm * , s#drm_printer * ) 

/* drivers/gpu/drm/drm_mode_config.o */
s##device_private
s##sock
s##vfsmount
s##posix_acl
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##nlm_lockowner
s##nfs4_lock_state
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##iommu_group
s##iommu_fwspec
s##drm_master
s##drm_gem_object
s##dma_buf
s##reservation_object
s##dma_buf_attachment
s##drm_device_dma
s##msi_controller
s##proc_dir_entry
s##hotplug_slot
s##pci_vpd
s##pci_sriov
s##agp_bridge_data
s##drm_sg_mem
s##drm_local_map
s##drm_atomic_state
s##drm_mode_config_helper_funcs
s##drm_vma_offset_manager
s##drm_fb_helper
drm_mode_config_reset void drm_mode_config_reset ( s#drm_device * ) 
drm_mode_config_init void drm_mode_config_init ( s#drm_device * ) 
drm_mode_config_cleanup void drm_mode_config_cleanup ( s#drm_device * ) 

/* drivers/gpu/drm/drm_mode_object.o */
s##device_private
s##sock
s##vfsmount
s##posix_acl
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##nlm_lockowner
s##nfs4_lock_state
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##iommu_group
s##iommu_fwspec
s##drm_master
s##drm_gem_object
s##dma_buf
s##reservation_object
s##dma_buf_attachment
s##drm_device_dma
s##msi_controller
s##proc_dir_entry
s##hotplug_slot
s##pci_vpd
s##pci_sriov
s##agp_bridge_data
s##drm_sg_mem
s##drm_local_map
s##drm_encoder
s##drm_writeback_job
s##drm_connector_helper_funcs
s##drm_crtc_helper_funcs
s##drm_plane_helper_funcs
s##drm_mode_config_helper_funcs
s##drm_vma_offset_manager
s##drm_fb_helper
drm_mode_object_find s#drm_mode_object * drm_mode_object_find ( s#drm_device * , s#drm_file * , t#uint32_t , t#uint32_t ) 
drm_mode_object_put void drm_mode_object_put ( s#drm_mode_object * ) 
drm_mode_object_get void drm_mode_object_get ( s#drm_mode_object * ) 
drm_object_attach_property void drm_object_attach_property ( s#drm_mode_object * , s#drm_property * , t#uint64_t ) 
drm_object_property_set_value int drm_object_property_set_value ( s#drm_mode_object * , s#drm_property * , t#uint64_t ) 
drm_object_property_get_value int drm_object_property_get_value ( s#drm_mode_object * , s#drm_property * , t#uint64_t * ) 

/* drivers/gpu/drm/drm_modes.o */
s##device_private
s##sock
s##vfsmount
s##posix_acl
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##nlm_lockowner
s##nfs4_lock_state
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##iommu_group
s##iommu_fwspec
s##drm_master
s##drm_gem_object
s##dma_buf
s##reservation_object
s##dma_buf_attachment
s##drm_device_dma
s##msi_controller
s##proc_dir_entry
s##hotplug_slot
s##pci_vpd
s##pci_sriov
s##agp_bridge_data
s##drm_sg_mem
s##drm_local_map
s##drm_atomic_state
s##drm_mode_config_helper_funcs
s##drm_vma_offset_manager
s##drm_fb_helper
drm_mode_debug_printmodeline void drm_mode_debug_printmodeline ( const s#drm_display_mode * ) 
drm_mode_create s#drm_display_mode * drm_mode_create ( s#drm_device * ) 
drm_mode_destroy void drm_mode_destroy ( s#drm_device * , s#drm_display_mode * ) 
s##drm_crtc_commit
s##drm_plane_helper_funcs
s##drm_crtc_helper_funcs
s##drm_encoder
s##drm_writeback_job
s##drm_connector_helper_funcs
drm_mode_probed_add void drm_mode_probed_add ( s#drm_connector * , s#drm_display_mode * ) 
drm_cvt_mode s#drm_display_mode * drm_cvt_mode ( s#drm_device * , int , int , int , t#bool , t#bool , t#bool ) 
drm_gtf_mode_complex s#drm_display_mode * drm_gtf_mode_complex ( s#drm_device * , int , int , int , t#bool , int , int , int , int , int ) 
drm_gtf_mode s#drm_display_mode * drm_gtf_mode ( s#drm_device * , int , int , int , t#bool , int ) 
drm_mode_set_name void drm_mode_set_name ( s#drm_display_mode * ) 
drm_mode_hsync int drm_mode_hsync ( const s#drm_display_mode * ) 
drm_mode_vrefresh int drm_mode_vrefresh ( const s#drm_display_mode * ) 
drm_mode_get_hv_timing void drm_mode_get_hv_timing ( const s#drm_display_mode * , int * , int * ) 
drm_mode_set_crtcinfo void drm_mode_set_crtcinfo ( s#drm_display_mode * , int ) 
drm_mode_copy void drm_mode_copy ( s#drm_display_mode * , const s#drm_display_mode * ) 
drm_mode_duplicate s#drm_display_mode * drm_mode_duplicate ( s#drm_device * , const s#drm_display_mode * ) 
drm_mode_match t#bool drm_mode_match ( const s#drm_display_mode * , const s#drm_display_mode * , unsigned int ) 
drm_mode_equal t#bool drm_mode_equal ( const s#drm_display_mode * , const s#drm_display_mode * ) 
drm_mode_equal_no_clocks t#bool drm_mode_equal_no_clocks ( const s#drm_display_mode * , const s#drm_display_mode * ) 
drm_mode_equal_no_clocks_no_stereo t#bool drm_mode_equal_no_clocks_no_stereo ( const s#drm_display_mode * , const s#drm_display_mode * ) 
drm_mode_validate_driver e#drm_mode_status drm_mode_validate_driver ( s#drm_device * , const s#drm_display_mode * ) 
drm_mode_validate_size e#drm_mode_status drm_mode_validate_size ( const s#drm_display_mode * , int , int ) 
drm_mode_validate_ycbcr420 e#drm_mode_status drm_mode_validate_ycbcr420 ( const s#drm_display_mode * , s#drm_connector * ) 
drm_mode_prune_invalid void drm_mode_prune_invalid ( s#drm_device * , s#list_head * , t#bool ) 
drm_mode_sort void drm_mode_sort ( s#list_head * ) 
drm_connector_list_update void drm_connector_list_update ( s#drm_connector * ) 
drm_mode_parse_command_line_for_connector t#bool drm_mode_parse_command_line_for_connector ( const char * , s#drm_connector * , s#drm_cmdline_mode * ) 
drm_mode_create_from_cmdline_mode s#drm_display_mode * drm_mode_create_from_cmdline_mode ( s#drm_device * , s#drm_cmdline_mode * ) 
drm_mode_is_420_only t#bool drm_mode_is_420_only ( const s#drm_display_info * , const s#drm_display_mode * ) 
drm_mode_is_420_also t#bool drm_mode_is_420_also ( const s#drm_display_info * , const s#drm_display_mode * ) 
drm_mode_is_420 t#bool drm_mode_is_420 ( const s#drm_display_info * , const s#drm_display_mode * ) 

/* drivers/gpu/drm/drm_modeset_helper.o */
s##device_private
s##sock
s##vfsmount
s##posix_acl
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##nlm_lockowner
s##nfs4_lock_state
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##iommu_group
s##iommu_fwspec
s##drm_master
s##drm_gem_object
s##dma_buf
s##reservation_object
s##dma_buf_attachment
s##drm_device_dma
s##msi_controller
s##proc_dir_entry
s##hotplug_slot
s##pci_vpd
s##pci_sriov
s##agp_bridge_data
s##drm_sg_mem
s##drm_local_map
s##drm_atomic_state
s##drm_vma_offset_manager
s##drm_crtc_commit
s##drm_writeback_job
drm_helper_move_panel_connectors_to_head void drm_helper_move_panel_connectors_to_head ( s#drm_device * ) 
drm_helper_mode_fill_fb_struct void drm_helper_mode_fill_fb_struct ( s#drm_device * , s#drm_framebuffer * , const s#drm_mode_fb_cmd2 * ) 
drm_crtc_init int drm_crtc_init ( s#drm_device * , s#drm_crtc * , const s#drm_crtc_funcs * ) 
drm_mode_config_helper_suspend int drm_mode_config_helper_suspend ( s#drm_device * ) 
drm_mode_config_helper_resume int drm_mode_config_helper_resume ( s#drm_device * ) 

/* drivers/gpu/drm/drm_modeset_lock.o */
s##device_private
s##sock
s##vfsmount
s##posix_acl
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##nlm_lockowner
s##nfs4_lock_state
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##iommu_group
s##iommu_fwspec
s##drm_master
s##drm_gem_object
s##dma_buf
s##reservation_object
s##dma_buf_attachment
s##drm_device_dma
s##msi_controller
s##proc_dir_entry
s##hotplug_slot
s##pci_vpd
s##pci_sriov
s##agp_bridge_data
s##drm_sg_mem
s##drm_local_map
s##drm_atomic_state
s##drm_mode_config_helper_funcs
s##drm_vma_offset_manager
s##drm_fb_helper
drm_modeset_lock_all void drm_modeset_lock_all ( s#drm_device * ) 
drm_modeset_unlock_all void drm_modeset_unlock_all ( s#drm_device * ) 
drm_warn_on_modeset_not_all_locked void drm_warn_on_modeset_not_all_locked ( s#drm_device * ) 
drm_modeset_acquire_init void drm_modeset_acquire_init ( s#drm_modeset_acquire_ctx * , t#uint32_t ) 
drm_modeset_acquire_fini void drm_modeset_acquire_fini ( s#drm_modeset_acquire_ctx * ) 
drm_modeset_drop_locks void drm_modeset_drop_locks ( s#drm_modeset_acquire_ctx * ) 
drm_modeset_backoff int drm_modeset_backoff ( s#drm_modeset_acquire_ctx * ) 
drm_modeset_lock_init void drm_modeset_lock_init ( s#drm_modeset_lock * ) 
drm_modeset_lock int drm_modeset_lock ( s#drm_modeset_lock * , s#drm_modeset_acquire_ctx * ) 
drm_modeset_lock_single_interruptible int drm_modeset_lock_single_interruptible ( s#drm_modeset_lock * ) 
drm_modeset_unlock void drm_modeset_unlock ( s#drm_modeset_lock * ) 
drm_modeset_lock_all_ctx int drm_modeset_lock_all_ctx ( s#drm_device * , s#drm_modeset_acquire_ctx * ) 

/* drivers/gpu/drm/drm_panel.o */
s##drm_device
s##device_private
s##sock
s##seq_file
s##vfsmount
s##posix_acl
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##iommu_group
s##iommu_fwspec
s##drm_format_info
s##drm_file
s##drm_gem_object
s##dma_fence
s##drm_crtc_commit
s##drm_atomic_state
s##drm_printer
s##drm_plane_helper_funcs
s##drm_pending_vblank_event
s##drm_crtc_helper_funcs
s##drm_encoder
s##drm_writeback_job
s##drm_connector_helper_funcs
s##display_timing
drm_panel_init void drm_panel_init ( s#drm_panel * ) 
drm_panel_add int drm_panel_add ( s#drm_panel * ) 
drm_panel_remove void drm_panel_remove ( s#drm_panel * ) 
drm_panel_attach int drm_panel_attach ( s#drm_panel * , s#drm_connector * ) 
drm_panel_detach int drm_panel_detach ( s#drm_panel * ) 

/* drivers/gpu/drm/drm_panel_orientation_quirks.o */
drm_get_panel_orientation_quirk int drm_get_panel_orientation_quirk ( int , int ) 

/* drivers/gpu/drm/drm_pci.o */
s##device_private
s##sock
s##vfsmount
s##posix_acl
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##nlm_lockowner
s##nfs4_lock_state
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##iommu_group
s##iommu_fwspec
s##drm_gem_object
s##dma_buf
s##reservation_object
s##dma_buf_attachment
s##msi_controller
s##proc_dir_entry
s##hotplug_slot
s##pci_vpd
s##pci_sriov
s##agp_bridge_data
s##drm_atomic_state
s##drm_mode_config_helper_funcs
s##drm_vma_offset_manager
s##drm_fb_helper
drm_pci_alloc s#drm_dma_handle * drm_pci_alloc ( s#drm_device * , t#size_t , t#size_t ) 
drm_pci_free void drm_pci_free ( s#drm_device * , s#drm_dma_handle * ) 
drm_get_pci_dev int drm_get_pci_dev ( s#pci_dev * , const s#pci_device_id * , s#drm_driver * ) 
drm_legacy_pci_init int drm_legacy_pci_init ( s#drm_driver * , s#pci_driver * ) 
drm_legacy_pci_exit void drm_legacy_pci_exit ( s#drm_driver * , s#pci_driver * ) 

/* drivers/gpu/drm/drm_plane.o */
s##device_private
s##sock
s##vfsmount
s##posix_acl
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##nlm_lockowner
s##nfs4_lock_state
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##iommu_group
s##iommu_fwspec
s##drm_master
s##drm_gem_object
s##dma_buf
s##reservation_object
s##dma_buf_attachment
s##drm_device_dma
s##msi_controller
s##proc_dir_entry
s##hotplug_slot
s##pci_vpd
s##pci_sriov
s##agp_bridge_data
s##drm_sg_mem
s##drm_local_map
s##drm_atomic_state
s##drm_mode_config_helper_funcs
s##drm_vma_offset_manager
s##drm_fb_helper
s##drm_encoder
s##drm_crtc_commit
s##drm_writeback_job
s##drm_connector_helper_funcs
s##drm_crtc_helper_funcs
s##drm_plane_helper_funcs
drm_universal_plane_init __attribute__ ( ( format ( printf , 9 , 10 ) ) ) int drm_universal_plane_init ( s#drm_device * , s#drm_plane * , t#uint32_t , const s#drm_plane_funcs * , const t#uint32_t * , unsigned int , const t#uint64_t * , e#drm_plane_type , const char * , ... ) 
drm_plane_init int drm_plane_init ( s#drm_device * , s#drm_plane * , t#uint32_t , const s#drm_plane_funcs * , const t#uint32_t * , unsigned int , t#bool ) 
drm_plane_cleanup void drm_plane_cleanup ( s#drm_plane * ) 
drm_plane_from_index s#drm_plane * drm_plane_from_index ( s#drm_device * , int ) 
drm_plane_force_disable void drm_plane_force_disable ( s#drm_plane * ) 
drm_mode_plane_set_obj_prop int drm_mode_plane_set_obj_prop ( s#drm_plane * , s#drm_property * , t#uint64_t ) 

/* drivers/gpu/drm/drm_plane_helper.o */
s##device_private
s##sock
s##vfsmount
s##posix_acl
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##nlm_lockowner
s##nfs4_lock_state
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##iommu_group
s##iommu_fwspec
s##drm_master
s##drm_gem_object
s##dma_buf
s##reservation_object
s##dma_buf_attachment
s##drm_device_dma
s##msi_controller
s##proc_dir_entry
s##hotplug_slot
s##pci_vpd
s##pci_sriov
s##agp_bridge_data
s##drm_sg_mem
s##drm_local_map
s##drm_writeback_job
e##mode_set_atomic
s##drm_vma_offset_manager
s##drm_fb_helper
drm_plane_helper_check_update int drm_plane_helper_check_update ( s#drm_plane * , s#drm_crtc * , s#drm_framebuffer * , s#drm_rect * , s#drm_rect * , unsigned int , int , int , t#bool , t#bool , t#bool * ) 
drm_primary_helper_update int drm_primary_helper_update ( s#drm_plane * , s#drm_crtc * , s#drm_framebuffer * , int , int , unsigned int , unsigned int , t#uint32_t , t#uint32_t , t#uint32_t , t#uint32_t , s#drm_modeset_acquire_ctx * ) 
drm_primary_helper_disable int drm_primary_helper_disable ( s#drm_plane * , s#drm_modeset_acquire_ctx * ) 
drm_primary_helper_destroy void drm_primary_helper_destroy ( s#drm_plane * ) 
drm_primary_helper_funcs extern const s#drm_plane_funcs drm_primary_helper_funcs 
drm_plane_helper_update int drm_plane_helper_update ( s#drm_plane * , s#drm_crtc * , s#drm_framebuffer * , int , int , unsigned int , unsigned int , t#uint32_t , t#uint32_t , t#uint32_t , t#uint32_t , s#drm_modeset_acquire_ctx * ) 
drm_plane_helper_disable int drm_plane_helper_disable ( s#drm_plane * , s#drm_modeset_acquire_ctx * ) 

/* drivers/gpu/drm/drm_prime.o */
s##vfsmount
s##posix_acl
s##sock
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##pipe_inode_info
s##writeback_control
s##bio_vec
s##swap_info_struct
s##device_private
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##iommu_group
s##iommu_fwspec
s##kmem_cache
s##mem_cgroup
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##nlm_lockowner
s##nfs4_lock_state
s##fsnotify_mark_connector
s##fscrypt_info
s##reservation_object
drm_gem_map_attach int drm_gem_map_attach ( s#dma_buf * , s#device * , s#dma_buf_attachment * ) 
drm_gem_map_detach void drm_gem_map_detach ( s#dma_buf * , s#dma_buf_attachment * ) 
drm_gem_map_dma_buf s#sg_table * drm_gem_map_dma_buf ( s#dma_buf_attachment * , e#dma_data_direction ) 
drm_gem_unmap_dma_buf void drm_gem_unmap_dma_buf ( s#dma_buf_attachment * , s#sg_table * , e#dma_data_direction ) 
s##drm_master
s##drm_device_dma
s##msi_controller
s##proc_dir_entry
s##hotplug_slot
s##pci_vpd
s##pci_sriov
s##agp_bridge_data
s##drm_sg_mem
s##drm_local_map
s##drm_atomic_state
s##drm_mode_config_helper_funcs
s##drm_fb_helper
drm_gem_dmabuf_export s#dma_buf * drm_gem_dmabuf_export ( s#drm_device * , s#dma_buf_export_info * ) 
drm_gem_dmabuf_release void drm_gem_dmabuf_release ( s#dma_buf * ) 
drm_gem_dmabuf_vmap void * drm_gem_dmabuf_vmap ( s#dma_buf * ) 
drm_gem_dmabuf_vunmap void drm_gem_dmabuf_vunmap ( s#dma_buf * , void * ) 
drm_gem_dmabuf_kmap_atomic void * drm_gem_dmabuf_kmap_atomic ( s#dma_buf * , unsigned long ) 
drm_gem_dmabuf_kunmap_atomic void drm_gem_dmabuf_kunmap_atomic ( s#dma_buf * , unsigned long , void * ) 
drm_gem_dmabuf_kmap void * drm_gem_dmabuf_kmap ( s#dma_buf * , unsigned long ) 
drm_gem_dmabuf_kunmap void drm_gem_dmabuf_kunmap ( s#dma_buf * , unsigned long , void * ) 
drm_gem_dmabuf_mmap int drm_gem_dmabuf_mmap ( s#dma_buf * , s#vm_area_struct * ) 
drm_gem_prime_export s#dma_buf * drm_gem_prime_export ( s#drm_device * , s#drm_gem_object * , int ) 
drm_gem_prime_handle_to_fd int drm_gem_prime_handle_to_fd ( s#drm_device * , s#drm_file * , t#uint32_t , t#uint32_t , int * ) 
drm_gem_prime_import_dev s#drm_gem_object * drm_gem_prime_import_dev ( s#drm_device * , s#dma_buf * , s#device * ) 
drm_gem_prime_import s#drm_gem_object * drm_gem_prime_import ( s#drm_device * , s#dma_buf * ) 
drm_gem_prime_fd_to_handle int drm_gem_prime_fd_to_handle ( s#drm_device * , s#drm_file * , int , t#uint32_t * ) 
drm_prime_pages_to_sg s#sg_table * drm_prime_pages_to_sg ( s#page * * , unsigned int ) 
drm_prime_sg_to_page_addr_arrays int drm_prime_sg_to_page_addr_arrays ( s#sg_table * , s#page * * , t#dma_addr_t * , int ) 
drm_prime_gem_destroy void drm_prime_gem_destroy ( s#drm_gem_object * , s#sg_table * ) 

/* drivers/gpu/drm/drm_print.o */
__drm_puts_coredump void __drm_puts_coredump ( s#drm_printer * , const char * ) 
__drm_printfn_coredump void __drm_printfn_coredump ( s#drm_printer * , s#va_format * ) 
__drm_puts_seq_file void __drm_puts_seq_file ( s#drm_printer * , const char * ) 
__drm_printfn_seq_file void __drm_printfn_seq_file ( s#drm_printer * , s#va_format * ) 
__drm_printfn_info void __drm_printfn_info ( s#drm_printer * , s#va_format * ) 
__drm_printfn_debug void __drm_printfn_debug ( s#drm_printer * , s#va_format * ) 
drm_puts void drm_puts ( s#drm_printer * , const char * ) 
drm_printf __attribute__ ( ( format ( printf , 2 , 3 ) ) ) void drm_printf ( s#drm_printer * , const char * , ... ) 
s##device_private
s##sock
s##vfsmount
s##posix_acl
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##nlm_lockowner
s##nfs4_lock_state
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##iommu_group
s##iommu_fwspec
drm_dev_printk __attribute__ ( ( format ( printf , 3 , 4 ) ) ) void drm_dev_printk ( const s#device * , const char * , const char * , ... ) 
drm_dev_dbg __attribute__ ( ( format ( printf , 3 , 4 ) ) ) void drm_dev_dbg ( const s#device * , unsigned int , const char * , ... ) 
drm_dbg __attribute__ ( ( format ( printf , 2 , 3 ) ) ) void drm_dbg ( unsigned int , const char * , ... ) 
drm_err __attribute__ ( ( format ( printf , 1 , 2 ) ) ) void drm_err ( const char * , ... ) 

/* drivers/gpu/drm/drm_probe_helper.o */
s##device_private
s##sock
s##vfsmount
s##posix_acl
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##nlm_lockowner
s##nfs4_lock_state
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##iommu_group
s##iommu_fwspec
s##drm_master
s##drm_gem_object
s##dma_buf
s##reservation_object
s##dma_buf_attachment
s##drm_device_dma
s##msi_controller
s##proc_dir_entry
s##hotplug_slot
s##pci_vpd
s##pci_sriov
s##agp_bridge_data
s##drm_sg_mem
s##drm_local_map
s##drm_atomic_state
s##drm_vma_offset_manager
s##drm_crtc_commit
s##drm_writeback_job
drm_kms_helper_poll_enable void drm_kms_helper_poll_enable ( s#drm_device * ) 
drm_helper_probe_detect int drm_helper_probe_detect ( s#drm_connector * , s#drm_modeset_acquire_ctx * , t#bool ) 
drm_helper_probe_single_connector_modes int drm_helper_probe_single_connector_modes ( s#drm_connector * , t#uint32_t , t#uint32_t ) 
drm_kms_helper_hotplug_event void drm_kms_helper_hotplug_event ( s#drm_device * ) 
drm_kms_helper_is_poll_worker t#bool drm_kms_helper_is_poll_worker ( void ) 
drm_kms_helper_poll_disable void drm_kms_helper_poll_disable ( s#drm_device * ) 
drm_kms_helper_poll_init void drm_kms_helper_poll_init ( s#drm_device * ) 
drm_kms_helper_poll_fini void drm_kms_helper_poll_fini ( s#drm_device * ) 
drm_helper_hpd_irq_event t#bool drm_helper_hpd_irq_event ( s#drm_device * ) 

/* drivers/gpu/drm/drm_property.o */
s##device_private
s##sock
s##vfsmount
s##posix_acl
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##nlm_lockowner
s##nfs4_lock_state
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##iommu_group
s##iommu_fwspec
s##drm_master
s##drm_gem_object
s##dma_buf
s##reservation_object
s##dma_buf_attachment
s##drm_device_dma
s##msi_controller
s##proc_dir_entry
s##hotplug_slot
s##pci_vpd
s##pci_sriov
s##agp_bridge_data
s##drm_sg_mem
s##drm_local_map
s##drm_atomic_state
s##drm_mode_config_helper_funcs
s##drm_vma_offset_manager
s##drm_fb_helper
drm_property_create s#drm_property * drm_property_create ( s#drm_device * , t#u32 , const char * , int ) 
s#drm_prop_enum_list struct drm_prop_enum_list { int type ; const char * name ; } 
drm_property_create_enum s#drm_property * drm_property_create_enum ( s#drm_device * , t#u32 , const char * , const s#drm_prop_enum_list * , int ) 
drm_property_create_bitmask s#drm_property * drm_property_create_bitmask ( s#drm_device * , t#u32 , const char * , const s#drm_prop_enum_list * , int , t#uint64_t ) 
drm_property_create_range s#drm_property * drm_property_create_range ( s#drm_device * , t#u32 , const char * , t#uint64_t , t#uint64_t ) 
t#int64_t typedef t#__s64 int64_t 
drm_property_create_signed_range s#drm_property * drm_property_create_signed_range ( s#drm_device * , t#u32 , const char * , t#int64_t , t#int64_t ) 
drm_property_create_object s#drm_property * drm_property_create_object ( s#drm_device * , t#u32 , const char * , t#uint32_t ) 
drm_property_create_bool s#drm_property * drm_property_create_bool ( s#drm_device * , t#u32 , const char * ) 
drm_property_add_enum int drm_property_add_enum ( s#drm_property * , t#uint64_t , const char * ) 
drm_property_destroy void drm_property_destroy ( s#drm_device * , s#drm_property * ) 
drm_property_create_blob s#drm_property_blob * drm_property_create_blob ( s#drm_device * , t#size_t , const void * ) 
drm_property_blob_put void drm_property_blob_put ( s#drm_property_blob * ) 
drm_property_blob_get s#drm_property_blob * drm_property_blob_get ( s#drm_property_blob * ) 
drm_property_lookup_blob s#drm_property_blob * drm_property_lookup_blob ( s#drm_device * , t#uint32_t ) 
drm_property_replace_global_blob int drm_property_replace_global_blob ( s#drm_device * , s#drm_property_blob * * , t#size_t , const void * , s#drm_mode_object * , s#drm_property * ) 
drm_property_replace_blob t#bool drm_property_replace_blob ( s#drm_property_blob * * , s#drm_property_blob * ) 

/* drivers/gpu/drm/drm_rect.o */
drm_rect_intersect t#bool drm_rect_intersect ( s#drm_rect * , const s#drm_rect * ) 
drm_rect_clip_scaled t#bool drm_rect_clip_scaled ( s#drm_rect * , s#drm_rect * , const s#drm_rect * ) 
drm_rect_calc_hscale int drm_rect_calc_hscale ( const s#drm_rect * , const s#drm_rect * , int , int ) 
drm_rect_calc_vscale int drm_rect_calc_vscale ( const s#drm_rect * , const s#drm_rect * , int , int ) 
drm_rect_calc_hscale_relaxed int drm_rect_calc_hscale_relaxed ( s#drm_rect * , s#drm_rect * , int , int ) 
drm_rect_calc_vscale_relaxed int drm_rect_calc_vscale_relaxed ( s#drm_rect * , s#drm_rect * , int , int ) 
drm_rect_debug_print void drm_rect_debug_print ( const char * , const s#drm_rect * , t#bool ) 
drm_rect_rotate void drm_rect_rotate ( s#drm_rect * , int , int , unsigned int ) 
drm_rect_rotate_inv void drm_rect_rotate_inv ( s#drm_rect * , int , int , unsigned int ) 

/* drivers/gpu/drm/drm_scdc_helper.o */
s##sock
s##vfsmount
s##posix_acl
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##device_private
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##iommu_group
s##iommu_fwspec
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##nlm_lockowner
s##nfs4_lock_state
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##gpio_desc
s##irq_domain_chip_generic
drm_scdc_read t#ssize_t drm_scdc_read ( s#i2c_adapter * , t#u8 , void * , t#size_t ) 
drm_scdc_write t#ssize_t drm_scdc_write ( s#i2c_adapter * , t#u8 , const void * , t#size_t ) 
drm_scdc_get_scrambling_status t#bool drm_scdc_get_scrambling_status ( s#i2c_adapter * ) 
drm_scdc_set_scrambling t#bool drm_scdc_set_scrambling ( s#i2c_adapter * , t#bool ) 
drm_scdc_set_high_tmds_clock_ratio t#bool drm_scdc_set_high_tmds_clock_ratio ( s#i2c_adapter * , t#bool ) 

/* drivers/gpu/drm/drm_simple_kms_helper.o */
s##device_private
s##sock
s##vfsmount
s##posix_acl
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##nlm_lockowner
s##nfs4_lock_state
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##iommu_group
s##iommu_fwspec
s##drm_master
s##drm_gem_object
s##dma_buf
s##reservation_object
s##dma_buf_attachment
s##drm_device_dma
s##msi_controller
s##proc_dir_entry
s##hotplug_slot
s##pci_vpd
s##pci_sriov
s##agp_bridge_data
s##drm_sg_mem
s##drm_local_map
s##drm_writeback_job
s##drm_vma_offset_manager
s##drm_fb_helper
e##mode_set_atomic
drm_simple_display_pipe_attach_bridge int drm_simple_display_pipe_attach_bridge ( s#drm_simple_display_pipe * , s#drm_bridge * ) 
drm_simple_display_pipe_init int drm_simple_display_pipe_init ( s#drm_device * , s#drm_simple_display_pipe * , const s#drm_simple_display_pipe_funcs * , const t#uint32_t * , unsigned int , const t#uint64_t * , s#drm_connector * ) 

/* drivers/gpu/drm/drm_syncobj.o */
s##vfsmount
s##posix_acl
s##sock
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##pipe_inode_info
s##writeback_control
s##bio_vec
s##swap_info_struct
s##device_private
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##iommu_group
s##iommu_fwspec
s##kmem_cache
s##mem_cgroup
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##nlm_lockowner
s##nfs4_lock_state
s##fsnotify_mark_connector
s##fscrypt_info
s#drm_syncobj struct drm_syncobj { s#kref refcount ; s#dma_fence * fence ; s#list_head cb_list ; t#spinlock_t lock ; s#file * file ; } 
s##drm_master
s##drm_gem_object
s##dma_buf
s##reservation_object
s##dma_buf_attachment
s##drm_device_dma
s##msi_controller
s##proc_dir_entry
s##hotplug_slot
s##pci_vpd
s##pci_sriov
s##agp_bridge_data
s##drm_sg_mem
s##drm_local_map
s##drm_atomic_state
s##drm_mode_config_helper_funcs
s##drm_vma_offset_manager
s##drm_fb_helper
drm_syncobj_find s#drm_syncobj * drm_syncobj_find ( s#drm_file * , t#u32 ) 
t#drm_syncobj_func_t typedef void ( * drm_syncobj_func_t ) ( s#drm_syncobj * , s#drm_syncobj_cb * ) 
s#drm_syncobj_cb struct drm_syncobj_cb { s#list_head node ; t#drm_syncobj_func_t func ; } 
drm_syncobj_add_callback void drm_syncobj_add_callback ( s#drm_syncobj * , s#drm_syncobj_cb * , t#drm_syncobj_func_t ) 
drm_syncobj_remove_callback void drm_syncobj_remove_callback ( s#drm_syncobj * , s#drm_syncobj_cb * ) 
drm_syncobj_replace_fence void drm_syncobj_replace_fence ( s#drm_syncobj * , s#dma_fence * ) 
drm_syncobj_find_fence int drm_syncobj_find_fence ( s#drm_file * , t#u32 , s#dma_fence * * ) 
drm_syncobj_free void drm_syncobj_free ( s#kref * ) 
drm_syncobj_create int drm_syncobj_create ( s#drm_syncobj * * , t#uint32_t , s#dma_fence * ) 
drm_syncobj_get_handle int drm_syncobj_get_handle ( s#drm_file * , s#drm_syncobj * , t#u32 * ) 
drm_syncobj_get_fd int drm_syncobj_get_fd ( s#drm_syncobj * , int * ) 

/* drivers/gpu/drm/drm_sysfs.o */
s##device_private
s##sock
s##vfsmount
s##posix_acl
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##nlm_lockowner
s##nfs4_lock_state
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##iommu_group
s##iommu_fwspec
s##drm_master
s##drm_gem_object
s##dma_buf
s##reservation_object
s##dma_buf_attachment
s##drm_device_dma
s##msi_controller
s##proc_dir_entry
s##hotplug_slot
s##pci_vpd
s##pci_sriov
s##agp_bridge_data
s##drm_sg_mem
s##drm_local_map
s##drm_atomic_state
s##drm_mode_config_helper_funcs
s##drm_vma_offset_manager
s##drm_fb_helper
drm_sysfs_hotplug_event void drm_sysfs_hotplug_event ( s#drm_device * ) 
drm_class_device_register int drm_class_device_register ( s#device * ) 
drm_class_device_unregister void drm_class_device_unregister ( s#device * ) 

/* drivers/gpu/drm/drm_vblank.o */
s##device_private
s##sock
s##vfsmount
s##posix_acl
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##nlm_lockowner
s##nfs4_lock_state
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##iommu_group
s##iommu_fwspec
s##drm_master
s##drm_gem_object
s##dma_buf
s##reservation_object
s##dma_buf_attachment
s##drm_device_dma
s##msi_controller
s##proc_dir_entry
s##hotplug_slot
s##pci_vpd
s##pci_sriov
s##agp_bridge_data
s##drm_sg_mem
s##drm_local_map
s##drm_atomic_state
s##drm_mode_config_helper_funcs
s##drm_vma_offset_manager
s##drm_fb_helper
s##drm_crtc_commit
s##drm_plane_helper_funcs
s##drm_encoder
s##drm_writeback_job
s##drm_connector_helper_funcs
s##drm_crtc_helper_funcs
drm_crtc_accurate_vblank_count t#u64 drm_crtc_accurate_vblank_count ( s#drm_crtc * ) 
drm_vblank_init int drm_vblank_init ( s#drm_device * , unsigned int ) 
drm_crtc_vblank_waitqueue t#wait_queue_head_t * drm_crtc_vblank_waitqueue ( s#drm_crtc * ) 
drm_calc_timestamping_constants void drm_calc_timestamping_constants ( s#drm_crtc * , const s#drm_display_mode * ) 
drm_calc_vbltimestamp_from_scanoutpos t#bool drm_calc_vbltimestamp_from_scanoutpos ( s#drm_device * , unsigned int , int * , t#ktime_t * , t#bool ) 
drm_crtc_vblank_count t#u64 drm_crtc_vblank_count ( s#drm_crtc * ) 
drm_crtc_vblank_count_and_time t#u64 drm_crtc_vblank_count_and_time ( s#drm_crtc * , t#ktime_t * ) 
drm_crtc_arm_vblank_event void drm_crtc_arm_vblank_event ( s#drm_crtc * , s#drm_pending_vblank_event * ) 
drm_crtc_send_vblank_event void drm_crtc_send_vblank_event ( s#drm_crtc * , s#drm_pending_vblank_event * ) 
drm_crtc_vblank_get int drm_crtc_vblank_get ( s#drm_crtc * ) 
drm_crtc_vblank_put void drm_crtc_vblank_put ( s#drm_crtc * ) 
drm_wait_one_vblank void drm_wait_one_vblank ( s#drm_device * , unsigned int ) 
drm_crtc_wait_one_vblank void drm_crtc_wait_one_vblank ( s#drm_crtc * ) 
drm_crtc_vblank_off void drm_crtc_vblank_off ( s#drm_crtc * ) 
drm_crtc_vblank_reset void drm_crtc_vblank_reset ( s#drm_crtc * ) 
drm_crtc_vblank_on void drm_crtc_vblank_on ( s#drm_crtc * ) 
drm_vblank_restore void drm_vblank_restore ( s#drm_device * , unsigned int ) 
drm_crtc_vblank_restore void drm_crtc_vblank_restore ( s#drm_crtc * ) 
drm_handle_vblank t#bool drm_handle_vblank ( s#drm_device * , unsigned int ) 
drm_crtc_handle_vblank t#bool drm_crtc_handle_vblank ( s#drm_crtc * ) 

/* drivers/gpu/drm/drm_vma_manager.o */
drm_vma_offset_manager_init void drm_vma_offset_manager_init ( s#drm_vma_offset_manager * , unsigned long , unsigned long ) 
drm_vma_offset_manager_destroy void drm_vma_offset_manager_destroy ( s#drm_vma_offset_manager * ) 
drm_vma_offset_lookup_locked s#drm_vma_offset_node * drm_vma_offset_lookup_locked ( s#drm_vma_offset_manager * , unsigned long , unsigned long ) 
drm_vma_offset_add int drm_vma_offset_add ( s#drm_vma_offset_manager * , s#drm_vma_offset_node * , unsigned long ) 
drm_vma_offset_remove void drm_vma_offset_remove ( s#drm_vma_offset_manager * , s#drm_vma_offset_node * ) 
s##drm_master
s##pid_namespace
s##device_private
s##sock
s##vfsmount
s##posix_acl
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##key_user
s##key_type
s##assoc_array_ptr
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##nlm_lockowner
s##nfs4_lock_state
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##iommu_group
s##iommu_fwspec
s##drm_gem_object
s##dma_buf
s##reservation_object
s##dma_buf_attachment
s##drm_device_dma
s##msi_controller
s##proc_dir_entry
s##hotplug_slot
s##pci_vpd
s##pci_sriov
s##agp_bridge_data
s##drm_sg_mem
s##drm_local_map
s##drm_atomic_state
s##drm_mode_config_helper_funcs
s##drm_fb_helper
drm_vma_node_allow int drm_vma_node_allow ( s#drm_vma_offset_node * , s#drm_file * ) 
drm_vma_node_revoke void drm_vma_node_revoke ( s#drm_vma_offset_node * , s#drm_file * ) 
drm_vma_node_is_allowed t#bool drm_vma_node_is_allowed ( s#drm_vma_offset_node * , s#drm_file * ) 

/* drivers/gpu/drm/drm_writeback.o */
s##device_private
s##sock
s##vfsmount
s##posix_acl
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##nlm_lockowner
s##nfs4_lock_state
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##iommu_group
s##iommu_fwspec
s##drm_master
s##drm_gem_object
s##dma_buf
s##reservation_object
s##dma_buf_attachment
s##drm_device_dma
s##msi_controller
s##proc_dir_entry
s##hotplug_slot
s##pci_vpd
s##pci_sriov
s##agp_bridge_data
s##drm_sg_mem
s##drm_local_map
s##drm_atomic_state
s##drm_vma_offset_manager
s##drm_fb_helper
s##drm_crtc_commit
e##mode_set_atomic
s#drm_writeback_connector struct drm_writeback_connector { s#drm_connector base ; s#drm_encoder encoder ; s#drm_property_blob * pixel_formats_blob_ptr ; t#spinlock_t job_lock ; s#list_head job_queue ; unsigned int fence_context ; t#spinlock_t fence_lock ; unsigned long fence_seqno ; char timeline_name [ 32 ] ; } 
drm_writeback_connector_init int drm_writeback_connector_init ( s#drm_device * , s#drm_writeback_connector * , const s#drm_connector_funcs * , const s#drm_encoder_helper_funcs * , const t#u32 * , int ) 
drm_writeback_queue_job void drm_writeback_queue_job ( s#drm_writeback_connector * , s#drm_writeback_job * ) 
drm_writeback_signal_completion void drm_writeback_signal_completion ( s#drm_writeback_connector * , int ) 
drm_writeback_get_out_fence s#dma_fence * drm_writeback_get_out_fence ( s#drm_writeback_connector * ) 

/* drivers/gpu/drm/ttm/ttm_bo.o */
s##sock
s##vfsmount
s##posix_acl
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##fwnode_handle
s##iommu_group
s##iommu_fwspec
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##ttm_mem_zone
s#ttm_mem_global struct ttm_mem_global { s#kobject kobj ; s#ttm_bo_global * bo_glob ; s#workqueue_struct * swap_queue ; s#work_struct work ; t#spinlock_t lock ; t#uint64_t lower_mem_limit ; s#ttm_mem_zone * zones [ 2 ] ; unsigned int num_zones ; s#ttm_mem_zone * zone_kernel ; s#ttm_mem_zone * zone_dma32 ; } 
s#ttm_bo_global struct ttm_bo_global { s#kobject kobj ; s#ttm_mem_global * mem_glob ; s#page * dummy_read_page ; s#mutex device_list_mutex ; t#spinlock_t lru_lock ; s#list_head device_list ; s#list_head swap_lru [ 4U ] ; t#atomic_t bo_count ; } 
s#ttm_bus_placement struct ttm_bus_placement { void * addr ; t#phys_addr_t base ; unsigned long size ; unsigned long offset ; t#bool is_iomem ; t#bool io_reserved_vm ; t#uint64_t io_reserved_count ; } 
s#ttm_mem_reg struct ttm_mem_reg { void * mm_node ; unsigned long start ; unsigned long size ; unsigned long num_pages ; t#uint32_t page_alignment ; t#uint32_t mem_type ; t#uint32_t placement ; s#ttm_bus_placement bus ; } 
s#ttm_backend_func struct ttm_backend_func { int ( * bind ) ( s#ttm_tt * , s#ttm_mem_reg * ) ; int ( * unbind ) ( s#ttm_tt * ) ; void ( * destroy ) ( s#ttm_tt * ) ; } 
s##sg_table
e#ttm_caching_state enum ttm_caching_state { tt_uncached , tt_wc , tt_cached } 
s#ttm_tt struct ttm_tt { s#ttm_bo_device * bdev ; s#ttm_backend_func * func ; s#page * * pages ; t#uint32_t page_flags ; unsigned long num_pages ; s#sg_table * sg ; s#file * swap_storage ; e#ttm_caching_state caching_state ; enum { tt_bound , tt_unbound , tt_unpopulated , } state ; } 
s#ttm_operation_ctx struct ttm_operation_ctx { t#bool interruptible ; t#bool no_wait_gpu ; s#reservation_object * resv ; t#uint64_t bytes_moved ; t#uint32_t flags ; } 
s#ttm_place struct ttm_place { unsigned fpfn ; unsigned lpfn ; t#uint32_t flags ; } 
s#ttm_mem_type_manager_func struct ttm_mem_type_manager_func { int ( * init ) ( s#ttm_mem_type_manager * , unsigned long ) ; int ( * takedown ) ( s#ttm_mem_type_manager * ) ; int ( * get_node ) ( s#ttm_mem_type_manager * , s#ttm_buffer_object * , const s#ttm_place * , s#ttm_mem_reg * ) ; void ( * put_node ) ( s#ttm_mem_type_manager * , s#ttm_mem_reg * ) ; void ( * debug ) ( s#ttm_mem_type_manager * , s#drm_printer * ) ; } 
s#ttm_mem_type_manager struct ttm_mem_type_manager { s#ttm_bo_device * bdev ; t#bool has_type ; t#bool use_type ; t#uint32_t flags ; t#uint64_t gpu_offset ; t#uint64_t size ; t#uint32_t available_caching ; t#uint32_t default_caching ; const s#ttm_mem_type_manager_func * func ; void * priv ; s#mutex io_reserve_mutex ; t#bool use_io_reserve_lru ; t#bool io_reserve_fastpath ; t#spinlock_t move_lock ; s#list_head io_reserve_lru ; s#list_head lru [ 4U ] ; s#dma_fence * move ; } 
s#ttm_placement struct ttm_placement { unsigned num_placement ; const s#ttm_place * placement ; unsigned num_busy_placement ; const s#ttm_place * busy_placement ; } 
s#ttm_bo_driver struct ttm_bo_driver { s#ttm_tt * ( * ttm_tt_create ) ( s#ttm_buffer_object * , t#uint32_t ) ; int ( * ttm_tt_populate ) ( s#ttm_tt * , s#ttm_operation_ctx * ) ; void ( * ttm_tt_unpopulate ) ( s#ttm_tt * ) ; int ( * invalidate_caches ) ( s#ttm_bo_device * , t#uint32_t ) ; int ( * init_mem_type ) ( s#ttm_bo_device * , t#uint32_t , s#ttm_mem_type_manager * ) ; t#bool ( * eviction_valuable ) ( s#ttm_buffer_object * , const s#ttm_place * ) ; void ( * evict_flags ) ( s#ttm_buffer_object * , s#ttm_placement * ) ; int ( * move ) ( s#ttm_buffer_object * , t#bool , s#ttm_operation_ctx * , s#ttm_mem_reg * ) ; int ( * verify_access ) ( s#ttm_buffer_object * , s#file * ) ; void ( * move_notify ) ( s#ttm_buffer_object * , t#bool , s#ttm_mem_reg * ) ; int ( * fault_reserve_notify ) ( s#ttm_buffer_object * ) ; void ( * swap_notify ) ( s#ttm_buffer_object * ) ; int ( * io_mem_reserve ) ( s#ttm_bo_device * , s#ttm_mem_reg * ) ; void ( * io_mem_free ) ( s#ttm_bo_device * , s#ttm_mem_reg * ) ; unsigned long ( * io_mem_pfn ) ( s#ttm_buffer_object * , unsigned long ) ; int ( * access_memory ) ( s#ttm_buffer_object * , unsigned long , void * , int , int ) ; } 
s#ttm_bo_device struct ttm_bo_device { s#list_head device_list ; s#ttm_bo_global * glob ; s#ttm_bo_driver * driver ; s#ttm_mem_type_manager man [ 8 ] ; s#drm_vma_offset_manager vma_manager ; s#list_head ddestroy ; s#address_space * dev_mapping ; s#delayed_work wq ; t#bool need_dma32 ; t#bool no_retry ; } 
e#ttm_bo_type enum ttm_bo_type { ttm_bo_type_device , ttm_bo_type_kernel , ttm_bo_type_sg } 
s#ttm_buffer_object struct ttm_buffer_object { s#ttm_bo_device * bdev ; e#ttm_bo_type type ; void ( * destroy ) ( s#ttm_buffer_object * ) ; unsigned long num_pages ; t#size_t acc_size ; s#kref kref ; s#kref list_kref ; s#ttm_mem_reg mem ; s#file * persistent_swap_storage ; s#ttm_tt * ttm ; t#bool evicted ; t#atomic_t cpu_writers ; s#list_head lru ; s#list_head ddestroy ; s#list_head swap ; s#list_head io_reserve_lru ; s#dma_fence * moving ; s#drm_vma_offset_node vma_node ; unsigned priority ; t#uint64_t offset ; s#sg_table * sg ; s#reservation_object * resv ; s#reservation_object ttm_resv ; s#mutex wu_mutex ; } 
ttm_bo_add_to_lru void ttm_bo_add_to_lru ( s#ttm_buffer_object * ) 
ttm_bo_del_sub_from_lru void ttm_bo_del_sub_from_lru ( s#ttm_buffer_object * ) 
ttm_bo_move_to_lru_tail void ttm_bo_move_to_lru_tail ( s#ttm_buffer_object * ) 
ttm_bo_put void ttm_bo_put ( s#ttm_buffer_object * ) 
ttm_bo_unref void ttm_bo_unref ( s#ttm_buffer_object * * ) 
ttm_bo_lock_delayed_workqueue int ttm_bo_lock_delayed_workqueue ( s#ttm_bo_device * ) 
ttm_bo_unlock_delayed_workqueue void ttm_bo_unlock_delayed_workqueue ( s#ttm_bo_device * , int ) 
ttm_bo_eviction_valuable t#bool ttm_bo_eviction_valuable ( s#ttm_buffer_object * , const s#ttm_place * ) 
ttm_bo_mem_put void ttm_bo_mem_put ( s#ttm_buffer_object * , s#ttm_mem_reg * ) 
ttm_bo_mem_space int ttm_bo_mem_space ( s#ttm_buffer_object * , s#ttm_placement * , s#ttm_mem_reg * , s#ttm_operation_ctx * ) 
ttm_bo_mem_compat t#bool ttm_bo_mem_compat ( s#ttm_placement * , s#ttm_mem_reg * , t#uint32_t * ) 
ttm_bo_validate int ttm_bo_validate ( s#ttm_buffer_object * , s#ttm_placement * , s#ttm_operation_ctx * ) 
ttm_bo_init_reserved int ttm_bo_init_reserved ( s#ttm_bo_device * , s#ttm_buffer_object * , unsigned long , e#ttm_bo_type , s#ttm_placement * , t#uint32_t , s#ttm_operation_ctx * , t#size_t , s#sg_table * , s#reservation_object * , void ( * ) ( s#ttm_buffer_object * ) ) 
ttm_bo_init int ttm_bo_init ( s#ttm_bo_device * , s#ttm_buffer_object * , unsigned long , e#ttm_bo_type , s#ttm_placement * , t#uint32_t , t#bool , t#size_t , s#sg_table * , s#reservation_object * , void ( * ) ( s#ttm_buffer_object * ) ) 
ttm_bo_acc_size t#size_t ttm_bo_acc_size ( s#ttm_bo_device * , unsigned long , unsigned ) 
ttm_bo_dma_acc_size t#size_t ttm_bo_dma_acc_size ( s#ttm_bo_device * , unsigned long , unsigned ) 
ttm_bo_create int ttm_bo_create ( s#ttm_bo_device * , unsigned long , e#ttm_bo_type , s#ttm_placement * , t#uint32_t , t#bool , s#ttm_buffer_object * * ) 
ttm_bo_clean_mm int ttm_bo_clean_mm ( s#ttm_bo_device * , unsigned ) 
ttm_bo_evict_mm int ttm_bo_evict_mm ( s#ttm_bo_device * , unsigned ) 
ttm_bo_init_mm int ttm_bo_init_mm ( s#ttm_bo_device * , unsigned , unsigned long ) 
ttm_bo_global_release void ttm_bo_global_release ( s#drm_global_reference * ) 
ttm_bo_global_init int ttm_bo_global_init ( s#drm_global_reference * ) 
ttm_bo_device_release int ttm_bo_device_release ( s#ttm_bo_device * ) 
ttm_bo_device_init int ttm_bo_device_init ( s#ttm_bo_device * , s#ttm_bo_global * , s#ttm_bo_driver * , s#address_space * , t#uint64_t , t#bool ) 
ttm_bo_unmap_virtual void ttm_bo_unmap_virtual ( s#ttm_buffer_object * ) 
ttm_bo_wait int ttm_bo_wait ( s#ttm_buffer_object * , t#bool , t#bool ) 
ttm_bo_synccpu_write_grab int ttm_bo_synccpu_write_grab ( s#ttm_buffer_object * , t#bool ) 
ttm_bo_synccpu_write_release void ttm_bo_synccpu_write_release ( s#ttm_buffer_object * ) 
ttm_bo_swapout int ttm_bo_swapout ( s#ttm_bo_global * , s#ttm_operation_ctx * ) 
ttm_bo_swapout_all void ttm_bo_swapout_all ( s#ttm_bo_device * ) 

/* drivers/gpu/drm/ttm/ttm_bo_manager.o */
s##sock
s##vfsmount
s##posix_acl
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##fwnode_handle
s##iommu_group
s##iommu_fwspec
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##ttm_mem_zone
s##sg_table
ttm_bo_manager_func extern const s#ttm_mem_type_manager_func ttm_bo_manager_func 

/* drivers/gpu/drm/ttm/ttm_bo_util.o */
s##sock
s##vfsmount
s##posix_acl
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##ttm_mem_zone
s##sg_table
ttm_bo_move_ttm int ttm_bo_move_ttm ( s#ttm_buffer_object * , s#ttm_operation_ctx * , s#ttm_mem_reg * ) 
ttm_mem_io_lock int ttm_mem_io_lock ( s#ttm_mem_type_manager * , t#bool ) 
ttm_mem_io_unlock void ttm_mem_io_unlock ( s#ttm_mem_type_manager * ) 
ttm_mem_io_reserve int ttm_mem_io_reserve ( s#ttm_bo_device * , s#ttm_mem_reg * ) 
ttm_mem_io_free void ttm_mem_io_free ( s#ttm_bo_device * , s#ttm_mem_reg * ) 
ttm_kmap_atomic_prot void * ttm_kmap_atomic_prot ( s#page * , t#pgprot_t ) 
ttm_kunmap_atomic_prot void ttm_kunmap_atomic_prot ( void * , t#pgprot_t ) 
ttm_bo_move_memcpy int ttm_bo_move_memcpy ( s#ttm_buffer_object * , s#ttm_operation_ctx * , s#ttm_mem_reg * ) 
ttm_io_prot t#pgprot_t ttm_io_prot ( t#uint32_t , t#pgprot_t ) 
s#ttm_bo_kmap_obj struct ttm_bo_kmap_obj { void * virtual ; s#page * page ; enum { ttm_bo_map_iomap = 1 | 0x80 , ttm_bo_map_vmap = 2 , ttm_bo_map_kmap = 3 , ttm_bo_map_premapped = 4 | 0x80 , } bo_kmap_type ; s#ttm_buffer_object * bo ; } 
ttm_bo_kmap int ttm_bo_kmap ( s#ttm_buffer_object * , unsigned long , unsigned long , s#ttm_bo_kmap_obj * ) 
ttm_bo_kunmap void ttm_bo_kunmap ( s#ttm_bo_kmap_obj * ) 
ttm_bo_move_accel_cleanup int ttm_bo_move_accel_cleanup ( s#ttm_buffer_object * , s#dma_fence * , t#bool , s#ttm_mem_reg * ) 
ttm_bo_pipeline_move int ttm_bo_pipeline_move ( s#ttm_buffer_object * , s#dma_fence * , t#bool , s#ttm_mem_reg * ) 

/* drivers/gpu/drm/ttm/ttm_bo_vm.o */
s##vfsmount
s##posix_acl
s##sock
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pollfd
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##pipe_inode_info
s##writeback_control
s##bio_vec
s##swap_info_struct
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##fwnode_handle
s##iommu_group
s##iommu_fwspec
s##kmem_cache
s##mem_cgroup
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##ttm_mem_zone
s##sg_table
ttm_bo_mmap int ttm_bo_mmap ( s#file * , s#vm_area_struct * , s#ttm_bo_device * ) 
ttm_fbdev_mmap int ttm_fbdev_mmap ( s#vm_area_struct * , s#ttm_buffer_object * ) 

/* drivers/gpu/drm/ttm/ttm_execbuf_util.o */
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##sock
s##bio_vec
s##pipe_inode_info
s##poll_table_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##mem_cgroup
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##fwnode_handle
s##iommu_group
s##iommu_fwspec
s##kmem_cache
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
ttm_eu_backoff_reservation extern void ttm_eu_backoff_reservation ( s#ww_acquire_ctx * , s#list_head * ) 
ttm_eu_reserve_buffers extern int ttm_eu_reserve_buffers ( s#ww_acquire_ctx * , s#list_head * , t#bool , s#list_head * ) 
ttm_eu_fence_buffer_objects extern void ttm_eu_fence_buffer_objects ( s#ww_acquire_ctx * , s#list_head * , s#dma_fence * ) 

/* drivers/gpu/drm/ttm/ttm_lock.o */
e#ttm_object_type enum ttm_object_type { ttm_fence_type , ttm_buffer_type , ttm_lock_type , ttm_prime_type , ttm_driver_type0 = 256 , ttm_driver_type1 , ttm_driver_type2 , ttm_driver_type3 , ttm_driver_type4 , ttm_driver_type5 } 
s##ttm_object_file
e#ttm_ref_type enum ttm_ref_type { TTM_REF_USAGE , TTM_REF_SYNCCPU_READ , TTM_REF_SYNCCPU_WRITE , TTM_REF_NUM } 
s#ttm_base_object struct ttm_base_object { s#callback_head rhead ; s#drm_hash_item hash ; e#ttm_object_type object_type ; t#bool shareable ; s#ttm_object_file * tfile ; s#kref refcount ; void ( * refcount_release ) ( s#ttm_base_object * * ) ; void ( * ref_obj_release ) ( s#ttm_base_object * , e#ttm_ref_type ) ; } 
s#ttm_lock struct ttm_lock { s#ttm_base_object base ; t#wait_queue_head_t queue ; t#spinlock_t lock ; t#int32_t rw ; t#uint32_t flags ; t#bool kill_takers ; int signal ; s#ttm_object_file * vt_holder ; } 
ttm_lock_init extern void ttm_lock_init ( s#ttm_lock * ) 
ttm_read_unlock extern void ttm_read_unlock ( s#ttm_lock * ) 
ttm_read_lock extern int ttm_read_lock ( s#ttm_lock * , t#bool ) 
ttm_write_unlock extern void ttm_write_unlock ( s#ttm_lock * ) 
ttm_write_lock extern int ttm_write_lock ( s#ttm_lock * , t#bool ) 
ttm_vt_lock extern int ttm_vt_lock ( s#ttm_lock * , t#bool , s#ttm_object_file * ) 
ttm_vt_unlock extern int ttm_vt_unlock ( s#ttm_lock * ) 
ttm_suspend_unlock extern void ttm_suspend_unlock ( s#ttm_lock * ) 
ttm_suspend_lock extern void ttm_suspend_lock ( s#ttm_lock * ) 

/* drivers/gpu/drm/ttm/ttm_memory.o */
s##sock
s##vfsmount
s##posix_acl
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##device_private
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pollfd
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##bpf_prog_array
s##cgroup_taskset
s##pipe_inode_info
s##hd_struct
s##gendisk
s##request_queue
s##kmem_cache
s##eventfd_ctx
s##mempolicy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##workqueue_struct
s##blk_plug
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##fwnode_handle
s##iommu_group
s##iommu_fwspec
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##mtd_info
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##ttm_mem_zone
ttm_mem_global_init extern int ttm_mem_global_init ( s#ttm_mem_global * ) 
ttm_mem_global_release extern void ttm_mem_global_release ( s#ttm_mem_global * ) 
ttm_mem_global_free extern void ttm_mem_global_free ( s#ttm_mem_global * , t#uint64_t ) 
ttm_check_under_lowerlimit extern t#bool ttm_check_under_lowerlimit ( s#ttm_mem_global * , t#uint64_t , s#ttm_operation_ctx * ) 
ttm_mem_global_alloc extern int ttm_mem_global_alloc ( s#ttm_mem_global * , t#uint64_t , s#ttm_operation_ctx * ) 
ttm_round_pot extern t#size_t ttm_round_pot ( t#size_t ) 
ttm_get_kernel_zone_memory_size extern t#uint64_t ttm_get_kernel_zone_memory_size ( s#ttm_mem_global * ) 

/* drivers/gpu/drm/ttm/ttm_object.o */
s##ttm_object_file
ttm_base_object_init extern int ttm_base_object_init ( s#ttm_object_file * , s#ttm_base_object * , t#bool , e#ttm_object_type , void ( * ) ( s#ttm_base_object * * ) , void ( * ) ( s#ttm_base_object * , e#ttm_ref_type ) ) 
ttm_base_object_unref extern void ttm_base_object_unref ( s#ttm_base_object * * ) 
ttm_base_object_lookup extern s#ttm_base_object * ttm_base_object_lookup ( s#ttm_object_file * , t#uint32_t ) 
s##ttm_object_device
ttm_base_object_lookup_for_ref extern s#ttm_base_object * ttm_base_object_lookup_for_ref ( s#ttm_object_device * , t#uint32_t ) 
ttm_ref_object_exists extern t#bool ttm_ref_object_exists ( s#ttm_object_file * , s#ttm_base_object * ) 
ttm_ref_object_add extern int ttm_ref_object_add ( s#ttm_object_file * , s#ttm_base_object * , e#ttm_ref_type , t#bool * , t#bool ) 
ttm_ref_object_base_unref extern int ttm_ref_object_base_unref ( s#ttm_object_file * , unsigned long , e#ttm_ref_type ) 
ttm_object_file_release extern void ttm_object_file_release ( s#ttm_object_file * * ) 
ttm_object_file_init extern s#ttm_object_file * ttm_object_file_init ( s#ttm_object_device * , unsigned int ) 
s##sock
s##vfsmount
s##posix_acl
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##ttm_bo_global
s##ttm_mem_zone
ttm_object_device_init extern s#ttm_object_device * ttm_object_device_init ( s#ttm_mem_global * , unsigned int , const s#dma_buf_ops * ) 
ttm_object_device_release extern void ttm_object_device_release ( s#ttm_object_device * * ) 
ttm_prime_fd_to_handle extern int ttm_prime_fd_to_handle ( s#ttm_object_file * , int , t#u32 * ) 
ttm_prime_handle_to_fd extern int ttm_prime_handle_to_fd ( s#ttm_object_file * , t#uint32_t , t#uint32_t , int * ) 
s#ttm_prime_object struct ttm_prime_object { s#ttm_base_object base ; s#mutex mutex ; t#size_t size ; e#ttm_object_type real_type ; s#dma_buf * dma_buf ; void ( * refcount_release ) ( s#ttm_base_object * * ) ; } 
ttm_prime_object_init extern int ttm_prime_object_init ( s#ttm_object_file * , t#size_t , s#ttm_prime_object * , t#bool , e#ttm_object_type , void ( * ) ( s#ttm_base_object * * ) , void ( * ) ( s#ttm_base_object * , e#ttm_ref_type ) ) 

/* drivers/gpu/drm/ttm/ttm_page_alloc.o */
s##sock
s##vfsmount
s##posix_acl
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##ttm_mem_zone
ttm_pool_populate int ttm_pool_populate ( s#ttm_tt * , s#ttm_operation_ctx * ) 
ttm_pool_unpopulate void ttm_pool_unpopulate ( s#ttm_tt * ) 
s#ttm_dma_tt struct ttm_dma_tt { s#ttm_tt ttm ; t#dma_addr_t * dma_address ; s#list_head pages_list ; } 
ttm_populate_and_map_pages int ttm_populate_and_map_pages ( s#device * , s#ttm_dma_tt * , s#ttm_operation_ctx * ) 
ttm_unmap_and_unpopulate_pages void ttm_unmap_and_unpopulate_pages ( s#device * , s#ttm_dma_tt * ) 
ttm_page_alloc_debugfs int ttm_page_alloc_debugfs ( s#seq_file * , void * ) 

/* drivers/gpu/drm/ttm/ttm_page_alloc_dma.o */
s##sock
s##vfsmount
s##posix_acl
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##bpf_prog_array
s##cgroup_taskset
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##ttm_mem_zone
ttm_dma_populate int ttm_dma_populate ( s#ttm_dma_tt * , s#device * , s#ttm_operation_ctx * ) 
ttm_dma_unpopulate void ttm_dma_unpopulate ( s#ttm_dma_tt * , s#device * ) 
ttm_dma_page_alloc_debugfs int ttm_dma_page_alloc_debugfs ( s#seq_file * , void * ) 

/* drivers/gpu/drm/ttm/ttm_tt.o */
s##sock
s##vfsmount
s##posix_acl
s##module
s##device_private
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##compat_timespec
s##pollfd
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##bpf_prog_array
s##cgroup_taskset
s##iov_iter
s##hd_struct
s##gendisk
s##request_queue
s##kmem_cache
s##eventfd_ctx
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##workqueue_struct
s##blk_plug
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kstatfs
s##export_operations
s##fscrypt_operations
s##mtd_info
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##ttm_mem_zone
ttm_tt_set_placement_caching int ttm_tt_set_placement_caching ( s#ttm_tt * , t#uint32_t ) 
ttm_tt_init int ttm_tt_init ( s#ttm_tt * , s#ttm_buffer_object * , t#uint32_t ) 
ttm_tt_fini void ttm_tt_fini ( s#ttm_tt * ) 
ttm_dma_tt_init int ttm_dma_tt_init ( s#ttm_dma_tt * , s#ttm_buffer_object * , t#uint32_t ) 
ttm_sg_tt_init int ttm_sg_tt_init ( s#ttm_dma_tt * , s#ttm_buffer_object * , t#uint32_t ) 
ttm_dma_tt_fini void ttm_dma_tt_fini ( s#ttm_dma_tt * ) 
ttm_tt_bind int ttm_tt_bind ( s#ttm_tt * , s#ttm_mem_reg * , s#ttm_operation_ctx * ) 

/* drivers/hwtracing/intel_th/core.o */
s##device_private
s##sock
s##vfsmount
s##posix_acl
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##subsys_private
s##iommu_group
s##iommu_fwspec
s##iommu_ops
s##driver_private
s#intel_th_drvdata struct intel_th_drvdata { unsigned int tscu_enable : 1 , host_mode_only : 1 ; } 
s#intel_th_output struct intel_th_output { int port ; unsigned int type ; unsigned int scratchpad ; t#bool multiblock ; t#bool active ; } 
s#intel_th_device struct intel_th_device { s#device dev ; s#intel_th_drvdata * drvdata ; s#resource * resource ; unsigned int num_resources ; unsigned int type ; int id ; t#bool host_mode ; s#intel_th_output output ; char name [ ] ; } 
s#intel_th_driver struct intel_th_driver { s#device_driver driver ; int ( * probe ) ( s#intel_th_device * ) ; void ( * remove ) ( s#intel_th_device * ) ; int ( * assign ) ( s#intel_th_device * , s#intel_th_device * ) ; void ( * unassign ) ( s#intel_th_device * , s#intel_th_device * ) ; void ( * enable ) ( s#intel_th_device * , s#intel_th_output * ) ; void ( * disable ) ( s#intel_th_device * , s#intel_th_output * ) ; void ( * irq ) ( s#intel_th_device * ) ; int ( * activate ) ( s#intel_th_device * ) ; void ( * deactivate ) ( s#intel_th_device * ) ; const s#file_operations * fops ; s#attribute_group * attr_group ; int ( * set_output ) ( s#intel_th_device * , unsigned int ) ; } 
intel_th_driver_register int intel_th_driver_register ( s#intel_th_driver * ) 
intel_th_driver_unregister void intel_th_driver_unregister ( s#intel_th_driver * ) 
s#intel_th struct intel_th { s#device * dev ; s#intel_th_device * thdev [ ( 8 + 2 ) ] ; s#intel_th_device * hub ; s#intel_th_drvdata * drvdata ; s#resource * resource ; int ( * activate ) ( s#intel_th * ) ; void ( * deactivate ) ( s#intel_th * ) ; unsigned int num_thdevs ; unsigned int num_resources ; int irq ; int id ; int major ; s#work_struct request_module_work ; } 
intel_th_output_enable int intel_th_output_enable ( s#intel_th * , unsigned int ) 
intel_th_alloc s#intel_th * intel_th_alloc ( s#device * , s#intel_th_drvdata * , s#resource * , unsigned int , int ) 
intel_th_free void intel_th_free ( s#intel_th * ) 
intel_th_trace_enable int intel_th_trace_enable ( s#intel_th_device * ) 
intel_th_trace_disable int intel_th_trace_disable ( s#intel_th_device * ) 
intel_th_set_output int intel_th_set_output ( s#intel_th_device * , unsigned int ) 

/* drivers/hwtracing/stm/core.o */
s##device_private
s##sock
s##seq_file
s##vfsmount
s##posix_acl
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##fwnode_handle
s##iommu_group
s##iommu_fwspec
s##stp_policy
s#stp_master struct stp_master { unsigned int nr_free ; unsigned long chan_map [ 0 ] ; } 
s#stm_device struct stm_device { s#device dev ; s#module * owner ; s#stp_policy * policy ; s#mutex policy_mutex ; int major ; unsigned int sw_nmasters ; s#stm_data * data ; s#mutex link_mutex ; t#spinlock_t link_lock ; s#list_head link_list ; t#spinlock_t mc_lock ; s#stp_master * masters [ 0 ] ; } 
s#stm_data struct stm_data { const char * name ; s#stm_device * stm ; unsigned int sw_start ; unsigned int sw_end ; unsigned int sw_nchannels ; unsigned int sw_mmiosz ; unsigned int hw_override ; t#ssize_t ( * packet ) ( s#stm_data * , unsigned int , unsigned int , unsigned int , unsigned int , unsigned int , const unsigned char * ) ; t#phys_addr_t ( * mmio_addr ) ( s#stm_data * , unsigned int , unsigned int , unsigned int ) ; int ( * link ) ( s#stm_data * , unsigned int , unsigned int ) ; void ( * unlink ) ( s#stm_data * , unsigned int , unsigned int ) ; long ( * set_options ) ( s#stm_data * , unsigned int , unsigned int , unsigned int , unsigned long ) ; } 
stm_register_device int stm_register_device ( s#device * , s#stm_data * , s#module * ) 
stm_unregister_device void stm_unregister_device ( s#stm_data * ) 
s##stp_policy_node
s#stm_output struct stm_output { t#spinlock_t lock ; unsigned int master ; unsigned int channel ; unsigned int nr_chans ; } 
s#stm_source_device struct stm_source_device { s#device dev ; s#stm_source_data * data ; t#spinlock_t link_lock ; s#stm_device * link ; s#list_head link_entry ; s#stp_policy_node * policy_node ; s#stm_output output ; } 
s#stm_source_data struct stm_source_data { const char * name ; s#stm_source_device * src ; unsigned int percpu ; unsigned int nr_chans ; int ( * link ) ( s#stm_source_data * ) ; void ( * unlink ) ( s#stm_source_data * ) ; } 
stm_source_register_device int stm_source_register_device ( s#device * , s#stm_source_data * ) 
stm_source_unregister_device void stm_source_unregister_device ( s#stm_source_data * ) 
stm_source_write int __attribute__ ( ( hotpatch ( 0 , 0 ) ) ) stm_source_write ( s#stm_source_data * , unsigned int , const char * , t#size_t ) 

/* drivers/i2c/algos/i2c-algo-bit.o */
s##sock
s##seq_file
s##vfsmount
s##posix_acl
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##device_private
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##iommu_group
s##iommu_fwspec
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##gpio_desc
s##irq_domain_chip_generic
i2c_bit_algo extern const s#i2c_algorithm i2c_bit_algo 
i2c_bit_add_bus int i2c_bit_add_bus ( s#i2c_adapter * ) 
i2c_bit_add_numbered_bus int i2c_bit_add_numbered_bus ( s#i2c_adapter * ) 

/* drivers/i2c/i2c-boardinfo.o */
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##mm_struct
s##vm_area_struct
s##compat_timespec
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##pipe_inode_info
s##page
s##task_delay_info
s##ftrace_ret_stack
s##mem_cgroup
s##uprobe_task
s##gs_cb
__i2c_board_lock extern s#rw_semaphore __i2c_board_lock 
__i2c_board_list extern s#list_head __i2c_board_list 
__i2c_first_dynamic_bus_num extern int __i2c_first_dynamic_bus_num 

/* drivers/i2c/i2c-core.o */
s#i2c_device_id struct i2c_device_id { char name [ 20 ] ; t#kernel_ulong_t driver_data ; } 
s##sock
s##vfsmount
s##posix_acl
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##mmu_notifier_mm
s##xol_area
s##kmem_cache
s##fs_pin
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##bpf_prog_array
s##cgroup_taskset
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##robust_list_head
s##futex_pi_state
s##device_private
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##iommu_group
s##iommu_fwspec
s##ring_buffer
s##bpf_prog
s##static_key_mod
s##trace_array
s##tracer
s##trace_buffer
s##ring_buffer_iter
s##event_filter
s##ftrace_hash
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##gpio_desc
e#irq_gc_flags enum irq_gc_flags { IRQ_GC_INIT_MASK_CACHE = 1 << 0 , IRQ_GC_INIT_NESTED_LOCK = 1 << 1 , IRQ_GC_MASK_CACHE_PER_TYPE = 1 << 2 , IRQ_GC_NO_MASK = 1 << 3 , IRQ_GC_BE_IO = 1 << 4 , } 
s##platform_msi_priv_data
s#irq_common_data struct irq_common_data { unsigned int state_use_accessors ; unsigned int node ; void * handler_data ; s#msi_desc * msi_desc ; t#cpumask_var_t affinity ; } 
s#irq_data struct irq_data { t#u32 mask ; unsigned int irq ; unsigned long hwirq ; s#irq_common_data * common ; s#irq_chip * chip ; s#irq_domain * domain ; void * chip_data ; } 
e#irqchip_irq_state enum irqchip_irq_state { IRQCHIP_STATE_PENDING , IRQCHIP_STATE_ACTIVE , IRQCHIP_STATE_MASKED , IRQCHIP_STATE_LINE_LEVEL , } 
s#irq_chip struct irq_chip { s#device * parent_device ; const char * name ; unsigned int ( * irq_startup ) ( s#irq_data * ) ; void ( * irq_shutdown ) ( s#irq_data * ) ; void ( * irq_enable ) ( s#irq_data * ) ; void ( * irq_disable ) ( s#irq_data * ) ; void ( * irq_ack ) ( s#irq_data * ) ; void ( * irq_mask ) ( s#irq_data * ) ; void ( * irq_mask_ack ) ( s#irq_data * ) ; void ( * irq_unmask ) ( s#irq_data * ) ; void ( * irq_eoi ) ( s#irq_data * ) ; int ( * irq_set_affinity ) ( s#irq_data * , const s#cpumask * , t#bool ) ; int ( * irq_retrigger ) ( s#irq_data * ) ; int ( * irq_set_type ) ( s#irq_data * , unsigned int ) ; int ( * irq_set_wake ) ( s#irq_data * , unsigned int ) ; void ( * irq_bus_lock ) ( s#irq_data * ) ; void ( * irq_bus_sync_unlock ) ( s#irq_data * ) ; void ( * irq_cpu_online ) ( s#irq_data * ) ; void ( * irq_cpu_offline ) ( s#irq_data * ) ; void ( * irq_suspend ) ( s#irq_data * ) ; void ( * irq_resume ) ( s#irq_data * ) ; void ( * irq_pm_shutdown ) ( s#irq_data * ) ; void ( * irq_calc_mask ) ( s#irq_data * ) ; void ( * irq_print_chip ) ( s#irq_data * , s#seq_file * ) ; int ( * irq_request_resources ) ( s#irq_data * ) ; void ( * irq_release_resources ) ( s#irq_data * ) ; void ( * irq_compose_msi_msg ) ( s#irq_data * , s#msi_msg * ) ; void ( * irq_write_msi_msg ) ( s#irq_data * , s#msi_msg * ) ; int ( * irq_get_irqchip_state ) ( s#irq_data * , e#irqchip_irq_state , t#bool * ) ; int ( * irq_set_irqchip_state ) ( s#irq_data * , e#irqchip_irq_state , t#bool ) ; int ( * irq_set_vcpu_affinity ) ( s#irq_data * , void * ) ; void ( * ipi_send_single ) ( s#irq_data * , unsigned int ) ; void ( * ipi_send_mask ) ( s#irq_data * , const s#cpumask * ) ; unsigned long flags ; } 
s#irq_chip_regs struct irq_chip_regs { unsigned long enable ; unsigned long disable ; unsigned long mask ; unsigned long ack ; unsigned long eoi ; unsigned long type ; unsigned long polarity ; } 
t#irq_handler_t typedef t#irqreturn_t ( * irq_handler_t ) ( int , void * ) 
s##proc_dir_entry
s#irqaction struct irqaction { t#irq_handler_t handler ; void * dev_id ; void * percpu_dev_id ; s#irqaction * next ; t#irq_handler_t thread_fn ; s#task_struct * thread ; s#irqaction * secondary ; unsigned int irq ; unsigned int flags ; unsigned long thread_flags ; unsigned long thread_mask ; const char * name ; s#proc_dir_entry * dir ; } 
s#irq_affinity_notify struct irq_affinity_notify { unsigned int irq ; s#kref kref ; s#work_struct work ; void ( * notify ) ( s#irq_affinity_notify * , const t#cpumask_t * ) ; void ( * release ) ( s#kref * ) ; } 
s#irq_desc struct irq_desc { s#irq_common_data irq_common_data ; s#irq_data irq_data ; unsigned int * kstat_irqs ; t#irq_flow_handler_t handle_irq ; s#irqaction * action ; unsigned int status_use_accessors ; unsigned int core_internal_state__do_not_mess_with_it ; unsigned int depth ; unsigned int wake_depth ; unsigned int irq_count ; unsigned long last_unhandled ; unsigned int irqs_unhandled ; t#atomic_t threads_handled ; int threads_handled_last ; t#raw_spinlock_t lock ; s#cpumask * percpu_enabled ; const s#cpumask * percpu_affinity ; const s#cpumask * affinity_hint ; s#irq_affinity_notify * affinity_notify ; unsigned long threads_oneshot ; t#atomic_t threads_active ; t#wait_queue_head_t wait_for_threads ; unsigned int nr_actions ; unsigned int no_suspend_depth ; unsigned int cond_suspend_depth ; unsigned int force_resume_depth ; s#proc_dir_entry * dir ; s#callback_head rcu ; s#kobject kobj ; int parent_irq ; s#module * owner ; const char * name ; } 
t#irq_flow_handler_t typedef void ( * irq_flow_handler_t ) ( s#irq_desc * ) 
s#irq_chip_type struct irq_chip_type { s#irq_chip chip ; s#irq_chip_regs regs ; t#irq_flow_handler_t handler ; t#u32 type ; t#u32 mask_cache_priv ; t#u32 * mask_cache ; } 
s#irq_chip_generic struct irq_chip_generic { t#raw_spinlock_t lock ; void * reg_base ; t#u32 ( * reg_readl ) ( void * ) ; void ( * reg_writel ) ( t#u32 , void * ) ; void ( * suspend ) ( s#irq_chip_generic * ) ; void ( * resume ) ( s#irq_chip_generic * ) ; unsigned int irq_base ; unsigned int irq_cnt ; t#u32 mask_cache ; t#u32 type_cache ; t#u32 polarity_cache ; t#u32 wake_enabled ; t#u32 wake_active ; unsigned int num_ct ; void * private ; unsigned long installed ; unsigned long unused ; s#irq_domain * domain ; s#list_head list ; s#irq_chip_type chip_types [ 0 ] ; } 
s#irq_domain_chip_generic struct irq_domain_chip_generic { unsigned int irqs_per_chip ; unsigned int num_chips ; unsigned int irq_flags_to_clear ; unsigned int irq_flags_to_set ; e#irq_gc_flags gc_flags ; s#irq_chip_generic * gc [ 0 ] ; } 
s#i2c_client struct i2c_client { unsigned short flags ; unsigned short addr ; char name [ 20 ] ; s#i2c_adapter * adapter ; s#device dev ; int irq ; s#list_head detected ; } 
i2c_match_id extern const s#i2c_device_id * i2c_match_id ( const s#i2c_device_id * , const s#i2c_client * ) 
i2c_generic_scl_recovery int i2c_generic_scl_recovery ( s#i2c_adapter * ) 
i2c_recover_bus int i2c_recover_bus ( s#i2c_adapter * ) 
i2c_bus_type extern s#bus_type i2c_bus_type 
i2c_client_type extern s#device_type i2c_client_type 
i2c_verify_client extern s#i2c_client * i2c_verify_client ( s#device * ) 
i2c_new_device extern s#i2c_client * i2c_new_device ( s#i2c_adapter * , s#i2c_board_info const * ) 
i2c_unregister_device extern void i2c_unregister_device ( s#i2c_client * ) 
i2c_new_dummy extern s#i2c_client * i2c_new_dummy ( s#i2c_adapter * , t#u16 ) 
i2c_new_secondary_device extern s#i2c_client * i2c_new_secondary_device ( s#i2c_client * , const char * , t#u16 ) 
i2c_adapter_depth extern unsigned int i2c_adapter_depth ( s#i2c_adapter * ) 
i2c_adapter_type extern s#device_type i2c_adapter_type 
i2c_verify_adapter extern s#i2c_adapter * i2c_verify_adapter ( s#device * ) 
i2c_handle_smbus_host_notify int i2c_handle_smbus_host_notify ( s#i2c_adapter * , unsigned short ) 
i2c_add_adapter extern int i2c_add_adapter ( s#i2c_adapter * ) 
i2c_add_numbered_adapter extern int i2c_add_numbered_adapter ( s#i2c_adapter * ) 
i2c_del_adapter extern void i2c_del_adapter ( s#i2c_adapter * ) 
s#i2c_timings struct i2c_timings { t#u32 bus_freq_hz ; t#u32 scl_rise_ns ; t#u32 scl_fall_ns ; t#u32 scl_int_delay_ns ; t#u32 sda_fall_ns ; } 
i2c_parse_fw_timings void i2c_parse_fw_timings ( s#device * , s#i2c_timings * , t#bool ) 
i2c_for_each_dev int i2c_for_each_dev ( void * , int ( * ) ( s#device * , void * ) ) 
e#i2c_alert_protocol enum i2c_alert_protocol { I2C_PROTOCOL_SMBUS_ALERT , I2C_PROTOCOL_SMBUS_HOST_NOTIFY , } 
s#i2c_driver struct i2c_driver { unsigned int class ; int ( * attach_adapter ) ( s#i2c_adapter * ) __attribute__ ( ( deprecated ) ) ; int ( * probe ) ( s#i2c_client * , const s#i2c_device_id * ) ; int ( * remove ) ( s#i2c_client * ) ; int ( * probe_new ) ( s#i2c_client * ) ; void ( * shutdown ) ( s#i2c_client * ) ; void ( * alert ) ( s#i2c_client * , e#i2c_alert_protocol , unsigned int ) ; int ( * command ) ( s#i2c_client * , unsigned int , void * ) ; s#device_driver driver ; const s#i2c_device_id * id_table ; int ( * detect ) ( s#i2c_client * , s#i2c_board_info * ) ; const unsigned short * address_list ; s#list_head clients ; t#bool disable_i2c_core_irq_mapping ; } 
i2c_register_driver extern int i2c_register_driver ( s#module * , s#i2c_driver * ) 
i2c_del_driver extern void i2c_del_driver ( s#i2c_driver * ) 
i2c_use_client extern s#i2c_client * i2c_use_client ( s#i2c_client * ) 
i2c_release_client extern void i2c_release_client ( s#i2c_client * ) 
i2c_clients_command extern void i2c_clients_command ( s#i2c_adapter * , unsigned int , void * ) 
__i2c_transfer extern int __i2c_transfer ( s#i2c_adapter * , s#i2c_msg * , int ) 
i2c_transfer extern int i2c_transfer ( s#i2c_adapter * , s#i2c_msg * , int ) 
i2c_master_send extern int i2c_master_send ( const s#i2c_client * , const char * , int ) 
i2c_master_recv extern int i2c_master_recv ( const s#i2c_client * , char * , int ) 
s#i2c_device_identity struct i2c_device_identity { t#u16 manufacturer_id ; t#u16 part_id ; t#u8 die_revision ; } 
i2c_get_device_id int i2c_get_device_id ( const s#i2c_client * , s#i2c_device_identity * ) 
i2c_probe_func_quick_read extern int i2c_probe_func_quick_read ( s#i2c_adapter * , unsigned short ) 
i2c_new_probed_device extern s#i2c_client * i2c_new_probed_device ( s#i2c_adapter * , s#i2c_board_info * , unsigned short const * , int ( * ) ( s#i2c_adapter * , unsigned short ) ) 
i2c_get_adapter extern s#i2c_adapter * i2c_get_adapter ( int ) 
i2c_put_adapter extern void i2c_put_adapter ( s#i2c_adapter * ) 
i2c_smbus_read_byte extern t#s32 i2c_smbus_read_byte ( const s#i2c_client * ) 
i2c_smbus_write_byte extern t#s32 i2c_smbus_write_byte ( const s#i2c_client * , t#u8 ) 
i2c_smbus_read_byte_data extern t#s32 i2c_smbus_read_byte_data ( const s#i2c_client * , t#u8 ) 
i2c_smbus_write_byte_data extern t#s32 i2c_smbus_write_byte_data ( const s#i2c_client * , t#u8 , t#u8 ) 
i2c_smbus_read_word_data extern t#s32 i2c_smbus_read_word_data ( const s#i2c_client * , t#u8 ) 
i2c_smbus_write_word_data extern t#s32 i2c_smbus_write_word_data ( const s#i2c_client * , t#u8 , t#u16 ) 
i2c_smbus_read_block_data extern t#s32 i2c_smbus_read_block_data ( const s#i2c_client * , t#u8 , t#u8 * ) 
i2c_smbus_write_block_data extern t#s32 i2c_smbus_write_block_data ( const s#i2c_client * , t#u8 , t#u8 , const t#u8 * ) 
i2c_smbus_read_i2c_block_data extern t#s32 i2c_smbus_read_i2c_block_data ( const s#i2c_client * , t#u8 , t#u8 , t#u8 * ) 
i2c_smbus_write_i2c_block_data extern t#s32 i2c_smbus_write_i2c_block_data ( const s#i2c_client * , t#u8 , t#u8 , const t#u8 * ) 
i2c_smbus_xfer extern t#s32 i2c_smbus_xfer ( s#i2c_adapter * , t#u16 , unsigned short , char , t#u8 , int , u#i2c_smbus_data * ) 
i2c_smbus_read_i2c_block_data_or_emulated extern t#s32 i2c_smbus_read_i2c_block_data_or_emulated ( const s#i2c_client * , t#u8 , t#u8 , t#u8 * ) 

/* drivers/infiniband/core/addr.o */
rdma_addr_size int rdma_addr_size ( const s#sockaddr * ) 
s#sockaddr_in6 struct sockaddr_in6 { unsigned short int sin6_family ; t#__be16 sin6_port ; t#__be32 sin6_flowinfo ; s#in6_addr sin6_addr ; t#__u32 sin6_scope_id ; } 
rdma_addr_size_in6 int rdma_addr_size_in6 ( s#sockaddr_in6 * ) 
rdma_addr_size_kss int rdma_addr_size_kss ( s#__kernel_sockaddr_storage * ) 
e#rdma_transport_type enum rdma_transport_type { RDMA_TRANSPORT_IB , RDMA_TRANSPORT_IWARP , RDMA_TRANSPORT_USNIC , RDMA_TRANSPORT_USNIC_UDP } 
s##proc_ns_operations
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##workqueue_struct
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##kmem_cache
s##xfrm_state
s#lwtunnel_state struct lwtunnel_state { t#__u16 type ; t#__u16 flags ; t#__u16 headroom ; t#atomic_t refcnt ; int ( * orig_output ) ( s#net * , s#sock * , s#sk_buff * ) ; int ( * orig_input ) ( s#sk_buff * ) ; s#callback_head rcu ; t#__u8 data [ 0 ] ; } 
s##uncached_list
s#fib6_node struct fib6_node { s#fib6_node * parent ; s#fib6_node * left ; s#fib6_node * right ; s#fib6_node * subtree ; s#rt6_info * leaf ; t#__u16 fn_bit ; t#__u16 fn_flags ; int fn_sernum ; s#rt6_info * rr_ptr ; s#callback_head rcu ; } 
s#fib6_table struct fib6_table { s#hlist_node tb6_hlist ; t#u32 tb6_id ; t#rwlock_t tb6_lock ; s#fib6_node tb6_root ; s#inet_peer_base tb6_peers ; unsigned int flags ; } 
s#rt6key struct rt6key { s#in6_addr addr ; int plen ; } 
s##proc_dir_entry
s#rt6_info struct rt6_info { s#dst_entry dst ; s#fib6_table * rt6i_table ; s#fib6_node * rt6i_node ; s#in6_addr rt6i_gateway ; s#list_head rt6i_siblings ; unsigned int rt6i_nsiblings ; t#atomic_t rt6i_ref ; unsigned int rt6i_nh_flags ; s#rt6key rt6i_dst __attribute__ ( ( __aligned__ ( 256 ) ) ) ; t#u32 rt6i_flags ; s#rt6key rt6i_src ; s#rt6key rt6i_prefsrc ; s#list_head rt6i_uncached ; s#uncached_list * rt6i_uncached_list ; s#inet6_dev * rt6i_idev ; s#rt6_info * * rt6i_pcpu ; t#u32 rt6i_metric ; t#u32 rt6i_pmtu ; unsigned short rt6i_nfheader_len ; t#u8 rt6i_protocol ; } 
s##dn_route
s#prefix_info struct prefix_info { t#__u8 type ; t#__u8 length ; t#__u8 prefix_len ; t#__u8 onlink : 1 , autoconf : 1 , reserved : 6 ; t#__be32 valid ; t#__be32 prefered ; t#__be32 reserved2 ; s#in6_addr prefix ; } 
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s#in_ifaddr struct in_ifaddr { s#hlist_node hash ; s#in_ifaddr * ifa_next ; s#in_device * ifa_dev ; s#callback_head callback_head ; t#__be32 ifa_local ; t#__be32 ifa_address ; t#__be32 ifa_mask ; t#__be32 ifa_broadcast ; unsigned char ifa_scope ; unsigned char ifa_prefixlen ; t#__u32 ifa_flags ; char ifa_label [ 16 ] ; t#__u32 ifa_valid_lft ; t#__u32 ifa_preferred_lft ; unsigned long ifa_cstamp ; unsigned long ifa_tstamp ; } 
s##ip_mc_list
E#__IPV4_DEVCONF_MAX ( 1 ) + 31 
s#ipv4_devconf struct ipv4_devconf { void * sysctl ; int data [ ( E#__IPV4_DEVCONF_MAX - 1 ) ] ; unsigned long state [ ( ( ( ( E#__IPV4_DEVCONF_MAX - 1 ) ) + ( 8 * sizeof ( long ) ) - 1 ) / ( 8 * sizeof ( long ) ) ) ] ; } 
s#in_device struct in_device { s#net_device * dev ; t#atomic_t refcnt ; int dead ; s#in_ifaddr * ifa_list ; s#ip_mc_list * mc_list ; s#ip_mc_list * * mc_hash ; int mc_count ; t#spinlock_t mc_tomb_lock ; s#ip_mc_list * mc_tomb ; unsigned long mr_v1_seen ; unsigned long mr_v2_seen ; unsigned long mr_maxdelay ; unsigned char mr_qrv ; unsigned char mr_gq_running ; unsigned char mr_ifc_count ; s#timer_list mr_gq_timer ; s#timer_list mr_ifc_timer ; s#neigh_parms * arp_parms ; s#ipv4_devconf cnf ; s#callback_head callback_head ; } 
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##phy_device
s##sfp_bus
s##sec_path
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##xol_area
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##key_user
s##key_type
s##assoc_array_ptr
s##uevent_sock
s##prot_inuse
s##xt_table
s#rt6_statistics struct rt6_statistics { t#__u32 fib_nodes ; t#__u32 fib_route_nodes ; t#__u32 fib_rt_alloc ; t#__u32 fib_rt_entries ; t#__u32 fib_rt_cache ; t#__u32 fib_discarded_routes ; } 
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##ib_uverbs_file
s##ib_umem_odp
s##uverbs_api_object
s##ib_pkey_cache
s##ib_gid_table
s##iw_cm_verbs
s#ib_mad_hdr struct ib_mad_hdr { t#u8 base_version ; t#u8 mgmt_class ; t#u8 class_version ; t#u8 method ; t#__be16 status ; t#__be16 class_specific ; t#__be64 tid ; t#__be16 attr_id ; t#__be16 resv ; t#__be32 attr_mod ; } 
s##uverbs_attr_bundle
s##uverbs_object_tree_def
E#RDMA_NETWORK_IB 0 
e#rdma_network_type enum rdma_network_type { RDMA_NETWORK_IB , RDMA_NETWORK_ROCE_V1 = E#RDMA_NETWORK_IB , RDMA_NETWORK_IPV4 , RDMA_NETWORK_IPV6 } 
s#rdma_dev_addr struct rdma_dev_addr { unsigned char src_dev_addr [ 32 ] ; unsigned char dst_dev_addr [ 32 ] ; unsigned char broadcast [ 32 ] ; unsigned short dev_type ; int bound_dev_if ; e#rdma_transport_type transport ; s#net * net ; const s#ib_gid_attr * sgid_attr ; e#rdma_network_type network ; int hoplimit ; } 
rdma_copy_src_l2_addr void rdma_copy_src_l2_addr ( s#rdma_dev_addr * , const s#net_device * ) 
rdma_translate_ip int rdma_translate_ip ( const s#sockaddr * , s#rdma_dev_addr * ) 
rdma_resolve_ip int rdma_resolve_ip ( s#sockaddr * , const s#sockaddr * , s#rdma_dev_addr * , unsigned long , void ( * ) ( int , s#sockaddr * , s#rdma_dev_addr * , void * ) , t#bool , void * ) 
rdma_addr_cancel void rdma_addr_cancel ( s#rdma_dev_addr * ) 

/* drivers/infiniband/core/cache.o */
zgid extern u#ib_gid zgid 
ib_cache_gid_type_str const char * ib_cache_gid_type_str ( e#ib_gid_type ) 
rdma_is_zero_gid t#bool rdma_is_zero_gid ( const u#ib_gid * ) 
ib_cache_gid_parse_type_str int ib_cache_gid_parse_type_str ( const char * ) 
s##posix_acl
s##vfsmount
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##prot_inuse
s##ipv4_devconf
s##kmem_cache
s##xt_table
s##inet_hashinfo
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##lwtunnel_state
s##uncached_list
s##dn_route
s##workqueue_struct
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##nf_hook_entry
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##mempolicy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##blk_plug
s##reclaim_state
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##udp_table
s##raw_hashinfo
s##bpf_prog_aux
s##xfrm_policy
s##sock_reuseport
s##sec_path
s##udp_tunnel_info
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
s##ib_uverbs_file
s##ib_umem_odp
s##uverbs_api_object
s##ib_pkey_cache
s##ib_gid_table
s##iw_cm_verbs
s##uverbs_attr_bundle
s##uverbs_object_tree_def
rdma_find_gid_by_port const s#ib_gid_attr * rdma_find_gid_by_port ( s#ib_device * , const u#ib_gid * , e#ib_gid_type , t#u8 , s#net_device * ) 
rdma_query_gid int rdma_query_gid ( s#ib_device * , t#u8 , int , u#ib_gid * ) 
rdma_find_gid const s#ib_gid_attr * rdma_find_gid ( s#ib_device * , const u#ib_gid * , e#ib_gid_type , s#net_device * ) 
ib_get_cached_pkey int ib_get_cached_pkey ( s#ib_device * , t#u8 , int , t#u16 * ) 
ib_get_cached_subnet_prefix int ib_get_cached_subnet_prefix ( s#ib_device * , t#u8 , t#u64 * ) 
ib_find_cached_pkey int ib_find_cached_pkey ( s#ib_device * , t#u8 , t#u16 , t#u16 * ) 
ib_find_exact_cached_pkey int ib_find_exact_cached_pkey ( s#ib_device * , t#u8 , t#u16 , t#u16 * ) 
ib_get_cached_lmc int ib_get_cached_lmc ( s#ib_device * , t#u8 , t#u8 * ) 
ib_get_cached_port_state int ib_get_cached_port_state ( s#ib_device * , t#u8 , e#ib_port_state * ) 
rdma_get_gid_attr const s#ib_gid_attr * rdma_get_gid_attr ( s#ib_device * , t#u8 , int ) 
rdma_put_gid_attr void rdma_put_gid_attr ( const s#ib_gid_attr * ) 
rdma_hold_gid_attr void rdma_hold_gid_attr ( const s#ib_gid_attr * ) 

/* drivers/infiniband/core/cgroup.o */
s##vfsmount
s##posix_acl
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##eventfd_ctx
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##xol_area
s##pid_namespace
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##sec_path
s##workqueue_struct
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##kmem_cache
s##xfrm_state
s##lwtunnel_state
s##uncached_list
s##rt6_info
s##dn_route
s##prefix_info
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##phy_device
s##sfp_bus
s##prot_inuse
s##ipv4_devconf
s##xt_table
s##inet_hashinfo
s##rt6_statistics
s##fib6_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##swap_info_struct
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##mtd_info
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##ib_uverbs_file
s##ib_umem_odp
s##uverbs_api_object
s##ib_pkey_cache
s##ib_gid_table
s##iw_cm_verbs
s##uverbs_attr_bundle
s##uverbs_object_tree_def
e#rdmacg_resource_type enum rdmacg_resource_type { RDMACG_RESOURCE_HCA_HANDLE , RDMACG_RESOURCE_HCA_OBJECT , RDMACG_RESOURCE_MAX , } 
ib_rdmacg_try_charge int ib_rdmacg_try_charge ( s#ib_rdmacg_object * , s#ib_device * , e#rdmacg_resource_type ) 
ib_rdmacg_uncharge void ib_rdmacg_uncharge ( s#ib_rdmacg_object * , s#ib_device * , e#rdmacg_resource_type ) 

/* drivers/infiniband/core/cm.o */
ibcm_reject_msg const char * __attribute__ ( ( __const__ ) ) ibcm_reject_msg ( int ) 
e#ib_cm_event_type enum ib_cm_event_type { IB_CM_REQ_ERROR , IB_CM_REQ_RECEIVED , IB_CM_REP_ERROR , IB_CM_REP_RECEIVED , IB_CM_RTU_RECEIVED , IB_CM_USER_ESTABLISHED , IB_CM_DREQ_ERROR , IB_CM_DREQ_RECEIVED , IB_CM_DREP_RECEIVED , IB_CM_TIMEWAIT_EXIT , IB_CM_MRA_RECEIVED , IB_CM_REJ_RECEIVED , IB_CM_LAP_ERROR , IB_CM_LAP_RECEIVED , IB_CM_APR_RECEIVED , IB_CM_SIDR_REQ_ERROR , IB_CM_SIDR_REQ_RECEIVED , IB_CM_SIDR_REP_RECEIVED } 
s#sa_path_rec_ib struct sa_path_rec_ib { t#__be16 dlid ; t#__be16 slid ; t#u8 raw_traffic ; } 
s#sa_path_rec_roce struct sa_path_rec_roce { t#bool route_resolved ; t#u8 dmac [ 6 ] ; } 
s#sa_path_rec_opa struct sa_path_rec_opa { t#__be32 dlid ; t#__be32 slid ; t#u8 raw_traffic ; t#u8 l2_8B ; t#u8 l2_10B ; t#u8 l2_9B ; t#u8 l2_16B ; t#u8 qos_type ; t#u8 qos_priority ; } 
e#sa_path_rec_type enum sa_path_rec_type { SA_PATH_REC_TYPE_IB , SA_PATH_REC_TYPE_ROCE_V1 , SA_PATH_REC_TYPE_ROCE_V2 , SA_PATH_REC_TYPE_OPA } 
s#sa_path_rec struct sa_path_rec { u#ib_gid dgid ; u#ib_gid sgid ; t#__be64 service_id ; t#__be32 flow_label ; t#u8 hop_limit ; t#u8 traffic_class ; t#u8 reversible ; t#u8 numb_path ; t#__be16 pkey ; t#__be16 qos_class ; t#u8 sl ; t#u8 mtu_selector ; t#u8 mtu ; t#u8 rate_selector ; t#u8 rate ; t#u8 packet_life_time_selector ; t#u8 packet_life_time ; t#u8 preference ; union { s#sa_path_rec_ib ib ; s#sa_path_rec_roce roce ; s#sa_path_rec_opa opa ; } ; e#sa_path_rec_type rec_type ; } 
s##posix_acl
s##vfsmount
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##prot_inuse
s##kmem_cache
s##xt_table
s##inet_hashinfo
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##lwtunnel_state
s##uncached_list
s##dn_route
s##workqueue_struct
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##nf_hook_entry
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##mempolicy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##blk_plug
s##reclaim_state
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##udp_table
s##raw_hashinfo
s##bpf_prog_aux
s##xfrm_policy
s##sock_reuseport
s##sec_path
s##udp_tunnel_info
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##prefix_info
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##ip_mc_list
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
s##ib_uverbs_file
s##ib_umem_odp
s##uverbs_api_object
s##ib_pkey_cache
s##ib_gid_table
s##iw_cm_verbs
s##uverbs_attr_bundle
s##uverbs_object_tree_def
s#ib_cm_req_event_param struct ib_cm_req_event_param { s#ib_cm_id * listen_id ; t#u16 bth_pkey ; t#u8 port ; s#sa_path_rec * primary_path ; s#sa_path_rec * alternate_path ; const s#ib_gid_attr * ppath_sgid_attr ; t#__be64 remote_ca_guid ; t#u32 remote_qkey ; t#u32 remote_qpn ; e#ib_qp_type qp_type ; t#u32 starting_psn ; t#u8 responder_resources ; t#u8 initiator_depth ; unsigned int local_cm_response_timeout : 5 ; unsigned int flow_control : 1 ; unsigned int remote_cm_response_timeout : 5 ; unsigned int retry_count : 3 ; unsigned int rnr_retry_count : 3 ; unsigned int srq : 1 ; } 
s#ib_cm_rep_event_param struct ib_cm_rep_event_param { t#__be64 remote_ca_guid ; t#u32 remote_qkey ; t#u32 remote_qpn ; t#u32 starting_psn ; t#u8 responder_resources ; t#u8 initiator_depth ; unsigned int target_ack_delay : 5 ; unsigned int failover_accepted : 2 ; unsigned int flow_control : 1 ; unsigned int rnr_retry_count : 3 ; unsigned int srq : 1 ; } 
e#ib_cm_rej_reason enum ib_cm_rej_reason { IB_CM_REJ_NO_QP = 1 , IB_CM_REJ_NO_EEC = 2 , IB_CM_REJ_NO_RESOURCES = 3 , IB_CM_REJ_TIMEOUT = 4 , IB_CM_REJ_UNSUPPORTED = 5 , IB_CM_REJ_INVALID_COMM_ID = 6 , IB_CM_REJ_INVALID_COMM_INSTANCE = 7 , IB_CM_REJ_INVALID_SERVICE_ID = 8 , IB_CM_REJ_INVALID_TRANSPORT_TYPE = 9 , IB_CM_REJ_STALE_CONN = 10 , IB_CM_REJ_RDC_NOT_EXIST = 11 , IB_CM_REJ_INVALID_GID = 12 , IB_CM_REJ_INVALID_LID = 13 , IB_CM_REJ_INVALID_SL = 14 , IB_CM_REJ_INVALID_TRAFFIC_CLASS = 15 , IB_CM_REJ_INVALID_HOP_LIMIT = 16 , IB_CM_REJ_INVALID_PACKET_RATE = 17 , IB_CM_REJ_INVALID_ALT_GID = 18 , IB_CM_REJ_INVALID_ALT_LID = 19 , IB_CM_REJ_INVALID_ALT_SL = 20 , IB_CM_REJ_INVALID_ALT_TRAFFIC_CLASS = 21 , IB_CM_REJ_INVALID_ALT_HOP_LIMIT = 22 , IB_CM_REJ_INVALID_ALT_PACKET_RATE = 23 , IB_CM_REJ_PORT_CM_REDIRECT = 24 , IB_CM_REJ_PORT_REDIRECT = 25 , IB_CM_REJ_INVALID_MTU = 26 , IB_CM_REJ_INSUFFICIENT_RESP_RESOURCES = 27 , IB_CM_REJ_CONSUMER_DEFINED = 28 , IB_CM_REJ_INVALID_RNR_RETRY = 29 , IB_CM_REJ_DUPLICATE_LOCAL_COMM_ID = 30 , IB_CM_REJ_INVALID_CLASS_VERSION = 31 , IB_CM_REJ_INVALID_FLOW_LABEL = 32 , IB_CM_REJ_INVALID_ALT_FLOW_LABEL = 33 } 
s#ib_cm_rej_event_param struct ib_cm_rej_event_param { e#ib_cm_rej_reason reason ; void * ari ; t#u8 ari_length ; } 
s#ib_cm_mra_event_param struct ib_cm_mra_event_param { t#u8 service_timeout ; } 
s#ib_cm_lap_event_param struct ib_cm_lap_event_param { s#sa_path_rec * alternate_path ; } 
e#ib_cm_apr_status enum ib_cm_apr_status { IB_CM_APR_SUCCESS , IB_CM_APR_INVALID_COMM_ID , IB_CM_APR_UNSUPPORTED , IB_CM_APR_REJECT , IB_CM_APR_REDIRECT , IB_CM_APR_IS_CURRENT , IB_CM_APR_INVALID_QPN_EECN , IB_CM_APR_INVALID_LID , IB_CM_APR_INVALID_GID , IB_CM_APR_INVALID_FLOW_LABEL , IB_CM_APR_INVALID_TCLASS , IB_CM_APR_INVALID_HOP_LIMIT , IB_CM_APR_INVALID_PACKET_RATE , IB_CM_APR_INVALID_SL } 
s#ib_cm_apr_event_param struct ib_cm_apr_event_param { e#ib_cm_apr_status ap_status ; void * apr_info ; t#u8 info_len ; } 
s#ib_cm_sidr_req_event_param struct ib_cm_sidr_req_event_param { s#ib_cm_id * listen_id ; t#__be64 service_id ; const s#ib_gid_attr * sgid_attr ; t#u16 bth_pkey ; t#u8 port ; t#u16 pkey ; } 
e#ib_cm_sidr_status enum ib_cm_sidr_status { IB_SIDR_SUCCESS , IB_SIDR_UNSUPPORTED , IB_SIDR_REJECT , IB_SIDR_NO_QP , IB_SIDR_REDIRECT , IB_SIDR_UNSUPPORTED_VERSION } 
s#ib_cm_sidr_rep_event_param struct ib_cm_sidr_rep_event_param { e#ib_cm_sidr_status status ; t#u32 qkey ; t#u32 qpn ; void * info ; const s#ib_gid_attr * sgid_attr ; t#u8 info_len ; } 
s#ib_cm_event struct ib_cm_event { e#ib_cm_event_type event ; union { s#ib_cm_req_event_param req_rcvd ; s#ib_cm_rep_event_param rep_rcvd ; s#ib_cm_rej_event_param rej_rcvd ; s#ib_cm_mra_event_param mra_rcvd ; s#ib_cm_lap_event_param lap_rcvd ; s#ib_cm_apr_event_param apr_rcvd ; s#ib_cm_sidr_req_event_param sidr_req_rcvd ; s#ib_cm_sidr_rep_event_param sidr_rep_rcvd ; e#ib_wc_status send_status ; } param ; void * private_data ; } 
t#ib_cm_handler typedef int ( * ib_cm_handler ) ( s#ib_cm_id * , const s#ib_cm_event * ) 
e#ib_cm_state enum ib_cm_state { IB_CM_IDLE , IB_CM_LISTEN , IB_CM_REQ_SENT , IB_CM_REQ_RCVD , IB_CM_MRA_REQ_SENT , IB_CM_MRA_REQ_RCVD , IB_CM_REP_SENT , IB_CM_REP_RCVD , IB_CM_MRA_REP_SENT , IB_CM_MRA_REP_RCVD , IB_CM_ESTABLISHED , IB_CM_DREQ_SENT , IB_CM_DREQ_RCVD , IB_CM_TIMEWAIT , IB_CM_SIDR_REQ_SENT , IB_CM_SIDR_REQ_RCVD } 
e#ib_cm_lap_state enum ib_cm_lap_state { IB_CM_LAP_UNINIT , IB_CM_LAP_IDLE , IB_CM_LAP_SENT , IB_CM_LAP_RCVD , IB_CM_MRA_LAP_SENT , IB_CM_MRA_LAP_RCVD , } 
s#ib_cm_id struct ib_cm_id { t#ib_cm_handler cm_handler ; void * context ; s#ib_device * device ; t#__be64 service_id ; t#__be64 service_mask ; e#ib_cm_state state ; e#ib_cm_lap_state lap_state ; t#__be32 local_id ; t#__be32 remote_id ; t#u32 remote_cm_qpn ; } 
ib_create_cm_id s#ib_cm_id * ib_create_cm_id ( s#ib_device * , t#ib_cm_handler , void * ) 
ib_destroy_cm_id void ib_destroy_cm_id ( s#ib_cm_id * ) 
ib_cm_listen int ib_cm_listen ( s#ib_cm_id * , t#__be64 , t#__be64 ) 
ib_cm_insert_listen s#ib_cm_id * ib_cm_insert_listen ( s#ib_device * , t#ib_cm_handler , t#__be64 ) 
s#ib_cm_req_param struct ib_cm_req_param { s#sa_path_rec * primary_path ; s#sa_path_rec * alternate_path ; const s#ib_gid_attr * ppath_sgid_attr ; t#__be64 service_id ; t#u32 qp_num ; e#ib_qp_type qp_type ; t#u32 starting_psn ; const void * private_data ; t#u8 private_data_len ; t#u8 peer_to_peer ; t#u8 responder_resources ; t#u8 initiator_depth ; t#u8 remote_cm_response_timeout ; t#u8 flow_control ; t#u8 local_cm_response_timeout ; t#u8 retry_count ; t#u8 rnr_retry_count ; t#u8 max_cm_retries ; t#u8 srq ; } 
ib_send_cm_req int ib_send_cm_req ( s#ib_cm_id * , s#ib_cm_req_param * ) 
s#ib_cm_rep_param struct ib_cm_rep_param { t#u32 qp_num ; t#u32 starting_psn ; const void * private_data ; t#u8 private_data_len ; t#u8 responder_resources ; t#u8 initiator_depth ; t#u8 failover_accepted ; t#u8 flow_control ; t#u8 rnr_retry_count ; t#u8 srq ; } 
ib_send_cm_rep int ib_send_cm_rep ( s#ib_cm_id * , s#ib_cm_rep_param * ) 
ib_send_cm_rtu int ib_send_cm_rtu ( s#ib_cm_id * , const void * , t#u8 ) 
ib_send_cm_dreq int ib_send_cm_dreq ( s#ib_cm_id * , const void * , t#u8 ) 
ib_send_cm_drep int ib_send_cm_drep ( s#ib_cm_id * , const void * , t#u8 ) 
ib_send_cm_rej int ib_send_cm_rej ( s#ib_cm_id * , e#ib_cm_rej_reason , void * , t#u8 , const void * , t#u8 ) 
ib_send_cm_mra int ib_send_cm_mra ( s#ib_cm_id * , t#u8 , const void * , t#u8 ) 
ib_send_cm_lap int ib_send_cm_lap ( s#ib_cm_id * , s#sa_path_rec * , const void * , t#u8 ) 
ib_send_cm_apr int ib_send_cm_apr ( s#ib_cm_id * , e#ib_cm_apr_status , void * , t#u8 , const void * , t#u8 ) 
s#ib_cm_sidr_req_param struct ib_cm_sidr_req_param { s#sa_path_rec * path ; const s#ib_gid_attr * sgid_attr ; t#__be64 service_id ; unsigned long timeout_ms ; const void * private_data ; t#u8 private_data_len ; t#u8 max_cm_retries ; } 
ib_send_cm_sidr_req int ib_send_cm_sidr_req ( s#ib_cm_id * , s#ib_cm_sidr_req_param * ) 
s#ib_cm_sidr_rep_param struct ib_cm_sidr_rep_param { t#u32 qp_num ; t#u32 qkey ; e#ib_cm_sidr_status status ; const void * info ; t#u8 info_length ; const void * private_data ; t#u8 private_data_len ; } 
ib_send_cm_sidr_rep int ib_send_cm_sidr_rep ( s#ib_cm_id * , s#ib_cm_sidr_rep_param * ) 
ib_cm_notify int ib_cm_notify ( s#ib_cm_id * , e#ib_event_type ) 
ib_cm_init_qp_attr int ib_cm_init_qp_attr ( s#ib_cm_id * , s#ib_qp_attr * , int * ) 
cm_class extern s#class cm_class 

/* drivers/infiniband/core/cma.o */
e#rdma_cm_event_type enum rdma_cm_event_type { RDMA_CM_EVENT_ADDR_RESOLVED , RDMA_CM_EVENT_ADDR_ERROR , RDMA_CM_EVENT_ROUTE_RESOLVED , RDMA_CM_EVENT_ROUTE_ERROR , RDMA_CM_EVENT_CONNECT_REQUEST , RDMA_CM_EVENT_CONNECT_RESPONSE , RDMA_CM_EVENT_CONNECT_ERROR , RDMA_CM_EVENT_UNREACHABLE , RDMA_CM_EVENT_REJECTED , RDMA_CM_EVENT_ESTABLISHED , RDMA_CM_EVENT_DISCONNECTED , RDMA_CM_EVENT_DEVICE_REMOVAL , RDMA_CM_EVENT_MULTICAST_JOIN , RDMA_CM_EVENT_MULTICAST_ERROR , RDMA_CM_EVENT_ADDR_CHANGE , RDMA_CM_EVENT_TIMEWAIT_EXIT } 
rdma_event_msg const char * __attribute__ ( ( __const__ ) ) rdma_event_msg ( e#rdma_cm_event_type ) 
s##device_private
s##posix_acl
s##vfsmount
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##workqueue_struct
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##sec_path
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##kmem_cache
s##xfrm_state
s##uncached_list
s##dn_route
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s#ip_sf_list struct ip_sf_list { s#ip_sf_list * sf_next ; t#__be32 sf_inaddr ; unsigned long sf_count [ 2 ] ; unsigned char sf_gsresp ; unsigned char sf_oldin ; unsigned char sf_crcount ; } 
s#ip_mc_list struct ip_mc_list { s#in_device * interface ; t#__be32 multiaddr ; unsigned int sfmode ; s#ip_sf_list * sources ; s#ip_sf_list * tomb ; unsigned long sfcount [ 2 ] ; union { s#ip_mc_list * next ; s#ip_mc_list * next_rcu ; } ; s#ip_mc_list * next_hash ; s#timer_list timer ; int users ; t#atomic_t refcnt ; t#spinlock_t lock ; char tm_running ; char reporter ; char unsolicit_count ; char loaded ; unsigned char gsquery ; unsigned char crcount ; s#callback_head rcu ; } 
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
s##prot_inuse
s##xt_table
s#inet_ehash_bucket struct inet_ehash_bucket { s#hlist_nulls_head chain ; } 
s#inet_bind_hashbucket struct inet_bind_hashbucket { t#spinlock_t lock ; s#hlist_head chain ; } 
s#inet_listen_hashbucket struct inet_listen_hashbucket { t#spinlock_t lock ; s#hlist_head head ; } 
s#inet_hashinfo struct inet_hashinfo { s#inet_ehash_bucket * ehash ; t#spinlock_t * ehash_locks ; unsigned int ehash_mask ; unsigned int ehash_locks_mask ; s#inet_bind_hashbucket * bhash ; unsigned int bhash_size ; s#kmem_cache * bind_bucket_cachep ; s#inet_listen_hashbucket listening_hash [ 32 ] __attribute__ ( ( __aligned__ ( 256 ) ) ) ; } 
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s#net_generic struct net_generic { union { struct { unsigned int len ; s#callback_head rcu ; } s ; void * ptr [ 0 ] ; } ; } 
s##netns_ipvs
s##mpls_route
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##eventfd_ctx
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sock_reuseport
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##ib_uverbs_file
s##ib_umem_odp
s##uverbs_api_object
s##ib_pkey_cache
s##ib_gid_table
e#iw_cm_event_type enum iw_cm_event_type { IW_CM_EVENT_CONNECT_REQUEST = 1 , IW_CM_EVENT_CONNECT_REPLY , IW_CM_EVENT_ESTABLISHED , IW_CM_EVENT_DISCONNECT , IW_CM_EVENT_CLOSE } 
s#iw_cm_event struct iw_cm_event { e#iw_cm_event_type event ; int status ; s#__kernel_sockaddr_storage local_addr ; s#__kernel_sockaddr_storage remote_addr ; void * private_data ; void * provider_data ; t#u8 private_data_len ; t#u8 ord ; t#u8 ird ; } 
t#iw_cm_handler typedef int ( * iw_cm_handler ) ( s#iw_cm_id * , s#iw_cm_event * ) 
t#iw_event_handler typedef int ( * iw_event_handler ) ( s#iw_cm_id * , s#iw_cm_event * ) 
s#iw_cm_id struct iw_cm_id { t#iw_cm_handler cm_handler ; void * context ; s#ib_device * device ; s#__kernel_sockaddr_storage local_addr ; s#__kernel_sockaddr_storage remote_addr ; s#__kernel_sockaddr_storage m_local_addr ; s#__kernel_sockaddr_storage m_remote_addr ; void * provider_data ; t#iw_event_handler event_handler ; void ( * add_ref ) ( s#iw_cm_id * ) ; void ( * rem_ref ) ( s#iw_cm_id * ) ; t#u8 tos ; t#bool mapped ; } 
s#iw_cm_conn_param struct iw_cm_conn_param { const void * private_data ; t#u16 private_data_len ; t#u32 ord ; t#u32 ird ; t#u32 qpn ; } 
s#iw_cm_verbs struct iw_cm_verbs { void ( * add_ref ) ( s#ib_qp * ) ; void ( * rem_ref ) ( s#ib_qp * ) ; s#ib_qp * ( * get_qp ) ( s#ib_device * , int ) ; int ( * connect ) ( s#iw_cm_id * , s#iw_cm_conn_param * ) ; int ( * accept ) ( s#iw_cm_id * , s#iw_cm_conn_param * ) ; int ( * reject ) ( s#iw_cm_id * , const void * , t#u8 ) ; int ( * create_listen ) ( s#iw_cm_id * , int ) ; int ( * destroy_listen ) ( s#iw_cm_id * ) ; char ifname [ 16 ] ; } 
s##uverbs_attr_bundle
s##uverbs_object_tree_def
s#rdma_conn_param struct rdma_conn_param { const void * private_data ; t#u8 private_data_len ; t#u8 responder_resources ; t#u8 initiator_depth ; t#u8 flow_control ; t#u8 retry_count ; t#u8 rnr_retry_count ; t#u8 srq ; t#u32 qp_num ; t#u32 qkey ; } 
s#rdma_ud_param struct rdma_ud_param { const void * private_data ; t#u8 private_data_len ; s#rdma_ah_attr ah_attr ; t#u32 qp_num ; t#u32 qkey ; } 
s#rdma_cm_event struct rdma_cm_event { e#rdma_cm_event_type event ; int status ; union { s#rdma_conn_param conn ; s#rdma_ud_param ud ; } param ; } 
t#rdma_cm_event_handler typedef int ( * rdma_cm_event_handler ) ( s#rdma_cm_id * , s#rdma_cm_event * ) 
s#rdma_addr struct rdma_addr { s#__kernel_sockaddr_storage src_addr ; s#__kernel_sockaddr_storage dst_addr ; s#rdma_dev_addr dev_addr ; } 
s#rdma_route struct rdma_route { s#rdma_addr addr ; s#sa_path_rec * path_rec ; int num_paths ; } 
e#rdma_ucm_port_space enum rdma_ucm_port_space { RDMA_PS_IPOIB = 0x0002 , RDMA_PS_IB = 0x013F , RDMA_PS_TCP = 0x0106 , RDMA_PS_UDP = 0x0111 , } 
s#rdma_cm_id struct rdma_cm_id { s#ib_device * device ; void * context ; s#ib_qp * qp ; t#rdma_cm_event_handler event_handler ; s#rdma_route route ; e#rdma_ucm_port_space ps ; e#ib_qp_type qp_type ; t#u8 port_num ; } 
rdma_reject_msg const char * __attribute__ ( ( __const__ ) ) rdma_reject_msg ( s#rdma_cm_id * , int ) 
rdma_is_consumer_reject t#bool rdma_is_consumer_reject ( s#rdma_cm_id * , int ) 
rdma_consumer_reject_data const void * rdma_consumer_reject_data ( s#rdma_cm_id * , s#rdma_cm_event * , t#u8 * ) 
rdma_iw_cm_id s#iw_cm_id * rdma_iw_cm_id ( s#rdma_cm_id * ) 
rdma_res_to_id s#rdma_cm_id * rdma_res_to_id ( s#rdma_restrack_entry * ) 
__rdma_create_id s#rdma_cm_id * __rdma_create_id ( s#net * , t#rdma_cm_event_handler , void * , e#rdma_ucm_port_space , e#ib_qp_type , const char * ) 
rdma_create_qp int rdma_create_qp ( s#rdma_cm_id * , s#ib_pd * , s#ib_qp_init_attr * ) 
rdma_destroy_qp void rdma_destroy_qp ( s#rdma_cm_id * ) 
rdma_init_qp_attr int rdma_init_qp_attr ( s#rdma_cm_id * , s#ib_qp_attr * , int * ) 
rdma_destroy_id void rdma_destroy_id ( s#rdma_cm_id * ) 
rdma_get_service_id t#__be64 rdma_get_service_id ( s#rdma_cm_id * , s#sockaddr * ) 
rdma_read_gids void rdma_read_gids ( s#rdma_cm_id * , u#ib_gid * , u#ib_gid * ) 
rdma_set_service_type void rdma_set_service_type ( s#rdma_cm_id * , int ) 
rdma_set_ib_path int rdma_set_ib_path ( s#rdma_cm_id * , s#sa_path_rec * ) 
rdma_resolve_route int rdma_resolve_route ( s#rdma_cm_id * , unsigned long ) 
rdma_resolve_addr int rdma_resolve_addr ( s#rdma_cm_id * , s#sockaddr * , const s#sockaddr * , unsigned long ) 
rdma_set_reuseaddr int rdma_set_reuseaddr ( s#rdma_cm_id * , int ) 
rdma_set_afonly int rdma_set_afonly ( s#rdma_cm_id * , int ) 
rdma_listen int rdma_listen ( s#rdma_cm_id * , int ) 
rdma_bind_addr int rdma_bind_addr ( s#rdma_cm_id * , s#sockaddr * ) 
rdma_connect int rdma_connect ( s#rdma_cm_id * , s#rdma_conn_param * ) 
__rdma_accept int __rdma_accept ( s#rdma_cm_id * , s#rdma_conn_param * , const char * ) 
rdma_notify int rdma_notify ( s#rdma_cm_id * , e#ib_event_type ) 
rdma_reject int rdma_reject ( s#rdma_cm_id * , const void * , t#u8 ) 
rdma_disconnect int rdma_disconnect ( s#rdma_cm_id * ) 
rdma_join_multicast int rdma_join_multicast ( s#rdma_cm_id * , s#sockaddr * , t#u8 , void * ) 
rdma_leave_multicast void rdma_leave_multicast ( s#rdma_cm_id * , s#sockaddr * ) 

/* drivers/infiniband/core/cq.o */
s##device_private
s##posix_acl
s##vfsmount
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##workqueue_struct
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##sec_path
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##kmem_cache
s##xfrm_state
s##lwtunnel_state
s##uncached_list
s##rt6_info
s##dn_route
s##prefix_info
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
s##prot_inuse
s##ipv4_devconf
s##xt_table
s##inet_hashinfo
s##rt6_statistics
s##fib6_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##eventfd_ctx
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sock_reuseport
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##ib_uverbs_file
s##ib_umem_odp
s##uverbs_api_object
s##ib_pkey_cache
s##ib_gid_table
s##iw_cm_verbs
s##ib_mad_hdr
s##uverbs_attr_bundle
s##uverbs_object_tree_def
ib_process_cq_direct int ib_process_cq_direct ( s#ib_cq * , int ) 
__ib_alloc_cq s#ib_cq * __ib_alloc_cq ( s#ib_device * , void * , int , int , e#ib_poll_context , const char * ) 
ib_free_cq void ib_free_cq ( s#ib_cq * ) 

/* drivers/infiniband/core/device.o */
s##workqueue_struct
ib_wq extern s#workqueue_struct * ib_wq 
s##device_private
s##posix_acl
s##vfsmount
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##sec_path
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##kmem_cache
s##xfrm_state
s##lwtunnel_state
s##uncached_list
s##rt6_info
s##dn_route
s##prefix_info
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##ip_mc_list
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
s##prot_inuse
s##xt_table
s##inet_hashinfo
s##rt6_statistics
s##fib6_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##eventfd_ctx
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sock_reuseport
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##ib_uverbs_file
s##ib_umem_odp
s##uverbs_api_object
s##ib_pkey_cache
s##ib_gid_table
s##iw_cm_verbs
s##uverbs_attr_bundle
s##uverbs_object_tree_def
ib_alloc_device s#ib_device * ib_alloc_device ( t#size_t ) 
ib_dealloc_device void ib_dealloc_device ( s#ib_device * ) 
ib_get_device_fw_str void ib_get_device_fw_str ( s#ib_device * , char * ) 
ib_register_device int ib_register_device ( s#ib_device * , const char * , int ( * ) ( s#ib_device * , t#u8 , s#kobject * ) ) 
ib_unregister_device void ib_unregister_device ( s#ib_device * ) 
s#ib_client struct ib_client { char * name ; void ( * add ) ( s#ib_device * ) ; void ( * remove ) ( s#ib_device * , void * ) ; s#net_device * ( * get_net_dev_by_params ) ( s#ib_device * , t#u8 , t#u16 , const u#ib_gid * , const s#sockaddr * , void * ) ; s#list_head list ; } 
ib_register_client int ib_register_client ( s#ib_client * ) 
ib_unregister_client void ib_unregister_client ( s#ib_client * ) 
ib_get_client_data void * ib_get_client_data ( s#ib_device * , s#ib_client * ) 
ib_set_client_data void ib_set_client_data ( s#ib_device * , s#ib_client * , void * ) 
ib_register_event_handler void ib_register_event_handler ( s#ib_event_handler * ) 
ib_unregister_event_handler void ib_unregister_event_handler ( s#ib_event_handler * ) 
ib_dispatch_event void ib_dispatch_event ( s#ib_event * ) 
ib_query_port int ib_query_port ( s#ib_device * , t#u8 , s#ib_port_attr * ) 
ib_query_pkey int ib_query_pkey ( s#ib_device * , t#u8 , t#u16 , t#u16 * ) 
ib_modify_device int ib_modify_device ( s#ib_device * , int , s#ib_device_modify * ) 
ib_modify_port int ib_modify_port ( s#ib_device * , t#u8 , int , s#ib_port_modify * ) 
ib_find_gid int ib_find_gid ( s#ib_device * , u#ib_gid * , t#u8 * , t#u16 * ) 
ib_find_pkey int ib_find_pkey ( s#ib_device * , t#u8 , t#u16 , t#u16 * ) 
ib_get_net_dev_by_params s#net_device * ib_get_net_dev_by_params ( s#ib_device * , t#u8 , t#u16 , const u#ib_gid * , const s#sockaddr * ) 

/* drivers/infiniband/core/fmr_pool.o */
s##ib_fmr_pool
s##device_private
s##posix_acl
s##vfsmount
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##workqueue_struct
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##sec_path
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##kmem_cache
s##xfrm_state
s##lwtunnel_state
s##uncached_list
s##rt6_info
s##dn_route
s##prefix_info
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
s##prot_inuse
s##ipv4_devconf
s##xt_table
s##inet_hashinfo
s##rt6_statistics
s##fib6_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##eventfd_ctx
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sock_reuseport
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##ib_uverbs_file
s##ib_umem_odp
s##uverbs_api_object
s##ib_pkey_cache
s##ib_gid_table
s##iw_cm_verbs
s##uverbs_attr_bundle
s##uverbs_object_tree_def
E#IB_UVERBS_ACCESS_LOCAL_WRITE 1 << 0 
E#IB_UVERBS_ACCESS_REMOTE_WRITE 1 << 1 
E#IB_UVERBS_ACCESS_REMOTE_READ 1 << 2 
E#IB_UVERBS_ACCESS_REMOTE_ATOMIC 1 << 3 
E#IB_UVERBS_ACCESS_MW_BIND 1 << 4 
E#IB_UVERBS_ACCESS_ZERO_BASED 1 << 5 
E#IB_UVERBS_ACCESS_ON_DEMAND 1 << 6 
E#IB_UVERBS_ACCESS_HUGETLB 1 << 7 
E#IB_ACCESS_HUGETLB E#IB_UVERBS_ACCESS_HUGETLB 
e#ib_access_flags enum ib_access_flags { IB_ACCESS_LOCAL_WRITE = E#IB_UVERBS_ACCESS_LOCAL_WRITE , IB_ACCESS_REMOTE_WRITE = E#IB_UVERBS_ACCESS_REMOTE_WRITE , IB_ACCESS_REMOTE_READ = E#IB_UVERBS_ACCESS_REMOTE_READ , IB_ACCESS_REMOTE_ATOMIC = E#IB_UVERBS_ACCESS_REMOTE_ATOMIC , IB_ACCESS_MW_BIND = E#IB_UVERBS_ACCESS_MW_BIND , IB_ZERO_BASED = E#IB_UVERBS_ACCESS_ZERO_BASED , IB_ACCESS_ON_DEMAND = E#IB_UVERBS_ACCESS_ON_DEMAND , IB_ACCESS_HUGETLB = E#IB_UVERBS_ACCESS_HUGETLB , IB_ACCESS_SUPPORTED = ( ( E#IB_ACCESS_HUGETLB << 1 ) - 1 ) } 
s#ib_fmr_pool_param struct ib_fmr_pool_param { int max_pages_per_fmr ; int page_shift ; e#ib_access_flags access ; int pool_size ; int dirty_watermark ; void ( * flush_function ) ( s#ib_fmr_pool * , void * ) ; void * flush_arg ; unsigned cache : 1 ; } 
ib_create_fmr_pool s#ib_fmr_pool * ib_create_fmr_pool ( s#ib_pd * , s#ib_fmr_pool_param * ) 
ib_destroy_fmr_pool void ib_destroy_fmr_pool ( s#ib_fmr_pool * ) 
ib_flush_fmr_pool int ib_flush_fmr_pool ( s#ib_fmr_pool * ) 
s#ib_pool_fmr struct ib_pool_fmr { s#ib_fmr * fmr ; s#ib_fmr_pool * pool ; s#list_head list ; s#hlist_node cache_node ; int ref_count ; int remap_count ; t#u64 io_virtual_address ; int page_list_len ; t#u64 page_list [ 0 ] ; } 
ib_fmr_pool_map_phys s#ib_pool_fmr * ib_fmr_pool_map_phys ( s#ib_fmr_pool * , t#u64 * , int , t#u64 ) 
ib_fmr_pool_unmap int ib_fmr_pool_unmap ( s#ib_pool_fmr * ) 

/* drivers/infiniband/core/iwcm.o */
iwcm_reject_msg const char * __attribute__ ( ( __const__ ) ) iwcm_reject_msg ( int ) 
s##device_private
s##posix_acl
s##vfsmount
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##workqueue_struct
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##sec_path
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##kmem_cache
s##xfrm_state
s##lwtunnel_state
s##uncached_list
s##rt6_info
s##dn_route
s##prefix_info
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##ip_mc_list
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
s##prot_inuse
s##xt_table
s##inet_hashinfo
s##rt6_statistics
s##fib6_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##eventfd_ctx
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sock_reuseport
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##ib_uverbs_file
s##ib_umem_odp
s##uverbs_api_object
s##ib_pkey_cache
s##ib_gid_table
s##uverbs_attr_bundle
s##uverbs_object_tree_def
iw_create_cm_id s#iw_cm_id * iw_create_cm_id ( s#ib_device * , t#iw_cm_handler , void * ) 
iw_cm_disconnect int iw_cm_disconnect ( s#iw_cm_id * , int ) 
iw_destroy_cm_id void iw_destroy_cm_id ( s#iw_cm_id * ) 
iw_cm_listen int iw_cm_listen ( s#iw_cm_id * , int ) 
iw_cm_reject int iw_cm_reject ( s#iw_cm_id * , const void * , t#u8 ) 
iw_cm_accept int iw_cm_accept ( s#iw_cm_id * , s#iw_cm_conn_param * ) 
iw_cm_connect int iw_cm_connect ( s#iw_cm_id * , s#iw_cm_conn_param * ) 
iw_cm_init_qp_attr int iw_cm_init_qp_attr ( s#iw_cm_id * , s#ib_qp_attr * , int * ) 

/* drivers/infiniband/core/mad.o */
ib_response_mad int ib_response_mad ( const s#ib_mad_hdr * ) 
s##device_private
s##posix_acl
s##vfsmount
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##workqueue_struct
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##sec_path
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##kmem_cache
s##xfrm_state
s##lwtunnel_state
s##uncached_list
s##rt6_info
s##dn_route
s##prefix_info
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
s##prot_inuse
s##ipv4_devconf
s##xt_table
s##inet_hashinfo
s##rt6_statistics
s##fib6_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##eventfd_ctx
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sock_reuseport
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##ib_uverbs_file
s##ib_umem_odp
s##uverbs_api_object
s##ib_pkey_cache
s##ib_gid_table
s##iw_cm_verbs
s##uverbs_attr_bundle
s##uverbs_object_tree_def
s#ib_mad_send_buf struct ib_mad_send_buf { s#ib_mad_send_buf * next ; void * mad ; s#ib_mad_agent * mad_agent ; s#ib_ah * ah ; void * context [ 2 ] ; int hdr_len ; int data_len ; int seg_count ; int seg_size ; int seg_rmpp_size ; int timeout_ms ; int retries ; } 
E#IB_MGMT_MAD_DATA 232 
s#ib_mad struct ib_mad { s#ib_mad_hdr mad_hdr ; t#u8 data [ E#IB_MGMT_MAD_DATA ] ; } 
E#OPA_MGMT_MAD_DATA 2024 
s#opa_mad struct opa_mad { s#ib_mad_hdr mad_hdr ; t#u8 data [ E#OPA_MGMT_MAD_DATA ] ; } 
s#ib_mad_recv_buf struct ib_mad_recv_buf { s#list_head list ; s#ib_grh * grh ; union { s#ib_mad * mad ; s#opa_mad * opa_mad ; } ; } 
s#ib_mad_recv_wc struct ib_mad_recv_wc { s#ib_wc * wc ; s#ib_mad_recv_buf recv_buf ; s#list_head rmpp_list ; int mad_len ; t#size_t mad_seg_size ; } 
t#ib_mad_recv_handler typedef void ( * ib_mad_recv_handler ) ( s#ib_mad_agent * , s#ib_mad_send_buf * , s#ib_mad_recv_wc * ) 
s#ib_mad_send_wc struct ib_mad_send_wc { s#ib_mad_send_buf * send_buf ; e#ib_wc_status status ; t#u32 vendor_err ; } 
t#ib_mad_send_handler typedef void ( * ib_mad_send_handler ) ( s#ib_mad_agent * , s#ib_mad_send_wc * ) 
t#ib_mad_snoop_handler typedef void ( * ib_mad_snoop_handler ) ( s#ib_mad_agent * , s#ib_mad_send_buf * , s#ib_mad_send_wc * ) 
s#ib_mad_agent struct ib_mad_agent { s#ib_device * device ; s#ib_qp * qp ; t#ib_mad_recv_handler recv_handler ; t#ib_mad_send_handler send_handler ; t#ib_mad_snoop_handler snoop_handler ; void * context ; t#u32 hi_tid ; t#u32 flags ; t#u8 port_num ; t#u8 rmpp_version ; void * security ; t#bool smp_allowed ; t#bool lsm_nb_reg ; s#notifier_block lsm_nb ; } 
s#ib_mad_reg_req struct ib_mad_reg_req { t#u8 mgmt_class ; t#u8 mgmt_class_version ; t#u8 oui [ 3 ] ; unsigned long method_mask [ ( ( ( 128 ) + ( 8 * sizeof ( long ) ) - 1 ) / ( 8 * sizeof ( long ) ) ) ] ; } 
ib_register_mad_agent s#ib_mad_agent * ib_register_mad_agent ( s#ib_device * , t#u8 , e#ib_qp_type , s#ib_mad_reg_req * , t#u8 , t#ib_mad_send_handler , t#ib_mad_recv_handler , void * , t#u32 ) 
ib_register_mad_snoop s#ib_mad_agent * ib_register_mad_snoop ( s#ib_device * , t#u8 , e#ib_qp_type , int , t#ib_mad_snoop_handler , t#ib_mad_recv_handler , void * ) 
ib_unregister_mad_agent void ib_unregister_mad_agent ( s#ib_mad_agent * ) 
ib_mad_kernel_rmpp_agent int ib_mad_kernel_rmpp_agent ( const s#ib_mad_agent * ) 
ib_create_send_mad s#ib_mad_send_buf * ib_create_send_mad ( s#ib_mad_agent * , t#u32 , t#u16 , int , int , int , t#gfp_t , t#u8 ) 
ib_get_mad_data_offset int ib_get_mad_data_offset ( t#u8 ) 
ib_is_mad_class_rmpp int ib_is_mad_class_rmpp ( t#u8 ) 
ib_get_rmpp_segment void * ib_get_rmpp_segment ( s#ib_mad_send_buf * , int ) 
ib_free_send_mad void ib_free_send_mad ( s#ib_mad_send_buf * ) 
ib_post_send_mad int ib_post_send_mad ( s#ib_mad_send_buf * , s#ib_mad_send_buf * * ) 
ib_free_recv_mad void ib_free_recv_mad ( s#ib_mad_recv_wc * ) 
ib_redirect_mad_qp s#ib_mad_agent * ib_redirect_mad_qp ( s#ib_qp * , t#u8 , t#ib_mad_send_handler , t#ib_mad_recv_handler , void * ) 
ib_process_mad_wc int ib_process_mad_wc ( s#ib_mad_agent * , s#ib_wc * ) 
ib_modify_mad int ib_modify_mad ( s#ib_mad_agent * , s#ib_mad_send_buf * , t#u32 ) 
ib_cancel_mad void ib_cancel_mad ( s#ib_mad_agent * , s#ib_mad_send_buf * ) 

/* drivers/infiniband/core/mr_pool.o */
s##device_private
s##posix_acl
s##vfsmount
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##workqueue_struct
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##sec_path
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##kmem_cache
s##xfrm_state
s##lwtunnel_state
s##uncached_list
s##rt6_info
s##dn_route
s##prefix_info
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
s##prot_inuse
s##ipv4_devconf
s##xt_table
s##inet_hashinfo
s##rt6_statistics
s##fib6_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##eventfd_ctx
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sock_reuseport
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##ib_uverbs_file
s##ib_umem_odp
s##uverbs_api_object
s##ib_pkey_cache
s##ib_gid_table
s##iw_cm_verbs
s##ib_mad_hdr
s##uverbs_attr_bundle
s##uverbs_object_tree_def
ib_mr_pool_get s#ib_mr * ib_mr_pool_get ( s#ib_qp * , s#list_head * ) 
ib_mr_pool_put void ib_mr_pool_put ( s#ib_qp * , s#list_head * , s#ib_mr * ) 
ib_mr_pool_init int ib_mr_pool_init ( s#ib_qp * , s#list_head * , int , e#ib_mr_type , t#u32 ) 
ib_mr_pool_destroy void ib_mr_pool_destroy ( s#ib_qp * , s#list_head * ) 

/* drivers/infiniband/core/multicast.o */
s#ib_sa_mcmember_rec struct ib_sa_mcmember_rec { u#ib_gid mgid ; u#ib_gid port_gid ; t#__be32 qkey ; t#__be16 mlid ; t#u8 mtu_selector ; t#u8 mtu ; t#u8 traffic_class ; t#__be16 pkey ; t#u8 rate_selector ; t#u8 rate ; t#u8 packet_life_time_selector ; t#u8 packet_life_time ; t#u8 sl ; t#__be32 flow_label ; t#u8 hop_limit ; t#u8 scope ; t#u8 join_state ; t#u8 proxy_join ; } 
t#ib_sa_comp_mask typedef t#u64 ib_sa_comp_mask 
s#ib_sa_multicast struct ib_sa_multicast { s#ib_sa_mcmember_rec rec ; t#ib_sa_comp_mask comp_mask ; int ( * callback ) ( int , s#ib_sa_multicast * ) ; void * context ; } 
s#ib_sa_client struct ib_sa_client { t#atomic_t users ; s#completion comp ; } 
s##device_private
s##posix_acl
s##vfsmount
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##workqueue_struct
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##sec_path
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##kmem_cache
s##xfrm_state
s##lwtunnel_state
s##uncached_list
s##rt6_info
s##dn_route
s##prefix_info
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##ip_mc_list
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
s##prot_inuse
s##xt_table
s##inet_hashinfo
s##rt6_statistics
s##fib6_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##eventfd_ctx
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sock_reuseport
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##ib_uverbs_file
s##ib_umem_odp
s##uverbs_api_object
s##ib_pkey_cache
s##ib_gid_table
s##iw_cm_verbs
s##uverbs_attr_bundle
s##uverbs_object_tree_def
ib_sa_join_multicast s#ib_sa_multicast * ib_sa_join_multicast ( s#ib_sa_client * , s#ib_device * , t#u8 , s#ib_sa_mcmember_rec * , t#ib_sa_comp_mask , t#gfp_t , int ( * ) ( int , s#ib_sa_multicast * ) , void * ) 
ib_sa_free_multicast void ib_sa_free_multicast ( s#ib_sa_multicast * ) 
ib_sa_get_mcmember_rec int ib_sa_get_mcmember_rec ( s#ib_device * , t#u8 , u#ib_gid * , s#ib_sa_mcmember_rec * ) 
ib_init_ah_from_mcmember int ib_init_ah_from_mcmember ( s#ib_device * , t#u8 , s#ib_sa_mcmember_rec * , s#net_device * , e#ib_gid_type , s#rdma_ah_attr * ) 

/* drivers/infiniband/core/netlink.o */
rdma_nl_chk_listeners t#bool rdma_nl_chk_listeners ( unsigned int ) 
s##proc_ns_operations
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##kmem_cache
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##bpf_prog_aux
s##xfrm_policy
s##workqueue_struct
s##xfrm_state
s##lwtunnel_state
s##uncached_list
s##rt6_info
s##dn_route
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##xol_area
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_dir_entry
s##uevent_sock
s##prot_inuse
s##ipv4_devconf
s##xt_table
s##rt6_statistics
s##fib6_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##nf_hook_entry
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##udp_tunnel_info
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##prefix_info
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
s##sec_path
s#rdma_nl_cbs struct rdma_nl_cbs { int ( * doit ) ( s#sk_buff * , s#nlmsghdr * , s#netlink_ext_ack * ) ; int ( * dump ) ( s#sk_buff * , s#netlink_callback * ) ; t#u8 flags ; } 
rdma_nl_register void rdma_nl_register ( unsigned int , const s#rdma_nl_cbs [ ] ) 
rdma_nl_unregister void rdma_nl_unregister ( unsigned int ) 
ibnl_put_msg void * ibnl_put_msg ( s#sk_buff * , s#nlmsghdr * * , int , int , int , int , int ) 
ibnl_put_attr int ibnl_put_attr ( s#sk_buff * , s#nlmsghdr * , int , void * , int ) 
rdma_nl_unicast int rdma_nl_unicast ( s#sk_buff * , t#u32 ) 
rdma_nl_unicast_wait int rdma_nl_unicast_wait ( s#sk_buff * , t#__u32 ) 
rdma_nl_multicast int rdma_nl_multicast ( s#sk_buff * , unsigned int , t#gfp_t ) 

/* drivers/infiniband/core/nldev.o */
s##proc_ns_operations
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##kmem_cache
s##fs_pin
s##nlm_lockowner
s##nfs4_lock_state
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##bpf_prog_aux
s##xfrm_policy
s##workqueue_struct
s##xfrm_state
s##lwtunnel_state
s##uncached_list
s##rt6_info
s##dn_route
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##xol_area
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_dir_entry
s##uevent_sock
s##prot_inuse
s##xt_table
s##rt6_statistics
s##fib6_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##nf_hook_entry
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##udp_tunnel_info
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##prefix_info
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##ip_mc_list
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
s##sec_path
rdma_nl_put_driver_u32 int rdma_nl_put_driver_u32 ( s#sk_buff * , const char * , t#u32 ) 
rdma_nl_put_driver_u32_hex int rdma_nl_put_driver_u32_hex ( s#sk_buff * , const char * , t#u32 ) 
rdma_nl_put_driver_u64 int rdma_nl_put_driver_u64 ( s#sk_buff * , const char * , t#u64 ) 
rdma_nl_put_driver_u64_hex int rdma_nl_put_driver_u64_hex ( s#sk_buff * , const char * , t#u64 ) 

/* drivers/infiniband/core/packer.o */
s#ib_field struct ib_field { t#size_t struct_offset_bytes ; t#size_t struct_size_bytes ; int offset_words ; int offset_bits ; int size_bits ; char * field_name ; } 
ib_pack void ib_pack ( const s#ib_field * , int , void * , void * ) 
ib_unpack void ib_unpack ( const s#ib_field * , int , void * , void * ) 

/* drivers/infiniband/core/rdma_core.o */
s##device_private
s##posix_acl
s##vfsmount
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##workqueue_struct
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##sec_path
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##kmem_cache
s##xfrm_state
s##lwtunnel_state
s##uncached_list
s##rt6_info
s##dn_route
s##prefix_info
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
s##prot_inuse
s##ipv4_devconf
s##xt_table
s##inet_hashinfo
s##rt6_statistics
s##fib6_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##eventfd_ctx
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##mtd_info
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sock_reuseport
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##ib_pkey_cache
s##ib_gid_table
s##iw_cm_verbs
s##ib_umem_odp
E#UVERBS_API_ATTR_KEY_BITS 6 
E#UVERBS_API_ATTR_BKEY_LEN ( 1 << E#UVERBS_API_ATTR_KEY_BITS ) - 1 
s#uverbs_ptr_attr struct uverbs_ptr_attr { union { void * ptr ; t#u64 data ; } ; t#u16 len ; t#u16 uattr_idx ; t#u8 enum_id ; } 
s#uverbs_attr_spec struct uverbs_attr_spec { t#u8 type ; t#u8 zero_trailing : 1 ; t#u8 alloc_and_copy : 1 ; t#u8 mandatory : 1 ; union { struct { t#u16 len ; t#u16 min_len ; } ptr ; struct { t#u16 obj_type ; t#u8 access ; } obj ; struct { t#u8 num_elems ; } enum_def ; } u ; union { struct { const s#uverbs_attr_spec * ids ; } enum_def ; struct { t#u16 obj_type ; t#u16 min_len ; t#u16 max_len ; t#u8 access ; } objs_arr ; } u2 ; } 
s#uverbs_api_attr struct uverbs_api_attr { s#uverbs_attr_spec spec ; } 
s#uverbs_obj_attr struct uverbs_obj_attr { s#ib_uobject * uobject ; const s#uverbs_api_attr * attr_elm ; } 
s#uverbs_objs_arr_attr struct uverbs_objs_arr_attr { s#ib_uobject * * uobjects ; t#u16 len ; } 
s#uverbs_attr struct uverbs_attr { union { s#uverbs_ptr_attr ptr_attr ; s#uverbs_obj_attr obj_attr ; s#uverbs_objs_arr_attr objs_arr_attr ; } ; } 
s#uverbs_attr_bundle struct uverbs_attr_bundle { s#ib_uverbs_file * ufile ; unsigned long attr_present [ ( ( ( E#UVERBS_API_ATTR_BKEY_LEN ) + ( 8 * sizeof ( long ) ) - 1 ) / ( 8 * sizeof ( long ) ) ) ] ; s#uverbs_attr attrs [ ] ; } 
s#uverbs_obj_type struct uverbs_obj_type { const s#uverbs_obj_type_class * const type_class ; t#size_t obj_size ; } 
s#uverbs_attr_def struct uverbs_attr_def { t#u16 id ; s#uverbs_attr_spec attr ; } 
s#uverbs_method_def struct uverbs_method_def { t#u16 id ; t#u32 flags ; t#size_t num_attrs ; const s#uverbs_attr_def * const ( * attrs ) [ ] ; int ( * handler ) ( s#ib_uverbs_file * , s#uverbs_attr_bundle * ) ; } 
s#uverbs_object_def struct uverbs_object_def { t#u16 id ; const s#uverbs_obj_type * type_attrs ; t#size_t num_methods ; const s#uverbs_method_def * const ( * methods ) [ ] ; } 
s#uverbs_object_tree_def struct uverbs_object_tree_def { t#size_t num_objects ; const s#uverbs_object_def * const ( * objects ) [ ] ; } 
s#uverbs_api struct uverbs_api { s#radix_tree_root radix ; e#rdma_driver_id driver_id ; } 
s#ib_uverbs_device struct ib_uverbs_device { t#atomic_t refcount ; int num_comp_vectors ; s#completion comp ; s#device dev ; const s#attribute_group * groups [ 2 ] ; s#ib_device * ib_dev ; int devnum ; s#cdev cdev ; s#rb_root xrcd_tree ; s#mutex xrcd_tree_mutex ; s#srcu_struct disassociate_srcu ; s#mutex lists_mutex ; s#list_head uverbs_file_list ; s#list_head uverbs_events_file_list ; s#uverbs_api * uapi ; } 
s#ib_uverbs_event_queue struct ib_uverbs_event_queue { t#spinlock_t lock ; int is_closed ; t#wait_queue_head_t poll_wait ; s#fasync_struct * async_queue ; s#list_head event_list ; } 
s#ib_uverbs_async_event_file struct ib_uverbs_async_event_file { s#ib_uverbs_event_queue ev_queue ; s#ib_uverbs_file * uverbs_file ; s#kref ref ; s#list_head list ; } 
s#ib_uverbs_file struct ib_uverbs_file { s#kref ref ; s#ib_uverbs_device * device ; s#mutex ucontext_lock ; s#ib_ucontext * ucontext ; s#ib_event_handler event_handler ; s#ib_uverbs_async_event_file * async_file ; s#list_head list ; s#rw_semaphore hw_destroy_rwsem ; t#spinlock_t uobjects_lock ; s#list_head uobjects ; s#mutex umap_lock ; s#list_head umaps ; t#u64 uverbs_cmd_mask ; t#u64 uverbs_ex_cmd_mask ; s#idr idr ; t#spinlock_t idr_lock ; } 
s#uverbs_api_object struct uverbs_api_object { const s#uverbs_obj_type * type_attrs ; const s#uverbs_obj_type_class * type_class ; } 
e#rdma_lookup_mode enum rdma_lookup_mode { UVERBS_LOOKUP_READ , UVERBS_LOOKUP_WRITE , UVERBS_LOOKUP_DESTROY , } 
e#rdma_remove_reason enum rdma_remove_reason { RDMA_REMOVE_DESTROY , RDMA_REMOVE_CLOSE , RDMA_REMOVE_DRIVER_REMOVE , RDMA_REMOVE_ABORT , } 
s#uverbs_obj_type_class struct uverbs_obj_type_class { s#ib_uobject * ( * alloc_begin ) ( const s#uverbs_api_object * , s#ib_uverbs_file * ) ; int ( * alloc_commit ) ( s#ib_uobject * ) ; void ( * alloc_abort ) ( s#ib_uobject * ) ; s#ib_uobject * ( * lookup_get ) ( const s#uverbs_api_object * , s#ib_uverbs_file * , t#s64 , e#rdma_lookup_mode ) ; void ( * lookup_put ) ( s#ib_uobject * , e#rdma_lookup_mode ) ; int ( * destroy_hw ) ( s#ib_uobject * , e#rdma_remove_reason ) ; void ( * remove_handle ) ( s#ib_uobject * ) ; t#u8 needs_kfree_rcu ; } 
uverbs_idr_class extern const s#uverbs_obj_type_class uverbs_idr_class 
uverbs_fd_class extern const s#uverbs_obj_type_class uverbs_fd_class 

/* drivers/infiniband/core/restrack.o */
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##kmem_cache
s##fs_pin
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##proc_dir_entry
s##uevent_sock
s##prot_inuse
s##xt_table
s##inet_hashinfo
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##lwtunnel_state
s##uncached_list
s##dn_route
s##workqueue_struct
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##nf_hook_entry
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##prefix_info
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##ip_mc_list
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##phy_device
s##sfp_bus
s##sec_path
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##xol_area
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
rdma_restrack_count int rdma_restrack_count ( s#rdma_restrack_root * , e#rdma_restrack_type , s#pid_namespace * ) 
rdma_restrack_set_task void rdma_restrack_set_task ( s#rdma_restrack_entry * , const char * ) 
rdma_restrack_add void rdma_restrack_add ( s#rdma_restrack_entry * ) 
rdma_restrack_get int rdma_restrack_get ( s#rdma_restrack_entry * ) 
rdma_restrack_put int rdma_restrack_put ( s#rdma_restrack_entry * ) 
rdma_restrack_del void rdma_restrack_del ( s#rdma_restrack_entry * ) 

/* drivers/infiniband/core/roce_gid_mgmt.o */
s##device_private
s##posix_acl
s##vfsmount
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##workqueue_struct
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##sec_path
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##kmem_cache
s##xfrm_state
s##lwtunnel_state
s##uncached_list
s##rt6_info
s##dn_route
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##ip_mc_list
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
s##prot_inuse
s##xt_table
s##inet_hashinfo
s##rt6_statistics
s##fib6_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##eventfd_ctx
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sock_reuseport
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##ib_uverbs_file
s##ib_umem_odp
s##uverbs_api_object
s##ib_pkey_cache
s##ib_gid_table
s##iw_cm_verbs
s##uverbs_attr_bundle
s##uverbs_object_tree_def
roce_gid_type_mask_support unsigned long roce_gid_type_mask_support ( s#ib_device * , t#u8 ) 
rdma_roce_rescan_device void rdma_roce_rescan_device ( s#ib_device * ) 

/* drivers/infiniband/core/rw.o */
s##device_private
s##posix_acl
s##vfsmount
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##workqueue_struct
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##sec_path
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##kmem_cache
s##xfrm_state
s##lwtunnel_state
s##uncached_list
s##rt6_info
s##dn_route
s##prefix_info
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##ip_mc_list
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
s##prot_inuse
s##xt_table
s##inet_hashinfo
s##rt6_statistics
s##fib6_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##eventfd_ctx
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sock_reuseport
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##ib_uverbs_file
s##ib_umem_odp
s##uverbs_api_object
s##ib_pkey_cache
s##ib_gid_table
s##iw_cm_verbs
s##uverbs_attr_bundle
s##uverbs_object_tree_def
s#ib_rdma_wr struct ib_rdma_wr { s#ib_send_wr wr ; t#u64 remote_addr ; t#u32 rkey ; } 
s#ib_reg_wr struct ib_reg_wr { s#ib_send_wr wr ; s#ib_mr * mr ; t#u32 key ; int access ; } 
s#rdma_rw_reg_ctx struct rdma_rw_reg_ctx { s#ib_sge sge ; s#ib_rdma_wr wr ; s#ib_reg_wr reg_wr ; s#ib_send_wr inv_wr ; s#ib_mr * mr ; } 
e#ib_signature_type enum ib_signature_type { IB_SIG_TYPE_NONE , IB_SIG_TYPE_T10_DIF , } 
e#ib_t10_dif_bg_type enum ib_t10_dif_bg_type { IB_T10DIF_CRC , IB_T10DIF_CSUM } 
s#ib_t10_dif_domain struct ib_t10_dif_domain { e#ib_t10_dif_bg_type bg_type ; t#u16 pi_interval ; t#u16 bg ; t#u16 app_tag ; t#u32 ref_tag ; t#bool ref_remap ; t#bool app_escape ; t#bool ref_escape ; t#u16 apptag_check_mask ; } 
s#ib_sig_domain struct ib_sig_domain { e#ib_signature_type sig_type ; union { s#ib_t10_dif_domain dif ; } sig ; } 
s#ib_sig_attrs struct ib_sig_attrs { t#u8 check_mask ; s#ib_sig_domain mem ; s#ib_sig_domain wire ; } 
s#ib_sig_handover_wr struct ib_sig_handover_wr { s#ib_send_wr wr ; s#ib_sig_attrs * sig_attrs ; s#ib_mr * sig_mr ; int access_flags ; s#ib_sge * prot ; } 
s#rdma_rw_ctx struct rdma_rw_ctx { t#u32 nr_ops ; t#u8 type ; union { struct { s#ib_sge sge ; s#ib_rdma_wr wr ; } single ; struct { s#ib_sge * sges ; s#ib_rdma_wr * wrs ; } map ; s#rdma_rw_reg_ctx * reg ; struct { s#rdma_rw_reg_ctx data ; s#rdma_rw_reg_ctx prot ; s#ib_send_wr sig_inv_wr ; s#ib_mr * sig_mr ; s#ib_sge sig_sge ; s#ib_sig_handover_wr sig_wr ; } * sig ; } ; } 
rdma_rw_ctx_init int rdma_rw_ctx_init ( s#rdma_rw_ctx * , s#ib_qp * , t#u8 , s#scatterlist * , t#u32 , t#u32 , t#u64 , t#u32 , e#dma_data_direction ) 
rdma_rw_ctx_signature_init int rdma_rw_ctx_signature_init ( s#rdma_rw_ctx * , s#ib_qp * , t#u8 , s#scatterlist * , t#u32 , s#scatterlist * , t#u32 , s#ib_sig_attrs * , t#u64 , t#u32 , e#dma_data_direction ) 
rdma_rw_ctx_wrs s#ib_send_wr * rdma_rw_ctx_wrs ( s#rdma_rw_ctx * , s#ib_qp * , t#u8 , s#ib_cqe * , s#ib_send_wr * ) 
rdma_rw_ctx_post int rdma_rw_ctx_post ( s#rdma_rw_ctx * , s#ib_qp * , t#u8 , s#ib_cqe * , s#ib_send_wr * ) 
rdma_rw_ctx_destroy void rdma_rw_ctx_destroy ( s#rdma_rw_ctx * , s#ib_qp * , t#u8 , s#scatterlist * , t#u32 , e#dma_data_direction ) 
rdma_rw_ctx_destroy_signature void rdma_rw_ctx_destroy_signature ( s#rdma_rw_ctx * , s#ib_qp * , t#u8 , s#scatterlist * , t#u32 , s#scatterlist * , t#u32 , e#dma_data_direction ) 
rdma_rw_mr_factor unsigned int rdma_rw_mr_factor ( s#ib_device * , t#u8 , unsigned int ) 

/* drivers/infiniband/core/sa_query.o */
ib_sa_register_client void ib_sa_register_client ( s#ib_sa_client * ) 
ib_sa_unregister_client void ib_sa_unregister_client ( s#ib_sa_client * ) 
s##ib_sa_query
ib_sa_cancel_query void ib_sa_cancel_query ( int , s#ib_sa_query * ) 
s##device_private
s##posix_acl
s##vfsmount
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##workqueue_struct
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##sec_path
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##kmem_cache
s##xfrm_state
s##lwtunnel_state
s##uncached_list
s##rt6_info
s##dn_route
s##prefix_info
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##ip_mc_list
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
s##prot_inuse
s##xt_table
s##inet_hashinfo
s##rt6_statistics
s##fib6_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##eventfd_ctx
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sock_reuseport
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##ib_uverbs_file
s##ib_umem_odp
s##uverbs_api_object
s##ib_pkey_cache
s##ib_gid_table
s##iw_cm_verbs
s##uverbs_attr_bundle
s##uverbs_object_tree_def
ib_init_ah_attr_from_path int ib_init_ah_attr_from_path ( s#ib_device * , t#u8 , s#sa_path_rec * , s#rdma_ah_attr * , const s#ib_gid_attr * ) 
ib_sa_unpack_path void ib_sa_unpack_path ( void * , s#sa_path_rec * ) 
ib_sa_pack_path void ib_sa_pack_path ( s#sa_path_rec * , void * ) 
ib_sa_path_rec_get int ib_sa_path_rec_get ( s#ib_sa_client * , s#ib_device * , t#u8 , s#sa_path_rec * , t#ib_sa_comp_mask , unsigned long , t#gfp_t , void ( * ) ( int , s#sa_path_rec * , void * ) , void * , s#ib_sa_query * * ) 
s#ib_sa_service_rec struct ib_sa_service_rec { t#u64 id ; u#ib_gid gid ; t#__be16 pkey ; t#u32 lease ; t#u8 key [ 16 ] ; t#u8 name [ 64 ] ; t#u8 data8 [ 16 ] ; t#u16 data16 [ 8 ] ; t#u32 data32 [ 4 ] ; t#u64 data64 [ 2 ] ; } 
ib_sa_service_rec_query int ib_sa_service_rec_query ( s#ib_sa_client * , s#ib_device * , t#u8 , t#u8 , s#ib_sa_service_rec * , t#ib_sa_comp_mask , unsigned long , t#gfp_t , void ( * ) ( int , s#ib_sa_service_rec * , void * ) , void * , s#ib_sa_query * * ) 
s#ib_sa_guidinfo_rec struct ib_sa_guidinfo_rec { t#__be16 lid ; t#u8 block_num ; t#u8 res1 ; t#__be32 res2 ; t#u8 guid_info_list [ 64 ] ; } 
ib_sa_guid_info_rec_query int ib_sa_guid_info_rec_query ( s#ib_sa_client * , s#ib_device * , t#u8 , s#ib_sa_guidinfo_rec * , t#ib_sa_comp_mask , t#u8 , unsigned long , t#gfp_t , void ( * ) ( int , s#ib_sa_guidinfo_rec * , void * ) , void * , s#ib_sa_query * * ) 
ib_sa_sendonly_fullmem_support t#bool ib_sa_sendonly_fullmem_support ( s#ib_sa_client * , s#ib_device * , t#u8 ) 

/* drivers/infiniband/core/security.o */
s##device_private
s##posix_acl
s##vfsmount
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##workqueue_struct
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##sec_path
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##kmem_cache
s##xfrm_state
s##lwtunnel_state
s##uncached_list
s##rt6_info
s##dn_route
s##prefix_info
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
s##prot_inuse
s##ipv4_devconf
s##xt_table
s##inet_hashinfo
s##rt6_statistics
s##fib6_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##eventfd_ctx
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sock_reuseport
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##ib_uverbs_file
s##ib_umem_odp
s##uverbs_api_object
s##ib_pkey_cache
s##ib_gid_table
s##iw_cm_verbs
s##uverbs_attr_bundle
s##uverbs_object_tree_def
ib_create_qp_security int ib_create_qp_security ( s#ib_qp * , s#ib_device * ) 

/* drivers/infiniband/core/ud_header.o */
t#__sum16 typedef t#__u16 __sum16 
s#ib_unpacked_lrh struct ib_unpacked_lrh { t#u8 virtual_lane ; t#u8 link_version ; t#u8 service_level ; t#u8 link_next_header ; t#__be16 destination_lid ; t#__be16 packet_length ; t#__be16 source_lid ; } 
s#ib_unpacked_eth struct ib_unpacked_eth { t#u8 dmac_h [ 4 ] ; t#u8 dmac_l [ 2 ] ; t#u8 smac_h [ 2 ] ; t#u8 smac_l [ 4 ] ; t#__be16 type ; } 
s#ib_unpacked_vlan struct ib_unpacked_vlan { t#__be16 tag ; t#__be16 type ; } 
s#ib_unpacked_grh struct ib_unpacked_grh { t#u8 ip_version ; t#u8 traffic_class ; t#__be32 flow_label ; t#__be16 payload_length ; t#u8 next_header ; t#u8 hop_limit ; u#ib_gid source_gid ; u#ib_gid destination_gid ; } 
s#ib_unpacked_ip4 struct ib_unpacked_ip4 { t#u8 ver ; t#u8 hdr_len ; t#u8 tos ; t#__be16 tot_len ; t#__be16 id ; t#__be16 frag_off ; t#u8 ttl ; t#u8 protocol ; t#__sum16 check ; t#__be32 saddr ; t#__be32 daddr ; } 
s#ib_unpacked_udp struct ib_unpacked_udp { t#__be16 sport ; t#__be16 dport ; t#__be16 length ; t#__be16 csum ; } 
s#ib_unpacked_bth struct ib_unpacked_bth { t#u8 opcode ; t#u8 solicited_event ; t#u8 mig_req ; t#u8 pad_count ; t#u8 transport_header_version ; t#__be16 pkey ; t#__be32 destination_qpn ; t#u8 ack_req ; t#__be32 psn ; } 
s#ib_unpacked_deth struct ib_unpacked_deth { t#__be32 qkey ; t#__be32 source_qpn ; } 
s#ib_ud_header struct ib_ud_header { int lrh_present ; s#ib_unpacked_lrh lrh ; int eth_present ; s#ib_unpacked_eth eth ; int vlan_present ; s#ib_unpacked_vlan vlan ; int grh_present ; s#ib_unpacked_grh grh ; int ipv4_present ; s#ib_unpacked_ip4 ip4 ; int udp_present ; s#ib_unpacked_udp udp ; s#ib_unpacked_bth bth ; s#ib_unpacked_deth deth ; int immediate_present ; t#__be32 immediate_data ; } 
ib_ud_ip4_csum t#__sum16 ib_ud_ip4_csum ( s#ib_ud_header * ) 
ib_ud_header_init int ib_ud_header_init ( int , int , int , int , int , int , int , int , s#ib_ud_header * ) 
ib_ud_header_pack int ib_ud_header_pack ( s#ib_ud_header * , void * ) 
ib_ud_header_unpack int ib_ud_header_unpack ( void * , s#ib_ud_header * ) 

/* drivers/infiniband/core/umem.o */
s##device_private
s##posix_acl
s##vfsmount
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##workqueue_struct
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##sec_path
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##kmem_cache
s##xfrm_state
s##lwtunnel_state
s##uncached_list
s##rt6_info
s##dn_route
s##prefix_info
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
s##prot_inuse
s##ipv4_devconf
s##xt_table
s##inet_hashinfo
s##rt6_statistics
s##fib6_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##eventfd_ctx
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##mtd_info
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sock_reuseport
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##uverbs_api
s##uverbs_api_object
s##ib_pkey_cache
s##ib_gid_table
s##iw_cm_verbs
s##ib_mad_hdr
s##uverbs_api_attr
s#mmu_notifier_ops struct mmu_notifier_ops { void ( * release ) ( s#mmu_notifier * , s#mm_struct * ) ; int ( * clear_flush_young ) ( s#mmu_notifier * , s#mm_struct * , unsigned long , unsigned long ) ; int ( * clear_young ) ( s#mmu_notifier * , s#mm_struct * , unsigned long , unsigned long ) ; int ( * test_young ) ( s#mmu_notifier * , s#mm_struct * , unsigned long ) ; void ( * change_pte ) ( s#mmu_notifier * , s#mm_struct * , unsigned long , t#pte_t ) ; void ( * invalidate_page ) ( s#mmu_notifier * , s#mm_struct * , unsigned long ) ; void ( * invalidate_range_start ) ( s#mmu_notifier * , s#mm_struct * , unsigned long , unsigned long ) ; void ( * invalidate_range_end ) ( s#mmu_notifier * , s#mm_struct * , unsigned long , unsigned long ) ; void ( * invalidate_range ) ( s#mmu_notifier * , s#mm_struct * , unsigned long , unsigned long ) ; } 
s#mmu_notifier struct mmu_notifier { s#hlist_node hlist ; const s#mmu_notifier_ops * ops ; } 
s#ib_ucontext_per_mm struct ib_ucontext_per_mm { s#ib_ucontext * context ; s#mm_struct * mm ; s#pid * tgid ; t#bool active ; s#rb_root umem_tree ; s#rw_semaphore umem_rwsem ; s#mmu_notifier mn ; unsigned int odp_mrs_count ; s#list_head ucontext_list ; s#callback_head rcu ; } 
s#umem_odp_node struct umem_odp_node { t#u64 __subtree_last ; s#rb_node rb ; } 
s#ib_umem_odp struct ib_umem_odp { s#ib_umem umem ; s#ib_ucontext_per_mm * per_mm ; s#page * * page_list ; t#dma_addr_t * dma_list ; s#mutex umem_mutex ; void * private ; int notifiers_seq ; int notifiers_count ; s#umem_odp_node interval_tree ; s#completion notifier_completion ; int dying ; s#work_struct work ; } 
s#ib_umem struct ib_umem { s#ib_ucontext * context ; s#mm_struct * owning_mm ; t#size_t length ; unsigned long address ; int page_shift ; t#u32 writable : 1 ; t#u32 hugetlb : 1 ; t#u32 is_odp : 1 ; s#work_struct work ; s#sg_table sg_head ; int nmap ; int npages ; } 
ib_umem_get s#ib_umem * ib_umem_get ( s#ib_ucontext * , unsigned long , t#size_t , int , int ) 
ib_umem_release void ib_umem_release ( s#ib_umem * ) 
ib_umem_page_count int ib_umem_page_count ( s#ib_umem * ) 
ib_umem_copy_from int ib_umem_copy_from ( void * , s#ib_umem * , t#size_t , t#size_t ) 

/* drivers/infiniband/core/umem_odp.o */
s##device_private
s##posix_acl
s##vfsmount
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##workqueue_struct
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##sec_path
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##kmem_cache
s##xfrm_state
s##lwtunnel_state
s##uncached_list
s##rt6_info
s##dn_route
s##prefix_info
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
s##prot_inuse
s##ipv4_devconf
s##xt_table
s##inet_hashinfo
s##rt6_statistics
s##fib6_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##eventfd_ctx
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sock_reuseport
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##ib_uverbs_file
s##uverbs_api_object
s##ib_pkey_cache
s##ib_gid_table
s##iw_cm_verbs
s##ib_mad_hdr
s##uverbs_attr_bundle
s##uverbs_object_tree_def
ib_alloc_odp_umem s#ib_umem_odp * ib_alloc_odp_umem ( s#ib_ucontext_per_mm * , unsigned long , t#size_t ) 
ib_umem_odp_map_dma_pages int ib_umem_odp_map_dma_pages ( s#ib_umem_odp * , t#u64 , t#u64 , t#u64 , unsigned long ) 
ib_umem_odp_unmap_dma_pages void ib_umem_odp_unmap_dma_pages ( s#ib_umem_odp * , t#u64 , t#u64 ) 

/* drivers/infiniband/core/umem_rbtree.o */
s##device_private
s##posix_acl
s##vfsmount
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##workqueue_struct
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##sec_path
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##kmem_cache
s##xfrm_state
s##lwtunnel_state
s##uncached_list
s##rt6_info
s##dn_route
s##prefix_info
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
s##prot_inuse
s##ipv4_devconf
s##xt_table
s##inet_hashinfo
s##rt6_statistics
s##fib6_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##eventfd_ctx
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sock_reuseport
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##ib_uverbs_file
s##uverbs_api_object
s##ib_pkey_cache
s##ib_gid_table
s##iw_cm_verbs
s##ib_mad_hdr
s##uverbs_attr_bundle
s##uverbs_object_tree_def
t#umem_call_back typedef int ( * umem_call_back ) ( s#ib_umem_odp * , t#u64 , t#u64 , void * ) 
rbt_ib_umem_for_each_in_range int rbt_ib_umem_for_each_in_range ( s#rb_root * , t#u64 , t#u64 , t#umem_call_back , void * ) 
rbt_ib_umem_lookup s#ib_umem_odp * rbt_ib_umem_lookup ( s#rb_root * , t#u64 , t#u64 ) 

/* drivers/infiniband/core/uverbs_cmd.o */
s##device_private
s##posix_acl
s##vfsmount
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##workqueue_struct
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##sec_path
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##kmem_cache
s##xfrm_state
s##lwtunnel_state
s##uncached_list
s##rt6_info
s##dn_route
s##prefix_info
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
s##prot_inuse
s##ipv4_devconf
s##xt_table
s##inet_hashinfo
s##rt6_statistics
s##fib6_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##eventfd_ctx
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##mtd_info
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sock_reuseport
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##ib_umem_odp
s##ib_pkey_cache
s##ib_gid_table
s##iw_cm_verbs
s#ib_uflow_resources struct ib_uflow_resources { t#size_t max ; t#size_t num ; t#size_t collection_num ; t#size_t counters_num ; s#ib_counters * * counters ; s#ib_flow_action * * collection ; } 
flow_resources_alloc s#ib_uflow_resources * flow_resources_alloc ( t#size_t ) 
ib_uverbs_flow_resources_free void ib_uverbs_flow_resources_free ( s#ib_uflow_resources * ) 
flow_resources_add void flow_resources_add ( s#ib_uflow_resources * , e#ib_flow_spec_type , void * ) 

/* drivers/infiniband/core/uverbs_ioctl.o */
s##device_private
s##posix_acl
s##vfsmount
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##workqueue_struct
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##sec_path
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##kmem_cache
s##xfrm_state
s##lwtunnel_state
s##uncached_list
s##rt6_info
s##dn_route
s##prefix_info
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
s##prot_inuse
s##ipv4_devconf
s##xt_table
s##inet_hashinfo
s##rt6_statistics
s##fib6_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##eventfd_ctx
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##mtd_info
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sock_reuseport
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##ib_umem_odp
s##ib_pkey_cache
s##ib_gid_table
s##iw_cm_verbs
s##ib_mad_hdr
_uverbs_alloc __attribute__ ( ( __malloc__ ) ) void * _uverbs_alloc ( s#uverbs_attr_bundle * , t#size_t , t#gfp_t ) 
uverbs_get_flags64 int uverbs_get_flags64 ( t#u64 * , const s#uverbs_attr_bundle * , t#size_t , t#u64 ) 
uverbs_get_flags32 int uverbs_get_flags32 ( t#u32 * , const s#uverbs_attr_bundle * , t#size_t , t#u64 ) 
uverbs_copy_to int uverbs_copy_to ( const s#uverbs_attr_bundle * , t#size_t , const void * , t#size_t ) 
_uverbs_get_const int _uverbs_get_const ( t#s64 * , const s#uverbs_attr_bundle * , t#size_t , t#s64 , t#u64 , t#s64 * ) 

/* drivers/infiniband/core/uverbs_main.o */
s##device_private
s##posix_acl
s##vfsmount
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##workqueue_struct
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##sec_path
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##kmem_cache
s##xfrm_state
s##lwtunnel_state
s##uncached_list
s##rt6_info
s##dn_route
s##prefix_info
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
s##prot_inuse
s##ipv4_devconf
s##xt_table
s##inet_hashinfo
s##rt6_statistics
s##fib6_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##eventfd_ctx
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##mtd_info
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sock_reuseport
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##ib_pkey_cache
s##ib_gid_table
s##iw_cm_verbs
s##ib_umem_odp
ib_uverbs_get_ucontext s#ib_ucontext * ib_uverbs_get_ucontext ( s#ib_uverbs_file * ) 
rdma_user_mmap_io int rdma_user_mmap_io ( s#ib_ucontext * , s#vm_area_struct * , unsigned long , unsigned long , t#pgprot_t ) 
rdma_user_mmap_page int rdma_user_mmap_page ( s#ib_ucontext * , s#vm_area_struct * , s#page * , unsigned long ) 

/* drivers/infiniband/core/uverbs_marshall.o */
s##device_private
s##posix_acl
s##vfsmount
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##workqueue_struct
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##sec_path
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##kmem_cache
s##xfrm_state
s##lwtunnel_state
s##uncached_list
s##rt6_info
s##dn_route
s##prefix_info
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##ip_mc_list
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
s##prot_inuse
s##xt_table
s##inet_hashinfo
s##rt6_statistics
s##fib6_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##eventfd_ctx
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sock_reuseport
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##ib_uverbs_file
s##ib_umem_odp
s##uverbs_api_object
s##ib_pkey_cache
s##ib_gid_table
s##iw_cm_verbs
s##uverbs_attr_bundle
s##uverbs_object_tree_def
s#ib_uverbs_global_route struct ib_uverbs_global_route { t#__u8 dgid [ 16 ] ; t#__u32 flow_label ; t#__u8 sgid_index ; t#__u8 hop_limit ; t#__u8 traffic_class ; t#__u8 reserved ; } 
s#ib_uverbs_ah_attr struct ib_uverbs_ah_attr { s#ib_uverbs_global_route grh ; t#__u16 dlid ; t#__u8 sl ; t#__u8 src_path_bits ; t#__u8 static_rate ; t#__u8 is_global ; t#__u8 port_num ; t#__u8 reserved ; } 
ib_copy_ah_attr_to_user void ib_copy_ah_attr_to_user ( s#ib_device * , s#ib_uverbs_ah_attr * , s#rdma_ah_attr * ) 
s#ib_uverbs_qp_attr struct ib_uverbs_qp_attr { t#__u32 qp_attr_mask ; t#__u32 qp_state ; t#__u32 cur_qp_state ; t#__u32 path_mtu ; t#__u32 path_mig_state ; t#__u32 qkey ; t#__u32 rq_psn ; t#__u32 sq_psn ; t#__u32 dest_qp_num ; t#__u32 qp_access_flags ; s#ib_uverbs_ah_attr ah_attr ; s#ib_uverbs_ah_attr alt_ah_attr ; t#__u32 max_send_wr ; t#__u32 max_recv_wr ; t#__u32 max_send_sge ; t#__u32 max_recv_sge ; t#__u32 max_inline_data ; t#__u16 pkey_index ; t#__u16 alt_pkey_index ; t#__u8 en_sqd_async_notify ; t#__u8 sq_draining ; t#__u8 max_rd_atomic ; t#__u8 max_dest_rd_atomic ; t#__u8 min_rnr_timer ; t#__u8 port_num ; t#__u8 timeout ; t#__u8 retry_cnt ; t#__u8 rnr_retry ; t#__u8 alt_port_num ; t#__u8 alt_timeout ; t#__u8 reserved [ 5 ] ; } 
ib_copy_qp_attr_to_user void ib_copy_qp_attr_to_user ( s#ib_device * , s#ib_uverbs_qp_attr * , s#ib_qp_attr * ) 
s#ib_user_path_rec struct ib_user_path_rec { t#__u8 dgid [ 16 ] ; t#__u8 sgid [ 16 ] ; t#__be16 dlid ; t#__be16 slid ; t#__u32 raw_traffic ; t#__be32 flow_label ; t#__u32 reversible ; t#__u32 mtu ; t#__be16 pkey ; t#__u8 hop_limit ; t#__u8 traffic_class ; t#__u8 numb_path ; t#__u8 sl ; t#__u8 mtu_selector ; t#__u8 rate_selector ; t#__u8 rate ; t#__u8 packet_life_time_selector ; t#__u8 packet_life_time ; t#__u8 preference ; } 
ib_copy_path_rec_to_user void ib_copy_path_rec_to_user ( s#ib_user_path_rec * , s#sa_path_rec * ) 
ib_copy_path_rec_from_user void ib_copy_path_rec_from_user ( s#sa_path_rec * , s#ib_user_path_rec * ) 

/* drivers/infiniband/core/uverbs_std_types.o */
s##device_private
s##posix_acl
s##vfsmount
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##workqueue_struct
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##sec_path
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##kmem_cache
s##xfrm_state
s##lwtunnel_state
s##uncached_list
s##rt6_info
s##dn_route
s##prefix_info
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
s##prot_inuse
s##ipv4_devconf
s##xt_table
s##inet_hashinfo
s##rt6_statistics
s##fib6_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##eventfd_ctx
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##mtd_info
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sock_reuseport
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##ib_umem_odp
s##ib_pkey_cache
s##ib_gid_table
s##iw_cm_verbs
s##ib_mad_hdr
uverbs_destroy_def_handler int uverbs_destroy_def_handler ( s#ib_uverbs_file * , s#uverbs_attr_bundle * ) 

/* drivers/infiniband/core/verbs.o */
ib_event_msg const char * __attribute__ ( ( __const__ ) ) ib_event_msg ( e#ib_event_type ) 
ib_wc_status_msg const char * __attribute__ ( ( __const__ ) ) ib_wc_status_msg ( e#ib_wc_status ) 
e#ib_rate enum ib_rate { IB_RATE_PORT_CURRENT = 0 , IB_RATE_2_5_GBPS = 2 , IB_RATE_5_GBPS = 5 , IB_RATE_10_GBPS = 3 , IB_RATE_20_GBPS = 6 , IB_RATE_30_GBPS = 4 , IB_RATE_40_GBPS = 7 , IB_RATE_60_GBPS = 8 , IB_RATE_80_GBPS = 9 , IB_RATE_120_GBPS = 10 , IB_RATE_14_GBPS = 11 , IB_RATE_56_GBPS = 12 , IB_RATE_112_GBPS = 13 , IB_RATE_168_GBPS = 14 , IB_RATE_25_GBPS = 15 , IB_RATE_100_GBPS = 16 , IB_RATE_200_GBPS = 17 , IB_RATE_300_GBPS = 18 } 
ib_rate_to_mult __attribute__ ( ( __const__ ) ) int ib_rate_to_mult ( e#ib_rate ) 
mult_to_ib_rate __attribute__ ( ( __const__ ) ) e#ib_rate mult_to_ib_rate ( int ) 
ib_rate_to_mbps __attribute__ ( ( __const__ ) ) int ib_rate_to_mbps ( e#ib_rate ) 
e#rdma_node_type enum rdma_node_type { RDMA_NODE_IB_CA = 1 , RDMA_NODE_IB_SWITCH , RDMA_NODE_IB_ROUTER , RDMA_NODE_RNIC , RDMA_NODE_USNIC , RDMA_NODE_USNIC_UDP , } 
rdma_node_get_transport __attribute__ ( ( __const__ ) ) e#rdma_transport_type rdma_node_get_transport ( e#rdma_node_type ) 
s##device_private
s##posix_acl
s##vfsmount
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##workqueue_struct
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##sec_path
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##kmem_cache
s##xfrm_state
s##lwtunnel_state
s##uncached_list
s##rt6_info
s##dn_route
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##ip_mc_list
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
s##prot_inuse
s##xt_table
s##inet_hashinfo
s##rt6_statistics
s##fib6_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##eventfd_ctx
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sock_reuseport
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##ib_uverbs_file
s##ib_umem_odp
s##uverbs_api_object
s##ib_pkey_cache
s##ib_gid_table
s##iw_cm_verbs
s##uverbs_attr_bundle
s##uverbs_object_tree_def
rdma_port_get_link_layer e#rdma_link_layer rdma_port_get_link_layer ( s#ib_device * , t#u8 ) 
__ib_alloc_pd s#ib_pd * __ib_alloc_pd ( s#ib_device * , unsigned int , const char * ) 
ib_dealloc_pd void ib_dealloc_pd ( s#ib_pd * ) 
rdma_copy_ah_attr void rdma_copy_ah_attr ( s#rdma_ah_attr * , const s#rdma_ah_attr * ) 
rdma_replace_ah_attr void rdma_replace_ah_attr ( s#rdma_ah_attr * , const s#rdma_ah_attr * ) 
rdma_move_ah_attr void rdma_move_ah_attr ( s#rdma_ah_attr * , s#rdma_ah_attr * ) 
rdma_create_ah s#ib_ah * rdma_create_ah ( s#ib_pd * , s#rdma_ah_attr * ) 
rdma_create_user_ah s#ib_ah * rdma_create_user_ah ( s#ib_pd * , s#rdma_ah_attr * , s#ib_udata * ) 
s#iphdr struct iphdr { t#__u8 version : 4 , ihl : 4 ; t#__u8 tos ; t#__be16 tot_len ; t#__be16 id ; t#__be16 frag_off ; t#__u8 ttl ; t#__u8 protocol ; t#__sum16 check ; t#__be32 saddr ; t#__be32 daddr ; } 
u#rdma_network_hdr union rdma_network_hdr { s#ib_grh ibgrh ; struct { t#u8 reserved [ 20 ] ; s#iphdr roce4grh ; } ; } 
ib_get_rdma_header_version int ib_get_rdma_header_version ( const u#rdma_network_hdr * ) 
ib_get_gids_from_rdma_hdr int ib_get_gids_from_rdma_hdr ( const u#rdma_network_hdr * , e#rdma_network_type , u#ib_gid * , u#ib_gid * ) 
ib_init_ah_attr_from_wc int ib_init_ah_attr_from_wc ( s#ib_device * , t#u8 , const s#ib_wc * , const s#ib_grh * , s#rdma_ah_attr * ) 
rdma_move_grh_sgid_attr void rdma_move_grh_sgid_attr ( s#rdma_ah_attr * , u#ib_gid * , t#u32 , t#u8 , t#u8 , const s#ib_gid_attr * ) 
rdma_destroy_ah_attr void rdma_destroy_ah_attr ( s#rdma_ah_attr * ) 
ib_create_ah_from_wc s#ib_ah * ib_create_ah_from_wc ( s#ib_pd * , const s#ib_wc * , const s#ib_grh * , t#u8 ) 
rdma_modify_ah int rdma_modify_ah ( s#ib_ah * , s#rdma_ah_attr * ) 
rdma_query_ah int rdma_query_ah ( s#ib_ah * , s#rdma_ah_attr * ) 
rdma_destroy_ah int rdma_destroy_ah ( s#ib_ah * ) 
ib_create_srq s#ib_srq * ib_create_srq ( s#ib_pd * , s#ib_srq_init_attr * ) 
ib_modify_srq int ib_modify_srq ( s#ib_srq * , s#ib_srq_attr * , e#ib_srq_attr_mask ) 
ib_query_srq int ib_query_srq ( s#ib_srq * , s#ib_srq_attr * ) 
ib_destroy_srq int ib_destroy_srq ( s#ib_srq * ) 
s#ib_qp_open_attr struct ib_qp_open_attr { void ( * event_handler ) ( s#ib_event * , void * ) ; void * qp_context ; t#u32 qp_num ; e#ib_qp_type qp_type ; } 
ib_open_qp s#ib_qp * ib_open_qp ( s#ib_xrcd * , s#ib_qp_open_attr * ) 
ib_create_qp s#ib_qp * ib_create_qp ( s#ib_pd * , s#ib_qp_init_attr * ) 
e#ib_qp_attr_mask enum ib_qp_attr_mask { IB_QP_STATE = 1 , IB_QP_CUR_STATE = ( 1 << 1 ) , IB_QP_EN_SQD_ASYNC_NOTIFY = ( 1 << 2 ) , IB_QP_ACCESS_FLAGS = ( 1 << 3 ) , IB_QP_PKEY_INDEX = ( 1 << 4 ) , IB_QP_PORT = ( 1 << 5 ) , IB_QP_QKEY = ( 1 << 6 ) , IB_QP_AV = ( 1 << 7 ) , IB_QP_PATH_MTU = ( 1 << 8 ) , IB_QP_TIMEOUT = ( 1 << 9 ) , IB_QP_RETRY_CNT = ( 1 << 10 ) , IB_QP_RNR_RETRY = ( 1 << 11 ) , IB_QP_RQ_PSN = ( 1 << 12 ) , IB_QP_MAX_QP_RD_ATOMIC = ( 1 << 13 ) , IB_QP_ALT_PATH = ( 1 << 14 ) , IB_QP_MIN_RNR_TIMER = ( 1 << 15 ) , IB_QP_SQ_PSN = ( 1 << 16 ) , IB_QP_MAX_DEST_RD_ATOMIC = ( 1 << 17 ) , IB_QP_PATH_MIG_STATE = ( 1 << 18 ) , IB_QP_CAP = ( 1 << 19 ) , IB_QP_DEST_QPN = ( 1 << 20 ) , IB_QP_RESERVED1 = ( 1 << 21 ) , IB_QP_RESERVED2 = ( 1 << 22 ) , IB_QP_RESERVED3 = ( 1 << 23 ) , IB_QP_RESERVED4 = ( 1 << 24 ) , IB_QP_RATE_LIMIT = ( 1 << 25 ) , } 
ib_modify_qp_is_ok t#bool ib_modify_qp_is_ok ( e#ib_qp_state , e#ib_qp_state , e#ib_qp_type , e#ib_qp_attr_mask ) 
ib_modify_qp_with_udata int ib_modify_qp_with_udata ( s#ib_qp * , s#ib_qp_attr * , int , s#ib_udata * ) 
ib_get_eth_speed int ib_get_eth_speed ( s#ib_device * , t#u8 , t#u8 * , t#u8 * ) 
ib_modify_qp int ib_modify_qp ( s#ib_qp * , s#ib_qp_attr * , int ) 
ib_query_qp int ib_query_qp ( s#ib_qp * , s#ib_qp_attr * , int , s#ib_qp_init_attr * ) 
ib_close_qp int ib_close_qp ( s#ib_qp * ) 
ib_destroy_qp int ib_destroy_qp ( s#ib_qp * ) 
__ib_create_cq s#ib_cq * __ib_create_cq ( s#ib_device * , t#ib_comp_handler , void ( * ) ( s#ib_event * , void * ) , void * , const s#ib_cq_init_attr * , const char * ) 
rdma_set_cq_moderation int rdma_set_cq_moderation ( s#ib_cq * , t#u16 , t#u16 ) 
ib_destroy_cq int ib_destroy_cq ( s#ib_cq * ) 
ib_resize_cq int ib_resize_cq ( s#ib_cq * , int ) 
ib_dereg_mr int ib_dereg_mr ( s#ib_mr * ) 
ib_alloc_mr s#ib_mr * ib_alloc_mr ( s#ib_pd * , e#ib_mr_type , t#u32 ) 
ib_alloc_fmr s#ib_fmr * ib_alloc_fmr ( s#ib_pd * , int , s#ib_fmr_attr * ) 
ib_unmap_fmr int ib_unmap_fmr ( s#list_head * ) 
ib_dealloc_fmr int ib_dealloc_fmr ( s#ib_fmr * ) 
ib_attach_mcast int ib_attach_mcast ( s#ib_qp * , u#ib_gid * , t#u16 ) 
ib_detach_mcast int ib_detach_mcast ( s#ib_qp * , u#ib_gid * , t#u16 ) 
__ib_alloc_xrcd s#ib_xrcd * __ib_alloc_xrcd ( s#ib_device * , const char * ) 
ib_dealloc_xrcd int ib_dealloc_xrcd ( s#ib_xrcd * ) 
ib_create_wq s#ib_wq * ib_create_wq ( s#ib_pd * , s#ib_wq_init_attr * ) 
ib_destroy_wq int ib_destroy_wq ( s#ib_wq * ) 
ib_modify_wq int ib_modify_wq ( s#ib_wq * , s#ib_wq_attr * , t#u32 ) 
ib_create_rwq_ind_table s#ib_rwq_ind_table * ib_create_rwq_ind_table ( s#ib_device * , s#ib_rwq_ind_table_init_attr * ) 
ib_destroy_rwq_ind_table int ib_destroy_rwq_ind_table ( s#ib_rwq_ind_table * ) 
ib_check_mr_status int ib_check_mr_status ( s#ib_mr * , t#u32 , s#ib_mr_status * ) 
ib_set_vf_link_state int ib_set_vf_link_state ( s#ib_device * , int , t#u8 , int ) 
ib_get_vf_config int ib_get_vf_config ( s#ib_device * , int , t#u8 , s#ifla_vf_info * ) 
ib_get_vf_stats int ib_get_vf_stats ( s#ib_device * , int , t#u8 , s#ifla_vf_stats * ) 
ib_set_vf_guid int ib_set_vf_guid ( s#ib_device * , int , t#u8 , t#u64 , int ) 
ib_map_mr_sg int ib_map_mr_sg ( s#ib_mr * , s#scatterlist * , int , unsigned int * , unsigned int ) 
ib_sg_to_pages int ib_sg_to_pages ( s#ib_mr * , s#scatterlist * , int , unsigned int * , int ( * ) ( s#ib_mr * , t#u64 ) ) 
ib_drain_sq void ib_drain_sq ( s#ib_qp * ) 
ib_drain_rq void ib_drain_rq ( s#ib_qp * ) 
ib_drain_qp void ib_drain_qp ( s#ib_qp * ) 
rdma_alloc_netdev s#net_device * rdma_alloc_netdev ( s#ib_device * , t#u8 , e#rdma_netdev_t , const char * , unsigned char , void ( * ) ( s#net_device * ) ) 
rdma_init_netdev int rdma_init_netdev ( s#ib_device * , t#u8 , e#rdma_netdev_t , const char * , unsigned char , void ( * ) ( s#net_device * ) , s#net_device * ) 

/* drivers/input/ff-core.o */
s##vfsmount
s##posix_acl
s##sock
s##seq_file
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##pipe_inode_info
s##writeback_control
s##bio_vec
s##swap_info_struct
s##device_private
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##fwnode_handle
s##iommu_group
s##iommu_fwspec
s##kmem_cache
s##mem_cgroup
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##input_mt
input_ff_upload int input_ff_upload ( s#input_dev * , s#ff_effect * , s#file * ) 
input_ff_erase int input_ff_erase ( s#input_dev * , int , s#file * ) 
input_ff_event int input_ff_event ( s#input_dev * , unsigned int , unsigned int , int ) 
input_ff_create int input_ff_create ( s#input_dev * , unsigned int ) 
input_ff_destroy void input_ff_destroy ( s#input_dev * ) 

/* drivers/input/input.o */
s##vfsmount
s##posix_acl
s##sock
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##pipe_inode_info
s##writeback_control
s##bio_vec
s##swap_info_struct
s##device_private
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##fwnode_handle
s##iommu_group
s##iommu_fwspec
s##kmem_cache
s##mem_cgroup
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s#input_mt_slot struct input_mt_slot { int abs [ 0x3d - 0x30 + 1 ] ; unsigned int frame ; unsigned int key ; } 
s#input_mt struct input_mt { int trkid ; int num_slots ; int slot ; unsigned int flags ; unsigned int frame ; int * red ; s#input_mt_slot slots [ ] ; } 
input_event void input_event ( s#input_dev * , unsigned int , unsigned int , int ) 
input_inject_event void input_inject_event ( s#input_handle * , unsigned int , unsigned int , int ) 
input_alloc_absinfo void input_alloc_absinfo ( s#input_dev * ) 
input_set_abs_params void input_set_abs_params ( s#input_dev * , unsigned int , int , int , int , int ) 
input_grab_device int input_grab_device ( s#input_handle * ) 
input_release_device void input_release_device ( s#input_handle * ) 
input_open_device int input_open_device ( s#input_handle * ) 
input_flush_device int input_flush_device ( s#input_handle * , s#file * ) 
input_close_device void input_close_device ( s#input_handle * ) 
input_scancode_to_scalar int input_scancode_to_scalar ( const s#input_keymap_entry * , unsigned int * ) 
input_get_keycode int input_get_keycode ( s#input_dev * , s#input_keymap_entry * ) 
input_set_keycode int input_set_keycode ( s#input_dev * , const s#input_keymap_entry * ) 
input_reset_device void input_reset_device ( s#input_dev * ) 
input_class extern s#class input_class 
input_allocate_device s#input_dev * input_allocate_device ( void ) 
devm_input_allocate_device s#input_dev * devm_input_allocate_device ( s#device * ) 
input_free_device void input_free_device ( s#input_dev * ) 
input_set_capability void input_set_capability ( s#input_dev * , unsigned int , unsigned int ) 
input_enable_softrepeat void input_enable_softrepeat ( s#input_dev * , int , int ) 
input_register_device int input_register_device ( s#input_dev * ) 
input_unregister_device void input_unregister_device ( s#input_dev * ) 
input_register_handler int input_register_handler ( s#input_handler * ) 
input_unregister_handler void input_unregister_handler ( s#input_handler * ) 
input_handler_for_each_handle int input_handler_for_each_handle ( s#input_handler * , void * , int ( * ) ( s#input_handle * , void * ) ) 
input_register_handle int input_register_handle ( s#input_handle * ) 
input_unregister_handle void input_unregister_handle ( s#input_handle * ) 
input_get_new_minor int input_get_new_minor ( int , unsigned int , t#bool ) 
input_free_minor void input_free_minor ( unsigned int ) 

/* drivers/input/input-compat.o */
t#__kernel_suseconds_t typedef t#__kernel_long_t __kernel_suseconds_t 
s#timeval struct timeval { t#__kernel_time_t tv_sec ; t#__kernel_suseconds_t tv_usec ; } 
s#input_event struct input_event { s#timeval time ; t#__u16 type ; t#__u16 code ; t#__s32 value ; } 
input_event_from_user int input_event_from_user ( const char * , s#input_event * ) 
input_event_to_user int input_event_to_user ( char * , const s#input_event * ) 
input_ff_effect_from_user int input_ff_effect_from_user ( const char * , t#size_t , s#ff_effect * ) 

/* drivers/input/input-mt.o */
s##vfsmount
s##posix_acl
s##module
s##writeback_control
s##kstatfs
s##seq_file
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##compat_timespec
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##mem_cgroup
s##uprobe
s##gs_cb
s##iov_iter
s##swap_info_struct
s##dev_pagemap
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##device_private
s##sock
s##kernfs_open_node
s##kernfs_iattrs
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##fwnode_handle
s##iommu_group
s##iommu_fwspec
input_mt_init_slots int input_mt_init_slots ( s#input_dev * , unsigned int , unsigned int ) 
input_mt_destroy_slots void input_mt_destroy_slots ( s#input_dev * ) 
input_mt_report_slot_state void input_mt_report_slot_state ( s#input_dev * , unsigned int , t#bool ) 
input_mt_report_finger_count void input_mt_report_finger_count ( s#input_dev * , int ) 
input_mt_report_pointer_emulation void input_mt_report_pointer_emulation ( s#input_dev * , t#bool ) 
input_mt_drop_unused void input_mt_drop_unused ( s#input_dev * ) 
input_mt_sync_frame void input_mt_sync_frame ( s#input_dev * ) 
s#input_mt_pos struct input_mt_pos { t#s16 x , y ; } 
input_mt_assign_slots int input_mt_assign_slots ( s#input_dev * , int * , const s#input_mt_pos * , int , int ) 
input_mt_get_slot_by_key int input_mt_get_slot_by_key ( s#input_dev * , int ) 

/* drivers/input/rmi4/rmi_2d_sensor.o */
s#rmi_2d_axis_alignment struct rmi_2d_axis_alignment { t#bool swap_axes ; t#bool flip_x ; t#bool flip_y ; t#u16 clip_x_low ; t#u16 clip_y_low ; t#u16 clip_x_high ; t#u16 clip_y_high ; t#u16 offset_x ; t#u16 offset_y ; t#u8 delta_x_threshold ; t#u8 delta_y_threshold ; } 
e#rmi_2d_sensor_object_type enum rmi_2d_sensor_object_type { RMI_2D_OBJECT_NONE , RMI_2D_OBJECT_FINGER , RMI_2D_OBJECT_STYLUS , RMI_2D_OBJECT_PALM , RMI_2D_OBJECT_UNCLASSIFIED , } 
s#rmi_2d_sensor_abs_object struct rmi_2d_sensor_abs_object { e#rmi_2d_sensor_object_type type ; int mt_tool ; t#u16 x ; t#u16 y ; t#u8 z ; t#u8 wx ; t#u8 wy ; } 
e#rmi_sensor_type enum rmi_sensor_type { rmi_sensor_default = 0 , rmi_sensor_touchscreen , rmi_sensor_touchpad } 
s##vfsmount
s##posix_acl
s##sock
s##seq_file
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##pipe_inode_info
s##writeback_control
s##bio_vec
s##swap_info_struct
s##device_private
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##iommu_group
s##iommu_fwspec
s##kmem_cache
s##mem_cgroup
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s#rmi_function_descriptor struct rmi_function_descriptor { t#u16 query_base_addr ; t#u16 command_base_addr ; t#u16 control_base_addr ; t#u16 data_base_addr ; t#u8 interrupt_source_count ; t#u8 function_number ; t#u8 function_version ; } 
s#rmi_driver struct rmi_driver { s#device_driver driver ; int ( * reset_handler ) ( s#rmi_device * ) ; int ( * clear_irq_bits ) ( s#rmi_device * , unsigned long * ) ; int ( * set_irq_bits ) ( s#rmi_device * , unsigned long * ) ; int ( * store_productid ) ( s#rmi_device * ) ; int ( * set_input_params ) ( s#rmi_device * , s#input_dev * ) ; void * data ; } 
s#rmi_transport_ops struct rmi_transport_ops { int ( * write_block ) ( s#rmi_transport_dev * , t#u16 , const void * , t#size_t ) ; int ( * read_block ) ( s#rmi_transport_dev * , t#u16 , void * , t#size_t ) ; int ( * reset ) ( s#rmi_transport_dev * , t#u16 ) ; } 
s#rmi_device_platform_data_spi struct rmi_device_platform_data_spi { t#u32 block_delay_us ; t#u32 split_read_block_delay_us ; t#u32 read_delay_us ; t#u32 write_delay_us ; t#u32 split_read_byte_delay_us ; t#u32 pre_delay_us ; t#u32 post_delay_us ; t#u8 bits_per_word ; t#u16 mode ; void * cs_assert_data ; int ( * cs_assert ) ( const void * , const t#bool ) ; } 
s#rmi_2d_sensor_platform_data struct rmi_2d_sensor_platform_data { s#rmi_2d_axis_alignment axis_align ; e#rmi_sensor_type sensor_type ; int x_mm ; int y_mm ; int disable_report_mask ; t#u16 rezero_wait ; t#bool topbuttonpad ; t#bool kernel_tracking ; int dmax ; int dribble ; int palm_detect ; } 
e#rmi_reg_state enum rmi_reg_state { RMI_REG_STATE_DEFAULT = 0 , RMI_REG_STATE_OFF = 1 , RMI_REG_STATE_ON = 2 } 
s#rmi_f01_power_management struct rmi_f01_power_management { e#rmi_reg_state nosleep ; t#u8 wakeup_threshold ; t#u8 doze_holdoff ; t#u8 doze_interval ; } 
s#rmi_f30_data struct rmi_f30_data { t#bool buttonpad ; t#bool trackstick_buttons ; t#bool disable ; } 
s#rmi_device_platform_data struct rmi_device_platform_data { int reset_delay_ms ; int irq ; s#rmi_device_platform_data_spi spi_data ; s#rmi_2d_sensor_platform_data sensor_pdata ; s#rmi_f01_power_management power_management ; s#rmi_f30_data f30_data ; } 
s#rmi_transport_dev struct rmi_transport_dev { s#device * dev ; s#rmi_device * rmi_dev ; const char * proto_name ; const s#rmi_transport_ops * ops ; s#rmi_device_platform_data pdata ; s#input_dev * input ; } 
s#rmi_device struct rmi_device { s#device dev ; int number ; s#rmi_driver * driver ; s#rmi_transport_dev * xport ; } 
s#rmi_function struct rmi_function { s#rmi_function_descriptor fd ; s#rmi_device * rmi_dev ; s#device dev ; s#list_head node ; unsigned int num_of_irqs ; unsigned int irq_pos ; unsigned long irq_mask [ ] ; } 
s#rmi_2d_sensor struct rmi_2d_sensor { s#rmi_2d_axis_alignment axis_align ; s#input_mt_pos * tracking_pos ; int * tracking_slots ; t#bool kernel_tracking ; s#rmi_2d_sensor_abs_object * objs ; int dmax ; t#u16 min_x ; t#u16 max_x ; t#u16 min_y ; t#u16 max_y ; t#u8 nbr_fingers ; t#u8 * data_pkt ; int pkt_size ; int attn_size ; t#bool topbuttonpad ; e#rmi_sensor_type sensor_type ; s#input_dev * input ; s#rmi_function * fn ; char input_phys [ 32 ] ; t#u8 report_abs ; t#u8 report_rel ; t#u8 x_mm ; t#u8 y_mm ; e#rmi_reg_state dribble ; e#rmi_reg_state palm_detect ; } 
rmi_2d_sensor_abs_process void rmi_2d_sensor_abs_process ( s#rmi_2d_sensor * , s#rmi_2d_sensor_abs_object * , int ) 
rmi_2d_sensor_abs_report void rmi_2d_sensor_abs_report ( s#rmi_2d_sensor * , s#rmi_2d_sensor_abs_object * , int ) 
rmi_2d_sensor_rel_report void rmi_2d_sensor_rel_report ( s#rmi_2d_sensor * , int , int ) 
rmi_2d_sensor_set_input_params void rmi_2d_sensor_set_input_params ( s#rmi_2d_sensor * ) 
rmi_2d_sensor_configure_input int rmi_2d_sensor_configure_input ( s#rmi_function * , s#rmi_2d_sensor * ) 
rmi_2d_sensor_of_probe int rmi_2d_sensor_of_probe ( s#device * , s#rmi_2d_sensor_platform_data * ) 

/* drivers/input/rmi4/rmi_bus.o */
s##device_private
s##sock
s##seq_file
s##vfsmount
s##posix_acl
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##iommu_group
s##iommu_fwspec
rmi_dbg void rmi_dbg ( int , s#device * , const char * , ... ) 
s##input_mt
rmi_register_transport_device int rmi_register_transport_device ( s#rmi_transport_dev * ) 
rmi_unregister_transport_device void rmi_unregister_transport_device ( s#rmi_transport_dev * ) 
s#rmi_function_handler struct rmi_function_handler { s#device_driver driver ; t#u8 func ; int ( * probe ) ( s#rmi_function * ) ; void ( * remove ) ( s#rmi_function * ) ; int ( * config ) ( s#rmi_function * ) ; int ( * reset ) ( s#rmi_function * ) ; int ( * attention ) ( s#rmi_function * , unsigned long * ) ; int ( * suspend ) ( s#rmi_function * ) ; int ( * resume ) ( s#rmi_function * ) ; } 
__rmi_register_function_handler int __rmi_register_function_handler ( s#rmi_function_handler * , s#module * , const char * ) 
rmi_unregister_function_handler void rmi_unregister_function_handler ( s#rmi_function_handler * ) 
rmi_of_property_read_u32 int rmi_of_property_read_u32 ( s#device * , t#u32 * , const char * , t#bool ) 

/* drivers/input/rmi4/rmi_driver.o */
s##device_private
s##sock
s##seq_file
s##vfsmount
s##posix_acl
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##iommu_group
s##iommu_fwspec
s##input_mt
rmi_set_attn_data void rmi_set_attn_data ( s#rmi_device * , unsigned long , void * , t#size_t ) 
rmi_driver_suspend int rmi_driver_suspend ( s#rmi_device * , t#bool ) 
rmi_driver_resume int rmi_driver_resume ( s#rmi_device * , t#bool ) 

/* drivers/iommu/iommu.o */
s##iommu_group
iommu_get_group_resv_regions extern int iommu_get_group_resv_regions ( s#iommu_group * , s#list_head * ) 
iommu_group_alloc extern s#iommu_group * iommu_group_alloc ( void ) 
iommu_group_get_by_id extern s#iommu_group * iommu_group_get_by_id ( int ) 
iommu_group_get_iommudata extern void * iommu_group_get_iommudata ( s#iommu_group * ) 
iommu_group_set_iommudata extern void iommu_group_set_iommudata ( s#iommu_group * , void * , void ( * ) ( void * ) ) 
iommu_group_set_name extern int iommu_group_set_name ( s#iommu_group * , const char * ) 
s##device_private
s##sock
s##seq_file
s##vfsmount
s##posix_acl
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##driver_private
e#iommu_cap enum iommu_cap { IOMMU_CAP_CACHE_COHERENCY , IOMMU_CAP_INTR_REMAP , IOMMU_CAP_NOEXEC , } 
t#iommu_fault_handler_t typedef int ( * iommu_fault_handler_t ) ( s#iommu_domain * , s#device * , unsigned long , int , void * ) 
s#iommu_domain_geometry struct iommu_domain_geometry { t#dma_addr_t aperture_start ; t#dma_addr_t aperture_end ; t#bool force_aperture ; } 
s#iommu_domain struct iommu_domain { unsigned type ; const s#iommu_ops * ops ; unsigned long pgsize_bitmap ; t#iommu_fault_handler_t handler ; void * handler_token ; s#iommu_domain_geometry geometry ; void * iova_cookie ; } 
e#iommu_attr enum iommu_attr { DOMAIN_ATTR_GEOMETRY , DOMAIN_ATTR_PAGING , DOMAIN_ATTR_WINDOWS , DOMAIN_ATTR_FSL_PAMU_STASH , DOMAIN_ATTR_FSL_PAMU_ENABLE , DOMAIN_ATTR_FSL_PAMUV1 , DOMAIN_ATTR_NESTING , DOMAIN_ATTR_DMA_USE_FLUSH_QUEUE , DOMAIN_ATTR_MAX , } 
e#iommu_resv_type enum iommu_resv_type { IOMMU_RESV_DIRECT , IOMMU_RESV_RESERVED , IOMMU_RESV_MSI , IOMMU_RESV_SW_MSI , } 
s#iommu_resv_region struct iommu_resv_region { s#list_head list ; t#phys_addr_t start ; t#size_t length ; int prot ; e#iommu_resv_type type ; } 
s#of_phandle_args struct of_phandle_args { s#device_node * np ; int args_count ; t#uint32_t args [ 16 ] ; } 
s#iommu_ops struct iommu_ops { t#bool ( * capable ) ( e#iommu_cap ) ; s#iommu_domain * ( * domain_alloc ) ( unsigned ) ; void ( * domain_free ) ( s#iommu_domain * ) ; int ( * attach_dev ) ( s#iommu_domain * , s#device * ) ; void ( * detach_dev ) ( s#iommu_domain * , s#device * ) ; int ( * map ) ( s#iommu_domain * , unsigned long , t#phys_addr_t , t#size_t , int ) ; t#size_t ( * unmap ) ( s#iommu_domain * , unsigned long , t#size_t ) ; t#size_t ( * map_sg ) ( s#iommu_domain * , unsigned long , s#scatterlist * , unsigned int , int ) ; void ( * flush_iotlb_all ) ( s#iommu_domain * ) ; void ( * iotlb_range_add ) ( s#iommu_domain * , unsigned long , t#size_t ) ; void ( * iotlb_sync ) ( s#iommu_domain * ) ; t#phys_addr_t ( * iova_to_phys ) ( s#iommu_domain * , t#dma_addr_t ) ; int ( * add_device ) ( s#device * ) ; void ( * remove_device ) ( s#device * ) ; s#iommu_group * ( * device_group ) ( s#device * ) ; int ( * domain_get_attr ) ( s#iommu_domain * , e#iommu_attr , void * ) ; int ( * domain_set_attr ) ( s#iommu_domain * , e#iommu_attr , void * ) ; void ( * get_resv_regions ) ( s#device * , s#list_head * ) ; void ( * put_resv_regions ) ( s#device * , s#list_head * ) ; void ( * apply_resv_region ) ( s#device * , s#iommu_domain * , s#iommu_resv_region * ) ; int ( * domain_window_enable ) ( s#iommu_domain * , t#u32 , t#phys_addr_t , t#u64 , int ) ; void ( * domain_window_disable ) ( s#iommu_domain * , t#u32 ) ; int ( * domain_set_windows ) ( s#iommu_domain * , t#u32 ) ; t#u32 ( * domain_get_windows ) ( s#iommu_domain * ) ; int ( * of_xlate ) ( s#device * , s#of_phandle_args * ) ; t#bool ( * is_attach_deferred ) ( s#iommu_domain * , s#device * ) ; unsigned long pgsize_bitmap ; } 
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s#iommu_fwspec struct iommu_fwspec { const s#iommu_ops * ops ; s#fwnode_handle * iommu_fwnode ; void * iommu_priv ; unsigned int num_ids ; t#u32 ids [ 1 ] ; } 
iommu_group_add_device extern int iommu_group_add_device ( s#iommu_group * , s#device * ) 
iommu_group_remove_device extern void iommu_group_remove_device ( s#device * ) 
iommu_group_for_each_dev extern int iommu_group_for_each_dev ( s#iommu_group * , void * , int ( * ) ( s#device * , void * ) ) 
iommu_group_get extern s#iommu_group * iommu_group_get ( s#device * ) 
iommu_group_put extern void iommu_group_put ( s#iommu_group * ) 
iommu_group_register_notifier extern int iommu_group_register_notifier ( s#iommu_group * , s#notifier_block * ) 
iommu_group_unregister_notifier extern int iommu_group_unregister_notifier ( s#iommu_group * , s#notifier_block * ) 
iommu_group_id extern int iommu_group_id ( s#iommu_group * ) 
bus_set_iommu extern int bus_set_iommu ( s#bus_type * , const s#iommu_ops * ) 
iommu_present extern t#bool iommu_present ( s#bus_type * ) 
iommu_capable extern t#bool iommu_capable ( s#bus_type * , e#iommu_cap ) 
iommu_set_fault_handler extern void iommu_set_fault_handler ( s#iommu_domain * , t#iommu_fault_handler_t , void * ) 
iommu_domain_alloc extern s#iommu_domain * iommu_domain_alloc ( s#bus_type * ) 
iommu_domain_free extern void iommu_domain_free ( s#iommu_domain * ) 
iommu_attach_device extern int iommu_attach_device ( s#iommu_domain * , s#device * ) 
iommu_detach_device extern void iommu_detach_device ( s#iommu_domain * , s#device * ) 
iommu_get_domain_for_dev extern s#iommu_domain * iommu_get_domain_for_dev ( s#device * ) 
iommu_attach_group extern int iommu_attach_group ( s#iommu_domain * , s#iommu_group * ) 
iommu_detach_group extern void iommu_detach_group ( s#iommu_domain * , s#iommu_group * ) 
iommu_iova_to_phys extern t#phys_addr_t iommu_iova_to_phys ( s#iommu_domain * , t#dma_addr_t ) 
iommu_map extern int iommu_map ( s#iommu_domain * , unsigned long , t#phys_addr_t , t#size_t , int ) 
iommu_unmap extern t#size_t iommu_unmap ( s#iommu_domain * , unsigned long , t#size_t ) 
iommu_unmap_fast extern t#size_t iommu_unmap_fast ( s#iommu_domain * , unsigned long , t#size_t ) 
default_iommu_map_sg extern t#size_t default_iommu_map_sg ( s#iommu_domain * , unsigned long , s#scatterlist * , unsigned int , int ) 
iommu_domain_window_enable extern int iommu_domain_window_enable ( s#iommu_domain * , t#u32 , t#phys_addr_t , t#u64 , int ) 
iommu_domain_window_disable extern void iommu_domain_window_disable ( s#iommu_domain * , t#u32 ) 
report_iommu_fault extern int report_iommu_fault ( s#iommu_domain * , s#device * , unsigned long , int ) 
iommu_domain_get_attr extern int iommu_domain_get_attr ( s#iommu_domain * , e#iommu_attr , void * ) 
iommu_domain_set_attr extern int iommu_domain_set_attr ( s#iommu_domain * , e#iommu_attr , void * ) 
iommu_default_passthrough extern t#bool iommu_default_passthrough ( void ) 
iommu_fwspec_init int iommu_fwspec_init ( s#device * , s#fwnode_handle * , const s#iommu_ops * ) 
iommu_fwspec_free void iommu_fwspec_free ( s#device * ) 
iommu_fwspec_add_ids int iommu_fwspec_add_ids ( s#device * , t#u32 * , int ) 

/* drivers/iommu/iommu-traces.o */
s##static_key_mod
__tracepoint_add_device_to_group extern s#tracepoint __tracepoint_add_device_to_group 
__tracepoint_remove_device_from_group extern s#tracepoint __tracepoint_remove_device_from_group 
__tracepoint_attach_device_to_domain extern s#tracepoint __tracepoint_attach_device_to_domain 
__tracepoint_detach_device_from_domain extern s#tracepoint __tracepoint_detach_device_from_domain 
__tracepoint_map extern s#tracepoint __tracepoint_map 
__tracepoint_unmap extern s#tracepoint __tracepoint_unmap 
__tracepoint_io_page_fault extern s#tracepoint __tracepoint_io_page_fault 

/* drivers/lightnvm/core.o */
s##blk_mq_ctx
s##device_private
s##sock
s##seq_file
s##vfsmount
s##posix_acl
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##reclaim_state
s##workqueue_struct
s##cgroup_subsys_state
s##kmem_cache
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##swap_info_struct
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##mtd_info
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##hd_geometry
s##pr_ops
s##timer_rand_state
s##disk_events
s##badblocks
s##blkcg_gq
s##blk_mq_hw_ctx
s##blk_mq_alloc_data
s##blk_mq_debugfs_attr
s##blk_queue_stats
s##rq_wb
s##blk_mq_ops
s##blk_stat_callback
s##blk_trace
s##blk_flush_queue
s##bsg_job
s##throtl_data
s##blk_mq_tag_set
t#nvm_tgt_make_rq_fn typedef t#blk_qc_t ( nvm_tgt_make_rq_fn ) ( s#request_queue * , s#bio * ) 
t#nvm_tgt_capacity_fn typedef t#sector_t ( nvm_tgt_capacity_fn ) ( void * ) 
s#nvm_addrf struct nvm_addrf { t#u8 ch_len ; t#u8 lun_len ; t#u8 chk_len ; t#u8 sec_len ; t#u8 rsv_len [ 2 ] ; t#u8 ch_offset ; t#u8 lun_offset ; t#u8 chk_offset ; t#u8 sec_offset ; t#u8 rsv_off [ 2 ] ; t#u64 ch_mask ; t#u64 lun_mask ; t#u64 chk_mask ; t#u64 sec_mask ; t#u64 rsv_mask [ 2 ] ; } 
s#nvm_geo struct nvm_geo { t#u8 major_ver_id ; t#u8 minor_ver_id ; t#u8 version ; int num_ch ; int num_lun ; int all_luns ; int all_chunks ; int op ; t#sector_t total_secs ; t#u32 num_chk ; t#u32 clba ; t#u16 csecs ; t#u16 sos ; t#u32 ws_min ; t#u32 ws_opt ; t#u32 mw_cunits ; t#u32 maxoc ; t#u32 maxocpu ; t#u32 mccap ; t#u32 trdt ; t#u32 trdm ; t#u32 tprt ; t#u32 tprm ; t#u32 tbet ; t#u32 tbem ; s#nvm_addrf addrf ; t#u8 vmnt ; t#u32 cap ; t#u32 dom ; t#u8 mtype ; t#u8 fmtype ; t#u16 cpar ; t#u32 mpos ; t#u8 num_pln ; t#u8 pln_mode ; t#u16 num_pg ; t#u16 fpg_sz ; } 
s#ppa_addr struct ppa_addr { union { struct { t#u64 ch : ( 8 ) ; t#u64 lun : ( 8 ) ; t#u64 blk : ( 16 ) ; t#u64 reserved : ( 32 ) ; } a ; struct { t#u64 ch : ( 8 ) ; t#u64 lun : ( 8 ) ; t#u64 blk : ( 16 ) ; t#u64 pg : ( 16 ) ; t#u64 pl : ( 4 ) ; t#u64 sec : ( 4 ) ; t#u64 reserved : ( 8 ) ; } g ; struct { t#u64 grp : ( 8 ) ; t#u64 pu : ( 8 ) ; t#u64 chk : ( 16 ) ; t#u64 sec : ( 24 ) ; t#u64 reserved : ( 8 ) ; } m ; struct { t#u64 line : 63 ; t#u64 is_cached : 1 ; } c ; t#u64 ppa ; } ; } 
t#nvm_id_fn typedef int ( nvm_id_fn ) ( s#nvm_dev * ) 
t#nvm_op_bb_tbl_fn typedef int ( nvm_op_bb_tbl_fn ) ( s#nvm_dev * , s#ppa_addr , t#u8 * ) 
t#nvm_op_set_bb_fn typedef int ( nvm_op_set_bb_fn ) ( s#nvm_dev * , s#ppa_addr * , int , int ) 
s#nvm_chk_meta struct nvm_chk_meta { t#u8 state ; t#u8 type ; t#u8 wi ; t#u8 rsvd [ 5 ] ; t#u64 slba ; t#u64 cnlb ; t#u64 wp ; } 
t#nvm_get_chk_meta_fn typedef int ( nvm_get_chk_meta_fn ) ( s#nvm_dev * , s#nvm_chk_meta * , t#sector_t , int ) 
t#nvm_end_io_fn typedef void ( nvm_end_io_fn ) ( s#nvm_rq * ) 
s#nvm_rq struct nvm_rq { s#nvm_tgt_dev * dev ; s#bio * bio ; union { s#ppa_addr ppa_addr ; t#dma_addr_t dma_ppa_list ; } ; s#ppa_addr * ppa_list ; void * meta_list ; t#dma_addr_t dma_meta_list ; s#completion * wait ; t#nvm_end_io_fn * end_io ; t#uint8_t opcode ; t#uint16_t nr_ppas ; t#uint16_t flags ; t#u64 ppa_status ; int error ; void * private ; } 
t#nvm_submit_io_fn typedef int ( nvm_submit_io_fn ) ( s#nvm_dev * , s#nvm_rq * ) 
t#nvm_submit_io_sync_fn typedef int ( nvm_submit_io_sync_fn ) ( s#nvm_dev * , s#nvm_rq * ) 
t#nvm_create_dma_pool_fn typedef void * ( nvm_create_dma_pool_fn ) ( s#nvm_dev * , char * ) 
t#nvm_destroy_dma_pool_fn typedef void ( nvm_destroy_dma_pool_fn ) ( void * ) 
t#nvm_dev_dma_alloc_fn typedef void * ( nvm_dev_dma_alloc_fn ) ( s#nvm_dev * , void * , t#gfp_t , t#dma_addr_t * ) 
t#nvm_dev_dma_free_fn typedef void ( nvm_dev_dma_free_fn ) ( void * , void * , t#dma_addr_t ) 
s#nvm_dev_ops struct nvm_dev_ops { t#nvm_id_fn * identity ; t#nvm_op_bb_tbl_fn * get_bb_tbl ; t#nvm_op_set_bb_fn * set_bb_tbl ; t#nvm_get_chk_meta_fn * get_chk_meta ; t#nvm_submit_io_fn * submit_io ; t#nvm_submit_io_sync_fn * submit_io_sync ; t#nvm_create_dma_pool_fn * create_dma_pool ; t#nvm_destroy_dma_pool_fn * destroy_dma_pool ; t#nvm_dev_dma_alloc_fn * dev_dma_alloc ; t#nvm_dev_dma_free_fn * dev_dma_free ; } 
s#nvm_dev struct nvm_dev { s#nvm_dev_ops * ops ; s#list_head devices ; s#nvm_geo geo ; unsigned long * lun_map ; void * dma_pool ; s#request_queue * q ; char name [ 32 ] ; void * private_data ; void * rmap ; s#mutex mlock ; t#spinlock_t lock ; s#list_head area_list ; s#list_head targets ; } 
s#nvm_tgt_dev struct nvm_tgt_dev { s#nvm_geo geo ; s#ppa_addr * luns ; s#request_queue * q ; s#nvm_dev * parent ; void * map ; } 
t#nvm_tgt_init_fn typedef void * ( nvm_tgt_init_fn ) ( s#nvm_tgt_dev * , s#gendisk * , int ) 
t#nvm_tgt_exit_fn typedef void ( nvm_tgt_exit_fn ) ( void * , t#bool ) 
t#nvm_tgt_sysfs_init_fn typedef int ( nvm_tgt_sysfs_init_fn ) ( s#gendisk * ) 
t#nvm_tgt_sysfs_exit_fn typedef void ( nvm_tgt_sysfs_exit_fn ) ( s#gendisk * ) 
s#nvm_tgt_type struct nvm_tgt_type { const char * name ; unsigned int version [ 3 ] ; t#nvm_tgt_make_rq_fn * make_rq ; t#nvm_tgt_capacity_fn * capacity ; t#nvm_tgt_init_fn * init ; t#nvm_tgt_exit_fn * exit ; t#nvm_tgt_sysfs_init_fn * sysfs_init ; t#nvm_tgt_sysfs_exit_fn * sysfs_exit ; s#list_head list ; s#module * owner ; } 
nvm_register_tgt_type extern int nvm_register_tgt_type ( s#nvm_tgt_type * ) 
nvm_unregister_tgt_type extern void nvm_unregister_tgt_type ( s#nvm_tgt_type * ) 
nvm_dev_dma_alloc extern void * nvm_dev_dma_alloc ( s#nvm_dev * , t#gfp_t , t#dma_addr_t * ) 
nvm_dev_dma_free extern void nvm_dev_dma_free ( s#nvm_dev * , void * , t#dma_addr_t ) 
nvm_get_chunk_meta extern int nvm_get_chunk_meta ( s#nvm_tgt_dev * , s#nvm_chk_meta * , s#ppa_addr , int ) 
nvm_set_tgt_bb_tbl extern int nvm_set_tgt_bb_tbl ( s#nvm_tgt_dev * , s#ppa_addr * , int , int ) 
nvm_submit_io extern int nvm_submit_io ( s#nvm_tgt_dev * , s#nvm_rq * ) 
nvm_submit_io_sync extern int nvm_submit_io_sync ( s#nvm_tgt_dev * , s#nvm_rq * ) 
nvm_end_io extern void nvm_end_io ( s#nvm_rq * ) 
nvm_bb_tbl_fold extern int nvm_bb_tbl_fold ( s#nvm_dev * , t#u8 * , int ) 
nvm_get_tgt_bb_tbl extern int nvm_get_tgt_bb_tbl ( s#nvm_tgt_dev * , s#ppa_addr , t#u8 * ) 
nvm_alloc_dev extern s#nvm_dev * nvm_alloc_dev ( int ) 
nvm_register extern int nvm_register ( s#nvm_dev * ) 
nvm_unregister extern void nvm_unregister ( s#nvm_dev * ) 

/* drivers/md/bcache/trace.o */
s##static_key_mod
__tracepoint_bcache_request_start extern s#tracepoint __tracepoint_bcache_request_start 
__tracepoint_bcache_request_end extern s#tracepoint __tracepoint_bcache_request_end 
__tracepoint_bcache_bypass_sequential extern s#tracepoint __tracepoint_bcache_bypass_sequential 
__tracepoint_bcache_bypass_congested extern s#tracepoint __tracepoint_bcache_bypass_congested 
__tracepoint_bcache_read extern s#tracepoint __tracepoint_bcache_read 
__tracepoint_bcache_write extern s#tracepoint __tracepoint_bcache_write 
__tracepoint_bcache_read_retry extern s#tracepoint __tracepoint_bcache_read_retry 
__tracepoint_bcache_cache_insert extern s#tracepoint __tracepoint_bcache_cache_insert 
__tracepoint_bcache_journal_replay_key extern s#tracepoint __tracepoint_bcache_journal_replay_key 
__tracepoint_bcache_journal_write extern s#tracepoint __tracepoint_bcache_journal_write 
__tracepoint_bcache_journal_full extern s#tracepoint __tracepoint_bcache_journal_full 
__tracepoint_bcache_journal_entry_full extern s#tracepoint __tracepoint_bcache_journal_entry_full 
__tracepoint_bcache_btree_cache_cannibalize extern s#tracepoint __tracepoint_bcache_btree_cache_cannibalize 
__tracepoint_bcache_btree_read extern s#tracepoint __tracepoint_bcache_btree_read 
__tracepoint_bcache_btree_write extern s#tracepoint __tracepoint_bcache_btree_write 
__tracepoint_bcache_btree_node_alloc extern s#tracepoint __tracepoint_bcache_btree_node_alloc 
__tracepoint_bcache_btree_node_alloc_fail extern s#tracepoint __tracepoint_bcache_btree_node_alloc_fail 
__tracepoint_bcache_btree_node_free extern s#tracepoint __tracepoint_bcache_btree_node_free 
__tracepoint_bcache_btree_gc_coalesce extern s#tracepoint __tracepoint_bcache_btree_gc_coalesce 
__tracepoint_bcache_gc_start extern s#tracepoint __tracepoint_bcache_gc_start 
__tracepoint_bcache_gc_end extern s#tracepoint __tracepoint_bcache_gc_end 
__tracepoint_bcache_gc_copy extern s#tracepoint __tracepoint_bcache_gc_copy 
__tracepoint_bcache_gc_copy_collision extern s#tracepoint __tracepoint_bcache_gc_copy_collision 
__tracepoint_bcache_btree_insert_key extern s#tracepoint __tracepoint_bcache_btree_insert_key 
__tracepoint_bcache_btree_node_split extern s#tracepoint __tracepoint_bcache_btree_node_split 
__tracepoint_bcache_btree_node_compact extern s#tracepoint __tracepoint_bcache_btree_node_compact 
__tracepoint_bcache_btree_set_root extern s#tracepoint __tracepoint_bcache_btree_set_root 
__tracepoint_bcache_invalidate extern s#tracepoint __tracepoint_bcache_invalidate 
__tracepoint_bcache_alloc_fail extern s#tracepoint __tracepoint_bcache_alloc_fail 
__tracepoint_bcache_writeback extern s#tracepoint __tracepoint_bcache_writeback 
__tracepoint_bcache_writeback_collision extern s#tracepoint __tracepoint_bcache_writeback_collision 

/* drivers/md/dm.o */
s#ratelimit_state struct ratelimit_state { t#raw_spinlock_t lock ; int interval ; int burst ; int printed ; int missed ; unsigned long begin ; unsigned long flags ; } 
dm_ratelimit_state s#ratelimit_state dm_ratelimit_state 
s##device_private
s##sock
s##vfsmount
s##posix_acl
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##workqueue_struct
s##bpf_prog_array
s##cgroup_taskset
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##pipe_inode_info
s##swap_info_struct
s##kmem_cache
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##mmu_notifier_mm
s##xol_area
s##pid_namespace
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##reclaim_state
s##blk_mq_ctx
s##blk_flush_queue
s##blk_mq_tags
s##blk_mq_alloc_data
s##blk_mq_debugfs_attr
s##blk_queue_stats
s##rq_wb
s##blk_stat_callback
s##bsg_job
s##throtl_data
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##mtd_info
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##timer_rand_state
s##disk_events
s##badblocks
dm_per_bio_data void * dm_per_bio_data ( s#bio * , t#size_t ) 
dm_bio_from_per_bio_data s#bio * dm_bio_from_per_bio_data ( void * , t#size_t ) 
dm_bio_get_target_bio_nr unsigned dm_bio_get_target_bio_nr ( const s#bio * ) 
dm_get_reserved_bio_based_ios unsigned dm_get_reserved_bio_based_ios ( void ) 
e#dm_queue_mode enum dm_queue_mode { DM_TYPE_NONE = 0 , DM_TYPE_BIO_BASED = 1 , DM_TYPE_REQUEST_BASED = 2 , DM_TYPE_MQ_REQUEST_BASED = 3 , DM_TYPE_DAX_BIO_BASED = 4 , DM_TYPE_NVME_BIO_BASED = 5 , } 
s##dm_table
t#dm_ctr_fn typedef int ( * dm_ctr_fn ) ( s#dm_target * , unsigned int , char * * ) 
t#dm_dtr_fn typedef void ( * dm_dtr_fn ) ( s#dm_target * ) 
t#dm_map_fn typedef int ( * dm_map_fn ) ( s#dm_target * , s#bio * ) 
u#map_info union map_info { void * ptr ; } 
t#dm_clone_and_map_request_fn typedef int ( * dm_clone_and_map_request_fn ) ( s#dm_target * , s#request * , u#map_info * , s#request * * ) 
t#dm_release_clone_request_fn typedef void ( * dm_release_clone_request_fn ) ( s#request * ) 
t#dm_endio_fn typedef int ( * dm_endio_fn ) ( s#dm_target * , s#bio * , t#blk_status_t * ) 
t#dm_request_endio_fn typedef int ( * dm_request_endio_fn ) ( s#dm_target * , s#request * , t#blk_status_t , u#map_info * ) 
t#dm_presuspend_fn typedef void ( * dm_presuspend_fn ) ( s#dm_target * ) 
t#dm_presuspend_undo_fn typedef void ( * dm_presuspend_undo_fn ) ( s#dm_target * ) 
t#dm_postsuspend_fn typedef void ( * dm_postsuspend_fn ) ( s#dm_target * ) 
t#dm_preresume_fn typedef int ( * dm_preresume_fn ) ( s#dm_target * ) 
t#dm_resume_fn typedef void ( * dm_resume_fn ) ( s#dm_target * ) 
t#status_type_t typedef enum { STATUSTYPE_INFO , STATUSTYPE_TABLE } status_type_t 
t#dm_status_fn typedef void ( * dm_status_fn ) ( s#dm_target * , t#status_type_t , unsigned , char * , unsigned ) 
t#dm_message_fn typedef int ( * dm_message_fn ) ( s#dm_target * , unsigned , char * * , char * , unsigned ) 
t#dm_prepare_ioctl_fn typedef int ( * dm_prepare_ioctl_fn ) ( s#dm_target * , s#block_device * * ) 
t#dm_busy_fn typedef int ( * dm_busy_fn ) ( s#dm_target * ) 
s##dax_device
s#dm_dev struct dm_dev { s#block_device * bdev ; s#dax_device * dax_dev ; t#fmode_t mode ; char name [ 16 ] ; } 
t#iterate_devices_callout_fn typedef int ( * iterate_devices_callout_fn ) ( s#dm_target * , s#dm_dev * , t#sector_t , t#sector_t , void * ) 
t#dm_iterate_devices_fn typedef int ( * dm_iterate_devices_fn ) ( s#dm_target * , t#iterate_devices_callout_fn , void * ) 
t#dm_io_hints_fn typedef void ( * dm_io_hints_fn ) ( s#dm_target * , s#queue_limits * ) 
t#dm_dax_direct_access_fn typedef long ( * dm_dax_direct_access_fn ) ( s#dm_target * , unsigned long , long , void * * , t#pfn_t * ) 
t#dm_dax_copy_iter_fn typedef t#size_t ( * dm_dax_copy_iter_fn ) ( s#dm_target * , unsigned long , void * , t#size_t , s#iov_iter * ) 
s#target_type struct target_type { t#uint64_t features ; const char * name ; s#module * module ; unsigned version [ 3 ] ; t#dm_ctr_fn ctr ; t#dm_dtr_fn dtr ; t#dm_map_fn map ; t#dm_clone_and_map_request_fn clone_and_map_rq ; t#dm_release_clone_request_fn release_clone_rq ; t#dm_endio_fn end_io ; t#dm_request_endio_fn rq_end_io ; t#dm_presuspend_fn presuspend ; t#dm_presuspend_undo_fn presuspend_undo ; t#dm_postsuspend_fn postsuspend ; t#dm_preresume_fn preresume ; t#dm_resume_fn resume ; t#dm_status_fn status ; t#dm_message_fn message ; t#dm_prepare_ioctl_fn prepare_ioctl ; t#dm_busy_fn busy ; t#dm_iterate_devices_fn iterate_devices ; t#dm_io_hints_fn io_hints ; t#dm_dax_direct_access_fn direct_access ; t#dm_dax_copy_iter_fn dax_copy_from_iter ; t#dm_dax_copy_iter_fn dax_copy_to_iter ; s#list_head list ; } 
t#dm_num_write_bios_fn typedef unsigned ( * dm_num_write_bios_fn ) ( s#dm_target * , s#bio * ) 
s#dm_target struct dm_target { s#dm_table * table ; s#target_type * type ; t#sector_t begin ; t#sector_t len ; t#uint32_t max_io_len ; unsigned num_flush_bios ; unsigned num_discard_bios ; unsigned num_secure_erase_bios ; unsigned num_write_same_bios ; unsigned num_write_zeroes_bios ; unsigned per_io_data_size ; t#dm_num_write_bios_fn num_write_bios ; void * private ; char * error ; t#bool flush_supported : 1 ; t#bool discards_supported : 1 ; t#bool split_discard_bios : 1 ; } 
s#dm_kobject_holder struct dm_kobject_holder { s#kobject kobj ; s#completion completion ; } 
s##dm_stats_last_position
s#dm_stats struct dm_stats { s#mutex mutex ; s#list_head list ; s#dm_stats_last_position * last ; t#sector_t last_sector ; unsigned last_rw ; } 
s#mapped_device struct mapped_device { s#mutex suspend_lock ; s#mutex table_devices_lock ; s#list_head table_devices ; void * map ; unsigned long flags ; s#mutex type_lock ; e#dm_queue_mode type ; int numa_node_id ; s#request_queue * queue ; t#atomic_t holders ; t#atomic_t open_count ; s#dm_target * immutable_target ; s#target_type * immutable_target_type ; char name [ 16 ] ; s#gendisk * disk ; s#dax_device * dax_dev ; s#work_struct work ; t#wait_queue_head_t wait ; t#atomic_t pending [ 2 ] ; t#spinlock_t deferred_lock ; s#bio_list deferred ; void * interface_ptr ; t#wait_queue_head_t eventq ; t#atomic_t event_nr ; t#atomic_t uevent_seq ; s#list_head uevent_list ; t#spinlock_t uevent_lock ; unsigned internal_suspend_count ; s#bio_set * io_bs ; s#bio_set * bs ; s#workqueue_struct * wq ; s#super_block * frozen_sb ; s#hd_geometry geometry ; s#dm_kobject_holder kobj_holder ; s#block_device * bdev ; s#bio flush_bio ; s#dm_stats stats ; s#kthread_worker kworker ; s#task_struct * kworker_task ; unsigned seq_rq_merge_deadline_usecs ; int last_rq_rw ; t#sector_t last_rq_pos ; t#ktime_t last_rq_start_time ; s#blk_mq_tag_set * tag_set ; t#bool use_blk_mq : 1 ; t#bool init_tio_pdu : 1 ; s#srcu_struct io_barrier ; } 
dm_get_table_device int dm_get_table_device ( s#mapped_device * , t#dev_t , t#fmode_t , s#dm_dev * * ) 
dm_put_table_device void dm_put_table_device ( s#mapped_device * , s#dm_dev * ) 
dm_set_target_max_io_len int dm_set_target_max_io_len ( s#dm_target * , t#sector_t ) 
dm_accept_partial_bio void dm_accept_partial_bio ( s#bio * , unsigned ) 
dm_remap_zone_report void dm_remap_zone_report ( s#dm_target * , s#bio * , t#sector_t ) 
dm_get_queue_limits s#queue_limits * dm_get_queue_limits ( s#mapped_device * ) 
dm_get_md s#mapped_device * dm_get_md ( t#dev_t ) 
dm_hold int dm_hold ( s#mapped_device * ) 
dm_device_name const char * dm_device_name ( s#mapped_device * ) 
dm_put void dm_put ( s#mapped_device * ) 
dm_internal_suspend_noflush void dm_internal_suspend_noflush ( s#mapped_device * ) 
dm_internal_resume void dm_internal_resume ( s#mapped_device * ) 
dm_internal_suspend_fast void dm_internal_suspend_fast ( s#mapped_device * ) 
dm_internal_resume_fast void dm_internal_resume_fast ( s#mapped_device * ) 
dm_disk s#gendisk * dm_disk ( s#mapped_device * ) 
dm_suspended int dm_suspended ( s#dm_target * ) 
dm_noflush_suspending int dm_noflush_suspending ( s#dm_target * ) 

/* drivers/md/dm-bio-prison-v1.o */
s##dm_bio_prison
dm_bio_prison_create s#dm_bio_prison * dm_bio_prison_create ( void ) 
dm_bio_prison_destroy void dm_bio_prison_destroy ( s#dm_bio_prison * ) 
t#dm_thin_id typedef t#uint64_t dm_thin_id 
t#dm_block_t typedef t#uint64_t dm_block_t 
s#dm_cell_key struct dm_cell_key { int virtual ; t#dm_thin_id dev ; t#dm_block_t block_begin , block_end ; } 
s##device_private
s##sock
s##vfsmount
s##posix_acl
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##workqueue_struct
s##bpf_prog_array
s##cgroup_taskset
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##pipe_inode_info
s##swap_info_struct
s##kmem_cache
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##reclaim_state
s##blk_mq_ctx
s##blk_mq_hw_ctx
s##blk_mq_alloc_data
s##blk_mq_debugfs_attr
s##blk_queue_stats
s##rq_wb
s##blk_mq_ops
s##blk_stat_callback
s##blk_trace
s##blk_flush_queue
s##bsg_job
s##throtl_data
s##blk_mq_tag_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##mtd_info
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##pr_ops
s##timer_rand_state
s##disk_events
s##badblocks
s#dm_bio_prison_cell struct dm_bio_prison_cell { s#list_head user_list ; s#rb_node node ; s#dm_cell_key key ; s#bio * holder ; s#bio_list bios ; } 
dm_bio_prison_alloc_cell s#dm_bio_prison_cell * dm_bio_prison_alloc_cell ( s#dm_bio_prison * , t#gfp_t ) 
dm_bio_prison_free_cell void dm_bio_prison_free_cell ( s#dm_bio_prison * , s#dm_bio_prison_cell * ) 
dm_bio_detain int dm_bio_detain ( s#dm_bio_prison * , s#dm_cell_key * , s#bio * , s#dm_bio_prison_cell * , s#dm_bio_prison_cell * * ) 
dm_get_cell int dm_get_cell ( s#dm_bio_prison * , s#dm_cell_key * , s#dm_bio_prison_cell * , s#dm_bio_prison_cell * * ) 
dm_cell_release void dm_cell_release ( s#dm_bio_prison * , s#dm_bio_prison_cell * , s#bio_list * ) 
dm_cell_release_no_holder void dm_cell_release_no_holder ( s#dm_bio_prison * , s#dm_bio_prison_cell * , s#bio_list * ) 
dm_cell_error void dm_cell_error ( s#dm_bio_prison * , s#dm_bio_prison_cell * , t#blk_status_t ) 
dm_cell_visit_release void dm_cell_visit_release ( s#dm_bio_prison * , void ( * ) ( void * , s#dm_bio_prison_cell * ) , void * , s#dm_bio_prison_cell * ) 
dm_cell_promote_or_release int dm_cell_promote_or_release ( s#dm_bio_prison * , s#dm_bio_prison_cell * ) 
s##dm_deferred_set
dm_deferred_set_create s#dm_deferred_set * dm_deferred_set_create ( void ) 
dm_deferred_set_destroy void dm_deferred_set_destroy ( s#dm_deferred_set * ) 
s##dm_deferred_entry
dm_deferred_entry_inc s#dm_deferred_entry * dm_deferred_entry_inc ( s#dm_deferred_set * ) 
dm_deferred_entry_dec void dm_deferred_entry_dec ( s#dm_deferred_entry * , s#list_head * ) 
dm_deferred_set_add_work int dm_deferred_set_add_work ( s#dm_deferred_set * , s#list_head * ) 

/* drivers/md/dm-bio-prison-v2.o */
s##dm_bio_prison_v2
s##workqueue_struct
dm_bio_prison_create_v2 s#dm_bio_prison_v2 * dm_bio_prison_create_v2 ( s#workqueue_struct * ) 
dm_bio_prison_destroy_v2 void dm_bio_prison_destroy_v2 ( s#dm_bio_prison_v2 * ) 
s#dm_cell_key_v2 struct dm_cell_key_v2 { int virtual ; t#dm_thin_id dev ; t#dm_block_t block_begin , block_end ; } 
s##device_private
s##sock
s##vfsmount
s##posix_acl
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##bpf_prog_array
s##cgroup_taskset
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##pipe_inode_info
s##swap_info_struct
s##kmem_cache
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##reclaim_state
s##blk_mq_ctx
s##blk_mq_hw_ctx
s##blk_mq_alloc_data
s##blk_mq_debugfs_attr
s##blk_queue_stats
s##rq_wb
s##blk_mq_ops
s##blk_stat_callback
s##blk_trace
s##blk_flush_queue
s##bsg_job
s##throtl_data
s##blk_mq_tag_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##mtd_info
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##pr_ops
s##timer_rand_state
s##disk_events
s##badblocks
s#dm_bio_prison_cell_v2 struct dm_bio_prison_cell_v2 { t#bool exclusive_lock ; unsigned exclusive_level ; unsigned shared_count ; s#work_struct * quiesce_continuation ; s#rb_node node ; s#dm_cell_key_v2 key ; s#bio_list bios ; } 
dm_bio_prison_alloc_cell_v2 s#dm_bio_prison_cell_v2 * dm_bio_prison_alloc_cell_v2 ( s#dm_bio_prison_v2 * , t#gfp_t ) 
dm_bio_prison_free_cell_v2 void dm_bio_prison_free_cell_v2 ( s#dm_bio_prison_v2 * , s#dm_bio_prison_cell_v2 * ) 
dm_cell_get_v2 t#bool dm_cell_get_v2 ( s#dm_bio_prison_v2 * , s#dm_cell_key_v2 * , unsigned , s#bio * , s#dm_bio_prison_cell_v2 * , s#dm_bio_prison_cell_v2 * * ) 
dm_cell_put_v2 t#bool dm_cell_put_v2 ( s#dm_bio_prison_v2 * , s#dm_bio_prison_cell_v2 * ) 
dm_cell_lock_v2 int dm_cell_lock_v2 ( s#dm_bio_prison_v2 * , s#dm_cell_key_v2 * , unsigned , s#dm_bio_prison_cell_v2 * , s#dm_bio_prison_cell_v2 * * ) 
dm_cell_quiesce_v2 void dm_cell_quiesce_v2 ( s#dm_bio_prison_v2 * , s#dm_bio_prison_cell_v2 * , s#work_struct * ) 
dm_cell_lock_promote_v2 int dm_cell_lock_promote_v2 ( s#dm_bio_prison_v2 * , s#dm_bio_prison_cell_v2 * , unsigned ) 
dm_cell_unlock_v2 t#bool dm_cell_unlock_v2 ( s#dm_bio_prison_v2 * , s#dm_bio_prison_cell_v2 * , s#bio_list * ) 

/* drivers/md/dm-bufio.o */
s##dm_bufio_client
s##dm_buffer
dm_bufio_get void * dm_bufio_get ( s#dm_bufio_client * , t#sector_t , s#dm_buffer * * ) 
dm_bufio_read void * dm_bufio_read ( s#dm_bufio_client * , t#sector_t , s#dm_buffer * * ) 
dm_bufio_new void * dm_bufio_new ( s#dm_bufio_client * , t#sector_t , s#dm_buffer * * ) 
dm_bufio_prefetch void dm_bufio_prefetch ( s#dm_bufio_client * , t#sector_t , unsigned ) 
dm_bufio_release void dm_bufio_release ( s#dm_buffer * ) 
dm_bufio_mark_partial_buffer_dirty void dm_bufio_mark_partial_buffer_dirty ( s#dm_buffer * , unsigned , unsigned ) 
dm_bufio_mark_buffer_dirty void dm_bufio_mark_buffer_dirty ( s#dm_buffer * ) 
dm_bufio_write_dirty_buffers_async void dm_bufio_write_dirty_buffers_async ( s#dm_bufio_client * ) 
dm_bufio_write_dirty_buffers int dm_bufio_write_dirty_buffers ( s#dm_bufio_client * ) 
dm_bufio_issue_flush int dm_bufio_issue_flush ( s#dm_bufio_client * ) 
dm_bufio_release_move void dm_bufio_release_move ( s#dm_buffer * , t#sector_t ) 
dm_bufio_forget void dm_bufio_forget ( s#dm_bufio_client * , t#sector_t ) 
dm_bufio_set_minimum_buffers void dm_bufio_set_minimum_buffers ( s#dm_bufio_client * , unsigned ) 
dm_bufio_get_block_size unsigned dm_bufio_get_block_size ( s#dm_bufio_client * ) 
dm_bufio_get_device_size t#sector_t dm_bufio_get_device_size ( s#dm_bufio_client * ) 
dm_bufio_get_block_number t#sector_t dm_bufio_get_block_number ( s#dm_buffer * ) 
dm_bufio_get_block_data void * dm_bufio_get_block_data ( s#dm_buffer * ) 
dm_bufio_get_aux_data void * dm_bufio_get_aux_data ( s#dm_buffer * ) 
dm_bufio_get_client s#dm_bufio_client * dm_bufio_get_client ( s#dm_buffer * ) 
s##posix_acl
s##vfsmount
s##sock
s##seq_file
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##hd_geometry
s##pr_ops
s##blk_mq_ctx
s##kmem_cache
s##blkcg_gq
s##blk_mq_hw_ctx
s##blk_mq_alloc_data
s##blk_mq_debugfs_attr
s##blk_queue_stats
s##rq_wb
s##blk_mq_ops
s##workqueue_struct
s##cgroup_subsys_state
s##blk_stat_callback
s##blk_trace
s##blk_flush_queue
s##bsg_job
s##throtl_data
s##blk_mq_tag_set
s##timer_rand_state
s##disk_events
s##badblocks
s##reclaim_state
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##writeback_control
s##swap_info_struct
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
dm_bufio_client_create s#dm_bufio_client * dm_bufio_client_create ( s#block_device * , unsigned , unsigned , unsigned , void ( * ) ( s#dm_buffer * ) , void ( * ) ( s#dm_buffer * ) ) 
dm_bufio_client_destroy void dm_bufio_client_destroy ( s#dm_bufio_client * ) 
dm_bufio_set_sector_offset void dm_bufio_set_sector_offset ( s#dm_bufio_client * , t#sector_t ) 

/* drivers/md/dm-builtin.o */
s##sock
s##vfsmount
s##posix_acl
s##module
s##device_private
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##bpf_prog_array
s##cgroup_taskset
s##pipe_inode_info
s##swap_info_struct
s##kmem_cache
s##mem_cgroup
s##mempolicy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_mq_ctx
s##workqueue_struct
s##blk_flush_queue
s##blk_mq_tags
s##blk_mq_alloc_data
s##blk_mq_debugfs_attr
s##blk_queue_stats
s##rq_wb
s##blk_stat_callback
s##bsg_job
s##throtl_data
s##pr_ops
s##timer_rand_state
s##disk_events
s##badblocks
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##mtd_info
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
dm_kobject_release void dm_kobject_release ( s#kobject * ) 

/* drivers/md/dm-cache-background-tracker.o */
s##background_tracker
btracker_create s#background_tracker * btracker_create ( unsigned ) 
btracker_destroy void btracker_destroy ( s#background_tracker * ) 
btracker_nr_writebacks_queued unsigned btracker_nr_writebacks_queued ( s#background_tracker * ) 
btracker_nr_demotions_queued unsigned btracker_nr_demotions_queued ( s#background_tracker * ) 
e#policy_operation enum policy_operation { POLICY_PROMOTE , POLICY_DEMOTE , POLICY_WRITEBACK } 
t#dm_oblock_t typedef t#dm_block_t dm_oblock_t 
t#dm_cblock_t typedef t#uint32_t dm_cblock_t 
s#policy_work struct policy_work { e#policy_operation op ; t#dm_oblock_t oblock ; t#dm_cblock_t cblock ; } 
btracker_queue int btracker_queue ( s#background_tracker * , s#policy_work * , s#policy_work * * ) 
btracker_issue int btracker_issue ( s#background_tracker * , s#policy_work * * ) 
btracker_complete void btracker_complete ( s#background_tracker * , s#policy_work * ) 
btracker_promotion_already_present t#bool btracker_promotion_already_present ( s#background_tracker * , t#dm_oblock_t ) 

/* drivers/md/dm-cache-policy.o */
s##sock
s##vfsmount
s##posix_acl
s##device_private
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pollfd
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##bpf_prog_array
s##cgroup_taskset
s##pipe_inode_info
s##swap_info_struct
s##kmem_cache
s##mem_cgroup
s##mempolicy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_mq_ctx
s##blk_mq_hw_ctx
s##blk_mq_alloc_data
s##blk_mq_debugfs_attr
s##blk_queue_stats
s##rq_wb
s##blk_mq_ops
s##workqueue_struct
s##blk_stat_callback
s##blk_trace
s##blk_flush_queue
s##bsg_job
s##throtl_data
s##blk_mq_tag_set
s##pr_ops
s##timer_rand_state
s##disk_events
s##badblocks
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##mtd_info
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s#dm_cache_policy struct dm_cache_policy { void ( * destroy ) ( s#dm_cache_policy * ) ; int ( * lookup ) ( s#dm_cache_policy * , t#dm_oblock_t , t#dm_cblock_t * , int , t#bool , t#bool * ) ; int ( * lookup_with_work ) ( s#dm_cache_policy * , t#dm_oblock_t , t#dm_cblock_t * , int , t#bool , s#policy_work * * ) ; int ( * get_background_work ) ( s#dm_cache_policy * , t#bool , s#policy_work * * ) ; void ( * complete_background_work ) ( s#dm_cache_policy * , s#policy_work * , t#bool ) ; void ( * set_dirty ) ( s#dm_cache_policy * , t#dm_cblock_t ) ; void ( * clear_dirty ) ( s#dm_cache_policy * , t#dm_cblock_t ) ; int ( * load_mapping ) ( s#dm_cache_policy * , t#dm_oblock_t , t#dm_cblock_t , t#bool , t#uint32_t , t#bool ) ; int ( * invalidate_mapping ) ( s#dm_cache_policy * , t#dm_cblock_t ) ; t#uint32_t ( * get_hint ) ( s#dm_cache_policy * , t#dm_cblock_t ) ; t#dm_cblock_t ( * residency ) ( s#dm_cache_policy * ) ; void ( * tick ) ( s#dm_cache_policy * , t#bool ) ; int ( * emit_config_values ) ( s#dm_cache_policy * , char * , unsigned , t#ssize_t * ) ; int ( * set_config_value ) ( s#dm_cache_policy * , const char * , const char * ) ; void ( * allow_migrations ) ( s#dm_cache_policy * , t#bool ) ; void * private ; } 
s#dm_cache_policy_type struct dm_cache_policy_type { s#list_head list ; char name [ 16 ] ; unsigned version [ 3 ] ; s#dm_cache_policy_type * real ; t#size_t hint_size ; s#module * owner ; s#dm_cache_policy * ( * create ) ( t#dm_cblock_t , t#sector_t , t#sector_t ) ; } 
dm_cache_policy_register int dm_cache_policy_register ( s#dm_cache_policy_type * ) 
dm_cache_policy_unregister void dm_cache_policy_unregister ( s#dm_cache_policy_type * ) 
dm_cache_policy_create s#dm_cache_policy * dm_cache_policy_create ( const char * , t#dm_cblock_t , t#sector_t , t#sector_t ) 
dm_cache_policy_destroy void dm_cache_policy_destroy ( s#dm_cache_policy * ) 
dm_cache_policy_get_name const char * dm_cache_policy_get_name ( s#dm_cache_policy * ) 
dm_cache_policy_get_version const unsigned * dm_cache_policy_get_version ( s#dm_cache_policy * ) 
dm_cache_policy_get_hint_size t#size_t dm_cache_policy_get_hint_size ( s#dm_cache_policy * ) 

/* drivers/md/dm-exception-store.o */
s##sock
s##seq_file
s##vfsmount
s##posix_acl
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##blk_mq_ctx
s##kmem_cache
s##blkcg_gq
s##blk_mq_hw_ctx
s##blk_mq_alloc_data
s##blk_mq_debugfs_attr
s##blk_queue_stats
s##rq_wb
s##blk_mq_ops
s##workqueue_struct
s##cgroup_subsys_state
s##blk_stat_callback
s##blk_trace
s##blk_flush_queue
s##bsg_job
s##throtl_data
s##blk_mq_tag_set
s##hd_geometry
s##pr_ops
s##timer_rand_state
s##disk_events
s##badblocks
s##reclaim_state
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##swap_info_struct
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##mtd_info
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##dm_snapshot
s#dm_exception_store struct dm_exception_store { s#dm_exception_store_type * type ; s#dm_snapshot * snap ; unsigned chunk_size ; unsigned chunk_mask ; unsigned chunk_shift ; void * context ; t#bool userspace_supports_overflow ; } 
t#chunk_t typedef t#sector_t chunk_t 
s#dm_exception struct dm_exception { s#list_head hash_list ; t#chunk_t old_chunk ; t#chunk_t new_chunk ; } 
s#dm_exception_store_type struct dm_exception_store_type { const char * name ; s#module * module ; int ( * ctr ) ( s#dm_exception_store * , char * ) ; void ( * dtr ) ( s#dm_exception_store * ) ; int ( * read_metadata ) ( s#dm_exception_store * , int ( * ) ( void * , t#chunk_t , t#chunk_t ) , void * ) ; int ( * prepare_exception ) ( s#dm_exception_store * , s#dm_exception * ) ; void ( * commit_exception ) ( s#dm_exception_store * , s#dm_exception * , int , void ( * ) ( void * , int ) , void * ) ; int ( * prepare_merge ) ( s#dm_exception_store * , t#chunk_t * , t#chunk_t * ) ; int ( * commit_merge ) ( s#dm_exception_store * , int ) ; void ( * drop_snapshot ) ( s#dm_exception_store * ) ; unsigned ( * status ) ( s#dm_exception_store * , t#status_type_t , char * , unsigned ) ; void ( * usage ) ( s#dm_exception_store * , t#sector_t * , t#sector_t * , t#sector_t * ) ; s#list_head list ; } 
dm_exception_store_type_register int dm_exception_store_type_register ( s#dm_exception_store_type * ) 
dm_exception_store_type_unregister int dm_exception_store_type_unregister ( s#dm_exception_store_type * ) 
s##dm_table
s##dax_device
dm_exception_store_create int dm_exception_store_create ( s#dm_target * , int , char * * , s#dm_snapshot * , unsigned * , s#dm_exception_store * * ) 
dm_exception_store_destroy void dm_exception_store_destroy ( s#dm_exception_store * ) 

/* drivers/md/dm-io.o */
s##dm_io_client
dm_io_client_create s#dm_io_client * dm_io_client_create ( void ) 
dm_io_client_destroy void dm_io_client_destroy ( s#dm_io_client * ) 
e#dm_io_mem_type enum dm_io_mem_type { DM_IO_PAGE_LIST , DM_IO_BIO , DM_IO_VMA , DM_IO_KMEM , } 
s##posix_acl
s##vfsmount
s##sock
s##pipe_inode_info
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##bpf_prog_array
s##cgroup_taskset
s##mem_cgroup
s##mempolicy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##blk_mq_ctx
s##kmem_cache
s##workqueue_struct
s##blk_flush_queue
s##blk_mq_tags
s##blk_mq_alloc_data
s##blk_mq_debugfs_attr
s##blk_queue_stats
s##rq_wb
s##blk_stat_callback
s##bsg_job
s##throtl_data
s##pr_ops
s##timer_rand_state
s##disk_events
s##badblocks
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s#page_list struct page_list { s#page_list * next ; s#page * page ; } 
s#dm_io_memory struct dm_io_memory { e#dm_io_mem_type type ; unsigned offset ; union { s#page_list * pl ; s#bio * bio ; void * vma ; void * addr ; } ptr ; } 
t#io_notify_fn typedef void ( * io_notify_fn ) ( unsigned long , void * ) 
s#dm_io_notify struct dm_io_notify { t#io_notify_fn fn ; void * context ; } 
s#dm_io_request struct dm_io_request { int bi_op ; int bi_op_flags ; s#dm_io_memory mem ; s#dm_io_notify notify ; s#dm_io_client * client ; } 
s#dm_io_region struct dm_io_region { s#block_device * bdev ; t#sector_t sector ; t#sector_t count ; } 
dm_io int dm_io ( s#dm_io_request * , unsigned , s#dm_io_region * , unsigned long * ) 

/* drivers/md/dm-kcopyd.o */
s##dm_kcopyd_client
s##posix_acl
s##vfsmount
s##sock
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##mmu_notifier_mm
s##xol_area
s##pid_namespace
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##bpf_prog_array
s##cgroup_taskset
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##pr_ops
s##blk_mq_ctx
s##kmem_cache
s##workqueue_struct
s##blk_flush_queue
s##blk_mq_tags
s##blk_mq_alloc_data
s##blk_mq_debugfs_attr
s##blk_queue_stats
s##rq_wb
s##blk_stat_callback
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##badblocks
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##swap_info_struct
s##nlm_lockowner
s##nfs4_lock_state
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
t#dm_kcopyd_notify_fn typedef void ( * dm_kcopyd_notify_fn ) ( int , unsigned long , void * ) 
dm_kcopyd_copy void dm_kcopyd_copy ( s#dm_kcopyd_client * , s#dm_io_region * , unsigned , s#dm_io_region * , unsigned , t#dm_kcopyd_notify_fn , void * ) 
dm_kcopyd_zero void dm_kcopyd_zero ( s#dm_kcopyd_client * , unsigned , s#dm_io_region * , unsigned , t#dm_kcopyd_notify_fn , void * ) 
dm_kcopyd_prepare_callback void * dm_kcopyd_prepare_callback ( s#dm_kcopyd_client * , t#dm_kcopyd_notify_fn , void * ) 
dm_kcopyd_do_callback void dm_kcopyd_do_callback ( void * , int , unsigned long ) 
s#dm_kcopyd_throttle struct dm_kcopyd_throttle { unsigned throttle ; unsigned num_io_jobs ; unsigned io_period ; unsigned total_period ; unsigned last_jiffies ; } 
dm_kcopyd_client_create s#dm_kcopyd_client * dm_kcopyd_client_create ( s#dm_kcopyd_throttle * ) 
dm_kcopyd_client_destroy void dm_kcopyd_client_destroy ( s#dm_kcopyd_client * ) 

/* drivers/md/dm-log.o */
s##sock
s##seq_file
s##vfsmount
s##posix_acl
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##blk_mq_ctx
s##kmem_cache
s##blkcg_gq
s##blk_mq_hw_ctx
s##blk_mq_alloc_data
s##blk_mq_debugfs_attr
s##blk_queue_stats
s##rq_wb
s##blk_mq_ops
s##workqueue_struct
s##cgroup_subsys_state
s##blk_stat_callback
s##blk_trace
s##blk_flush_queue
s##bsg_job
s##throtl_data
s##blk_mq_tag_set
s##hd_geometry
s##pr_ops
s##timer_rand_state
s##disk_events
s##badblocks
s##reclaim_state
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##swap_info_struct
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##mtd_info
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##dm_table
s##dax_device
s#dm_dirty_log struct dm_dirty_log { s#dm_dirty_log_type * type ; int ( * flush_callback_fn ) ( s#dm_target * ) ; void * context ; } 
t#region_t typedef t#sector_t region_t 
s#dm_dirty_log_type struct dm_dirty_log_type { const char * name ; s#module * module ; s#list_head list ; int ( * ctr ) ( s#dm_dirty_log * , s#dm_target * , unsigned , char * * ) ; void ( * dtr ) ( s#dm_dirty_log * ) ; int ( * presuspend ) ( s#dm_dirty_log * ) ; int ( * postsuspend ) ( s#dm_dirty_log * ) ; int ( * resume ) ( s#dm_dirty_log * ) ; t#uint32_t ( * get_region_size ) ( s#dm_dirty_log * ) ; int ( * is_clean ) ( s#dm_dirty_log * , t#region_t ) ; int ( * in_sync ) ( s#dm_dirty_log * , t#region_t , int ) ; int ( * flush ) ( s#dm_dirty_log * ) ; void ( * mark_region ) ( s#dm_dirty_log * , t#region_t ) ; void ( * clear_region ) ( s#dm_dirty_log * , t#region_t ) ; int ( * get_resync_work ) ( s#dm_dirty_log * , t#region_t * ) ; void ( * set_region_sync ) ( s#dm_dirty_log * , t#region_t , int ) ; t#region_t ( * get_sync_count ) ( s#dm_dirty_log * ) ; int ( * status ) ( s#dm_dirty_log * , t#status_type_t , char * , unsigned ) ; int ( * is_remote_recovering ) ( s#dm_dirty_log * , t#region_t ) ; } 
dm_dirty_log_type_register int dm_dirty_log_type_register ( s#dm_dirty_log_type * ) 
dm_dirty_log_type_unregister int dm_dirty_log_type_unregister ( s#dm_dirty_log_type * ) 
dm_dirty_log_create s#dm_dirty_log * dm_dirty_log_create ( const char * , s#dm_target * , int ( * ) ( s#dm_target * ) , unsigned , char * * ) 
dm_dirty_log_destroy void dm_dirty_log_destroy ( s#dm_dirty_log * ) 

/* drivers/md/dm-path-selector.o */
s##sock
s##seq_file
s##vfsmount
s##posix_acl
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##blk_mq_ctx
s##kmem_cache
s##blkcg_gq
s##blk_mq_hw_ctx
s##blk_mq_alloc_data
s##blk_mq_debugfs_attr
s##blk_queue_stats
s##rq_wb
s##blk_mq_ops
s##workqueue_struct
s##cgroup_subsys_state
s##blk_stat_callback
s##blk_trace
s##blk_flush_queue
s##bsg_job
s##throtl_data
s##blk_mq_tag_set
s##hd_geometry
s##pr_ops
s##timer_rand_state
s##disk_events
s##badblocks
s##reclaim_state
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##swap_info_struct
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##mtd_info
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s#path_selector struct path_selector { s#path_selector_type * type ; void * context ; } 
s##dax_device
s#dm_path struct dm_path { s#dm_dev * dev ; void * pscontext ; } 
s#path_selector_type struct path_selector_type { char * name ; s#module * module ; unsigned int table_args ; unsigned int info_args ; int ( * create ) ( s#path_selector * , unsigned , char * * ) ; void ( * destroy ) ( s#path_selector * ) ; int ( * add_path ) ( s#path_selector * , s#dm_path * , int , char * * , char * * ) ; s#dm_path * ( * select_path ) ( s#path_selector * , t#size_t ) ; void ( * fail_path ) ( s#path_selector * , s#dm_path * ) ; int ( * reinstate_path ) ( s#path_selector * , s#dm_path * ) ; int ( * status ) ( s#path_selector * , s#dm_path * , t#status_type_t , char * , unsigned int ) ; int ( * start_io ) ( s#path_selector * , s#dm_path * , t#size_t ) ; int ( * end_io ) ( s#path_selector * , s#dm_path * , t#size_t ) ; } 
dm_register_path_selector int dm_register_path_selector ( s#path_selector_type * ) 
dm_unregister_path_selector int dm_unregister_path_selector ( s#path_selector_type * ) 

/* drivers/md/dm-region-hash.o */
s##dm_region_hash
dm_rh_region_to_sector t#sector_t dm_rh_region_to_sector ( s#dm_region_hash * , t#region_t ) 
s##device_private
s##sock
s##vfsmount
s##posix_acl
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##workqueue_struct
s##bpf_prog_array
s##cgroup_taskset
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##pipe_inode_info
s##swap_info_struct
s##kmem_cache
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##reclaim_state
s##blk_mq_ctx
s##blk_mq_hw_ctx
s##blk_mq_alloc_data
s##blk_mq_debugfs_attr
s##blk_queue_stats
s##rq_wb
s##blk_mq_ops
s##blk_stat_callback
s##blk_trace
s##blk_flush_queue
s##bsg_job
s##throtl_data
s##blk_mq_tag_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##mtd_info
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##pr_ops
s##timer_rand_state
s##disk_events
s##badblocks
dm_rh_bio_to_region t#region_t dm_rh_bio_to_region ( s#dm_region_hash * , s#bio * ) 
s##dm_region
dm_rh_region_context void * dm_rh_region_context ( s#dm_region * ) 
dm_rh_get_region_key t#region_t dm_rh_get_region_key ( s#dm_region * ) 
dm_rh_get_region_size t#sector_t dm_rh_get_region_size ( s#dm_region_hash * ) 
s##dm_table
s##dax_device
dm_region_hash_create s#dm_region_hash * dm_region_hash_create ( void * , void ( * ) ( void * , s#bio_list * ) , void ( * ) ( void * ) , void ( * ) ( void * ) , t#sector_t , unsigned , s#dm_dirty_log * , t#uint32_t , t#region_t ) 
dm_region_hash_destroy void dm_region_hash_destroy ( s#dm_region_hash * ) 
dm_rh_dirty_log s#dm_dirty_log * dm_rh_dirty_log ( s#dm_region_hash * ) 
dm_rh_get_state int dm_rh_get_state ( s#dm_region_hash * , t#region_t , int ) 
dm_rh_mark_nosync void dm_rh_mark_nosync ( s#dm_region_hash * , s#bio * ) 
dm_rh_update_states void dm_rh_update_states ( s#dm_region_hash * , int ) 
dm_rh_inc_pending void dm_rh_inc_pending ( s#dm_region_hash * , s#bio_list * ) 
dm_rh_dec void dm_rh_dec ( s#dm_region_hash * , t#region_t ) 
dm_rh_recovery_prepare void dm_rh_recovery_prepare ( s#dm_region_hash * ) 
dm_rh_recovery_start s#dm_region * dm_rh_recovery_start ( s#dm_region_hash * ) 
dm_rh_recovery_end void dm_rh_recovery_end ( s#dm_region * , int ) 
dm_rh_recovery_in_flight int dm_rh_recovery_in_flight ( s#dm_region_hash * ) 
dm_rh_flush int dm_rh_flush ( s#dm_region_hash * ) 
dm_rh_delay void dm_rh_delay ( s#dm_region_hash * , s#bio * ) 
dm_rh_stop_recovery void dm_rh_stop_recovery ( s#dm_region_hash * ) 
dm_rh_start_recovery void dm_rh_start_recovery ( s#dm_region_hash * ) 

/* drivers/md/dm-rq.o */
s##blk_mq_ctx
s##device_private
s##sock
s##vfsmount
s##posix_acl
s##module
s##workqueue_struct
s##bpf_prog_array
s##cgroup_taskset
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##pipe_inode_info
s##swap_info_struct
s##kmem_cache
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##mmu_notifier_mm
s##xol_area
s##pid_namespace
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##mtd_info
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##pr_ops
s##timer_rand_state
s##disk_events
s##badblocks
s##blk_flush_queue
s##blk_mq_tags
s##blk_mq_alloc_data
s##blk_mq_debugfs_attr
s##blk_queue_stats
s##rq_wb
s##blk_stat_callback
s##bsg_job
s##throtl_data
s##dm_table
s##dax_device
s##dm_stats_last_position
dm_use_blk_mq t#bool dm_use_blk_mq ( s#mapped_device * ) 
dm_get_reserved_rq_based_ios unsigned dm_get_reserved_rq_based_ios ( void ) 
dm_mq_kick_requeue_list void dm_mq_kick_requeue_list ( s#mapped_device * ) 

/* drivers/md/dm-snap.o */
s##posix_acl
s##vfsmount
s##sock
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##bpf_prog_array
s##cgroup_taskset
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##pr_ops
s##blk_mq_ctx
s##kmem_cache
s##workqueue_struct
s##blk_mq_hw_ctx
s##blk_mq_alloc_data
s##blk_mq_debugfs_attr
s##blk_queue_stats
s##rq_wb
s##blk_mq_ops
s##blk_stat_callback
s##blk_trace
s##blk_flush_queue
s##bsg_job
s##throtl_data
s##blk_mq_tag_set
s##timer_rand_state
s##disk_events
s##badblocks
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##swap_info_struct
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##dax_device
s##dm_snapshot
dm_snap_origin s#dm_dev * dm_snap_origin ( s#dm_snapshot * ) 
dm_snap_cow s#dm_dev * dm_snap_cow ( s#dm_snapshot * ) 

/* drivers/md/dm-table.o */
dm_vcalloc void * dm_vcalloc ( unsigned long , unsigned long ) 
dm_get_dev_t t#dev_t dm_get_dev_t ( const char * ) 
s##dm_table
s##sock
s##posix_acl
s##device_private
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##bpf_prog_array
s##cgroup_taskset
s##pipe_inode_info
s##swap_info_struct
s##kmem_cache
s##mem_cgroup
s##mempolicy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##workqueue_struct
s##blk_mq_debugfs_attr
s##blk_queue_stats
s##rq_wb
s##bsg_job
s##throtl_data
s##pr_ops
s##timer_rand_state
s##disk_events
s##badblocks
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##mtd_info
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##dax_device
dm_get_device int dm_get_device ( s#dm_target * , const char * , t#fmode_t , s#dm_dev * * ) 
dm_put_device void dm_put_device ( s#dm_target * , s#dm_dev * ) 
s#dm_arg struct dm_arg { unsigned min ; unsigned max ; char * error ; } 
s#dm_arg_set struct dm_arg_set { unsigned argc ; char * * argv ; } 
dm_read_arg int dm_read_arg ( const s#dm_arg * , s#dm_arg_set * , unsigned * , char * * ) 
dm_read_arg_group int dm_read_arg_group ( const s#dm_arg * , s#dm_arg_set * , unsigned * , char * * ) 
dm_shift_arg const char * dm_shift_arg ( s#dm_arg_set * ) 
dm_consume_args void dm_consume_args ( s#dm_arg_set * , unsigned ) 
dm_table_set_type void dm_table_set_type ( s#dm_table * , e#dm_queue_mode ) 
dm_table_event void dm_table_event ( s#dm_table * ) 
dm_table_get_size t#sector_t dm_table_get_size ( s#dm_table * ) 
dm_table_get_mode t#fmode_t dm_table_get_mode ( s#dm_table * ) 
s#dm_target_callbacks struct dm_target_callbacks { s#list_head list ; int ( * congested_fn ) ( s#dm_target_callbacks * , int ) ; } 
dm_table_add_target_callbacks void dm_table_add_target_callbacks ( s#dm_table * , s#dm_target_callbacks * ) 
s##dm_stats_last_position
dm_table_get_md s#mapped_device * dm_table_get_md ( s#dm_table * ) 
dm_table_run_md_queue_async void dm_table_run_md_queue_async ( s#dm_table * ) 

/* drivers/md/dm-target.o */
s##sock
s##vfsmount
s##posix_acl
s##device_private
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##bpf_prog_array
s##cgroup_taskset
s##pipe_inode_info
s##swap_info_struct
s##kmem_cache
s##mem_cgroup
s##mempolicy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_mq_ctx
s##workqueue_struct
s##blk_flush_queue
s##blk_mq_tags
s##blk_mq_alloc_data
s##blk_mq_debugfs_attr
s##blk_queue_stats
s##rq_wb
s##blk_stat_callback
s##bsg_job
s##throtl_data
s##pr_ops
s##timer_rand_state
s##disk_events
s##badblocks
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##mtd_info
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##dm_table
s##dax_device
dm_register_target int dm_register_target ( s#target_type * ) 
dm_unregister_target void dm_unregister_target ( s#target_type * ) 

/* drivers/md/dm-uevent.o */
s##sock
s##vfsmount
s##posix_acl
s##module
s##device_private
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##compat_timespec
s##pollfd
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##bpf_prog_array
s##cgroup_taskset
s##iov_iter
s##swap_info_struct
s##kmem_cache
s##mem_cgroup
s##mempolicy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_mq_ctx
s##blk_mq_hw_ctx
s##blk_mq_alloc_data
s##blk_mq_debugfs_attr
s##blk_queue_stats
s##rq_wb
s##blk_mq_ops
s##workqueue_struct
s##blk_stat_callback
s##blk_trace
s##blk_flush_queue
s##bsg_job
s##throtl_data
s##blk_mq_tag_set
s##pr_ops
s##timer_rand_state
s##disk_events
s##badblocks
s##reclaim_state
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##mtd_info
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
dm_send_uevents extern void dm_send_uevents ( s#list_head * , s#kobject * ) 
e#dm_uevent_type enum dm_uevent_type { DM_UEVENT_PATH_FAILED , DM_UEVENT_PATH_REINSTATED , } 
s##dm_table
s##dax_device
dm_path_uevent extern void dm_path_uevent ( e#dm_uevent_type , s#dm_target * , const char * , unsigned ) 

/* drivers/md/md.o */
s##sock
s##vfsmount
s##posix_acl
s##device_private
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##bpf_prog_array
s##cgroup_taskset
s##pipe_inode_info
s##swap_info_struct
s##kmem_cache
s##mem_cgroup
s##mempolicy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_mq_ctx
s##blk_mq_hw_ctx
s##blk_mq_alloc_data
s##blk_mq_debugfs_attr
s##blk_queue_stats
s##rq_wb
s##blk_mq_ops
s##workqueue_struct
s##blk_stat_callback
s##blk_flush_queue
s##bsg_job
s##throtl_data
s##blk_mq_tag_set
s##pr_ops
s##timer_rand_state
s##disk_events
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##mtd_info
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s#md_rdev struct md_rdev { s#list_head same_set ; t#sector_t sectors ; s#mddev * mddev ; int last_events ; s#block_device * meta_bdev ; s#block_device * bdev ; s#page * sb_page , * bb_page ; int sb_loaded ; t#__u64 sb_events ; t#sector_t data_offset ; t#sector_t new_data_offset ; t#sector_t sb_start ; int sb_size ; int preferred_minor ; s#kobject kobj ; unsigned long flags ; t#wait_queue_head_t blocked_wait ; int desc_nr ; int raid_disk ; int new_raid_disk ; int saved_raid_disk ; union { t#sector_t recovery_offset ; t#sector_t journal_tail ; } ; t#atomic_t nr_pending ; t#atomic_t read_errors ; t#time64_t last_read_error ; t#atomic_t corrected_errors ; s#work_struct del_work ; s#kernfs_node * sysfs_state ; s#badblocks badblocks ; struct { short offset ; unsigned int size ; t#sector_t sector ; } ppl ; } 
s#md_personality struct md_personality { char * name ; int level ; s#list_head list ; s#module * owner ; t#bool ( * make_request ) ( s#mddev * , s#bio * ) ; int ( * run ) ( s#mddev * ) ; int ( * start ) ( s#mddev * ) ; void ( * free ) ( s#mddev * , void * ) ; void ( * status ) ( s#seq_file * , s#mddev * ) ; void ( * error_handler ) ( s#mddev * , s#md_rdev * ) ; int ( * hot_add_disk ) ( s#mddev * , s#md_rdev * ) ; int ( * hot_remove_disk ) ( s#mddev * , s#md_rdev * ) ; int ( * spare_active ) ( s#mddev * ) ; t#sector_t ( * sync_request ) ( s#mddev * , t#sector_t , int * ) ; int ( * resize ) ( s#mddev * , t#sector_t ) ; t#sector_t ( * size ) ( s#mddev * , t#sector_t , int ) ; int ( * check_reshape ) ( s#mddev * ) ; int ( * start_reshape ) ( s#mddev * ) ; void ( * finish_reshape ) ( s#mddev * ) ; void ( * quiesce ) ( s#mddev * , int ) ; void * ( * takeover ) ( s#mddev * ) ; int ( * congested ) ( s#mddev * , int ) ; int ( * change_consistency_policy ) ( s#mddev * , const char * ) ; } 
s#md_thread struct md_thread { void ( * run ) ( s#md_thread * ) ; s#mddev * mddev ; t#wait_queue_head_t wqueue ; unsigned long flags ; s#task_struct * tsk ; unsigned long timeout ; void * private ; } 
s#bitmap_page struct bitmap_page { char * map ; unsigned int hijacked : 1 ; unsigned int pending : 1 ; unsigned int count : 30 ; } 
s#bitmap_counts struct bitmap_counts { t#spinlock_t lock ; s#bitmap_page * bp ; unsigned long pages ; unsigned long missing_pages ; unsigned long chunkshift ; unsigned long chunks ; } 
s#bitmap_storage struct bitmap_storage { s#file * file ; s#page * sb_page ; s#page * * filemap ; unsigned long * filemap_attr ; unsigned long file_pages ; unsigned long bytes ; } 
s#bitmap struct bitmap { s#bitmap_counts counts ; s#mddev * mddev ; t#__u64 events_cleared ; int need_sync ; s#bitmap_storage storage ; unsigned long flags ; int allclean ; t#atomic_t behind_writes ; unsigned long behind_writes_used ; unsigned long daemon_lastrun ; unsigned long last_end_sync ; t#atomic_t pending_writes ; t#wait_queue_head_t write_wait ; t#wait_queue_head_t overflow_wait ; t#wait_queue_head_t behind_wait ; s#kernfs_node * sysfs_can_clear ; int cluster_slot ; } 
s##md_cluster_info
s#mddev struct mddev { void * private ; s#md_personality * pers ; t#dev_t unit ; int md_minor ; s#list_head disks ; unsigned long flags ; unsigned long sb_flags ; int suspended ; t#atomic_t active_io ; int ro ; int sysfs_active ; s#gendisk * gendisk ; s#kobject kobj ; int hold_active ; int major_version , minor_version , patch_version ; int persistent ; int external ; char metadata_type [ 17 ] ; int chunk_sectors ; t#time64_t ctime , utime ; int level , layout ; char clevel [ 16 ] ; int raid_disks ; int max_disks ; t#sector_t dev_sectors ; t#sector_t array_sectors ; int external_size ; t#__u64 events ; int can_decrease_events ; char uuid [ 16 ] ; t#sector_t reshape_position ; int delta_disks , new_level , new_layout ; int new_chunk_sectors ; int reshape_backwards ; s#md_thread * thread ; s#md_thread * sync_thread ; char * last_sync_action ; t#sector_t curr_resync ; t#sector_t curr_resync_completed ; unsigned long resync_mark ; t#sector_t resync_mark_cnt ; t#sector_t curr_mark_cnt ; t#sector_t resync_max_sectors ; t#atomic64_t resync_mismatches ; t#sector_t suspend_lo ; t#sector_t suspend_hi ; int sync_speed_min ; int sync_speed_max ; int parallel_resync ; int ok_start_degraded ; unsigned long recovery ; int recovery_disabled ; int in_sync ; s#mutex open_mutex ; s#mutex reconfig_mutex ; t#atomic_t active ; t#atomic_t openers ; int changed ; int degraded ; t#atomic_t recovery_active ; t#wait_queue_head_t recovery_wait ; t#sector_t recovery_cp ; t#sector_t resync_min ; t#sector_t resync_max ; s#kernfs_node * sysfs_state ; s#kernfs_node * sysfs_action ; s#work_struct del_work ; t#spinlock_t lock ; t#wait_queue_head_t sb_wait ; t#atomic_t pending_writes ; unsigned int safemode ; unsigned int safemode_delay ; s#timer_list safemode_timer ; s#percpu_ref writes_pending ; int sync_checkers ; s#request_queue * queue ; s#bitmap * bitmap ; struct { s#file * file ; t#loff_t offset ; unsigned long space ; t#loff_t default_offset ; unsigned long default_space ; s#mutex mutex ; unsigned long chunksize ; unsigned long daemon_sleep ; unsigned long max_write_behind ; int external ; int nodes ; char cluster_name [ 64 ] ; } bitmap_info ; t#atomic_t max_corr_read_errors ; s#list_head all_mddevs ; s#attribute_group * to_remove ; s#bio_set * bio_set ; s#bio_set * sync_set ; t#mempool_t * flush_pool ; t#mempool_t * flush_bio_pool ; s#work_struct event_work ; void ( * sync_super ) ( s#mddev * , s#md_rdev * ) ; s#md_cluster_info * cluster_info ; unsigned int good_device_nr ; t#bool has_superblocks : 1 ; } 
s#md_cluster_operations struct md_cluster_operations { int ( * join ) ( s#mddev * , int ) ; int ( * leave ) ( s#mddev * ) ; int ( * slot_number ) ( s#mddev * ) ; int ( * resync_info_update ) ( s#mddev * , t#sector_t , t#sector_t ) ; int ( * metadata_update_start ) ( s#mddev * ) ; int ( * metadata_update_finish ) ( s#mddev * ) ; void ( * metadata_update_cancel ) ( s#mddev * ) ; int ( * resync_start ) ( s#mddev * ) ; int ( * resync_finish ) ( s#mddev * ) ; int ( * area_resyncing ) ( s#mddev * , int , t#sector_t , t#sector_t ) ; int ( * add_new_disk ) ( s#mddev * , s#md_rdev * ) ; void ( * add_new_disk_cancel ) ( s#mddev * ) ; int ( * new_disk_ack ) ( s#mddev * , t#bool ) ; int ( * remove_disk ) ( s#mddev * , s#md_rdev * ) ; void ( * load_bitmaps ) ( s#mddev * , int ) ; int ( * gather_bitmaps ) ( s#md_rdev * ) ; int ( * lock_all_bitmaps ) ( s#mddev * ) ; void ( * unlock_all_bitmaps ) ( s#mddev * ) ; void ( * update_size ) ( s#mddev * , t#sector_t ) ; } 
md_cluster_ops extern s#md_cluster_operations * md_cluster_ops 
md_cluster_mod s#module * md_cluster_mod 
mddev_create_serial_pool extern void mddev_create_serial_pool ( s#mddev * , s#md_rdev * , t#bool ) 
bio_alloc_mddev extern s#bio * bio_alloc_mddev ( t#gfp_t , int , s#mddev * ) 
md_new_event extern void md_new_event ( s#mddev * ) 
md_handle_request extern void md_handle_request ( s#mddev * , s#bio * ) 
md_io_acct extern void md_io_acct ( s#mddev * , int , unsigned int ) 
mddev_suspend extern void mddev_suspend ( s#mddev * ) 
mddev_resume extern void mddev_resume ( s#mddev * ) 
mddev_congested extern int mddev_congested ( s#mddev * , int ) 
md_flush_request2 extern t#bool md_flush_request2 ( s#mddev * , s#bio * ) 
md_flush_request extern void md_flush_request ( s#mddev * , s#bio * ) 
mddev_init extern void mddev_init ( s#mddev * ) 
mddev_unlock extern void mddev_unlock ( s#mddev * ) 
md_find_rdev_nr_rcu s#md_rdev * md_find_rdev_nr_rcu ( s#mddev * , int ) 
md_find_rdev_rcu s#md_rdev * md_find_rdev_rcu ( s#mddev * , t#dev_t ) 
md_rdev_clear extern void md_rdev_clear ( s#md_rdev * ) 
sync_page_io extern int sync_page_io ( s#md_rdev * , t#sector_t , int , s#page * , int , int , t#bool ) 
md_check_no_bitmap extern int md_check_no_bitmap ( s#mddev * ) 
md_integrity_register extern int md_integrity_register ( s#mddev * ) 
md_integrity_add_rdev extern int md_integrity_add_rdev ( s#md_rdev * , s#mddev * ) 
md_kick_rdev_from_array extern void md_kick_rdev_from_array ( s#md_rdev * ) 
md_update_sb extern void md_update_sb ( s#mddev * , int ) 
md_rdev_init extern int md_rdev_init ( s#md_rdev * ) 
mddev_init_writes_pending extern int mddev_init_writes_pending ( s#mddev * ) 
md_run extern int md_run ( s#mddev * ) 
md_start extern int md_start ( s#mddev * ) 
md_stop_writes extern void md_stop_writes ( s#mddev * ) 
md_stop extern void md_stop ( s#mddev * ) 
md_set_array_sectors extern void md_set_array_sectors ( s#mddev * , t#sector_t ) 
md_wakeup_thread extern void md_wakeup_thread ( s#md_thread * ) 
md_register_thread extern s#md_thread * md_register_thread ( void ( * ) ( s#md_thread * ) , s#mddev * , const char * ) 
md_unregister_thread extern void md_unregister_thread ( s#md_thread * * ) 
md_error extern void md_error ( s#mddev * , s#md_rdev * ) 
register_md_personality extern int register_md_personality ( s#md_personality * ) 
unregister_md_personality extern int unregister_md_personality ( s#md_personality * ) 
register_md_cluster_operations extern int register_md_cluster_operations ( s#md_cluster_operations * , s#module * ) 
unregister_md_cluster_operations extern int unregister_md_cluster_operations ( void ) 
md_done_sync extern void md_done_sync ( s#mddev * , int , int ) 
md_write_start extern t#bool md_write_start ( s#mddev * , s#bio * ) 
md_write_inc extern void md_write_inc ( s#mddev * , s#bio * ) 
md_write_end extern void md_write_end ( s#mddev * ) 
md_allow_write extern void md_allow_write ( s#mddev * ) 
md_do_sync extern void md_do_sync ( s#md_thread * ) 
md_check_recovery extern void md_check_recovery ( s#mddev * ) 
md_reap_sync_thread extern void md_reap_sync_thread ( s#mddev * ) 
md_wait_for_blocked_rdev extern void md_wait_for_blocked_rdev ( s#md_rdev * , s#mddev * ) 
md_finish_reshape extern void md_finish_reshape ( s#mddev * ) 
rdev_set_badblocks extern int rdev_set_badblocks ( s#md_rdev * , t#sector_t , int , int ) 
rdev_clear_badblocks extern int rdev_clear_badblocks ( s#md_rdev * , t#sector_t , int , int ) 
md_reload_sb extern void md_reload_sb ( s#mddev * , int ) 

/* drivers/md/md-bitmap.o */
s##sock
s##posix_acl
s##device_private
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##bpf_prog_array
s##cgroup_taskset
s##pipe_inode_info
s##swap_info_struct
s##kmem_cache
s##mem_cgroup
s##mempolicy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_mq_ctx
s##blk_mq_hw_ctx
s##blk_mq_alloc_data
s##blk_mq_debugfs_attr
s##blk_queue_stats
s##rq_wb
s##blk_mq_ops
s##workqueue_struct
s##blk_stat_callback
s##blk_flush_queue
s##bsg_job
s##throtl_data
s##blk_mq_tag_set
s##hd_geometry
s##pr_ops
s##timer_rand_state
s##disk_events
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##mtd_info
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##md_cluster_info
md_bitmap_update_sb void md_bitmap_update_sb ( s#bitmap * ) 
md_bitmap_unplug void md_bitmap_unplug ( s#bitmap * ) 
md_bitmap_startwrite int md_bitmap_startwrite ( s#bitmap * , t#sector_t , unsigned long , int ) 
md_bitmap_endwrite void md_bitmap_endwrite ( s#bitmap * , t#sector_t , unsigned long , int , int ) 
md_bitmap_start_sync int md_bitmap_start_sync ( s#bitmap * , t#sector_t , t#sector_t * , int ) 
md_bitmap_end_sync void md_bitmap_end_sync ( s#bitmap * , t#sector_t , t#sector_t * , int ) 
md_bitmap_close_sync void md_bitmap_close_sync ( s#bitmap * ) 
md_bitmap_cond_end_sync void md_bitmap_cond_end_sync ( s#bitmap * , t#sector_t , t#bool ) 
md_bitmap_sync_with_cluster void md_bitmap_sync_with_cluster ( s#mddev * , t#sector_t , t#sector_t , t#sector_t , t#sector_t ) 
md_bitmap_free void md_bitmap_free ( s#bitmap * ) 
md_bitmap_load int md_bitmap_load ( s#mddev * ) 
get_bitmap_from_slot s#bitmap * get_bitmap_from_slot ( s#mddev * , int ) 
md_bitmap_copy_from_slot int md_bitmap_copy_from_slot ( s#mddev * , int , t#sector_t * , t#sector_t * , t#bool ) 
md_bitmap_resize int md_bitmap_resize ( s#bitmap * , t#sector_t , int , int ) 

/* drivers/md/persistent-data/dm-array.o */
s##dm_transaction_manager
s#dm_btree_value_type struct dm_btree_value_type { void * context ; t#uint32_t size ; void ( * inc ) ( void * , const void * ) ; void ( * dec ) ( void * , const void * ) ; int ( * equal ) ( void * , const void * , const void * ) ; } 
s#dm_btree_info struct dm_btree_info { s#dm_transaction_manager * tm ; unsigned levels ; s#dm_btree_value_type value_type ; } 
s#dm_array_info struct dm_array_info { s#dm_transaction_manager * tm ; s#dm_btree_value_type value_type ; s#dm_btree_info btree_info ; } 
dm_array_info_init void dm_array_info_init ( s#dm_array_info * , s#dm_transaction_manager * , s#dm_btree_value_type * ) 
dm_array_empty int dm_array_empty ( s#dm_array_info * , t#dm_block_t * ) 
dm_array_resize int dm_array_resize ( s#dm_array_info * , t#dm_block_t , t#uint32_t , t#uint32_t , const void * , t#dm_block_t * ) 
t#value_fn typedef int ( * value_fn ) ( t#uint32_t , void * , void * ) 
dm_array_new int dm_array_new ( s#dm_array_info * , t#dm_block_t * , t#uint32_t , t#value_fn , void * ) 
dm_array_del int dm_array_del ( s#dm_array_info * , t#dm_block_t ) 
dm_array_get_value int dm_array_get_value ( s#dm_array_info * , t#dm_block_t , t#uint32_t , void * ) 
dm_array_set_value int dm_array_set_value ( s#dm_array_info * , t#dm_block_t , t#uint32_t , const void * , t#dm_block_t * ) 
dm_array_walk int dm_array_walk ( s#dm_array_info * , t#dm_block_t , int ( * ) ( void * , t#uint64_t , void * ) , void * ) 
s##dm_block
s#cursor_node struct cursor_node { s#dm_block * b ; unsigned index ; } 
s#dm_btree_cursor struct dm_btree_cursor { s#dm_btree_info * info ; t#dm_block_t root ; t#bool prefetch_leaves ; unsigned depth ; s#cursor_node nodes [ 16 ] ; } 
s##array_block
s#dm_array_cursor struct dm_array_cursor { s#dm_array_info * info ; s#dm_btree_cursor cursor ; s#dm_block * block ; s#array_block * ab ; unsigned index ; } 
dm_array_cursor_begin int dm_array_cursor_begin ( s#dm_array_info * , t#dm_block_t , s#dm_array_cursor * ) 
dm_array_cursor_end void dm_array_cursor_end ( s#dm_array_cursor * ) 
dm_array_cursor_next int dm_array_cursor_next ( s#dm_array_cursor * ) 
dm_array_cursor_skip int dm_array_cursor_skip ( s#dm_array_cursor * , t#uint32_t ) 
dm_array_cursor_get_value void dm_array_cursor_get_value ( s#dm_array_cursor * , void * * ) 

/* drivers/md/persistent-data/dm-bitset.o */
s##dm_transaction_manager
s#dm_disk_bitset struct dm_disk_bitset { s#dm_array_info array_info ; t#uint32_t current_index ; t#uint64_t current_bits ; t#bool current_index_set : 1 ; t#bool dirty : 1 ; } 
dm_disk_bitset_init void dm_disk_bitset_init ( s#dm_transaction_manager * , s#dm_disk_bitset * ) 
dm_bitset_empty int dm_bitset_empty ( s#dm_disk_bitset * , t#dm_block_t * ) 
t#bit_value_fn typedef int ( * bit_value_fn ) ( t#uint32_t , t#bool * , void * ) 
dm_bitset_new int dm_bitset_new ( s#dm_disk_bitset * , t#dm_block_t * , t#uint32_t , t#bit_value_fn , void * ) 
dm_bitset_resize int dm_bitset_resize ( s#dm_disk_bitset * , t#dm_block_t , t#uint32_t , t#uint32_t , t#bool , t#dm_block_t * ) 
dm_bitset_del int dm_bitset_del ( s#dm_disk_bitset * , t#dm_block_t ) 
dm_bitset_flush int dm_bitset_flush ( s#dm_disk_bitset * , t#dm_block_t , t#dm_block_t * ) 
dm_bitset_set_bit int dm_bitset_set_bit ( s#dm_disk_bitset * , t#dm_block_t , t#uint32_t , t#dm_block_t * ) 
dm_bitset_clear_bit int dm_bitset_clear_bit ( s#dm_disk_bitset * , t#dm_block_t , t#uint32_t , t#dm_block_t * ) 
dm_bitset_test_bit int dm_bitset_test_bit ( s#dm_disk_bitset * , t#dm_block_t , t#uint32_t , t#dm_block_t * , t#bool * ) 
s##dm_block
s##array_block
s#dm_bitset_cursor struct dm_bitset_cursor { s#dm_disk_bitset * info ; s#dm_array_cursor cursor ; t#uint32_t entries_remaining ; t#uint32_t array_index ; t#uint32_t bit_index ; t#uint64_t current_bits ; } 
dm_bitset_cursor_begin int dm_bitset_cursor_begin ( s#dm_disk_bitset * , t#dm_block_t , t#uint32_t , s#dm_bitset_cursor * ) 
dm_bitset_cursor_end void dm_bitset_cursor_end ( s#dm_bitset_cursor * ) 
dm_bitset_cursor_next int dm_bitset_cursor_next ( s#dm_bitset_cursor * ) 
dm_bitset_cursor_skip int dm_bitset_cursor_skip ( s#dm_bitset_cursor * , t#uint32_t ) 
dm_bitset_cursor_get_value t#bool dm_bitset_cursor_get_value ( s#dm_bitset_cursor * ) 

/* drivers/md/persistent-data/dm-block-manager.o */
s##dm_block
dm_block_location t#dm_block_t dm_block_location ( s#dm_block * ) 
dm_block_data void * dm_block_data ( s#dm_block * ) 
s##dm_block_manager
s##posix_acl
s##vfsmount
s##sock
s##seq_file
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##hd_geometry
s##pr_ops
s##blk_mq_ctx
s##kmem_cache
s##blkcg_gq
s##blk_mq_hw_ctx
s##blk_mq_alloc_data
s##blk_mq_debugfs_attr
s##blk_queue_stats
s##rq_wb
s##blk_mq_ops
s##workqueue_struct
s##cgroup_subsys_state
s##blk_stat_callback
s##blk_trace
s##blk_flush_queue
s##bsg_job
s##throtl_data
s##blk_mq_tag_set
s##timer_rand_state
s##disk_events
s##badblocks
s##reclaim_state
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##writeback_control
s##swap_info_struct
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
dm_block_manager_create s#dm_block_manager * dm_block_manager_create ( s#block_device * , unsigned , unsigned ) 
dm_block_manager_destroy void dm_block_manager_destroy ( s#dm_block_manager * ) 
dm_bm_block_size unsigned dm_bm_block_size ( s#dm_block_manager * ) 
s#dm_block_validator struct dm_block_validator { const char * name ; void ( * prepare_for_write ) ( s#dm_block_validator * , s#dm_block * , t#size_t ) ; int ( * check ) ( s#dm_block_validator * , s#dm_block * , t#size_t ) ; } 
dm_bm_read_lock int dm_bm_read_lock ( s#dm_block_manager * , t#dm_block_t , s#dm_block_validator * , s#dm_block * * ) 
dm_bm_write_lock int dm_bm_write_lock ( s#dm_block_manager * , t#dm_block_t , s#dm_block_validator * , s#dm_block * * ) 
dm_bm_write_lock_zero int dm_bm_write_lock_zero ( s#dm_block_manager * , t#dm_block_t , s#dm_block_validator * , s#dm_block * * ) 
dm_bm_unlock void dm_bm_unlock ( s#dm_block * ) 
dm_bm_flush int dm_bm_flush ( s#dm_block_manager * ) 
dm_bm_is_read_only t#bool dm_bm_is_read_only ( s#dm_block_manager * ) 
dm_bm_set_read_only void dm_bm_set_read_only ( s#dm_block_manager * ) 
dm_bm_set_read_write void dm_bm_set_read_write ( s#dm_block_manager * ) 
dm_bm_checksum t#u32 dm_bm_checksum ( const void * , t#size_t , t#u32 ) 

/* drivers/md/persistent-data/dm-btree.o */
s##dm_transaction_manager
dm_btree_empty int dm_btree_empty ( s#dm_btree_info * , t#dm_block_t * ) 
dm_btree_del int dm_btree_del ( s#dm_btree_info * , t#dm_block_t ) 
dm_btree_lookup int dm_btree_lookup ( s#dm_btree_info * , t#dm_block_t , t#uint64_t * , void * ) 
dm_btree_lookup_next int dm_btree_lookup_next ( s#dm_btree_info * , t#dm_block_t , t#uint64_t * , t#uint64_t * , void * ) 
dm_btree_insert int dm_btree_insert ( s#dm_btree_info * , t#dm_block_t , t#uint64_t * , void * , t#dm_block_t * ) 
dm_btree_insert_notify int dm_btree_insert_notify ( s#dm_btree_info * , t#dm_block_t , t#uint64_t * , void * , t#dm_block_t * , int * ) 
dm_btree_find_highest_key int dm_btree_find_highest_key ( s#dm_btree_info * , t#dm_block_t , t#uint64_t * ) 
dm_btree_find_lowest_key int dm_btree_find_lowest_key ( s#dm_btree_info * , t#dm_block_t , t#uint64_t * ) 
dm_btree_walk int dm_btree_walk ( s#dm_btree_info * , t#dm_block_t , int ( * ) ( void * , t#uint64_t * , void * ) , void * ) 
s##dm_block
dm_btree_cursor_begin int dm_btree_cursor_begin ( s#dm_btree_info * , t#dm_block_t , t#bool , s#dm_btree_cursor * ) 
dm_btree_cursor_end void dm_btree_cursor_end ( s#dm_btree_cursor * ) 
dm_btree_cursor_next int dm_btree_cursor_next ( s#dm_btree_cursor * ) 
dm_btree_cursor_skip int dm_btree_cursor_skip ( s#dm_btree_cursor * , t#uint32_t ) 
dm_btree_cursor_get_value int dm_btree_cursor_get_value ( s#dm_btree_cursor * , t#uint64_t * , void * ) 

/* drivers/md/persistent-data/dm-btree-remove.o */
s##dm_transaction_manager
dm_btree_remove int dm_btree_remove ( s#dm_btree_info * , t#dm_block_t , t#uint64_t * , t#dm_block_t * ) 
dm_btree_remove_leaves int dm_btree_remove_leaves ( s#dm_btree_info * , t#dm_block_t , t#uint64_t * , t#uint64_t , t#dm_block_t * , unsigned * ) 

/* drivers/md/persistent-data/dm-space-map-disk.o */
t#dm_sm_threshold_fn typedef void ( * dm_sm_threshold_fn ) ( void * ) 
s#dm_space_map struct dm_space_map { void ( * destroy ) ( s#dm_space_map * ) ; int ( * extend ) ( s#dm_space_map * , t#dm_block_t ) ; int ( * get_nr_blocks ) ( s#dm_space_map * , t#dm_block_t * ) ; int ( * get_nr_free ) ( s#dm_space_map * , t#dm_block_t * ) ; int ( * get_count ) ( s#dm_space_map * , t#dm_block_t , t#uint32_t * ) ; int ( * count_is_more_than_one ) ( s#dm_space_map * , t#dm_block_t , int * ) ; int ( * set_count ) ( s#dm_space_map * , t#dm_block_t , t#uint32_t ) ; int ( * commit ) ( s#dm_space_map * ) ; int ( * inc_block ) ( s#dm_space_map * , t#dm_block_t ) ; int ( * dec_block ) ( s#dm_space_map * , t#dm_block_t ) ; int ( * new_block ) ( s#dm_space_map * , t#dm_block_t * ) ; int ( * root_size ) ( s#dm_space_map * , t#size_t * ) ; int ( * copy_root ) ( s#dm_space_map * , void * , t#size_t ) ; int ( * register_threshold_callback ) ( s#dm_space_map * , t#dm_block_t , t#dm_sm_threshold_fn , void * ) ; } 
s##dm_transaction_manager
dm_sm_disk_create s#dm_space_map * dm_sm_disk_create ( s#dm_transaction_manager * , t#dm_block_t ) 
dm_sm_disk_open s#dm_space_map * dm_sm_disk_open ( s#dm_transaction_manager * , void * , t#size_t ) 

/* drivers/md/persistent-data/dm-transaction-manager.o */
s##dm_transaction_manager
dm_tm_create_non_blocking_clone s#dm_transaction_manager * dm_tm_create_non_blocking_clone ( s#dm_transaction_manager * ) 
dm_tm_destroy void dm_tm_destroy ( s#dm_transaction_manager * ) 
dm_tm_pre_commit int dm_tm_pre_commit ( s#dm_transaction_manager * ) 
s##dm_block
dm_tm_commit int dm_tm_commit ( s#dm_transaction_manager * , s#dm_block * ) 
dm_tm_shadow_block int dm_tm_shadow_block ( s#dm_transaction_manager * , t#dm_block_t , s#dm_block_validator * , s#dm_block * * , int * ) 
dm_tm_read_lock int dm_tm_read_lock ( s#dm_transaction_manager * , t#dm_block_t , s#dm_block_validator * , s#dm_block * * ) 
dm_tm_unlock void dm_tm_unlock ( s#dm_transaction_manager * , s#dm_block * ) 
dm_tm_inc void dm_tm_inc ( s#dm_transaction_manager * , t#dm_block_t ) 
dm_tm_dec void dm_tm_dec ( s#dm_transaction_manager * , t#dm_block_t ) 
dm_tm_issue_prefetches void dm_tm_issue_prefetches ( s#dm_transaction_manager * ) 
s##dm_block_manager
dm_tm_create_with_sm int dm_tm_create_with_sm ( s#dm_block_manager * , t#dm_block_t , s#dm_transaction_manager * * , s#dm_space_map * * ) 
dm_tm_open_with_sm int dm_tm_open_with_sm ( s#dm_block_manager * , t#dm_block_t , void * , t#size_t , s#dm_transaction_manager * * , s#dm_space_map * * ) 

/* drivers/md/raid5.o */
s##sock
s##vfsmount
s##posix_acl
s##device_private
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##bpf_prog_array
s##cgroup_taskset
s##pipe_inode_info
s##swap_info_struct
s##kmem_cache
s##mem_cgroup
s##mempolicy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_mq_ctx
s##blk_mq_hw_ctx
s##blk_mq_alloc_data
s##blk_mq_debugfs_attr
s##blk_queue_stats
s##rq_wb
s##blk_mq_ops
s##workqueue_struct
s##blk_stat_callback
s##blk_flush_queue
s##bsg_job
s##throtl_data
s##blk_mq_tag_set
s##hd_geometry
s##pr_ops
s##timer_rand_state
s##disk_events
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##mtd_info
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##md_cluster_info
raid5_set_cache_size extern int raid5_set_cache_size ( s#mddev * , int ) 

/* drivers/md/raid5-cache.o */
s##module
s##device_private
s##sock
s##vfsmount
s##posix_acl
s##workqueue_struct
s##bpf_prog_array
s##cgroup_taskset
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##pipe_inode_info
s##swap_info_struct
s##kmem_cache
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##mmu_notifier_mm
s##xol_area
s##compat_timespec
s##pollfd
s##pid_namespace
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##reclaim_state
s##blk_mq_ctx
s##blk_mq_hw_ctx
s##blk_mq_alloc_data
s##blk_mq_debugfs_attr
s##blk_queue_stats
s##rq_wb
s##blk_mq_ops
s##blk_stat_callback
s##blk_trace
s##blk_flush_queue
s##bsg_job
s##throtl_data
s##blk_mq_tag_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##mtd_info
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##hd_geometry
s##pr_ops
s##timer_rand_state
s##disk_events
s##md_cluster_info
r5c_journal_mode_set extern int r5c_journal_mode_set ( s#mddev * , int ) 

/* drivers/media/cec/cec-adap.o */
s##sock
s##vfsmount
s##posix_acl
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##mmu_notifier_mm
s##xol_area
s##pid_namespace
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##bpf_prog_array
s##cgroup_taskset
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##device_private
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##nlm_lockowner
s##nfs4_lock_state
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##ir_raw_event_ctrl
s##input_mt
cec_transmit_done_ts void cec_transmit_done_ts ( s#cec_adapter * , t#u8 , t#u8 , t#u8 , t#u8 , t#u8 , t#ktime_t ) 
cec_transmit_attempt_done_ts void cec_transmit_attempt_done_ts ( s#cec_adapter * , t#u8 , t#ktime_t ) 
cec_transmit_msg int cec_transmit_msg ( s#cec_adapter * , s#cec_msg * , t#bool ) 
cec_received_msg_ts void cec_received_msg_ts ( s#cec_adapter * , s#cec_msg * , t#ktime_t ) 
cec_s_phys_addr void cec_s_phys_addr ( s#cec_adapter * , t#u16 , t#bool ) 
cec_s_phys_addr_from_edid void cec_s_phys_addr_from_edid ( s#cec_adapter * , const s#edid * ) 
cec_s_log_addrs int cec_s_log_addrs ( s#cec_adapter * , s#cec_log_addrs * , t#bool ) 

/* drivers/media/cec/cec-core.o */
s##sock
s##vfsmount
s##posix_acl
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##mmu_notifier_mm
s##xol_area
s##pid_namespace
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##bpf_prog_array
s##cgroup_taskset
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##device_private
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##nlm_lockowner
s##nfs4_lock_state
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##ir_raw_event_ctrl
s##input_mt
cec_allocate_adapter s#cec_adapter * cec_allocate_adapter ( const s#cec_adap_ops * , void * , const char * , t#u32 , t#u8 ) 
cec_register_adapter int cec_register_adapter ( s#cec_adapter * , s#device * ) 
cec_unregister_adapter void cec_unregister_adapter ( s#cec_adapter * ) 
cec_delete_adapter void cec_delete_adapter ( s#cec_adapter * ) 

/* drivers/media/cec/cec-edid.o */
cec_get_edid_phys_addr t#u16 cec_get_edid_phys_addr ( const t#u8 * , unsigned int , unsigned int * ) 
cec_set_edid_phys_addr void cec_set_edid_phys_addr ( t#u8 * , unsigned int , t#u16 ) 
cec_phys_addr_for_input t#u16 cec_phys_addr_for_input ( t#u16 , t#u8 ) 
cec_phys_addr_validate int cec_phys_addr_validate ( t#u16 , t#u16 * , t#u16 * ) 

/* drivers/misc/c2port/core.o */
s#c2port_ops struct c2port_ops { unsigned short block_size ; unsigned short blocks_num ; void ( * access ) ( s#c2port_device * , int ) ; void ( * c2d_dir ) ( s#c2port_device * , int ) ; int ( * c2d_get ) ( s#c2port_device * ) ; void ( * c2d_set ) ( s#c2port_device * , int ) ; void ( * c2ck_set ) ( s#c2port_device * , int ) ; } 
s##device_private
s##sock
s##seq_file
s##vfsmount
s##posix_acl
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##fwnode_handle
s##iommu_group
s##iommu_fwspec
s#c2port_device struct c2port_device { ; unsigned int access : 1 ; unsigned int flash_access : 1 ; ; int id ; char name [ 32 ] ; s#c2port_ops * ops ; s#mutex mutex ; s#device * dev ; void * private_data ; } 
c2port_device_register extern s#c2port_device * c2port_device_register ( char * , s#c2port_ops * , void * ) 
c2port_device_unregister extern void c2port_device_unregister ( s#c2port_device * ) 

/* drivers/misc/echo/echo.o */
t#int16_t typedef t#__s16 int16_t 
s#fir16_state_t struct fir16_state_t { int taps ; int curr_pos ; const t#int16_t * coeffs ; t#int16_t * history ; } 
s#oslec_state struct oslec_state { t#int16_t tx ; t#int16_t rx ; t#int16_t clean ; t#int16_t clean_nlp ; int nonupdate_dwell ; int curr_pos ; int taps ; int log2taps ; int adaption_mode ; int cond_met ; t#int32_t pstates ; t#int16_t adapt ; t#int32_t factor ; t#int16_t shift ; int ltxacc ; int lrxacc ; int lcleanacc ; int lclean_bgacc ; int ltx ; int lrx ; int lclean ; int lclean_bg ; int lbgn ; int lbgn_acc ; int lbgn_upper ; int lbgn_upper_acc ; s#fir16_state_t fir_state ; s#fir16_state_t fir_state_bg ; t#int16_t * fir_taps16 [ 2 ] ; int tx_1 ; int tx_2 ; int rx_1 ; int rx_2 ; t#int32_t xvtx [ 5 ] ; t#int32_t yvtx [ 5 ] ; t#int32_t xvrx [ 5 ] ; t#int32_t yvrx [ 5 ] ; int cng_level ; int cng_rndnum ; int cng_filter ; t#int16_t * snapshot ; } 
oslec_create s#oslec_state * oslec_create ( int , int ) 
oslec_free void oslec_free ( s#oslec_state * ) 
oslec_adaption_mode void oslec_adaption_mode ( s#oslec_state * , int ) 
oslec_flush void oslec_flush ( s#oslec_state * ) 
oslec_snapshot void oslec_snapshot ( s#oslec_state * ) 
oslec_update t#int16_t oslec_update ( s#oslec_state * , t#int16_t , t#int16_t ) 
oslec_hpf_tx t#int16_t oslec_hpf_tx ( s#oslec_state * , t#int16_t ) 

/* drivers/misc/eeprom/eeprom_93cx6.o */
s#eeprom_93cx6 struct eeprom_93cx6 { void * data ; void ( * register_read ) ( s#eeprom_93cx6 * ) ; void ( * register_write ) ( s#eeprom_93cx6 * ) ; int width ; char drive_data ; char reg_data_in ; char reg_data_out ; char reg_data_clock ; char reg_chip_select ; } 
eeprom_93cx6_read extern void eeprom_93cx6_read ( s#eeprom_93cx6 * , const t#u8 , t#u16 * ) 
eeprom_93cx6_multiread extern void eeprom_93cx6_multiread ( s#eeprom_93cx6 * , const t#u8 , t#__le16 * , const t#u16 ) 
eeprom_93cx6_readb extern void eeprom_93cx6_readb ( s#eeprom_93cx6 * , const t#u8 , t#u8 * ) 
eeprom_93cx6_multireadb extern void eeprom_93cx6_multireadb ( s#eeprom_93cx6 * , const t#u8 , t#u8 * , const t#u16 ) 
eeprom_93cx6_wren extern void eeprom_93cx6_wren ( s#eeprom_93cx6 * , t#bool ) 
eeprom_93cx6_write extern void eeprom_93cx6_write ( s#eeprom_93cx6 * , t#u8 , t#u16 ) 

/* drivers/net/ethernet/mellanox/mlx4/alloc.o */
s##msi_controller
s##proc_dir_entry
s##device_private
s##sock
s##vfsmount
s##posix_acl
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##kmem_cache
s##fs_pin
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##uevent_sock
s##sec_path
s##neigh_parms
s##neighbour
s##udp_tunnel_info
s##bpf_prog
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##l3mdev_ops
s##ndisc_ops
s##xfrm_state
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##mini_Qdisc
s##Qdisc
s##nf_hook_entry
s#cpu_rmap struct cpu_rmap { s#kref refcount ; t#u16 size , used ; void * * obj ; struct { t#u16 index ; t#u16 dist ; } near [ 0 ] ; } 
s##pcpu_dstats
s##garp_port
s##mrp_port
s##rtnl_link_ops
s##phy_device
s##sfp_bus
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##xt_table
s##inet_hashinfo
s##fib_notifier_ops
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##workqueue_struct
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##bpf_prog_array
s##cgroup_taskset
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##hotplug_slot
s##pci_vpd
s##pci_sriov
E#MLX4_MAX_PORTS 2 
e#mlx4_port_type enum mlx4_port_type { MLX4_PORT_TYPE_NONE = 0 , MLX4_PORT_TYPE_IB = 1 , MLX4_PORT_TYPE_ETH = 2 , MLX4_PORT_TYPE_AUTO = 3 } 
e#mlx4_pci_status enum mlx4_pci_status { MLX4_PCI_STATUS_DISABLED , MLX4_PCI_STATUS_ENABLED , } 
s##devlink_region
s#mlx4_fw_crdump struct mlx4_fw_crdump { t#bool snapshot_enable ; s#devlink_region * region_crspace ; s#devlink_region * region_fw_health ; } 
s#mlx4_dev_persistent struct mlx4_dev_persistent { s#pci_dev * pdev ; s#mlx4_dev * dev ; int nvfs [ E#MLX4_MAX_PORTS + 1 ] ; int num_vfs ; e#mlx4_port_type curr_port_type [ E#MLX4_MAX_PORTS + 1 ] ; e#mlx4_port_type curr_port_poss_type [ E#MLX4_MAX_PORTS + 1 ] ; s#work_struct catas_work ; s#workqueue_struct * catas_wq ; s#mutex device_state_mutex ; t#u8 state ; s#mutex interface_state_mutex ; t#u8 interface_state ; s#mutex pci_status_mutex ; e#mlx4_pci_status pci_status ; s#mlx4_fw_crdump crdump ; } 
s#mlx4_spec_qps struct mlx4_spec_qps { t#u32 qp0_qkey ; t#u32 qp0_proxy ; t#u32 qp0_tunnel ; t#u32 qp1_proxy ; t#u32 qp1_tunnel ; } 
E#MLX4_QP_REGION_RSS_RAW_ETH ( 0 ) + 1 
E#MLX4_NUM_QP_REGION ( E#MLX4_QP_REGION_RSS_RAW_ETH ) + 4 
s#mlx4_rate_limit_caps struct mlx4_rate_limit_caps { t#u16 num_rates ; t#u8 min_unit ; t#u16 min_val ; t#u8 max_unit ; t#u16 max_val ; } 
s#mlx4_caps struct mlx4_caps { t#u64 fw_ver ; t#u32 function ; int num_ports ; int vl_cap [ E#MLX4_MAX_PORTS + 1 ] ; int ib_mtu_cap [ E#MLX4_MAX_PORTS + 1 ] ; t#__be32 ib_port_def_cap [ E#MLX4_MAX_PORTS + 1 ] ; t#u64 def_mac [ E#MLX4_MAX_PORTS + 1 ] ; int eth_mtu_cap [ E#MLX4_MAX_PORTS + 1 ] ; int gid_table_len [ E#MLX4_MAX_PORTS + 1 ] ; int pkey_table_len [ E#MLX4_MAX_PORTS + 1 ] ; int trans_type [ E#MLX4_MAX_PORTS + 1 ] ; int vendor_oui [ E#MLX4_MAX_PORTS + 1 ] ; int wavelength [ E#MLX4_MAX_PORTS + 1 ] ; t#u64 trans_code [ E#MLX4_MAX_PORTS + 1 ] ; int local_ca_ack_delay ; int num_uars ; t#u32 uar_page_size ; int bf_reg_size ; int bf_regs_per_page ; int max_sq_sg ; int max_rq_sg ; int num_qps ; int max_wqes ; int max_sq_desc_sz ; int max_rq_desc_sz ; int max_qp_init_rdma ; int max_qp_dest_rdma ; int max_tc_eth ; s#mlx4_spec_qps * spec_qps ; int num_srqs ; int max_srq_wqes ; int max_srq_sge ; int reserved_srqs ; int num_cqs ; int max_cqes ; int reserved_cqs ; int num_sys_eqs ; int num_eqs ; int reserved_eqs ; int num_comp_vectors ; int num_mpts ; int max_fmr_maps ; int num_mtts ; int fmr_reserved_mtts ; int reserved_mtts ; int reserved_mrws ; int reserved_uars ; int num_mgms ; int num_amgms ; int reserved_mcgs ; int num_qp_per_mgm ; int steering_mode ; int dmfs_high_steer_mode ; int fs_log_max_ucast_qp_range_size ; int num_pds ; int reserved_pds ; int max_xrcds ; int reserved_xrcds ; int mtt_entry_sz ; t#u32 max_msg_sz ; t#u32 page_size_cap ; t#u64 flags ; t#u64 flags2 ; t#u32 bmme_flags ; t#u32 reserved_lkey ; t#u16 stat_rate_support ; t#u8 port_width_cap [ E#MLX4_MAX_PORTS + 1 ] ; int max_gso_sz ; int max_rss_tbl_sz ; int reserved_qps_cnt [ E#MLX4_NUM_QP_REGION ] ; int reserved_qps ; int reserved_qps_base [ E#MLX4_NUM_QP_REGION ] ; int log_num_macs ; int log_num_vlans ; e#mlx4_port_type port_type [ E#MLX4_MAX_PORTS + 1 ] ; t#u8 supported_type [ E#MLX4_MAX_PORTS + 1 ] ; t#u8 suggested_type [ E#MLX4_MAX_PORTS + 1 ] ; t#u8 default_sense [ E#MLX4_MAX_PORTS + 1 ] ; t#u32 port_mask [ E#MLX4_MAX_PORTS + 1 ] ; e#mlx4_port_type possible_type [ E#MLX4_MAX_PORTS + 1 ] ; t#u32 max_counters ; t#u8 port_ib_mtu [ E#MLX4_MAX_PORTS + 1 ] ; t#u16 sqp_demux ; t#u32 eqe_size ; t#u32 cqe_size ; t#u8 eqe_factor ; t#u32 userspace_caps ; t#u32 function_caps ; t#u16 hca_core_clock ; t#u64 phys_port_id [ E#MLX4_MAX_PORTS + 1 ] ; int tunnel_offload_mode ; t#u8 rx_checksum_flags_port [ E#MLX4_MAX_PORTS + 1 ] ; t#u8 phv_bit [ E#MLX4_MAX_PORTS + 1 ] ; t#u8 alloc_res_qp_mask ; t#u32 dmfs_high_rate_qpn_base ; t#u32 dmfs_high_rate_qpn_range ; t#u32 vf_caps ; t#bool wol_port [ E#MLX4_MAX_PORTS + 1 ] ; s#mlx4_rate_limit_caps rl_caps ; t#u32 health_buffer_addrs ; } 
s#mlx4_phys_caps struct mlx4_phys_caps { t#u32 gid_phys_table_len [ E#MLX4_MAX_PORTS + 1 ] ; t#u32 pkey_phys_table_len [ E#MLX4_MAX_PORTS + 1 ] ; t#u32 num_phys_eqs ; t#u32 base_sqpn ; t#u32 base_proxy_sqpn ; t#u32 base_tunnel_sqpn ; } 
s#mlx4_quotas struct mlx4_quotas { int qp ; int cq ; int srq ; int mpt ; int mtt ; int counter ; int xrcd ; } 
E#MLX4_BOARD_ID_LEN 64 
s#mlx4_vf_dev struct mlx4_vf_dev { t#u8 min_port ; t#u8 n_ports ; } 
s#mlx4_dev struct mlx4_dev { s#mlx4_dev_persistent * persist ; unsigned long flags ; unsigned long num_slaves ; s#mlx4_caps caps ; s#mlx4_phys_caps phys_caps ; s#mlx4_quotas quotas ; s#radix_tree_root qp_table_tree ; t#u8 rev_id ; t#u8 port_random_macs ; char board_id [ E#MLX4_BOARD_ID_LEN ] ; int numa_node ; int oper_log_mgm_entry_size ; t#u64 regid_promisc_array [ E#MLX4_MAX_PORTS + 1 ] ; t#u64 regid_allmulti_array [ E#MLX4_MAX_PORTS + 1 ] ; s#mlx4_vf_dev * dev_vfs ; t#u8 uar_page_shift ; } 
s#mlx4_buf_list struct mlx4_buf_list { void * buf ; t#dma_addr_t map ; } 
s#mlx4_buf struct mlx4_buf { s#mlx4_buf_list direct ; s#mlx4_buf_list * page_list ; int nbufs ; int npages ; int page_shift ; } 
mlx4_buf_alloc int mlx4_buf_alloc ( s#mlx4_dev * , int , int , s#mlx4_buf * ) 
mlx4_buf_free void mlx4_buf_free ( s#mlx4_dev * , int , s#mlx4_buf * ) 
E#MLX4_DB_PER_PAGE ( ( 1UL ) << 12 ) / 4 
s#mlx4_db_pgdir struct mlx4_db_pgdir { s#list_head list ; unsigned long order0 [ ( ( ( E#MLX4_DB_PER_PAGE ) + ( 8 * sizeof ( long ) ) - 1 ) / ( 8 * sizeof ( long ) ) ) ] ; unsigned long order1 [ ( ( ( E#MLX4_DB_PER_PAGE / 2 ) + ( 8 * sizeof ( long ) ) - 1 ) / ( 8 * sizeof ( long ) ) ) ] ; unsigned long * bits [ 2 ] ; t#__be32 * db_page ; t#dma_addr_t db_dma ; } 
s##mlx4_ib_user_db_page
s#mlx4_db struct mlx4_db { t#__be32 * db ; union { s#mlx4_db_pgdir * pgdir ; s#mlx4_ib_user_db_page * user_page ; } u ; t#dma_addr_t dma ; int index ; int order ; } 
mlx4_db_alloc int mlx4_db_alloc ( s#mlx4_dev * , s#mlx4_db * , int ) 
mlx4_db_free void mlx4_db_free ( s#mlx4_dev * , s#mlx4_db * ) 
s#mlx4_mtt struct mlx4_mtt { t#u32 offset ; int order ; int page_shift ; } 
s#mlx4_hwq_resources struct mlx4_hwq_resources { s#mlx4_db db ; s#mlx4_mtt mtt ; s#mlx4_buf buf ; } 
mlx4_alloc_hwq_res int mlx4_alloc_hwq_res ( s#mlx4_dev * , s#mlx4_hwq_resources * , int ) 
mlx4_free_hwq_res void mlx4_free_hwq_res ( s#mlx4_dev * , s#mlx4_hwq_resources * , int ) 

/* drivers/net/ethernet/mellanox/mlx4/cmd.o */
s##msi_controller
s##proc_dir_entry
s##device_private
s##posix_acl
s##vfsmount
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##workqueue_struct
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##kmem_cache
s##fs_pin
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##uevent_sock
s##sec_path
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##xfrm_state
s##lwtunnel_state
s##uncached_list
s##rt6_info
s##dn_route
s##prefix_info
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##nf_hook_entry
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
s##prot_inuse
s##ipv4_devconf
s##xt_table
s##inet_hashinfo
s##rt6_statistics
s##fib6_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##eventfd_ctx
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sock_reuseport
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##hotplug_slot
s##pci_vpd
s##pci_sriov
s##devlink_region
__mlx4_cmd int __mlx4_cmd ( s#mlx4_dev * , t#u64 , t#u64 * , int , t#u32 , t#u8 , t#u16 , unsigned long , int ) 
s#mlx4_cmd_mailbox struct mlx4_cmd_mailbox { void * buf ; t#dma_addr_t dma ; } 
mlx4_alloc_cmd_mailbox s#mlx4_cmd_mailbox * mlx4_alloc_cmd_mailbox ( s#mlx4_dev * ) 
mlx4_free_cmd_mailbox void mlx4_free_cmd_mailbox ( s#mlx4_dev * , s#mlx4_cmd_mailbox * ) 
s#mlx4_active_ports struct mlx4_active_ports { unsigned long ports [ ( ( ( E#MLX4_MAX_PORTS ) + ( 8 * sizeof ( long ) ) - 1 ) / ( 8 * sizeof ( long ) ) ) ] ; } 
mlx4_get_active_ports s#mlx4_active_ports mlx4_get_active_ports ( s#mlx4_dev * , int ) 
mlx4_slave_convert_port int mlx4_slave_convert_port ( s#mlx4_dev * , int , int ) 
mlx4_phys_to_slave_port int mlx4_phys_to_slave_port ( s#mlx4_dev * , int , int ) 
E#MLX4_MFUNC_MAX 128 
s#mlx4_slaves_pport struct mlx4_slaves_pport { unsigned long slaves [ ( ( ( E#MLX4_MFUNC_MAX ) + ( 8 * sizeof ( long ) ) - 1 ) / ( 8 * sizeof ( long ) ) ) ] ; } 
mlx4_phys_to_slaves_pport s#mlx4_slaves_pport mlx4_phys_to_slaves_pport ( s#mlx4_dev * , int ) 
mlx4_phys_to_slaves_pport_actv s#mlx4_slaves_pport mlx4_phys_to_slaves_pport_actv ( s#mlx4_dev * , const s#mlx4_active_ports * ) 
mlx4_set_vf_mac int mlx4_set_vf_mac ( s#mlx4_dev * , int , int , t#u8 * ) 
mlx4_set_vf_vlan int mlx4_set_vf_vlan ( s#mlx4_dev * , int , int , t#u16 , t#u8 , t#__be16 ) 
mlx4_set_vf_rate int mlx4_set_vf_rate ( s#mlx4_dev * , int , int , int , int ) 
mlx4_get_slave_default_vlan t#bool mlx4_get_slave_default_vlan ( s#mlx4_dev * , int , int , t#u16 * , t#u8 * ) 
mlx4_set_vf_spoofchk int mlx4_set_vf_spoofchk ( s#mlx4_dev * , int , int , t#bool ) 
mlx4_get_vf_config int mlx4_get_vf_config ( s#mlx4_dev * , int , int , s#ifla_vf_info * ) 
mlx4_set_vf_link_state int mlx4_set_vf_link_state ( s#mlx4_dev * , int , int , int ) 
s#mlx4_counter struct mlx4_counter { t#u8 reserved1 [ 3 ] ; t#u8 counter_mode ; t#__be32 num_ifc ; t#u32 reserved2 [ 2 ] ; t#__be64 rx_frames ; t#__be64 rx_bytes ; t#__be64 tx_frames ; t#__be64 tx_bytes ; } 
mlx4_get_counter_stats int mlx4_get_counter_stats ( s#mlx4_dev * , int , s#mlx4_counter * , int ) 
mlx4_get_vf_stats int mlx4_get_vf_stats ( s#mlx4_dev * , int , int , s#ifla_vf_stats * ) 
mlx4_vf_smi_enabled int mlx4_vf_smi_enabled ( s#mlx4_dev * , int , int ) 
mlx4_vf_get_enable_smi_admin int mlx4_vf_get_enable_smi_admin ( s#mlx4_dev * , int , int ) 
mlx4_vf_set_enable_smi_admin int mlx4_vf_set_enable_smi_admin ( s#mlx4_dev * , int , int , int ) 

/* drivers/net/ethernet/mellanox/mlx4/cq.o */
s##msi_controller
s##proc_dir_entry
s##device_private
s##sock
s##vfsmount
s##posix_acl
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##kmem_cache
s##fs_pin
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##uevent_sock
s##sec_path
s##neigh_parms
s##neighbour
s##udp_tunnel_info
s##bpf_prog
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##l3mdev_ops
s##ndisc_ops
s##xfrm_state
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##mini_Qdisc
s##Qdisc
s##nf_hook_entry
s##pcpu_dstats
s##garp_port
s##mrp_port
s##rtnl_link_ops
s##phy_device
s##sfp_bus
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##xt_table
s##inet_hashinfo
s##fib_notifier_ops
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##workqueue_struct
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##bpf_prog_array
s##cgroup_taskset
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##hotplug_slot
s##pci_vpd
s##pci_sriov
s##devlink_region
e#mlx4_event enum mlx4_event { MLX4_EVENT_TYPE_COMP = 0x00 , MLX4_EVENT_TYPE_PATH_MIG = 0x01 , MLX4_EVENT_TYPE_COMM_EST = 0x02 , MLX4_EVENT_TYPE_SQ_DRAINED = 0x03 , MLX4_EVENT_TYPE_SRQ_QP_LAST_WQE = 0x13 , MLX4_EVENT_TYPE_SRQ_LIMIT = 0x14 , MLX4_EVENT_TYPE_CQ_ERROR = 0x04 , MLX4_EVENT_TYPE_WQ_CATAS_ERROR = 0x05 , MLX4_EVENT_TYPE_EEC_CATAS_ERROR = 0x06 , MLX4_EVENT_TYPE_PATH_MIG_FAILED = 0x07 , MLX4_EVENT_TYPE_WQ_INVAL_REQ_ERROR = 0x10 , MLX4_EVENT_TYPE_WQ_ACCESS_ERROR = 0x11 , MLX4_EVENT_TYPE_SRQ_CATAS_ERROR = 0x12 , MLX4_EVENT_TYPE_LOCAL_CATAS_ERROR = 0x08 , MLX4_EVENT_TYPE_PORT_CHANGE = 0x09 , MLX4_EVENT_TYPE_EQ_OVERFLOW = 0x0f , MLX4_EVENT_TYPE_ECC_DETECT = 0x0e , MLX4_EVENT_TYPE_CMD = 0x0a , MLX4_EVENT_TYPE_VEP_UPDATE = 0x19 , MLX4_EVENT_TYPE_COMM_CHANNEL = 0x18 , MLX4_EVENT_TYPE_OP_REQUIRED = 0x1a , MLX4_EVENT_TYPE_FATAL_WARNING = 0x1b , MLX4_EVENT_TYPE_FLR_EVENT = 0x1c , MLX4_EVENT_TYPE_PORT_MNG_CHG_EVENT = 0x1d , MLX4_EVENT_TYPE_RECOVERABLE_ERROR_EVENT = 0x3e , MLX4_EVENT_TYPE_NONE = 0xff , } 
s#mlx4_uar struct mlx4_uar { unsigned long pfn ; int index ; s#list_head bf_list ; unsigned free_bf_bmap ; void * map ; void * bf_map ; } 
s#mlx4_cq struct mlx4_cq { void ( * comp ) ( s#mlx4_cq * ) ; void ( * event ) ( s#mlx4_cq * , e#mlx4_event ) ; s#mlx4_uar * uar ; t#u32 cons_index ; t#u16 irq ; t#__be32 * set_ci_db ; t#__be32 * arm_db ; int arm_sn ; int cqn ; unsigned vector ; t#refcount_t refcount ; s#completion free ; struct { s#list_head list ; void ( * comp ) ( s#mlx4_cq * ) ; void * priv ; } tasklet_ctx ; int reset_notify_added ; s#list_head reset_notify ; t#u8 usage ; } 
mlx4_cq_modify int mlx4_cq_modify ( s#mlx4_dev * , s#mlx4_cq * , t#u16 , t#u16 ) 
mlx4_cq_resize int mlx4_cq_resize ( s#mlx4_dev * , s#mlx4_cq * , int , s#mlx4_mtt * ) 
mlx4_cq_alloc int mlx4_cq_alloc ( s#mlx4_dev * , int , s#mlx4_mtt * , s#mlx4_uar * , t#u64 , s#mlx4_cq * , unsigned , int , int ) 
mlx4_cq_free void mlx4_cq_free ( s#mlx4_dev * , s#mlx4_cq * ) 

/* drivers/net/ethernet/mellanox/mlx4/eq.o */
s##msi_controller
s##proc_dir_entry
s##device_private
s##sock
s##vfsmount
s##posix_acl
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##kmem_cache
s##fs_pin
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##uevent_sock
s##sec_path
s##neigh_parms
s##neighbour
s##udp_tunnel_info
s##bpf_prog
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##l3mdev_ops
s##ndisc_ops
s##xfrm_state
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##mini_Qdisc
s##Qdisc
s##nf_hook_entry
s##pcpu_dstats
s##garp_port
s##mrp_port
s##rtnl_link_ops
s##phy_device
s##sfp_bus
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##xt_table
s##inet_hashinfo
s##fib_notifier_ops
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##workqueue_struct
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##bpf_prog_array
s##cgroup_taskset
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##hotplug_slot
s##pci_vpd
s##pci_sriov
s##devlink_region
mlx4_gen_pkey_eqe int mlx4_gen_pkey_eqe ( s#mlx4_dev * , int , t#u8 ) 
mlx4_gen_guid_change_eqe int mlx4_gen_guid_change_eqe ( s#mlx4_dev * , int , t#u8 ) 
mlx4_gen_port_state_change_eqe int mlx4_gen_port_state_change_eqe ( s#mlx4_dev * , int , t#u8 , t#u8 ) 
e#slave_port_state enum slave_port_state { SLAVE_PORT_DOWN = 0 , SLAVE_PENDING_UP , SLAVE_PORT_UP , } 
mlx4_get_slave_port_state e#slave_port_state mlx4_get_slave_port_state ( s#mlx4_dev * , int , t#u8 ) 
e#slave_port_gen_event enum slave_port_gen_event { SLAVE_PORT_GEN_EVENT_DOWN = 0 , SLAVE_PORT_GEN_EVENT_UP , SLAVE_PORT_GEN_EVENT_NONE , } 
set_and_calc_slave_port_state int set_and_calc_slave_port_state ( s#mlx4_dev * , int , t#u8 , int , e#slave_port_gen_event * ) 
mlx4_gen_slaves_port_mgt_ev int mlx4_gen_slaves_port_mgt_ev ( s#mlx4_dev * , t#u8 , int ) 
mlx4_test_async int mlx4_test_async ( s#mlx4_dev * ) 
mlx4_test_interrupt int mlx4_test_interrupt ( s#mlx4_dev * , int ) 
mlx4_is_eq_vector_valid t#bool mlx4_is_eq_vector_valid ( s#mlx4_dev * , t#u8 , int ) 
mlx4_get_eqs_per_port t#u32 mlx4_get_eqs_per_port ( s#mlx4_dev * , t#u8 ) 
mlx4_is_eq_shared int mlx4_is_eq_shared ( s#mlx4_dev * , int ) 
mlx4_get_cpu_rmap s#cpu_rmap * mlx4_get_cpu_rmap ( s#mlx4_dev * , int ) 
mlx4_assign_eq int mlx4_assign_eq ( s#mlx4_dev * , t#u8 , int * ) 
mlx4_eq_get_irq int mlx4_eq_get_irq ( s#mlx4_dev * , int ) 
mlx4_release_eq void mlx4_release_eq ( s#mlx4_dev * , int ) 

/* drivers/net/ethernet/mellanox/mlx4/fw.o */
s##msi_controller
s##proc_dir_entry
s##device_private
s##sock
s##vfsmount
s##posix_acl
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##kmem_cache
s##fs_pin
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##uevent_sock
s##sec_path
s##neigh_parms
s##neighbour
s##udp_tunnel_info
s##bpf_prog
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##l3mdev_ops
s##ndisc_ops
s##xfrm_state
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##mini_Qdisc
s##Qdisc
s##nf_hook_entry
s##pcpu_dstats
s##garp_port
s##mrp_port
s##rtnl_link_ops
s##phy_device
s##sfp_bus
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##xt_table
s##inet_hashinfo
s##fib_notifier_ops
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##workqueue_struct
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##bpf_prog_array
s##cgroup_taskset
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##hotplug_slot
s##pci_vpd
s##pci_sriov
s##devlink_region
mlx4_get_slave_pkey_gid_tbl_len int mlx4_get_slave_pkey_gid_tbl_len ( s#mlx4_dev * , t#u8 , int * , int * ) 
mlx4_INIT_PORT int mlx4_INIT_PORT ( s#mlx4_dev * , int ) 
mlx4_CLOSE_PORT int mlx4_CLOSE_PORT ( s#mlx4_dev * , int ) 
s#mlx4_config_dev_params struct mlx4_config_dev_params { t#u16 vxlan_udp_dport ; t#u8 rx_csum_flags_port_1 ; t#u8 rx_csum_flags_port_2 ; } 
mlx4_config_dev_retrieval int mlx4_config_dev_retrieval ( s#mlx4_dev * , s#mlx4_config_dev_params * ) 
mlx4_config_vxlan_port int mlx4_config_vxlan_port ( s#mlx4_dev * , t#__be16 ) 
mlx4_config_roce_v2_port int mlx4_config_roce_v2_port ( s#mlx4_dev * , t#u16 ) 
mlx4_query_diag_counters int mlx4_query_diag_counters ( s#mlx4_dev * , t#u8 , const t#u32 [ ] , t#u32 [ ] , t#size_t , t#u8 ) 
mlx4_wol_read int mlx4_wol_read ( s#mlx4_dev * , t#u64 * , int ) 
mlx4_wol_write int mlx4_wol_write ( s#mlx4_dev * , t#u64 , int ) 
e#mlx4_access_reg_method enum mlx4_access_reg_method { MLX4_ACCESS_REG_QUERY = 0x1 , MLX4_ACCESS_REG_WRITE = 0x2 , } 
s#mlx4_ptys_reg struct mlx4_ptys_reg { t#u8 flags ; t#u8 local_port ; t#u8 resrvd2 ; t#u8 proto_mask ; t#__be32 resrvd3 [ 2 ] ; t#__be32 eth_proto_cap ; t#__be16 ib_width_cap ; t#__be16 ib_speed_cap ; t#__be32 resrvd4 ; t#__be32 eth_proto_admin ; t#__be16 ib_width_admin ; t#__be16 ib_speed_admin ; t#__be32 resrvd5 ; t#__be32 eth_proto_oper ; t#__be16 ib_width_oper ; t#__be16 ib_speed_oper ; t#__be32 resrvd6 ; t#__be32 eth_proto_lp_adv ; } 
mlx4_ACCESS_PTYS_REG int mlx4_ACCESS_PTYS_REG ( s#mlx4_dev * , e#mlx4_access_reg_method , s#mlx4_ptys_reg * ) 
get_phv_bit int get_phv_bit ( s#mlx4_dev * , t#u8 , int * ) 
set_phv_bit int set_phv_bit ( s#mlx4_dev * , t#u8 , int ) 
mlx4_get_is_vlan_offload_disabled int mlx4_get_is_vlan_offload_disabled ( s#mlx4_dev * , t#u8 , t#bool * ) 
mlx4_replace_zero_macs void mlx4_replace_zero_macs ( s#mlx4_dev * ) 

/* drivers/net/ethernet/mellanox/mlx4/fw_qos.o */
s##msi_controller
s##proc_dir_entry
s##device_private
s##sock
s##vfsmount
s##posix_acl
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##kmem_cache
s##fs_pin
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##uevent_sock
s##sec_path
s##neigh_parms
s##neighbour
s##udp_tunnel_info
s##bpf_prog
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##l3mdev_ops
s##ndisc_ops
s##xfrm_state
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##mini_Qdisc
s##Qdisc
s##nf_hook_entry
s##pcpu_dstats
s##garp_port
s##mrp_port
s##rtnl_link_ops
s##phy_device
s##sfp_bus
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##xt_table
s##inet_hashinfo
s##fib_notifier_ops
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##workqueue_struct
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##bpf_prog_array
s##cgroup_taskset
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##hotplug_slot
s##pci_vpd
s##pci_sriov
s##devlink_region
mlx4_SET_PORT_PRIO2TC int mlx4_SET_PORT_PRIO2TC ( s#mlx4_dev * , t#u8 , t#u8 * ) 
mlx4_SET_PORT_SCHEDULER int mlx4_SET_PORT_SCHEDULER ( s#mlx4_dev * , t#u8 , t#u8 * , t#u8 * , t#u16 * ) 
mlx4_ALLOCATE_VPP_get int mlx4_ALLOCATE_VPP_get ( s#mlx4_dev * , t#u8 , t#u16 * , t#u8 * ) 
mlx4_ALLOCATE_VPP_set int mlx4_ALLOCATE_VPP_set ( s#mlx4_dev * , t#u8 , t#u8 * ) 
s#mlx4_vport_qos_param struct mlx4_vport_qos_param { t#u32 bw_share ; t#u32 max_avg_bw ; t#u8 enable ; } 
mlx4_SET_VPORT_QOS_get int mlx4_SET_VPORT_QOS_get ( s#mlx4_dev * , t#u8 , t#u8 , s#mlx4_vport_qos_param * ) 
mlx4_SET_VPORT_QOS_set int mlx4_SET_VPORT_QOS_set ( s#mlx4_dev * , t#u8 , t#u8 , s#mlx4_vport_qos_param * ) 

/* drivers/net/ethernet/mellanox/mlx4/intf.o */
s##msi_controller
s##proc_dir_entry
s##device_private
s##sock
s##vfsmount
s##posix_acl
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##kmem_cache
s##fs_pin
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##uevent_sock
s##sec_path
s##neigh_parms
s##neighbour
s##udp_tunnel_info
s##bpf_prog
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##l3mdev_ops
s##ndisc_ops
s##xfrm_state
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##mini_Qdisc
s##Qdisc
s##nf_hook_entry
s##pcpu_dstats
s##garp_port
s##mrp_port
s##rtnl_link_ops
s##phy_device
s##sfp_bus
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##xt_table
s##inet_hashinfo
s##fib_notifier_ops
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##workqueue_struct
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##bpf_prog_array
s##cgroup_taskset
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##hotplug_slot
s##pci_vpd
s##pci_sriov
s##devlink_region
e#mlx4_dev_event enum mlx4_dev_event { MLX4_DEV_EVENT_CATASTROPHIC_ERROR , MLX4_DEV_EVENT_PORT_UP , MLX4_DEV_EVENT_PORT_DOWN , MLX4_DEV_EVENT_PORT_REINIT , MLX4_DEV_EVENT_PORT_MGMT_CHANGE , MLX4_DEV_EVENT_SLAVE_INIT , MLX4_DEV_EVENT_SLAVE_SHUTDOWN , } 
e#mlx4_protocol enum mlx4_protocol { MLX4_PROT_IB_IPV6 = 0 , MLX4_PROT_ETH , MLX4_PROT_IB_IPV4 , MLX4_PROT_FCOE } 
s#mlx4_interface struct mlx4_interface { void * ( * add ) ( s#mlx4_dev * ) ; void ( * remove ) ( s#mlx4_dev * , void * ) ; void ( * event ) ( s#mlx4_dev * , void * , e#mlx4_dev_event , unsigned long ) ; void * ( * get_dev ) ( s#mlx4_dev * , void * , t#u8 ) ; void ( * activate ) ( s#mlx4_dev * , void * ) ; s#list_head list ; e#mlx4_protocol protocol ; int flags ; } 
mlx4_register_interface int mlx4_register_interface ( s#mlx4_interface * ) 
mlx4_unregister_interface void mlx4_unregister_interface ( s#mlx4_interface * ) 
mlx4_get_protocol_dev void * mlx4_get_protocol_dev ( s#mlx4_dev * , e#mlx4_protocol , int ) 
e#devlink_dpipe_field_mapping_type enum devlink_dpipe_field_mapping_type { DEVLINK_DPIPE_FIELD_MAPPING_TYPE_NONE , DEVLINK_DPIPE_FIELD_MAPPING_TYPE_IFINDEX , } 
s#devlink_dpipe_field struct devlink_dpipe_field { const char * name ; unsigned int id ; unsigned int bitwidth ; e#devlink_dpipe_field_mapping_type mapping_type ; } 
s#devlink_dpipe_header struct devlink_dpipe_header { const char * name ; unsigned int id ; s#devlink_dpipe_field * fields ; unsigned int fields_count ; t#bool global ; } 
s#devlink_dpipe_headers struct devlink_dpipe_headers { s#devlink_dpipe_header * * headers ; unsigned int headers_count ; } 
e#devlink_port_type enum devlink_port_type { DEVLINK_PORT_TYPE_NOTSET , DEVLINK_PORT_TYPE_AUTO , DEVLINK_PORT_TYPE_ETH , DEVLINK_PORT_TYPE_IB , } 
e#devlink_sb_pool_type enum devlink_sb_pool_type { DEVLINK_SB_POOL_TYPE_INGRESS , DEVLINK_SB_POOL_TYPE_EGRESS , } 
e#devlink_sb_threshold_type enum devlink_sb_threshold_type { DEVLINK_SB_THRESHOLD_TYPE_STATIC , DEVLINK_SB_THRESHOLD_TYPE_DYNAMIC , } 
s#devlink_sb_pool_info struct devlink_sb_pool_info { e#devlink_sb_pool_type pool_type ; t#u32 size ; e#devlink_sb_threshold_type threshold_type ; } 
s#devlink_ops struct devlink_ops { int ( * reload ) ( s#devlink * , s#netlink_ext_ack * ) ; int ( * port_type_set ) ( s#devlink_port * , e#devlink_port_type ) ; int ( * port_split ) ( s#devlink * , unsigned int , unsigned int , s#netlink_ext_ack * ) ; int ( * port_unsplit ) ( s#devlink * , unsigned int , s#netlink_ext_ack * ) ; int ( * sb_pool_get ) ( s#devlink * , unsigned int , t#u16 , s#devlink_sb_pool_info * ) ; int ( * sb_pool_set ) ( s#devlink * , unsigned int , t#u16 , t#u32 , e#devlink_sb_threshold_type ) ; int ( * sb_port_pool_get ) ( s#devlink_port * , unsigned int , t#u16 , t#u32 * ) ; int ( * sb_port_pool_set ) ( s#devlink_port * , unsigned int , t#u16 , t#u32 ) ; int ( * sb_tc_pool_bind_get ) ( s#devlink_port * , unsigned int , t#u16 , e#devlink_sb_pool_type , t#u16 * , t#u32 * ) ; int ( * sb_tc_pool_bind_set ) ( s#devlink_port * , unsigned int , t#u16 , e#devlink_sb_pool_type , t#u16 , t#u32 ) ; int ( * sb_occ_snapshot ) ( s#devlink * , unsigned int ) ; int ( * sb_occ_max_clear ) ( s#devlink * , unsigned int ) ; int ( * sb_occ_port_pool_get ) ( s#devlink_port * , unsigned int , t#u16 , t#u32 * , t#u32 * ) ; int ( * sb_occ_tc_port_bind_get ) ( s#devlink_port * , unsigned int , t#u16 , e#devlink_sb_pool_type , t#u32 * , t#u32 * ) ; int ( * eswitch_mode_get ) ( s#devlink * , t#u16 * ) ; int ( * eswitch_mode_set ) ( s#devlink * , t#u16 , s#netlink_ext_ack * ) ; int ( * eswitch_inline_mode_get ) ( s#devlink * , t#u8 * ) ; int ( * eswitch_inline_mode_set ) ( s#devlink * , t#u8 , s#netlink_ext_ack * ) ; int ( * eswitch_encap_mode_get ) ( s#devlink * , t#u8 * ) ; int ( * eswitch_encap_mode_set ) ( s#devlink * , t#u8 , s#netlink_ext_ack * ) ; } 
s#devlink struct devlink { s#list_head list ; s#list_head port_list ; s#list_head sb_list ; s#list_head dpipe_table_list ; s#list_head resource_list ; s#list_head param_list ; s#list_head region_list ; t#u32 snapshot_id ; s#devlink_dpipe_headers * dpipe_headers ; const s#devlink_ops * ops ; s#device * dev ; t#possible_net_t _net ; s#mutex lock ; char priv [ 0 ] __attribute__ ( ( aligned ( 32 ) ) ) ; } 
e#devlink_port_flavour enum devlink_port_flavour { DEVLINK_PORT_FLAVOUR_PHYSICAL , DEVLINK_PORT_FLAVOUR_CPU , DEVLINK_PORT_FLAVOUR_DSA , } 
s#devlink_port_attrs struct devlink_port_attrs { t#bool set ; e#devlink_port_flavour flavour ; t#u32 port_number ; t#bool split ; t#u32 split_subport_number ; } 
s#devlink_port struct devlink_port { s#list_head list ; s#devlink * devlink ; unsigned index ; t#bool registered ; e#devlink_port_type type ; e#devlink_port_type desired_type ; void * type_dev ; s#devlink_port_attrs attrs ; } 
mlx4_get_devlink_port s#devlink_port * mlx4_get_devlink_port ( s#mlx4_dev * , int ) 

/* drivers/net/ethernet/mellanox/mlx4/main.o */
s##msi_controller
s##proc_dir_entry
s##device_private
s##sock
s##vfsmount
s##posix_acl
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##kmem_cache
s##fs_pin
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##uevent_sock
s##sec_path
s##neigh_parms
s##neighbour
s##udp_tunnel_info
s##bpf_prog
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##l3mdev_ops
s##ndisc_ops
s##xfrm_state
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##mini_Qdisc
s##Qdisc
s##nf_hook_entry
s##pcpu_dstats
s##garp_port
s##mrp_port
s##rtnl_link_ops
s##phy_device
s##sfp_bus
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##xt_table
s##inet_hashinfo
s##fib_notifier_ops
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##workqueue_struct
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##bpf_prog_array
s##cgroup_taskset
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##hotplug_slot
s##pci_vpd
s##pci_sriov
s##devlink_region
mlx4_get_parav_qkey int mlx4_get_parav_qkey ( s#mlx4_dev * , t#u32 , t#u32 * ) 
mlx4_sync_pkey_table void mlx4_sync_pkey_table ( s#mlx4_dev * , int , int , int , int ) 
mlx4_put_slave_node_guid void mlx4_put_slave_node_guid ( s#mlx4_dev * , int , t#__be64 ) 
mlx4_get_slave_node_guid t#__be64 mlx4_get_slave_node_guid ( s#mlx4_dev * , int ) 
mlx4_is_slave_active int mlx4_is_slave_active ( s#mlx4_dev * , int ) 
s#mlx4_net_trans_rule_hw_ctrl struct mlx4_net_trans_rule_hw_ctrl { t#__be16 prio ; t#u8 type ; t#u8 flags ; t#u8 rsvd1 ; t#u8 funcid ; t#u8 vep ; t#u8 port ; t#__be32 qpn ; t#__be32 rsvd2 ; } 
s#mlx4_net_trans_rule_hw_eth struct mlx4_net_trans_rule_hw_eth { t#u8 size ; t#u8 rsvd ; t#__be16 id ; t#u8 rsvd1 [ 6 ] ; t#u8 dst_mac [ 6 ] ; t#u16 rsvd2 ; t#u8 dst_mac_msk [ 6 ] ; t#u16 rsvd3 ; t#u8 src_mac [ 6 ] ; t#u16 rsvd4 ; t#u8 src_mac_msk [ 6 ] ; t#u8 rsvd5 ; t#u8 ether_type_enable ; t#__be16 ether_type ; t#__be16 vlan_tag_msk ; t#__be16 vlan_tag ; } 
s#mlx4_net_trans_rule_hw_ib struct mlx4_net_trans_rule_hw_ib { t#u8 size ; t#u8 rsvd1 ; t#__be16 id ; t#u32 rsvd2 ; t#__be32 l3_qpn ; t#__be32 qpn_mask ; t#u8 dst_gid [ 16 ] ; t#u8 dst_gid_msk [ 16 ] ; } 
s#mlx4_net_trans_rule_hw_ipv4 struct mlx4_net_trans_rule_hw_ipv4 { t#u8 size ; t#u8 rsvd ; t#__be16 id ; t#__be32 rsvd1 ; t#__be32 dst_ip ; t#__be32 dst_ip_msk ; t#__be32 src_ip ; t#__be32 src_ip_msk ; } 
s#mlx4_net_trans_rule_hw_tcp_udp struct mlx4_net_trans_rule_hw_tcp_udp { t#u8 size ; t#u8 rsvd ; t#__be16 id ; t#__be16 rsvd1 [ 3 ] ; t#__be16 dst_port ; t#__be16 rsvd2 ; t#__be16 dst_port_msk ; t#__be16 rsvd3 ; t#__be16 src_port ; t#__be16 rsvd4 ; t#__be16 src_port_msk ; } 
s#mlx4_net_trans_rule_hw_vxlan struct mlx4_net_trans_rule_hw_vxlan { t#u8 size ; t#u8 rsvd ; t#__be16 id ; t#__be32 rsvd1 ; t#__be32 vni ; t#__be32 vni_mask ; } 
s#_rule_hw struct _rule_hw { union { struct { t#u8 size ; t#u8 rsvd ; t#__be16 id ; } ; s#mlx4_net_trans_rule_hw_eth eth ; s#mlx4_net_trans_rule_hw_ib ib ; s#mlx4_net_trans_rule_hw_ipv4 ipv4 ; s#mlx4_net_trans_rule_hw_tcp_udp tcp_udp ; s#mlx4_net_trans_rule_hw_vxlan vxlan ; } ; } 
mlx4_handle_eth_header_mcast_prio void mlx4_handle_eth_header_mcast_prio ( s#mlx4_net_trans_rule_hw_ctrl * , s#_rule_hw * ) 
mlx4_bond int mlx4_bond ( s#mlx4_dev * ) 
mlx4_unbond int mlx4_unbond ( s#mlx4_dev * ) 
s#mlx4_port_map struct mlx4_port_map { t#u8 port1 ; t#u8 port2 ; } 
mlx4_port_map_set int mlx4_port_map_set ( s#mlx4_dev * , s#mlx4_port_map * ) 
mlx4_read_clock t#u64 mlx4_read_clock ( s#mlx4_dev * ) 
s#mlx4_clock_params struct mlx4_clock_params { t#u64 offset ; t#u8 bar ; t#u8 size ; } 
mlx4_get_internal_clock_params int mlx4_get_internal_clock_params ( s#mlx4_dev * , s#mlx4_clock_params * ) 
mlx4_counter_alloc int mlx4_counter_alloc ( s#mlx4_dev * , t#u32 * , t#u8 ) 
mlx4_counter_free void mlx4_counter_free ( s#mlx4_dev * , t#u32 ) 
mlx4_get_default_counter_index int mlx4_get_default_counter_index ( s#mlx4_dev * , int ) 
mlx4_set_admin_guid void mlx4_set_admin_guid ( s#mlx4_dev * , t#__be64 , int , int ) 
mlx4_get_admin_guid t#__be64 mlx4_get_admin_guid ( s#mlx4_dev * , int , int ) 

/* drivers/net/ethernet/mellanox/mlx4/mcg.o */
s##msi_controller
s##proc_dir_entry
s##device_private
s##sock
s##vfsmount
s##posix_acl
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##kmem_cache
s##fs_pin
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##uevent_sock
s##sec_path
s##neigh_parms
s##neighbour
s##udp_tunnel_info
s##bpf_prog
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##l3mdev_ops
s##ndisc_ops
s##xfrm_state
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##mini_Qdisc
s##Qdisc
s##nf_hook_entry
s##pcpu_dstats
s##garp_port
s##mrp_port
s##rtnl_link_ops
s##phy_device
s##sfp_bus
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##xt_table
s##inet_hashinfo
s##fib_notifier_ops
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##workqueue_struct
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##bpf_prog_array
s##cgroup_taskset
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##hotplug_slot
s##pci_vpd
s##pci_sriov
s##devlink_region
e#mlx4_net_trans_promisc_mode enum mlx4_net_trans_promisc_mode { MLX4_FS_REGULAR = 1 , MLX4_FS_ALL_DEFAULT , MLX4_FS_MC_DEFAULT , MLX4_FS_MIRROR_RX_PORT , MLX4_FS_MIRROR_SX_PORT , MLX4_FS_UC_SNIFFER , MLX4_FS_MC_SNIFFER , MLX4_FS_MODE_NUM , } 
mlx4_map_sw_to_hw_steering_mode int mlx4_map_sw_to_hw_steering_mode ( s#mlx4_dev * , e#mlx4_net_trans_promisc_mode ) 
e#mlx4_net_trans_rule_id enum mlx4_net_trans_rule_id { MLX4_NET_TRANS_RULE_ID_ETH = 0 , MLX4_NET_TRANS_RULE_ID_IB , MLX4_NET_TRANS_RULE_ID_IPV6 , MLX4_NET_TRANS_RULE_ID_IPV4 , MLX4_NET_TRANS_RULE_ID_TCP , MLX4_NET_TRANS_RULE_ID_UDP , MLX4_NET_TRANS_RULE_ID_VXLAN , MLX4_NET_TRANS_RULE_NUM , } 
mlx4_map_sw_to_hw_steering_id int mlx4_map_sw_to_hw_steering_id ( s#mlx4_dev * , e#mlx4_net_trans_rule_id ) 
mlx4_hw_rule_sz int mlx4_hw_rule_sz ( s#mlx4_dev * , e#mlx4_net_trans_rule_id ) 
e#mlx4_net_trans_hw_rule_queue enum mlx4_net_trans_hw_rule_queue { MLX4_NET_TRANS_Q_FIFO , MLX4_NET_TRANS_Q_LIFO , } 
s#mlx4_net_trans_rule struct mlx4_net_trans_rule { s#list_head list ; e#mlx4_net_trans_hw_rule_queue queue_mode ; t#bool exclusive ; t#bool allow_loopback ; e#mlx4_net_trans_promisc_mode promisc_mode ; t#u8 port ; t#u16 priority ; t#u32 qpn ; } 
mlx4_flow_attach int mlx4_flow_attach ( s#mlx4_dev * , s#mlx4_net_trans_rule * , t#u64 * ) 
mlx4_flow_detach int mlx4_flow_detach ( s#mlx4_dev * , t#u64 ) 
mlx4_tunnel_steer_add int mlx4_tunnel_steer_add ( s#mlx4_dev * , unsigned char * , int , int , t#u16 , t#u64 * ) 
mlx4_FLOW_STEERING_IB_UC_QP_RANGE int mlx4_FLOW_STEERING_IB_UC_QP_RANGE ( s#mlx4_dev * , t#u32 , t#u32 ) 
s#mlx4_qp struct mlx4_qp { void ( * event ) ( s#mlx4_qp * , e#mlx4_event ) ; int qpn ; t#refcount_t refcount ; s#completion free ; t#u8 usage ; } 
mlx4_multicast_attach int mlx4_multicast_attach ( s#mlx4_dev * , s#mlx4_qp * , t#u8 [ 16 ] , t#u8 , int , e#mlx4_protocol , t#u64 * ) 
mlx4_multicast_detach int mlx4_multicast_detach ( s#mlx4_dev * , s#mlx4_qp * , t#u8 [ 16 ] , e#mlx4_protocol , t#u64 ) 
mlx4_flow_steer_promisc_add int mlx4_flow_steer_promisc_add ( s#mlx4_dev * , t#u8 , t#u32 , e#mlx4_net_trans_promisc_mode ) 
mlx4_flow_steer_promisc_remove int mlx4_flow_steer_promisc_remove ( s#mlx4_dev * , t#u8 , e#mlx4_net_trans_promisc_mode ) 
mlx4_unicast_attach int mlx4_unicast_attach ( s#mlx4_dev * , s#mlx4_qp * , t#u8 [ 16 ] , int , e#mlx4_protocol ) 
mlx4_unicast_detach int mlx4_unicast_detach ( s#mlx4_dev * , s#mlx4_qp * , t#u8 [ 16 ] , e#mlx4_protocol ) 
mlx4_multicast_promisc_add int mlx4_multicast_promisc_add ( s#mlx4_dev * , t#u32 , t#u8 ) 
mlx4_multicast_promisc_remove int mlx4_multicast_promisc_remove ( s#mlx4_dev * , t#u32 , t#u8 ) 
mlx4_unicast_promisc_add int mlx4_unicast_promisc_add ( s#mlx4_dev * , t#u32 , t#u8 ) 
mlx4_unicast_promisc_remove int mlx4_unicast_promisc_remove ( s#mlx4_dev * , t#u32 , t#u8 ) 

/* drivers/net/ethernet/mellanox/mlx4/mr.o */
s##msi_controller
s##proc_dir_entry
s##device_private
s##sock
s##vfsmount
s##posix_acl
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##kmem_cache
s##fs_pin
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##uevent_sock
s##sec_path
s##neigh_parms
s##neighbour
s##udp_tunnel_info
s##bpf_prog
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##l3mdev_ops
s##ndisc_ops
s##xfrm_state
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##mini_Qdisc
s##Qdisc
s##nf_hook_entry
s##pcpu_dstats
s##garp_port
s##mrp_port
s##rtnl_link_ops
s##phy_device
s##sfp_bus
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##xt_table
s##inet_hashinfo
s##fib_notifier_ops
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##workqueue_struct
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##bpf_prog_array
s##cgroup_taskset
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##hotplug_slot
s##pci_vpd
s##pci_sriov
s##devlink_region
mlx4_mtt_init int mlx4_mtt_init ( s#mlx4_dev * , int , int , s#mlx4_mtt * ) 
mlx4_mtt_cleanup void mlx4_mtt_cleanup ( s#mlx4_dev * , s#mlx4_mtt * ) 
mlx4_mtt_addr t#u64 mlx4_mtt_addr ( s#mlx4_dev * , s#mlx4_mtt * ) 
s#mlx4_mr struct mlx4_mr { s#mlx4_mtt mtt ; t#u64 iova ; t#u64 size ; t#u32 key ; t#u32 pd ; t#u32 access ; int enabled ; } 
s#mlx4_mpt_entry struct mlx4_mpt_entry { t#__be32 flags ; t#__be32 qpn ; t#__be32 key ; t#__be32 pd_flags ; t#__be64 start ; t#__be64 length ; t#__be32 lkey ; t#__be32 win_cnt ; t#u8 reserved1 [ 3 ] ; t#u8 mtt_rep ; t#__be64 mtt_addr ; t#__be32 mtt_sz ; t#__be32 entity_size ; t#__be32 first_byte_offset ; } 
mlx4_mr_hw_get_mpt int mlx4_mr_hw_get_mpt ( s#mlx4_dev * , s#mlx4_mr * , s#mlx4_mpt_entry * * * ) 
mlx4_mr_hw_write_mpt int mlx4_mr_hw_write_mpt ( s#mlx4_dev * , s#mlx4_mr * , s#mlx4_mpt_entry * * ) 
mlx4_mr_hw_put_mpt void mlx4_mr_hw_put_mpt ( s#mlx4_dev * , s#mlx4_mpt_entry * * ) 
mlx4_mr_hw_change_pd int mlx4_mr_hw_change_pd ( s#mlx4_dev * , s#mlx4_mpt_entry * , t#u32 ) 
mlx4_mr_hw_change_access int mlx4_mr_hw_change_access ( s#mlx4_dev * , s#mlx4_mpt_entry * , t#u32 ) 
mlx4_mr_alloc int mlx4_mr_alloc ( s#mlx4_dev * , t#u32 , t#u64 , t#u64 , t#u32 , int , int , s#mlx4_mr * ) 
mlx4_mr_free int mlx4_mr_free ( s#mlx4_dev * , s#mlx4_mr * ) 
mlx4_mr_rereg_mem_cleanup void mlx4_mr_rereg_mem_cleanup ( s#mlx4_dev * , s#mlx4_mr * ) 
mlx4_mr_rereg_mem_write int mlx4_mr_rereg_mem_write ( s#mlx4_dev * , s#mlx4_mr * , t#u64 , t#u64 , int , int , s#mlx4_mpt_entry * ) 
mlx4_mr_enable int mlx4_mr_enable ( s#mlx4_dev * , s#mlx4_mr * ) 
mlx4_write_mtt int mlx4_write_mtt ( s#mlx4_dev * , s#mlx4_mtt * , int , int , t#u64 * ) 
mlx4_buf_write_mtt int mlx4_buf_write_mtt ( s#mlx4_dev * , s#mlx4_mtt * , s#mlx4_buf * ) 
e#mlx4_mw_type enum mlx4_mw_type { MLX4_MW_TYPE_1 = 1 , MLX4_MW_TYPE_2 = 2 , } 
s#mlx4_mw struct mlx4_mw { t#u32 key ; t#u32 pd ; e#mlx4_mw_type type ; int enabled ; } 
mlx4_mw_alloc int mlx4_mw_alloc ( s#mlx4_dev * , t#u32 , e#mlx4_mw_type , s#mlx4_mw * ) 
mlx4_mw_enable int mlx4_mw_enable ( s#mlx4_dev * , s#mlx4_mw * ) 
mlx4_mw_free void mlx4_mw_free ( s#mlx4_dev * , s#mlx4_mw * ) 
s#mlx4_fmr struct mlx4_fmr { s#mlx4_mr mr ; s#mlx4_mpt_entry * mpt ; t#__be64 * mtts ; t#dma_addr_t dma_handle ; int max_pages ; int max_maps ; int maps ; t#u8 page_shift ; } 
mlx4_map_phys_fmr int mlx4_map_phys_fmr ( s#mlx4_dev * , s#mlx4_fmr * , t#u64 * , int , t#u64 , t#u32 * , t#u32 * ) 
mlx4_fmr_alloc int mlx4_fmr_alloc ( s#mlx4_dev * , t#u32 , t#u32 , int , int , t#u8 , s#mlx4_fmr * ) 
mlx4_fmr_enable int mlx4_fmr_enable ( s#mlx4_dev * , s#mlx4_fmr * ) 
mlx4_fmr_unmap void mlx4_fmr_unmap ( s#mlx4_dev * , s#mlx4_fmr * , t#u32 * , t#u32 * ) 
mlx4_fmr_free int mlx4_fmr_free ( s#mlx4_dev * , s#mlx4_fmr * ) 
mlx4_SYNC_TPT int mlx4_SYNC_TPT ( s#mlx4_dev * ) 

/* drivers/net/ethernet/mellanox/mlx4/pd.o */
s##msi_controller
s##proc_dir_entry
s##device_private
s##sock
s##vfsmount
s##posix_acl
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##kmem_cache
s##fs_pin
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##uevent_sock
s##sec_path
s##neigh_parms
s##neighbour
s##udp_tunnel_info
s##bpf_prog
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##l3mdev_ops
s##ndisc_ops
s##xfrm_state
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##mini_Qdisc
s##Qdisc
s##nf_hook_entry
s##pcpu_dstats
s##garp_port
s##mrp_port
s##rtnl_link_ops
s##phy_device
s##sfp_bus
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##xt_table
s##inet_hashinfo
s##fib_notifier_ops
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##workqueue_struct
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##bpf_prog_array
s##cgroup_taskset
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##hotplug_slot
s##pci_vpd
s##pci_sriov
s##devlink_region
mlx4_pd_alloc int mlx4_pd_alloc ( s#mlx4_dev * , t#u32 * ) 
mlx4_pd_free void mlx4_pd_free ( s#mlx4_dev * , t#u32 ) 
mlx4_xrcd_alloc int mlx4_xrcd_alloc ( s#mlx4_dev * , t#u32 * ) 
mlx4_xrcd_free void mlx4_xrcd_free ( s#mlx4_dev * , t#u32 ) 
mlx4_uar_alloc int mlx4_uar_alloc ( s#mlx4_dev * , s#mlx4_uar * ) 
mlx4_uar_free void mlx4_uar_free ( s#mlx4_dev * , s#mlx4_uar * ) 
s#mlx4_bf struct mlx4_bf { unsigned int offset ; int buf_size ; s#mlx4_uar * uar ; void * reg ; } 
mlx4_bf_alloc int mlx4_bf_alloc ( s#mlx4_dev * , s#mlx4_bf * , int ) 
mlx4_bf_free void mlx4_bf_free ( s#mlx4_dev * , s#mlx4_bf * ) 

/* drivers/net/ethernet/mellanox/mlx4/port.o */
s##msi_controller
s##proc_dir_entry
s##device_private
s##sock
s##vfsmount
s##posix_acl
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##kmem_cache
s##fs_pin
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##uevent_sock
s##sec_path
s##neigh_parms
s##neighbour
s##udp_tunnel_info
s##bpf_prog
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##l3mdev_ops
s##ndisc_ops
s##xfrm_state
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##mini_Qdisc
s##Qdisc
s##nf_hook_entry
s##pcpu_dstats
s##garp_port
s##mrp_port
s##rtnl_link_ops
s##phy_device
s##sfp_bus
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##xt_table
s##inet_hashinfo
s##fib_notifier_ops
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##workqueue_struct
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##bpf_prog_array
s##cgroup_taskset
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##hotplug_slot
s##pci_vpd
s##pci_sriov
s##devlink_region
mlx4_find_cached_mac int mlx4_find_cached_mac ( s#mlx4_dev * , t#u8 , t#u64 , int * ) 
__mlx4_register_mac int __mlx4_register_mac ( s#mlx4_dev * , t#u8 , t#u64 ) 
mlx4_register_mac int mlx4_register_mac ( s#mlx4_dev * , t#u8 , t#u64 ) 
mlx4_get_base_qpn int mlx4_get_base_qpn ( s#mlx4_dev * , t#u8 ) 
__mlx4_unregister_mac void __mlx4_unregister_mac ( s#mlx4_dev * , t#u8 , t#u64 ) 
mlx4_unregister_mac void mlx4_unregister_mac ( s#mlx4_dev * , t#u8 , t#u64 ) 
__mlx4_replace_mac int __mlx4_replace_mac ( s#mlx4_dev * , t#u8 , int , t#u64 ) 
mlx4_find_cached_vlan int mlx4_find_cached_vlan ( s#mlx4_dev * , t#u8 , t#u16 , int * ) 
mlx4_register_vlan int mlx4_register_vlan ( s#mlx4_dev * , t#u8 , t#u16 , int * ) 
mlx4_unregister_vlan void mlx4_unregister_vlan ( s#mlx4_dev * , t#u8 , t#u16 ) 
mlx4_get_base_gid_ix int mlx4_get_base_gid_ix ( s#mlx4_dev * , int , int ) 
mlx4_SET_PORT_general int mlx4_SET_PORT_general ( s#mlx4_dev * , t#u8 , int , t#u8 , t#u8 , t#u8 , t#u8 ) 
mlx4_SET_PORT_qpn_calc int mlx4_SET_PORT_qpn_calc ( s#mlx4_dev * , t#u8 , t#u32 , t#u8 ) 
mlx4_SET_PORT_user_mtu int mlx4_SET_PORT_user_mtu ( s#mlx4_dev * , t#u8 , t#u16 ) 
mlx4_SET_PORT_user_mac int mlx4_SET_PORT_user_mac ( s#mlx4_dev * , t#u8 , t#u8 * ) 
mlx4_SET_PORT_fcs_check int mlx4_SET_PORT_fcs_check ( s#mlx4_dev * , t#u8 , t#u8 ) 
mlx4_SET_PORT_VXLAN int mlx4_SET_PORT_VXLAN ( s#mlx4_dev * , t#u8 , t#u8 , int ) 
mlx4_SET_PORT_BEACON int mlx4_SET_PORT_BEACON ( s#mlx4_dev * , t#u8 , t#u16 ) 
mlx4_SET_MCAST_FLTR int mlx4_SET_MCAST_FLTR ( s#mlx4_dev * , t#u8 , t#u64 , t#u64 , t#u8 ) 
mlx4_get_slave_from_roce_gid int mlx4_get_slave_from_roce_gid ( s#mlx4_dev * , int , t#u8 * , int * ) 
mlx4_get_roce_gid_from_slave int mlx4_get_roce_gid_from_slave ( s#mlx4_dev * , int , int , t#u8 * ) 
mlx4_get_module_info int mlx4_get_module_info ( s#mlx4_dev * , t#u8 , t#u16 , t#u16 , t#u8 * ) 
mlx4_max_tc int mlx4_max_tc ( s#mlx4_dev * ) 

/* drivers/net/ethernet/mellanox/mlx4/qp.o */
s##msi_controller
s##proc_dir_entry
s##device_private
s##sock
s##vfsmount
s##posix_acl
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##kmem_cache
s##fs_pin
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##uevent_sock
s##sec_path
s##neigh_parms
s##neighbour
s##udp_tunnel_info
s##bpf_prog
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##l3mdev_ops
s##ndisc_ops
s##xfrm_state
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##mini_Qdisc
s##Qdisc
s##nf_hook_entry
s##pcpu_dstats
s##garp_port
s##mrp_port
s##rtnl_link_ops
s##phy_device
s##sfp_bus
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##xt_table
s##inet_hashinfo
s##fib_notifier_ops
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##workqueue_struct
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##bpf_prog_array
s##cgroup_taskset
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##hotplug_slot
s##pci_vpd
s##pci_sriov
s##devlink_region
e#mlx4_qp_state enum mlx4_qp_state { MLX4_QP_STATE_RST = 0 , MLX4_QP_STATE_INIT = 1 , MLX4_QP_STATE_RTR = 2 , MLX4_QP_STATE_RTS = 3 , MLX4_QP_STATE_SQER = 4 , MLX4_QP_STATE_SQD = 5 , MLX4_QP_STATE_ERR = 6 , MLX4_QP_STATE_SQ_DRAINING = 7 , MLX4_QP_NUM_STATE } 
s#mlx4_qp_path struct mlx4_qp_path { t#u8 fl ; union { t#u8 vlan_control ; t#u8 control ; } ; t#u8 disable_pkey_check ; t#u8 pkey_index ; t#u8 counter_index ; t#u8 grh_mylmc ; t#__be16 rlid ; t#u8 ackto ; t#u8 mgid_index ; t#u8 static_rate ; t#u8 hop_limit ; t#__be32 tclass_flowlabel ; t#u8 rgid [ 16 ] ; t#u8 sched_queue ; t#u8 vlan_index ; t#u8 feup ; t#u8 fvl_rx ; t#u8 reserved4 [ 2 ] ; t#u8 dmac [ 6 ] ; } 
s#mlx4_qp_context struct mlx4_qp_context { t#__be32 flags ; t#__be32 pd ; t#u8 mtu_msgmax ; t#u8 rq_size_stride ; t#u8 sq_size_stride ; t#u8 rlkey_roce_mode ; t#__be32 usr_page ; t#__be32 local_qpn ; t#__be32 remote_qpn ; s#mlx4_qp_path pri_path ; s#mlx4_qp_path alt_path ; t#__be32 params1 ; t#u32 reserved1 ; t#__be32 next_send_psn ; t#__be32 cqn_send ; t#__be16 roce_entropy ; t#__be16 reserved2 [ 3 ] ; t#__be32 last_acked_psn ; t#__be32 ssn ; t#__be32 params2 ; t#__be32 rnr_nextrecvpsn ; t#__be32 xrcd ; t#__be32 cqn_recv ; t#__be64 db_rec_addr ; t#__be32 qkey ; t#__be32 srqn ; t#__be32 msn ; t#__be16 rq_wqe_counter ; t#__be16 sq_wqe_counter ; t#u32 reserved3 ; t#__be16 rate_limit_params ; t#u8 reserved4 ; t#u8 qos_vport ; t#__be32 param3 ; t#__be32 nummmcpeers_basemkey ; t#u8 log_page_size ; t#u8 reserved5 [ 2 ] ; t#u8 mtt_base_addr_h ; t#__be32 mtt_base_addr_l ; t#u32 reserved6 [ 10 ] ; } 
e#mlx4_qp_optpar enum mlx4_qp_optpar { MLX4_QP_OPTPAR_ALT_ADDR_PATH = 1 << 0 , MLX4_QP_OPTPAR_RRE = 1 << 1 , MLX4_QP_OPTPAR_RAE = 1 << 2 , MLX4_QP_OPTPAR_RWE = 1 << 3 , MLX4_QP_OPTPAR_PKEY_INDEX = 1 << 4 , MLX4_QP_OPTPAR_Q_KEY = 1 << 5 , MLX4_QP_OPTPAR_RNR_TIMEOUT = 1 << 6 , MLX4_QP_OPTPAR_PRIMARY_ADDR_PATH = 1 << 7 , MLX4_QP_OPTPAR_SRA_MAX = 1 << 8 , MLX4_QP_OPTPAR_RRA_MAX = 1 << 9 , MLX4_QP_OPTPAR_PM_STATE = 1 << 10 , MLX4_QP_OPTPAR_RETRY_COUNT = 1 << 12 , MLX4_QP_OPTPAR_RNR_RETRY = 1 << 13 , MLX4_QP_OPTPAR_ACK_TIMEOUT = 1 << 14 , MLX4_QP_OPTPAR_SCHED_QUEUE = 1 << 16 , MLX4_QP_OPTPAR_COUNTER_INDEX = 1 << 20 , MLX4_QP_OPTPAR_VLAN_STRIPPING = 1 << 21 , } 
mlx4_qp_modify int mlx4_qp_modify ( s#mlx4_dev * , s#mlx4_mtt * , e#mlx4_qp_state , e#mlx4_qp_state , s#mlx4_qp_context * , e#mlx4_qp_optpar , int , s#mlx4_qp * ) 
mlx4_qp_reserve_range int mlx4_qp_reserve_range ( s#mlx4_dev * , int , int , int * , t#u8 , t#u8 ) 
mlx4_qp_release_range void mlx4_qp_release_range ( s#mlx4_dev * , int , int ) 
mlx4_qp_alloc int mlx4_qp_alloc ( s#mlx4_dev * , int , s#mlx4_qp * ) 
e#mlx4_update_qp_attr enum mlx4_update_qp_attr { MLX4_UPDATE_QP_SMAC = 1 << 0 , MLX4_UPDATE_QP_VSD = 1 << 1 , MLX4_UPDATE_QP_RATE_LIMIT = 1 << 2 , MLX4_UPDATE_QP_QOS_VPORT = 1 << 3 , MLX4_UPDATE_QP_ETH_SRC_CHECK_MC_LB = 1 << 4 , MLX4_UPDATE_QP_SUPPORTED_ATTRS = ( 1 << 5 ) - 1 } 
s#mlx4_update_qp_params struct mlx4_update_qp_params { t#u8 smac_index ; t#u8 qos_vport ; t#u32 flags ; t#u16 rate_unit ; t#u16 rate_val ; } 
mlx4_update_qp int mlx4_update_qp ( s#mlx4_dev * , t#u32 , e#mlx4_update_qp_attr , s#mlx4_update_qp_params * ) 
mlx4_qp_remove void mlx4_qp_remove ( s#mlx4_dev * , s#mlx4_qp * ) 
mlx4_qp_free void mlx4_qp_free ( s#mlx4_dev * , s#mlx4_qp * ) 
mlx4_qp_query int mlx4_qp_query ( s#mlx4_dev * , s#mlx4_qp * , s#mlx4_qp_context * ) 
mlx4_qp_to_ready int mlx4_qp_to_ready ( s#mlx4_dev * , s#mlx4_mtt * , s#mlx4_qp_context * , s#mlx4_qp * , e#mlx4_qp_state * ) 

/* drivers/net/ethernet/mellanox/mlx4/srq.o */
s##msi_controller
s##proc_dir_entry
s##device_private
s##sock
s##vfsmount
s##posix_acl
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##kmem_cache
s##fs_pin
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##uevent_sock
s##sec_path
s##neigh_parms
s##neighbour
s##udp_tunnel_info
s##bpf_prog
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##l3mdev_ops
s##ndisc_ops
s##xfrm_state
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##mini_Qdisc
s##Qdisc
s##nf_hook_entry
s##pcpu_dstats
s##garp_port
s##mrp_port
s##rtnl_link_ops
s##phy_device
s##sfp_bus
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##xt_table
s##inet_hashinfo
s##fib_notifier_ops
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##workqueue_struct
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##bpf_prog_array
s##cgroup_taskset
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##hotplug_slot
s##pci_vpd
s##pci_sriov
s##devlink_region
s#mlx4_srq struct mlx4_srq { void ( * event ) ( s#mlx4_srq * , e#mlx4_event ) ; int srqn ; int max ; int max_gs ; int wqe_shift ; t#refcount_t refcount ; s#completion free ; } 
mlx4_srq_alloc int mlx4_srq_alloc ( s#mlx4_dev * , t#u32 , t#u32 , t#u16 , s#mlx4_mtt * , t#u64 , s#mlx4_srq * ) 
mlx4_srq_free void mlx4_srq_free ( s#mlx4_dev * , s#mlx4_srq * ) 
mlx4_srq_arm int mlx4_srq_arm ( s#mlx4_dev * , s#mlx4_srq * , int ) 
mlx4_srq_query int mlx4_srq_query ( s#mlx4_dev * , s#mlx4_srq * , int * ) 
mlx4_srq_lookup s#mlx4_srq * mlx4_srq_lookup ( s#mlx4_dev * , t#u32 ) 

/* drivers/net/ethernet/mellanox/mlx5/core/accel/ipsec.o */
s##posix_acl
s##vfsmount
s##device_private
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##sec_path
s##workqueue_struct
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##kmem_cache
s##xfrm_state
s##lwtunnel_state
s##uncached_list
s##rt6_info
s##dn_route
s##prefix_info
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
s##prot_inuse
s##ipv4_devconf
s##xt_table
s##inet_hashinfo
s##rt6_statistics
s##fib6_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##eventfd_ctx
s##mempolicy
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##mtd_info
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##platform_msi_priv_data
s##hotplug_slot
s##pci_vpd
s##pci_sriov
e#mlx5_pci_status enum mlx5_pci_status { MLX5_PCI_STATUS_DISABLED , MLX5_PCI_STATUS_ENABLED , } 
E#MLX5_BOARD_ID_LEN 64 
E#MLX5_CMD_WQ_MAX_NAME 32 
s#semaphore struct semaphore { t#raw_spinlock_t lock ; unsigned int count ; s#list_head wait_list ; } 
s#cmd_msg_cache struct cmd_msg_cache { t#spinlock_t lock ; s#list_head head ; unsigned int max_inbox_size ; unsigned int num_ent ; } 
s#mlx5_cmd_first struct mlx5_cmd_first { t#__be32 data [ 4 ] ; } 
s#mlx5_cmd_mailbox struct mlx5_cmd_mailbox { void * buf ; t#dma_addr_t dma ; s#mlx5_cmd_mailbox * next ; } 
s#mlx5_cmd_msg struct mlx5_cmd_msg { s#list_head list ; s#cmd_msg_cache * parent ; t#u32 len ; s#mlx5_cmd_first first ; s#mlx5_cmd_mailbox * next ; } 
t#mlx5_cmd_cbk_t typedef void ( * mlx5_cmd_cbk_t ) ( int , void * ) 
s#mlx5_cmd_layout struct mlx5_cmd_layout { t#u8 type ; t#u8 rsvd0 [ 3 ] ; t#__be32 inlen ; t#__be64 in_ptr ; t#__be32 in [ 4 ] ; t#__be32 out [ 4 ] ; t#__be64 out_ptr ; t#__be32 outlen ; t#u8 token ; t#u8 sig ; t#u8 rsvd1 ; t#u8 status_own ; } 
s#mlx5_cmd_work_ent struct mlx5_cmd_work_ent { unsigned long state ; s#mlx5_cmd_msg * in ; s#mlx5_cmd_msg * out ; void * uout ; int uout_size ; t#mlx5_cmd_cbk_t callback ; s#delayed_work cb_timeout_work ; void * context ; int idx ; s#completion done ; s#mlx5_cmd * cmd ; s#work_struct work ; s#mlx5_cmd_layout * lay ; int ret ; int page_queue ; t#u8 status ; t#u8 token ; t#u64 ts1 ; t#u64 ts2 ; t#u16 op ; t#bool polling ; } 
E#MLX5_MAX_COMMANDS 32 
s##dma_pool
s#mlx5_cmd_debug struct mlx5_cmd_debug { s#dentry * dbg_root ; s#dentry * dbg_in ; s#dentry * dbg_out ; s#dentry * dbg_outlen ; s#dentry * dbg_status ; s#dentry * dbg_run ; void * in_msg ; void * out_msg ; t#u8 status ; t#u16 inlen ; t#u16 outlen ; } 
E#MLX5_NUM_COMMAND_CACHES 5 
s#mlx5_cmd_stats struct mlx5_cmd_stats { t#u64 sum ; t#u64 n ; s#dentry * root ; s#dentry * avg ; s#dentry * count ; t#spinlock_t lock ; } 
E#MLX5_CMD_OP_MAX ( 0xa0a ) + 1 
s#mlx5_cmd struct mlx5_cmd { void * cmd_alloc_buf ; t#dma_addr_t alloc_dma ; int alloc_size ; void * cmd_buf ; t#dma_addr_t dma ; t#u16 cmdif_rev ; t#u8 log_sz ; t#u8 log_stride ; int max_reg_cmds ; int events ; t#u32 * vector ; t#spinlock_t alloc_lock ; t#spinlock_t token_lock ; t#u8 token ; unsigned long bitmask ; char wq_name [ E#MLX5_CMD_WQ_MAX_NAME ] ; s#workqueue_struct * wq ; s#semaphore sem ; s#semaphore pages_sem ; int mode ; s#mlx5_cmd_work_ent * ent_arr [ E#MLX5_MAX_COMMANDS ] ; s#dma_pool * pool ; s#mlx5_cmd_debug dbg ; s#cmd_msg_cache cache [ E#MLX5_NUM_COMMAND_CACHES ] ; int checksum_disabled ; s#mlx5_cmd_stats stats [ E#MLX5_CMD_OP_MAX ] ; } 
s#mlx5_port_caps struct mlx5_port_caps { int gid_table_len ; int pkey_table_len ; t#u8 ext_port_cap ; t#bool has_smi ; } 
E#MLX5_MAX_PORTS 2 
E#MLX5_CAP_NUM ( 0 ) + 16 
s#health_buffer struct health_buffer { t#__be32 assert_var [ 5 ] ; t#__be32 rsvd0 [ 3 ] ; t#__be32 assert_exit_ptr ; t#__be32 assert_callra ; t#__be32 rsvd1 [ 2 ] ; t#__be32 fw_ver ; t#__be32 hw_id ; t#__be32 rsvd2 ; t#u8 irisc_index ; t#u8 synd ; t#__be16 ext_synd ; } 
s#mlx5_init_seg struct mlx5_init_seg { t#__be32 fw_rev ; t#__be32 cmdif_rev_fw_sub ; t#__be32 rsvd0 [ 2 ] ; t#__be32 cmdq_addr_h ; t#__be32 cmdq_addr_l_sz ; t#__be32 cmd_dbell ; t#__be32 rsvd1 [ 120 ] ; t#__be32 initializing ; s#health_buffer health ; t#__be32 rsvd2 [ 880 ] ; t#__be32 internal_timer_h ; t#__be32 internal_timer_l ; t#__be32 rsvd3 [ 2 ] ; t#__be32 health_counter ; t#__be32 rsvd4 [ 1019 ] ; t#__be64 ieee1588_clk ; t#__be32 ieee1588_clk_type ; t#__be32 clr_intx ; } 
e#mlx5_device_state enum mlx5_device_state { MLX5_DEVICE_STATE_UP , MLX5_DEVICE_STATE_INTERNAL_ERROR , } 
e#mlx5_dev_event enum mlx5_dev_event { MLX5_DEV_EVENT_SYS_ERROR , MLX5_DEV_EVENT_PORT_UP , MLX5_DEV_EVENT_PORT_DOWN , MLX5_DEV_EVENT_PORT_INITIALIZED , MLX5_DEV_EVENT_LID_CHANGE , MLX5_DEV_EVENT_PKEY_CHANGE , MLX5_DEV_EVENT_GUID_CHANGE , MLX5_DEV_EVENT_CLIENT_REREG , MLX5_DEV_EVENT_PPS , MLX5_DEV_EVENT_DELAY_DROP_TIMEOUT , } 
E#MLX5_MAX_NAME_LEN 16 
s#mlx5_cq_table struct mlx5_cq_table { t#spinlock_t lock ; s#radix_tree_root tree ; } 
s#mlx5_buf_list struct mlx5_buf_list { void * buf ; t#dma_addr_t map ; } 
s#mlx5_frag_buf struct mlx5_frag_buf { s#mlx5_buf_list * frags ; int npages ; int size ; t#u8 page_shift ; } 
e#dbg_rsc_type enum dbg_rsc_type { MLX5_DBG_RSC_QP , MLX5_DBG_RSC_EQ , MLX5_DBG_RSC_CQ , } 
s#mlx5_field_desc struct mlx5_field_desc { s#dentry * dent ; int i ; } 
s#mlx5_rsc_debug struct mlx5_rsc_debug { s#mlx5_core_dev * dev ; void * object ; e#dbg_rsc_type type ; s#dentry * root ; s#mlx5_field_desc fields [ 0 ] ; } 
e#mlx5_eq_type enum mlx5_eq_type { MLX5_EQ_TYPE_COMP , MLX5_EQ_TYPE_ASYNC , MLX5_EQ_TYPE_PF , } 
s#mlx5_eq_tasklet struct mlx5_eq_tasklet { s#list_head list ; s#list_head process_list ; s#tasklet_struct task ; t#spinlock_t lock ; } 
s#mlx5_eq_pagefault struct mlx5_eq_pagefault { s#work_struct work ; t#spinlock_t lock ; s#workqueue_struct * wq ; t#mempool_t * pool ; } 
s#mlx5_eq struct mlx5_eq { s#mlx5_core_dev * dev ; s#mlx5_cq_table cq_table ; t#__be32 * doorbell ; t#u32 cons_index ; s#mlx5_frag_buf buf ; int size ; unsigned int irqn ; t#u8 eqn ; int nent ; t#u64 mask ; s#list_head list ; int index ; s#mlx5_rsc_debug * dbg ; e#mlx5_eq_type type ; union { s#mlx5_eq_tasklet tasklet_ctx ; s#mlx5_eq_pagefault pf_ctx ; } ; } 
s#mlx5_eq_table struct mlx5_eq_table { void * update_ci ; void * update_arm_ci ; s#list_head comp_eqs_list ; s#mlx5_eq pages_eq ; s#mlx5_eq async_eq ; s#mlx5_eq cmd_eq ; s#mlx5_eq pfault_eq ; int num_comp_vectors ; t#spinlock_t lock ; } 
E#MLX5_MAX_IRQ_NAME 32 
s#mlx5_irq_info struct mlx5_irq_info { t#cpumask_var_t mask ; char name [ E#MLX5_MAX_IRQ_NAME ] ; } 
s#mlx5_core_health struct mlx5_core_health { s#health_buffer * health ; t#__be32 * health_counter ; s#timer_list timer ; t#u32 prev ; int miss_counter ; t#bool sick ; t#spinlock_t wq_lock ; s#workqueue_struct * wq ; unsigned long flags ; s#work_struct work ; s#delayed_work recover_work ; } 
s#mlx5_srq_table struct mlx5_srq_table { t#spinlock_t lock ; s#radix_tree_root tree ; } 
s#mlx5_qp_table struct mlx5_qp_table { t#spinlock_t lock ; s#radix_tree_root tree ; } 
s#mlx5_mkey_table struct mlx5_mkey_table { t#rwlock_t lock ; s#radix_tree_root tree ; } 
e#fs_node_type enum fs_node_type { FS_TYPE_NAMESPACE , FS_TYPE_PRIO , FS_TYPE_PRIO_CHAINS , FS_TYPE_FLOW_TABLE , FS_TYPE_FLOW_GROUP , FS_TYPE_FLOW_ENTRY , FS_TYPE_FLOW_DEST } 
s#fs_node struct fs_node { s#list_head list ; s#list_head children ; e#fs_node_type type ; s#fs_node * parent ; s#fs_node * root ; s#rw_semaphore lock ; t#refcount_t refcount ; t#bool active ; void ( * del_hw_func ) ( s#fs_node * ) ; void ( * del_sw_func ) ( s#fs_node * ) ; t#atomic_t version ; } 
s#mlx5_flow_namespace struct mlx5_flow_namespace { s#fs_node node ; } 
E#FS_FT_SNIFFER_TX 0X6 
e#fs_flow_table_type enum fs_flow_table_type { FS_FT_NIC_RX = 0x0 , FS_FT_NIC_TX = 0x1 , FS_FT_ESW_EGRESS_ACL = 0x2 , FS_FT_ESW_INGRESS_ACL = 0x3 , FS_FT_FDB = 0X4 , FS_FT_SNIFFER_RX = 0X5 , FS_FT_SNIFFER_TX = 0X6 , FS_FT_MAX_TYPE = E#FS_FT_SNIFFER_TX , } 
e#fs_flow_table_op_mod enum fs_flow_table_op_mod { FS_FT_OP_MOD_NORMAL , FS_FT_OP_MOD_LAG_DEMUX , } 
s#rhltable struct rhltable { s#rhashtable ht ; } 
s#mlx5_flow_table struct mlx5_flow_table { s#fs_node node ; t#u32 id ; t#u16 vport ; unsigned int max_fte ; unsigned int level ; e#fs_flow_table_type type ; e#fs_flow_table_op_mod op_mod ; struct { t#bool active ; unsigned int required_groups ; unsigned int num_groups ; } autogroup ; s#mutex lock ; s#list_head fwd_rules ; t#u32 flags ; s#rhltable fgs_hash ; } 
s#mlx5_flow_group_mask struct mlx5_flow_group_mask { t#u8 match_criteria_enable ; t#u32 match_criteria [ ( ( ( ( __builtin_offsetof ( struct mlx5_ifc_fte_match_param_bits , reserved_at_800 ) ) / 8 ) / sizeof ( u32 ) ) + ( sizeof ( struct { int : - ! ! ( ( sizeof ( struct mlx5_ifc_fte_match_param_bits ) / 8 ) ! = ( sizeof ( ( ( struct mlx5_ifc_fte_match_param_bits * ) 0 ) -> reserved_at_800 ) / 8 ) + ( ( __builtin_offsetof ( struct mlx5_ifc_fte_match_param_bits , reserved_at_800 ) ) / 8 ) ) ; } ) ) ) ] ; } 
s#rhlist_head struct rhlist_head { s#rhash_head rhead ; s#rhlist_head * next ; } 
s#mlx5_flow_group struct mlx5_flow_group { s#fs_node node ; s#mlx5_flow_group_mask mask ; t#u32 start_index ; t#u32 max_ftes ; s#ida fte_allocator ; t#u32 id ; s#rhashtable ftes_hash ; s#rhlist_head hash ; } 
t#uintptr_t typedef unsigned long uintptr_t 
s#mlx5_fs_vlan struct mlx5_fs_vlan { t#u16 ethtype ; t#u16 vid ; t#u8 prio ; } 
s##ib_uverbs_file
s##ib_umem_odp
s##uverbs_api_object
s##ib_pkey_cache
s##ib_gid_table
s##iw_cm_verbs
s##ib_mad_hdr
s##uverbs_attr_bundle
s##uverbs_object_tree_def
s#mlx5_flow_act struct mlx5_flow_act { t#u32 action ; t#u32 flow_tag ; t#u32 reformat_id ; t#u32 modify_id ; t#uintptr_t esp_id ; t#u32 flags ; s#mlx5_fs_vlan vlan [ 2 ] ; s#ib_counters * counters ; } 
e#fs_fte_status enum fs_fte_status { FS_FTE_STATUS_EXISTING = 1UL << 0 , } 
s#mlx5_fc_cache struct mlx5_fc_cache { t#u64 packets ; t#u64 bytes ; t#u64 lastuse ; } 
s#mlx5_fc struct mlx5_fc { s#list_head list ; s#llist_node addlist ; s#llist_node dellist ; t#u64 lastpackets ; t#u64 lastbytes ; t#u32 id ; t#bool aging ; s#mlx5_fc_cache cache __attribute__ ( ( __aligned__ ( 256 ) ) ) ; } 
s#fs_fte struct fs_fte { s#fs_node node ; t#u32 val [ ( ( ( ( __builtin_offsetof ( struct mlx5_ifc_fte_match_param_bits , reserved_at_800 ) ) / 8 ) / sizeof ( u32 ) ) + ( sizeof ( struct { int : - ! ! ( ( sizeof ( struct mlx5_ifc_fte_match_param_bits ) / 8 ) ! = ( sizeof ( ( ( struct mlx5_ifc_fte_match_param_bits * ) 0 ) -> reserved_at_800 ) / 8 ) + ( ( __builtin_offsetof ( struct mlx5_ifc_fte_match_param_bits , reserved_at_800 ) ) / 8 ) ) ; } ) ) ) ] ; t#u32 dests_size ; t#u32 index ; s#mlx5_flow_act action ; e#fs_fte_status status ; s#mlx5_fc * counter ; s#rhash_head hash ; } 
s#mlx5_flow_cmds struct mlx5_flow_cmds { int ( * create_flow_table ) ( s#mlx5_core_dev * , t#u16 , e#fs_flow_table_op_mod , e#fs_flow_table_type , unsigned int , unsigned int , s#mlx5_flow_table * , unsigned int * , t#u32 ) ; int ( * destroy_flow_table ) ( s#mlx5_core_dev * , s#mlx5_flow_table * ) ; int ( * modify_flow_table ) ( s#mlx5_core_dev * , s#mlx5_flow_table * , s#mlx5_flow_table * ) ; int ( * create_flow_group ) ( s#mlx5_core_dev * , s#mlx5_flow_table * , t#u32 * , unsigned int * ) ; int ( * destroy_flow_group ) ( s#mlx5_core_dev * , s#mlx5_flow_table * , unsigned int ) ; int ( * create_fte ) ( s#mlx5_core_dev * , s#mlx5_flow_table * , s#mlx5_flow_group * , s#fs_fte * ) ; int ( * update_fte ) ( s#mlx5_core_dev * , s#mlx5_flow_table * , unsigned int , int , s#fs_fte * ) ; int ( * delete_fte ) ( s#mlx5_core_dev * , s#mlx5_flow_table * , s#fs_fte * ) ; int ( * update_root_ft ) ( s#mlx5_core_dev * , s#mlx5_flow_table * , t#u32 , t#bool ) ; } 
s#mlx5_flow_root_namespace struct mlx5_flow_root_namespace { s#mlx5_flow_namespace ns ; e#fs_flow_table_type table_type ; s#mlx5_core_dev * dev ; s#mlx5_flow_table * root_ft ; s#mutex chain_lock ; s#list_head underlay_qpns ; const s#mlx5_flow_cmds * cmds ; } 
s#mlx5_flow_steering struct mlx5_flow_steering { s#mlx5_core_dev * dev ; s#kmem_cache * fgs_cache ; s#kmem_cache * ftes_cache ; s#mlx5_flow_root_namespace * root_ns ; s#mlx5_flow_root_namespace * fdb_root_ns ; s#mlx5_flow_namespace * * fdb_sub_ns ; s#mlx5_flow_root_namespace * * esw_egress_root_ns ; s#mlx5_flow_root_namespace * * esw_ingress_root_ns ; s#mlx5_flow_root_namespace * sniffer_tx_root_ns ; s#mlx5_flow_root_namespace * sniffer_rx_root_ns ; s#mlx5_flow_root_namespace * egress_root_ns ; } 
s##mlx5_mpfs
s##mlx5_eswitch
e#port_state_policy enum port_state_policy { MLX5_POLICY_DOWN = 0 , MLX5_POLICY_UP = 1 , MLX5_POLICY_FOLLOW = 2 , MLX5_POLICY_INVALID = 0xffffffff } 
s#mlx5_vf_context struct mlx5_vf_context { int enabled ; t#u64 port_guid ; t#u64 node_guid ; e#port_state_policy policy ; } 
s#mlx5_core_sriov struct mlx5_core_sriov { s#mlx5_vf_context * vfs_ctx ; int num_vfs ; int enabled_vfs ; } 
s##mlx5_lag
s#mlx5_fc_stats struct mlx5_fc_stats { t#spinlock_t counters_idr_lock ; s#idr counters_idr ; s#list_head counters ; s#llist_head addlist ; s#llist_head dellist ; s#workqueue_struct * wq ; s#delayed_work work ; unsigned long next_query ; unsigned long sampling_interval ; } 
s#mlx5_rate_limit struct mlx5_rate_limit { t#u32 rate ; t#u32 max_burst_sz ; t#u16 typical_pkt_sz ; } 
s#mlx5_rl_entry struct mlx5_rl_entry { s#mlx5_rate_limit rl ; t#u16 index ; t#u16 refcount ; } 
s#mlx5_rl_table struct mlx5_rl_table { s#mutex rl_lock ; t#u16 max_size ; t#u32 max_rate ; t#u32 min_rate ; s#mlx5_rl_entry * rl_entry ; } 
E#MLX5_MODULE_STATUS_NUM 0x3 
E#MLX5_MODULE_EVENT_ERROR_NUM 9 
s#mlx5_port_module_event_stats struct mlx5_port_module_event_stats { t#u64 status_counters [ E#MLX5_MODULE_STATUS_NUM ] ; t#u64 error_counters [ E#MLX5_MODULE_EVENT_ERROR_NUM ] ; } 
s#mlx5_pagefault struct mlx5_pagefault { t#u32 bytes_committed ; t#u32 token ; t#u8 event_subtype ; t#u8 type ; union { struct { t#u32 packet_size ; t#u32 wq_num ; t#u16 wqe_index ; } wqe ; struct { t#u32 r_key ; t#u32 packet_size ; t#u32 rdma_op_len ; t#u64 rdma_va ; } rdma ; } ; s#mlx5_eq * eq ; s#work_struct work ; } 
s#mlx5_bfreg_head struct mlx5_bfreg_head { s#mutex lock ; s#list_head list ; } 
s#mlx5_bfreg_data struct mlx5_bfreg_data { s#mlx5_bfreg_head reg_head ; s#mlx5_bfreg_head wc_head ; } 
s#mlx5_uars_page struct mlx5_uars_page { void * map ; t#bool wc ; t#u32 index ; s#list_head list ; unsigned int bfregs ; unsigned long * reg_bitmap ; unsigned long * fp_bitmap ; unsigned int reg_avail ; unsigned int fp_avail ; s#kref ref_count ; s#mlx5_core_dev * mdev ; } 
s#mlx5_priv struct mlx5_priv { char name [ E#MLX5_MAX_NAME_LEN ] ; s#mlx5_eq_table eq_table ; s#mlx5_irq_info * irq_info ; s#workqueue_struct * pg_wq ; s#rb_root page_root ; int fw_pages ; t#atomic_t reg_pages ; s#list_head free_list ; int vfs_pages ; s#mlx5_core_health health ; s#mlx5_srq_table srq_table ; s#mlx5_qp_table qp_table ; s#dentry * qp_debugfs ; s#dentry * eq_debugfs ; s#dentry * cq_debugfs ; s#dentry * cmdif_debugfs ; s#mlx5_mkey_table mkey_table ; s#mutex alloc_mutex ; int numa_node ; s#mutex pgdir_mutex ; s#list_head pgdir_list ; s#dentry * dbg_root ; t#spinlock_t mkey_lock ; t#u8 mkey_key ; s#list_head dev_list ; s#list_head ctx_list ; t#spinlock_t ctx_lock ; s#list_head waiting_events_list ; t#bool is_accum_events ; s#mlx5_flow_steering * steering ; s#mlx5_mpfs * mpfs ; s#mlx5_eswitch * eswitch ; s#mlx5_core_sriov sriov ; s#mlx5_lag * lag ; unsigned long pci_dev_data ; s#mlx5_fc_stats fc_stats ; s#mlx5_rl_table rl_table ; s#mlx5_port_module_event_stats pme_stats ; void ( * pfault ) ( s#mlx5_core_dev * , void * , s#mlx5_pagefault * ) ; void * pfault_ctx ; s#srcu_struct pfault_srcu ; s#mlx5_bfreg_data bfregs ; s#mlx5_uars_page * uar ; } 
E#MAX_MR_CACHE_ENTRIES ( 20 ) + 3 
s#mlx5_profile struct mlx5_profile { t#u64 mask ; t#u8 log_max_qp ; struct { int size ; int limit ; } mr_cache [ E#MAX_MR_CACHE_ENTRIES ] ; } 
s#mlx5_td struct mlx5_td { s#list_head tirs_list ; t#u32 tdn ; } 
s#mlx5_core_mkey struct mlx5_core_mkey { t#u64 iova ; t#u64 size ; t#u32 key ; t#u32 pd ; t#u32 type ; } 
s#mlx5_sq_bfreg struct mlx5_sq_bfreg { void * map ; s#mlx5_uars_page * up ; t#bool wc ; t#u32 index ; unsigned int offset ; } 
s#mlx5e_resources struct mlx5e_resources { t#u32 pdn ; s#mlx5_td td ; s#mlx5_core_mkey mkey ; s#mlx5_sq_bfreg bfreg ; } 
s##mlx5_vxlan
s#mlx5_rsvd_gids struct mlx5_rsvd_gids { unsigned int start ; unsigned int count ; s#ida ida ; } 
s##mlx5_fpga_device
s#cyclecounter struct cyclecounter { t#u64 ( * read ) ( const s#cyclecounter * ) ; t#u64 mask ; t#u32 mult ; t#u32 shift ; } 
s#timecounter struct timecounter { const s#cyclecounter * cc ; t#u64 cycle_last ; t#u64 nsec ; t#u64 mask ; t#u64 frac ; } 
s#hwtstamp_config struct hwtstamp_config { int flags ; int tx_type ; int rx_filter ; } 
s##ptp_clock
s#ptp_pin_desc struct ptp_pin_desc { char name [ 64 ] ; unsigned int index ; unsigned int func ; unsigned int chan ; unsigned int rsv [ 5 ] ; } 
s#system_device_crosststamp struct system_device_crosststamp { t#ktime_t device ; t#ktime_t sys_realtime ; t#ktime_t sys_monoraw ; } 
s#ptp_extts_request struct ptp_extts_request { unsigned int index ; unsigned int flags ; unsigned int rsv [ 2 ] ; } 
s#ptp_clock_time struct ptp_clock_time { t#__s64 sec ; t#__u32 nsec ; t#__u32 reserved ; } 
s#ptp_perout_request struct ptp_perout_request { s#ptp_clock_time start ; s#ptp_clock_time period ; unsigned int index ; unsigned int flags ; unsigned int rsv [ 4 ] ; } 
s#ptp_clock_request struct ptp_clock_request { enum { PTP_CLK_REQ_EXTTS , PTP_CLK_REQ_PEROUT , PTP_CLK_REQ_PPS , } type ; union { s#ptp_extts_request extts ; s#ptp_perout_request perout ; } ; } 
e#ptp_pin_function enum ptp_pin_function { PTP_PF_NONE , PTP_PF_EXTTS , PTP_PF_PEROUT , PTP_PF_PHYSYNC , } 
s#ptp_clock_info struct ptp_clock_info { s#module * owner ; char name [ 16 ] ; t#s32 max_adj ; int n_alarm ; int n_ext_ts ; int n_per_out ; int n_pins ; int pps ; s#ptp_pin_desc * pin_config ; int ( * adjfine ) ( s#ptp_clock_info * , long ) ; int ( * adjfreq ) ( s#ptp_clock_info * , t#s32 ) ; int ( * adjtime ) ( s#ptp_clock_info * , t#s64 ) ; int ( * gettime64 ) ( s#ptp_clock_info * , s#timespec * ) ; int ( * getcrosststamp ) ( s#ptp_clock_info * , s#system_device_crosststamp * ) ; int ( * settime64 ) ( s#ptp_clock_info * , const s#timespec * ) ; int ( * enable ) ( s#ptp_clock_info * , s#ptp_clock_request * , int ) ; int ( * verify ) ( s#ptp_clock_info * , unsigned int , e#ptp_pin_function , unsigned int ) ; } 
s#mlx5_pps struct mlx5_pps { t#u8 pin_caps [ 8 ] ; s#work_struct out_work ; t#u64 start [ 8 ] ; t#u8 enabled ; } 
s#mlx5_clock struct mlx5_clock { t#seqlock_t lock ; s#cyclecounter cycles ; s#timecounter tc ; s#hwtstamp_config hwtstamp_config ; t#u32 nominal_c_mult ; unsigned long overflow_period ; s#delayed_work overflow_work ; s#mlx5_core_dev * mdev ; s#ptp_clock * ptp ; s#ptp_clock_info ptp_info ; s#mlx5_pps pps_info ; } 
s##mlx5_ib_clock_info
s##mlx5_fw_tracer
s#mlx5_core_dev struct mlx5_core_dev { s#pci_dev * pdev ; s#mutex pci_status_mutex ; e#mlx5_pci_status pci_status ; t#u8 rev_id ; char board_id [ E#MLX5_BOARD_ID_LEN ] ; s#mlx5_cmd cmd ; s#mlx5_port_caps port_caps [ E#MLX5_MAX_PORTS ] ; struct { t#u32 hca_cur [ E#MLX5_CAP_NUM ] [ ( sizeof ( union mlx5_ifc_hca_cap_union_bits ) / 32 ) ] ; t#u32 hca_max [ E#MLX5_CAP_NUM ] [ ( sizeof ( union mlx5_ifc_hca_cap_union_bits ) / 32 ) ] ; t#u32 pcam [ ( sizeof ( struct mlx5_ifc_pcam_reg_bits ) / 32 ) ] ; t#u32 mcam [ ( sizeof ( struct mlx5_ifc_mcam_reg_bits ) / 32 ) ] ; t#u32 fpga [ ( sizeof ( struct mlx5_ifc_fpga_cap_bits ) / 32 ) ] ; t#u32 qcam [ ( sizeof ( struct mlx5_ifc_qcam_reg_bits ) / 32 ) ] ; } caps ; t#u64 sys_image_guid ; t#phys_addr_t iseg_base ; s#mlx5_init_seg * iseg ; e#mlx5_device_state state ; s#mutex intf_state_mutex ; unsigned long intf_state ; void ( * event ) ( s#mlx5_core_dev * , e#mlx5_dev_event , unsigned long ) ; s#mlx5_priv priv ; s#mlx5_profile * profile ; t#atomic_t num_qps ; t#u32 issi ; s#mlx5e_resources mlx5e_res ; s#mlx5_vxlan * vxlan ; struct { s#mlx5_rsvd_gids reserved_gids ; t#u32 roce_en ; } roce ; s#mlx5_fpga_device * fpga ; s#cpu_rmap * rmap ; s#mlx5_clock clock ; s#mlx5_ib_clock_info * clock_info ; s#page * clock_info_page ; s#mlx5_fw_tracer * tracer ; } 
mlx5_accel_ipsec_device_caps t#u32 mlx5_accel_ipsec_device_caps ( s#mlx5_core_dev * ) 
e#mlx5_accel_esp_action enum mlx5_accel_esp_action { MLX5_ACCEL_ESP_ACTION_DECRYPT , MLX5_ACCEL_ESP_ACTION_ENCRYPT , } 
e#mlx5_accel_esp_replay enum mlx5_accel_esp_replay { MLX5_ACCEL_ESP_REPLAY_NONE , MLX5_ACCEL_ESP_REPLAY_BMP , } 
e#mlx5_accel_esp_keymats enum mlx5_accel_esp_keymats { MLX5_ACCEL_ESP_KEYMAT_AES_NONE , MLX5_ACCEL_ESP_KEYMAT_AES_GCM , } 
e#mlx5_accel_esp_aes_gcm_keymat_iv_algo enum mlx5_accel_esp_aes_gcm_keymat_iv_algo { MLX5_ACCEL_ESP_AES_GCM_IV_ALGO_SEQ , } 
s#aes_gcm_keymat struct aes_gcm_keymat { t#u64 seq_iv ; e#mlx5_accel_esp_aes_gcm_keymat_iv_algo iv_algo ; t#u32 salt ; t#u32 icv_len ; t#u32 key_len ; t#u32 aes_key [ 256 / 32 ] ; } 
s#mlx5_accel_esp_xfrm_attrs struct mlx5_accel_esp_xfrm_attrs { e#mlx5_accel_esp_action action ; t#u32 esn ; t#u32 spi ; t#u32 seq ; t#u32 tfc_pad ; t#u32 flags ; t#u32 sa_handle ; e#mlx5_accel_esp_replay replay_type ; union { struct { t#u32 size ; } bmp ; } replay ; e#mlx5_accel_esp_keymats keymat_type ; union { s#aes_gcm_keymat aes_gcm ; } keymat ; } 
s#mlx5_accel_esp_xfrm struct mlx5_accel_esp_xfrm { s#mlx5_core_dev * mdev ; s#mlx5_accel_esp_xfrm_attrs attrs ; } 
mlx5_accel_esp_create_xfrm s#mlx5_accel_esp_xfrm * mlx5_accel_esp_create_xfrm ( s#mlx5_core_dev * , const s#mlx5_accel_esp_xfrm_attrs * , t#u32 ) 
mlx5_accel_esp_destroy_xfrm void mlx5_accel_esp_destroy_xfrm ( s#mlx5_accel_esp_xfrm * ) 
mlx5_accel_esp_modify_xfrm int mlx5_accel_esp_modify_xfrm ( s#mlx5_accel_esp_xfrm * , const s#mlx5_accel_esp_xfrm_attrs * ) 

/* drivers/net/ethernet/mellanox/mlx5/core/alloc.o */
s##posix_acl
s##vfsmount
s##device_private
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##sec_path
s##workqueue_struct
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##kmem_cache
s##xfrm_state
s##lwtunnel_state
s##uncached_list
s##rt6_info
s##dn_route
s##prefix_info
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
s##prot_inuse
s##ipv4_devconf
s##xt_table
s##inet_hashinfo
s##rt6_statistics
s##fib6_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##eventfd_ctx
s##mempolicy
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##mtd_info
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##platform_msi_priv_data
s##hotplug_slot
s##pci_vpd
s##pci_sriov
s##dma_pool
s##mlx5_flow_steering
s##mlx5_mpfs
s##mlx5_eswitch
s##mlx5_lag
s##mlx5_vxlan
s##mlx5_fpga_device
s##ptp_clock
s##mlx5_ib_clock_info
s##mlx5_fw_tracer
mlx5_buf_alloc int mlx5_buf_alloc ( s#mlx5_core_dev * , int , s#mlx5_frag_buf * ) 
mlx5_buf_free void mlx5_buf_free ( s#mlx5_core_dev * , s#mlx5_frag_buf * ) 
mlx5_frag_buf_alloc_node int mlx5_frag_buf_alloc_node ( s#mlx5_core_dev * , int , s#mlx5_frag_buf * , int ) 
mlx5_frag_buf_free void mlx5_frag_buf_free ( s#mlx5_core_dev * , s#mlx5_frag_buf * ) 
s##mlx5_db_pgdir
s##mlx5_ib_user_db_page
s#mlx5_db struct mlx5_db { t#__be32 * db ; union { s#mlx5_db_pgdir * pgdir ; s#mlx5_ib_user_db_page * user_page ; } u ; t#dma_addr_t dma ; int index ; } 
mlx5_db_alloc_node int mlx5_db_alloc_node ( s#mlx5_core_dev * , s#mlx5_db * , int ) 
mlx5_db_alloc int mlx5_db_alloc ( s#mlx5_core_dev * , s#mlx5_db * ) 
mlx5_db_free void mlx5_db_free ( s#mlx5_core_dev * , s#mlx5_db * ) 
mlx5_fill_page_array void mlx5_fill_page_array ( s#mlx5_frag_buf * , t#__be64 * ) 
mlx5_fill_page_frag_array void mlx5_fill_page_frag_array ( s#mlx5_frag_buf * , t#__be64 * ) 

/* drivers/net/ethernet/mellanox/mlx5/core/cmd.o */
s##posix_acl
s##vfsmount
s##device_private
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##sec_path
s##workqueue_struct
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##kmem_cache
s##xfrm_state
s##lwtunnel_state
s##uncached_list
s##rt6_info
s##dn_route
s##prefix_info
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
s##prot_inuse
s##ipv4_devconf
s##xt_table
s##inet_hashinfo
s##rt6_statistics
s##fib6_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##eventfd_ctx
s##mempolicy
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##mtd_info
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##platform_msi_priv_data
s##hotplug_slot
s##pci_vpd
s##pci_sriov
s##dma_pool
s##mlx5_flow_steering
s##mlx5_mpfs
s##mlx5_eswitch
s##mlx5_lag
s##mlx5_vxlan
s##mlx5_fpga_device
s##ptp_clock
s##mlx5_ib_clock_info
s##mlx5_fw_tracer
mlx5_cmd_comp_handler void mlx5_cmd_comp_handler ( s#mlx5_core_dev * , t#u64 , t#bool ) 
mlx5_cmd_exec int mlx5_cmd_exec ( s#mlx5_core_dev * , void * , int , void * , int ) 
mlx5_cmd_exec_cb int mlx5_cmd_exec_cb ( s#mlx5_core_dev * , void * , int , void * , int , t#mlx5_cmd_cbk_t , void * ) 
mlx5_cmd_exec_polling int mlx5_cmd_exec_polling ( s#mlx5_core_dev * , void * , int , void * , int ) 
mlx5_cmd_init int mlx5_cmd_init ( s#mlx5_core_dev * ) 
mlx5_cmd_cleanup void mlx5_cmd_cleanup ( s#mlx5_core_dev * ) 

/* drivers/net/ethernet/mellanox/mlx5/core/cq.o */
s##posix_acl
s##vfsmount
s##device_private
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##sec_path
s##workqueue_struct
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##kmem_cache
s##xfrm_state
s##lwtunnel_state
s##uncached_list
s##rt6_info
s##dn_route
s##prefix_info
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
s##prot_inuse
s##ipv4_devconf
s##xt_table
s##inet_hashinfo
s##rt6_statistics
s##fib6_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##eventfd_ctx
s##mempolicy
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##mtd_info
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##platform_msi_priv_data
s##hotplug_slot
s##pci_vpd
s##pci_sriov
s##dma_pool
s##mlx5_flow_steering
s##mlx5_mpfs
s##mlx5_eswitch
s##mlx5_lag
s##mlx5_vxlan
s##mlx5_fpga_device
s##ptp_clock
s##mlx5_ib_clock_info
s##mlx5_fw_tracer
e#mlx5_event enum mlx5_event { MLX5_EVENT_TYPE_COMP = 0x0 , MLX5_EVENT_TYPE_PATH_MIG = 0x01 , MLX5_EVENT_TYPE_COMM_EST = 0x02 , MLX5_EVENT_TYPE_SQ_DRAINED = 0x03 , MLX5_EVENT_TYPE_SRQ_LAST_WQE = 0x13 , MLX5_EVENT_TYPE_SRQ_RQ_LIMIT = 0x14 , MLX5_EVENT_TYPE_CQ_ERROR = 0x04 , MLX5_EVENT_TYPE_WQ_CATAS_ERROR = 0x05 , MLX5_EVENT_TYPE_PATH_MIG_FAILED = 0x07 , MLX5_EVENT_TYPE_WQ_INVAL_REQ_ERROR = 0x10 , MLX5_EVENT_TYPE_WQ_ACCESS_ERROR = 0x11 , MLX5_EVENT_TYPE_SRQ_CATAS_ERROR = 0x12 , MLX5_EVENT_TYPE_INTERNAL_ERROR = 0x08 , MLX5_EVENT_TYPE_PORT_CHANGE = 0x09 , MLX5_EVENT_TYPE_GPIO_EVENT = 0x15 , MLX5_EVENT_TYPE_PORT_MODULE_EVENT = 0x16 , MLX5_EVENT_TYPE_TEMP_WARN_EVENT = 0x17 , MLX5_EVENT_TYPE_REMOTE_CONFIG = 0x19 , MLX5_EVENT_TYPE_GENERAL_EVENT = 0x22 , MLX5_EVENT_TYPE_PPS_EVENT = 0x25 , MLX5_EVENT_TYPE_DB_BF_CONGESTION = 0x1a , MLX5_EVENT_TYPE_STALL_EVENT = 0x1b , MLX5_EVENT_TYPE_CMD = 0x0a , MLX5_EVENT_TYPE_PAGE_REQUEST = 0xb , MLX5_EVENT_TYPE_PAGE_FAULT = 0xc , MLX5_EVENT_TYPE_NIC_VPORT_CHANGE = 0xd , MLX5_EVENT_TYPE_DCT_DRAINED = 0x1c , MLX5_EVENT_TYPE_FPGA_ERROR = 0x20 , MLX5_EVENT_TYPE_FPGA_QP_ERROR = 0x21 , MLX5_EVENT_TYPE_DEVICE_TRACER = 0x26 , } 
s#mlx5_core_cq struct mlx5_core_cq { t#u32 cqn ; int cqe_sz ; t#__be32 * set_ci_db ; t#__be32 * arm_db ; s#mlx5_uars_page * uar ; t#refcount_t refcount ; s#completion free ; unsigned vector ; unsigned int irqn ; void ( * comp ) ( s#mlx5_core_cq * ) ; void ( * event ) ( s#mlx5_core_cq * , e#mlx5_event ) ; t#u32 cons_index ; unsigned arm_sn ; s#mlx5_rsc_debug * dbg ; int pid ; struct { s#list_head list ; void ( * comp ) ( s#mlx5_core_cq * ) ; void * priv ; } tasklet_ctx ; int reset_notify_added ; s#list_head reset_notify ; s#mlx5_eq * eq ; t#u16 uid ; } 
mlx5_core_create_cq int mlx5_core_create_cq ( s#mlx5_core_dev * , s#mlx5_core_cq * , t#u32 * , int ) 
mlx5_core_destroy_cq int mlx5_core_destroy_cq ( s#mlx5_core_dev * , s#mlx5_core_cq * ) 
mlx5_core_query_cq int mlx5_core_query_cq ( s#mlx5_core_dev * , s#mlx5_core_cq * , t#u32 * , int ) 
mlx5_core_modify_cq int mlx5_core_modify_cq ( s#mlx5_core_dev * , s#mlx5_core_cq * , t#u32 * , int ) 
mlx5_core_modify_cq_moderation int mlx5_core_modify_cq_moderation ( s#mlx5_core_dev * , s#mlx5_core_cq * , t#u16 , t#u16 ) 

/* drivers/net/ethernet/mellanox/mlx5/core/debugfs.o */
s##posix_acl
s##vfsmount
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##xol_area
s##pid_namespace
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##sec_path
s##workqueue_struct
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##kmem_cache
s##xfrm_state
s##lwtunnel_state
s##uncached_list
s##rt6_info
s##dn_route
s##prefix_info
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##device_private
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##phy_device
s##sfp_bus
s##prot_inuse
s##ipv4_devconf
s##xt_table
s##inet_hashinfo
s##rt6_statistics
s##fib6_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##swap_info_struct
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##nlm_lockowner
s##nfs4_lock_state
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##mtd_info
s##fsnotify_mark_connector
s##fscrypt_info
mlx5_debugfs_root extern s#dentry * mlx5_debugfs_root 

/* drivers/net/ethernet/mellanox/mlx5/core/dev.o */
s##posix_acl
s##vfsmount
s##device_private
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##sec_path
s##workqueue_struct
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##kmem_cache
s##xfrm_state
s##lwtunnel_state
s##uncached_list
s##rt6_info
s##dn_route
s##prefix_info
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
s##prot_inuse
s##ipv4_devconf
s##xt_table
s##inet_hashinfo
s##rt6_statistics
s##fib6_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##eventfd_ctx
s##mempolicy
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##mtd_info
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##platform_msi_priv_data
s##hotplug_slot
s##pci_vpd
s##pci_sriov
s##dma_pool
s##mlx5_flow_steering
s##mlx5_mpfs
s##mlx5_eswitch
s##mlx5_lag
s##mlx5_vxlan
s##mlx5_fpga_device
s##ptp_clock
s##mlx5_ib_clock_info
s##mlx5_fw_tracer
s#mlx5_interface struct mlx5_interface { void * ( * add ) ( s#mlx5_core_dev * ) ; void ( * remove ) ( s#mlx5_core_dev * , void * ) ; int ( * attach ) ( s#mlx5_core_dev * , void * ) ; void ( * detach ) ( s#mlx5_core_dev * , void * ) ; void ( * event ) ( s#mlx5_core_dev * , void * , e#mlx5_dev_event , unsigned long ) ; void ( * pfault ) ( s#mlx5_core_dev * , void * , s#mlx5_pagefault * ) ; void * ( * get_dev ) ( void * ) ; int protocol ; s#list_head list ; } 
mlx5_register_interface int mlx5_register_interface ( s#mlx5_interface * ) 
mlx5_unregister_interface void mlx5_unregister_interface ( s#mlx5_interface * ) 
mlx5_get_protocol_dev void * mlx5_get_protocol_dev ( s#mlx5_core_dev * , int ) 

/* drivers/net/ethernet/mellanox/mlx5/core/diag/fs_tracepoint.o */
s##static_key_mod
__tracepoint_mlx5_fs_add_fg extern s#tracepoint __tracepoint_mlx5_fs_add_fg 
__tracepoint_mlx5_fs_del_fg extern s#tracepoint __tracepoint_mlx5_fs_del_fg 
__tracepoint_mlx5_fs_set_fte extern s#tracepoint __tracepoint_mlx5_fs_set_fte 
__tracepoint_mlx5_fs_del_fte extern s#tracepoint __tracepoint_mlx5_fs_del_fte 
__tracepoint_mlx5_fs_add_rule extern s#tracepoint __tracepoint_mlx5_fs_add_rule 
__tracepoint_mlx5_fs_del_rule extern s#tracepoint __tracepoint_mlx5_fs_del_rule 

/* drivers/net/ethernet/mellanox/mlx5/core/diag/fw_tracer.o */
s##static_key_mod
__tracepoint_mlx5_fw extern s#tracepoint __tracepoint_mlx5_fw 

/* drivers/net/ethernet/mellanox/mlx5/core/eq.o */
s##posix_acl
s##vfsmount
s##device_private
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##sec_path
s##workqueue_struct
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##kmem_cache
s##xfrm_state
s##lwtunnel_state
s##uncached_list
s##rt6_info
s##dn_route
s##prefix_info
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##nf_hook_entry
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
s##prot_inuse
s##ipv4_devconf
s##xt_table
s##inet_hashinfo
s##rt6_statistics
s##fib6_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##eventfd_ctx
s##mempolicy
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##mtd_info
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##platform_msi_priv_data
s##hotplug_slot
s##pci_vpd
s##pci_sriov
s##dma_pool
s##mlx5_flow_steering
s##mlx5_mpfs
s##mlx5_flow_table
s##mlx5_flow_group
s#legacy_fdb struct legacy_fdb { s#mlx5_flow_table * fdb ; s#mlx5_flow_group * addr_grp ; s#mlx5_flow_group * allmulti_grp ; s#mlx5_flow_group * promisc_grp ; } 
s##mlx5_flow_handle
s#offloads_fdb struct offloads_fdb { s#mlx5_flow_table * slow_fdb ; s#mlx5_flow_group * send_to_vport_grp ; s#mlx5_flow_group * miss_grp ; s#mlx5_flow_handle * miss_rule_uni ; s#mlx5_flow_handle * miss_rule_multi ; int vlan_push_pop_refcount ; struct { s#mlx5_flow_table * fdb ; t#u32 num_rules ; } fdb_prio [ 3 + 1 ] [ 16 + 1 ] [ 2 ] ; s#mutex fdb_prio_lock ; int fdb_left [ ( sizeof ( ESW_POOLS ) / sizeof ( ( ESW_POOLS ) [ 0 ] ) + ( sizeof ( struct { int : - ! ! ( __builtin_types_compatible_p ( typeof ( ( ESW_POOLS ) ) , typeof ( & ( ESW_POOLS ) [ 0 ] ) ) ) ; } ) ) ) ] ; } 
s#mlx5_eswitch_fdb struct mlx5_eswitch_fdb { union { s#legacy_fdb legacy ; s#offloads_fdb offloads ; } ; t#u32 flags ; } 
s##mlx5_fc
s#vport_ingress struct vport_ingress { s#mlx5_flow_table * acl ; s#mlx5_flow_group * allow_untagged_spoofchk_grp ; s#mlx5_flow_group * allow_spoofchk_only_grp ; s#mlx5_flow_group * allow_untagged_only_grp ; s#mlx5_flow_group * drop_grp ; s#mlx5_flow_handle * allow_rule ; s#mlx5_flow_handle * drop_rule ; s#mlx5_fc * drop_counter ; } 
s#vport_egress struct vport_egress { s#mlx5_flow_table * acl ; s#mlx5_flow_group * allowed_vlans_grp ; s#mlx5_flow_group * drop_grp ; s#mlx5_flow_handle * allowed_vlan ; s#mlx5_flow_handle * drop_rule ; s#mlx5_fc * drop_counter ; } 
s#mlx5_vport_info struct mlx5_vport_info { t#u8 mac [ 6 ] ; t#u16 vlan ; t#u8 qos ; t#u64 node_guid ; int link_state ; t#u32 min_rate ; t#u32 max_rate ; t#bool spoofchk ; t#bool trusted ; } 
s#mlx5_vport struct mlx5_vport { s#mlx5_core_dev * dev ; int vport ; s#hlist_head uc_list [ ( ( 1UL << ( 8 ) ) ) ] ; s#hlist_head mc_list [ ( ( 1UL << ( 8 ) ) ) ] ; s#mlx5_flow_handle * promisc_rule ; s#mlx5_flow_handle * allmulti_rule ; s#work_struct vport_change_handler ; s#vport_ingress ingress ; s#vport_egress egress ; s#mlx5_vport_info info ; struct { t#bool enabled ; t#u32 esw_tsar_ix ; t#u32 bw_share ; } qos ; t#bool enabled ; t#u16 enabled_events ; } 
s#l2addr_node struct l2addr_node { s#hlist_node hlist ; t#u8 addr [ 6 ] ; } 
s#esw_mc_addr struct esw_mc_addr { s#l2addr_node node ; s#mlx5_flow_handle * uplink_rule ; t#u32 refcnt ; } 
s#mlx5_eswitch_rep_if struct mlx5_eswitch_rep_if { int ( * load ) ( s#mlx5_core_dev * , s#mlx5_eswitch_rep * ) ; void ( * unload ) ( s#mlx5_eswitch_rep * ) ; void * ( * get_proto_dev ) ( s#mlx5_eswitch_rep * ) ; void * priv ; t#bool valid ; } 
E#NUM_REP_TYPES 2 
s#mlx5_eswitch_rep struct mlx5_eswitch_rep { s#mlx5_eswitch_rep_if rep_if [ E#NUM_REP_TYPES ] ; t#u16 vport ; t#u8 hw_id [ 6 ] ; t#u16 vlan ; t#u32 vlan_refcount ; } 
s#mlx5_esw_offload struct mlx5_esw_offload { s#mlx5_flow_table * ft_offloads ; s#mlx5_flow_group * vport_rx_group ; s#mlx5_eswitch_rep * vport_reps ; s#hlist_head encap_tbl [ 1 << ( 8 ) ] ; s#hlist_head mod_hdr_tbl [ 1 << ( 8 ) ] ; t#u8 inline_mode ; t#u64 num_flows ; t#u8 encap ; } 
s#mlx5_eswitch struct mlx5_eswitch { s#mlx5_core_dev * dev ; s#mlx5_eswitch_fdb fdb_table ; s#hlist_head mc_table [ ( ( 1UL << ( 8 ) ) ) ] ; s#workqueue_struct * work_queue ; s#mlx5_vport * vports ; int total_vports ; int enabled_vports ; s#mutex state_lock ; s#esw_mc_addr mc_promisc ; struct { t#bool enabled ; t#u32 root_tsar_id ; } qos ; s#mlx5_esw_offload offloads ; int mode ; int nvports ; } 
s##mlx5_lag
s##mlx5_vxlan
e#mlx5_fpga_status enum mlx5_fpga_status { MLX5_FPGA_STATUS_SUCCESS = 0 , MLX5_FPGA_STATUS_FAILURE = 1 , MLX5_FPGA_STATUS_IN_PROGRESS = 2 , MLX5_FPGA_STATUS_NONE = 0xFFFF , } 
e#mlx5_fpga_image enum mlx5_fpga_image { MLX5_FPGA_IMAGE_USER = 0 , MLX5_FPGA_IMAGE_FACTORY , } 
s##mlx5_fpga_ipsec
s##mlx5_fpga_tls
s#mlx5_fpga_device struct mlx5_fpga_device { s#mlx5_core_dev * mdev ; t#spinlock_t state_lock ; e#mlx5_fpga_status state ; e#mlx5_fpga_image last_admin_image ; e#mlx5_fpga_image last_oper_image ; struct { t#u32 pdn ; s#mlx5_core_mkey mkey ; s#mlx5_uars_page * uar ; } conn_res ; s#mlx5_fpga_ipsec * ipsec ; s#mlx5_fpga_tls * tls ; } 
s##ptp_clock
s##mlx5_ib_clock_info
s#mlx5_fw_tracer struct mlx5_fw_tracer { s#mlx5_core_dev * dev ; t#bool owner ; t#u8 trc_ver ; s#workqueue_struct * work_queue ; s#work_struct ownership_change_work ; s#work_struct read_fw_strings_work ; struct { t#u8 first_string_trace ; t#u8 num_string_trace ; t#u32 num_string_db ; t#u32 base_address_out [ 8 ] ; t#u32 size_out [ 8 ] ; void * buffer [ 8 ] ; t#bool loaded ; } str_db ; struct { t#u32 pdn ; void * log_buf ; t#dma_addr_t dma ; t#u32 size ; s#mlx5_core_mkey mkey ; t#u32 consumer_index ; } buff ; t#u64 last_timestamp ; s#work_struct handle_traces_work ; s#hlist_head hash [ ( 1UL << ( 6 ) ) ] ; s#list_head ready_strings_list ; } 
mlx5_core_page_fault_resume int mlx5_core_page_fault_resume ( s#mlx5_core_dev * , t#u32 , t#u32 , t#u8 , int ) 

/* drivers/net/ethernet/mellanox/mlx5/core/eswitch.o */
s##posix_acl
s##vfsmount
s##device_private
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##sec_path
s##workqueue_struct
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##kmem_cache
s##xfrm_state
s##lwtunnel_state
s##uncached_list
s##rt6_info
s##dn_route
s##prefix_info
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
s##prot_inuse
s##ipv4_devconf
s##xt_table
s##inet_hashinfo
s##rt6_statistics
s##fib6_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##eventfd_ctx
s##mempolicy
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##mtd_info
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##platform_msi_priv_data
s##hotplug_slot
s##pci_vpd
s##pci_sriov
s##dma_pool
s##mlx5_flow_cmds
s##mlx5_mpfs
s##mlx5_lag
s##mlx5_vxlan
s##mlx5_fpga_device
s##ptp_clock
s##mlx5_ib_clock_info
s##mlx5_fw_tracer
e#mlx5_flow_destination_type enum mlx5_flow_destination_type { MLX5_FLOW_DESTINATION_TYPE_VPORT = 0x0 , MLX5_FLOW_DESTINATION_TYPE_FLOW_TABLE = 0x1 , MLX5_FLOW_DESTINATION_TYPE_TIR = 0x2 , MLX5_FLOW_DESTINATION_TYPE_PORT = 0x99 , MLX5_FLOW_DESTINATION_TYPE_COUNTER = 0x100 , MLX5_FLOW_DESTINATION_TYPE_FLOW_TABLE_NUM = 0x101 , } 
s#mlx5_flow_destination struct mlx5_flow_destination { e#mlx5_flow_destination_type type ; union { t#u32 tir_num ; t#u32 ft_num ; s#mlx5_flow_table * ft ; t#u32 counter_id ; struct { t#u16 num ; t#u16 vhca_id ; t#bool vhca_id_valid ; } vport ; } ; } 
s#mlx5_flow_rule struct mlx5_flow_rule { s#fs_node node ; s#mlx5_flow_destination dest_attr ; s#list_head next_ft ; t#u32 sw_action ; } 
s#mlx5_flow_handle struct mlx5_flow_handle { int num_rules ; s#mlx5_flow_rule * rule [ ] ; } 
mlx5_eswitch_mode t#u8 mlx5_eswitch_mode ( s#mlx5_eswitch * ) 

/* drivers/net/ethernet/mellanox/mlx5/core/eswitch_offloads.o */
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##kmem_cache
s##fs_pin
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##proc_dir_entry
s##uevent_sock
s##prot_inuse
s##ipv4_devconf
s##xt_table
s##inet_hashinfo
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##lwtunnel_state
s##uncached_list
s##dn_route
s##workqueue_struct
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##nf_hook_entry
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
e#switchdev_attr_id enum switchdev_attr_id { SWITCHDEV_ATTR_ID_UNDEFINED , SWITCHDEV_ATTR_ID_PORT_PARENT_ID , SWITCHDEV_ATTR_ID_PORT_STP_STATE , SWITCHDEV_ATTR_ID_PORT_BRIDGE_FLAGS , SWITCHDEV_ATTR_ID_PORT_BRIDGE_FLAGS_SUPPORT , SWITCHDEV_ATTR_ID_PORT_MROUTER , SWITCHDEV_ATTR_ID_BRIDGE_AGEING_TIME , SWITCHDEV_ATTR_ID_BRIDGE_VLAN_FILTERING , SWITCHDEV_ATTR_ID_BRIDGE_MC_DISABLED , SWITCHDEV_ATTR_ID_BRIDGE_MROUTER , } 
t#clock_t typedef t#__kernel_clock_t clock_t 
s#switchdev_attr struct switchdev_attr { s#net_device * orig_dev ; e#switchdev_attr_id id ; t#u32 flags ; void * complete_priv ; void ( * complete ) ( s#net_device * , int , void * ) ; union { s#netdev_phys_item_id ppid ; t#u8 stp_state ; unsigned long brport_flags ; unsigned long brport_flags_support ; t#bool mrouter ; t#clock_t ageing_time ; t#bool vlan_filtering ; t#bool mc_disabled ; } u ; } 
s#switchdev_trans struct switchdev_trans { s#list_head item_list ; t#bool ph_prepare ; } 
e#switchdev_obj_id enum switchdev_obj_id { SWITCHDEV_OBJ_ID_UNDEFINED , SWITCHDEV_OBJ_ID_PORT_VLAN , SWITCHDEV_OBJ_ID_PORT_FDB , SWITCHDEV_OBJ_ID_PORT_MDB , SWITCHDEV_OBJ_ID_HOST_MDB , } 
s#switchdev_obj struct switchdev_obj { s#net_device * orig_dev ; e#switchdev_obj_id id ; t#u32 flags ; void * complete_priv ; void ( * complete ) ( s#net_device * , int , void * ) ; } 
t#switchdev_obj_dump_cb_t typedef int switchdev_obj_dump_cb_t ( s#switchdev_obj * ) 
s#switchdev_ops struct switchdev_ops { int ( * switchdev_port_attr_get ) ( s#net_device * , s#switchdev_attr * ) ; int ( * switchdev_port_attr_set ) ( s#net_device * , const s#switchdev_attr * , s#switchdev_trans * ) ; int ( * switchdev_port_obj_add ) ( s#net_device * , const s#switchdev_obj * , s#switchdev_trans * ) ; int ( * switchdev_port_obj_del ) ( s#net_device * , const s#switchdev_obj * ) ; int ( * switchdev_port_obj_dump ) ( s#net_device * , s#switchdev_obj * , t#switchdev_obj_dump_cb_t * ) ; } 
s##prefix_info
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##device_private
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##phy_device
s##sfp_bus
s##sec_path
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##xol_area
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##platform_msi_priv_data
s##hotplug_slot
s##pci_vpd
s##pci_sriov
s##dma_pool
s##mlx5_flow_cmds
s##mlx5_mpfs
s##mlx5_lag
s##mlx5_vxlan
s##mlx5_fpga_device
s##ptp_clock
s##mlx5_ib_clock_info
s##mlx5_fw_tracer
mlx5_eswitch_add_send_to_vport_rule s#mlx5_flow_handle * mlx5_eswitch_add_send_to_vport_rule ( s#mlx5_eswitch * , int , t#u32 ) 
mlx5_eswitch_register_vport_rep void mlx5_eswitch_register_vport_rep ( s#mlx5_eswitch * , int , s#mlx5_eswitch_rep_if * , t#u8 ) 
mlx5_eswitch_unregister_vport_rep void mlx5_eswitch_unregister_vport_rep ( s#mlx5_eswitch * , int , t#u8 ) 
mlx5_eswitch_get_proto_dev void * mlx5_eswitch_get_proto_dev ( s#mlx5_eswitch * , int , t#u8 ) 
mlx5_eswitch_uplink_get_proto_dev void * mlx5_eswitch_uplink_get_proto_dev ( s#mlx5_eswitch * , t#u8 ) 
mlx5_eswitch_vport_rep s#mlx5_eswitch_rep * mlx5_eswitch_vport_rep ( s#mlx5_eswitch * , int ) 

/* drivers/net/ethernet/mellanox/mlx5/core/fpga/sdk.o */
s##posix_acl
s##vfsmount
s##device_private
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##sec_path
s##workqueue_struct
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##kmem_cache
s##xfrm_state
s##lwtunnel_state
s##uncached_list
s##rt6_info
s##dn_route
s##prefix_info
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
s##prot_inuse
s##ipv4_devconf
s##xt_table
s##inet_hashinfo
s##rt6_statistics
s##fib6_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##eventfd_ctx
s##mempolicy
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##mtd_info
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##platform_msi_priv_data
s##hotplug_slot
s##pci_vpd
s##pci_sriov
s##dma_pool
s##mlx5_flow_steering
s##mlx5_mpfs
s##mlx5_eswitch
s##mlx5_lag
s##mlx5_vxlan
s##ptp_clock
s##mlx5_ib_clock_info
s##mlx5_fw_tracer
s##mlx5_fpga_ipsec
s##mlx5_fpga_tls
s#mlx5_fpga_dma_entry struct mlx5_fpga_dma_entry { void * data ; unsigned int size ; t#dma_addr_t dma_addr ; } 
s#mlx5_fpga_dma_buf struct mlx5_fpga_dma_buf { e#dma_data_direction dma_dir ; s#mlx5_fpga_dma_entry sg [ 2 ] ; s#list_head list ; void ( * complete ) ( s#mlx5_fpga_conn * , s#mlx5_fpga_device * , s#mlx5_fpga_dma_buf * , t#u8 ) ; } 
s#mlx5_frag_buf_ctrl struct mlx5_frag_buf_ctrl { s#mlx5_buf_list * frags ; t#u32 sz_m1 ; t#u16 frag_sz_m1 ; t#u16 strides_offset ; t#u8 log_sz ; t#u8 log_stride ; t#u8 log_frag_strides ; } 
s#mlx5_cqwq struct mlx5_cqwq { s#mlx5_frag_buf_ctrl fbc ; t#__be32 * db ; t#u32 cc ; } 
s##mlx5_db_pgdir
s##mlx5_ib_user_db_page
s#mlx5_wq_ctrl struct mlx5_wq_ctrl { s#mlx5_core_dev * mdev ; s#mlx5_frag_buf buf ; s#mlx5_db db ; } 
s#mlx5_wq_cyc struct mlx5_wq_cyc { s#mlx5_frag_buf_ctrl fbc ; t#__be32 * db ; t#u16 sz ; t#u16 wqe_ctr ; t#u16 cur_sz ; } 
s#mlx5_wq_qp struct mlx5_wq_qp { s#mlx5_wq_cyc rq ; s#mlx5_wq_cyc sq ; } 
E#MLX5_EVENT_QUEUE_TYPE_QP 0 
E#MLX5_EVENT_QUEUE_TYPE_RQ 1 
E#MLX5_EVENT_QUEUE_TYPE_SQ 2 
E#MLX5_EVENT_QUEUE_TYPE_DCT 6 
e#mlx5_res_type enum mlx5_res_type { MLX5_RES_QP = E#MLX5_EVENT_QUEUE_TYPE_QP , MLX5_RES_RQ = E#MLX5_EVENT_QUEUE_TYPE_RQ , MLX5_RES_SQ = E#MLX5_EVENT_QUEUE_TYPE_SQ , MLX5_RES_SRQ = 3 , MLX5_RES_XSRQ = 4 , MLX5_RES_XRQ = 5 , MLX5_RES_DCT = E#MLX5_EVENT_QUEUE_TYPE_DCT , } 
s#mlx5_core_rsc_common struct mlx5_core_rsc_common { e#mlx5_res_type res ; t#atomic_t refcount ; s#completion free ; } 
s#mlx5_core_qp struct mlx5_core_qp { s#mlx5_core_rsc_common common ; void ( * event ) ( s#mlx5_core_qp * , int ) ; int qpn ; s#mlx5_rsc_debug * dbg ; int pid ; t#u16 uid ; } 
s#mlx5_fpga_conn struct mlx5_fpga_conn { s#mlx5_fpga_device * fdev ; void ( * recv_cb ) ( void * , s#mlx5_fpga_dma_buf * ) ; void * cb_arg ; t#u32 fpga_qpc [ ( sizeof ( struct mlx5_ifc_fpga_qpc_bits ) / 32 ) ] ; t#u32 fpga_qpn ; struct { s#mlx5_cqwq wq ; s#mlx5_wq_ctrl wq_ctrl ; s#mlx5_core_cq mcq ; s#tasklet_struct tasklet ; } cq ; struct { t#bool active ; int sgid_index ; s#mlx5_wq_qp wq ; s#mlx5_wq_ctrl wq_ctrl ; s#mlx5_core_qp mqp ; struct { t#spinlock_t lock ; unsigned int pc ; unsigned int cc ; unsigned int size ; s#mlx5_fpga_dma_buf * * bufs ; s#list_head backlog ; } sq ; struct { unsigned int pc ; unsigned int cc ; unsigned int size ; s#mlx5_fpga_dma_buf * * bufs ; } rq ; } qp ; } 
s#mlx5_fpga_conn_attr struct mlx5_fpga_conn_attr { unsigned int tx_size ; unsigned int rx_size ; void ( * recv_cb ) ( void * , s#mlx5_fpga_dma_buf * ) ; void * cb_arg ; } 
mlx5_fpga_sbu_conn_create s#mlx5_fpga_conn * mlx5_fpga_sbu_conn_create ( s#mlx5_fpga_device * , s#mlx5_fpga_conn_attr * ) 
mlx5_fpga_sbu_conn_destroy void mlx5_fpga_sbu_conn_destroy ( s#mlx5_fpga_conn * ) 
mlx5_fpga_sbu_conn_sendmsg int mlx5_fpga_sbu_conn_sendmsg ( s#mlx5_fpga_conn * , s#mlx5_fpga_dma_buf * ) 
e#mlx5_fpga_access_type enum mlx5_fpga_access_type { MLX5_FPGA_ACCESS_TYPE_I2C = 0x0 , MLX5_FPGA_ACCESS_TYPE_DONTCARE = 0x0 , } 
mlx5_fpga_mem_read int mlx5_fpga_mem_read ( s#mlx5_fpga_device * , t#size_t , t#u64 , void * , e#mlx5_fpga_access_type ) 
mlx5_fpga_mem_write int mlx5_fpga_mem_write ( s#mlx5_fpga_device * , t#size_t , t#u64 , void * , e#mlx5_fpga_access_type ) 
mlx5_fpga_get_sbu_caps int mlx5_fpga_get_sbu_caps ( s#mlx5_fpga_device * , int , void * ) 

/* drivers/net/ethernet/mellanox/mlx5/core/fs_cmd.o */
s##posix_acl
s##vfsmount
s##device_private
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##sec_path
s##workqueue_struct
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##kmem_cache
s##xfrm_state
s##lwtunnel_state
s##uncached_list
s##rt6_info
s##dn_route
s##prefix_info
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
s##prot_inuse
s##ipv4_devconf
s##xt_table
s##inet_hashinfo
s##rt6_statistics
s##fib6_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##eventfd_ctx
s##mempolicy
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##mtd_info
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##platform_msi_priv_data
s##hotplug_slot
s##pci_vpd
s##pci_sriov
s##dma_pool
s##ib_uverbs_file
s##ib_umem_odp
s##uverbs_api_object
s##ib_pkey_cache
s##ib_gid_table
s##iw_cm_verbs
s##ib_mad_hdr
s##uverbs_attr_bundle
s##uverbs_object_tree_def
s##mlx5_mpfs
s##mlx5_lag
s##mlx5_vxlan
s##mlx5_fpga_device
s##ptp_clock
s##mlx5_ib_clock_info
s##mlx5_fw_tracer
e#mlx5_flow_namespace_type enum mlx5_flow_namespace_type { MLX5_FLOW_NAMESPACE_BYPASS , MLX5_FLOW_NAMESPACE_LAG , MLX5_FLOW_NAMESPACE_OFFLOADS , MLX5_FLOW_NAMESPACE_ETHTOOL , MLX5_FLOW_NAMESPACE_KERNEL , MLX5_FLOW_NAMESPACE_LEFTOVERS , MLX5_FLOW_NAMESPACE_ANCHOR , MLX5_FLOW_NAMESPACE_FDB , MLX5_FLOW_NAMESPACE_ESW_EGRESS , MLX5_FLOW_NAMESPACE_ESW_INGRESS , MLX5_FLOW_NAMESPACE_SNIFFER_RX , MLX5_FLOW_NAMESPACE_SNIFFER_TX , MLX5_FLOW_NAMESPACE_EGRESS , } 
mlx5_packet_reformat_alloc int mlx5_packet_reformat_alloc ( s#mlx5_core_dev * , int , t#size_t , void * , e#mlx5_flow_namespace_type , t#u32 * ) 
mlx5_packet_reformat_dealloc void mlx5_packet_reformat_dealloc ( s#mlx5_core_dev * , t#u32 ) 
mlx5_modify_header_alloc int mlx5_modify_header_alloc ( s#mlx5_core_dev * , t#u8 , t#u8 , void * , t#u32 * ) 
mlx5_modify_header_dealloc void mlx5_modify_header_dealloc ( s#mlx5_core_dev * , t#u32 ) 

/* drivers/net/ethernet/mellanox/mlx5/core/fs_core.o */
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##proc_dir_entry
s##uevent_sock
s##prot_inuse
s##ipv4_devconf
s##kmem_cache
s##xt_table
s##inet_hashinfo
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##lwtunnel_state
s##uncached_list
s##dn_route
s##workqueue_struct
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##nf_hook_entry
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##prefix_info
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##device_private
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##phy_device
s##sfp_bus
s##sec_path
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##xol_area
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
mlx5_create_lag_demux_flow_table s#mlx5_flow_table * mlx5_create_lag_demux_flow_table ( s#mlx5_flow_namespace * , int , t#u32 ) 
mlx5_create_auto_grouped_flow_table s#mlx5_flow_table * mlx5_create_auto_grouped_flow_table ( s#mlx5_flow_namespace * , int , int , int , t#u32 , t#u32 ) 
s#mlx5_flow_spec struct mlx5_flow_spec { t#u8 match_criteria_enable ; t#u32 match_criteria [ ( sizeof ( struct mlx5_ifc_fte_match_param_bits ) / 32 ) ] ; t#u32 match_value [ ( sizeof ( struct mlx5_ifc_fte_match_param_bits ) / 32 ) ] ; } 
s##ib_uverbs_file
s##ib_umem_odp
s##uverbs_api_object
s##ib_pkey_cache
s##ib_gid_table
s##iw_cm_verbs
s##ib_mad_hdr
s##uverbs_attr_bundle
s##uverbs_object_tree_def
mlx5_add_flow_rules s#mlx5_flow_handle * mlx5_add_flow_rules ( s#mlx5_flow_table * , s#mlx5_flow_spec * , s#mlx5_flow_act * , s#mlx5_flow_destination * , int ) 
mlx5_del_flow_rules void mlx5_del_flow_rules ( s#mlx5_flow_handle * ) 
mlx5_destroy_flow_table int mlx5_destroy_flow_table ( s#mlx5_flow_table * ) 
s##platform_msi_priv_data
s##hotplug_slot
s##pci_vpd
s##pci_sriov
s##dma_pool
s##mlx5_mpfs
s##mlx5_lag
s##mlx5_vxlan
s##mlx5_fpga_device
s##ptp_clock
s##mlx5_ib_clock_info
s##mlx5_fw_tracer
mlx5_get_fdb_sub_ns s#mlx5_flow_namespace * mlx5_get_fdb_sub_ns ( s#mlx5_core_dev * , int ) 
mlx5_get_flow_namespace s#mlx5_flow_namespace * mlx5_get_flow_namespace ( s#mlx5_core_dev * , e#mlx5_flow_namespace_type ) 
mlx5_fs_add_rx_underlay_qpn int mlx5_fs_add_rx_underlay_qpn ( s#mlx5_core_dev * , t#u32 ) 
mlx5_fs_remove_rx_underlay_qpn int mlx5_fs_remove_rx_underlay_qpn ( s#mlx5_core_dev * , t#u32 ) 

/* drivers/net/ethernet/mellanox/mlx5/core/fs_counters.o */
s##posix_acl
s##vfsmount
s##device_private
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##sec_path
s##workqueue_struct
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##kmem_cache
s##xfrm_state
s##lwtunnel_state
s##uncached_list
s##rt6_info
s##dn_route
s##prefix_info
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
s##prot_inuse
s##ipv4_devconf
s##xt_table
s##inet_hashinfo
s##rt6_statistics
s##fib6_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##eventfd_ctx
s##mempolicy
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##mtd_info
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##platform_msi_priv_data
s##hotplug_slot
s##pci_vpd
s##pci_sriov
s##dma_pool
s##ib_uverbs_file
s##ib_umem_odp
s##uverbs_api_object
s##ib_pkey_cache
s##ib_gid_table
s##iw_cm_verbs
s##ib_mad_hdr
s##uverbs_attr_bundle
s##uverbs_object_tree_def
s##mlx5_mpfs
s##mlx5_eswitch
s##mlx5_lag
s##mlx5_vxlan
s##mlx5_fpga_device
s##ptp_clock
s##mlx5_ib_clock_info
s##mlx5_fw_tracer
mlx5_fc_create s#mlx5_fc * mlx5_fc_create ( s#mlx5_core_dev * , t#bool ) 
mlx5_fc_id t#u32 mlx5_fc_id ( s#mlx5_fc * ) 
mlx5_fc_destroy void mlx5_fc_destroy ( s#mlx5_core_dev * , s#mlx5_fc * ) 
mlx5_fc_query int mlx5_fc_query ( s#mlx5_core_dev * , s#mlx5_fc * , t#u64 * , t#u64 * ) 

/* drivers/net/ethernet/mellanox/mlx5/core/fw.o */
s##posix_acl
s##vfsmount
s##device_private
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##sec_path
s##workqueue_struct
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##kmem_cache
s##xfrm_state
s##lwtunnel_state
s##uncached_list
s##rt6_info
s##dn_route
s##prefix_info
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
s##prot_inuse
s##ipv4_devconf
s##xt_table
s##inet_hashinfo
s##rt6_statistics
s##fib6_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##eventfd_ctx
s##mempolicy
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##mtd_info
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##platform_msi_priv_data
s##hotplug_slot
s##pci_vpd
s##pci_sriov
s##dma_pool
s##mlx5_flow_steering
s##mlx5_mpfs
s##mlx5_flow_table
s##mlx5_flow_group
s##mlx5_flow_handle
s##mlx5_fc
s##mlx5_lag
s##mlx5_vxlan
s##mlx5_fpga_device
s##ptp_clock
s##mlx5_ib_clock_info
s##mlx5_fw_tracer
mlx5_core_query_vendor_id int mlx5_core_query_vendor_id ( s#mlx5_core_dev * , t#u32 * ) 

/* drivers/net/ethernet/mellanox/mlx5/core/ipoib/ipoib.o */
s##posix_acl
s##vfsmount
s##device_private
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##kmem_cache
s##fs_pin
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##sec_path
s##workqueue_struct
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##xfrm_state
s##lwtunnel_state
s##uncached_list
s##rt6_info
s##dn_route
s##prefix_info
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
s##prot_inuse
s##ipv4_devconf
s##xt_table
s##inet_hashinfo
s##rt6_statistics
s##fib6_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##eventfd_ctx
s##mempolicy
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##mtd_info
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##platform_msi_priv_data
s##hotplug_slot
s##pci_vpd
s##pci_sriov
s##dma_pool
s##mlx5_flow_steering
s##mlx5_mpfs
s##mlx5_eswitch
s##mlx5_lag
s##mlx5_vxlan
s##mlx5_fpga_device
s##ptp_clock
s##mlx5_ib_clock_info
s##mlx5_fw_tracer
s##ib_uverbs_file
s##ib_umem_odp
s##uverbs_api_object
s##ib_pkey_cache
s##ib_gid_table
s##iw_cm_verbs
s##ib_mad_hdr
s##uverbs_attr_bundle
s##uverbs_object_tree_def
mlx5_rdma_rn_get_params int mlx5_rdma_rn_get_params ( s#mlx5_core_dev * , s#ib_device * , s#rdma_netdev_alloc_params * ) 

/* drivers/net/ethernet/mellanox/mlx5/core/lag.o */
s##posix_acl
s##vfsmount
s##device_private
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##sec_path
s##workqueue_struct
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##kmem_cache
s##xfrm_state
s##lwtunnel_state
s##uncached_list
s##rt6_info
s##dn_route
s##prefix_info
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
s##prot_inuse
s##ipv4_devconf
s##xt_table
s##inet_hashinfo
s##rt6_statistics
s##fib6_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##eventfd_ctx
s##mempolicy
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##mtd_info
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##platform_msi_priv_data
s##hotplug_slot
s##pci_vpd
s##pci_sriov
s##dma_pool
s##mlx5_flow_steering
s##mlx5_mpfs
s##mlx5_eswitch
s##mlx5_lag
s##mlx5_vxlan
s##mlx5_fpga_device
s##ptp_clock
s##mlx5_ib_clock_info
s##mlx5_fw_tracer
mlx5_cmd_create_vport_lag int mlx5_cmd_create_vport_lag ( s#mlx5_core_dev * ) 
mlx5_cmd_destroy_vport_lag int mlx5_cmd_destroy_vport_lag ( s#mlx5_core_dev * ) 
mlx5_lag_is_active t#bool mlx5_lag_is_active ( s#mlx5_core_dev * ) 
mlx5_lag_get_roce_netdev s#net_device * mlx5_lag_get_roce_netdev ( s#mlx5_core_dev * ) 
mlx5_lag_query_cong_counters int mlx5_lag_query_cong_counters ( s#mlx5_core_dev * , t#u64 * , int , t#size_t * ) 

/* drivers/net/ethernet/mellanox/mlx5/core/lib/gid.o */
s##posix_acl
s##vfsmount
s##device_private
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##sec_path
s##workqueue_struct
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##kmem_cache
s##xfrm_state
s##lwtunnel_state
s##uncached_list
s##rt6_info
s##dn_route
s##prefix_info
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
s##prot_inuse
s##ipv4_devconf
s##xt_table
s##inet_hashinfo
s##rt6_statistics
s##fib6_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##eventfd_ctx
s##mempolicy
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##mtd_info
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##platform_msi_priv_data
s##hotplug_slot
s##pci_vpd
s##pci_sriov
s##dma_pool
s##mlx5_flow_steering
s##mlx5_mpfs
s##mlx5_eswitch
s##mlx5_lag
s##mlx5_vxlan
s##mlx5_fpga_device
s##ptp_clock
s##mlx5_ib_clock_info
s##mlx5_fw_tracer
mlx5_core_reserved_gids_count unsigned int mlx5_core_reserved_gids_count ( s#mlx5_core_dev * ) 
mlx5_core_roce_gid_set int mlx5_core_roce_gid_set ( s#mlx5_core_dev * , unsigned int , t#u8 , t#u8 , const t#u8 * , const t#u8 * , t#bool , t#u16 , t#u8 ) 

/* drivers/net/ethernet/mellanox/mlx5/core/mad.o */
s##posix_acl
s##vfsmount
s##device_private
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##sec_path
s##workqueue_struct
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##kmem_cache
s##xfrm_state
s##lwtunnel_state
s##uncached_list
s##rt6_info
s##dn_route
s##prefix_info
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
s##prot_inuse
s##ipv4_devconf
s##xt_table
s##inet_hashinfo
s##rt6_statistics
s##fib6_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##eventfd_ctx
s##mempolicy
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##mtd_info
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##platform_msi_priv_data
s##hotplug_slot
s##pci_vpd
s##pci_sriov
s##dma_pool
s##mlx5_flow_steering
s##mlx5_mpfs
s##mlx5_eswitch
s##mlx5_lag
s##mlx5_vxlan
s##mlx5_fpga_device
s##ptp_clock
s##mlx5_ib_clock_info
s##mlx5_fw_tracer
mlx5_core_mad_ifc int mlx5_core_mad_ifc ( s#mlx5_core_dev * , const void * , void * , t#u16 , t#u8 ) 

/* drivers/net/ethernet/mellanox/mlx5/core/main.o */
s##posix_acl
s##vfsmount
s##device_private
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##sec_path
s##workqueue_struct
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##kmem_cache
s##xfrm_state
s##lwtunnel_state
s##uncached_list
s##rt6_info
s##dn_route
s##prefix_info
s#tls_crypto_info struct tls_crypto_info { t#__u16 version ; t#__u16 cipher_type ; } 
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##nf_hook_entry
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
s##prot_inuse
s##ipv4_devconf
s##xt_table
s##inet_hashinfo
s##rt6_statistics
s##fib6_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##eventfd_ctx
s##mempolicy
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##mtd_info
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##platform_msi_priv_data
s##hotplug_slot
s##pci_vpd
s##pci_sriov
s##dma_pool
s##ib_uverbs_file
s##ib_umem_odp
s##uverbs_api_object
s##ib_pkey_cache
s##ib_gid_table
s##iw_cm_verbs
s##ib_mad_hdr
s##uverbs_attr_bundle
s##uverbs_object_tree_def
s##mlx5_mpfs
s##mlx5_lag
s##mlx5_vxlan
s##mlx5_fpga_ipsec
s##mlx5_fpga_tls
s##ptp_clock
s##mlx5_ib_clock_info
mlx5_vector2eqn int mlx5_vector2eqn ( s#mlx5_core_dev * , int , int * , unsigned int * ) 

/* drivers/net/ethernet/mellanox/mlx5/core/mcg.o */
s##posix_acl
s##vfsmount
s##device_private
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##sec_path
s##workqueue_struct
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##kmem_cache
s##xfrm_state
s##lwtunnel_state
s##uncached_list
s##rt6_info
s##dn_route
s##prefix_info
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
s##prot_inuse
s##ipv4_devconf
s##xt_table
s##inet_hashinfo
s##rt6_statistics
s##fib6_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##eventfd_ctx
s##mempolicy
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##mtd_info
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##platform_msi_priv_data
s##hotplug_slot
s##pci_vpd
s##pci_sriov
s##dma_pool
s##mlx5_flow_steering
s##mlx5_mpfs
s##mlx5_eswitch
s##mlx5_lag
s##mlx5_vxlan
s##mlx5_fpga_device
s##ptp_clock
s##mlx5_ib_clock_info
s##mlx5_fw_tracer
mlx5_core_attach_mcg int mlx5_core_attach_mcg ( s#mlx5_core_dev * , u#ib_gid * , t#u32 ) 
mlx5_core_detach_mcg int mlx5_core_detach_mcg ( s#mlx5_core_dev * , u#ib_gid * , t#u32 ) 

/* drivers/net/ethernet/mellanox/mlx5/core/mr.o */
s##posix_acl
s##vfsmount
s##device_private
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##sec_path
s##workqueue_struct
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##kmem_cache
s##xfrm_state
s##lwtunnel_state
s##uncached_list
s##rt6_info
s##dn_route
s##prefix_info
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
s##prot_inuse
s##ipv4_devconf
s##xt_table
s##inet_hashinfo
s##rt6_statistics
s##fib6_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##eventfd_ctx
s##mempolicy
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##mtd_info
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##platform_msi_priv_data
s##hotplug_slot
s##pci_vpd
s##pci_sriov
s##dma_pool
s##mlx5_flow_steering
s##mlx5_mpfs
s##mlx5_eswitch
s##mlx5_lag
s##mlx5_vxlan
s##mlx5_fpga_device
s##ptp_clock
s##mlx5_ib_clock_info
s##mlx5_fw_tracer
mlx5_core_create_mkey_cb int mlx5_core_create_mkey_cb ( s#mlx5_core_dev * , s#mlx5_core_mkey * , t#u32 * , int , t#u32 * , int , t#mlx5_cmd_cbk_t , void * ) 
mlx5_core_create_mkey int mlx5_core_create_mkey ( s#mlx5_core_dev * , s#mlx5_core_mkey * , t#u32 * , int ) 
mlx5_core_destroy_mkey int mlx5_core_destroy_mkey ( s#mlx5_core_dev * , s#mlx5_core_mkey * ) 
mlx5_core_query_mkey int mlx5_core_query_mkey ( s#mlx5_core_dev * , s#mlx5_core_mkey * , t#u32 * , int ) 
mlx5_core_create_psv int mlx5_core_create_psv ( s#mlx5_core_dev * , t#u32 , int , t#u32 * ) 
mlx5_core_destroy_psv int mlx5_core_destroy_psv ( s#mlx5_core_dev * , int ) 

/* drivers/net/ethernet/mellanox/mlx5/core/pd.o */
s##posix_acl
s##vfsmount
s##device_private
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##sec_path
s##workqueue_struct
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##kmem_cache
s##xfrm_state
s##lwtunnel_state
s##uncached_list
s##rt6_info
s##dn_route
s##prefix_info
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
s##prot_inuse
s##ipv4_devconf
s##xt_table
s##inet_hashinfo
s##rt6_statistics
s##fib6_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##eventfd_ctx
s##mempolicy
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##mtd_info
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##platform_msi_priv_data
s##hotplug_slot
s##pci_vpd
s##pci_sriov
s##dma_pool
s##mlx5_flow_steering
s##mlx5_mpfs
s##mlx5_eswitch
s##mlx5_lag
s##mlx5_vxlan
s##mlx5_fpga_device
s##ptp_clock
s##mlx5_ib_clock_info
s##mlx5_fw_tracer
mlx5_core_alloc_pd int mlx5_core_alloc_pd ( s#mlx5_core_dev * , t#u32 * ) 
mlx5_core_dealloc_pd int mlx5_core_dealloc_pd ( s#mlx5_core_dev * , t#u32 ) 

/* drivers/net/ethernet/mellanox/mlx5/core/port.o */
s##posix_acl
s##vfsmount
s##device_private
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##sec_path
s##workqueue_struct
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##kmem_cache
s##xfrm_state
s##lwtunnel_state
s##uncached_list
s##rt6_info
s##dn_route
s##prefix_info
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
s##prot_inuse
s##ipv4_devconf
s##xt_table
s##inet_hashinfo
s##rt6_statistics
s##fib6_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##eventfd_ctx
s##mempolicy
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##mtd_info
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##platform_msi_priv_data
s##hotplug_slot
s##pci_vpd
s##pci_sriov
s##dma_pool
s##mlx5_flow_steering
s##mlx5_mpfs
s##mlx5_eswitch
s##mlx5_lag
s##mlx5_vxlan
s##mlx5_fpga_device
s##ptp_clock
s##mlx5_ib_clock_info
s##mlx5_fw_tracer
mlx5_core_access_reg int mlx5_core_access_reg ( s#mlx5_core_dev * , void * , int , void * , int , t#u16 , int , int ) 
mlx5_set_port_caps int mlx5_set_port_caps ( s#mlx5_core_dev * , t#u8 , t#u32 ) 
mlx5_query_port_ptys int mlx5_query_port_ptys ( s#mlx5_core_dev * , t#u32 * , int , int , t#u8 ) 
mlx5_query_port_proto_cap int mlx5_query_port_proto_cap ( s#mlx5_core_dev * , t#u32 * , int ) 
mlx5_query_port_proto_admin int mlx5_query_port_proto_admin ( s#mlx5_core_dev * , t#u32 * , int ) 
mlx5_query_port_link_width_oper int mlx5_query_port_link_width_oper ( s#mlx5_core_dev * , t#u8 * , t#u8 ) 
mlx5_query_port_eth_proto_oper int mlx5_query_port_eth_proto_oper ( s#mlx5_core_dev * , t#u32 * , t#u8 ) 
mlx5_query_port_ib_proto_oper int mlx5_query_port_ib_proto_oper ( s#mlx5_core_dev * , t#u8 * , t#u8 ) 
mlx5_set_port_ptys int mlx5_set_port_ptys ( s#mlx5_core_dev * , t#bool , t#u32 , int ) 
mlx5_toggle_port_link void mlx5_toggle_port_link ( s#mlx5_core_dev * ) 
e#mlx5_port_status enum mlx5_port_status { MLX5_PORT_UP = 1 , MLX5_PORT_DOWN = 2 , } 
mlx5_set_port_admin_status int mlx5_set_port_admin_status ( s#mlx5_core_dev * , e#mlx5_port_status ) 
mlx5_query_port_admin_status int mlx5_query_port_admin_status ( s#mlx5_core_dev * , e#mlx5_port_status * ) 
mlx5_set_port_mtu int mlx5_set_port_mtu ( s#mlx5_core_dev * , t#u16 , t#u8 ) 
mlx5_query_port_max_mtu void mlx5_query_port_max_mtu ( s#mlx5_core_dev * , t#u16 * , t#u8 ) 
mlx5_query_port_oper_mtu void mlx5_query_port_oper_mtu ( s#mlx5_core_dev * , t#u16 * , t#u8 ) 
mlx5_query_module_eeprom int mlx5_query_module_eeprom ( s#mlx5_core_dev * , t#u16 , t#u16 , t#u8 * ) 
mlx5_query_port_vl_hw_cap int mlx5_query_port_vl_hw_cap ( s#mlx5_core_dev * , t#u8 * , t#u8 ) 
mlx5_core_query_ib_ppcnt int mlx5_core_query_ib_ppcnt ( s#mlx5_core_dev * , t#u8 , void * , t#size_t ) 
mlx5_set_port_pause int mlx5_set_port_pause ( s#mlx5_core_dev * , t#u32 , t#u32 ) 
mlx5_query_port_pause int mlx5_query_port_pause ( s#mlx5_core_dev * , t#u32 * , t#u32 * ) 
mlx5_set_port_pfc int mlx5_set_port_pfc ( s#mlx5_core_dev * , t#u8 , t#u8 ) 
mlx5_query_port_pfc int mlx5_query_port_pfc ( s#mlx5_core_dev * , t#u8 * , t#u8 * ) 
mlx5_query_port_autoneg void mlx5_query_port_autoneg ( s#mlx5_core_dev * , int , t#u8 * , t#u8 * , t#u8 * ) 
mlx5_set_port_prio_tc int mlx5_set_port_prio_tc ( s#mlx5_core_dev * , t#u8 * ) 
mlx5_query_port_prio_tc int mlx5_query_port_prio_tc ( s#mlx5_core_dev * , t#u8 , t#u8 * ) 
mlx5_set_port_tc_group int mlx5_set_port_tc_group ( s#mlx5_core_dev * , t#u8 * ) 
mlx5_query_port_tc_group int mlx5_query_port_tc_group ( s#mlx5_core_dev * , t#u8 , t#u8 * ) 
mlx5_set_port_tc_bw_alloc int mlx5_set_port_tc_bw_alloc ( s#mlx5_core_dev * , t#u8 * ) 
mlx5_query_port_tc_bw_alloc int mlx5_query_port_tc_bw_alloc ( s#mlx5_core_dev * , t#u8 , t#u8 * ) 
mlx5_modify_port_ets_rate_limit int mlx5_modify_port_ets_rate_limit ( s#mlx5_core_dev * , t#u8 * , t#u8 * ) 
mlx5_query_port_ets_rate_limit int mlx5_query_port_ets_rate_limit ( s#mlx5_core_dev * , t#u8 * , t#u8 * ) 
mlx5_set_port_wol int mlx5_set_port_wol ( s#mlx5_core_dev * , t#u8 ) 
mlx5_query_port_wol int mlx5_query_port_wol ( s#mlx5_core_dev * , t#u8 * ) 

/* drivers/net/ethernet/mellanox/mlx5/core/qp.o */
s##posix_acl
s##vfsmount
s##device_private
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##sec_path
s##workqueue_struct
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##kmem_cache
s##xfrm_state
s##lwtunnel_state
s##uncached_list
s##rt6_info
s##dn_route
s##prefix_info
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
s##prot_inuse
s##ipv4_devconf
s##xt_table
s##inet_hashinfo
s##rt6_statistics
s##fib6_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##eventfd_ctx
s##mempolicy
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##mtd_info
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##platform_msi_priv_data
s##hotplug_slot
s##pci_vpd
s##pci_sriov
s##dma_pool
s##mlx5_flow_steering
s##mlx5_mpfs
s##mlx5_eswitch
s##mlx5_lag
s##mlx5_vxlan
s##mlx5_fpga_device
s##ptp_clock
s##mlx5_ib_clock_info
s##mlx5_fw_tracer
s#mlx5_core_dct struct mlx5_core_dct { s#mlx5_core_qp mqp ; s#completion drained ; } 
mlx5_core_create_dct int mlx5_core_create_dct ( s#mlx5_core_dev * , s#mlx5_core_dct * , t#u32 * , int ) 
mlx5_core_create_qp int mlx5_core_create_qp ( s#mlx5_core_dev * , s#mlx5_core_qp * , t#u32 * , int ) 
mlx5_core_destroy_dct int mlx5_core_destroy_dct ( s#mlx5_core_dev * , s#mlx5_core_dct * ) 
mlx5_core_destroy_qp int mlx5_core_destroy_qp ( s#mlx5_core_dev * , s#mlx5_core_qp * ) 
mlx5_core_set_delay_drop int mlx5_core_set_delay_drop ( s#mlx5_core_dev * , t#u32 ) 
mlx5_core_qp_modify int mlx5_core_qp_modify ( s#mlx5_core_dev * , t#u16 , t#u32 , void * , s#mlx5_core_qp * ) 
mlx5_core_qp_query int mlx5_core_qp_query ( s#mlx5_core_dev * , s#mlx5_core_qp * , t#u32 * , int ) 
mlx5_core_dct_query int mlx5_core_dct_query ( s#mlx5_core_dev * , s#mlx5_core_dct * , t#u32 * , int ) 
mlx5_core_xrcd_alloc int mlx5_core_xrcd_alloc ( s#mlx5_core_dev * , t#u32 * ) 
mlx5_core_xrcd_dealloc int mlx5_core_xrcd_dealloc ( s#mlx5_core_dev * , t#u32 ) 
mlx5_core_create_rq_tracked int mlx5_core_create_rq_tracked ( s#mlx5_core_dev * , t#u32 * , int , s#mlx5_core_qp * ) 
mlx5_core_destroy_rq_tracked void mlx5_core_destroy_rq_tracked ( s#mlx5_core_dev * , s#mlx5_core_qp * ) 
mlx5_core_create_sq_tracked int mlx5_core_create_sq_tracked ( s#mlx5_core_dev * , t#u32 * , int , s#mlx5_core_qp * ) 
mlx5_core_destroy_sq_tracked void mlx5_core_destroy_sq_tracked ( s#mlx5_core_dev * , s#mlx5_core_qp * ) 
mlx5_core_alloc_q_counter int mlx5_core_alloc_q_counter ( s#mlx5_core_dev * , t#u16 * ) 
mlx5_core_dealloc_q_counter int mlx5_core_dealloc_q_counter ( s#mlx5_core_dev * , t#u16 ) 
mlx5_core_query_q_counter int mlx5_core_query_q_counter ( s#mlx5_core_dev * , t#u16 , int , void * , int ) 

/* drivers/net/ethernet/mellanox/mlx5/core/rl.o */
s##posix_acl
s##vfsmount
s##device_private
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##sec_path
s##workqueue_struct
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##kmem_cache
s##xfrm_state
s##lwtunnel_state
s##uncached_list
s##rt6_info
s##dn_route
s##prefix_info
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
s##prot_inuse
s##ipv4_devconf
s##xt_table
s##inet_hashinfo
s##rt6_statistics
s##fib6_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##eventfd_ctx
s##mempolicy
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##mtd_info
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##platform_msi_priv_data
s##hotplug_slot
s##pci_vpd
s##pci_sriov
s##dma_pool
s##mlx5_flow_steering
s##mlx5_mpfs
s##mlx5_eswitch
s##mlx5_lag
s##mlx5_vxlan
s##mlx5_fpga_device
s##ptp_clock
s##mlx5_ib_clock_info
s##mlx5_fw_tracer
mlx5_rl_is_in_range t#bool mlx5_rl_is_in_range ( s#mlx5_core_dev * , t#u32 ) 
mlx5_rl_are_equal t#bool mlx5_rl_are_equal ( s#mlx5_rate_limit * , s#mlx5_rate_limit * ) 
mlx5_rl_add_rate int mlx5_rl_add_rate ( s#mlx5_core_dev * , t#u16 * , s#mlx5_rate_limit * ) 
mlx5_rl_remove_rate void mlx5_rl_remove_rate ( s#mlx5_core_dev * , s#mlx5_rate_limit * ) 

/* drivers/net/ethernet/mellanox/mlx5/core/srq.o */
s#mlx5_core_srq struct mlx5_core_srq { s#mlx5_core_rsc_common common ; t#u32 srqn ; int max ; t#size_t max_gs ; t#size_t max_avail_gather ; int wqe_shift ; void ( * event ) ( s#mlx5_core_srq * , e#mlx5_event ) ; t#atomic_t refcount ; s#completion free ; t#u16 uid ; } 
s##posix_acl
s##vfsmount
s##device_private
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##sec_path
s##workqueue_struct
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##kmem_cache
s##xfrm_state
s##lwtunnel_state
s##uncached_list
s##rt6_info
s##dn_route
s##prefix_info
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
s##prot_inuse
s##ipv4_devconf
s##xt_table
s##inet_hashinfo
s##rt6_statistics
s##fib6_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##eventfd_ctx
s##mempolicy
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##mtd_info
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##platform_msi_priv_data
s##hotplug_slot
s##pci_vpd
s##pci_sriov
s##dma_pool
s##mlx5_flow_steering
s##mlx5_mpfs
s##mlx5_eswitch
s##mlx5_lag
s##mlx5_vxlan
s##mlx5_fpga_device
s##ptp_clock
s##mlx5_ib_clock_info
s##mlx5_fw_tracer
mlx5_core_get_srq s#mlx5_core_srq * mlx5_core_get_srq ( s#mlx5_core_dev * , t#u32 ) 
s#mlx5_srq_attr struct mlx5_srq_attr { t#u32 type ; t#u32 flags ; t#u32 log_size ; t#u32 wqe_shift ; t#u32 log_page_size ; t#u32 wqe_cnt ; t#u32 srqn ; t#u32 xrcd ; t#u32 page_offset ; t#u32 cqn ; t#u32 pd ; t#u32 lwm ; t#u32 user_index ; t#u64 db_record ; t#__be64 * pas ; t#u32 tm_log_list_size ; t#u32 tm_next_tag ; t#u32 tm_hw_phase_cnt ; t#u32 tm_sw_phase_cnt ; t#u16 uid ; } 
mlx5_core_create_srq int mlx5_core_create_srq ( s#mlx5_core_dev * , s#mlx5_core_srq * , s#mlx5_srq_attr * ) 
mlx5_core_destroy_srq int mlx5_core_destroy_srq ( s#mlx5_core_dev * , s#mlx5_core_srq * ) 
mlx5_core_query_srq int mlx5_core_query_srq ( s#mlx5_core_dev * , s#mlx5_core_srq * , s#mlx5_srq_attr * ) 
mlx5_core_arm_srq int mlx5_core_arm_srq ( s#mlx5_core_dev * , s#mlx5_core_srq * , t#u16 , int ) 

/* drivers/net/ethernet/mellanox/mlx5/core/transobj.o */
s##posix_acl
s##vfsmount
s##device_private
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##sec_path
s##workqueue_struct
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##kmem_cache
s##xfrm_state
s##lwtunnel_state
s##uncached_list
s##rt6_info
s##dn_route
s##prefix_info
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
s##prot_inuse
s##ipv4_devconf
s##xt_table
s##inet_hashinfo
s##rt6_statistics
s##fib6_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##eventfd_ctx
s##mempolicy
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##mtd_info
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##platform_msi_priv_data
s##hotplug_slot
s##pci_vpd
s##pci_sriov
s##dma_pool
s##mlx5_flow_steering
s##mlx5_mpfs
s##mlx5_eswitch
s##mlx5_lag
s##mlx5_vxlan
s##mlx5_fpga_device
s##ptp_clock
s##mlx5_ib_clock_info
s##mlx5_fw_tracer
mlx5_core_alloc_transport_domain int mlx5_core_alloc_transport_domain ( s#mlx5_core_dev * , t#u32 * ) 
mlx5_core_dealloc_transport_domain void mlx5_core_dealloc_transport_domain ( s#mlx5_core_dev * , t#u32 ) 
mlx5_core_create_rq int mlx5_core_create_rq ( s#mlx5_core_dev * , t#u32 * , int , t#u32 * ) 
mlx5_core_modify_rq int mlx5_core_modify_rq ( s#mlx5_core_dev * , t#u32 , t#u32 * , int ) 
mlx5_core_destroy_rq void mlx5_core_destroy_rq ( s#mlx5_core_dev * , t#u32 ) 
mlx5_core_query_rq int mlx5_core_query_rq ( s#mlx5_core_dev * , t#u32 , t#u32 * ) 
mlx5_core_modify_sq int mlx5_core_modify_sq ( s#mlx5_core_dev * , t#u32 , t#u32 * , int ) 
mlx5_core_query_sq int mlx5_core_query_sq ( s#mlx5_core_dev * , t#u32 , t#u32 * ) 
mlx5_core_query_sq_state int mlx5_core_query_sq_state ( s#mlx5_core_dev * , t#u32 , t#u8 * ) 
mlx5_core_create_tir int mlx5_core_create_tir ( s#mlx5_core_dev * , t#u32 * , int , t#u32 * ) 
mlx5_core_destroy_tir void mlx5_core_destroy_tir ( s#mlx5_core_dev * , t#u32 ) 
mlx5_core_create_tis int mlx5_core_create_tis ( s#mlx5_core_dev * , t#u32 * , int , t#u32 * ) 
mlx5_core_modify_tis int mlx5_core_modify_tis ( s#mlx5_core_dev * , t#u32 , t#u32 * , int ) 
mlx5_core_destroy_tis void mlx5_core_destroy_tis ( s#mlx5_core_dev * , t#u32 ) 
mlx5_core_create_rqt int mlx5_core_create_rqt ( s#mlx5_core_dev * , t#u32 * , int , t#u32 * ) 
mlx5_core_destroy_rqt void mlx5_core_destroy_rqt ( s#mlx5_core_dev * , t#u32 ) 

/* drivers/net/ethernet/mellanox/mlx5/core/uar.o */
s##posix_acl
s##vfsmount
s##device_private
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##sec_path
s##workqueue_struct
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##kmem_cache
s##xfrm_state
s##lwtunnel_state
s##uncached_list
s##rt6_info
s##dn_route
s##prefix_info
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
s##prot_inuse
s##ipv4_devconf
s##xt_table
s##inet_hashinfo
s##rt6_statistics
s##fib6_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##eventfd_ctx
s##mempolicy
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##mtd_info
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##platform_msi_priv_data
s##hotplug_slot
s##pci_vpd
s##pci_sriov
s##dma_pool
s##mlx5_flow_steering
s##mlx5_mpfs
s##mlx5_eswitch
s##mlx5_lag
s##mlx5_vxlan
s##mlx5_fpga_device
s##ptp_clock
s##mlx5_ib_clock_info
s##mlx5_fw_tracer
mlx5_cmd_alloc_uar int mlx5_cmd_alloc_uar ( s#mlx5_core_dev * , t#u32 * ) 
mlx5_cmd_free_uar int mlx5_cmd_free_uar ( s#mlx5_core_dev * , t#u32 ) 
mlx5_get_uars_page s#mlx5_uars_page * mlx5_get_uars_page ( s#mlx5_core_dev * ) 
mlx5_put_uars_page void mlx5_put_uars_page ( s#mlx5_core_dev * , s#mlx5_uars_page * ) 
mlx5_alloc_bfreg int mlx5_alloc_bfreg ( s#mlx5_core_dev * , s#mlx5_sq_bfreg * , t#bool , t#bool ) 
mlx5_free_bfreg void mlx5_free_bfreg ( s#mlx5_core_dev * , s#mlx5_sq_bfreg * ) 

/* drivers/net/ethernet/mellanox/mlx5/core/vport.o */
s##posix_acl
s##vfsmount
s##device_private
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##sec_path
s##workqueue_struct
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##kmem_cache
s##xfrm_state
s##lwtunnel_state
s##uncached_list
s##rt6_info
s##dn_route
s##prefix_info
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
s##prot_inuse
s##ipv4_devconf
s##xt_table
s##inet_hashinfo
s##rt6_statistics
s##fib6_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##eventfd_ctx
s##mempolicy
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##mtd_info
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##platform_msi_priv_data
s##hotplug_slot
s##pci_vpd
s##pci_sriov
s##dma_pool
s##mlx5_flow_steering
s##mlx5_mpfs
s##mlx5_eswitch
s##mlx5_lag
s##mlx5_vxlan
s##mlx5_fpga_device
s##ptp_clock
s##mlx5_ib_clock_info
s##mlx5_fw_tracer
mlx5_query_nic_vport_min_inline int mlx5_query_nic_vport_min_inline ( s#mlx5_core_dev * , t#u16 , t#u8 * ) 
mlx5_query_min_inline void mlx5_query_min_inline ( s#mlx5_core_dev * , t#u8 * ) 
mlx5_query_nic_vport_mac_address int mlx5_query_nic_vport_mac_address ( s#mlx5_core_dev * , t#u16 , t#u8 * ) 
mlx5_modify_nic_vport_mac_address int mlx5_modify_nic_vport_mac_address ( s#mlx5_core_dev * , t#u16 , t#u8 * ) 
mlx5_query_nic_vport_mtu int mlx5_query_nic_vport_mtu ( s#mlx5_core_dev * , t#u16 * ) 
mlx5_modify_nic_vport_mtu int mlx5_modify_nic_vport_mtu ( s#mlx5_core_dev * , t#u16 ) 
e#mlx5_list_type enum mlx5_list_type { MLX5_NVPRT_LIST_TYPE_UC = 0x0 , MLX5_NVPRT_LIST_TYPE_MC = 0x1 , MLX5_NVPRT_LIST_TYPE_VLAN = 0x2 , } 
mlx5_query_nic_vport_mac_list int mlx5_query_nic_vport_mac_list ( s#mlx5_core_dev * , t#u32 , e#mlx5_list_type , t#u8 [ ] [ 6 ] , int * ) 
mlx5_modify_nic_vport_mac_list int mlx5_modify_nic_vport_mac_list ( s#mlx5_core_dev * , e#mlx5_list_type , t#u8 [ ] [ 6 ] , int ) 
mlx5_query_nic_vport_vlans int mlx5_query_nic_vport_vlans ( s#mlx5_core_dev * , t#u32 , t#u16 [ ] , int * ) 
mlx5_modify_nic_vport_vlans int mlx5_modify_nic_vport_vlans ( s#mlx5_core_dev * , t#u16 [ ] , int ) 
mlx5_query_nic_vport_system_image_guid int mlx5_query_nic_vport_system_image_guid ( s#mlx5_core_dev * , t#u64 * ) 
mlx5_query_nic_vport_node_guid int mlx5_query_nic_vport_node_guid ( s#mlx5_core_dev * , t#u64 * ) 
mlx5_query_nic_vport_qkey_viol_cntr int mlx5_query_nic_vport_qkey_viol_cntr ( s#mlx5_core_dev * , t#u16 * ) 
mlx5_query_hca_vport_gid int mlx5_query_hca_vport_gid ( s#mlx5_core_dev * , t#u8 , t#u8 , t#u16 , t#u16 , u#ib_gid * ) 
mlx5_query_hca_vport_pkey int mlx5_query_hca_vport_pkey ( s#mlx5_core_dev * , t#u8 , t#u8 , t#u16 , t#u16 , t#u16 * ) 
e#phy_port_state enum phy_port_state { MLX5_AAA_111 } 
s#mlx5_hca_vport_context struct mlx5_hca_vport_context { t#u32 field_select ; t#bool sm_virt_aware ; t#bool has_smi ; t#bool has_raw ; e#port_state_policy policy ; e#phy_port_state phys_state ; e#ib_port_state vport_state ; t#u8 port_physical_state ; t#u64 sys_image_guid ; t#u64 port_guid ; t#u64 node_guid ; t#u32 cap_mask1 ; t#u32 cap_mask1_perm ; t#u32 cap_mask2 ; t#u32 cap_mask2_perm ; t#u16 lid ; t#u8 init_type_reply ; t#u8 lmc ; t#u8 subnet_timeout ; t#u16 sm_lid ; t#u8 sm_sl ; t#u16 qkey_violation_counter ; t#u16 pkey_violation_counter ; t#bool grh_required ; } 
mlx5_query_hca_vport_context int mlx5_query_hca_vport_context ( s#mlx5_core_dev * , t#u8 , t#u8 , t#u16 , s#mlx5_hca_vport_context * ) 
mlx5_query_hca_vport_system_image_guid int mlx5_query_hca_vport_system_image_guid ( s#mlx5_core_dev * , t#u64 * ) 
mlx5_query_hca_vport_node_guid int mlx5_query_hca_vport_node_guid ( s#mlx5_core_dev * , t#u64 * ) 
mlx5_query_nic_vport_promisc int mlx5_query_nic_vport_promisc ( s#mlx5_core_dev * , t#u32 , int * , int * , int * ) 
mlx5_modify_nic_vport_promisc int mlx5_modify_nic_vport_promisc ( s#mlx5_core_dev * , int , int , int ) 
mlx5_nic_vport_update_local_lb int mlx5_nic_vport_update_local_lb ( s#mlx5_core_dev * , t#bool ) 
mlx5_nic_vport_query_local_lb int mlx5_nic_vport_query_local_lb ( s#mlx5_core_dev * , t#bool * ) 
mlx5_nic_vport_enable_roce int mlx5_nic_vport_enable_roce ( s#mlx5_core_dev * ) 
mlx5_nic_vport_disable_roce int mlx5_nic_vport_disable_roce ( s#mlx5_core_dev * ) 
mlx5_core_query_vport_counter int mlx5_core_query_vport_counter ( s#mlx5_core_dev * , t#u8 , int , t#u8 , void * , t#size_t ) 
mlx5_core_modify_hca_vport_context int mlx5_core_modify_hca_vport_context ( s#mlx5_core_dev * , t#u8 , t#u8 , int , s#mlx5_hca_vport_context * ) 
mlx5_nic_vport_affiliate_multiport int mlx5_nic_vport_affiliate_multiport ( s#mlx5_core_dev * , s#mlx5_core_dev * ) 
mlx5_nic_vport_unaffiliate_multiport int mlx5_nic_vport_unaffiliate_multiport ( s#mlx5_core_dev * ) 
mlx5_query_nic_system_image_guid t#u64 mlx5_query_nic_system_image_guid ( s#mlx5_core_dev * ) 

/* drivers/net/ethernet/mellanox/mlxfw/mlxfw_fsm.o */
e#mlxfw_fsm_state enum mlxfw_fsm_state { MLXFW_FSM_STATE_IDLE , MLXFW_FSM_STATE_LOCKED , MLXFW_FSM_STATE_INITIALIZE , MLXFW_FSM_STATE_DOWNLOAD , MLXFW_FSM_STATE_VERIFY , MLXFW_FSM_STATE_APPLY , MLXFW_FSM_STATE_ACTIVATE , } 
e#mlxfw_fsm_state_err enum mlxfw_fsm_state_err { MLXFW_FSM_STATE_ERR_OK , MLXFW_FSM_STATE_ERR_ERROR , MLXFW_FSM_STATE_ERR_REJECTED_DIGEST_ERR , MLXFW_FSM_STATE_ERR_REJECTED_NOT_APPLICABLE , MLXFW_FSM_STATE_ERR_REJECTED_UNKNOWN_KEY , MLXFW_FSM_STATE_ERR_REJECTED_AUTH_FAILED , MLXFW_FSM_STATE_ERR_REJECTED_UNSIGNED , MLXFW_FSM_STATE_ERR_REJECTED_KEY_NOT_APPLICABLE , MLXFW_FSM_STATE_ERR_REJECTED_BAD_FORMAT , MLXFW_FSM_STATE_ERR_BLOCKED_PENDING_RESET , MLXFW_FSM_STATE_ERR_MAX , } 
s#mlxfw_dev_ops struct mlxfw_dev_ops { int ( * component_query ) ( s#mlxfw_dev * , t#u16 , t#u32 * , t#u8 * , t#u16 * ) ; int ( * fsm_lock ) ( s#mlxfw_dev * , t#u32 * ) ; int ( * fsm_component_update ) ( s#mlxfw_dev * , t#u32 , t#u16 , t#u32 ) ; int ( * fsm_block_download ) ( s#mlxfw_dev * , t#u32 , t#u8 * , t#u16 , t#u32 ) ; int ( * fsm_component_verify ) ( s#mlxfw_dev * , t#u32 , t#u16 ) ; int ( * fsm_activate ) ( s#mlxfw_dev * , t#u32 ) ; int ( * fsm_query_state ) ( s#mlxfw_dev * , t#u32 , e#mlxfw_fsm_state * , e#mlxfw_fsm_state_err * ) ; void ( * fsm_cancel ) ( s#mlxfw_dev * , t#u32 ) ; void ( * fsm_release ) ( s#mlxfw_dev * , t#u32 ) ; } 
s#mlxfw_dev struct mlxfw_dev { const s#mlxfw_dev_ops * ops ; const char * psid ; t#u16 psid_size ; } 
s##posix_acl
s##vfsmount
s##sock
s##seq_file
s##bio_vec
s##pipe_inode_info
s##poll_table_struct
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##mem_cgroup
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##device
s##kmem_cache
mlxfw_firmware_flash int mlxfw_firmware_flash ( s#mlxfw_dev * , const s#firmware * ) 

/* drivers/net/ethernet/mellanox/mlxsw/core.o */
s##mlxsw_core_port
mlxsw_core_port_driver_priv void * mlxsw_core_port_driver_priv ( s#mlxsw_core_port * ) 
s##mlxsw_core
mlxsw_core_max_ports unsigned int mlxsw_core_max_ports ( const s#mlxsw_core * ) 
mlxsw_core_driver_priv void * mlxsw_core_driver_priv ( s#mlxsw_core * ) 
s##device_private
s##sock
s##vfsmount
s##posix_acl
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##sec_path
s##neigh_parms
s##neighbour
s##udp_tunnel_info
s##bpf_prog
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##l3mdev_ops
s##ndisc_ops
s##xfrm_state
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##mini_Qdisc
s##Qdisc
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##rtnl_link_ops
s##phy_device
s##sfp_bus
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##kmem_cache
s##xt_table
s##inet_hashinfo
s##fib_notifier_ops
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##workqueue_struct
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##bpf_prog_array
s##cgroup_taskset
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s#mlxsw_fw_rev struct mlxsw_fw_rev { t#u16 major ; t#u16 minor ; t#u16 subminor ; t#u16 can_reset_minor ; } 
s#mlxsw_bus_info struct mlxsw_bus_info { const char * device_kind ; const char * device_name ; s#device * dev ; s#mlxsw_fw_rev fw_rev ; t#u8 vsd [ 208 ] ; t#u8 psid [ 16 ] ; } 
s#mlxsw_tx_info struct mlxsw_tx_info { t#u8 local_port ; t#bool is_emad ; } 
s#mlxsw_swid_config struct mlxsw_swid_config { t#u8 used_type : 1 , used_properties : 1 ; t#u8 type ; t#u8 properties ; } 
s#mlxsw_config_profile struct mlxsw_config_profile { t#u16 used_max_vepa_channels : 1 , used_max_mid : 1 , used_max_pgt : 1 , used_max_system_port : 1 , used_max_vlan_groups : 1 , used_max_regions : 1 , used_flood_tables : 1 , used_flood_mode : 1 , used_max_ib_mc : 1 , used_max_pkey : 1 , used_ar_sec : 1 , used_adaptive_routing_group_cap : 1 , used_kvd_sizes : 1 ; t#u8 max_vepa_channels ; t#u16 max_mid ; t#u16 max_pgt ; t#u16 max_system_port ; t#u16 max_vlan_groups ; t#u16 max_regions ; t#u8 max_flood_tables ; t#u8 max_vid_flood_tables ; t#u8 flood_mode ; t#u8 max_fid_offset_flood_tables ; t#u16 fid_offset_flood_table_size ; t#u8 max_fid_flood_tables ; t#u16 fid_flood_table_size ; t#u16 max_ib_mc ; t#u16 max_pkey ; t#u8 ar_sec ; t#u16 adaptive_routing_group_cap ; t#u8 arn ; t#u32 kvd_linear_size ; t#u8 kvd_hash_single_parts ; t#u8 kvd_hash_double_parts ; s#mlxsw_swid_config swid_config [ 8 ] ; } 
s#mlxsw_driver struct mlxsw_driver { s#list_head list ; const char * kind ; t#size_t priv_size ; int ( * init ) ( s#mlxsw_core * , const s#mlxsw_bus_info * ) ; void ( * fini ) ( s#mlxsw_core * ) ; int ( * basic_trap_groups_set ) ( s#mlxsw_core * ) ; int ( * port_type_set ) ( s#mlxsw_core * , t#u8 , e#devlink_port_type ) ; int ( * port_split ) ( s#mlxsw_core * , t#u8 , unsigned int , s#netlink_ext_ack * ) ; int ( * port_unsplit ) ( s#mlxsw_core * , t#u8 , s#netlink_ext_ack * ) ; int ( * sb_pool_get ) ( s#mlxsw_core * , unsigned int , t#u16 , s#devlink_sb_pool_info * ) ; int ( * sb_pool_set ) ( s#mlxsw_core * , unsigned int , t#u16 , t#u32 , e#devlink_sb_threshold_type ) ; int ( * sb_port_pool_get ) ( s#mlxsw_core_port * , unsigned int , t#u16 , t#u32 * ) ; int ( * sb_port_pool_set ) ( s#mlxsw_core_port * , unsigned int , t#u16 , t#u32 ) ; int ( * sb_tc_pool_bind_get ) ( s#mlxsw_core_port * , unsigned int , t#u16 , e#devlink_sb_pool_type , t#u16 * , t#u32 * ) ; int ( * sb_tc_pool_bind_set ) ( s#mlxsw_core_port * , unsigned int , t#u16 , e#devlink_sb_pool_type , t#u16 , t#u32 ) ; int ( * sb_occ_snapshot ) ( s#mlxsw_core * , unsigned int ) ; int ( * sb_occ_max_clear ) ( s#mlxsw_core * , unsigned int ) ; int ( * sb_occ_port_pool_get ) ( s#mlxsw_core_port * , unsigned int , t#u16 , t#u32 * , t#u32 * ) ; int ( * sb_occ_tc_port_bind_get ) ( s#mlxsw_core_port * , unsigned int , t#u16 , e#devlink_sb_pool_type , t#u32 * , t#u32 * ) ; void ( * txhdr_construct ) ( s#sk_buff * , const s#mlxsw_tx_info * ) ; int ( * resources_register ) ( s#mlxsw_core * ) ; int ( * kvd_sizes_get ) ( s#mlxsw_core * , const s#mlxsw_config_profile * , t#u64 * , t#u64 * , t#u64 * ) ; t#u8 txhdr_len ; const s#mlxsw_config_profile * profile ; t#bool res_query_enabled ; } 
mlxsw_core_driver_register int mlxsw_core_driver_register ( s#mlxsw_driver * ) 
mlxsw_core_driver_unregister void mlxsw_core_driver_unregister ( s#mlxsw_driver * ) 
E#__MLXSW_RES_ID_MAX 43 
s#mlxsw_res struct mlxsw_res { t#bool valid [ E#__MLXSW_RES_ID_MAX ] ; t#u64 values [ E#__MLXSW_RES_ID_MAX ] ; } 
s#mlxsw_bus struct mlxsw_bus { const char * kind ; int ( * init ) ( void * , s#mlxsw_core * , const s#mlxsw_config_profile * , s#mlxsw_res * ) ; void ( * fini ) ( void * ) ; t#bool ( * skb_transmit_busy ) ( void * , const s#mlxsw_tx_info * ) ; int ( * skb_transmit ) ( void * , s#sk_buff * , const s#mlxsw_tx_info * ) ; int ( * cmd_exec ) ( void * , t#u16 , t#u8 , t#u32 , t#bool , char * , t#size_t , char * , t#size_t , t#u8 * ) ; t#u8 features ; } 
mlxsw_core_bus_device_register int mlxsw_core_bus_device_register ( const s#mlxsw_bus_info * , const s#mlxsw_bus * , void * , t#bool , s#devlink * ) 
mlxsw_core_bus_device_unregister void mlxsw_core_bus_device_unregister ( s#mlxsw_core * , t#bool ) 
mlxsw_core_skb_transmit_busy t#bool mlxsw_core_skb_transmit_busy ( s#mlxsw_core * , const s#mlxsw_tx_info * ) 
mlxsw_core_skb_transmit int mlxsw_core_skb_transmit ( s#mlxsw_core * , s#sk_buff * , const s#mlxsw_tx_info * ) 
e#mlxsw_reg_hpkt_action enum mlxsw_reg_hpkt_action { MLXSW_REG_HPKT_ACTION_FORWARD , MLXSW_REG_HPKT_ACTION_TRAP_TO_CPU , MLXSW_REG_HPKT_ACTION_MIRROR_TO_CPU , MLXSW_REG_HPKT_ACTION_DISCARD , MLXSW_REG_HPKT_ACTION_SOFT_DISCARD , MLXSW_REG_HPKT_ACTION_TRAP_AND_SOFT_DISCARD , } 
s#mlxsw_rx_listener struct mlxsw_rx_listener { void ( * func ) ( s#sk_buff * , t#u8 , void * ) ; t#u8 local_port ; t#u16 trap_id ; e#mlxsw_reg_hpkt_action action ; } 
mlxsw_core_rx_listener_register int mlxsw_core_rx_listener_register ( s#mlxsw_core * , const s#mlxsw_rx_listener * , void * ) 
mlxsw_core_rx_listener_unregister void mlxsw_core_rx_listener_unregister ( s#mlxsw_core * , const s#mlxsw_rx_listener * , void * ) 
s#mlxsw_reg_info struct mlxsw_reg_info { t#u16 id ; t#u16 len ; const char * name ; } 
e#mlxsw_event_trap_id enum mlxsw_event_trap_id { MLXSW_TRAP_ID_PUDE = 0x8 , } 
s#mlxsw_event_listener struct mlxsw_event_listener { void ( * func ) ( const s#mlxsw_reg_info * , char * , void * ) ; e#mlxsw_event_trap_id trap_id ; } 
mlxsw_core_event_listener_register int mlxsw_core_event_listener_register ( s#mlxsw_core * , const s#mlxsw_event_listener * , void * ) 
mlxsw_core_event_listener_unregister void mlxsw_core_event_listener_unregister ( s#mlxsw_core * , const s#mlxsw_event_listener * , void * ) 
s#mlxsw_listener struct mlxsw_listener { t#u16 trap_id ; union { s#mlxsw_rx_listener rx_listener ; s#mlxsw_event_listener event_listener ; } u ; e#mlxsw_reg_hpkt_action action ; e#mlxsw_reg_hpkt_action unreg_action ; t#u8 trap_group ; t#bool is_ctrl ; t#bool is_event ; } 
mlxsw_core_trap_register int mlxsw_core_trap_register ( s#mlxsw_core * , const s#mlxsw_listener * , void * ) 
mlxsw_core_trap_unregister void mlxsw_core_trap_unregister ( s#mlxsw_core * , const s#mlxsw_listener * , void * ) 
t#mlxsw_reg_trans_cb_t typedef void mlxsw_reg_trans_cb_t ( s#mlxsw_core * , char * , t#size_t , unsigned long ) 
mlxsw_reg_trans_query int mlxsw_reg_trans_query ( s#mlxsw_core * , const s#mlxsw_reg_info * , char * , s#list_head * , t#mlxsw_reg_trans_cb_t * , unsigned long ) 
mlxsw_reg_trans_write int mlxsw_reg_trans_write ( s#mlxsw_core * , const s#mlxsw_reg_info * , char * , s#list_head * , t#mlxsw_reg_trans_cb_t * , unsigned long ) 
mlxsw_reg_trans_bulk_wait int mlxsw_reg_trans_bulk_wait ( s#list_head * ) 
mlxsw_reg_query int mlxsw_reg_query ( s#mlxsw_core * , const s#mlxsw_reg_info * , char * ) 
mlxsw_reg_write int mlxsw_reg_write ( s#mlxsw_core * , const s#mlxsw_reg_info * , char * ) 
s#mlxsw_rx_info struct mlxsw_rx_info { t#bool is_lag ; union { t#u16 sys_port ; t#u16 lag_id ; } u ; t#u8 lag_port_index ; int trap_id ; } 
mlxsw_core_skb_receive void mlxsw_core_skb_receive ( s#mlxsw_core * , s#sk_buff * , s#mlxsw_rx_info * ) 
mlxsw_core_lag_mapping_set void mlxsw_core_lag_mapping_set ( s#mlxsw_core * , t#u16 , t#u8 , t#u8 ) 
mlxsw_core_lag_mapping_get t#u8 mlxsw_core_lag_mapping_get ( s#mlxsw_core * , t#u16 , t#u8 ) 
mlxsw_core_lag_mapping_clear void mlxsw_core_lag_mapping_clear ( s#mlxsw_core * , t#u16 , t#u8 ) 
e#mlxsw_res_id enum mlxsw_res_id { MLXSW_RES_ID_KVD_SIZE , MLXSW_RES_ID_KVD_SINGLE_MIN_SIZE , MLXSW_RES_ID_KVD_DOUBLE_MIN_SIZE , MLXSW_RES_ID_MAX_KVD_LINEAR_RANGE , MLXSW_RES_ID_MAX_KVD_ACTION_SETS , MLXSW_RES_ID_MAX_TRAP_GROUPS , MLXSW_RES_ID_CQE_V0 , MLXSW_RES_ID_CQE_V1 , MLXSW_RES_ID_CQE_V2 , MLXSW_RES_ID_COUNTER_POOL_SIZE , MLXSW_RES_ID_MAX_SPAN , MLXSW_RES_ID_COUNTER_SIZE_PACKETS_BYTES , MLXSW_RES_ID_COUNTER_SIZE_ROUTER_BASIC , MLXSW_RES_ID_MAX_SYSTEM_PORT , MLXSW_RES_ID_MAX_LAG , MLXSW_RES_ID_MAX_LAG_MEMBERS , MLXSW_RES_ID_MAX_BUFFER_SIZE , MLXSW_RES_ID_CELL_SIZE , MLXSW_RES_ID_ACL_MAX_TCAM_REGIONS , MLXSW_RES_ID_ACL_MAX_TCAM_RULES , MLXSW_RES_ID_ACL_MAX_REGIONS , MLXSW_RES_ID_ACL_MAX_GROUPS , MLXSW_RES_ID_ACL_MAX_GROUP_SIZE , MLXSW_RES_ID_ACL_FLEX_KEYS , MLXSW_RES_ID_ACL_MAX_ACTION_PER_RULE , MLXSW_RES_ID_ACL_ACTIONS_PER_SET , MLXSW_RES_ID_ACL_MAX_ERPT_BANKS , MLXSW_RES_ID_ACL_MAX_ERPT_BANK_SIZE , MLXSW_RES_ID_ACL_MAX_LARGE_KEY_ID , MLXSW_RES_ID_ACL_ERPT_ENTRIES_2KB , MLXSW_RES_ID_ACL_ERPT_ENTRIES_4KB , MLXSW_RES_ID_ACL_ERPT_ENTRIES_8KB , MLXSW_RES_ID_ACL_ERPT_ENTRIES_12KB , MLXSW_RES_ID_MAX_CPU_POLICERS , MLXSW_RES_ID_MAX_VRS , MLXSW_RES_ID_MAX_RIFS , MLXSW_RES_ID_MC_ERIF_LIST_ENTRIES , MLXSW_RES_ID_MAX_LPM_TREES , MLXSW_RES_ID_MAX_NVE_MC_ENTRIES_IPV4 , MLXSW_RES_ID_MAX_NVE_MC_ENTRIES_IPV6 , MLXSW_RES_ID_KVD_SINGLE_SIZE , MLXSW_RES_ID_KVD_DOUBLE_SIZE , MLXSW_RES_ID_KVD_LINEAR_SIZE , __MLXSW_RES_ID_MAX , } 
mlxsw_core_res_valid t#bool mlxsw_core_res_valid ( s#mlxsw_core * , e#mlxsw_res_id ) 
mlxsw_core_res_get t#u64 mlxsw_core_res_get ( s#mlxsw_core * , e#mlxsw_res_id ) 
mlxsw_core_port_init int mlxsw_core_port_init ( s#mlxsw_core * , t#u8 ) 
mlxsw_core_port_fini void mlxsw_core_port_fini ( s#mlxsw_core * , t#u8 ) 
mlxsw_core_port_eth_set void mlxsw_core_port_eth_set ( s#mlxsw_core * , t#u8 , void * , s#net_device * , t#u32 , t#bool , t#u32 ) 
mlxsw_core_port_ib_set void mlxsw_core_port_ib_set ( s#mlxsw_core * , t#u8 , void * ) 
mlxsw_core_port_clear void mlxsw_core_port_clear ( s#mlxsw_core * , t#u8 , void * ) 
mlxsw_core_port_type_get e#devlink_port_type mlxsw_core_port_type_get ( s#mlxsw_core * , t#u8 ) 
mlxsw_core_port_get_phys_port_name int mlxsw_core_port_get_phys_port_name ( s#mlxsw_core * , t#u8 , char * , t#size_t ) 
mlxsw_cmd_exec int mlxsw_cmd_exec ( s#mlxsw_core * , t#u16 , t#u8 , t#u32 , t#bool , t#bool , char * , t#size_t , char * , t#size_t ) 
mlxsw_core_schedule_dw int mlxsw_core_schedule_dw ( s#delayed_work * , unsigned long ) 
mlxsw_core_schedule_work t#bool mlxsw_core_schedule_work ( s#work_struct * ) 
mlxsw_core_flush_owq void mlxsw_core_flush_owq ( void ) 
mlxsw_core_kvd_sizes_get int mlxsw_core_kvd_sizes_get ( s#mlxsw_core * , const s#mlxsw_config_profile * , t#u64 * , t#u64 * , t#u64 * ) 
mlxsw_core_fw_flash_start void mlxsw_core_fw_flash_start ( s#mlxsw_core * ) 
mlxsw_core_fw_flash_end void mlxsw_core_fw_flash_end ( s#mlxsw_core * ) 

/* drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_actions.o */
s##mlxsw_afa
s##sock
s##sec_path
s##neigh_parms
s##neighbour
s##module
s##udp_tunnel_info
s##bpf_prog
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##l3mdev_ops
s##ndisc_ops
s##xfrm_state
s##tls_crypto_info
s##tls_context
s##vfsmount
s##posix_acl
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##kmem_cache
s##xt_table
s##inet_hashinfo
s##fib_notifier_ops
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##nf_hook_entry
s##ebt_table
s##workqueue_struct
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##bpf_prog_array
s##cgroup_taskset
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##mini_Qdisc
s##Qdisc
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##rtnl_link_ops
s##phy_device
s##sfp_bus
s#mlxsw_afa_ops struct mlxsw_afa_ops { int ( * kvdl_set_add ) ( void * , t#u32 * , char * , t#bool ) ; void ( * kvdl_set_del ) ( void * , t#u32 , t#bool ) ; int ( * kvdl_set_activity_get ) ( void * , t#u32 , t#bool * ) ; int ( * kvdl_fwd_entry_add ) ( void * , t#u32 * , t#u8 ) ; void ( * kvdl_fwd_entry_del ) ( void * , t#u32 ) ; int ( * counter_index_get ) ( void * , unsigned int * ) ; void ( * counter_index_put ) ( void * , unsigned int ) ; int ( * mirror_add ) ( void * , t#u8 , const s#net_device * , t#bool , int * ) ; void ( * mirror_del ) ( void * , t#u8 , int , t#bool ) ; t#bool dummy_first_set ; } 
mlxsw_afa_create s#mlxsw_afa * mlxsw_afa_create ( unsigned int , const s#mlxsw_afa_ops * , void * ) 
mlxsw_afa_destroy void mlxsw_afa_destroy ( s#mlxsw_afa * ) 
s##mlxsw_afa_block
mlxsw_afa_block_create s#mlxsw_afa_block * mlxsw_afa_block_create ( s#mlxsw_afa * ) 
mlxsw_afa_block_destroy void mlxsw_afa_block_destroy ( s#mlxsw_afa_block * ) 
mlxsw_afa_block_commit int mlxsw_afa_block_commit ( s#mlxsw_afa_block * ) 
mlxsw_afa_block_first_set char * mlxsw_afa_block_first_set ( s#mlxsw_afa_block * ) 
mlxsw_afa_block_cur_set char * mlxsw_afa_block_cur_set ( s#mlxsw_afa_block * ) 
mlxsw_afa_block_first_kvdl_index t#u32 mlxsw_afa_block_first_kvdl_index ( s#mlxsw_afa_block * ) 
mlxsw_afa_block_activity_get int mlxsw_afa_block_activity_get ( s#mlxsw_afa_block * , t#bool * ) 
mlxsw_afa_block_continue int mlxsw_afa_block_continue ( s#mlxsw_afa_block * ) 
mlxsw_afa_block_jump int mlxsw_afa_block_jump ( s#mlxsw_afa_block * , t#u16 ) 
mlxsw_afa_block_terminate int mlxsw_afa_block_terminate ( s#mlxsw_afa_block * ) 
mlxsw_afa_block_append_vlan_modify int mlxsw_afa_block_append_vlan_modify ( s#mlxsw_afa_block * , t#u16 , t#u8 , t#u8 , s#netlink_ext_ack * ) 
mlxsw_afa_block_append_drop int mlxsw_afa_block_append_drop ( s#mlxsw_afa_block * ) 
mlxsw_afa_block_append_trap int mlxsw_afa_block_append_trap ( s#mlxsw_afa_block * , t#u16 ) 
mlxsw_afa_block_append_trap_and_forward int mlxsw_afa_block_append_trap_and_forward ( s#mlxsw_afa_block * , t#u16 ) 
mlxsw_afa_block_append_mirror int mlxsw_afa_block_append_mirror ( s#mlxsw_afa_block * , t#u8 , const s#net_device * , t#bool , s#netlink_ext_ack * ) 
mlxsw_afa_block_append_fwd int mlxsw_afa_block_append_fwd ( s#mlxsw_afa_block * , t#u8 , t#bool , s#netlink_ext_ack * ) 
mlxsw_afa_block_append_allocated_counter int mlxsw_afa_block_append_allocated_counter ( s#mlxsw_afa_block * , t#u32 ) 
mlxsw_afa_block_append_counter int mlxsw_afa_block_append_counter ( s#mlxsw_afa_block * , t#u32 * , s#netlink_ext_ack * ) 
mlxsw_afa_block_append_fid_set int mlxsw_afa_block_append_fid_set ( s#mlxsw_afa_block * , t#u16 , s#netlink_ext_ack * ) 
mlxsw_afa_block_append_mcrouter int mlxsw_afa_block_append_mcrouter ( s#mlxsw_afa_block * , t#u16 , t#u16 , t#bool , t#u32 ) 

/* drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_keys.o */
s##mlxsw_afk
e#mlxsw_afk_element enum mlxsw_afk_element { MLXSW_AFK_ELEMENT_SRC_SYS_PORT , MLXSW_AFK_ELEMENT_DMAC_32_47 , MLXSW_AFK_ELEMENT_DMAC_0_31 , MLXSW_AFK_ELEMENT_SMAC_32_47 , MLXSW_AFK_ELEMENT_SMAC_0_31 , MLXSW_AFK_ELEMENT_ETHERTYPE , MLXSW_AFK_ELEMENT_IP_PROTO , MLXSW_AFK_ELEMENT_SRC_IP_96_127 , MLXSW_AFK_ELEMENT_SRC_IP_64_95 , MLXSW_AFK_ELEMENT_SRC_IP_32_63 , MLXSW_AFK_ELEMENT_SRC_IP_0_31 , MLXSW_AFK_ELEMENT_DST_IP_96_127 , MLXSW_AFK_ELEMENT_DST_IP_64_95 , MLXSW_AFK_ELEMENT_DST_IP_32_63 , MLXSW_AFK_ELEMENT_DST_IP_0_31 , MLXSW_AFK_ELEMENT_DST_L4_PORT , MLXSW_AFK_ELEMENT_SRC_L4_PORT , MLXSW_AFK_ELEMENT_VID , MLXSW_AFK_ELEMENT_PCP , MLXSW_AFK_ELEMENT_TCP_FLAGS , MLXSW_AFK_ELEMENT_IP_TTL_ , MLXSW_AFK_ELEMENT_IP_ECN , MLXSW_AFK_ELEMENT_IP_DSCP , MLXSW_AFK_ELEMENT_MAX , } 
e#mlxsw_afk_element_type enum mlxsw_afk_element_type { MLXSW_AFK_ELEMENT_TYPE_U32 , MLXSW_AFK_ELEMENT_TYPE_BUF , } 
s#mlxsw_item struct mlxsw_item { unsigned short offset ; short step ; unsigned short in_step_offset ; unsigned char shift ; unsigned char element_size ; t#bool no_real_shift ; union { unsigned char bits ; unsigned short bytes ; } size ; const char * name ; } 
s#mlxsw_afk_element_info struct mlxsw_afk_element_info { e#mlxsw_afk_element element ; e#mlxsw_afk_element_type type ; s#mlxsw_item item ; } 
s#mlxsw_afk_element_inst struct mlxsw_afk_element_inst { const s#mlxsw_afk_element_info * info ; e#mlxsw_afk_element_type type ; s#mlxsw_item item ; } 
s#mlxsw_afk_block struct mlxsw_afk_block { t#u16 encoding ; s#mlxsw_afk_element_inst * instances ; unsigned int instances_count ; } 
s#mlxsw_afk_ops struct mlxsw_afk_ops { const s#mlxsw_afk_block * blocks ; unsigned int blocks_count ; void ( * encode_block ) ( char * , int , char * ) ; } 
mlxsw_afk_create s#mlxsw_afk * mlxsw_afk_create ( unsigned int , const s#mlxsw_afk_ops * ) 
mlxsw_afk_destroy void mlxsw_afk_destroy ( s#mlxsw_afk * ) 
s##mlxsw_afk_key_info
E#MLXSW_AFK_ELEMENT_MAX 23 
s#mlxsw_afk_element_usage struct mlxsw_afk_element_usage { unsigned long usage [ ( ( ( E#MLXSW_AFK_ELEMENT_MAX ) + ( 8 * sizeof ( long ) ) - 1 ) / ( 8 * sizeof ( long ) ) ) ] ; } 
mlxsw_afk_key_info_get s#mlxsw_afk_key_info * mlxsw_afk_key_info_get ( s#mlxsw_afk * , s#mlxsw_afk_element_usage * ) 
mlxsw_afk_key_info_put void mlxsw_afk_key_info_put ( s#mlxsw_afk_key_info * ) 
mlxsw_afk_key_info_subset t#bool mlxsw_afk_key_info_subset ( s#mlxsw_afk_key_info * , s#mlxsw_afk_element_usage * ) 
mlxsw_afk_key_info_block_encoding_get t#u16 mlxsw_afk_key_info_block_encoding_get ( const s#mlxsw_afk_key_info * , int ) 
mlxsw_afk_key_info_blocks_count_get unsigned int mlxsw_afk_key_info_blocks_count_get ( const s#mlxsw_afk_key_info * ) 
s#mlxsw_afk_element_values struct mlxsw_afk_element_values { s#mlxsw_afk_element_usage elusage ; struct { char key [ 0x40 ] ; char mask [ 0x40 ] ; } storage ; } 
mlxsw_afk_values_add_u32 void mlxsw_afk_values_add_u32 ( s#mlxsw_afk_element_values * , e#mlxsw_afk_element , t#u32 , t#u32 ) 
mlxsw_afk_values_add_buf void mlxsw_afk_values_add_buf ( s#mlxsw_afk_element_values * , e#mlxsw_afk_element , const char * , const char * , unsigned int ) 
mlxsw_afk_encode void mlxsw_afk_encode ( s#mlxsw_afk * , s#mlxsw_afk_key_info * , s#mlxsw_afk_element_values * , char * , char * , int , int ) 

/* drivers/net/ethernet/mellanox/mlxsw/core_env.o */
s##mlxsw_core
mlxsw_env_get_module_info int mlxsw_env_get_module_info ( s#mlxsw_core * , int , s#ethtool_modinfo * ) 
s##sock
s##sec_path
s##neigh_parms
s##neighbour
s##vfsmount
s##posix_acl
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##kmem_cache
s##xt_table
s##inet_hashinfo
s##fib_notifier_ops
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##nf_hook_entry
s##ebt_table
s##workqueue_struct
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##bpf_prog_array
s##cgroup_taskset
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##device_private
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##udp_tunnel_info
s##bpf_prog
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##l3mdev_ops
s##ndisc_ops
s##xfrm_state
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##mini_Qdisc
s##Qdisc
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##rtnl_link_ops
s##gpio_desc
s##phylink
s##sfp_bus
mlxsw_env_get_module_eeprom int mlxsw_env_get_module_eeprom ( s#net_device * , s#mlxsw_core * , int , s#ethtool_eeprom * , t#u8 * ) 

/* drivers/net/ethernet/mellanox/mlxsw/pci.o */
s##msi_controller
s##proc_dir_entry
s##device_private
s##sock
s##vfsmount
s##posix_acl
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##uevent_sock
s##sec_path
s##neigh_parms
s##neighbour
s##udp_tunnel_info
s##bpf_prog
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##l3mdev_ops
s##ndisc_ops
s##xfrm_state
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##mini_Qdisc
s##Qdisc
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##rtnl_link_ops
s##phy_device
s##sfp_bus
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##kmem_cache
s##xt_table
s##inet_hashinfo
s##fib_notifier_ops
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##workqueue_struct
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##bpf_prog_array
s##cgroup_taskset
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##hotplug_slot
s##pci_vpd
s##pci_sriov
mlxsw_pci_driver_register int mlxsw_pci_driver_register ( s#pci_driver * ) 
mlxsw_pci_driver_unregister void mlxsw_pci_driver_unregister ( s#pci_driver * ) 

/* drivers/net/geneve.o */
s##posix_acl
s##vfsmount
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##prot_inuse
s##ipv4_devconf
s##kmem_cache
s##xt_table
s##inet_hashinfo
s##workqueue_struct
s##xfrm_state
s##uncached_list
s##dn_route
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##nf_hook_entry
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##netns_ipvs
s##mpls_route
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##mempolicy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##blk_plug
s##reclaim_state
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s#udp_hslot struct udp_hslot { s#hlist_head head ; int count ; t#spinlock_t lock ; } 
s#udp_table struct udp_table { s#udp_hslot * hash ; s#udp_hslot * hash2 ; unsigned int mask ; unsigned int log ; } 
s##raw_hashinfo
s##bpf_prog_aux
s##xfrm_policy
s##sock_reuseport
s##sec_path
s#udp_tunnel_info struct udp_tunnel_info { unsigned short type ; t#sa_family_t sa_family ; t#__be16 port ; } 
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
geneve_dev_create_fb s#net_device * geneve_dev_create_fb ( s#net * , const char * , t#u8 , t#u16 ) 

/* drivers/net/ipvlan/ipvlan_core.o */
s##posix_acl
s##vfsmount
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##prot_inuse
s##kmem_cache
s##xt_table
s##inet_hashinfo
s##workqueue_struct
s##xfrm_state
s##uncached_list
s##dn_route
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
t#u_int8_t typedef t#__u8 u_int8_t 
s#nf_hook_state struct nf_hook_state { unsigned int hook ; t#u_int8_t pf ; s#net_device * in ; s#net_device * out ; s#sock * sk ; s#net * net ; int ( * okfn ) ( s#net * , s#sock * , s#sk_buff * ) ; } 
t#nf_hookfn typedef unsigned int nf_hookfn ( void * , s#sk_buff * , const s#nf_hook_state * ) 
s#nf_hook_ops struct nf_hook_ops { s#list_head list ; t#nf_hookfn * hook ; s#net_device * dev ; void * priv ; t#u_int8_t pf ; unsigned int hooknum ; int priority ; } 
s#nf_hook_entry struct nf_hook_entry { s#nf_hook_entry * next ; t#nf_hookfn * hook ; void * priv ; const s#nf_hook_ops * orig_ops ; } 
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##netns_ipvs
s##mpls_route
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##mempolicy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##blk_plug
s##reclaim_state
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##udp_table
s##raw_hashinfo
s##bpf_prog_aux
s##xfrm_policy
s##sock_reuseport
s##sec_path
s##udp_tunnel_info
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##ip_mc_list
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
s#ipvl_port struct ipvl_port { s#net_device * dev ; t#possible_net_t pnet ; s#hlist_head hlhead [ ( 1 << 8 ) ] ; s#list_head ipvlans ; t#u16 mode ; t#u16 dev_id_start ; s#work_struct wq ; s#sk_buff_head backlog ; int count ; s#ida ida ; } 
s#ipvl_pcpu_stats struct ipvl_pcpu_stats { t#u64 rx_pkts ; t#u64 rx_bytes ; t#u64 rx_mcast ; t#u64 tx_pkts ; t#u64 tx_bytes ; s#u64_stats_sync syncp ; t#u32 rx_errs ; t#u32 tx_drps ; } 
s#ipvl_dev struct ipvl_dev { s#net_device * dev ; s#list_head pnode ; s#ipvl_port * port ; s#net_device * phy_dev ; s#list_head addrs ; s#ipvl_pcpu_stats * pcpu_stats ; unsigned long mac_filters [ ( ( ( ( 1 << 8 ) ) + ( 8 * sizeof ( long ) ) - 1 ) / ( 8 * sizeof ( long ) ) ) ] ; t#netdev_features_t sfeatures ; t#u32 msg_enable ; } 
ipvlan_count_rx void ipvlan_count_rx ( const s#ipvl_dev * , unsigned int , t#bool , t#bool ) 

/* drivers/net/ipvlan/ipvlan_main.o */
s##proc_ns_operations
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##workqueue_struct
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##kmem_cache
s##xfrm_state
s##uncached_list
s##proc_dir_entry
s##dn_route
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##ip_mc_list
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##phy_device
s##sfp_bus
s##sec_path
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##key_user
s##key_type
s##assoc_array_ptr
s##uevent_sock
s##prot_inuse
s##xt_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##netns_ipvs
s##mpls_route
ipvlan_link_new int ipvlan_link_new ( s#net * , s#net_device * , s#nlattr * [ ] , s#nlattr * [ ] , s#netlink_ext_ack * ) 
ipvlan_link_delete void ipvlan_link_delete ( s#net_device * , s#list_head * ) 
ipvlan_link_setup void ipvlan_link_setup ( s#net_device * ) 
ipvlan_link_register int ipvlan_link_register ( s#rtnl_link_ops * ) 

/* drivers/net/macvlan.o */
s##posix_acl
s##vfsmount
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##kmem_cache
s##fs_pin
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##prot_inuse
s##ipv4_devconf
s##xt_table
s##inet_hashinfo
s##workqueue_struct
t#xfrm_address_t typedef union { t#__be32 a4 ; t#__be32 a6 [ 4 ] ; s#in6_addr in6 ; } xfrm_address_t 
s#xfrm_id struct xfrm_id { t#xfrm_address_t daddr ; t#__be32 spi ; t#__u8 proto ; } 
s#xfrm_selector struct xfrm_selector { t#xfrm_address_t daddr ; t#xfrm_address_t saddr ; t#__be16 dport ; t#__be16 dport_mask ; t#__be16 sport ; t#__be16 sport_mask ; t#__u16 family ; t#__u8 prefixlen_d ; t#__u8 prefixlen_s ; t#__u8 proto ; int ifindex ; t#__kernel_uid32_t user ; } 
s#xfrm_mark struct xfrm_mark { t#__u32 v ; t#__u32 m ; } 
s#xfrm_address_filter struct xfrm_address_filter { t#xfrm_address_t saddr ; t#xfrm_address_t daddr ; t#__u16 family ; t#__u8 splen ; t#__u8 dplen ; } 
s#xfrm_state_walk struct xfrm_state_walk { s#list_head all ; t#u8 state ; t#u8 dying ; t#u8 proto ; t#u32 seq ; s#xfrm_address_filter * filter ; } 
s#xfrm_lifetime_cfg struct xfrm_lifetime_cfg { t#__u64 soft_byte_limit ; t#__u64 hard_byte_limit ; t#__u64 soft_packet_limit ; t#__u64 hard_packet_limit ; t#__u64 soft_add_expires_seconds ; t#__u64 hard_add_expires_seconds ; t#__u64 soft_use_expires_seconds ; t#__u64 hard_use_expires_seconds ; } 
s#xfrm_algo_auth struct xfrm_algo_auth { char alg_name [ 64 ] ; unsigned int alg_key_len ; unsigned int alg_trunc_len ; char alg_key [ 0 ] ; } 
s#xfrm_algo struct xfrm_algo { char alg_name [ 64 ] ; unsigned int alg_key_len ; char alg_key [ 0 ] ; } 
s#xfrm_algo_aead struct xfrm_algo_aead { char alg_name [ 64 ] ; unsigned int alg_key_len ; unsigned int alg_icv_len ; char alg_key [ 0 ] ; } 
s#xfrm_encap_tmpl struct xfrm_encap_tmpl { t#__u16 encap_type ; t#__be16 encap_sport ; t#__be16 encap_dport ; t#xfrm_address_t encap_oa ; } 
s#xfrm_replay_state struct xfrm_replay_state { t#__u32 oseq ; t#__u32 seq ; t#__u32 bitmap ; } 
s#xfrm_replay_state_esn struct xfrm_replay_state_esn { unsigned int bmp_len ; t#__u32 oseq ; t#__u32 seq ; t#__u32 oseq_hi ; t#__u32 seq_hi ; t#__u32 replay_window ; t#__u32 bmp [ 0 ] ; } 
s#xfrm_replay struct xfrm_replay { void ( * advance ) ( s#xfrm_state * , t#__be32 ) ; int ( * check ) ( s#xfrm_state * , s#sk_buff * , t#__be32 ) ; int ( * recheck ) ( s#xfrm_state * , s#sk_buff * , t#__be32 ) ; void ( * notify ) ( s#xfrm_state * , int ) ; int ( * overflow ) ( s#xfrm_state * , s#sk_buff * ) ; } 
s#xfrm_stats struct xfrm_stats { t#__u32 replay_window ; t#__u32 replay ; t#__u32 integrity_failed ; } 
s#xfrm_lifetime_cur struct xfrm_lifetime_cur { t#__u64 bytes ; t#__u64 packets ; t#__u64 add_time ; t#__u64 use_time ; } 
s#tasklet_hrtimer struct tasklet_hrtimer { s#hrtimer timer ; s#tasklet_struct tasklet ; e#hrtimer_restart ( * function ) ( s#hrtimer * ) ; } 
s#xfrm_state_offload struct xfrm_state_offload { s#net_device * dev ; unsigned long offload_handle ; unsigned int num_exthdrs ; t#u8 flags ; } 
s#xfrm_type struct xfrm_type { char * description ; s#module * owner ; t#u8 proto ; t#u8 flags ; int ( * init_state ) ( s#xfrm_state * ) ; void ( * destructor ) ( s#xfrm_state * ) ; int ( * input ) ( s#xfrm_state * , s#sk_buff * ) ; int ( * output ) ( s#xfrm_state * , s#sk_buff * ) ; int ( * reject ) ( s#xfrm_state * , s#sk_buff * , const s#flowi * ) ; int ( * hdr_offset ) ( s#xfrm_state * , s#sk_buff * , t#u8 * * ) ; t#u32 ( * get_mtu ) ( s#xfrm_state * , int ) ; } 
E#IPPROTO_MAX ( 255 ) + 1 
s#xfrm_type_offload struct xfrm_type_offload { char * description ; s#module * owner ; t#u8 proto ; void ( * encap ) ( s#xfrm_state * , s#sk_buff * ) ; int ( * input_tail ) ( s#xfrm_state * , s#sk_buff * ) ; int ( * xmit ) ( s#xfrm_state * , s#sk_buff * , t#netdev_features_t ) ; } 
s#xfrm_tmpl struct xfrm_tmpl { s#xfrm_id id ; t#xfrm_address_t saddr ; unsigned short encap_family ; t#u32 reqid ; t#u8 mode ; t#u8 share ; t#u8 optional ; t#u8 allalgs ; t#u32 aalgos ; t#u32 ealgos ; t#u32 calgos ; } 
s#xfrm_state_afinfo struct xfrm_state_afinfo { unsigned int family ; unsigned int proto ; t#__be16 eth_proto ; s#module * owner ; const s#xfrm_type * type_map [ E#IPPROTO_MAX ] ; const s#xfrm_type_offload * type_offload_map [ E#IPPROTO_MAX ] ; s#xfrm_mode * mode_map [ 5 ] ; int ( * init_flags ) ( s#xfrm_state * ) ; void ( * init_tempsel ) ( s#xfrm_selector * , const s#flowi * ) ; void ( * init_temprop ) ( s#xfrm_state * , const s#xfrm_tmpl * , const t#xfrm_address_t * , const t#xfrm_address_t * ) ; int ( * tmpl_sort ) ( s#xfrm_tmpl * * , s#xfrm_tmpl * * , int ) ; int ( * state_sort ) ( s#xfrm_state * * , s#xfrm_state * * , int ) ; int ( * output ) ( s#net * , s#sock * , s#sk_buff * ) ; int ( * output_finish ) ( s#sock * , s#sk_buff * ) ; int ( * extract_input ) ( s#xfrm_state * , s#sk_buff * ) ; int ( * extract_output ) ( s#xfrm_state * , s#sk_buff * ) ; int ( * transport_finish ) ( s#sk_buff * , int ) ; void ( * local_error ) ( s#sk_buff * , t#u32 ) ; } 
s#xfrm_mode struct xfrm_mode { int ( * input2 ) ( s#xfrm_state * , s#sk_buff * ) ; int ( * input ) ( s#xfrm_state * , s#sk_buff * ) ; int ( * output2 ) ( s#xfrm_state * , s#sk_buff * ) ; int ( * output ) ( s#xfrm_state * , s#sk_buff * ) ; s#sk_buff * ( * gso_segment ) ( s#xfrm_state * , s#sk_buff * , t#netdev_features_t ) ; void ( * xmit ) ( s#xfrm_state * , s#sk_buff * ) ; s#xfrm_state_afinfo * afinfo ; s#module * owner ; unsigned int encap ; int flags ; } 
s#xfrm_sec_ctx struct xfrm_sec_ctx { t#__u8 ctx_doi ; t#__u8 ctx_alg ; t#__u16 ctx_len ; t#__u32 ctx_sid ; char ctx_str [ 0 ] ; } 
s#xfrm_state struct xfrm_state { t#possible_net_t xs_net ; union { s#hlist_node gclist ; s#hlist_node bydst ; } ; s#hlist_node bysrc ; s#hlist_node byspi ; t#atomic_t refcnt ; t#spinlock_t lock ; s#xfrm_id id ; s#xfrm_selector sel ; s#xfrm_mark mark ; t#u32 tfcpad ; t#u32 genid ; s#xfrm_state_walk km ; struct { t#u32 reqid ; t#u8 mode ; t#u8 replay_window ; t#u8 aalgo , ealgo , calgo ; t#u8 flags ; t#u16 family ; t#xfrm_address_t saddr ; int header_len ; int trailer_len ; t#u32 extra_flags ; } props ; s#xfrm_lifetime_cfg lft ; s#xfrm_algo_auth * aalg ; s#xfrm_algo * ealg ; s#xfrm_algo * calg ; s#xfrm_algo_aead * aead ; const char * geniv ; s#xfrm_encap_tmpl * encap ; t#xfrm_address_t * coaddr ; s#xfrm_state * tunnel ; t#atomic_t tunnel_users ; s#xfrm_replay_state replay ; s#xfrm_replay_state_esn * replay_esn ; s#xfrm_replay_state preplay ; s#xfrm_replay_state_esn * preplay_esn ; const s#xfrm_replay * repl ; t#u32 xflags ; t#u32 replay_maxage ; t#u32 replay_maxdiff ; s#timer_list rtimer ; s#xfrm_stats stats ; s#xfrm_lifetime_cur curlft ; s#tasklet_hrtimer mtimer ; s#xfrm_state_offload xso ; long saved_tmo ; unsigned long lastused ; s#page_frag xfrag ; const s#xfrm_type * type ; s#xfrm_mode * inner_mode ; s#xfrm_mode * inner_mode_iaf ; s#xfrm_mode * outer_mode ; const s#xfrm_type_offload * type_offload ; s#xfrm_sec_ctx * security ; void * data ; } 
s##lwtunnel_state
s##uncached_list
s##dn_route
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##nf_hook_entry
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##mempolicy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##blk_plug
s##reclaim_state
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##udp_table
s##raw_hashinfo
s##bpf_prog_aux
s#flow_cache_ops struct flow_cache_ops { s#flow_cache_object * ( * get ) ( s#flow_cache_object * ) ; int ( * check ) ( s#flow_cache_object * ) ; void ( * delete ) ( s#flow_cache_object * ) ; } 
s#flow_cache_object struct flow_cache_object { const s#flow_cache_ops * ops ; } 
s#xfrm_policy_walk_entry struct xfrm_policy_walk_entry { s#list_head all ; t#u8 dead ; } 
s#xfrm_policy_queue struct xfrm_policy_queue { s#sk_buff_head hold_queue ; s#timer_list hold_timer ; unsigned long timeout ; } 
s#xfrm_policy struct xfrm_policy { t#possible_net_t xp_net ; s#hlist_node bydst ; s#hlist_node byidx ; t#rwlock_t lock ; t#atomic_t refcnt ; s#timer_list timer ; s#flow_cache_object flo ; t#atomic_t genid ; t#u32 priority ; t#u32 index ; s#xfrm_mark mark ; s#xfrm_selector selector ; s#xfrm_lifetime_cfg lft ; s#xfrm_lifetime_cur curlft ; s#xfrm_policy_walk_entry walk ; s#xfrm_policy_queue polq ; t#u8 type ; t#u8 action ; t#u8 flags ; t#u8 xfrm_nr ; t#u16 family ; s#xfrm_sec_ctx * security ; s#xfrm_tmpl xfrm_vec [ 6 ] ; s#callback_head rcu ; } 
s##sock_reuseport
s#xfrm_offload struct xfrm_offload { struct { t#__u32 low ; t#__u32 hi ; } seq ; t#__u32 flags ; t#__u32 status ; t#__u8 proto ; } 
s#sec_path struct sec_path { t#atomic_t refcnt ; int len ; int olen ; s#xfrm_state * xvec [ 6 ] ; s#xfrm_offload ovec [ 1 ] ; } 
s##udp_tunnel_info
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##prefix_info
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
macvlan_common_setup extern void macvlan_common_setup ( s#net_device * ) 
macvlan_common_newlink extern int macvlan_common_newlink ( s#net * , s#net_device * , s#nlattr * [ ] , s#nlattr * [ ] , s#netlink_ext_ack * ) 
macvlan_dellink extern void macvlan_dellink ( s#net_device * , s#list_head * ) 
macvlan_link_register extern int macvlan_link_register ( s#rtnl_link_ops * ) 

/* drivers/net/net_failover.o */
s##sock
s##sec_path
s##neigh_parms
s##neighbour
s##vfsmount
s##posix_acl
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##kmem_cache
s##xt_table
s##inet_hashinfo
s##fib_notifier_ops
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##nf_hook_entry
s##ebt_table
s##workqueue_struct
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##bpf_prog_array
s##cgroup_taskset
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##device_private
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##udp_tunnel_info
s##bpf_prog
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##l3mdev_ops
s##ndisc_ops
s##xfrm_state
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
s#failover_ops struct failover_ops { int ( * slave_pre_register ) ( s#net_device * , s#net_device * ) ; int ( * slave_register ) ( s#net_device * , s#net_device * ) ; int ( * slave_pre_unregister ) ( s#net_device * , s#net_device * ) ; int ( * slave_unregister ) ( s#net_device * , s#net_device * ) ; int ( * slave_link_change ) ( s#net_device * , s#net_device * ) ; int ( * slave_name_change ) ( s#net_device * , s#net_device * ) ; t#rx_handler_result_t ( * slave_handle_frame ) ( s#sk_buff * * ) ; } 
s#failover struct failover { s#list_head list ; s#net_device * failover_dev ; s#failover_ops * ops ; } 
net_failover_create s#failover * net_failover_create ( s#net_device * ) 
net_failover_destroy void net_failover_destroy ( s#failover * ) 

/* drivers/net/phy/bcm-phy-lib.o */
s##device_private
s##sock
s##seq_file
s##vfsmount
s##posix_acl
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##user_struct
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##gpio_desc
s##net_device
s##sec_path
s##phylink
bcm_phy_write_exp int bcm_phy_write_exp ( s#phy_device * , t#u16 , t#u16 ) 
bcm_phy_read_exp int bcm_phy_read_exp ( s#phy_device * , t#u16 ) 
bcm54xx_auxctl_read int bcm54xx_auxctl_read ( s#phy_device * , t#u16 ) 
bcm54xx_auxctl_write int bcm54xx_auxctl_write ( s#phy_device * , t#u16 , t#u16 ) 
bcm_phy_write_misc int bcm_phy_write_misc ( s#phy_device * , t#u16 , t#u16 , t#u16 ) 
bcm_phy_read_misc int bcm_phy_read_misc ( s#phy_device * , t#u16 , t#u16 ) 
bcm_phy_ack_intr int bcm_phy_ack_intr ( s#phy_device * ) 
bcm_phy_config_intr int bcm_phy_config_intr ( s#phy_device * ) 
bcm_phy_read_shadow int bcm_phy_read_shadow ( s#phy_device * , t#u16 ) 
bcm_phy_write_shadow int bcm_phy_write_shadow ( s#phy_device * , t#u16 , t#u16 ) 
bcm_phy_enable_apd int bcm_phy_enable_apd ( s#phy_device * , t#bool ) 
bcm_phy_set_eee int bcm_phy_set_eee ( s#phy_device * , t#bool ) 
bcm_phy_downshift_get int bcm_phy_downshift_get ( s#phy_device * , t#u8 * ) 
bcm_phy_downshift_set int bcm_phy_downshift_set ( s#phy_device * , t#u8 ) 
bcm_phy_get_sset_count int bcm_phy_get_sset_count ( s#phy_device * ) 
bcm_phy_get_strings void bcm_phy_get_strings ( s#phy_device * , t#u8 * ) 
bcm_phy_get_stats void bcm_phy_get_stats ( s#phy_device * , t#u64 * , s#ethtool_stats * , t#u64 * ) 

/* drivers/net/phy/fixed_phy.o */
s##device_private
s##sock
s##seq_file
s##vfsmount
s##posix_acl
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##user_struct
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##iommu_group
s##iommu_fwspec
s##gpio_desc
s##net_device
s##sec_path
s##phylink
s#fixed_phy_status struct fixed_phy_status { int link ; int speed ; int duplex ; int pause ; int asym_pause ; } 
fixed_phy_set_link_update extern int fixed_phy_set_link_update ( s#phy_device * , int ( * ) ( s#net_device * , s#fixed_phy_status * ) ) 
fixed_phy_update_state extern int fixed_phy_update_state ( s#phy_device * , const s#fixed_phy_status * , const s#fixed_phy_status * ) 
fixed_phy_add extern int fixed_phy_add ( unsigned int , int , s#fixed_phy_status * , int ) 
fixed_phy_register extern s#phy_device * fixed_phy_register ( unsigned int , s#fixed_phy_status * , int , s#device_node * ) 
fixed_phy_unregister extern void fixed_phy_unregister ( s#phy_device * ) 

/* drivers/net/phy/mdio-bitbang.o */
s##sock
s##seq_file
s##vfsmount
s##posix_acl
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##user_struct
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##device_private
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##gpio_desc
s#mdiobb_ops struct mdiobb_ops { s#module * owner ; void ( * set_mdc ) ( s#mdiobb_ctrl * , int ) ; void ( * set_mdio_dir ) ( s#mdiobb_ctrl * , int ) ; void ( * set_mdio_data ) ( s#mdiobb_ctrl * , int ) ; int ( * get_mdio_data ) ( s#mdiobb_ctrl * ) ; } 
s#mdiobb_ctrl struct mdiobb_ctrl { const s#mdiobb_ops * ops ; int ( * reset ) ( s#mii_bus * ) ; } 
alloc_mdio_bitbang s#mii_bus * alloc_mdio_bitbang ( s#mdiobb_ctrl * ) 
free_mdio_bitbang void free_mdio_bitbang ( s#mii_bus * ) 

/* drivers/net/phy/mdio-boardinfo.o */
s##sock
s##seq_file
s##vfsmount
s##posix_acl
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##user_struct
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##device_private
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##gpio_desc
s#mdio_board_info struct mdio_board_info { const char * bus_id ; char modalias [ 32 ] ; int mdio_addr ; const void * platform_data ; } 
mdiobus_setup_mdiodev_from_board_info void mdiobus_setup_mdiodev_from_board_info ( s#mii_bus * , int ( * ) ( s#mii_bus * , s#mdio_board_info * ) ) 
mdiobus_register_board_info int mdiobus_register_board_info ( const s#mdio_board_info * , unsigned int ) 

/* drivers/net/phy/mdio_bus.o */
s##device_private
s##sock
s##vfsmount
s##posix_acl
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_array
s##tracer
s##trace_buffer
s##ring_buffer_iter
s##event_filter
s##bpf_prog_array
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##kmem_cache
s##fs_pin
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##sec_path
s##neigh_parms
s##neighbour
s##udp_tunnel_info
s##bpf_prog
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##l3mdev_ops
s##ndisc_ops
s##xfrm_state
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##mini_Qdisc
s##Qdisc
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##rtnl_link_ops
s##iommu_ops
s##subsys_private
s##driver_private
s##workqueue_struct
s##phylink
s##sfp_bus
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##xt_table
s##inet_hashinfo
s##fib_notifier_ops
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##cgroup_taskset
s##writeback_control
s##bio_vec
s##swap_info_struct
s##mem_cgroup
s##mempolicy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##robust_list_head
s##futex_pi_state
s##numa_group
s##task_delay_info
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##ring_buffer
s##ftrace_hash
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##bdi_writeback
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##iommu_group
s##iommu_fwspec
s##gpio_desc
mdiobus_register_device int mdiobus_register_device ( s#mdio_device * ) 
mdiobus_unregister_device int mdiobus_unregister_device ( s#mdio_device * ) 
mdiobus_get_phy s#phy_device * mdiobus_get_phy ( s#mii_bus * , int ) 
mdiobus_is_registered_device t#bool mdiobus_is_registered_device ( s#mii_bus * , int ) 
mdiobus_alloc_size s#mii_bus * mdiobus_alloc_size ( t#size_t ) 
devm_mdiobus_alloc_size s#mii_bus * devm_mdiobus_alloc_size ( s#device * , int ) 
devm_mdiobus_free void devm_mdiobus_free ( s#device * , s#mii_bus * ) 
__mdiobus_register int __mdiobus_register ( s#mii_bus * , s#module * ) 
mdiobus_unregister void mdiobus_unregister ( s#mii_bus * ) 
mdiobus_free void mdiobus_free ( s#mii_bus * ) 
mdiobus_scan s#phy_device * mdiobus_scan ( s#mii_bus * , int ) 
__mdiobus_read int __mdiobus_read ( s#mii_bus * , int , t#u32 ) 
__mdiobus_write int __mdiobus_write ( s#mii_bus * , int , t#u32 , t#u16 ) 
mdiobus_read_nested int mdiobus_read_nested ( s#mii_bus * , int , t#u32 ) 
mdiobus_read int mdiobus_read ( s#mii_bus * , int , t#u32 ) 
mdiobus_write_nested int mdiobus_write_nested ( s#mii_bus * , int , t#u32 , t#u16 ) 
mdiobus_write int mdiobus_write ( s#mii_bus * , int , t#u32 , t#u16 ) 
mdio_bus_type extern s#bus_type mdio_bus_type 
mdio_bus_init int __attribute__ ( ( __section__ ( ".init.text" ) ) ) __attribute__ ( ( __cold__ ) ) __attribute__ ( ( hotpatch ( 0 , 0 ) ) ) mdio_bus_init ( void ) 
mdio_bus_exit void mdio_bus_exit ( void ) 

/* drivers/net/phy/mdio_device.o */
s##device_private
s##sock
s##seq_file
s##vfsmount
s##posix_acl
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##user_struct
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##gpio_desc
mdio_device_free void mdio_device_free ( s#mdio_device * ) 
mdio_device_create s#mdio_device * mdio_device_create ( s#mii_bus * , int ) 
mdio_device_register int mdio_device_register ( s#mdio_device * ) 
mdio_device_remove void mdio_device_remove ( s#mdio_device * ) 
mdio_device_reset void mdio_device_reset ( s#mdio_device * , int ) 
s#mdio_driver struct mdio_driver { s#mdio_driver_common mdiodrv ; int ( * probe ) ( s#mdio_device * ) ; void ( * remove ) ( s#mdio_device * ) ; } 
mdio_driver_register int mdio_driver_register ( s#mdio_driver * ) 
mdio_driver_unregister void mdio_driver_unregister ( s#mdio_driver * ) 

/* drivers/net/phy/phy.o */
s##device_private
s##sock
s##vfsmount
s##posix_acl
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##sec_path
s##neigh_parms
s##neighbour
s##udp_tunnel_info
s##bpf_prog
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##l3mdev_ops
s##ndisc_ops
s##xfrm_state
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##mini_Qdisc
s##Qdisc
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##rtnl_link_ops
s##sfp_bus
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##kmem_cache
s##xt_table
s##inet_hashinfo
s##fib_notifier_ops
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##workqueue_struct
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##bpf_prog_array
s##cgroup_taskset
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##gpio_desc
s##phylink
phy_print_status void phy_print_status ( s#phy_device * ) 
phy_restart_aneg int phy_restart_aneg ( s#phy_device * ) 
phy_aneg_done int phy_aneg_done ( s#phy_device * ) 
phy_ethtool_sset int phy_ethtool_sset ( s#phy_device * , s#ethtool_cmd * ) 
phy_ethtool_ksettings_set int phy_ethtool_ksettings_set ( s#phy_device * , const s#ethtool_link_ksettings * ) 
phy_ethtool_ksettings_get void phy_ethtool_ksettings_get ( s#phy_device * , s#ethtool_link_ksettings * ) 
phy_mii_ioctl int phy_mii_ioctl ( s#phy_device * , s#ifreq * , int ) 
phy_start_aneg int phy_start_aneg ( s#phy_device * ) 
phy_speed_down int phy_speed_down ( s#phy_device * , t#bool ) 
phy_speed_up int phy_speed_up ( s#phy_device * ) 
phy_start_machine void phy_start_machine ( s#phy_device * ) 
phy_start_interrupts int phy_start_interrupts ( s#phy_device * ) 
phy_stop_interrupts int phy_stop_interrupts ( s#phy_device * ) 
phy_stop void phy_stop ( s#phy_device * ) 
phy_start void phy_start ( s#phy_device * ) 
phy_mac_interrupt void phy_mac_interrupt ( s#phy_device * ) 
phy_init_eee int phy_init_eee ( s#phy_device * , t#bool ) 
phy_get_eee_err int phy_get_eee_err ( s#phy_device * ) 
phy_ethtool_get_eee int phy_ethtool_get_eee ( s#phy_device * , s#ethtool_eee * ) 
phy_ethtool_set_eee int phy_ethtool_set_eee ( s#phy_device * , s#ethtool_eee * ) 
phy_ethtool_set_wol int phy_ethtool_set_wol ( s#phy_device * , s#ethtool_wolinfo * ) 
phy_ethtool_get_wol void phy_ethtool_get_wol ( s#phy_device * , s#ethtool_wolinfo * ) 
phy_ethtool_get_link_ksettings int phy_ethtool_get_link_ksettings ( s#net_device * , s#ethtool_link_ksettings * ) 
phy_ethtool_set_link_ksettings int phy_ethtool_set_link_ksettings ( s#net_device * , const s#ethtool_link_ksettings * ) 
phy_ethtool_nway_reset int phy_ethtool_nway_reset ( s#net_device * ) 

/* drivers/net/phy/phy-c45.o */
s##device_private
s##sock
s##seq_file
s##vfsmount
s##posix_acl
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##user_struct
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##gpio_desc
s##net_device
s##sec_path
s##phylink
genphy_c45_pma_setup_forced int genphy_c45_pma_setup_forced ( s#phy_device * ) 
genphy_c45_an_disable_aneg int genphy_c45_an_disable_aneg ( s#phy_device * ) 
genphy_c45_restart_aneg int genphy_c45_restart_aneg ( s#phy_device * ) 
genphy_c45_aneg_done int genphy_c45_aneg_done ( s#phy_device * ) 
genphy_c45_read_link int genphy_c45_read_link ( s#phy_device * , t#u32 ) 
genphy_c45_read_lpa int genphy_c45_read_lpa ( s#phy_device * ) 
genphy_c45_read_pma int genphy_c45_read_pma ( s#phy_device * ) 
genphy_c45_read_mdix int genphy_c45_read_mdix ( s#phy_device * ) 
gen10g_config_aneg int gen10g_config_aneg ( s#phy_device * ) 
gen10g_read_status int gen10g_read_status ( s#phy_device * ) 
gen10g_no_soft_reset int gen10g_no_soft_reset ( s#phy_device * ) 
gen10g_config_init int gen10g_config_init ( s#phy_device * ) 
gen10g_suspend int gen10g_suspend ( s#phy_device * ) 
gen10g_resume int gen10g_resume ( s#phy_device * ) 

/* drivers/net/phy/phy-core.o */
phy_speed_to_str const char * phy_speed_to_str ( int ) 
phy_duplex_to_str const char * phy_duplex_to_str ( unsigned int ) 
s#phy_setting struct phy_setting { t#u32 speed ; t#u8 duplex ; t#u8 bit ; } 
phy_lookup_setting const s#phy_setting * phy_lookup_setting ( int , int , const unsigned long * , t#size_t , t#bool ) 
s##device_private
s##sock
s##seq_file
s##vfsmount
s##posix_acl
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##user_struct
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##gpio_desc
s##net_device
s##sec_path
s##phylink
phy_resolve_aneg_linkmode void phy_resolve_aneg_linkmode ( s#phy_device * ) 
phy_read_mmd int phy_read_mmd ( s#phy_device * , int , t#u32 ) 
phy_write_mmd int phy_write_mmd ( s#phy_device * , int , t#u32 , t#u16 ) 
__phy_modify int __phy_modify ( s#phy_device * , t#u32 , t#u16 , t#u16 ) 
phy_modify int phy_modify ( s#phy_device * , t#u32 , t#u16 , t#u16 ) 
phy_save_page int phy_save_page ( s#phy_device * ) 
phy_select_page int phy_select_page ( s#phy_device * , int ) 
phy_restore_page int phy_restore_page ( s#phy_device * , int , int ) 
phy_read_paged int phy_read_paged ( s#phy_device * , int , t#u32 ) 
phy_write_paged int phy_write_paged ( s#phy_device * , int , t#u32 , t#u16 ) 
phy_modify_paged int phy_modify_paged ( s#phy_device * , int , t#u32 , t#u16 , t#u16 ) 

/* drivers/net/phy/phy_device.o */
s##device_private
s##sock
s##vfsmount
s##posix_acl
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##sec_path
s##neigh_parms
s##neighbour
s##udp_tunnel_info
s##bpf_prog
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##l3mdev_ops
s##ndisc_ops
s##xfrm_state
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##mini_Qdisc
s##Qdisc
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##rtnl_link_ops
s##sfp_bus
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##kmem_cache
s##xt_table
s##inet_hashinfo
s##fib_notifier_ops
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##workqueue_struct
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##bpf_prog_array
s##cgroup_taskset
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##iommu_group
s##iommu_fwspec
s##gpio_desc
s##phylink
phy_device_free void phy_device_free ( s#phy_device * ) 
phy_register_fixup int phy_register_fixup ( const char * , t#u32 , t#u32 , int ( * ) ( s#phy_device * ) ) 
phy_register_fixup_for_uid int phy_register_fixup_for_uid ( t#u32 , t#u32 , int ( * ) ( s#phy_device * ) ) 
phy_register_fixup_for_id int phy_register_fixup_for_id ( const char * , int ( * ) ( s#phy_device * ) ) 
phy_unregister_fixup int phy_unregister_fixup ( const char * , t#u32 , t#u32 ) 
phy_unregister_fixup_for_uid int phy_unregister_fixup_for_uid ( t#u32 , t#u32 ) 
phy_unregister_fixup_for_id int phy_unregister_fixup_for_id ( const char * ) 
phy_device_create s#phy_device * phy_device_create ( s#mii_bus * , int , int , t#bool , s#phy_c45_device_ids * ) 
get_phy_device s#phy_device * get_phy_device ( s#mii_bus * , int , t#bool ) 
phy_device_register int phy_device_register ( s#phy_device * ) 
phy_device_remove void phy_device_remove ( s#phy_device * ) 
phy_find_first s#phy_device * phy_find_first ( s#mii_bus * ) 
phy_connect_direct int phy_connect_direct ( s#net_device * , s#phy_device * , void ( * ) ( s#net_device * ) , t#phy_interface_t ) 
phy_connect s#phy_device * phy_connect ( s#net_device * , const char * , void ( * ) ( s#net_device * ) , t#phy_interface_t ) 
phy_disconnect void phy_disconnect ( s#phy_device * ) 
phy_init_hw int phy_init_hw ( s#phy_device * ) 
phy_attached_info void phy_attached_info ( s#phy_device * ) 
phy_attached_print void phy_attached_print ( s#phy_device * , const char * , ... ) 
phy_attach_direct int phy_attach_direct ( s#net_device * , s#phy_device * , t#u32 , t#phy_interface_t ) 
phy_attach s#phy_device * phy_attach ( s#net_device * , const char * , t#phy_interface_t ) 
phy_detach void phy_detach ( s#phy_device * ) 
phy_suspend int phy_suspend ( s#phy_device * ) 
__phy_resume int __phy_resume ( s#phy_device * ) 
phy_resume int phy_resume ( s#phy_device * ) 
phy_loopback int phy_loopback ( s#phy_device * , t#bool ) 
phy_reset_after_clk_enable int phy_reset_after_clk_enable ( s#phy_device * ) 
genphy_setup_forced int genphy_setup_forced ( s#phy_device * ) 
genphy_restart_aneg int genphy_restart_aneg ( s#phy_device * ) 
genphy_config_aneg int genphy_config_aneg ( s#phy_device * ) 
genphy_aneg_done int genphy_aneg_done ( s#phy_device * ) 
genphy_update_link int genphy_update_link ( s#phy_device * ) 
genphy_read_status int genphy_read_status ( s#phy_device * ) 
genphy_soft_reset int genphy_soft_reset ( s#phy_device * ) 
genphy_config_init int genphy_config_init ( s#phy_device * ) 
genphy_read_mmd_unsupported int genphy_read_mmd_unsupported ( s#phy_device * , int , t#u16 ) 
genphy_write_mmd_unsupported int genphy_write_mmd_unsupported ( s#phy_device * , int , t#u16 , t#u16 ) 
genphy_suspend int genphy_suspend ( s#phy_device * ) 
genphy_resume int genphy_resume ( s#phy_device * ) 
genphy_loopback int genphy_loopback ( s#phy_device * , t#bool ) 
phy_set_max_speed int phy_set_max_speed ( s#phy_device * , t#u32 ) 
phy_driver_register int phy_driver_register ( s#phy_driver * , s#module * ) 
phy_drivers_register int phy_drivers_register ( s#phy_driver * , int , s#module * ) 
phy_driver_unregister void phy_driver_unregister ( s#phy_driver * ) 
phy_drivers_unregister void phy_drivers_unregister ( s#phy_driver * , int ) 

/* drivers/net/phy/swphy.o */
swphy_validate_state int swphy_validate_state ( const s#fixed_phy_status * ) 
swphy_read_reg int swphy_read_reg ( int , const s#fixed_phy_status * ) 

/* drivers/net/tap.o */
s##posix_acl
s##vfsmount
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##kmem_cache
s##xt_table
s##inet_hashinfo
s##fib_notifier_ops
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##lwtunnel_state
s##rtable
s##dn_route
s##workqueue_struct
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##nf_hook_entry
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##mempolicy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##blk_plug
s##reclaim_state
s##device_private
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##mtd_info
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##request_sock_ops
s##timewait_sock_ops
s##udp_table
s##raw_hashinfo
s##bpf_prog_aux
s##xfrm_policy
s##sock_reuseport
s##sec_path
s##udp_tunnel_info
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##l3mdev_ops
s##ndisc_ops
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
s#ptr_ring struct ptr_ring { int producer __attribute__ ( ( __aligned__ ( 256 ) ) ) ; t#spinlock_t producer_lock ; int consumer_head __attribute__ ( ( __aligned__ ( 256 ) ) ) ; int consumer_tail ; t#spinlock_t consumer_lock ; int size __attribute__ ( ( __aligned__ ( 256 ) ) ) ; int batch ; void * * queue ; } 
s#tap_queue struct tap_queue { s#sock sk ; s#socket sock ; s#socket_wq wq ; int vnet_hdr_sz ; s#tap_dev * tap ; s#file * file ; unsigned int flags ; t#u16 queue_index ; t#bool enabled ; s#list_head next ; s#ptr_ring ring ; } 
s#tap_dev struct tap_dev { s#net_device * dev ; t#u16 flags ; s#tap_queue * taps [ 256 ] ; s#list_head queue_list ; int numvtaps ; int numqueues ; t#netdev_features_t tap_features ; int minor ; void ( * update_features ) ( s#tap_dev * , t#netdev_features_t ) ; void ( * count_tx_dropped ) ( s#tap_dev * ) ; void ( * count_rx_dropped ) ( s#tap_dev * ) ; } 
tap_del_queues void tap_del_queues ( s#tap_dev * ) 
tap_handle_frame t#rx_handler_result_t tap_handle_frame ( s#sk_buff * * ) 
tap_get_minor int tap_get_minor ( t#dev_t , s#tap_dev * ) 
tap_free_minor void tap_free_minor ( t#dev_t , s#tap_dev * ) 
tap_get_socket s#socket * tap_get_socket ( s#file * ) 
tap_get_ptr_ring s#ptr_ring * tap_get_ptr_ring ( s#file * ) 
tap_queue_resize int tap_queue_resize ( s#tap_dev * ) 
tap_create_cdev int tap_create_cdev ( s#cdev * , t#dev_t * , const char * , s#module * ) 
tap_destroy_cdev void tap_destroy_cdev ( t#dev_t , s#cdev * ) 

/* drivers/net/team/team.o */
s##posix_acl
s##vfsmount
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##prot_inuse
s##ipv4_devconf
s##kmem_cache
s##xt_table
s##inet_hashinfo
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##lwtunnel_state
s##rtable
s##dn_route
s##workqueue_struct
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##nf_hook_entry
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##mempolicy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##blk_plug
s##reclaim_state
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##udp_table
s##raw_hashinfo
s##bpf_prog_aux
s##xfrm_policy
s##sock_reuseport
s##sec_path
s##udp_tunnel_info
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##prefix_info
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
s#team_pcpu_stats struct team_pcpu_stats { t#u64 rx_packets ; t#u64 rx_bytes ; t#u64 rx_multicast ; t#u64 tx_packets ; t#u64 tx_bytes ; s#u64_stats_sync syncp ; t#u32 rx_dropped ; t#u32 tx_dropped ; t#u32 rx_nohandler ; } 
s#team_port struct team_port { s#net_device * dev ; s#hlist_node hlist ; s#list_head list ; s#team * team ; int index ; t#bool linkup ; struct { t#bool linkup ; t#u32 speed ; t#u8 duplex ; } state ; struct { t#bool linkup ; t#bool linkup_enabled ; } user ; t#bool changed ; t#bool removed ; struct { unsigned char dev_addr [ 32 ] ; unsigned int mtu ; } orig ; t#s32 priority ; t#u16 queue_id ; s#list_head qom_list ; s#callback_head rcu ; long mode_priv [ 0 ] ; } 
s#team_mode_ops struct team_mode_ops { int ( * init ) ( s#team * ) ; void ( * exit ) ( s#team * ) ; t#rx_handler_result_t ( * receive ) ( s#team * , s#team_port * , s#sk_buff * ) ; t#bool ( * transmit ) ( s#team * , s#sk_buff * ) ; int ( * port_enter ) ( s#team * , s#team_port * ) ; void ( * port_leave ) ( s#team * , s#team_port * ) ; void ( * port_change_dev_addr ) ( s#team * , s#team_port * ) ; void ( * port_enabled ) ( s#team * , s#team_port * ) ; void ( * port_disabled ) ( s#team * , s#team_port * ) ; } 
e#netdev_lag_tx_type enum netdev_lag_tx_type { NETDEV_LAG_TX_TYPE_UNKNOWN , NETDEV_LAG_TX_TYPE_RANDOM , NETDEV_LAG_TX_TYPE_BROADCAST , NETDEV_LAG_TX_TYPE_ROUNDROBIN , NETDEV_LAG_TX_TYPE_ACTIVEBACKUP , NETDEV_LAG_TX_TYPE_HASH , } 
s#team_mode struct team_mode { const char * kind ; s#module * owner ; t#size_t priv_size ; t#size_t port_priv_size ; const s#team_mode_ops * ops ; e#netdev_lag_tx_type lag_tx_type ; } 
s#team struct team { s#net_device * dev ; s#team_pcpu_stats * pcpu_stats ; s#mutex lock ; int en_port_count ; s#hlist_head en_port_hlist [ ( 1 << 4 ) ] ; s#list_head port_list ; s#list_head option_list ; s#list_head option_inst_list ; const s#team_mode * mode ; s#team_mode_ops ops ; t#bool user_carrier_enabled ; t#bool queue_override_enabled ; s#list_head * qom_lists ; t#bool port_mtu_change_allowed ; struct { unsigned int count ; unsigned int interval ; t#atomic_t count_pending ; s#delayed_work dw ; } notify_peers ; struct { unsigned int count ; unsigned int interval ; t#atomic_t count_pending ; s#delayed_work dw ; } mcast_rejoin ; long mode_priv [ 4 ] ; } 
team_modeop_port_enter extern int team_modeop_port_enter ( s#team * , s#team_port * ) 
team_modeop_port_change_dev_addr extern void team_modeop_port_change_dev_addr ( s#team * , s#team_port * ) 
e#team_option_type enum team_option_type { TEAM_OPTION_TYPE_U32 , TEAM_OPTION_TYPE_STRING , TEAM_OPTION_TYPE_BINARY , TEAM_OPTION_TYPE_BOOL , TEAM_OPTION_TYPE_S32 , } 
s#team_option_inst_info struct team_option_inst_info { t#u32 array_index ; s#team_port * port ; } 
s#team_gsetter_ctx struct team_gsetter_ctx { union { t#u32 u32_val ; const char * str_val ; struct { const void * ptr ; t#u32 len ; } bin_val ; t#bool bool_val ; t#s32 s32_val ; } data ; s#team_option_inst_info * info ; } 
s#team_option struct team_option { s#list_head list ; const char * name ; t#bool per_port ; unsigned int array_size ; e#team_option_type type ; int ( * init ) ( s#team * , s#team_option_inst_info * ) ; int ( * getter ) ( s#team * , s#team_gsetter_ctx * ) ; int ( * setter ) ( s#team * , s#team_gsetter_ctx * ) ; } 
team_options_register extern int team_options_register ( s#team * , const s#team_option * , t#size_t ) 
team_options_unregister extern void team_options_unregister ( s#team * , const s#team_option * , t#size_t ) 
team_option_inst_set_change extern void team_option_inst_set_change ( s#team_option_inst_info * ) 
team_options_change_check extern void team_options_change_check ( s#team * ) 
team_mode_register extern int team_mode_register ( const s#team_mode * ) 
team_mode_unregister extern void team_mode_unregister ( const s#team_mode * ) 

/* drivers/net/tun.o */
tun_is_xdp_frame t#bool tun_is_xdp_frame ( void * ) 
tun_xdp_to_ptr void * tun_xdp_to_ptr ( void * ) 
tun_ptr_to_xdp void * tun_ptr_to_xdp ( void * ) 
tun_ptr_free void tun_ptr_free ( void * ) 
s##vfsmount
s##posix_acl
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##kernfs_open_node
s##kernfs_iattrs
u#bpf_attr union bpf_attr { struct { t#__u32 map_type ; t#__u32 key_size ; t#__u32 value_size ; t#__u32 max_entries ; t#__u32 map_flags ; t#__u32 inner_map_fd ; t#__u32 numa_node ; char map_name [ 16U ] ; t#__u32 map_ifindex ; t#__u32 btf_fd ; t#__u32 btf_key_type_id ; t#__u32 btf_value_type_id ; } ; struct { t#__u32 map_fd ; t#__u64 __attribute__ ( ( aligned ( 8 ) ) ) key ; union { t#__u64 __attribute__ ( ( aligned ( 8 ) ) ) value ; t#__u64 __attribute__ ( ( aligned ( 8 ) ) ) next_key ; } ; t#__u64 flags ; } ; struct { t#__u32 prog_type ; t#__u32 insn_cnt ; t#__u64 __attribute__ ( ( aligned ( 8 ) ) ) insns ; t#__u64 __attribute__ ( ( aligned ( 8 ) ) ) license ; t#__u32 log_level ; t#__u32 log_size ; t#__u64 __attribute__ ( ( aligned ( 8 ) ) ) log_buf ; t#__u32 kern_version ; t#__u32 prog_flags ; char prog_name [ 16U ] ; t#__u32 prog_ifindex ; t#__u32 expected_attach_type ; } ; struct { t#__u64 __attribute__ ( ( aligned ( 8 ) ) ) pathname ; t#__u32 bpf_fd ; t#__u32 file_flags ; } ; struct { t#__u32 target_fd ; t#__u32 attach_bpf_fd ; t#__u32 attach_type ; t#__u32 attach_flags ; } ; struct { t#__u32 prog_fd ; t#__u32 retval ; t#__u32 data_size_in ; t#__u32 data_size_out ; t#__u64 __attribute__ ( ( aligned ( 8 ) ) ) data_in ; t#__u64 __attribute__ ( ( aligned ( 8 ) ) ) data_out ; t#__u32 repeat ; t#__u32 duration ; } test ; struct { union { t#__u32 start_id ; t#__u32 prog_id ; t#__u32 map_id ; t#__u32 btf_id ; } ; t#__u32 next_id ; t#__u32 open_flags ; } ; struct { t#__u32 bpf_fd ; t#__u32 info_len ; t#__u64 __attribute__ ( ( aligned ( 8 ) ) ) info ; } info ; struct { t#__u32 target_fd ; t#__u32 attach_type ; t#__u32 query_flags ; t#__u32 attach_flags ; t#__u64 __attribute__ ( ( aligned ( 8 ) ) ) prog_ids ; t#__u32 prog_cnt ; } query ; struct { t#__u64 name ; t#__u32 prog_fd ; } raw_tracepoint ; struct { t#__u64 __attribute__ ( ( aligned ( 8 ) ) ) btf ; t#__u64 __attribute__ ( ( aligned ( 8 ) ) ) btf_log_buf ; t#__u32 btf_size ; t#__u32 btf_log_size ; t#__u32 btf_log_level ; } ; } 
s#bpf_prog_ops struct bpf_prog_ops { int ( * test_run ) ( s#bpf_prog * , const u#bpf_attr * , u#bpf_attr * ) ; } 
s##btf
s#bpf_map_ops struct bpf_map_ops { int ( * map_alloc_check ) ( u#bpf_attr * ) ; s#bpf_map * ( * map_alloc ) ( u#bpf_attr * ) ; void ( * map_release ) ( s#bpf_map * , s#file * ) ; void ( * map_free ) ( s#bpf_map * ) ; int ( * map_get_next_key ) ( s#bpf_map * , void * , void * ) ; void ( * map_release_uref ) ( s#bpf_map * ) ; void * ( * map_lookup_elem ) ( s#bpf_map * , void * ) ; int ( * map_update_elem ) ( s#bpf_map * , void * , void * , t#u64 ) ; int ( * map_delete_elem ) ( s#bpf_map * , void * ) ; void * ( * map_fd_get_ptr ) ( s#bpf_map * , s#file * , int ) ; void ( * map_fd_put_ptr ) ( void * ) ; t#u32 ( * map_gen_lookup ) ( s#bpf_map * , s#bpf_insn * ) ; t#u32 ( * map_fd_sys_lookup_elem ) ( void * ) ; void ( * map_seq_show_elem ) ( s#bpf_map * , void * , s#seq_file * ) ; int ( * map_check_btf ) ( const s#bpf_map * , const s#btf * , t#u32 , t#u32 ) ; } 
e#bpf_map_type enum bpf_map_type { BPF_MAP_TYPE_UNSPEC , BPF_MAP_TYPE_HASH , BPF_MAP_TYPE_ARRAY , BPF_MAP_TYPE_PROG_ARRAY , BPF_MAP_TYPE_PERF_EVENT_ARRAY , BPF_MAP_TYPE_PERCPU_HASH , BPF_MAP_TYPE_PERCPU_ARRAY , BPF_MAP_TYPE_STACK_TRACE , BPF_MAP_TYPE_CGROUP_ARRAY , BPF_MAP_TYPE_LRU_HASH , BPF_MAP_TYPE_LRU_PERCPU_HASH , BPF_MAP_TYPE_LPM_TRIE , BPF_MAP_TYPE_ARRAY_OF_MAPS , BPF_MAP_TYPE_HASH_OF_MAPS , BPF_MAP_TYPE_DEVMAP , BPF_MAP_TYPE_SOCKMAP , BPF_MAP_TYPE_CPUMAP , BPF_MAP_TYPE_XSKMAP , BPF_MAP_TYPE_SOCKHASH , BPF_MAP_TYPE_CGROUP_STORAGE , } 
s##key_user
s##key_type
s##assoc_array_ptr
s#bpf_map struct bpf_map { const s#bpf_map_ops * ops __attribute__ ( ( __aligned__ ( 256 ) ) ) ; s#bpf_map * inner_map_meta ; void * security ; e#bpf_map_type map_type ; t#u32 key_size ; t#u32 value_size ; t#u32 max_entries ; t#u32 map_flags ; t#u32 pages ; t#u32 id ; int numa_node ; t#u32 btf_key_type_id ; t#u32 btf_value_type_id ; s#btf * btf ; t#bool unpriv_array ; s#user_struct * user __attribute__ ( ( __aligned__ ( 256 ) ) ) ; t#atomic_t refcnt ; t#atomic_t usercnt ; s#work_struct work ; char name [ 16U ] ; } 
s##sec_path
s##proc_ns_operations
s##proc_dir_entry
s##uevent_sock
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##kmem_cache
s##xt_table
s##inet_hashinfo
s##fib_notifier_ops
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##lwtunnel_state
s##rtable
s##dn_route
s##workqueue_struct
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##nf_hook_entry
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##netns_ipvs
s##mpls_route
s##udp_tunnel_info
s##bpf_verifier_env
s#bpf_prog_offload_ops struct bpf_prog_offload_ops { int ( * insn_hook ) ( s#bpf_verifier_env * , int , int ) ; int ( * finalize ) ( s#bpf_verifier_env * ) ; } 
s#bpf_map_dev_ops struct bpf_map_dev_ops { int ( * map_get_next_key ) ( s#bpf_offloaded_map * , void * , void * ) ; int ( * map_lookup_elem ) ( s#bpf_offloaded_map * , void * , void * ) ; int ( * map_update_elem ) ( s#bpf_offloaded_map * , void * , void * , t#u64 ) ; int ( * map_delete_elem ) ( s#bpf_offloaded_map * , void * ) ; } 
s#bpf_offloaded_map struct bpf_offloaded_map { s#bpf_map map ; s#net_device * netdev ; const s#bpf_map_dev_ops * dev_ops ; void * dev_priv ; s#list_head offloads ; } 
s##xdp_umem
s##switchdev_ops
s##l3mdev_ops
s##ndisc_ops
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##device_private
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##phy_device
s##sfp_bus
s#bpf_prog_offload struct bpf_prog_offload { s#bpf_prog * prog ; s#net_device * netdev ; void * dev_priv ; s#list_head offloads ; t#bool dev_state ; const s#bpf_prog_offload_ops * dev_ops ; void * jited_image ; t#u32 jited_len ; } 
s#bpf_prog_aux struct bpf_prog_aux { t#atomic_t refcnt ; t#u32 used_map_cnt ; t#u32 max_ctx_offset ; t#u32 stack_depth ; t#u32 id ; t#u32 func_cnt ; t#bool offload_requested ; s#bpf_prog * * func ; void * jit_data ; s#latch_tree_node ksym_tnode ; s#list_head ksym_lnode ; const s#bpf_prog_ops * ops ; s#bpf_map * * used_maps ; s#bpf_prog * prog ; s#user_struct * user ; t#u64 load_time ; s#bpf_map * cgroup_storage ; char name [ 16U ] ; s#bpf_prog_offload * offload ; union { s#work_struct work ; s#callback_head rcu ; } ; } 
s#bpf_storage_buffer struct bpf_storage_buffer { s#callback_head rcu ; char data [ 0 ] ; } 
s##bpf_cgroup_storage_map
s#bpf_cgroup_storage_key struct bpf_cgroup_storage_key { t#__u64 cgroup_inode_id ; t#__u32 attach_type ; } 
s#bpf_cgroup_storage struct bpf_cgroup_storage { s#bpf_storage_buffer * buf ; s#bpf_cgroup_storage_map * map ; s#bpf_cgroup_storage_key key ; s#list_head list ; s#rb_node node ; s#callback_head rcu ; } 
s#bpf_prog_array_item struct bpf_prog_array_item { s#bpf_prog * prog ; s#bpf_cgroup_storage * cgroup_storage ; } 
s#bpf_prog_array struct bpf_prog_array { s#callback_head rcu ; s#bpf_prog_array_item items [ 0 ] ; } 
s##cgroup_taskset
s##eventfd_ctx
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##pid_namespace
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##swap_info_struct
s##request_sock_ops
s##timewait_sock_ops
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##mtd_info
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
tun_get_socket s#socket * tun_get_socket ( s#file * ) 
tun_get_tx_ring s#ptr_ring * tun_get_tx_ring ( s#file * ) 

/* drivers/net/vxlan.o */
s##posix_acl
s##vfsmount
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##prot_inuse
s##ipv4_devconf
s##kmem_cache
s##xt_table
s##inet_hashinfo
s##workqueue_struct
s##xfrm_state
s##uncached_list
s##dn_route
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##nf_hook_entry
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##netns_ipvs
s##mpls_route
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##mempolicy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##blk_plug
s##reclaim_state
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##raw_hashinfo
s##bpf_prog_aux
s##xfrm_policy
s##sock_reuseport
s##sec_path
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
s#switchdev_notifier_info struct switchdev_notifier_info { s#net_device * dev ; } 
s#in_addr struct in_addr { t#__be32 s_addr ; } 
s#sockaddr_in struct sockaddr_in { t#__kernel_sa_family_t sin_family ; t#__be16 sin_port ; s#in_addr sin_addr ; unsigned char __pad [ 16 - sizeof ( short int ) - sizeof ( unsigned short int ) - sizeof ( struct in_addr ) ] ; } 
u#vxlan_addr union vxlan_addr { s#sockaddr_in sin ; s#sockaddr_in6 sin6 ; s#sockaddr sa ; } 
s#switchdev_notifier_vxlan_fdb_info struct switchdev_notifier_vxlan_fdb_info { s#switchdev_notifier_info info ; u#vxlan_addr remote_ip ; t#__be16 remote_port ; t#__be32 remote_vni ; t#u32 remote_ifindex ; t#u8 eth_addr [ 6 ] ; t#__be32 vni ; t#bool offloaded ; } 
vxlan_fdb_find_uc int vxlan_fdb_find_uc ( s#net_device * , const t#u8 * , t#__be32 , s#switchdev_notifier_vxlan_fdb_info * ) 
s#vxlan_config struct vxlan_config { u#vxlan_addr remote_ip ; u#vxlan_addr saddr ; t#__be32 vni ; int remote_ifindex ; int mtu ; t#__be16 dst_port ; t#u16 port_min ; t#u16 port_max ; t#u8 tos ; t#u8 ttl ; t#__be32 label ; t#u32 flags ; unsigned long age_interval ; unsigned int addrmax ; t#bool no_share ; } 
vxlan_dev_create s#net_device * vxlan_dev_create ( s#net * , const char * , t#u8 , s#vxlan_config * ) 

/* drivers/nvme/host/core.o */
admin_timeout extern unsigned int admin_timeout 
nvme_io_timeout extern unsigned int nvme_io_timeout 
s##workqueue_struct
nvme_wq extern s#workqueue_struct * nvme_wq 
nvme_reset_wq extern s#workqueue_struct * nvme_reset_wq 
nvme_delete_wq extern s#workqueue_struct * nvme_delete_wq 
e#nvme_ctrl_state enum nvme_ctrl_state { NVME_CTRL_NEW , NVME_CTRL_LIVE , NVME_CTRL_ADMIN_ONLY , NVME_CTRL_RESETTING , NVME_CTRL_CONNECTING , NVME_CTRL_DELETING , NVME_CTRL_DEAD , } 
s##sock
s##vfsmount
s##posix_acl
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##mmu_notifier_mm
s##xol_area
s##kmem_cache
s##fs_pin
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##net_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##sec_path
s##xt_table
s##inet_hashinfo
s##fib_notifier_ops
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##neighbour
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##nf_hook_entry
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##bpf_prog_array
s##cgroup_taskset
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##device_private
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##blk_mq_ctx
s##blkcg_gq
s##blk_flush_queue
s##blk_mq_tags
s##blk_mq_alloc_data
s##blk_mq_debugfs_attr
s##blk_queue_stats
s##rq_wb
s##blk_stat_callback
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##badblocks
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##ring_buffer
s##bpf_prog
s##static_key_mod
s##trace_array
s##tracer
s##trace_buffer
s##ring_buffer_iter
s##event_filter
s##ftrace_hash
s##numa_group
s##task_delay_info
s##uprobe
s##gs_cb
s##swap_info_struct
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##mtd_info
s##nlm_lockowner
s##nfs4_lock_state
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s#nvme_ctrl_ops struct nvme_ctrl_ops { const char * name ; s#module * module ; unsigned int flags ; int ( * reg_read32 ) ( s#nvme_ctrl * , t#u32 , t#u32 * ) ; int ( * reg_write32 ) ( s#nvme_ctrl * , t#u32 , t#u32 ) ; int ( * reg_read64 ) ( s#nvme_ctrl * , t#u32 , t#u64 * ) ; void ( * free_ctrl ) ( s#nvme_ctrl * ) ; void ( * submit_async_event ) ( s#nvme_ctrl * ) ; void ( * delete_ctrl ) ( s#nvme_ctrl * ) ; int ( * get_address ) ( s#nvme_ctrl * , char * , int ) ; void ( * stop_ctrl ) ( s#nvme_ctrl * ) ; } 
e#nvme_iopolicy enum nvme_iopolicy { NVME_IOPOLICY_UNKNOWN , NVME_IOPOLICY_NUMA , NVME_IOPOLICY_RR , } 
s#nvme_subsystem struct nvme_subsystem { int instance ; s#device dev ; s#kref ref ; s#list_head entry ; s#mutex lock ; s#list_head ctrls ; s#list_head nsheads ; char subnqn [ 223 ] ; char serial [ 20 ] ; char model [ 40 ] ; char firmware_rev [ 8 ] ; t#u8 cmic ; t#u16 vendor_id ; s#ida ns_ida ; e#nvme_iopolicy iopolicy ; } 
s##opal_dev
s#nvme_id_power_state struct nvme_id_power_state { t#__le16 max_power ; t#__u8 rsvd2 ; t#__u8 flags ; t#__le32 entry_lat ; t#__le32 exit_lat ; t#__u8 read_tput ; t#__u8 read_lat ; t#__u8 write_tput ; t#__u8 write_lat ; t#__le16 idle_power ; t#__u8 idle_scale ; t#__u8 rsvd19 ; t#__le16 active_power ; t#__u8 active_work_scale ; t#__u8 rsvd23 [ 9 ] ; } 
s#nvme_effects_log struct nvme_effects_log { t#__le32 acs [ 256 ] ; t#__le32 iocs [ 256 ] ; t#__u8 resv [ 2048 ] ; } 
s#nvme_sgl_desc struct nvme_sgl_desc { t#__le64 addr ; t#__le32 length ; t#__u8 rsvd [ 3 ] ; t#__u8 type ; } 
s#nvme_keyed_sgl_desc struct nvme_keyed_sgl_desc { t#__le64 addr ; t#__u8 length [ 3 ] ; t#__u8 key [ 4 ] ; t#__u8 type ; } 
u#nvme_data_ptr union nvme_data_ptr { struct { t#__le64 prp1 ; t#__le64 prp2 ; } ; s#nvme_sgl_desc sgl ; s#nvme_keyed_sgl_desc ksgl ; } 
s#nvme_common_command struct nvme_common_command { t#__u8 opcode ; t#__u8 flags ; t#__u16 command_id ; t#__le32 nsid ; t#__le32 cdw2 [ 2 ] ; t#__le64 metadata ; u#nvme_data_ptr dptr ; t#__le32 cdw10 [ 6 ] ; } 
s#nvme_rw_command struct nvme_rw_command { t#__u8 opcode ; t#__u8 flags ; t#__u16 command_id ; t#__le32 nsid ; t#__u64 rsvd2 ; t#__le64 metadata ; u#nvme_data_ptr dptr ; t#__le64 slba ; t#__le16 length ; t#__le16 control ; t#__le32 dsmgmt ; t#__le32 reftag ; t#__le16 apptag ; t#__le16 appmask ; } 
s#nvme_identify struct nvme_identify { t#__u8 opcode ; t#__u8 flags ; t#__u16 command_id ; t#__le32 nsid ; t#__u64 rsvd2 [ 2 ] ; u#nvme_data_ptr dptr ; t#__u8 cns ; t#__u8 rsvd3 ; t#__le16 ctrlid ; t#__u32 rsvd11 [ 5 ] ; } 
s#nvme_features struct nvme_features { t#__u8 opcode ; t#__u8 flags ; t#__u16 command_id ; t#__le32 nsid ; t#__u64 rsvd2 [ 2 ] ; u#nvme_data_ptr dptr ; t#__le32 fid ; t#__le32 dword11 ; t#__le32 dword12 ; t#__le32 dword13 ; t#__le32 dword14 ; t#__le32 dword15 ; } 
s#nvme_create_cq struct nvme_create_cq { t#__u8 opcode ; t#__u8 flags ; t#__u16 command_id ; t#__u32 rsvd1 [ 5 ] ; t#__le64 prp1 ; t#__u64 rsvd8 ; t#__le16 cqid ; t#__le16 qsize ; t#__le16 cq_flags ; t#__le16 irq_vector ; t#__u32 rsvd12 [ 4 ] ; } 
s#nvme_create_sq struct nvme_create_sq { t#__u8 opcode ; t#__u8 flags ; t#__u16 command_id ; t#__u32 rsvd1 [ 5 ] ; t#__le64 prp1 ; t#__u64 rsvd8 ; t#__le16 sqid ; t#__le16 qsize ; t#__le16 sq_flags ; t#__le16 cqid ; t#__u32 rsvd12 [ 4 ] ; } 
s#nvme_delete_queue struct nvme_delete_queue { t#__u8 opcode ; t#__u8 flags ; t#__u16 command_id ; t#__u32 rsvd1 [ 9 ] ; t#__le16 qid ; t#__u16 rsvd10 ; t#__u32 rsvd11 [ 5 ] ; } 
s#nvme_download_firmware struct nvme_download_firmware { t#__u8 opcode ; t#__u8 flags ; t#__u16 command_id ; t#__u32 rsvd1 [ 5 ] ; u#nvme_data_ptr dptr ; t#__le32 numd ; t#__le32 offset ; t#__u32 rsvd12 [ 4 ] ; } 
s#nvme_format_cmd struct nvme_format_cmd { t#__u8 opcode ; t#__u8 flags ; t#__u16 command_id ; t#__le32 nsid ; t#__u64 rsvd2 [ 4 ] ; t#__le32 cdw10 ; t#__u32 rsvd11 [ 5 ] ; } 
s#nvme_dsm_cmd struct nvme_dsm_cmd { t#__u8 opcode ; t#__u8 flags ; t#__u16 command_id ; t#__le32 nsid ; t#__u64 rsvd2 [ 2 ] ; u#nvme_data_ptr dptr ; t#__le32 nr ; t#__le32 attributes ; t#__u32 rsvd12 [ 4 ] ; } 
s#nvme_write_zeroes_cmd struct nvme_write_zeroes_cmd { t#__u8 opcode ; t#__u8 flags ; t#__u16 command_id ; t#__le32 nsid ; t#__u64 rsvd2 ; t#__le64 metadata ; u#nvme_data_ptr dptr ; t#__le64 slba ; t#__le16 length ; t#__le16 control ; t#__le32 dsmgmt ; t#__le32 reftag ; t#__le16 apptag ; t#__le16 appmask ; } 
s#nvme_abort_cmd struct nvme_abort_cmd { t#__u8 opcode ; t#__u8 flags ; t#__u16 command_id ; t#__u32 rsvd1 [ 9 ] ; t#__le16 sqid ; t#__u16 cid ; t#__u32 rsvd11 [ 5 ] ; } 
s#nvme_get_log_page_command struct nvme_get_log_page_command { t#__u8 opcode ; t#__u8 flags ; t#__u16 command_id ; t#__le32 nsid ; t#__u64 rsvd2 [ 2 ] ; u#nvme_data_ptr dptr ; t#__u8 lid ; t#__u8 lsp ; t#__le16 numdl ; t#__le16 numdu ; t#__u16 rsvd11 ; t#__le32 lpol ; t#__le32 lpou ; t#__u32 rsvd14 [ 2 ] ; } 
s#nvmf_common_command struct nvmf_common_command { t#__u8 opcode ; t#__u8 resv1 ; t#__u16 command_id ; t#__u8 fctype ; t#__u8 resv2 [ 35 ] ; t#__u8 ts [ 24 ] ; } 
s#nvmf_connect_command struct nvmf_connect_command { t#__u8 opcode ; t#__u8 resv1 ; t#__u16 command_id ; t#__u8 fctype ; t#__u8 resv2 [ 19 ] ; u#nvme_data_ptr dptr ; t#__le16 recfmt ; t#__le16 qid ; t#__le16 sqsize ; t#__u8 cattr ; t#__u8 resv3 ; t#__le32 kato ; t#__u8 resv4 [ 12 ] ; } 
s#nvmf_property_set_command struct nvmf_property_set_command { t#__u8 opcode ; t#__u8 resv1 ; t#__u16 command_id ; t#__u8 fctype ; t#__u8 resv2 [ 35 ] ; t#__u8 attrib ; t#__u8 resv3 [ 3 ] ; t#__le32 offset ; t#__le64 value ; t#__u8 resv4 [ 8 ] ; } 
s#nvmf_property_get_command struct nvmf_property_get_command { t#__u8 opcode ; t#__u8 resv1 ; t#__u16 command_id ; t#__u8 fctype ; t#__u8 resv2 [ 35 ] ; t#__u8 attrib ; t#__u8 resv3 [ 3 ] ; t#__le32 offset ; t#__u8 resv4 [ 16 ] ; } 
s#nvme_dbbuf struct nvme_dbbuf { t#__u8 opcode ; t#__u8 flags ; t#__u16 command_id ; t#__u32 rsvd1 [ 5 ] ; t#__le64 prp1 ; t#__le64 prp2 ; t#__u32 rsvd12 [ 6 ] ; } 
s#nvme_directive_cmd struct nvme_directive_cmd { t#__u8 opcode ; t#__u8 flags ; t#__u16 command_id ; t#__le32 nsid ; t#__u64 rsvd2 [ 2 ] ; u#nvme_data_ptr dptr ; t#__le32 numd ; t#__u8 doper ; t#__u8 dtype ; t#__le16 dspec ; t#__u8 endir ; t#__u8 tdtype ; t#__u16 rsvd15 ; t#__u32 rsvd16 [ 3 ] ; } 
s#nvme_command struct nvme_command { union { s#nvme_common_command common ; s#nvme_rw_command rw ; s#nvme_identify identify ; s#nvme_features features ; s#nvme_create_cq create_cq ; s#nvme_create_sq create_sq ; s#nvme_delete_queue delete_queue ; s#nvme_download_firmware dlfw ; s#nvme_format_cmd format ; s#nvme_dsm_cmd dsm ; s#nvme_write_zeroes_cmd write_zeroes ; s#nvme_abort_cmd abort ; s#nvme_get_log_page_command get_log_page ; s#nvmf_common_command fabrics ; s#nvmf_connect_command connect ; s#nvmf_property_set_command prop_set ; s#nvmf_property_get_command prop_get ; s#nvme_dbbuf dbbuf ; s#nvme_directive_cmd directive ; } ; } 
s#nvme_ana_rsp_hdr struct nvme_ana_rsp_hdr { t#__le64 chgcnt ; t#__le16 ngrps ; t#__le16 rsvd10 [ 3 ] ; } 
s#nvmf_host struct nvmf_host { s#kref ref ; s#list_head list ; char nqn [ 223 ] ; t#uuid_t id ; } 
s#nvmf_ctrl_options struct nvmf_ctrl_options { unsigned mask ; char * transport ; char * subsysnqn ; char * traddr ; char * trsvcid ; char * host_traddr ; t#size_t queue_size ; unsigned int nr_io_queues ; unsigned int reconnect_delay ; t#bool discovery_nqn ; t#bool duplicate_connect ; unsigned int kato ; s#nvmf_host * host ; int max_reconnects ; t#bool disable_sqflow ; t#bool hdr_digest ; t#bool data_digest ; } 
s#nvme_ctrl struct nvme_ctrl { t#bool comp_seen ; e#nvme_ctrl_state state ; t#bool identified ; t#spinlock_t lock ; s#mutex scan_lock ; const s#nvme_ctrl_ops * ops ; s#request_queue * admin_q ; s#request_queue * connect_q ; s#device * dev ; int instance ; int numa_node ; s#blk_mq_tag_set * tagset ; s#blk_mq_tag_set * admin_tagset ; s#list_head namespaces ; s#rw_semaphore namespaces_rwsem ; s#device ctrl_device ; s#device * device ; s#cdev cdev ; s#work_struct reset_work ; s#work_struct delete_work ; s#nvme_subsystem * subsys ; s#list_head subsys_entry ; s#opal_dev * opal_dev ; char name [ 12 ] ; t#u16 cntlid ; t#u32 ctrl_config ; t#u16 mtfa ; t#u32 queue_count ; t#u64 cap ; t#u32 page_size ; t#u32 max_hw_sectors ; t#u32 max_segments ; t#u16 crdt [ 3 ] ; t#u16 oncs ; t#u16 oacs ; t#u16 nssa ; t#u16 nr_streams ; t#u32 max_namespaces ; t#atomic_t abort_limit ; t#u8 vwc ; t#u32 vs ; t#u32 sgls ; t#u16 kas ; t#u8 npss ; t#u8 apsta ; t#u32 oaes ; t#u32 aen_result ; t#u32 ctratt ; unsigned int shutdown_timeout ; unsigned int kato ; t#bool subsystem ; unsigned long quirks ; s#nvme_id_power_state psd [ 32 ] ; s#nvme_effects_log * effects ; s#work_struct scan_work ; s#work_struct async_event_work ; s#delayed_work ka_work ; s#nvme_command ka_cmd ; s#work_struct fw_act_work ; unsigned long events ; t#u8 anacap ; t#u8 anatt ; t#u32 anagrpmax ; t#u32 nanagrpid ; s#mutex ana_lock ; s#nvme_ana_rsp_hdr * ana_log_buf ; t#size_t ana_log_size ; s#timer_list anatt_timer ; s#work_struct ana_work ; t#u64 ps_max_latency_us ; t#bool apst_enabled ; t#u32 hmpre ; t#u32 hmmin ; t#u32 hmminds ; t#u16 hmmaxd ; t#u16 sqsize ; t#u32 ioccsz ; t#u32 iorcsz ; t#u16 icdoff ; t#u16 maxcmd ; int nr_reconnects ; s#nvmf_ctrl_options * opts ; } 
nvme_reset_ctrl int nvme_reset_ctrl ( s#nvme_ctrl * ) 
nvme_reset_ctrl_sync int nvme_reset_ctrl_sync ( s#nvme_ctrl * ) 
nvme_delete_ctrl int nvme_delete_ctrl ( s#nvme_ctrl * ) 
nvme_delete_ctrl_sync int nvme_delete_ctrl_sync ( s#nvme_ctrl * ) 
nvme_complete_rq void nvme_complete_rq ( s#request * ) 
nvme_cancel_request void nvme_cancel_request ( s#request * , void * , t#bool ) 
nvme_change_ctrl_state t#bool nvme_change_ctrl_state ( s#nvme_ctrl * , e#nvme_ctrl_state ) 
nvme_alloc_request s#request * nvme_alloc_request ( s#request_queue * , s#nvme_command * , t#blk_mq_req_flags_t , int ) 
nvme_cleanup_cmd void nvme_cleanup_cmd ( s#request * ) 
e#nvme_ana_state enum nvme_ana_state { NVME_ANA_OPTIMIZED = 0x01 , NVME_ANA_NONOPTIMIZED = 0x02 , NVME_ANA_INACCESSIBLE = 0x03 , NVME_ANA_PERSISTENT_LOSS = 0x04 , NVME_ANA_CHANGE = 0x0f , } 
s#nvme_ns_ids struct nvme_ns_ids { t#u8 eui64 [ 8 ] ; t#u8 nguid [ 16 ] ; t#uuid_t uuid ; } 
s#nvme_ns_head struct nvme_ns_head { s#list_head list ; s#srcu_struct srcu ; s#nvme_subsystem * subsys ; unsigned ns_id ; s#nvme_ns_ids ids ; s#list_head entry ; s#kref ref ; int instance ; s#gendisk * disk ; s#bio_list requeue_list ; t#spinlock_t requeue_lock ; s#work_struct requeue_work ; s#mutex lock ; s#nvme_ns * current_path [ ] ; } 
s#fault_attr struct fault_attr { unsigned long probability ; unsigned long interval ; t#atomic_t times ; t#atomic_t space ; unsigned long verbose ; t#bool task_filter ; unsigned long stacktrace_depth ; unsigned long require_start ; unsigned long require_end ; unsigned long reject_start ; unsigned long reject_end ; unsigned long count ; s#ratelimit_state ratelimit_state ; s#dentry * dname ; } 
s#nvme_fault_inject struct nvme_fault_inject { s#fault_attr attr ; s#dentry * parent ; t#bool dont_retry ; t#u16 status ; } 
s#nvme_ns struct nvme_ns { s#list_head list ; s#nvme_ctrl * ctrl ; s#request_queue * queue ; s#gendisk * disk ; e#nvme_ana_state ana_state ; t#u32 ana_grpid ; s#list_head siblings ; s#nvm_dev * ndev ; s#kref kref ; s#nvme_ns_head * head ; int lba_shift ; t#u16 ms ; t#u16 sgs ; t#u32 sws ; t#bool ext ; t#u8 pi_type ; unsigned long flags ; t#u16 noiob ; s#nvme_fault_inject fault_inject ; } 
nvme_setup_cmd t#blk_status_t nvme_setup_cmd ( s#nvme_ns * , s#request * , s#nvme_command * ) 
u#nvme_result union nvme_result { t#__le16 t#u16 ; t#__le32 t#u32 ; t#__le64 t#u64 ; } 
__nvme_submit_sync_cmd int __nvme_submit_sync_cmd ( s#request_queue * , s#nvme_command * , u#nvme_result * , void * , unsigned , unsigned , int , int , t#blk_mq_req_flags_t ) 
nvme_submit_sync_cmd int nvme_submit_sync_cmd ( s#request_queue * , s#nvme_command * , void * , unsigned ) 
nvme_stop_keep_alive void nvme_stop_keep_alive ( s#nvme_ctrl * ) 
nvme_set_queue_count int nvme_set_queue_count ( s#nvme_ctrl * , int * ) 
nvme_sec_submit int nvme_sec_submit ( void * , t#u16 , t#u8 , void * , t#size_t , t#bool ) 
nvme_disable_ctrl int nvme_disable_ctrl ( s#nvme_ctrl * , t#u64 ) 
nvme_enable_ctrl int nvme_enable_ctrl ( s#nvme_ctrl * , t#u64 ) 
nvme_shutdown_ctrl int nvme_shutdown_ctrl ( s#nvme_ctrl * ) 
nvme_init_identify int nvme_init_identify ( s#nvme_ctrl * ) 
nvme_remove_namespaces void nvme_remove_namespaces ( s#nvme_ctrl * ) 
nvme_complete_async_event void nvme_complete_async_event ( s#nvme_ctrl * , t#__le16 , volatile u#nvme_result * ) 
nvme_stop_ctrl void nvme_stop_ctrl ( s#nvme_ctrl * ) 
nvme_start_ctrl void nvme_start_ctrl ( s#nvme_ctrl * ) 
nvme_uninit_ctrl void nvme_uninit_ctrl ( s#nvme_ctrl * ) 
nvme_init_ctrl int nvme_init_ctrl ( s#nvme_ctrl * , s#device * , const s#nvme_ctrl_ops * , unsigned long ) 
nvme_kill_queues void nvme_kill_queues ( s#nvme_ctrl * ) 
nvme_unfreeze void nvme_unfreeze ( s#nvme_ctrl * ) 
nvme_wait_freeze_timeout void nvme_wait_freeze_timeout ( s#nvme_ctrl * , long ) 
nvme_wait_freeze void nvme_wait_freeze ( s#nvme_ctrl * ) 
nvme_start_freeze void nvme_start_freeze ( s#nvme_ctrl * ) 
nvme_stop_queues void nvme_stop_queues ( s#nvme_ctrl * ) 
nvme_start_queues void nvme_start_queues ( s#nvme_ctrl * ) 

/* drivers/nvme/host/fabrics.o */
s##sock
s##vfsmount
s##posix_acl
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##device_private
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##blk_mq_ctx
s##kmem_cache
s##blkcg_gq
s##workqueue_struct
s##blk_flush_queue
s##blk_mq_tags
s##blk_mq_alloc_data
s##blk_mq_debugfs_attr
s##blk_queue_stats
s##rq_wb
s##cgroup_subsys_state
s##blk_stat_callback
s##blk_trace
s##bsg_job
s##throtl_data
s##hd_geometry
s##pr_ops
s##timer_rand_state
s##disk_events
s##badblocks
s##reclaim_state
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##swap_info_struct
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##mtd_info
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##opal_dev
nvmf_get_address int nvmf_get_address ( s#nvme_ctrl * , char * , int ) 
nvmf_reg_read32 int nvmf_reg_read32 ( s#nvme_ctrl * , t#u32 , t#u32 * ) 
nvmf_reg_read64 int nvmf_reg_read64 ( s#nvme_ctrl * , t#u32 , t#u64 * ) 
nvmf_reg_write32 int nvmf_reg_write32 ( s#nvme_ctrl * , t#u32 , t#u32 ) 
nvmf_connect_admin_queue int nvmf_connect_admin_queue ( s#nvme_ctrl * ) 
nvmf_connect_io_queue int nvmf_connect_io_queue ( s#nvme_ctrl * , t#u16 ) 
nvmf_should_reconnect t#bool nvmf_should_reconnect ( s#nvme_ctrl * ) 
s#nvmf_transport_ops struct nvmf_transport_ops { s#list_head entry ; s#module * module ; const char * name ; int required_opts ; int allowed_opts ; s#nvme_ctrl * ( * create_ctrl ) ( s#device * , s#nvmf_ctrl_options * ) ; } 
nvmf_register_transport int nvmf_register_transport ( s#nvmf_transport_ops * ) 
nvmf_unregister_transport void nvmf_unregister_transport ( s#nvmf_transport_ops * ) 
nvmf_fail_nonready_command t#blk_status_t nvmf_fail_nonready_command ( s#nvme_ctrl * , s#request * ) 
__nvmf_check_ready t#bool __nvmf_check_ready ( s#nvme_ctrl * , s#request * , t#bool ) 
nvmf_ip_options_match t#bool nvmf_ip_options_match ( s#nvme_ctrl * , s#nvmf_ctrl_options * ) 
nvmf_free_options void nvmf_free_options ( s#nvmf_ctrl_options * ) 

/* drivers/nvme/host/fault_inject.o */
s##kmem_cache
s##device_private
s##sock
s##vfsmount
s##posix_acl
s##module
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##compat_timespec
s##pollfd
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##reclaim_state
s##workqueue_struct
s##cgroup_subsys_state
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##iov_iter
s##swap_info_struct
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##mtd_info
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##hd_geometry
s##pr_ops
s##timer_rand_state
s##disk_events
s##badblocks
s##blk_flush_queue
s##blk_mq_ctx
s##blk_mq_tags
s##blk_mq_alloc_data
s##blk_mq_debugfs_attr
s##blk_queue_stats
s##rq_wb
s##blkcg_gq
s##blk_stat_callback
s##blk_trace
s##bsg_job
s##throtl_data
nvme_should_fail void nvme_should_fail ( s#request * ) 

/* drivers/nvme/host/fc.o */
s#nvme_fc_port_info struct nvme_fc_port_info { t#u64 node_name ; t#u64 port_name ; t#u32 port_role ; t#u32 port_id ; t#u32 dev_loss_tmo ; } 
e#nvme_fc_obj_state enum nvme_fc_obj_state { FC_OBJSTATE_UNKNOWN , FC_OBJSTATE_NOTPRESENT , FC_OBJSTATE_ONLINE , FC_OBJSTATE_OFFLINE , FC_OBJSTATE_BLOCKED , FC_OBJSTATE_BYPASSED , FC_OBJSTATE_DIAGNOSTICS , FC_OBJSTATE_LINKDOWN , FC_OBJSTATE_ERROR , FC_OBJSTATE_LOOPBACK , FC_OBJSTATE_DELETED , } 
s#nvme_fc_local_port struct nvme_fc_local_port { t#u32 port_num ; t#u32 port_role ; t#u64 node_name ; t#u64 port_name ; void * private ; t#u32 port_id ; e#nvme_fc_obj_state port_state ; } 
s#nvme_fc_remote_port struct nvme_fc_remote_port { t#u32 port_num ; t#u32 port_role ; t#u64 node_name ; t#u64 port_name ; s#nvme_fc_local_port * localport ; void * private ; t#u32 dev_loss_tmo ; t#u32 port_id ; e#nvme_fc_obj_state port_state ; } 
s#nvmefc_ls_req struct nvmefc_ls_req { void * rqstaddr ; t#dma_addr_t rqstdma ; t#u32 rqstlen ; void * rspaddr ; t#dma_addr_t rspdma ; t#u32 rsplen ; t#u32 timeout ; void * private ; void ( * done ) ( s#nvmefc_ls_req * , int ) ; } 
e#nvmefc_fcp_datadir enum nvmefc_fcp_datadir { NVMEFC_FCP_NODATA , NVMEFC_FCP_WRITE , NVMEFC_FCP_READ , } 
s#nvmefc_fcp_req struct nvmefc_fcp_req { void * cmdaddr ; void * rspaddr ; t#dma_addr_t cmddma ; t#dma_addr_t rspdma ; t#u16 cmdlen ; t#u16 rsplen ; t#u32 payload_length ; s#sg_table sg_table ; s#scatterlist * first_sgl ; int sg_cnt ; e#nvmefc_fcp_datadir io_dir ; t#__le16 sqid ; void ( * done ) ( s#nvmefc_fcp_req * ) ; void * private ; t#u32 transferred_length ; t#u16 rcv_rsplen ; t#u32 status ; } 
s#nvme_fc_port_template struct nvme_fc_port_template { void ( * localport_delete ) ( s#nvme_fc_local_port * ) ; void ( * remoteport_delete ) ( s#nvme_fc_remote_port * ) ; int ( * create_queue ) ( s#nvme_fc_local_port * , unsigned int , t#u16 , void * * ) ; void ( * delete_queue ) ( s#nvme_fc_local_port * , unsigned int , void * ) ; void ( * poll_queue ) ( s#nvme_fc_local_port * , void * ) ; int ( * ls_req ) ( s#nvme_fc_local_port * , s#nvme_fc_remote_port * , s#nvmefc_ls_req * ) ; int ( * fcp_io ) ( s#nvme_fc_local_port * , s#nvme_fc_remote_port * , void * , s#nvmefc_fcp_req * ) ; void ( * ls_abort ) ( s#nvme_fc_local_port * , s#nvme_fc_remote_port * , s#nvmefc_ls_req * ) ; void ( * fcp_abort ) ( s#nvme_fc_local_port * , s#nvme_fc_remote_port * , void * , s#nvmefc_fcp_req * ) ; t#u32 max_hw_queues ; t#u16 max_sgl_segments ; t#u16 max_dif_sgl_segments ; t#u64 dma_boundary ; t#u32 local_priv_sz ; t#u32 remote_priv_sz ; t#u32 lsrqst_priv_sz ; t#u32 fcprqst_priv_sz ; } 
s##device_private
s##sock
s##vfsmount
s##posix_acl
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_mq_ctx
s##kmem_cache
s##blkcg_gq
s##workqueue_struct
s##blk_flush_queue
s##blk_mq_tags
s##blk_mq_alloc_data
s##blk_mq_debugfs_attr
s##blk_queue_stats
s##rq_wb
s##cgroup_subsys_state
s##blk_stat_callback
s##blk_trace
s##bsg_job
s##throtl_data
s##hd_geometry
s##pr_ops
s##timer_rand_state
s##disk_events
s##badblocks
s##reclaim_state
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##swap_info_struct
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##mtd_info
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
nvme_fc_register_localport int nvme_fc_register_localport ( s#nvme_fc_port_info * , s#nvme_fc_port_template * , s#device * , s#nvme_fc_local_port * * ) 
nvme_fc_unregister_localport int nvme_fc_unregister_localport ( s#nvme_fc_local_port * ) 
nvme_fc_register_remoteport int nvme_fc_register_remoteport ( s#nvme_fc_local_port * , s#nvme_fc_port_info * , s#nvme_fc_remote_port * * ) 
nvme_fc_unregister_remoteport int nvme_fc_unregister_remoteport ( s#nvme_fc_remote_port * ) 
nvme_fc_rescan_remoteport void nvme_fc_rescan_remoteport ( s#nvme_fc_remote_port * ) 
nvme_fc_set_remoteport_devloss int nvme_fc_set_remoteport_devloss ( s#nvme_fc_remote_port * , t#u32 ) 

/* drivers/nvmem/core.o */
s##nvmem_device
s##device_private
s##sock
s##seq_file
s##vfsmount
s##posix_acl
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##iommu_group
s##iommu_fwspec
s#nvmem_cell_info struct nvmem_cell_info { const char * name ; unsigned int offset ; unsigned int bytes ; unsigned int bit_offset ; unsigned int nbits ; } 
t#nvmem_reg_read_t typedef int ( * nvmem_reg_read_t ) ( void * , unsigned int , void * , t#size_t ) 
t#nvmem_reg_write_t typedef int ( * nvmem_reg_write_t ) ( void * , unsigned int , void * , t#size_t ) 
s#nvmem_config struct nvmem_config { s#device * dev ; const char * name ; int id ; s#module * owner ; const s#nvmem_cell_info * cells ; int ncells ; t#bool read_only ; t#bool root_only ; t#nvmem_reg_read_t reg_read ; t#nvmem_reg_write_t reg_write ; int size ; int word_size ; int stride ; void * priv ; t#bool compat ; s#device * base_dev ; } 
nvmem_register s#nvmem_device * nvmem_register ( const s#nvmem_config * ) 
nvmem_unregister int nvmem_unregister ( s#nvmem_device * ) 
nvmem_device_get s#nvmem_device * nvmem_device_get ( s#device * , const char * ) 
devm_nvmem_device_put void devm_nvmem_device_put ( s#device * , s#nvmem_device * ) 
nvmem_device_put void nvmem_device_put ( s#nvmem_device * ) 
devm_nvmem_device_get s#nvmem_device * devm_nvmem_device_get ( s#device * , const char * ) 
s##nvmem_cell
nvmem_cell_get s#nvmem_cell * nvmem_cell_get ( s#device * , const char * ) 
devm_nvmem_cell_get s#nvmem_cell * devm_nvmem_cell_get ( s#device * , const char * ) 
devm_nvmem_cell_put void devm_nvmem_cell_put ( s#device * , s#nvmem_cell * ) 
nvmem_cell_put void nvmem_cell_put ( s#nvmem_cell * ) 
nvmem_cell_read void * nvmem_cell_read ( s#nvmem_cell * , t#size_t * ) 
nvmem_cell_write int nvmem_cell_write ( s#nvmem_cell * , void * , t#size_t ) 
nvmem_cell_read_u32 int nvmem_cell_read_u32 ( s#device * , const char * , t#u32 * ) 
nvmem_device_cell_read t#ssize_t nvmem_device_cell_read ( s#nvmem_device * , s#nvmem_cell_info * , void * ) 
nvmem_device_cell_write int nvmem_device_cell_write ( s#nvmem_device * , s#nvmem_cell_info * , void * ) 
nvmem_device_read int nvmem_device_read ( s#nvmem_device * , unsigned int , t#size_t , void * ) 
nvmem_device_write int nvmem_device_write ( s#nvmem_device * , unsigned int , t#size_t , void * ) 

/* drivers/pci/access.o */
s##proc_dir_entry
s##hotplug_slot
s##sock
s##seq_file
s##vfsmount
s##posix_acl
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##device_private
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s#pci_vpd_ops struct pci_vpd_ops { t#ssize_t ( * read ) ( s#pci_dev * , t#loff_t , t#size_t , void * ) ; t#ssize_t ( * write ) ( s#pci_dev * , t#loff_t , t#size_t , const void * ) ; int ( * set_size ) ( s#pci_dev * , t#size_t ) ; } 
s#pci_vpd struct pci_vpd { const s#pci_vpd_ops * ops ; s#bin_attribute * attr ; s#mutex lock ; unsigned int len ; t#u16 flag ; t#u8 cap ; t#u8 busy : 1 ; t#u8 valid : 1 ; } 
s#pci_sriov struct pci_sriov { int pos ; int nres ; t#u32 cap ; t#u16 ctrl ; t#u16 total_VFs ; t#u16 initial_VFs ; t#u16 num_VFs ; t#u16 offset ; t#u16 stride ; t#u32 pgsz ; t#u8 link ; t#u8 max_VF_buses ; t#u16 driver_max_VFs ; s#pci_dev * dev ; s#pci_dev * self ; s#mutex lock ; t#resource_size_t barsz [ 6 ] ; t#bool drivers_autoprobe ; } 
s##msi_controller
pci_bus_read_config_byte int pci_bus_read_config_byte ( s#pci_bus * , unsigned int , int , t#u8 * ) 
pci_bus_read_config_word int pci_bus_read_config_word ( s#pci_bus * , unsigned int , int , t#u16 * ) 
pci_bus_read_config_dword int pci_bus_read_config_dword ( s#pci_bus * , unsigned int , int , t#u32 * ) 
pci_bus_write_config_byte int pci_bus_write_config_byte ( s#pci_bus * , unsigned int , int , t#u8 ) 
pci_bus_write_config_word int pci_bus_write_config_word ( s#pci_bus * , unsigned int , int , t#u16 ) 
pci_bus_write_config_dword int pci_bus_write_config_dword ( s#pci_bus * , unsigned int , int , t#u32 ) 
pci_generic_config_read int pci_generic_config_read ( s#pci_bus * , unsigned int , int , int , t#u32 * ) 
pci_generic_config_write int pci_generic_config_write ( s#pci_bus * , unsigned int , int , int , t#u32 ) 
pci_generic_config_read32 int pci_generic_config_read32 ( s#pci_bus * , unsigned int , int , int , t#u32 * ) 
pci_generic_config_write32 int pci_generic_config_write32 ( s#pci_bus * , unsigned int , int , int , t#u32 ) 
pci_bus_set_ops s#pci_ops * pci_bus_set_ops ( s#pci_bus * , s#pci_ops * ) 
pci_user_read_config_byte int pci_user_read_config_byte ( s#pci_dev * , int , t#u8 * ) 
pci_user_read_config_word int pci_user_read_config_word ( s#pci_dev * , int , t#u16 * ) 
pci_user_read_config_dword int pci_user_read_config_dword ( s#pci_dev * , int , t#u32 * ) 
pci_user_write_config_byte int pci_user_write_config_byte ( s#pci_dev * , int , t#u8 ) 
pci_user_write_config_word int pci_user_write_config_word ( s#pci_dev * , int , t#u16 ) 
pci_user_write_config_dword int pci_user_write_config_dword ( s#pci_dev * , int , t#u32 ) 
pci_read_vpd t#ssize_t pci_read_vpd ( s#pci_dev * , t#loff_t , t#size_t , void * ) 
pci_write_vpd t#ssize_t pci_write_vpd ( s#pci_dev * , t#loff_t , t#size_t , const void * ) 
pci_set_vpd_size int pci_set_vpd_size ( s#pci_dev * , t#size_t ) 
pci_cfg_access_lock void pci_cfg_access_lock ( s#pci_dev * ) 
pci_cfg_access_trylock t#bool pci_cfg_access_trylock ( s#pci_dev * ) 
pci_cfg_access_unlock void pci_cfg_access_unlock ( s#pci_dev * ) 
pcie_capability_read_word int pcie_capability_read_word ( s#pci_dev * , int , t#u16 * ) 
pcie_capability_read_dword int pcie_capability_read_dword ( s#pci_dev * , int , t#u32 * ) 
pcie_capability_write_word int pcie_capability_write_word ( s#pci_dev * , int , t#u16 ) 
pcie_capability_write_dword int pcie_capability_write_dword ( s#pci_dev * , int , t#u32 ) 
pcie_capability_clear_and_set_word int pcie_capability_clear_and_set_word ( s#pci_dev * , int , t#u16 , t#u16 ) 
pcie_capability_clear_and_set_dword int pcie_capability_clear_and_set_dword ( s#pci_dev * , int , t#u32 , t#u32 ) 
pci_read_config_byte int pci_read_config_byte ( const s#pci_dev * , int , t#u8 * ) 
pci_read_config_word int pci_read_config_word ( const s#pci_dev * , int , t#u16 * ) 
pci_read_config_dword int pci_read_config_dword ( const s#pci_dev * , int , t#u32 * ) 
pci_write_config_byte int pci_write_config_byte ( const s#pci_dev * , int , t#u8 ) 
pci_write_config_word int pci_write_config_word ( const s#pci_dev * , int , t#u16 ) 
pci_write_config_dword int pci_write_config_dword ( const s#pci_dev * , int , t#u32 ) 

/* drivers/pci/ats.o */
s##msi_controller
s##proc_dir_entry
s##device_private
s##sock
s##seq_file
s##vfsmount
s##posix_acl
s##module
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##compat_timespec
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##iov_iter
s##swap_info_struct
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##hotplug_slot
pci_enable_ats int pci_enable_ats ( s#pci_dev * , int ) 
pci_disable_ats void pci_disable_ats ( s#pci_dev * ) 
pci_restore_ats_state void pci_restore_ats_state ( s#pci_dev * ) 
pci_ats_queue_depth int pci_ats_queue_depth ( s#pci_dev * ) 

/* drivers/pci/bus.o */
pci_add_resource_offset void pci_add_resource_offset ( s#list_head * , s#resource * , t#resource_size_t ) 
pci_add_resource void pci_add_resource ( s#list_head * , s#resource * ) 
pci_free_resource_list void pci_free_resource_list ( s#list_head * ) 
s##proc_dir_entry
s##hotplug_slot
s##sock
s##seq_file
s##vfsmount
s##posix_acl
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##device_private
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##msi_controller
pci_bus_resource_n s#resource * pci_bus_resource_n ( const s#pci_bus * , int ) 
devm_request_pci_bus_resources int devm_request_pci_bus_resources ( s#device * , s#list_head * ) 
pci_bus_alloc_resource int pci_bus_alloc_resource ( s#pci_bus * , s#resource * , t#resource_size_t , t#resource_size_t , t#resource_size_t , unsigned long , t#resource_size_t ( * ) ( void * , const s#resource * , t#resource_size_t , t#resource_size_t ) , void * ) 
pci_bus_add_device void pci_bus_add_device ( s#pci_dev * ) 
pci_bus_add_devices void pci_bus_add_devices ( const s#pci_bus * ) 
pci_walk_bus void pci_walk_bus ( s#pci_bus * , int ( * ) ( s#pci_dev * , void * ) , void * ) 
pci_bus_get s#pci_bus * pci_bus_get ( s#pci_bus * ) 
pci_bus_put void pci_bus_put ( s#pci_bus * ) 

/* drivers/pci/endpoint/pci-epc-core.o */
s##device_private
s##sock
s##seq_file
s##vfsmount
s##posix_acl
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
e#pci_interrupt_pin enum pci_interrupt_pin { PCI_INTERRUPT_UNKNOWN , PCI_INTERRUPT_INTA , PCI_INTERRUPT_INTB , PCI_INTERRUPT_INTC , PCI_INTERRUPT_INTD , } 
s#pci_epf_header struct pci_epf_header { t#u16 vendorid ; t#u16 deviceid ; t#u8 revid ; t#u8 progif_code ; t#u8 subclass_code ; t#u8 baseclass_code ; t#u8 cache_line_size ; t#u16 subsys_vendor_id ; t#u16 subsys_id ; e#pci_interrupt_pin interrupt_pin ; } 
e#pci_barno enum pci_barno { BAR_0 , BAR_1 , BAR_2 , BAR_3 , BAR_4 , BAR_5 , } 
e#pci_epc_irq_type enum pci_epc_irq_type { PCI_EPC_IRQ_UNKNOWN , PCI_EPC_IRQ_LEGACY , PCI_EPC_IRQ_MSI , } 
s#pci_epc_ops struct pci_epc_ops { int ( * write_header ) ( s#pci_epc * , s#pci_epf_header * ) ; int ( * set_bar ) ( s#pci_epc * , e#pci_barno , t#dma_addr_t , t#size_t , int ) ; void ( * clear_bar ) ( s#pci_epc * , e#pci_barno ) ; int ( * map_addr ) ( s#pci_epc * , t#phys_addr_t , t#u64 , t#size_t ) ; void ( * unmap_addr ) ( s#pci_epc * , t#phys_addr_t ) ; int ( * set_msi ) ( s#pci_epc * , t#u8 ) ; int ( * get_msi ) ( s#pci_epc * ) ; int ( * raise_irq ) ( s#pci_epc * , e#pci_epc_irq_type , t#u8 ) ; int ( * start ) ( s#pci_epc * ) ; void ( * stop ) ( s#pci_epc * ) ; s#module * owner ; } 
s#pci_epc_mem struct pci_epc_mem { t#phys_addr_t phys_base ; t#size_t size ; unsigned long * bitmap ; t#size_t page_size ; int pages ; } 
s#configfs_item_operations struct configfs_item_operations { void ( * release ) ( s#config_item * ) ; int ( * allow_link ) ( s#config_item * , s#config_item * ) ; void ( * drop_link ) ( s#config_item * , s#config_item * ) ; } 
s#configfs_group_operations struct configfs_group_operations { s#config_item * ( * make_item ) ( s#config_group * , const char * ) ; s#config_group * ( * make_group ) ( s#config_group * , const char * ) ; int ( * commit_item ) ( s#config_item * ) ; void ( * disconnect_notify ) ( s#config_group * , s#config_item * ) ; void ( * drop_item ) ( s#config_group * , s#config_item * ) ; } 
s#configfs_attribute struct configfs_attribute { const char * ca_name ; s#module * ca_owner ; t#umode_t ca_mode ; t#ssize_t ( * show ) ( s#config_item * , char * ) ; t#ssize_t ( * store ) ( s#config_item * , const char * , t#size_t ) ; } 
s#configfs_bin_attribute struct configfs_bin_attribute { s#configfs_attribute cb_attr ; void * cb_private ; t#size_t cb_max_size ; t#ssize_t ( * read ) ( s#config_item * , void * , t#size_t ) ; t#ssize_t ( * write ) ( s#config_item * , const void * , t#size_t ) ; } 
s#config_item_type struct config_item_type { s#module * ct_owner ; s#configfs_item_operations * ct_item_ops ; s#configfs_group_operations * ct_group_ops ; s#configfs_attribute * * ct_attrs ; s#configfs_bin_attribute * * ct_bin_attrs ; } 
s#config_item struct config_item { char * ci_name ; char ci_namebuf [ 20 ] ; s#kref ci_kref ; s#list_head ci_entry ; s#config_item * ci_parent ; s#config_group * ci_group ; const s#config_item_type * ci_type ; s#dentry * ci_dentry ; } 
s#configfs_subsystem struct configfs_subsystem { s#config_group su_group ; s#mutex su_mutex ; } 
s#config_group struct config_group { s#config_item cg_item ; s#list_head cg_children ; s#configfs_subsystem * cg_subsys ; s#list_head default_groups ; s#list_head group_entry ; } 
s#pci_epc struct pci_epc { s#device dev ; s#list_head pci_epf ; const s#pci_epc_ops * ops ; s#pci_epc_mem * mem ; t#u8 max_functions ; s#config_group * group ; t#spinlock_t lock ; } 
pci_epc_put void pci_epc_put ( s#pci_epc * ) 
pci_epc_get s#pci_epc * pci_epc_get ( const char * ) 
pci_epc_stop void pci_epc_stop ( s#pci_epc * ) 
pci_epc_start int pci_epc_start ( s#pci_epc * ) 
pci_epc_raise_irq int pci_epc_raise_irq ( s#pci_epc * , e#pci_epc_irq_type , t#u8 ) 
pci_epc_get_msi int pci_epc_get_msi ( s#pci_epc * ) 
pci_epc_set_msi int pci_epc_set_msi ( s#pci_epc * , t#u8 ) 
pci_epc_unmap_addr void pci_epc_unmap_addr ( s#pci_epc * , t#phys_addr_t ) 
pci_epc_map_addr int pci_epc_map_addr ( s#pci_epc * , t#phys_addr_t , t#u64 , t#size_t ) 
pci_epc_clear_bar void pci_epc_clear_bar ( s#pci_epc * , int ) 
pci_epc_set_bar int pci_epc_set_bar ( s#pci_epc * , e#pci_barno , t#dma_addr_t , t#size_t , int ) 
pci_epc_write_header int pci_epc_write_header ( s#pci_epc * , s#pci_epf_header * ) 
s#pci_epf_bar struct pci_epf_bar { t#dma_addr_t phys_addr ; t#size_t size ; } 
s#pci_epf_ops struct pci_epf_ops { int ( * bind ) ( s#pci_epf * ) ; void ( * unbind ) ( s#pci_epf * ) ; void ( * linkup ) ( s#pci_epf * ) ; } 
s#pci_epf_device_id struct pci_epf_device_id { char name [ 20 ] ; t#kernel_ulong_t driver_data ; } 
s#pci_epf_driver struct pci_epf_driver { int ( * probe ) ( s#pci_epf * ) ; int ( * remove ) ( s#pci_epf * ) ; s#device_driver driver ; s#pci_epf_ops * ops ; s#module * owner ; s#config_group * group ; const s#pci_epf_device_id * id_table ; } 
s#pci_epf struct pci_epf { s#device dev ; const char * name ; s#pci_epf_header * header ; s#pci_epf_bar bar [ 6 ] ; t#u8 msi_interrupts ; t#u8 func_no ; s#pci_epc * epc ; s#pci_epf_driver * driver ; s#list_head list ; } 
pci_epc_add_epf int pci_epc_add_epf ( s#pci_epc * , s#pci_epf * ) 
pci_epc_remove_epf void pci_epc_remove_epf ( s#pci_epc * , s#pci_epf * ) 
pci_epc_linkup void pci_epc_linkup ( s#pci_epc * ) 
pci_epc_destroy void pci_epc_destroy ( s#pci_epc * ) 
devm_pci_epc_destroy void devm_pci_epc_destroy ( s#device * , s#pci_epc * ) 
__pci_epc_create s#pci_epc * __pci_epc_create ( s#device * , const s#pci_epc_ops * , s#module * ) 
__devm_pci_epc_create s#pci_epc * __devm_pci_epc_create ( s#device * , const s#pci_epc_ops * , s#module * ) 

/* drivers/pci/endpoint/pci-epc-mem.o */
s##device_private
s##sock
s##seq_file
s##vfsmount
s##posix_acl
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##config_group
__pci_epc_mem_init int __pci_epc_mem_init ( s#pci_epc * , t#phys_addr_t , t#size_t , t#size_t ) 
pci_epc_mem_exit void pci_epc_mem_exit ( s#pci_epc * ) 
pci_epc_mem_alloc_addr void * pci_epc_mem_alloc_addr ( s#pci_epc * , t#phys_addr_t * , t#size_t ) 
pci_epc_mem_free_addr void pci_epc_mem_free_addr ( s#pci_epc * , t#phys_addr_t , void * , t#size_t ) 

/* drivers/pci/endpoint/pci-epf-core.o */
s##device_private
s##sock
s##seq_file
s##vfsmount
s##posix_acl
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
pci_epf_linkup void pci_epf_linkup ( s#pci_epf * ) 
pci_epf_unbind void pci_epf_unbind ( s#pci_epf * ) 
pci_epf_bind int pci_epf_bind ( s#pci_epf * ) 
pci_epf_free_space void pci_epf_free_space ( s#pci_epf * , void * , e#pci_barno ) 
pci_epf_alloc_space void * pci_epf_alloc_space ( s#pci_epf * , t#size_t , e#pci_barno ) 
pci_epf_unregister_driver void pci_epf_unregister_driver ( s#pci_epf_driver * ) 
__pci_epf_register_driver int __pci_epf_register_driver ( s#pci_epf_driver * , s#module * ) 
pci_epf_destroy void pci_epf_destroy ( s#pci_epf * ) 
pci_epf_create s#pci_epf * pci_epf_create ( const char * ) 

/* drivers/pci/host-bridge.o */
s##device_private
s##sock
s##seq_file
s##vfsmount
s##posix_acl
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##proc_dir_entry
s##hotplug_slot
s##msi_controller
s#pci_host_bridge struct pci_host_bridge { s#device dev ; s#pci_bus * bus ; s#pci_ops * ops ; void * sysdata ; int busnr ; s#list_head windows ; t#u8 ( * swizzle_irq ) ( s#pci_dev * , t#u8 * ) ; int ( * map_irq ) ( const s#pci_dev * , t#u8 , t#u8 ) ; void ( * release_fn ) ( s#pci_host_bridge * ) ; void * release_data ; s#msi_controller * msi ; unsigned int ignore_reset_delay : 1 ; unsigned int no_ext_tags : 1 ; unsigned int native_aer : 1 ; unsigned int native_pcie_hotplug : 1 ; unsigned int native_shpc_hotplug : 1 ; unsigned int native_pme : 1 ; unsigned int native_ltr : 1 ; t#resource_size_t ( * align_resource ) ( s#pci_dev * , const s#resource * , t#resource_size_t , t#resource_size_t , t#resource_size_t ) ; unsigned long private [ 0 ] __attribute__ ( ( __aligned__ ( 256 ) ) ) ; } 
pci_set_host_bridge_release void pci_set_host_bridge_release ( s#pci_host_bridge * , void ( * ) ( s#pci_host_bridge * ) , void * ) 
t#pci_bus_addr_t typedef t#u64 pci_bus_addr_t 
s#pci_bus_region struct pci_bus_region { t#pci_bus_addr_t start ; t#pci_bus_addr_t end ; } 
pcibios_resource_to_bus void pcibios_resource_to_bus ( s#pci_bus * , s#pci_bus_region * , s#resource * ) 
pcibios_bus_to_resource void pcibios_bus_to_resource ( s#pci_bus * , s#resource * , s#pci_bus_region * ) 

/* drivers/pci/hotplug/pci_hotplug_core.o */
s##sock
s##seq_file
s##posix_acl
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##device_private
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s#hotplug_slot_ops struct hotplug_slot_ops { s#module * owner ; const char * mod_name ; int ( * enable_slot ) ( s#hotplug_slot * ) ; int ( * disable_slot ) ( s#hotplug_slot * ) ; int ( * set_attention_status ) ( s#hotplug_slot * , t#u8 ) ; int ( * hardware_test ) ( s#hotplug_slot * , t#u32 ) ; int ( * get_power_status ) ( s#hotplug_slot * , t#u8 * ) ; int ( * get_attention_status ) ( s#hotplug_slot * , t#u8 * ) ; int ( * get_latch_status ) ( s#hotplug_slot * , t#u8 * ) ; int ( * get_adapter_status ) ( s#hotplug_slot * , t#u8 * ) ; int ( * reset_slot ) ( s#hotplug_slot * , int ) ; } 
s#hotplug_slot_info struct hotplug_slot_info { t#u8 power_status ; t#u8 attention_status ; t#u8 latch_status ; t#u8 adapter_status ; } 
s##proc_dir_entry
s##msi_controller
s#hotplug_slot struct hotplug_slot { s#hotplug_slot_ops * ops ; s#hotplug_slot_info * info ; void * private ; s#list_head slot_list ; s#pci_slot * pci_slot ; } 
__pci_hp_register int __pci_hp_register ( s#hotplug_slot * , s#pci_bus * , int , const char * , s#module * , const char * ) 
__pci_hp_initialize int __pci_hp_initialize ( s#hotplug_slot * , s#pci_bus * , int , const char * , s#module * , const char * ) 
pci_hp_add int pci_hp_add ( s#hotplug_slot * ) 
pci_hp_deregister void pci_hp_deregister ( s#hotplug_slot * ) 
pci_hp_del void pci_hp_del ( s#hotplug_slot * ) 
pci_hp_destroy void pci_hp_destroy ( s#hotplug_slot * ) 
pci_hp_change_slot_info int pci_hp_change_slot_info ( s#hotplug_slot * , s#hotplug_slot_info * ) 

/* drivers/pci/iov.o */
s##msi_controller
s##proc_dir_entry
s##device_private
s##sock
s##seq_file
s##vfsmount
s##posix_acl
s##module
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##compat_timespec
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##iov_iter
s##swap_info_struct
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##hotplug_slot
pci_enable_sriov int pci_enable_sriov ( s#pci_dev * , int ) 
pci_disable_sriov void pci_disable_sriov ( s#pci_dev * ) 
pci_num_vf int pci_num_vf ( s#pci_dev * ) 
pci_vfs_assigned int pci_vfs_assigned ( s#pci_dev * ) 
pci_sriov_set_totalvfs int pci_sriov_set_totalvfs ( s#pci_dev * , t#u16 ) 
pci_sriov_get_totalvfs int pci_sriov_get_totalvfs ( s#pci_dev * ) 
pci_sriov_configure_simple int pci_sriov_configure_simple ( s#pci_dev * , int ) 

/* drivers/pci/irq.o */
e#pci_lost_interrupt_reason enum pci_lost_interrupt_reason { PCI_LOST_IRQ_NO_INFORMATION = 0 , PCI_LOST_IRQ_DISABLE_MSI , PCI_LOST_IRQ_DISABLE_MSIX , PCI_LOST_IRQ_DISABLE_ACPI , } 
s##msi_controller
s##proc_dir_entry
s##device_private
s##sock
s##seq_file
s##vfsmount
s##posix_acl
s##module
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##compat_timespec
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##iov_iter
s##swap_info_struct
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##hotplug_slot
s##pci_vpd
s##pci_sriov
pci_lost_interrupt e#pci_lost_interrupt_reason pci_lost_interrupt ( s#pci_dev * ) 
pci_request_irq int __attribute__ ( ( format ( printf , 6 , 7 ) ) ) pci_request_irq ( s#pci_dev * , unsigned int , t#irq_handler_t , t#irq_handler_t , void * , const char * , ... ) 
pci_free_irq void pci_free_irq ( s#pci_dev * , unsigned int , void * ) 

/* drivers/pci/msi.o */
s##device_private
s##sock
s##seq_file
s##vfsmount
s##posix_acl
s##module
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##compat_timespec
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##iov_iter
s##swap_info_struct
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##iommu_group
s##iommu_fwspec
s##platform_msi_priv_data
s##proc_dir_entry
pci_msi_mask_irq void pci_msi_mask_irq ( s#irq_data * ) 
pci_msi_unmask_irq void pci_msi_unmask_irq ( s#irq_data * ) 
pci_write_msi_msg void pci_write_msi_msg ( unsigned int , s#msi_msg * ) 
s##hotplug_slot
pci_restore_msi_state void pci_restore_msi_state ( s#pci_dev * ) 
pci_msi_vec_count int pci_msi_vec_count ( s#pci_dev * ) 
pci_disable_msi void pci_disable_msi ( s#pci_dev * ) 
pci_msix_vec_count int pci_msix_vec_count ( s#pci_dev * ) 
pci_disable_msix void pci_disable_msix ( s#pci_dev * ) 
pci_msi_enabled int pci_msi_enabled ( void ) 
pci_enable_msi int pci_enable_msi ( s#pci_dev * ) 
s#msix_entry struct msix_entry { t#u32 vector ; t#u16 entry ; } 
pci_enable_msix_range int pci_enable_msix_range ( s#pci_dev * , s#msix_entry * , int , int ) 
s#irq_affinity struct irq_affinity { int pre_vectors ; int post_vectors ; } 
pci_alloc_irq_vectors_affinity int pci_alloc_irq_vectors_affinity ( s#pci_dev * , unsigned int , unsigned int , unsigned int , const s#irq_affinity * ) 
pci_free_irq_vectors void pci_free_irq_vectors ( s#pci_dev * ) 
pci_irq_vector int pci_irq_vector ( s#pci_dev * , unsigned int ) 
pci_irq_get_affinity const s#cpumask * pci_irq_get_affinity ( s#pci_dev * , int ) 
pci_irq_get_node int pci_irq_get_node ( s#pci_dev * , int ) 
msi_desc_to_pci_dev s#pci_dev * msi_desc_to_pci_dev ( s#msi_desc * ) 
msi_desc_to_pci_sysdata void * msi_desc_to_pci_sysdata ( s#msi_desc * ) 

/* drivers/pci/pci.o */
pci_power_names extern const char * pci_power_names [ ] 
isa_dma_bridge_buggy extern int isa_dma_bridge_buggy 
pci_pci_problems extern int pci_pci_problems 
s##proc_dir_entry
s##sock
s##seq_file
s##vfsmount
s##posix_acl
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##device_private
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##iommu_group
s##iommu_fwspec
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##platform_msi_priv_data
pci_bus_max_busnr unsigned char pci_bus_max_busnr ( s#pci_bus * ) 
pci_ioremap_bar void * pci_ioremap_bar ( s#pci_dev * , int ) 
pci_ioremap_wc_bar void * pci_ioremap_wc_bar ( s#pci_dev * , int ) 
pci_find_next_capability int pci_find_next_capability ( s#pci_dev * , t#u8 , int ) 
pci_find_capability int pci_find_capability ( s#pci_dev * , int ) 
pci_bus_find_capability int pci_bus_find_capability ( s#pci_bus * , unsigned int , int ) 
pci_find_next_ext_capability int pci_find_next_ext_capability ( s#pci_dev * , int , int ) 
pci_find_ext_capability int pci_find_ext_capability ( s#pci_dev * , int ) 
pci_find_next_ht_capability int pci_find_next_ht_capability ( s#pci_dev * , int , int ) 
pci_find_ht_capability int pci_find_ht_capability ( s#pci_dev * , int ) 
pci_find_parent_resource s#resource * pci_find_parent_resource ( const s#pci_dev * , s#resource * ) 
pci_find_resource s#resource * pci_find_resource ( s#pci_dev * , s#resource * ) 
pci_find_pcie_root_port s#pci_dev * pci_find_pcie_root_port ( s#pci_dev * ) 
__pci_complete_power_transition int __pci_complete_power_transition ( s#pci_dev * , t#pci_power_t ) 
pci_set_power_state int pci_set_power_state ( s#pci_dev * , t#pci_power_t ) 
pci_choose_state t#pci_power_t pci_choose_state ( s#pci_dev * , t#pm_message_t ) 
pci_save_state int pci_save_state ( s#pci_dev * ) 
pci_restore_state void pci_restore_state ( s#pci_dev * ) 
s##pci_saved_state
pci_store_saved_state s#pci_saved_state * pci_store_saved_state ( s#pci_dev * ) 
pci_load_saved_state int pci_load_saved_state ( s#pci_dev * , s#pci_saved_state * ) 
pci_load_and_free_saved_state int pci_load_and_free_saved_state ( s#pci_dev * , s#pci_saved_state * * ) 
pci_reenable_device int pci_reenable_device ( s#pci_dev * ) 
pci_enable_device_io int pci_enable_device_io ( s#pci_dev * ) 
pci_enable_device_mem int pci_enable_device_mem ( s#pci_dev * ) 
pci_enable_device int pci_enable_device ( s#pci_dev * ) 
pcim_enable_device int pcim_enable_device ( s#pci_dev * ) 
pcim_pin_device void pcim_pin_device ( s#pci_dev * ) 
pci_disable_device void pci_disable_device ( s#pci_dev * ) 
e#pcie_reset_state enum pcie_reset_state { pcie_deassert_reset = ( pcie_reset_state_t ) 1 , pcie_warm_reset = ( pcie_reset_state_t ) 2 , pcie_hot_reset = ( pcie_reset_state_t ) 3 } 
pci_set_pcie_reset_state int pci_set_pcie_reset_state ( s#pci_dev * , e#pcie_reset_state ) 
pci_pme_capable t#bool pci_pme_capable ( s#pci_dev * , t#pci_power_t ) 
pci_pme_active void pci_pme_active ( s#pci_dev * , t#bool ) 
pci_enable_wake int pci_enable_wake ( s#pci_dev * , t#pci_power_t , t#bool ) 
pci_wake_from_d3 int pci_wake_from_d3 ( s#pci_dev * , t#bool ) 
pci_prepare_to_sleep int pci_prepare_to_sleep ( s#pci_dev * ) 
pci_back_from_sleep int pci_back_from_sleep ( s#pci_dev * ) 
pci_dev_run_wake t#bool pci_dev_run_wake ( s#pci_dev * ) 
pci_d3cold_enable void pci_d3cold_enable ( s#pci_dev * ) 
pci_d3cold_disable void pci_d3cold_disable ( s#pci_dev * ) 
pci_enable_atomic_ops_to_root int pci_enable_atomic_ops_to_root ( s#pci_dev * , t#u32 ) 
pci_common_swizzle t#u8 pci_common_swizzle ( s#pci_dev * , t#u8 * ) 
pci_release_region void pci_release_region ( s#pci_dev * , int ) 
pci_request_region int pci_request_region ( s#pci_dev * , int , const char * ) 
pci_request_region_exclusive int pci_request_region_exclusive ( s#pci_dev * , int , const char * ) 
pci_release_selected_regions void pci_release_selected_regions ( s#pci_dev * , int ) 
pci_request_selected_regions int pci_request_selected_regions ( s#pci_dev * , int , const char * ) 
pci_request_selected_regions_exclusive int pci_request_selected_regions_exclusive ( s#pci_dev * , int , const char * ) 
pci_release_regions void pci_release_regions ( s#pci_dev * ) 
pci_request_regions int pci_request_regions ( s#pci_dev * , const char * ) 
pci_request_regions_exclusive int pci_request_regions_exclusive ( s#pci_dev * , const char * ) 
pci_remap_iospace int pci_remap_iospace ( const s#resource * , t#phys_addr_t ) 
pci_unmap_iospace void pci_unmap_iospace ( s#resource * ) 
devm_pci_remap_iospace int devm_pci_remap_iospace ( s#device * , const s#resource * , t#phys_addr_t ) 
devm_pci_remap_cfgspace void * devm_pci_remap_cfgspace ( s#device * , t#resource_size_t , t#resource_size_t ) 
devm_pci_remap_cfg_resource void * devm_pci_remap_cfg_resource ( s#device * , s#resource * ) 
pci_set_master void pci_set_master ( s#pci_dev * ) 
pci_clear_master void pci_clear_master ( s#pci_dev * ) 
pci_set_cacheline_size int pci_set_cacheline_size ( s#pci_dev * ) 
pci_set_mwi int pci_set_mwi ( s#pci_dev * ) 
pci_try_set_mwi int pci_try_set_mwi ( s#pci_dev * ) 
pci_clear_mwi void pci_clear_mwi ( s#pci_dev * ) 
pci_intx void pci_intx ( s#pci_dev * , int ) 
pci_intx_mask_supported t#bool pci_intx_mask_supported ( s#pci_dev * ) 
pci_check_and_mask_intx t#bool pci_check_and_mask_intx ( s#pci_dev * ) 
pci_check_and_unmask_intx t#bool pci_check_and_unmask_intx ( s#pci_dev * ) 
pci_wait_for_pending_transaction int pci_wait_for_pending_transaction ( s#pci_dev * ) 
pcie_has_flr t#bool pcie_has_flr ( s#pci_dev * ) 
pcie_flr int pcie_flr ( s#pci_dev * ) 
pci_reset_bridge_secondary_bus int pci_reset_bridge_secondary_bus ( s#pci_dev * ) 
__pci_reset_function int __pci_reset_function ( s#pci_dev * ) 
__pci_reset_function_locked int __pci_reset_function_locked ( s#pci_dev * ) 
pci_reset_function int pci_reset_function ( s#pci_dev * ) 
pci_reset_function_locked int pci_reset_function_locked ( s#pci_dev * ) 
pci_try_reset_function int pci_try_reset_function ( s#pci_dev * ) 
pci_probe_reset_slot int pci_probe_reset_slot ( s#pci_slot * ) 
pci_probe_reset_bus int pci_probe_reset_bus ( s#pci_bus * ) 
pci_reset_bus int pci_reset_bus ( s#pci_dev * ) 
pcix_get_max_mmrbc int pcix_get_max_mmrbc ( s#pci_dev * ) 
pcix_get_mmrbc int pcix_get_mmrbc ( s#pci_dev * ) 
pcix_set_mmrbc int pcix_set_mmrbc ( s#pci_dev * , int ) 
pcie_get_readrq int pcie_get_readrq ( s#pci_dev * ) 
pcie_set_readrq int pcie_set_readrq ( s#pci_dev * , int ) 
pcie_get_mps int pcie_get_mps ( s#pci_dev * ) 
pcie_set_mps int pcie_set_mps ( s#pci_dev * , int ) 
e#pcie_link_width enum pcie_link_width { PCIE_LNK_WIDTH_RESRV = 0x00 , PCIE_LNK_X1 = 0x01 , PCIE_LNK_X2 = 0x02 , PCIE_LNK_X4 = 0x04 , PCIE_LNK_X8 = 0x08 , PCIE_LNK_X12 = 0x0C , PCIE_LNK_X16 = 0x10 , PCIE_LNK_X32 = 0x20 , PCIE_LNK_WIDTH_UNKNOWN = 0xFF , } 
pcie_get_minimum_link int pcie_get_minimum_link ( s#pci_dev * , e#pci_bus_speed * , e#pcie_link_width * ) 
pcie_get_speed_cap e#pci_bus_speed pcie_get_speed_cap ( s#pci_dev * ) 
pcie_get_width_cap e#pcie_link_width pcie_get_width_cap ( s#pci_dev * ) 
pcie_print_link_status void pcie_print_link_status ( s#pci_dev * ) 
pci_select_bars int pci_select_bars ( s#pci_dev * , unsigned long ) 
pcie_bandwidth_available t#u32 pcie_bandwidth_available ( s#pci_dev * , s#pci_dev * * , e#pci_bus_speed * , e#pcie_link_width * ) 
pci_device_is_present t#bool pci_device_is_present ( s#pci_dev * ) 
pci_ignore_hotplug void pci_ignore_hotplug ( s#pci_dev * ) 
pci_fixup_cardbus void pci_fixup_cardbus ( s#pci_bus * ) 

/* drivers/pci/pci-driver.o */
s##msi_controller
s##proc_dir_entry
s##device_private
s##sock
s##vfsmount
s##posix_acl
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##workqueue_struct
s##bpf_prog_array
s##cgroup_taskset
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##pipe_inode_info
s##hd_struct
s##gendisk
s##request_queue
s##kmem_cache
s##eventfd_ctx
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##fs_pin
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_plug
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##mtd_info
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##iommu_group
s##iommu_fwspec
s##hotplug_slot
pci_add_dynid int pci_add_dynid ( s#pci_driver * , unsigned int , unsigned int , unsigned int , unsigned int , unsigned int , unsigned int , unsigned long ) 
pci_match_id const s#pci_device_id * pci_match_id ( const s#pci_device_id * , s#pci_dev * ) 
__pci_register_driver int __pci_register_driver ( s#pci_driver * , s#module * , const char * ) 
pci_unregister_driver void pci_unregister_driver ( s#pci_driver * ) 
pci_dev_driver s#pci_driver * pci_dev_driver ( const s#pci_dev * ) 
pci_dev_get s#pci_dev * pci_dev_get ( s#pci_dev * ) 
pci_dev_put void pci_dev_put ( s#pci_dev * ) 
pci_bus_type extern s#bus_type pci_bus_type 

/* drivers/pci/probe.o */
pci_root_buses extern s#list_head pci_root_buses 
no_pci_devices int no_pci_devices ( void ) 
s##device_private
s##sock
s##seq_file
s##vfsmount
s##posix_acl
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##iommu_group
s##iommu_fwspec
s##proc_dir_entry
s##platform_msi_priv_data
pci_alloc_host_bridge s#pci_host_bridge * pci_alloc_host_bridge ( t#size_t ) 
devm_pci_alloc_host_bridge s#pci_host_bridge * devm_pci_alloc_host_bridge ( s#device * , t#size_t ) 
pci_free_host_bridge void pci_free_host_bridge ( s#pci_host_bridge * ) 
pcie_update_link_speed void pcie_update_link_speed ( s#pci_bus * , t#u16 ) 
pci_add_new_bus s#pci_bus * pci_add_new_bus ( s#pci_bus * , s#pci_dev * , int ) 
pci_scan_bridge int pci_scan_bridge ( s#pci_bus * , s#pci_dev * , int , int ) 
pcie_relaxed_ordering_enabled t#bool pcie_relaxed_ordering_enabled ( s#pci_dev * ) 
pci_alloc_dev s#pci_dev * pci_alloc_dev ( s#pci_bus * ) 
pci_bus_read_dev_vendor_id t#bool pci_bus_read_dev_vendor_id ( s#pci_bus * , int , t#u32 * , int ) 
pci_scan_single_device s#pci_dev * pci_scan_single_device ( s#pci_bus * , int ) 
pci_scan_slot int pci_scan_slot ( s#pci_bus * , int ) 
pcie_bus_configure_settings void pcie_bus_configure_settings ( s#pci_bus * ) 
pci_scan_child_bus unsigned int pci_scan_child_bus ( s#pci_bus * ) 
pci_create_root_bus s#pci_bus * pci_create_root_bus ( s#device * , int , s#pci_ops * , void * , s#list_head * ) 
pci_host_probe int pci_host_probe ( s#pci_host_bridge * ) 
pci_scan_root_bus_bridge int pci_scan_root_bus_bridge ( s#pci_host_bridge * ) 
pci_scan_root_bus s#pci_bus * pci_scan_root_bus ( s#device * , int , s#pci_ops * , void * , s#list_head * ) 
pci_scan_bus s#pci_bus * pci_scan_bus ( int , s#pci_ops * , void * ) 
pci_rescan_bus unsigned int pci_rescan_bus ( s#pci_bus * ) 
pci_lock_rescan_remove void pci_lock_rescan_remove ( void ) 
pci_unlock_rescan_remove void pci_unlock_rescan_remove ( void ) 
pci_hp_add_bridge int pci_hp_add_bridge ( s#pci_dev * ) 

/* drivers/pci/remove.o */
s##proc_dir_entry
s##hotplug_slot
s##sock
s##seq_file
s##vfsmount
s##posix_acl
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##device_private
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##msi_controller
pci_remove_bus void pci_remove_bus ( s#pci_bus * ) 
pci_stop_and_remove_bus_device void pci_stop_and_remove_bus_device ( s#pci_dev * ) 
pci_stop_and_remove_bus_device_locked void pci_stop_and_remove_bus_device_locked ( s#pci_dev * ) 
pci_stop_root_bus void pci_stop_root_bus ( s#pci_bus * ) 
pci_remove_root_bus void pci_remove_root_bus ( s#pci_bus * ) 

/* drivers/pci/rom.o */
s##msi_controller
s##proc_dir_entry
s##device_private
s##sock
s##seq_file
s##vfsmount
s##posix_acl
s##module
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##compat_timespec
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##iov_iter
s##swap_info_struct
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##hotplug_slot
pci_enable_rom int pci_enable_rom ( s#pci_dev * ) 
pci_disable_rom void pci_disable_rom ( s#pci_dev * ) 
pci_map_rom void * pci_map_rom ( s#pci_dev * , t#size_t * ) 
pci_unmap_rom void pci_unmap_rom ( s#pci_dev * , void * ) 
pci_platform_rom void * pci_platform_rom ( s#pci_dev * , t#size_t * ) 

/* drivers/pci/search.o */
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##sock
s##seq_file
s##bio_vec
s##pipe_inode_info
s##poll_table_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##cred
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##mem_cgroup
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##user_namespace
s##bdi_writeback
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##device_private
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kmem_cache
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
pci_bus_sem extern s#rw_semaphore pci_bus_sem 
s##proc_dir_entry
s##hotplug_slot
s##msi_controller
pci_find_bus s#pci_bus * pci_find_bus ( int , int ) 
pci_find_next_bus s#pci_bus * pci_find_next_bus ( const s#pci_bus * ) 
pci_get_slot s#pci_dev * pci_get_slot ( s#pci_bus * , unsigned int ) 
pci_get_domain_bus_and_slot s#pci_dev * pci_get_domain_bus_and_slot ( int , unsigned int , unsigned int ) 
pci_get_subsys s#pci_dev * pci_get_subsys ( unsigned int , unsigned int , unsigned int , unsigned int , s#pci_dev * ) 
pci_get_device s#pci_dev * pci_get_device ( unsigned int , unsigned int , s#pci_dev * ) 
pci_get_class s#pci_dev * pci_get_class ( unsigned int , s#pci_dev * ) 
pci_dev_present int pci_dev_present ( const s#pci_device_id * ) 

/* drivers/pci/setup-bus.o */
s##proc_dir_entry
s##hotplug_slot
s##sock
s##seq_file
s##vfsmount
s##posix_acl
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##device_private
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##msi_controller
pci_setup_cardbus void pci_setup_cardbus ( s#pci_bus * ) 
pci_bus_size_bridges void pci_bus_size_bridges ( s#pci_bus * ) 
pci_bus_assign_resources void pci_bus_assign_resources ( const s#pci_bus * ) 
pci_bus_claim_resources void pci_bus_claim_resources ( s#pci_bus * ) 
pci_assign_unassigned_bridge_resources void pci_assign_unassigned_bridge_resources ( s#pci_dev * ) 
pci_assign_unassigned_bus_resources void pci_assign_unassigned_bus_resources ( s#pci_bus * ) 

/* drivers/pci/setup-irq.o */
s##msi_controller
s##proc_dir_entry
s##device_private
s##sock
s##seq_file
s##vfsmount
s##posix_acl
s##module
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##compat_timespec
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##iov_iter
s##swap_info_struct
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##hotplug_slot
pci_fixup_irqs void pci_fixup_irqs ( t#u8 ( * ) ( s#pci_dev * , t#u8 * ) , int ( * ) ( const s#pci_dev * , t#u8 , t#u8 ) ) 

/* drivers/pci/setup-res.o */
s##msi_controller
s##proc_dir_entry
s##device_private
s##sock
s##seq_file
s##vfsmount
s##posix_acl
s##module
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##compat_timespec
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##iov_iter
s##swap_info_struct
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##hotplug_slot
pci_claim_resource int pci_claim_resource ( s#pci_dev * , int ) 
pci_assign_resource int pci_assign_resource ( s#pci_dev * , int ) 
pci_release_resource void pci_release_resource ( s#pci_dev * , int ) 
pci_resize_resource int pci_resize_resource ( s#pci_dev * , int , int ) 

/* drivers/pci/slot.o */
s##sock
s##seq_file
s##vfsmount
s##posix_acl
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##device_private
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
pci_slots_kset extern s#kset * pci_slots_kset 
s##proc_dir_entry
s##msi_controller
s##hotplug_slot
pci_create_slot s#pci_slot * pci_create_slot ( s#pci_bus * , int , const char * , s#hotplug_slot * ) 
pci_destroy_slot void pci_destroy_slot ( s#pci_slot * ) 
pci_hp_create_module_link void pci_hp_create_module_link ( s#pci_slot * ) 
pci_hp_remove_module_link void pci_hp_remove_module_link ( s#pci_slot * ) 

/* drivers/pci/vpd.o */
pci_vpd_find_tag int pci_vpd_find_tag ( const t#u8 * , unsigned int , unsigned int , t#u8 ) 
pci_vpd_find_info_keyword int pci_vpd_find_info_keyword ( const t#u8 * , unsigned int , unsigned int , const char * ) 

/* drivers/phy/phy-core.o */
s##device_private
s##sock
s##seq_file
s##vfsmount
s##posix_acl
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##iommu_group
s##iommu_fwspec
e#phy_mode enum phy_mode { PHY_MODE_INVALID , PHY_MODE_USB_HOST , PHY_MODE_USB_DEVICE , PHY_MODE_USB_OTG , PHY_MODE_SGMII , PHY_MODE_2500SGMII , PHY_MODE_10GKR , } 
s#phy_ops struct phy_ops { int ( * init ) ( s#phy * ) ; int ( * exit ) ( s#phy * ) ; int ( * power_on ) ( s#phy * ) ; int ( * power_off ) ( s#phy * ) ; int ( * set_mode ) ( s#phy * , e#phy_mode ) ; int ( * reset ) ( s#phy * ) ; s#module * owner ; } 
s#phy_attrs struct phy_attrs { t#u32 bus_width ; } 
s##regulator
s#phy struct phy { s#device dev ; int id ; const s#phy_ops * ops ; s#mutex mutex ; int init_count ; int power_count ; s#phy_attrs attrs ; s#regulator * pwr ; } 
phy_create_lookup int phy_create_lookup ( s#phy * , const char * , const char * ) 
phy_remove_lookup void phy_remove_lookup ( s#phy * , const char * , const char * ) 
phy_pm_runtime_get int phy_pm_runtime_get ( s#phy * ) 
phy_pm_runtime_get_sync int phy_pm_runtime_get_sync ( s#phy * ) 
phy_pm_runtime_put int phy_pm_runtime_put ( s#phy * ) 
phy_pm_runtime_put_sync int phy_pm_runtime_put_sync ( s#phy * ) 
phy_pm_runtime_allow void phy_pm_runtime_allow ( s#phy * ) 
phy_pm_runtime_forbid void phy_pm_runtime_forbid ( s#phy * ) 
phy_init int phy_init ( s#phy * ) 
phy_exit int phy_exit ( s#phy * ) 
phy_power_on int phy_power_on ( s#phy * ) 
phy_power_off int phy_power_off ( s#phy * ) 
phy_set_mode int phy_set_mode ( s#phy * , e#phy_mode ) 
phy_reset int phy_reset ( s#phy * ) 
of_phy_get s#phy * of_phy_get ( s#device_node * , const char * ) 
phy_put void phy_put ( s#phy * ) 
devm_phy_put void devm_phy_put ( s#device * , s#phy * ) 
of_phy_simple_xlate s#phy * of_phy_simple_xlate ( s#device * , s#of_phandle_args * ) 
phy_get s#phy * phy_get ( s#device * , const char * ) 
phy_optional_get s#phy * phy_optional_get ( s#device * , const char * ) 
devm_phy_get s#phy * devm_phy_get ( s#device * , const char * ) 
devm_phy_optional_get s#phy * devm_phy_optional_get ( s#device * , const char * ) 
devm_of_phy_get s#phy * devm_of_phy_get ( s#device * , s#device_node * , const char * ) 
devm_of_phy_get_by_index s#phy * devm_of_phy_get_by_index ( s#device * , s#device_node * , int ) 
phy_create s#phy * phy_create ( s#device * , s#device_node * , const s#phy_ops * ) 
devm_phy_create s#phy * devm_phy_create ( s#device * , s#device_node * , const s#phy_ops * ) 
phy_destroy void phy_destroy ( s#phy * ) 
devm_phy_destroy void devm_phy_destroy ( s#device * , s#phy * ) 
s#phy_provider struct phy_provider { s#device * dev ; s#device_node * children ; s#module * owner ; s#list_head list ; s#phy * ( * of_xlate ) ( s#device * , s#of_phandle_args * ) ; } 
__of_phy_provider_register s#phy_provider * __of_phy_provider_register ( s#device * , s#device_node * , s#module * , s#phy * ( * ) ( s#device * , s#of_phandle_args * ) ) 
__devm_of_phy_provider_register s#phy_provider * __devm_of_phy_provider_register ( s#device * , s#device_node * , s#module * , s#phy * ( * ) ( s#device * , s#of_phandle_args * ) ) 
of_phy_provider_unregister void of_phy_provider_unregister ( s#phy_provider * ) 
devm_of_phy_provider_unregister void devm_of_phy_provider_unregister ( s#device * , s#phy_provider * ) 

/* drivers/pps/kapi.o */
s##sock
s##seq_file
s##vfsmount
s##posix_acl
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##fwnode_handle
s##iommu_group
s##iommu_fwspec
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s#pps_source_info struct pps_source_info { char name [ 32 ] ; char path [ 32 ] ; int mode ; void ( * echo ) ( s#pps_device * , int , void * ) ; s#module * owner ; s#device * dev ; } 
s#pps_ktime struct pps_ktime { t#__s64 sec ; t#__s32 nsec ; t#__u32 flags ; } 
s#pps_kparams struct pps_kparams { int api_version ; int mode ; s#pps_ktime assert_off_tu ; s#pps_ktime clear_off_tu ; } 
s#pps_device struct pps_device { s#pps_source_info info ; s#pps_kparams params ; t#__u32 assert_sequence ; t#__u32 clear_sequence ; s#pps_ktime assert_tu ; s#pps_ktime clear_tu ; int current_mode ; unsigned int last_ev ; t#wait_queue_head_t queue ; unsigned int id ; void const * lookup_cookie ; s#cdev cdev ; s#device * dev ; s#fasync_struct * async_queue ; t#spinlock_t lock ; } 
pps_register_source extern s#pps_device * pps_register_source ( s#pps_source_info * , int ) 
pps_unregister_source extern void pps_unregister_source ( s#pps_device * ) 
s#pps_event_time struct pps_event_time { s#timespec ts_real ; } 
pps_event extern void pps_event ( s#pps_device * , s#pps_event_time * , int , void * ) 

/* drivers/pps/pps.o */
s##sock
s##seq_file
s##vfsmount
s##posix_acl
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##fwnode_handle
s##iommu_group
s##iommu_fwspec
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##nlm_lockowner
s##nfs4_lock_state
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
pps_lookup_dev s#pps_device * pps_lookup_dev ( void const * ) 

/* drivers/ptp/ptp_clock.o */
s##sock
s##vfsmount
s##posix_acl
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##mmu_notifier_mm
s##xol_area
s##kmem_cache
s##fs_pin
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##bpf_prog_array
s##cgroup_taskset
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##robust_list_head
s##futex_pi_state
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##fwnode_handle
s##iommu_group
s##iommu_fwspec
s##ring_buffer
s##bpf_prog
s##static_key_mod
s##trace_array
s##tracer
s##trace_buffer
s##ring_buffer_iter
s##event_filter
s##ftrace_hash
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##nlm_lockowner
s##nfs4_lock_state
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s#timex struct timex { unsigned int modes ; t#__kernel_long_t offset ; t#__kernel_long_t freq ; t#__kernel_long_t maxerror ; t#__kernel_long_t esterror ; int status ; t#__kernel_long_t constant ; t#__kernel_long_t precision ; t#__kernel_long_t tolerance ; s#timeval time ; t#__kernel_long_t tick ; t#__kernel_long_t ppsfreq ; t#__kernel_long_t jitter ; int shift ; t#__kernel_long_t stabil ; t#__kernel_long_t jitcnt ; t#__kernel_long_t calcnt ; t#__kernel_long_t errcnt ; t#__kernel_long_t stbcnt ; int tai ; int : 32 ; int : 32 ; int : 32 ; int : 32 ; int : 32 ; int : 32 ; int : 32 ; int : 32 ; int : 32 ; int : 32 ; int : 32 ; } 
t#timer_t typedef t#__kernel_timer_t timer_t 
s#sigqueue struct sigqueue { s#list_head list ; int flags ; t#siginfo_t info ; s#user_struct * user ; } 
s#cpu_timer_list struct cpu_timer_list { s#list_head entry ; t#u64 expires , incr ; s#task_struct * task ; int firing ; } 
e#alarmtimer_restart enum alarmtimer_restart { ALARMTIMER_NORESTART , ALARMTIMER_RESTART , } 
e#alarmtimer_type enum alarmtimer_type { ALARM_REALTIME , ALARM_BOOTTIME , ALARM_NUMTYPE , ALARM_REALTIME_FREEZER , ALARM_BOOTTIME_FREEZER , } 
s#alarm struct alarm { s#timerqueue_node node ; s#hrtimer timer ; e#alarmtimer_restart ( * function ) ( s#alarm * , t#ktime_t ) ; e#alarmtimer_type type ; int state ; void * data ; } 
s#k_itimer struct k_itimer { s#list_head list ; s#hlist_node t_hash ; t#spinlock_t it_lock ; t#clockid_t it_clock ; t#timer_t it_id ; t#s64 it_overrun ; t#s64 it_overrun_last ; int it_requeue_pending ; int it_sigev_notify ; s#signal_struct * it_signal ; union { s#pid * it_pid ; s#task_struct * it_process ; } ; s#sigqueue * sigq ; union { struct { s#hrtimer timer ; t#ktime_t interval ; } real ; s#cpu_timer_list cpu ; struct { unsigned int clock ; unsigned int node ; unsigned long incr ; unsigned long expires ; } mmtimer ; struct { s#alarm alarmtimer ; t#ktime_t interval ; } alarm ; s#callback_head rcu ; } it ; } 
s#itimerspec struct itimerspec { s#timespec it_interval ; s#timespec it_value ; } 
s#posix_clock_operations struct posix_clock_operations { s#module * owner ; int ( * clock_adjtime ) ( s#posix_clock * , s#timex * ) ; int ( * clock_gettime ) ( s#posix_clock * , s#timespec * ) ; int ( * clock_getres ) ( s#posix_clock * , s#timespec * ) ; int ( * clock_settime ) ( s#posix_clock * , const s#timespec * ) ; int ( * timer_create ) ( s#posix_clock * , s#k_itimer * ) ; int ( * timer_delete ) ( s#posix_clock * , s#k_itimer * ) ; void ( * timer_gettime ) ( s#posix_clock * , s#k_itimer * , s#itimerspec * ) ; int ( * timer_settime ) ( s#posix_clock * , s#k_itimer * , int , s#itimerspec * , s#itimerspec * ) ; int ( * fasync ) ( s#posix_clock * , int , s#file * , int ) ; long ( * ioctl ) ( s#posix_clock * , unsigned int , unsigned long ) ; int ( * mmap ) ( s#posix_clock * , s#vm_area_struct * ) ; int ( * open ) ( s#posix_clock * , t#fmode_t ) ; t#uint ( * poll ) ( s#posix_clock * , s#file * , t#poll_table * ) ; int ( * release ) ( s#posix_clock * ) ; t#ssize_t ( * read ) ( s#posix_clock * , t#uint , char * , t#size_t ) ; } 
s#posix_clock struct posix_clock { s#posix_clock_operations ops ; s#cdev cdev ; s#kref kref ; s#rw_semaphore rwsem ; t#bool zombie ; void ( * release ) ( s#posix_clock * ) ; } 
s#ptp_extts_event struct ptp_extts_event { s#ptp_clock_time t ; unsigned int index ; unsigned int flags ; unsigned int rsv [ 2 ] ; } 
s#timestamp_event_queue struct timestamp_event_queue { s#ptp_extts_event buf [ 128 ] ; int head ; int tail ; t#spinlock_t lock ; } 
s#ptp_clock struct ptp_clock { s#posix_clock clock ; s#device * dev ; s#ptp_clock_info * info ; t#dev_t devid ; int index ; s#pps_device * pps_source ; long dialed_frequency ; s#timestamp_event_queue tsevq ; s#mutex tsevq_mux ; s#mutex pincfg_mux ; t#wait_queue_head_t tsev_wq ; int defunct ; s#device_attribute * pin_dev_attr ; s#attribute * * pin_attr ; s#attribute_group pin_attr_group ; const s#attribute_group * pin_attr_groups [ 2 ] ; } 
ptp_clock_register extern s#ptp_clock * ptp_clock_register ( s#ptp_clock_info * , s#device * ) 
ptp_clock_unregister extern int ptp_clock_unregister ( s#ptp_clock * ) 
s#ptp_clock_event struct ptp_clock_event { int type ; int index ; union { t#u64 timestamp ; s#pps_event_time pps_times ; } ; } 
ptp_clock_event extern void ptp_clock_event ( s#ptp_clock * , s#ptp_clock_event * ) 
ptp_clock_index extern int ptp_clock_index ( s#ptp_clock * ) 
ptp_find_pin int ptp_find_pin ( s#ptp_clock * , e#ptp_pin_function , unsigned int ) 

/* drivers/s390/block/dasd.o */
s##posix_acl
s##vfsmount
s##sock
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pollfd
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##device_private
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##writeback_control
s##swap_info_struct
s##kmem_cache
s##mem_cgroup
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##workqueue_struct
s##cgroup_subsys_state
s##mtd_info
s##blk_mq_ctx
s##blkcg_gq
s##blk_flush_queue
s##blk_mq_tags
s##blk_mq_alloc_data
s##blk_mq_debugfs_attr
s##blk_queue_stats
s##rq_wb
s##blk_stat_callback
s##blk_trace
s##bsg_job
s##throtl_data
s##pr_ops
s##timer_rand_state
s##disk_events
s##badblocks
s##reclaim_state
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
dasd_debug_area extern t#debug_info_t * dasd_debug_area 
s#dasd_profile_info struct dasd_profile_info { unsigned int dasd_io_reqs ; unsigned int dasd_io_sects ; unsigned int dasd_io_secs [ 32 ] ; unsigned int dasd_io_times [ 32 ] ; unsigned int dasd_io_timps [ 32 ] ; unsigned int dasd_io_time1 [ 32 ] ; unsigned int dasd_io_time2 [ 32 ] ; unsigned int dasd_io_time2ps [ 32 ] ; unsigned int dasd_io_time3 [ 32 ] ; unsigned int dasd_io_nr_req [ 32 ] ; s#timespec starttod ; unsigned int dasd_io_alias ; unsigned int dasd_io_tpm ; unsigned int dasd_read_reqs ; unsigned int dasd_read_sects ; unsigned int dasd_read_alias ; unsigned int dasd_read_tpm ; unsigned int dasd_read_secs [ 32 ] ; unsigned int dasd_read_times [ 32 ] ; unsigned int dasd_read_time1 [ 32 ] ; unsigned int dasd_read_time2 [ 32 ] ; unsigned int dasd_read_time3 [ 32 ] ; unsigned int dasd_read_nr_req [ 32 ] ; } 
s#dasd_profile struct dasd_profile { s#dentry * dentry ; s#dasd_profile_info * data ; t#spinlock_t lock ; } 
s#dasd_block struct dasd_block { s#gendisk * gdp ; s#request_queue * request_queue ; t#spinlock_t request_queue_lock ; s#blk_mq_tag_set tag_set ; s#block_device * bdev ; t#atomic_t open_count ; unsigned long blocks ; unsigned int bp_block ; unsigned int s2b_shift ; s#dasd_device * base ; s#list_head ccw_queue ; t#spinlock_t queue_lock ; t#atomic_t tasklet_scheduled ; s#tasklet_struct tasklet ; s#timer_list timer ; s#dentry * debugfs_dentry ; s#dasd_profile profile ; } 
s#dasd_queue struct dasd_queue { t#spinlock_t lock ; } 
s#cmd_scsw struct cmd_scsw { t#__u32 key : 4 ; t#__u32 sctl : 1 ; t#__u32 eswf : 1 ; t#__u32 cc : 2 ; t#__u32 fmt : 1 ; t#__u32 pfch : 1 ; t#__u32 isic : 1 ; t#__u32 alcc : 1 ; t#__u32 ssi : 1 ; t#__u32 zcc : 1 ; t#__u32 ectl : 1 ; t#__u32 pno : 1 ; t#__u32 res : 1 ; t#__u32 fctl : 3 ; t#__u32 actl : 7 ; t#__u32 stctl : 5 ; t#__u32 cpa ; t#__u32 dstat : 8 ; t#__u32 cstat : 8 ; t#__u32 count : 16 ; } 
s#tm_scsw struct tm_scsw { t#u32 key : 4 ; t#u32 : 1 ; t#u32 eswf : 1 ; t#u32 cc : 2 ; t#u32 fmt : 3 ; t#u32 x : 1 ; t#u32 q : 1 ; t#u32 : 1 ; t#u32 ectl : 1 ; t#u32 pno : 1 ; t#u32 : 1 ; t#u32 fctl : 3 ; t#u32 actl : 7 ; t#u32 stctl : 5 ; t#u32 tcw ; t#u32 dstat : 8 ; t#u32 cstat : 8 ; t#u32 fcxs : 8 ; t#u32 ifob : 1 ; t#u32 sesq : 7 ; } 
s#eadm_scsw struct eadm_scsw { t#u32 key : 4 ; t#u32 : 1 ; t#u32 eswf : 1 ; t#u32 cc : 2 ; t#u32 : 6 ; t#u32 ectl : 1 ; t#u32 : 2 ; t#u32 fctl : 3 ; t#u32 actl : 7 ; t#u32 stctl : 5 ; t#u32 aob ; t#u32 dstat : 8 ; t#u32 cstat : 8 ; t#u32 : 16 ; } 
u#scsw union scsw { s#cmd_scsw cmd ; s#tm_scsw tm ; s#eadm_scsw eadm ; } 
s#sublog struct sublog { t#__u32 res0 : 1 ; t#__u32 esf : 7 ; t#__u32 lpum : 8 ; t#__u32 arep : 1 ; t#__u32 fvf : 5 ; t#__u32 sacc : 2 ; t#__u32 termc : 2 ; t#__u32 devsc : 1 ; t#__u32 serr : 1 ; t#__u32 ioerr : 1 ; t#__u32 seqc : 3 ; } 
s#erw struct erw { t#__u32 res0 : 3 ; t#__u32 auth : 1 ; t#__u32 pvrf : 1 ; t#__u32 cpt : 1 ; t#__u32 fsavf : 1 ; t#__u32 cons : 1 ; t#__u32 scavf : 1 ; t#__u32 fsaf : 1 ; t#__u32 scnt : 6 ; t#__u32 res16 : 16 ; } 
s#esw0 struct esw0 { s#sublog sublog ; s#erw erw ; t#__u32 faddr [ 2 ] ; t#__u32 saddr ; } 
s#esw1 struct esw1 { t#__u8 zero0 ; t#__u8 lpum ; t#__u16 zero16 ; s#erw erw ; t#__u32 zeros [ 3 ] ; } 
s#esw2 struct esw2 { t#__u8 zero0 ; t#__u8 lpum ; t#__u16 dcti ; s#erw erw ; t#__u32 zeros [ 3 ] ; } 
s#esw3 struct esw3 { t#__u8 zero0 ; t#__u8 lpum ; t#__u16 res ; s#erw erw ; t#__u32 zeros [ 3 ] ; } 
s#erw_eadm struct erw_eadm { t#__u32 : 16 ; t#__u32 b : 1 ; t#__u32 r : 1 ; t#__u32 : 14 ; } 
s#esw_eadm struct esw_eadm { t#__u32 sublog ; s#erw_eadm erw ; t#__u32 : 32 ; t#__u32 : 32 ; t#__u32 : 32 ; } 
s#irb struct irb { u#scsw scsw ; union { s#esw0 esw0 ; s#esw1 esw1 ; s#esw2 esw2 ; s#esw3 esw3 ; s#esw_eadm eadm ; } esw ; t#__u8 ecw [ 32 ] ; } 
s#dasd_ccw_req struct dasd_ccw_req { unsigned int magic ; int intrc ; s#list_head devlist ; s#list_head blocklist ; s#dasd_block * block ; s#dasd_device * memdev ; s#dasd_device * startdev ; s#dasd_device * basedev ; void * cpaddr ; short retries ; unsigned char cpmode ; char status ; char lpm ; unsigned long flags ; s#dasd_queue * dq ; unsigned long starttime ; unsigned long expires ; void * data ; s#irb irb ; s#dasd_ccw_req * refers ; void * function ; void * mem_chunk ; unsigned long buildclk ; unsigned long startclk ; unsigned long stopclk ; unsigned long endclk ; void ( * callback ) ( s#dasd_ccw_req * , void * ) ; void * callback_data ; } 
s##dasd_conf_data
s#dasd_path struct dasd_path { unsigned long flags ; t#u8 cssid ; t#u8 ssid ; t#u8 chpid ; s#dasd_conf_data * conf_data ; t#atomic_t error_count ; unsigned long errorclk ; } 
s##ccw_device_private
s#ccw_device_id struct ccw_device_id { t#__u16 match_flags ; t#__u16 cu_type ; t#__u16 dev_type ; t#__u8 cu_model ; t#__u8 dev_model ; t#kernel_ulong_t driver_info ; } 
e#uc_todo enum uc_todo { UC_TODO_RETRY , UC_TODO_RETRY_ON_NEW_PATH , UC_TODO_STOP } 
e#interruption_class enum interruption_class { IRQEXT_CLK , IRQEXT_EXC , IRQEXT_EMS , IRQEXT_TMR , IRQEXT_TLA , IRQEXT_PFL , IRQEXT_DSD , IRQEXT_VRT , IRQEXT_SCP , IRQEXT_IUC , IRQEXT_CMS , IRQEXT_CMC , IRQEXT_FTP , IRQIO_CIO , IRQIO_QAI , IRQIO_DAS , IRQIO_C15 , IRQIO_C70 , IRQIO_TAP , IRQIO_VMR , IRQIO_LCS , IRQIO_CTC , IRQIO_APB , IRQIO_ADM , IRQIO_CSC , IRQIO_PCI , IRQIO_MSI , IRQIO_VIR , IRQIO_VAI , NMI_NMI , CPU_RST , NR_ARCH_IRQS } 
s#ccw_driver struct ccw_driver { s#ccw_device_id * ids ; int ( * probe ) ( s#ccw_device * ) ; void ( * remove ) ( s#ccw_device * ) ; int ( * set_online ) ( s#ccw_device * ) ; int ( * set_offline ) ( s#ccw_device * ) ; int ( * notify ) ( s#ccw_device * , int ) ; void ( * path_event ) ( s#ccw_device * , int * ) ; void ( * shutdown ) ( s#ccw_device * ) ; int ( * prepare ) ( s#ccw_device * ) ; void ( * complete ) ( s#ccw_device * ) ; int ( * freeze ) ( s#ccw_device * ) ; int ( * thaw ) ( s#ccw_device * ) ; int ( * restore ) ( s#ccw_device * ) ; e#uc_todo ( * uc_handler ) ( s#ccw_device * , s#irb * ) ; s#device_driver driver ; e#interruption_class int_class ; } 
s#ccw_device struct ccw_device { t#spinlock_t * ccwlock ; s#ccw_device_private * private ; s#ccw_device_id id ; s#ccw_driver * drv ; s#device dev ; int online ; void ( * handler ) ( s#ccw_device * , unsigned long , s#irb * ) ; } 
s#dasd_device struct dasd_device { s#dasd_block * block ; unsigned int devindex ; unsigned long flags ; unsigned short features ; s#dasd_ccw_req * eer_cqr ; s#dasd_discipline * discipline ; s#dasd_discipline * base_discipline ; void * private ; s#dasd_path path [ 8 ] ; t#__u8 opm ; int state , target ; s#mutex state_mutex ; int stopped ; t#atomic_t ref_count ; s#list_head ccw_queue ; t#spinlock_t mem_lock ; void * ccw_mem ; void * erp_mem ; s#list_head ccw_chunks ; s#list_head erp_chunks ; t#atomic_t tasklet_scheduled ; s#tasklet_struct tasklet ; s#work_struct kick_work ; s#work_struct restore_device ; s#work_struct reload_device ; s#work_struct kick_validate ; s#work_struct suc_work ; s#work_struct requeue_requests ; s#timer_list timer ; t#debug_info_t * debug_area ; s#ccw_device * cdev ; s#list_head alias_list ; unsigned long default_expires ; unsigned long default_retries ; unsigned long blk_timeout ; unsigned long path_thrhld ; unsigned long path_interval ; s#dentry * debugfs_dentry ; s#dentry * hosts_dentry ; s#dasd_profile profile ; } 
s#format_data_t struct format_data_t { unsigned int start_unit ; unsigned int stop_unit ; unsigned int blksize ; unsigned int intensity ; } 
s#format_check_t struct format_check_t { s#format_data_t expect ; unsigned int result ; unsigned int unit ; unsigned int rec ; unsigned int num_records ; unsigned int blksize ; unsigned int key_length ; } 
t#dasd_erp_fn_t typedef s#dasd_ccw_req * ( * dasd_erp_fn_t ) ( s#dasd_ccw_req * ) 
s#dasd_information2_t struct dasd_information2_t { unsigned int devno ; unsigned int real_devno ; unsigned int schid ; unsigned int cu_type : 16 ; unsigned int cu_model : 8 ; unsigned int dev_type : 16 ; unsigned int dev_model : 8 ; unsigned int open_count ; unsigned int req_queue_len ; unsigned int chanq_len ; char type [ 4 ] ; unsigned int status ; unsigned int label_block ; unsigned int FBA_layout ; unsigned int characteristics_size ; unsigned int confdata_size ; char characteristics [ 64 ] ; char configuration_data [ 256 ] ; unsigned int format ; unsigned int features ; unsigned int reserved0 ; unsigned int reserved1 ; unsigned int reserved2 ; unsigned int reserved3 ; unsigned int reserved4 ; unsigned int reserved5 ; unsigned int reserved6 ; unsigned int reserved7 ; } 
s#dasd_uid struct dasd_uid { t#__u8 type ; char vendor [ 4 ] ; char serial [ 15 ] ; t#__u16 ssid ; t#__u8 real_unit_addr ; t#__u8 base_unit_addr ; char vduit [ 33 ] ; } 
s#dasd_discipline struct dasd_discipline { s#module * owner ; char ebcname [ 8 ] ; char name [ 8 ] ; int max_blocks ; s#list_head list ; int ( * check_device ) ( s#dasd_device * ) ; void ( * uncheck_device ) ( s#dasd_device * ) ; int ( * do_analysis ) ( s#dasd_block * ) ; int ( * verify_path ) ( s#dasd_device * , t#__u8 ) ; int ( * basic_to_ready ) ( s#dasd_device * ) ; int ( * online_to_ready ) ( s#dasd_device * ) ; int ( * basic_to_known ) ( s#dasd_device * ) ; s#dasd_ccw_req * ( * build_cp ) ( s#dasd_device * , s#dasd_block * , s#request * ) ; int ( * start_IO ) ( s#dasd_ccw_req * ) ; int ( * term_IO ) ( s#dasd_ccw_req * ) ; void ( * handle_terminated_request ) ( s#dasd_ccw_req * ) ; int ( * format_device ) ( s#dasd_device * , s#format_data_t * , int ) ; int ( * check_device_format ) ( s#dasd_device * , s#format_check_t * , int ) ; int ( * free_cp ) ( s#dasd_ccw_req * , s#request * ) ; t#dasd_erp_fn_t ( * erp_action ) ( s#dasd_ccw_req * ) ; t#dasd_erp_fn_t ( * erp_postaction ) ( s#dasd_ccw_req * ) ; void ( * dump_sense ) ( s#dasd_device * , s#dasd_ccw_req * , s#irb * ) ; void ( * dump_sense_dbf ) ( s#dasd_device * , s#irb * , char * ) ; void ( * check_for_device_change ) ( s#dasd_device * , s#dasd_ccw_req * , s#irb * ) ; int ( * fill_geometry ) ( s#dasd_block * , s#hd_geometry * ) ; int ( * fill_info ) ( s#dasd_device * , s#dasd_information2_t * ) ; int ( * ioctl ) ( s#dasd_block * , unsigned int , void * ) ; int ( * freeze ) ( s#dasd_device * ) ; int ( * restore ) ( s#dasd_device * ) ; int ( * reload ) ( s#dasd_device * ) ; int ( * get_uid ) ( s#dasd_device * , s#dasd_uid * ) ; void ( * kick_validate ) ( s#dasd_device * ) ; int ( * check_attention ) ( s#dasd_device * , t#__u8 ) ; int ( * host_access_count ) ( s#dasd_device * ) ; int ( * hosts_print ) ( s#dasd_device * , s#seq_file * ) ; void ( * handle_hpf_error ) ( s#dasd_device * , s#irb * ) ; void ( * disable_hpf ) ( s#dasd_device * ) ; int ( * hpf_enabled ) ( s#dasd_device * ) ; void ( * reset_path ) ( s#dasd_device * , t#__u8 ) ; } 
dasd_diag_discipline_pointer extern s#dasd_discipline * dasd_diag_discipline_pointer 
dasd_alloc_block s#dasd_block * dasd_alloc_block ( void ) 
dasd_free_block void dasd_free_block ( s#dasd_block * ) 
dasd_kick_device void dasd_kick_device ( s#dasd_device * ) 
dasd_reload_device void dasd_reload_device ( s#dasd_device * ) 
dasd_set_target_state void dasd_set_target_state ( s#dasd_device * , int ) 
dasd_enable_device void dasd_enable_device ( s#dasd_device * ) 
dasd_smalloc_request s#dasd_ccw_req * dasd_smalloc_request ( int , int , int , s#dasd_device * , s#dasd_ccw_req * ) 
dasd_sfree_request void dasd_sfree_request ( s#dasd_ccw_req * , s#dasd_device * ) 
dasd_term_IO int dasd_term_IO ( s#dasd_ccw_req * ) 
dasd_start_IO int dasd_start_IO ( s#dasd_ccw_req * ) 
dasd_device_set_timer void dasd_device_set_timer ( s#dasd_device * , int ) 
dasd_device_clear_timer void dasd_device_clear_timer ( s#dasd_device * ) 
dasd_generic_handle_state_change void dasd_generic_handle_state_change ( s#dasd_device * ) 
dasd_int_handler void dasd_int_handler ( s#ccw_device * , unsigned long , s#irb * ) 
dasd_generic_uc_handler e#uc_todo dasd_generic_uc_handler ( s#ccw_device * , s#irb * ) 
dasd_flush_device_queue int dasd_flush_device_queue ( s#dasd_device * ) 
dasd_schedule_device_bh void dasd_schedule_device_bh ( s#dasd_device * ) 
dasd_device_set_stop_bits void dasd_device_set_stop_bits ( s#dasd_device * , int ) 
dasd_device_remove_stop_bits void dasd_device_remove_stop_bits ( s#dasd_device * , int ) 
dasd_add_request_head void dasd_add_request_head ( s#dasd_ccw_req * ) 
dasd_add_request_tail void dasd_add_request_tail ( s#dasd_ccw_req * ) 
dasd_wakeup_cb void dasd_wakeup_cb ( s#dasd_ccw_req * , void * ) 
dasd_sleep_on int dasd_sleep_on ( s#dasd_ccw_req * ) 
dasd_sleep_on_queue int dasd_sleep_on_queue ( s#list_head * ) 
dasd_sleep_on_interruptible int dasd_sleep_on_interruptible ( s#dasd_ccw_req * ) 
dasd_sleep_on_immediatly int dasd_sleep_on_immediatly ( s#dasd_ccw_req * ) 
dasd_block_set_timer void dasd_block_set_timer ( s#dasd_block * , int ) 
dasd_block_clear_timer void dasd_block_clear_timer ( s#dasd_block * ) 
dasd_schedule_block_bh void dasd_schedule_block_bh ( s#dasd_block * ) 
dasd_device_is_ro int dasd_device_is_ro ( s#dasd_device * ) 
dasd_generic_probe int dasd_generic_probe ( s#ccw_device * , s#dasd_discipline * ) 
dasd_generic_free_discipline void dasd_generic_free_discipline ( s#dasd_device * ) 
dasd_generic_remove void dasd_generic_remove ( s#ccw_device * ) 
dasd_generic_set_online int dasd_generic_set_online ( s#ccw_device * , s#dasd_discipline * ) 
dasd_generic_set_offline int dasd_generic_set_offline ( s#ccw_device * ) 
dasd_generic_last_path_gone int dasd_generic_last_path_gone ( s#dasd_device * ) 
dasd_generic_path_operational int dasd_generic_path_operational ( s#dasd_device * ) 
dasd_generic_notify int dasd_generic_notify ( s#ccw_device * , int ) 
dasd_generic_path_event void dasd_generic_path_event ( s#ccw_device * , int * ) 
dasd_generic_verify_path int dasd_generic_verify_path ( s#dasd_device * , t#__u8 ) 
dasd_schedule_requeue void dasd_schedule_requeue ( s#dasd_device * ) 
dasd_generic_pm_freeze int dasd_generic_pm_freeze ( s#ccw_device * ) 
dasd_generic_restore_device int dasd_generic_restore_device ( s#ccw_device * ) 
dasd_generic_read_dev_chars int dasd_generic_read_dev_chars ( s#dasd_device * , int , void * , int ) 
dasd_get_sense char * dasd_get_sense ( s#irb * ) 
dasd_generic_shutdown void dasd_generic_shutdown ( s#ccw_device * ) 

/* drivers/s390/block/dasd_devmap.o */
s##kmem_cache
dasd_page_cache extern s#kmem_cache * dasd_page_cache 
dasd_nopav extern int dasd_nopav 
dasd_nofcx extern int dasd_nofcx 
s##device_private
s##sock
s##seq_file
s##vfsmount
s##posix_acl
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_mq_ctx
s##blkcg_gq
s##workqueue_struct
s##blk_flush_queue
s##blk_mq_tags
s##blk_mq_alloc_data
s##blk_mq_debugfs_attr
s##blk_queue_stats
s##rq_wb
s##cgroup_subsys_state
s##blk_stat_callback
s##blk_trace
s##bsg_job
s##throtl_data
s##reclaim_state
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##swap_info_struct
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##mtd_info
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##pr_ops
s##timer_rand_state
s##disk_events
s##badblocks
s##dasd_conf_data
s##ccw_device_private
dasd_put_device_wake void dasd_put_device_wake ( s#dasd_device * ) 
dasd_set_feature int dasd_set_feature ( s#ccw_device * , int , int ) 

/* drivers/s390/block/dasd_eer.o */
s##device_private
s##sock
s##seq_file
s##vfsmount
s##posix_acl
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_mq_ctx
s##blkcg_gq
s##kmem_cache
s##workqueue_struct
s##blk_flush_queue
s##blk_mq_tags
s##blk_mq_alloc_data
s##blk_mq_debugfs_attr
s##blk_queue_stats
s##rq_wb
s##cgroup_subsys_state
s##blk_stat_callback
s##blk_trace
s##bsg_job
s##throtl_data
s##reclaim_state
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##swap_info_struct
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##mtd_info
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##pr_ops
s##timer_rand_state
s##disk_events
s##badblocks
s#dasd_ned struct dasd_ned { struct { t#__u8 identifier : 2 ; t#__u8 token_id : 1 ; t#__u8 sno_valid : 1 ; t#__u8 subst_sno : 1 ; t#__u8 recNED : 1 ; t#__u8 emuNED : 1 ; t#__u8 reserved : 1 ; } __attribute__ ( ( packed ) ) flags ; t#__u8 descriptor ; t#__u8 dev_class ; t#__u8 reserved ; t#__u8 dev_type [ 6 ] ; t#__u8 dev_model [ 3 ] ; t#__u8 HDA_manufacturer [ 3 ] ; t#__u8 HDA_location [ 2 ] ; t#__u8 HDA_seqno [ 12 ] ; t#__u8 ID ; t#__u8 unit_addr ; } 
s#dasd_gneq struct dasd_gneq { struct { t#__u8 identifier : 2 ; t#__u8 reserved : 6 ; } __attribute__ ( ( packed ) ) flags ; t#__u8 record_selector ; t#__u8 reserved [ 4 ] ; struct { t#__u8 value : 2 ; t#__u8 number : 6 ; } __attribute__ ( ( packed ) ) timeout ; t#__u8 reserved3 ; t#__u16 subsystemID ; t#__u8 reserved2 [ 22 ] ; } 
s#dasd_conf_data struct dasd_conf_data { s#dasd_ned neds [ 5 ] ; t#u8 reserved [ 64 ] ; s#dasd_gneq gneq ; } 
s##ccw_device_private
dasd_eer_write void dasd_eer_write ( s#dasd_device * , s#dasd_ccw_req * , unsigned int ) 

/* drivers/s390/block/dasd_erp.o */
s##device_private
s##sock
s##seq_file
s##vfsmount
s##posix_acl
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_mq_ctx
s##blkcg_gq
s##kmem_cache
s##workqueue_struct
s##blk_flush_queue
s##blk_mq_tags
s##blk_mq_alloc_data
s##blk_mq_debugfs_attr
s##blk_queue_stats
s##rq_wb
s##cgroup_subsys_state
s##blk_stat_callback
s##blk_trace
s##bsg_job
s##throtl_data
s##reclaim_state
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##swap_info_struct
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##mtd_info
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##pr_ops
s##timer_rand_state
s##disk_events
s##badblocks
s##dasd_conf_data
s##ccw_device_private
dasd_log_sense_dbf void dasd_log_sense_dbf ( s#dasd_ccw_req * , s#irb * ) 
dasd_default_erp_action s#dasd_ccw_req * dasd_default_erp_action ( s#dasd_ccw_req * ) 
dasd_default_erp_postaction s#dasd_ccw_req * dasd_default_erp_postaction ( s#dasd_ccw_req * ) 
dasd_alloc_erp_request s#dasd_ccw_req * dasd_alloc_erp_request ( char * , int , int , s#dasd_device * ) 
dasd_free_erp_request void dasd_free_erp_request ( s#dasd_ccw_req * , s#dasd_device * ) 
dasd_log_sense void dasd_log_sense ( s#dasd_ccw_req * , s#irb * ) 

/* drivers/s390/char/hmcdrv_ftp.o */
e#hmcdrv_ftp_cmdid enum hmcdrv_ftp_cmdid { HMCDRV_FTP_NOOP = 0 , HMCDRV_FTP_GET = 1 , HMCDRV_FTP_PUT = 2 , HMCDRV_FTP_APPEND = 3 , HMCDRV_FTP_DIR = 4 , HMCDRV_FTP_NLIST = 5 , HMCDRV_FTP_DELETE = 6 , HMCDRV_FTP_CANCEL = 7 } 
s#hmcdrv_ftp_cmdspec struct hmcdrv_ftp_cmdspec { e#hmcdrv_ftp_cmdid id ; t#loff_t ofs ; const char * fname ; void * buf ; t#size_t len ; } 
hmcdrv_ftp_do t#ssize_t hmcdrv_ftp_do ( const s#hmcdrv_ftp_cmdspec * ) 
hmcdrv_ftp_probe int hmcdrv_ftp_probe ( void ) 
hmcdrv_ftp_startup int hmcdrv_ftp_startup ( void ) 
hmcdrv_ftp_shutdown void hmcdrv_ftp_shutdown ( void ) 

/* drivers/s390/char/keyboard.o */
s##device_private
s##sock
s##seq_file
s##vfsmount
s##posix_acl
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##fwnode_handle
s##iommu_group
s##iommu_fwspec
s##proc_dir_entry
s##serial_icounter_struct
t#fn_handler_fn typedef void ( fn_handler_fn ) ( s#kbd_data * ) 
s#kbdiacruc struct kbdiacruc { unsigned int diacr , base , result ; } 
s#kbd_data struct kbd_data { s#tty_port * port ; unsigned short * * key_maps ; char * * func_table ; t#fn_handler_fn * * fn_handler ; s#kbdiacruc * accent_table ; unsigned int accent_table_size ; unsigned int diacr ; unsigned short sysrq ; } 
kbd_ioctl int kbd_ioctl ( s#kbd_data * , unsigned int , unsigned long ) 
kbd_ascebc void kbd_ascebc ( s#kbd_data * , unsigned char * ) 
kbd_free void kbd_free ( s#kbd_data * ) 
kbd_alloc s#kbd_data * kbd_alloc ( void ) 
kbd_keycode void kbd_keycode ( s#kbd_data * , unsigned int ) 

/* drivers/s390/char/raw3270.o */
s##sock
s##seq_file
s##vfsmount
s##posix_acl
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##user_struct
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##device_private
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
class3270 extern s#class * class3270 
s##raw3270
s#raw3270_fn struct raw3270_fn { int ( * activate ) ( s#raw3270_view * ) ; void ( * deactivate ) ( s#raw3270_view * ) ; void ( * intv ) ( s#raw3270_view * , s#raw3270_request * , s#irb * ) ; void ( * release ) ( s#raw3270_view * ) ; void ( * free ) ( s#raw3270_view * ) ; void ( * resize ) ( s#raw3270_view * , int , int , int ) ; } 
s#raw3270_view struct raw3270_view { s#list_head list ; t#spinlock_t lock ; t#atomic_t ref_count ; s#raw3270 * dev ; s#raw3270_fn * fn ; unsigned int model ; unsigned int rows , cols ; unsigned char * ascebc ; } 
s#ccw1 struct ccw1 { t#__u8 cmd_code ; t#__u8 flags ; t#__u16 count ; t#__u32 cda ; } 
s#raw3270_request struct raw3270_request { s#list_head list ; s#raw3270_view * view ; s#ccw1 ccw ; void * buffer ; t#size_t size ; int rescnt ; int rc ; void ( * callback ) ( s#raw3270_request * , void * ) ; void * callback_data ; } 
raw3270_request_alloc s#raw3270_request * raw3270_request_alloc ( t#size_t ) 
raw3270_request_free void raw3270_request_free ( s#raw3270_request * ) 
raw3270_request_reset void raw3270_request_reset ( s#raw3270_request * ) 
raw3270_request_set_cmd void raw3270_request_set_cmd ( s#raw3270_request * , t#u8 ) 
raw3270_request_add_data int raw3270_request_add_data ( s#raw3270_request * , void * , t#size_t ) 
raw3270_request_set_data void raw3270_request_set_data ( s#raw3270_request * , void * , t#size_t ) 
s#idal_buffer struct idal_buffer { t#size_t size ; t#size_t page_order ; void * data [ 0 ] ; } 
raw3270_request_set_idal void raw3270_request_set_idal ( s#raw3270_request * , s#idal_buffer * ) 
raw3270_buffer_address void raw3270_buffer_address ( s#raw3270 * , char * , unsigned short ) 
raw3270_add_view int raw3270_add_view ( s#raw3270_view * , s#raw3270_fn * , int ) 
raw3270_del_view void raw3270_del_view ( s#raw3270_view * ) 
raw3270_find_view s#raw3270_view * raw3270_find_view ( s#raw3270_fn * , int ) 
raw3270_activate_view int raw3270_activate_view ( s#raw3270_view * ) 
raw3270_deactivate_view void raw3270_deactivate_view ( s#raw3270_view * ) 
raw3270_start int raw3270_start ( s#raw3270_view * , s#raw3270_request * ) 
raw3270_start_locked int raw3270_start_locked ( s#raw3270_view * , s#raw3270_request * ) 
raw3270_start_irq int raw3270_start_irq ( s#raw3270_view * , s#raw3270_request * ) 
raw3270_reset int raw3270_reset ( s#raw3270_view * ) 
s#raw3270_notifier struct raw3270_notifier { s#list_head list ; void ( * create ) ( int ) ; void ( * destroy ) ( int ) ; } 
raw3270_register_notifier int raw3270_register_notifier ( s#raw3270_notifier * ) 
raw3270_unregister_notifier void raw3270_unregister_notifier ( s#raw3270_notifier * ) 
raw3270_wait_queue extern t#wait_queue_head_t raw3270_wait_queue 

/* drivers/s390/char/sclp.o */
t#sclp_cmdw_t typedef unsigned int sclp_cmdw_t 
s#sclp_req struct sclp_req { s#list_head list ; t#sclp_cmdw_t command ; void * sccb ; char status ; int start_count ; void ( * callback ) ( s#sclp_req * , void * ) ; void * callback_data ; int queue_timeout ; unsigned long queue_expires ; } 
sclp_add_request int sclp_add_request ( s#sclp_req * ) 
sclp_sync_wait void sclp_sync_wait ( void ) 
t#sccb_mask_t typedef t#u32 sccb_mask_t 
s#evbuf_header struct evbuf_header { t#u16 length ; t#u8 type ; t#u8 flags ; t#u16 _reserved ; } 
e#sclp_pm_event enum sclp_pm_event { SCLP_PM_EVENT_FREEZE , SCLP_PM_EVENT_THAW , SCLP_PM_EVENT_RESTORE , } 
s#sclp_register struct sclp_register { s#list_head list ; t#sccb_mask_t receive_mask ; t#sccb_mask_t send_mask ; t#sccb_mask_t sclp_receive_mask ; t#sccb_mask_t sclp_send_mask ; void ( * state_change_fn ) ( s#sclp_register * ) ; void ( * receiver_fn ) ( s#evbuf_header * ) ; void ( * pm_event_fn ) ( s#sclp_register * , e#sclp_pm_event ) ; int pm_event_posted ; } 
sclp_register int sclp_register ( s#sclp_register * ) 
sclp_unregister void sclp_unregister ( s#sclp_register * ) 
s#sccb_header struct sccb_header { t#u16 length ; t#u8 function_code ; t#u8 control_mask [ 3 ] ; t#u16 response_code ; } 
sclp_remove_processed int sclp_remove_processed ( s#sccb_header * ) 
sclp_deactivate int sclp_deactivate ( void ) 
sclp_reactivate int sclp_reactivate ( void ) 

/* drivers/s390/char/sclp_cpi_sys.o */
sclp_cpi_set_data int sclp_cpi_set_data ( const char * , const char * , const char * , t#u64 ) 

/* drivers/s390/char/sclp_early.o */
s#sclp_info struct sclp_info { unsigned char has_linemode : 1 ; unsigned char has_vt220 : 1 ; unsigned char has_siif : 1 ; unsigned char has_sigpif : 1 ; unsigned char has_core_type : 1 ; unsigned char has_sprp : 1 ; unsigned char has_hvs : 1 ; unsigned char has_esca : 1 ; unsigned char has_sief2 : 1 ; unsigned char has_64bscao : 1 ; unsigned char has_gpere : 1 ; unsigned char has_cmma : 1 ; unsigned char has_gsls : 1 ; unsigned char has_ib : 1 ; unsigned char has_cei : 1 ; unsigned char has_pfmfi : 1 ; unsigned char has_ibs : 1 ; unsigned char has_skey : 1 ; unsigned char has_kss : 1 ; unsigned char has_diag318 : 1 ; unsigned char has_dirq : 1 ; unsigned int ibc ; unsigned int mtid ; unsigned int mtid_cp ; unsigned int mtid_prev ; unsigned long rzm ; unsigned long rnmax ; unsigned long hamax ; unsigned int max_cores ; unsigned long hsa_size ; unsigned long facilities ; unsigned int hmfai ; } 
sclp extern s#sclp_info sclp 

/* drivers/s390/char/sclp_ocf.o */
sclp_ocf_cpc_name_copy void sclp_ocf_cpc_name_copy ( char * ) 

/* drivers/s390/char/sclp_pci.o */
sclp_pci_configure int sclp_pci_configure ( t#u32 ) 
sclp_pci_deconfigure int sclp_pci_deconfigure ( t#u32 ) 

/* drivers/s390/char/tape_34xx.o */
s##posix_acl
s##vfsmount
s##sock
s##seq_file
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##kmem_cache
s##cgroup_subsys_state
s##writeback_control
s##pipe_inode_info
s##swap_info_struct
s##device_private
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##fwnode_handle
s##iommu_group
s##iommu_fwspec
s##mem_cgroup
s##workqueue_struct
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##mtd_info
s##bdi_writeback
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
tape_34xx_dbf extern t#debug_info_t * tape_34xx_dbf 

/* drivers/s390/char/tape_3590.o */
s##posix_acl
s##vfsmount
s##sock
s##seq_file
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##kmem_cache
s##cgroup_subsys_state
s##writeback_control
s##pipe_inode_info
s##swap_info_struct
s##device_private
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##fwnode_handle
s##iommu_group
s##iommu_fwspec
s##mem_cgroup
s##workqueue_struct
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##mtd_info
s##bdi_writeback
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
tape_3590_dbf extern t#debug_info_t * tape_3590_dbf 

/* drivers/s390/char/tape_class.o */
s##sock
s##seq_file
s##vfsmount
s##posix_acl
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##fwnode_handle
s##iommu_group
s##iommu_fwspec
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s#tape_class_device struct tape_class_device { s#cdev * char_device ; s#device * class_device ; char device_name [ 32 ] ; char mode_name [ 32 ] ; } 
register_tape_dev s#tape_class_device * register_tape_dev ( s#device * , t#dev_t , const s#file_operations * , char * , char * ) 
unregister_tape_dev void unregister_tape_dev ( s#device * , s#tape_class_device * ) 

/* drivers/s390/char/tape_core.o */
s##posix_acl
s##vfsmount
s##sock
s##seq_file
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##pipe_inode_info
s##writeback_control
s##bio_vec
s##swap_info_struct
s##device_private
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##fwnode_handle
s##iommu_group
s##iommu_fwspec
s##kmem_cache
s##mem_cgroup
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
tape_core_dbf extern t#debug_info_t * tape_core_dbf 
s##ccw_device_private
tape_generic_remove extern void tape_generic_remove ( s#ccw_device * ) 
tape_generic_probe extern int tape_generic_probe ( s#ccw_device * ) 
s##tape_class_device
e#tape_request_status enum tape_request_status { TAPE_REQUEST_INIT , TAPE_REQUEST_QUEUED , TAPE_REQUEST_IN_IO , TAPE_REQUEST_DONE , TAPE_REQUEST_CANCEL , TAPE_REQUEST_LONG_BUSY , } 
e#tape_op enum tape_op { TO_BLOCK , TO_BSB , TO_BSF , TO_DSE , TO_FSB , TO_FSF , TO_LBL , TO_NOP , TO_RBA , TO_RBI , TO_RFO , TO_REW , TO_RUN , TO_WRI , TO_WTM , TO_MSEN , TO_LOAD , TO_READ_CONFIG , TO_READ_ATTMSG , TO_DIS , TO_ASSIGN , TO_UNASSIGN , TO_CRYPT_ON , TO_CRYPT_OFF , TO_KEKL_SET , TO_KEKL_QUERY , TO_RDC , TO_SIZE , } 
s#tape_request struct tape_request { s#list_head list ; s#tape_device * device ; s#ccw1 * cpaddr ; void * cpdata ; e#tape_request_status status ; int options ; int retries ; int rescnt ; void ( * callback ) ( s#tape_request * , void * ) ; void * callback_data ; e#tape_op op ; int rc ; } 
t#tape_mtop_fn typedef int ( * tape_mtop_fn ) ( s#tape_device * , int ) 
s#tape_discipline struct tape_discipline { s#module * owner ; int ( * setup_device ) ( s#tape_device * ) ; void ( * cleanup_device ) ( s#tape_device * ) ; int ( * irq ) ( s#tape_device * , s#tape_request * , s#irb * ) ; s#tape_request * ( * read_block ) ( s#tape_device * , t#size_t ) ; s#tape_request * ( * write_block ) ( s#tape_device * , t#size_t ) ; void ( * process_eov ) ( s#tape_device * ) ; int ( * ioctl_fn ) ( s#tape_device * , unsigned int , unsigned long ) ; t#tape_mtop_fn * mtop_array ; } 
e#tape_state enum tape_state { TS_UNUSED = 0 , TS_IN_USE , TS_BLKUSE , TS_INIT , TS_NOT_OPER , TS_SIZE } 
e#tape_medium_state enum tape_medium_state { MS_UNKNOWN , MS_LOADED , MS_UNLOADED , MS_SIZE } 
s#tape_char_data struct tape_char_data { s#idal_buffer * idal_buf ; int block_size ; } 
s#tape_device struct tape_device { s#list_head node ; int cdev_id ; s#ccw_device * cdev ; s#tape_class_device * nt ; s#tape_class_device * rt ; s#mutex mutex ; s#tape_discipline * discipline ; void * discdata ; long tape_generic_status ; t#wait_queue_head_t state_change_wq ; e#tape_state tape_state ; e#tape_medium_state medium_state ; unsigned char * modeset_byte ; t#atomic_t ref_count ; s#list_head req_queue ; t#wait_queue_head_t wait_queue ; int first_minor ; int required_tapemarks ; unsigned int bof ; s#tape_char_data char_data ; s#delayed_work tape_dnr ; s#timer_list lb_timeout ; } 
tape_generic_online extern int tape_generic_online ( s#tape_device * , s#tape_discipline * ) 
tape_generic_offline extern int tape_generic_offline ( s#ccw_device * ) 
tape_generic_pm_suspend extern int tape_generic_pm_suspend ( s#ccw_device * ) 
tape_put_device extern void tape_put_device ( s#tape_device * ) 
tape_get_device extern s#tape_device * tape_get_device ( s#tape_device * ) 
tape_state_verbose extern const char * tape_state_verbose [ ] 
tape_op_verbose extern const char * tape_op_verbose [ ] 
tape_state_set extern void tape_state_set ( s#tape_device * , e#tape_state ) 
tape_med_state_set extern void tape_med_state_set ( s#tape_device * , e#tape_medium_state ) 
tape_alloc_request extern s#tape_request * tape_alloc_request ( int , int ) 
tape_free_request extern void tape_free_request ( s#tape_request * ) 
tape_dump_sense_dbf extern void tape_dump_sense_dbf ( s#tape_device * , s#tape_request * , s#irb * ) 
tape_do_io extern int tape_do_io ( s#tape_device * , s#tape_request * ) 
tape_do_io_async extern int tape_do_io_async ( s#tape_device * , s#tape_request * ) 
tape_do_io_interruptible extern int tape_do_io_interruptible ( s#tape_device * , s#tape_request * ) 
tape_cancel_io extern int tape_cancel_io ( s#tape_device * , s#tape_request * ) 
tape_mtop extern int tape_mtop ( s#tape_device * , int , int ) 

/* drivers/s390/char/tape_std.o */
s##ccw_device_private
s##device_private
s##sock
s##seq_file
s##vfsmount
s##posix_acl
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##kmem_cache
s##cgroup_subsys_state
s##workqueue_struct
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##swap_info_struct
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##mtd_info
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##fwnode_handle
s##subsys_private
s##iommu_group
s##iommu_fwspec
s##iommu_ops
s##driver_private
s##tape_class_device
tape_std_assign int tape_std_assign ( s#tape_device * ) 
tape_std_unassign int tape_std_unassign ( s#tape_device * ) 
s#display_struct struct display_struct { char cntrl ; char message1 [ 8 ] ; char message2 [ 8 ] ; } 
tape_std_display int tape_std_display ( s#tape_device * , s#display_struct * ) 
tape_std_read_block_id int tape_std_read_block_id ( s#tape_device * , t#__u64 * ) 
tape_std_mtload int tape_std_mtload ( s#tape_device * , int ) 
tape_std_mtsetblk int tape_std_mtsetblk ( s#tape_device * , int ) 
tape_std_mtreset int tape_std_mtreset ( s#tape_device * , int ) 
tape_std_mtfsf int tape_std_mtfsf ( s#tape_device * , int ) 
tape_std_mtfsr int tape_std_mtfsr ( s#tape_device * , int ) 
tape_std_mtbsr int tape_std_mtbsr ( s#tape_device * , int ) 
tape_std_mtweof int tape_std_mtweof ( s#tape_device * , int ) 
tape_std_mtbsfm int tape_std_mtbsfm ( s#tape_device * , int ) 
tape_std_mtbsf int tape_std_mtbsf ( s#tape_device * , int ) 
tape_std_mtfsfm int tape_std_mtfsfm ( s#tape_device * , int ) 
tape_std_mtrew int tape_std_mtrew ( s#tape_device * , int ) 
tape_std_mtoffl int tape_std_mtoffl ( s#tape_device * , int ) 
tape_std_mtnop int tape_std_mtnop ( s#tape_device * , int ) 
tape_std_mteom int tape_std_mteom ( s#tape_device * , int ) 
tape_std_mtreten int tape_std_mtreten ( s#tape_device * , int ) 
tape_std_mterase int tape_std_mterase ( s#tape_device * , int ) 
tape_std_mtunload int tape_std_mtunload ( s#tape_device * , int ) 
tape_std_mtcompression int tape_std_mtcompression ( s#tape_device * , int ) 
tape_std_read_block s#tape_request * tape_std_read_block ( s#tape_device * , t#size_t ) 
tape_std_read_backward void tape_std_read_backward ( s#tape_device * , s#tape_request * ) 
tape_std_write_block s#tape_request * tape_std_write_block ( s#tape_device * , t#size_t ) 
tape_std_process_eov void tape_std_process_eov ( s#tape_device * ) 

/* drivers/s390/cio/airq.o */
s#airq_struct struct airq_struct { s#hlist_node list ; void ( * handler ) ( s#airq_struct * , t#bool ) ; t#u8 * lsi_ptr ; t#u8 lsi_mask ; t#u8 isc ; t#u8 flags ; } 
register_adapter_interrupt int register_adapter_interrupt ( s#airq_struct * ) 
unregister_adapter_interrupt void unregister_adapter_interrupt ( s#airq_struct * ) 
airq_iv_create s#airq_iv * airq_iv_create ( unsigned long , unsigned long ) 
airq_iv_release void airq_iv_release ( s#airq_iv * ) 
airq_iv_alloc unsigned long airq_iv_alloc ( s#airq_iv * , unsigned long ) 
airq_iv_free void airq_iv_free ( s#airq_iv * , unsigned long , unsigned long ) 
airq_iv_scan unsigned long airq_iv_scan ( s#airq_iv * , unsigned long , unsigned long ) 

/* drivers/s390/cio/ccwgroup.o */
s##device_private
s##sock
s##seq_file
s##vfsmount
s##posix_acl
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##fwnode_handle
s##iommu_group
s##iommu_fwspec
s#subchannel_id struct subchannel_id { t#__u32 cssid : 8 ; t#__u32 : 4 ; t#__u32 m : 1 ; t#__u32 ssid : 2 ; t#__u32 one : 1 ; t#__u32 sch_no : 16 ; } 
s#pmcw struct pmcw { t#u32 intparm ; t#u32 qf : 1 ; t#u32 w : 1 ; t#u32 isc : 3 ; t#u32 res5 : 3 ; t#u32 ena : 1 ; t#u32 lm : 2 ; t#u32 mme : 2 ; t#u32 mp : 1 ; t#u32 tf : 1 ; t#u32 dnv : 1 ; t#u32 dev : 16 ; t#u8 lpm ; t#u8 pnom ; t#u8 lpum ; t#u8 pim ; t#u16 mbi ; t#u8 pom ; t#u8 pam ; t#u8 chpid [ 8 ] ; t#u32 unused1 : 8 ; t#u32 st : 3 ; t#u32 unused2 : 18 ; t#u32 mbfc : 1 ; t#u32 xmwme : 1 ; t#u32 csense : 1 ; } 
s#schib struct schib { s#pmcw pmcw ; u#scsw scsw ; t#__u64 mba ; t#__u8 mda [ 4 ] ; } 
s#chp_id struct chp_id { t#__u8 reserved1 ; t#__u8 cssid ; t#__u8 reserved2 ; t#__u8 id ; } 
s#chsc_ssd_info struct chsc_ssd_info { t#u8 path_mask ; t#u8 fla_valid_mask ; s#chp_id chpid [ 8 ] ; t#u16 fla [ 8 ] ; } 
s#css_device_id struct css_device_id { t#__u8 match_flags ; t#__u8 type ; t#kernel_ulong_t driver_data ; } 
s##chp_link
s#css_driver struct css_driver { s#css_device_id * subchannel_type ; s#device_driver drv ; void ( * irq ) ( s#subchannel * ) ; int ( * chp_event ) ( s#subchannel * , s#chp_link * , int ) ; int ( * sch_event ) ( s#subchannel * , int ) ; int ( * probe ) ( s#subchannel * ) ; int ( * remove ) ( s#subchannel * ) ; void ( * shutdown ) ( s#subchannel * ) ; int ( * prepare ) ( s#subchannel * ) ; void ( * complete ) ( s#subchannel * ) ; int ( * freeze ) ( s#subchannel * ) ; int ( * thaw ) ( s#subchannel * ) ; int ( * restore ) ( s#subchannel * ) ; int ( * settle ) ( void ) ; } 
e#sch_todo enum sch_todo { SCH_TODO_NOTHING , SCH_TODO_EVAL , SCH_TODO_UNREG , } 
s#schib_config struct schib_config { t#u64 mba ; t#u32 intparm ; t#u16 mbi ; t#u32 isc : 3 ; t#u32 ena : 1 ; t#u32 mme : 2 ; t#u32 mp : 1 ; t#u32 csense : 1 ; t#u32 mbfc : 1 ; } 
s#subchannel struct subchannel { s#subchannel_id schid ; t#spinlock_t * lock ; s#mutex reg_mutex ; enum { SUBCHANNEL_TYPE_IO = 0 , SUBCHANNEL_TYPE_CHSC = 1 , SUBCHANNEL_TYPE_MSG = 2 , SUBCHANNEL_TYPE_ADM = 3 , } st ; t#__u8 vpm ; t#__u8 lpm ; t#__u8 opm ; s#schib schib ; int isc ; s#chsc_ssd_info ssd_info ; s#device dev ; s#css_driver * driver ; e#sch_todo todo ; s#work_struct todo_work ; s#schib_config config ; } 
e#io_status enum io_status { IO_DONE , IO_RUNNING , IO_STATUS_ERROR , IO_PATH_ERROR , IO_REJECTED , IO_KILLED } 
s#ccw_request struct ccw_request { s#ccw1 * cp ; unsigned long timeout ; t#u16 maxretries ; t#u8 lpm ; int ( * check ) ( s#ccw_device * , void * ) ; e#io_status ( * filter ) ( s#ccw_device * , void * , s#irb * , e#io_status ) ; void ( * callback ) ( s#ccw_device * , void * , int ) ; void * data ; unsigned int singlepath : 1 ; unsigned int cancel : 1 ; unsigned int done : 1 ; t#u16 mask ; t#u16 retries ; int drc ; } 
s##qdio_irq
s#ciw struct ciw { t#__u32 et : 2 ; t#__u32 reserved : 2 ; t#__u32 ct : 4 ; t#__u32 cmd : 8 ; t#__u32 count : 16 ; } 
s#senseid struct senseid { t#u8 reserved ; t#u16 cu_type ; t#u8 cu_model ; t#u16 dev_type ; t#u8 dev_model ; t#u8 unused ; s#ciw ciw [ 8 ] ; } 
s#path_state struct path_state { t#__u8 state1 : 2 ; t#__u8 state2 : 2 ; t#__u8 state3 : 1 ; t#__u8 resvd : 3 ; } 
s#extended_cssid struct extended_cssid { t#u8 version ; t#u8 cssid ; } 
s#pgid struct pgid { union { t#__u8 fc ; s#path_state ps ; } __attribute__ ( ( packed ) ) inf ; union { t#__u32 cpu_addr : 16 ; s#extended_cssid ext_cssid ; } __attribute__ ( ( packed ) ) pgid_high ; t#__u32 cpu_id : 24 ; t#__u32 cpu_model : 16 ; t#__u32 tod_high ; } 
e#cdev_todo enum cdev_todo { CDEV_TODO_NOTHING , CDEV_TODO_ENABLE_CMF , CDEV_TODO_REBIND , CDEV_TODO_REGISTER , CDEV_TODO_UNREG , CDEV_TODO_UNREG_EVAL , } 
s#ccw_device_private struct ccw_device_private { s#ccw_device * cdev ; s#subchannel * sch ; int state ; t#atomic_t onoff ; s#ccw_dev_id dev_id ; s#ccw_request req ; int iretry ; t#u8 pgid_valid_mask ; t#u8 pgid_todo_mask ; t#u8 pgid_reset_mask ; t#u8 path_noirq_mask ; t#u8 path_notoper_mask ; t#u8 path_gone_mask ; t#u8 path_new_mask ; struct { unsigned int fast : 1 ; unsigned int repall : 1 ; unsigned int pgroup : 1 ; unsigned int force : 1 ; unsigned int mpath : 1 ; } __attribute__ ( ( packed ) ) options ; struct { unsigned int esid : 1 ; unsigned int dosense : 1 ; unsigned int doverify : 1 ; unsigned int donotify : 1 ; unsigned int recog_done : 1 ; unsigned int fake_irb : 2 ; unsigned int resuming : 1 ; unsigned int pgroup : 1 ; unsigned int mpath : 1 ; unsigned int pgid_unknown : 1 ; unsigned int initialized : 1 ; } __attribute__ ( ( packed ) ) flags ; unsigned long intparm ; s#qdio_irq * qdio_data ; s#irb irb ; int async_kill_io_rc ; s#senseid senseid ; s#pgid pgid [ 8 ] ; s#ccw1 iccws [ 2 ] ; s#work_struct todo_work ; e#cdev_todo todo ; t#wait_queue_head_t wait_q ; s#timer_list timer ; void * cmb ; s#list_head cmb_list ; t#u64 cmb_start_time ; void * cmb_wait ; e#interruption_class int_class ; } 
s#ccwgroup_device struct ccwgroup_device { enum { CCWGROUP_OFFLINE , CCWGROUP_ONLINE , } state ; t#atomic_t onoff ; s#mutex reg_mutex ; unsigned int count ; s#device dev ; s#work_struct ungroup_work ; s#ccw_device * cdev [ 0 ] ; } 
ccwgroup_set_online extern int ccwgroup_set_online ( s#ccwgroup_device * ) 
ccwgroup_set_offline extern int ccwgroup_set_offline ( s#ccwgroup_device * ) 
s#ccwgroup_driver struct ccwgroup_driver { int ( * setup ) ( s#ccwgroup_device * ) ; void ( * remove ) ( s#ccwgroup_device * ) ; int ( * set_online ) ( s#ccwgroup_device * ) ; int ( * set_offline ) ( s#ccwgroup_device * ) ; void ( * shutdown ) ( s#ccwgroup_device * ) ; int ( * prepare ) ( s#ccwgroup_device * ) ; void ( * complete ) ( s#ccwgroup_device * ) ; int ( * freeze ) ( s#ccwgroup_device * ) ; int ( * thaw ) ( s#ccwgroup_device * ) ; int ( * restore ) ( s#ccwgroup_device * ) ; s#device_driver driver ; s#ccw_driver * ccw_driver ; } 
ccwgroup_create_dev int ccwgroup_create_dev ( s#device * , s#ccwgroup_driver * , int , const char * ) 
dev_is_ccwgroup t#bool dev_is_ccwgroup ( s#device * ) 
ccwgroup_driver_register extern int ccwgroup_driver_register ( s#ccwgroup_driver * ) 
ccwgroup_driver_unregister extern void ccwgroup_driver_unregister ( s#ccwgroup_driver * ) 
ccwgroup_probe_ccwdev extern int ccwgroup_probe_ccwdev ( s#ccw_device * ) 
ccwgroup_remove_ccwdev extern void ccwgroup_remove_ccwdev ( s#ccw_device * ) 

/* drivers/s390/cio/chp.o */
s##device_private
s##sock
s##seq_file
s##vfsmount
s##posix_acl
s##module
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##compat_timespec
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##mem_cgroup
s##uprobe
s##gs_cb
s##iov_iter
s##swap_info_struct
s##dev_pagemap
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##fwnode_handle
s##iommu_group
s##iommu_fwspec
s#chp_link struct chp_link { s#chp_id chpid ; t#u32 fla_mask ; t#u16 fla ; } 
chp_get_sch_opm t#u8 chp_get_sch_opm ( s#subchannel * ) 
chp_ssd_get_mask int chp_ssd_get_mask ( s#chsc_ssd_info * , s#chp_link * ) 

/* drivers/s390/cio/chsc.o */
chsc_error_from_response int chsc_error_from_response ( int ) 
s#chsc_header struct chsc_header { t#__u16 length ; t#__u16 code ; } 
s#qdio_ssqd_desc struct qdio_ssqd_desc { t#u8 flags ; t#u8 : 8 ; t#u16 sch ; t#u8 qfmt ; t#u8 parm ; t#u8 qdioac1 ; t#u8 sch_class ; t#u8 pcnt ; t#u8 icnt ; t#u8 : 8 ; t#u8 ocnt ; t#u8 : 8 ; t#u8 mbccnt ; t#u16 qdioac2 ; t#u64 sch_token ; t#u8 mro ; t#u8 mri ; t#u16 qdioac3 ; t#u16 : 16 ; t#u8 : 8 ; t#u8 mmwc ; } 
s#chsc_ssqd_area struct chsc_ssqd_area { s#chsc_header request ; t#u16 : 10 ; t#u8 ssid : 2 ; t#u8 fmt : 4 ; t#u16 first_sch ; t#u16 : 16 ; t#u16 last_sch ; t#u32 : 32 ; s#chsc_header response ; t#u32 : 32 ; s#qdio_ssqd_desc qdio_ssqd ; } 
chsc_ssqd int chsc_ssqd ( s#subchannel_id , s#chsc_ssqd_area * ) 
s#chsc_scssc_area struct chsc_scssc_area { s#chsc_header request ; t#u16 operation_code ; t#u16 : 16 ; t#u32 : 32 ; t#u32 : 32 ; t#u64 summary_indicator_addr ; t#u64 subchannel_indicator_addr ; t#u32 ks : 4 ; t#u32 kc : 4 ; t#u32 : 21 ; t#u32 isc : 3 ; t#u32 word_with_d_bit ; t#u32 : 32 ; s#subchannel_id schid ; t#u32 reserved [ 1004 ] ; s#chsc_header response ; t#u32 : 32 ; } 
chsc_sadc int chsc_sadc ( s#subchannel_id , s#chsc_scssc_area * , t#u64 , t#u64 ) 
chsc_determine_channel_path_desc int chsc_determine_channel_path_desc ( s#chp_id , int , int , int , int , void * ) 
s#css_general_char struct css_general_char { t#u64 : 12 ; t#u32 dynio : 1 ; t#u32 : 4 ; t#u32 eadm : 1 ; t#u32 : 23 ; t#u32 aif : 1 ; t#u32 : 3 ; t#u32 mcss : 1 ; t#u32 fcs : 1 ; t#u32 : 1 ; t#u32 ext_mb : 1 ; t#u32 : 7 ; t#u32 aif_tdd : 1 ; t#u32 : 1 ; t#u32 qebsm : 1 ; t#u32 : 8 ; t#u32 aif_osa : 1 ; t#u32 : 12 ; t#u32 eadm_rf : 1 ; t#u32 : 1 ; t#u32 cib : 1 ; t#u32 : 5 ; t#u32 fcx : 1 ; t#u32 : 19 ; t#u32 alt_ssi : 1 ; t#u32 : 1 ; t#u32 narf : 1 ; t#u32 : 12 ; t#u32 util_str : 1 ; } 
css_general_characteristics extern s#css_general_char css_general_characteristics 
s#css_chsc_char struct css_chsc_char { t#u64 res ; t#u64 : 20 ; t#u32 secm : 1 ; t#u32 : 1 ; t#u32 scmc : 1 ; t#u32 : 20 ; t#u32 scssc : 1 ; t#u32 scsscf : 1 ; t#u32 : 7 ; t#u32 pnso : 1 ; t#u32 : 11 ; } 
css_chsc_characteristics extern s#css_chsc_char css_chsc_characteristics 
chsc_siosl int chsc_siosl ( s#subchannel_id ) 
s#sale struct sale { t#u64 sa ; t#u32 p : 4 ; t#u32 op_state : 4 ; t#u32 data_state : 4 ; t#u32 rank : 4 ; t#u32 r : 1 ; t#u32 : 7 ; t#u32 rid : 8 ; t#u32 : 32 ; } 
s#chsc_scm_info struct chsc_scm_info { s#chsc_header request ; t#u32 : 32 ; t#u64 reqtok ; t#u32 reserved1 [ 4 ] ; s#chsc_header response ; t#u64 : 56 ; t#u8 rq ; t#u32 mbc ; t#u64 msa ; t#u16 is ; t#u16 mmc ; t#u32 mci ; t#u64 nr_scm_ini ; t#u64 nr_scm_unini ; t#u32 reserved2 [ 10 ] ; t#u64 restok ; s#sale scmal [ 248 ] ; } 
chsc_scm_info int chsc_scm_info ( s#chsc_scm_info * , t#u64 ) 
s#chsc_brinfo_resume_token struct chsc_brinfo_resume_token { t#u64 t1 ; t#u64 t2 ; } 
s#chsc_brinfo_naihdr struct chsc_brinfo_naihdr { s#chsc_brinfo_resume_token resume_token ; t#u32 : 32 ; t#u32 instance ; t#u32 : 24 ; t#u8 naids ; t#u32 reserved [ 3 ] ; } 
s#qdio_brinfo_entry_l3_ipv6 struct qdio_brinfo_entry_l3_ipv6 { t#u64 nit ; struct { unsigned char _s6_addr [ 16 ] ; } addr ; } 
s#qdio_brinfo_entry_l3_ipv4 struct qdio_brinfo_entry_l3_ipv4 { t#u64 nit ; struct { t#uint32_t _s_addr ; } addr ; } 
s#qdio_brinfo_entry_l2 struct qdio_brinfo_entry_l2 { t#u64 nit ; struct { t#u8 mac [ 6 ] ; t#u16 lnid ; } addr_lnid ; } 
s#chsc_pnso_area struct chsc_pnso_area { s#chsc_header request ; t#u8 : 2 ; t#u8 m : 1 ; t#u8 : 5 ; t#u8 : 2 ; t#u8 ssid : 2 ; t#u8 fmt : 4 ; t#u16 sch ; t#u8 : 8 ; t#u8 cssid ; t#u16 : 16 ; t#u8 oc ; t#u32 : 24 ; s#chsc_brinfo_resume_token resume_token ; t#u32 n : 1 ; t#u32 : 31 ; t#u32 reserved [ 3 ] ; s#chsc_header response ; t#u32 : 32 ; s#chsc_brinfo_naihdr naihdr ; union { s#qdio_brinfo_entry_l3_ipv6 l3_ipv6 [ 0 ] ; s#qdio_brinfo_entry_l3_ipv4 l3_ipv4 [ 0 ] ; s#qdio_brinfo_entry_l2 l2 [ 0 ] ; } entries ; } 
chsc_pnso_brinfo int chsc_pnso_brinfo ( s#subchannel_id , s#chsc_pnso_area * , s#chsc_brinfo_resume_token , int ) 

/* drivers/s390/cio/cio.o */
cio_irb extern __attribute__ ( ( section ( ".data..percpu" "" ) ) ) __typeof__ ( s#irb ) cio_irb 
s##device_private
s##sock
s##seq_file
s##vfsmount
s##posix_acl
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##kmem_cache
s##fs_pin
s##ucounts
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##cgroup_namespace
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
cio_start_key extern int cio_start_key ( s#subchannel * , s#ccw1 * , t#__u8 , t#__u8 ) 
cio_start extern int cio_start ( s#subchannel * , s#ccw1 * , t#__u8 ) 
cio_resume extern int cio_resume ( s#subchannel * ) 
cio_halt extern int cio_halt ( s#subchannel * ) 
cio_clear extern int cio_clear ( s#subchannel * ) 
cio_cancel extern int cio_cancel ( s#subchannel * ) 
cio_cancel_halt_clear extern int cio_cancel_halt_clear ( s#subchannel * , int * ) 
cio_commit_config extern int cio_commit_config ( s#subchannel * ) 
cio_update_schib extern int cio_update_schib ( s#subchannel * ) 
cio_enable_subchannel extern int cio_enable_subchannel ( s#subchannel * , t#u32 ) 
cio_disable_subchannel extern int cio_disable_subchannel ( s#subchannel * ) 
s#tcw struct tcw { t#u32 format : 2 ; t#u32 : 6 ; t#u32 flags : 24 ; t#u32 : 8 ; t#u32 tccbl : 6 ; t#u32 r : 1 ; t#u32 w : 1 ; t#u32 : 16 ; t#u64 output ; t#u64 input ; t#u64 tsb ; t#u64 tccb ; t#u32 output_count ; t#u32 input_count ; t#u32 : 32 ; t#u32 : 32 ; t#u32 : 32 ; t#u32 intrg ; } 
cio_tm_start_key int cio_tm_start_key ( s#subchannel * , s#tcw * , t#u8 , t#u8 ) 
cio_tm_intrg int cio_tm_intrg ( s#subchannel * ) 

/* drivers/s390/cio/cmf.o */
s##device_private
s##sock
s##seq_file
s##file
s##vm_operations_struct
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##compat_timespec
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##pipe_inode_info
s##address_space
s##dev_pagemap
s##kmem_cache
s##mem_cgroup
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##kernfs_open_node
s##kernfs_iattrs
s##module
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##chp_link
s##qdio_irq
enable_cmf extern int enable_cmf ( s#ccw_device * ) 
disable_cmf extern int disable_cmf ( s#ccw_device * ) 
cmf_read extern t#u64 cmf_read ( s#ccw_device * , int ) 
s#cmbdata struct cmbdata { t#__u64 size ; t#__u64 elapsed_time ; t#__u64 ssch_rsch_count ; t#__u64 sample_count ; t#__u64 device_connect_time ; t#__u64 function_pending_time ; t#__u64 device_disconnect_time ; t#__u64 control_unit_queuing_time ; t#__u64 device_active_only_time ; t#__u64 device_busy_time ; t#__u64 initial_command_response_time ; } 
cmf_readall extern int cmf_readall ( s#ccw_device * , s#cmbdata * ) 

/* drivers/s390/cio/css.o */
s##device_private
s##sock
s##vfsmount
s##posix_acl
s##module
s##workqueue_struct
s##bpf_prog_array
s##cgroup_taskset
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##iov_iter
s##hd_struct
s##gendisk
s##request_queue
s##kmem_cache
s##eventfd_ctx
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##mmu_notifier_mm
s##xol_area
s##compat_timespec
s##pollfd
s##pid_namespace
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_plug
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##mtd_info
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##fwnode_handle
s##iommu_group
s##iommu_fwspec
css_sch_device_unregister extern void css_sch_device_unregister ( s#subchannel * ) 
css_sch_is_valid int css_sch_is_valid ( s#schib * ) 
css_sched_sch_todo void css_sched_sch_todo ( s#subchannel * , e#sch_todo ) 
css_schedule_reprobe extern void css_schedule_reprobe ( void ) 
css_driver_register extern int css_driver_register ( s#css_driver * ) 
css_driver_unregister extern void css_driver_unregister ( s#css_driver * ) 

/* drivers/s390/cio/device.o */
s##device_private
s##sock
s##seq_file
s##vfsmount
s##posix_acl
s##module
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##compat_timespec
s##pollfd
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##mem_cgroup
s##uprobe
s##gs_cb
s##iov_iter
s##swap_info_struct
s##dev_pagemap
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##fwnode_handle
s##iommu_group
s##iommu_fwspec
s##qdio_irq
get_ccwdev_by_dev_id s#ccw_device * get_ccwdev_by_dev_id ( s#ccw_dev_id * ) 
ccw_device_force_console extern int ccw_device_force_console ( s#ccw_device * ) 
ccw_device_siosl int ccw_device_siosl ( s#ccw_device * ) 
ccw_device_set_online extern int ccw_device_set_online ( s#ccw_device * ) 
ccw_device_set_offline extern int ccw_device_set_offline ( s#ccw_device * ) 
ccw_driver_register extern int ccw_driver_register ( s#ccw_driver * ) 
ccw_driver_unregister extern void ccw_driver_unregister ( s#ccw_driver * ) 
get_ccwdev_by_busid extern s#ccw_device * get_ccwdev_by_busid ( s#ccw_driver * , const char * ) 

/* drivers/s390/cio/device_fsm.o */
s##device_private
s##sock
s##seq_file
s##vfsmount
s##posix_acl
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##fwnode_handle
s##iommu_group
s##iommu_fwspec
s##qdio_irq
ccw_device_set_timeout void ccw_device_set_timeout ( s#ccw_device * , int ) 

/* drivers/s390/cio/device_ops.o */
s##device_private
s##sock
s##seq_file
s##vfsmount
s##posix_acl
s##module
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##compat_timespec
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##mem_cgroup
s##uprobe
s##gs_cb
s##iov_iter
s##swap_info_struct
s##dev_pagemap
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##fwnode_handle
s##iommu_group
s##iommu_fwspec
s##qdio_irq
ccw_device_is_pathgroup int ccw_device_is_pathgroup ( s#ccw_device * ) 
ccw_device_is_multipath int ccw_device_is_multipath ( s#ccw_device * ) 
ccw_device_get_id extern void ccw_device_get_id ( s#ccw_device * , s#ccw_dev_id * ) 
ccw_device_tm_start_timeout_key int ccw_device_tm_start_timeout_key ( s#ccw_device * , s#tcw * , unsigned long , t#u8 , t#u8 , int ) 
ccw_device_tm_start_key int ccw_device_tm_start_key ( s#ccw_device * , s#tcw * , unsigned long , t#u8 , t#u8 ) 
ccw_device_tm_start int ccw_device_tm_start ( s#ccw_device * , s#tcw * , unsigned long , t#u8 ) 
ccw_device_tm_start_timeout int ccw_device_tm_start_timeout ( s#ccw_device * , s#tcw * , unsigned long , t#u8 , int ) 
ccw_device_get_mdc int ccw_device_get_mdc ( s#ccw_device * , t#u8 ) 
ccw_device_tm_intrg int ccw_device_tm_intrg ( s#ccw_device * ) 
ccw_device_get_schid extern void ccw_device_get_schid ( s#ccw_device * , s#subchannel_id * ) 
ccw_device_dma_zalloc extern void * ccw_device_dma_zalloc ( s#ccw_device * , t#size_t ) 
ccw_device_dma_free extern void ccw_device_dma_free ( s#ccw_device * , void * , t#size_t ) 
ccw_device_set_options_mask extern int ccw_device_set_options_mask ( s#ccw_device * , unsigned long ) 
ccw_device_set_options extern int ccw_device_set_options ( s#ccw_device * , unsigned long ) 
ccw_device_clear_options extern void ccw_device_clear_options ( s#ccw_device * , unsigned long ) 
ccw_device_clear extern int ccw_device_clear ( s#ccw_device * , unsigned long ) 
ccw_device_halt extern int ccw_device_halt ( s#ccw_device * , unsigned long ) 
ccw_device_resume extern int ccw_device_resume ( s#ccw_device * ) 
ccw_device_start_timeout extern int ccw_device_start_timeout ( s#ccw_device * , s#ccw1 * , unsigned long , t#__u8 , unsigned long , int ) 
ccw_device_start extern int ccw_device_start ( s#ccw_device * , s#ccw1 * , unsigned long , t#__u8 , unsigned long ) 
ccw_device_start_timeout_key extern int ccw_device_start_timeout_key ( s#ccw_device * , s#ccw1 * , unsigned long , t#__u8 , t#__u8 , unsigned long , int ) 
ccw_device_start_key extern int ccw_device_start_key ( s#ccw_device * , s#ccw1 * , unsigned long , t#__u8 , t#__u8 , unsigned long ) 
ccw_device_get_ciw extern s#ciw * ccw_device_get_ciw ( s#ccw_device * , t#__u32 ) 
ccw_device_get_path_mask extern t#__u8 ccw_device_get_path_mask ( s#ccw_device * ) 
s#channel_path_desc_fmt0 struct channel_path_desc_fmt0 { t#u8 flags ; t#u8 lsn ; t#u8 desc ; t#u8 chpid ; t#u8 swla ; t#u8 zeroes ; t#u8 chla ; t#u8 chpp ; } 
ccw_device_get_chp_desc s#channel_path_desc_fmt0 * ccw_device_get_chp_desc ( s#ccw_device * , int ) 
ccw_device_get_util_str t#u8 * ccw_device_get_util_str ( s#ccw_device * , int ) 

/* drivers/s390/cio/eadm_sch.o */
s#arqb struct arqb { t#u64 data ; t#u16 fmt : 4 ; t#u16 : 12 ; t#u16 cmd_code ; t#u16 : 16 ; t#u16 msb_count ; t#u32 reserved [ 12 ] ; } 
s#arsb struct arsb { t#u16 fmt : 4 ; t#u32 : 28 ; t#u8 ef ; t#u8 : 8 ; t#u8 ecbi ; t#u8 : 8 ; t#u8 fvf ; t#u16 : 16 ; t#u8 eqc ; t#u32 : 32 ; t#u64 fail_msb ; t#u64 fail_aidaw ; t#u64 fail_ms ; t#u64 fail_scm ; t#u32 reserved [ 4 ] ; } 
s#msb struct msb { t#u8 fmt : 4 ; t#u8 oc : 4 ; t#u8 flags ; t#u16 : 12 ; t#u16 bs : 4 ; t#u32 blk_count ; t#u64 data_addr ; t#u64 scm_addr ; t#u64 : 64 ; } 
s#aob struct aob { s#arqb request ; s#arsb response ; s#msb msb [ 124 ] ; } 
eadm_start_aob int eadm_start_aob ( s#aob * ) 

/* drivers/s390/cio/fcx.o */
tcw_get_intrg s#tcw * tcw_get_intrg ( s#tcw * ) 
tcw_get_data void * tcw_get_data ( s#tcw * ) 
s#tccb_tcah struct tccb_tcah { t#u32 format : 8 ; t#u32 : 24 ; t#u32 : 24 ; t#u32 tcal : 8 ; t#u32 sac : 16 ; t#u32 : 8 ; t#u32 prio : 8 ; t#u32 : 32 ; } 
s#tccb struct tccb { s#tccb_tcah tcah ; t#u8 tca [ 0 ] ; } 
tcw_get_tccb s#tccb * tcw_get_tccb ( s#tcw * ) 
s#tsa_iostat struct tsa_iostat { t#u32 dev_time ; t#u32 def_time ; t#u32 queue_time ; t#u32 dev_busy_time ; t#u32 dev_act_time ; t#u8 sense [ 32 ] ; } 
s#tsa_ddpc struct tsa_ddpc { t#u32 : 24 ; t#u32 rc : 8 ; t#u8 rcq [ 16 ] ; t#u8 sense [ 32 ] ; } 
s#tsa_intrg struct tsa_intrg { t#u32 format : 8 ; t#u32 flags : 8 ; t#u32 cu_state : 8 ; t#u32 dev_state : 8 ; t#u32 op_state : 8 ; t#u32 : 24 ; t#u8 sd_info [ 12 ] ; t#u32 dl_id ; t#u8 dd_data [ 28 ] ; } 
s#tsb struct tsb { t#u32 length : 8 ; t#u32 flags : 8 ; t#u32 dcw_offset : 16 ; t#u32 count ; t#u32 : 32 ; union { s#tsa_iostat iostat ; s#tsa_ddpc ddpc ; s#tsa_intrg intrg ; } __attribute__ ( ( packed ) ) tsa ; } 
tcw_get_tsb s#tsb * tcw_get_tsb ( s#tcw * ) 
tcw_init void tcw_init ( s#tcw * , int , int ) 
tcw_finalize void tcw_finalize ( s#tcw * , int ) 
tcw_set_intrg void tcw_set_intrg ( s#tcw * , s#tcw * ) 
tcw_set_data void tcw_set_data ( s#tcw * , void * , int ) 
tcw_set_tccb void tcw_set_tccb ( s#tcw * , s#tccb * ) 
tcw_set_tsb void tcw_set_tsb ( s#tcw * , s#tsb * ) 
tccb_init void tccb_init ( s#tccb * , t#size_t , t#u32 ) 
tsb_init void tsb_init ( s#tsb * ) 
s#dcw struct dcw { t#u32 cmd : 8 ; t#u32 flags : 8 ; t#u32 : 8 ; t#u32 cd_count : 8 ; t#u32 count ; t#u8 cd [ 0 ] ; } 
tccb_add_dcw s#dcw * tccb_add_dcw ( s#tccb * , t#size_t , t#u8 , t#u8 , void * , t#u8 , t#u32 ) 
s#tidaw struct tidaw { t#u32 flags : 8 ; t#u32 : 24 ; t#u32 count ; t#u64 addr ; } 
tcw_add_tidaw s#tidaw * tcw_add_tidaw ( s#tcw * , int , t#u8 , void * , t#u32 ) 

/* drivers/s390/cio/ioasm.o */
stsch int stsch ( s#subchannel_id , s#schib * ) 
s#cmd_orb struct cmd_orb { t#u32 intparm ; t#u32 key : 4 ; t#u32 spnd : 1 ; t#u32 res1 : 1 ; t#u32 mod : 1 ; t#u32 sync : 1 ; t#u32 fmt : 1 ; t#u32 pfch : 1 ; t#u32 isic : 1 ; t#u32 alcc : 1 ; t#u32 ssic : 1 ; t#u32 res2 : 1 ; t#u32 c64 : 1 ; t#u32 i2k : 1 ; t#u32 lpm : 8 ; t#u32 ils : 1 ; t#u32 zero : 6 ; t#u32 orbx : 1 ; t#u32 cpa ; } 
s#tm_orb struct tm_orb { t#u32 intparm ; t#u32 key : 4 ; t#u32 : 9 ; t#u32 b : 1 ; t#u32 : 2 ; t#u32 lpm : 8 ; t#u32 : 7 ; t#u32 x : 1 ; t#u32 tcw ; t#u32 prio : 8 ; t#u32 : 8 ; t#u32 rsvpgm : 8 ; t#u32 : 8 ; t#u32 : 32 ; t#u32 : 32 ; t#u32 : 32 ; t#u32 : 32 ; } 
s#eadm_orb struct eadm_orb { t#u32 intparm ; t#u32 key : 4 ; t#u32 : 4 ; t#u32 compat1 : 1 ; t#u32 compat2 : 1 ; t#u32 : 21 ; t#u32 x : 1 ; t#u32 aob ; t#u32 css_prio : 8 ; t#u32 : 8 ; t#u32 scm_prio : 8 ; t#u32 : 8 ; t#u32 : 29 ; t#u32 fmt : 3 ; t#u32 : 32 ; t#u32 : 32 ; t#u32 : 32 ; } 
u#orb union orb { s#cmd_orb cmd ; s#tm_orb tm ; s#eadm_orb eadm ; } 
ssch int ssch ( s#subchannel_id , u#orb * ) 
csch int csch ( s#subchannel_id ) 
chsc int chsc ( void * ) 

/* drivers/s390/cio/isc.o */
isc_register void isc_register ( unsigned int ) 
isc_unregister void isc_unregister ( unsigned int ) 

/* drivers/s390/cio/itcw.o */
s##itcw
itcw_get_tcw s#tcw * itcw_get_tcw ( s#itcw * ) 
itcw_calc_size t#size_t itcw_calc_size ( int , int , int ) 
itcw_init s#itcw * itcw_init ( void * , t#size_t , int , int , int , int ) 
itcw_add_dcw s#dcw * itcw_add_dcw ( s#itcw * , t#u8 , t#u8 , void * , t#u8 , t#u32 ) 
itcw_add_tidaw s#tidaw * itcw_add_tidaw ( s#itcw * , t#u8 , void * , t#u32 ) 
itcw_set_data void itcw_set_data ( s#itcw * , void * , int ) 
itcw_finalize void itcw_finalize ( s#itcw * ) 

/* drivers/s390/cio/qdio_main.o */
s##device_private
s##sock
s##seq_file
s##vfsmount
s##posix_acl
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##chp_link
s#qib struct qib { t#u32 qfmt : 8 ; t#u32 pfmt : 8 ; t#u32 rflags : 8 ; t#u32 ac : 8 ; t#u32 : 32 ; t#u64 isliba ; t#u64 osliba ; t#u32 : 32 ; t#u32 : 32 ; t#u8 ebcnam [ 8 ] ; t#u8 res [ 88 ] ; t#u8 parm [ 128 ] ; } 
e#qdio_irq_states enum qdio_irq_states { QDIO_IRQ_STATE_INACTIVE , QDIO_IRQ_STATE_ESTABLISHED , QDIO_IRQ_STATE_ACTIVE , QDIO_IRQ_STATE_STOPPED , QDIO_IRQ_STATE_CLEANUP , QDIO_IRQ_STATE_ERR , NR_QDIO_IRQ_STATES , } 
s#siga_flag struct siga_flag { t#u8 input : 1 ; t#u8 output : 1 ; t#u8 sync : 1 ; t#u8 sync_after_ai : 1 ; t#u8 sync_out_after_pci : 1 ; t#u8 : 3 ; } 
s#qdesfmt0 struct qdesfmt0 { t#u64 sliba ; t#u64 sla ; t#u64 slsba ; t#u32 : 32 ; t#u32 akey : 4 ; t#u32 bkey : 4 ; t#u32 ckey : 4 ; t#u32 dkey : 4 ; t#u32 : 16 ; } 
s#qdr struct qdr { t#u32 qfmt : 8 ; t#u32 pfmt : 8 ; t#u32 : 8 ; t#u32 ac : 8 ; t#u32 : 8 ; t#u32 iqdcnt : 8 ; t#u32 : 8 ; t#u32 oqdcnt : 8 ; t#u32 : 8 ; t#u32 iqdsz : 8 ; t#u32 : 8 ; t#u32 oqdsz : 8 ; t#u32 res [ 9 ] ; t#u64 qiba ; t#u32 : 32 ; t#u32 qkey : 4 ; t#u32 : 28 ; s#qdesfmt0 qdf0 [ 126 ] ; } 
s#slsb struct slsb { t#u8 val [ 128 ] ; } 
s#qdio_input_q struct qdio_input_q { int polling ; int ack_start ; int ack_count ; t#u64 timestamp ; unsigned long queue_irq_state ; void ( * queue_start_poll ) ( s#ccw_device * , int , unsigned long ) ; } 
s#qaob struct qaob { t#u64 res0 [ 6 ] ; t#u8 res1 ; t#u8 res2 ; t#u8 res3 ; t#u8 aorc ; t#u8 flags ; t#u16 cbtbs ; t#u8 sb_count ; t#u64 sba [ 16 ] ; t#u16 dcount [ 16 ] ; t#u64 user0 ; t#u64 res4 [ 2 ] ; t#u64 user1 ; t#u64 user2 ; } 
s#qdio_outbuf_state struct qdio_outbuf_state { t#u8 flags ; s#qaob * aob ; void * user ; } 
s#qdio_output_q struct qdio_output_q { int pci_out_enabled ; int use_cq ; s#qaob * * aobs ; s#qdio_outbuf_state * sbal_state ; s#timer_list timer ; int scan_threshold ; } 
s#qdio_queue_perf_stat struct qdio_queue_perf_stat { unsigned int nr_sbals [ 8 ] ; unsigned int nr_sbal_error ; unsigned int nr_sbal_nop ; unsigned int nr_sbal_total ; } 
s#qdio_buffer_element struct qdio_buffer_element { t#u8 eflags ; t#u8 res1 ; t#u8 scount ; t#u8 sflags ; t#u32 length ; void * addr ; } 
s#qdio_buffer struct qdio_buffer { s#qdio_buffer_element element [ 16 ] ; } 
t#qdio_handler_t typedef void qdio_handler_t ( s#ccw_device * , unsigned int , int , int , int , unsigned long ) 
s#sl_element struct sl_element { unsigned long sbal ; } 
s#sl struct sl { s#sl_element element [ 128 ] ; } 
s#slibe struct slibe { t#u64 parms ; } 
s#slib struct slib { t#u64 nsliba ; t#u64 sla ; t#u64 slsba ; t#u8 res [ 1000 ] ; s#slibe slibe [ 128 ] ; } 
s#qdio_q struct qdio_q { s#slsb slsb ; union { s#qdio_input_q in ; s#qdio_output_q out ; } u ; int first_to_check ; int last_move ; int first_to_kick ; t#atomic_t nr_buf_used ; unsigned int qdio_error ; t#u64 timestamp ; s#tasklet_struct tasklet ; s#qdio_queue_perf_stat q_stats ; s#qdio_buffer * sbal [ 128 ] __attribute__ ( ( __aligned__ ( 256 ) ) ) ; int nr ; int mask ; int is_input_q ; s#list_head entry ; t#qdio_handler_t ( * handler ) ; s#dentry * debugfs_q ; s#qdio_irq * irq_ptr ; s#sl * sl ; s#slib * slib ; } 
s#qdio_dev_perf_stat struct qdio_dev_perf_stat { unsigned int adapter_int ; unsigned int qdio_int ; unsigned int pci_request_int ; unsigned int tasklet_inbound ; unsigned int tasklet_inbound_resched ; unsigned int tasklet_inbound_resched2 ; unsigned int tasklet_outbound ; unsigned int siga_read ; unsigned int siga_write ; unsigned int siga_sync ; unsigned int inbound_call ; unsigned int inbound_handler ; unsigned int stop_polling ; unsigned int inbound_queue_full ; unsigned int outbound_call ; unsigned int outbound_handler ; unsigned int outbound_queue_full ; unsigned int fast_requeue ; unsigned int target_full ; unsigned int eqbs ; unsigned int eqbs_partial ; unsigned int sqbs ; unsigned int sqbs_partial ; unsigned int int_discarded ; } 
s#qdio_irq struct qdio_irq { s#qib qib ; t#u32 * dsci ; s#ccw_device * cdev ; s#dentry * debugfs_dev ; s#dentry * debugfs_perf ; unsigned long int_parm ; s#subchannel_id schid ; unsigned long sch_token ; e#qdio_irq_states state ; s#siga_flag siga_flag ; int nr_input_qs ; int nr_output_qs ; s#ccw1 ccw ; s#ciw equeue ; s#ciw aqueue ; s#qdio_ssqd_desc ssqd_desc ; void ( * orig_handler ) ( s#ccw_device * , unsigned long , s#irb * ) ; int perf_stat_enabled ; s#qdr * qdr ; unsigned long chsc_page ; s#qdio_q * input_qs [ 4 ] ; s#qdio_q * output_qs [ 4 ] ; t#debug_info_t * debug_area ; s#mutex setup_mutex ; s#qdio_dev_perf_stat perf_stat ; } 
qdio_get_ssqd_desc extern int qdio_get_ssqd_desc ( s#ccw_device * , s#qdio_ssqd_desc * ) 
qdio_shutdown extern int qdio_shutdown ( s#ccw_device * , int ) 
qdio_free extern int qdio_free ( s#ccw_device * ) 
s#qdio_initialize struct qdio_initialize { s#ccw_device * cdev ; unsigned char q_format ; unsigned char qdr_ac ; unsigned char adapter_name [ 8 ] ; unsigned int qib_param_field_format ; unsigned char * qib_param_field ; unsigned char qib_rflags ; unsigned long * input_slib_elements ; unsigned long * output_slib_elements ; unsigned int no_input_qs ; unsigned int no_output_qs ; t#qdio_handler_t * input_handler ; t#qdio_handler_t * output_handler ; void ( * * queue_start_poll_array ) ( s#ccw_device * , int , unsigned long ) ; int scan_threshold ; unsigned long int_parm ; void * * input_sbal_addr_array ; void * * output_sbal_addr_array ; s#qdio_outbuf_state * output_sbal_state_array ; } 
qdio_allocate extern int qdio_allocate ( s#qdio_initialize * ) 
qdio_establish extern int qdio_establish ( s#qdio_initialize * ) 
qdio_activate extern int qdio_activate ( s#ccw_device * ) 
do_QDIO extern int do_QDIO ( s#ccw_device * , unsigned int , int , unsigned int , unsigned int ) 
qdio_start_irq extern int qdio_start_irq ( s#ccw_device * , int ) 
qdio_get_next_buffers extern int qdio_get_next_buffers ( s#ccw_device * , int , int * , int * ) 
qdio_stop_irq extern int qdio_stop_irq ( s#ccw_device * , int ) 
e#qdio_brinfo_entry_type enum qdio_brinfo_entry_type { l3_ipv6_addr , l3_ipv4_addr , l2_addr_lnid } 
qdio_pnso_brinfo extern int qdio_pnso_brinfo ( s#subchannel_id , int , t#u16 * , void ( * ) ( void * , e#qdio_brinfo_entry_type , void * ) , void * ) 

/* drivers/s390/cio/qdio_setup.o */
qdio_allocate_aob s#qaob * qdio_allocate_aob ( void ) 
qdio_release_aob extern void qdio_release_aob ( s#qaob * ) 
qdio_free_buffers void qdio_free_buffers ( s#qdio_buffer * * , unsigned int ) 
qdio_alloc_buffers int qdio_alloc_buffers ( s#qdio_buffer * * , unsigned int ) 
qdio_reset_buffers void qdio_reset_buffers ( s#qdio_buffer * * , unsigned int ) 

/* drivers/s390/cio/scm.o */
s##device_private
s##sock
s##seq_file
s##vfsmount
s##posix_acl
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_mq_ctx
s##kmem_cache
s##blkcg_gq
s##blk_mq_hw_ctx
s##blk_mq_alloc_data
s##blk_mq_debugfs_attr
s##blk_queue_stats
s##rq_wb
s##blk_mq_ops
s##workqueue_struct
s##cgroup_subsys_state
s##blk_stat_callback
s##blk_trace
s##blk_flush_queue
s##bsg_job
s##throtl_data
s##blk_mq_tag_set
s##hd_geometry
s##pr_ops
s##timer_rand_state
s##disk_events
s##badblocks
s##reclaim_state
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##swap_info_struct
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##mtd_info
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##subsys_private
s##iommu_group
s##iommu_fwspec
s##iommu_ops
s##driver_private
s#scm_device struct scm_device { t#u64 address ; t#u64 size ; unsigned int nr_max_block ; s#device dev ; struct { unsigned int persistence : 4 ; unsigned int oper_state : 4 ; unsigned int data_state : 4 ; unsigned int rank : 4 ; unsigned int release : 1 ; unsigned int res_id : 8 ; } __attribute__ ( ( packed ) ) attrs ; } 
e#scm_event enum scm_event { SCM_CHANGE , SCM_AVAIL } 
s#scm_driver struct scm_driver { s#device_driver drv ; int ( * probe ) ( s#scm_device * ) ; int ( * remove ) ( s#scm_device * ) ; void ( * notify ) ( s#scm_device * , e#scm_event ) ; void ( * handler ) ( s#scm_device * , void * , t#blk_status_t ) ; } 
scm_driver_register int scm_driver_register ( s#scm_driver * ) 
scm_driver_unregister void scm_driver_unregister ( s#scm_driver * ) 
scm_irq_handler void scm_irq_handler ( s#aob * , t#blk_status_t ) 

/* drivers/s390/cio/trace.o */
s##static_key_mod
__tracepoint_s390_cio_stsch extern s#tracepoint __tracepoint_s390_cio_stsch 
__tracepoint_s390_cio_msch extern s#tracepoint __tracepoint_s390_cio_msch 
__tracepoint_s390_cio_tsch extern s#tracepoint __tracepoint_s390_cio_tsch 
__tracepoint_s390_cio_tpi extern s#tracepoint __tracepoint_s390_cio_tpi 
__tracepoint_s390_cio_ssch extern s#tracepoint __tracepoint_s390_cio_ssch 
__tracepoint_s390_cio_csch extern s#tracepoint __tracepoint_s390_cio_csch 
__tracepoint_s390_cio_hsch extern s#tracepoint __tracepoint_s390_cio_hsch 
__tracepoint_s390_cio_xsch extern s#tracepoint __tracepoint_s390_cio_xsch 
__tracepoint_s390_cio_rsch extern s#tracepoint __tracepoint_s390_cio_rsch 
__tracepoint_s390_cio_rchp extern s#tracepoint __tracepoint_s390_cio_rchp 
__tracepoint_s390_cio_chsc extern s#tracepoint __tracepoint_s390_cio_chsc 

/* drivers/s390/crypto/ap_bus.o */
ap_domain_index extern int ap_domain_index 
s#ap_perms struct ap_perms { unsigned long ioctlm [ ( ( ( 256 ) + ( 8 * sizeof ( long ) ) - 1 ) / ( 8 * sizeof ( long ) ) ) ] ; unsigned long apm [ ( ( ( 256 ) + ( 8 * sizeof ( long ) ) - 1 ) / ( 8 * sizeof ( long ) ) ) ] ; unsigned long aqm [ ( ( ( 256 ) + ( 8 * sizeof ( long ) ) - 1 ) / ( 8 * sizeof ( long ) ) ) ] ; } 
ap_perms extern s#ap_perms ap_perms 
ap_perms_mutex extern s#mutex ap_perms_mutex 
s#ap_config_info struct ap_config_info { unsigned int apsc : 1 ; unsigned int apxa : 1 ; unsigned int qact : 1 ; unsigned int rc8a : 1 ; unsigned char _reserved1 : 4 ; unsigned char _reserved2 [ 3 ] ; unsigned char Na ; unsigned char Nd ; unsigned char _reserved3 [ 10 ] ; unsigned int apm [ 8 ] ; unsigned int aqm [ 8 ] ; unsigned int adm [ 8 ] ; unsigned char _reserved4 [ 16 ] ; } 
ap_query_configuration __attribute__ ( ( always_inline , unused ) ) __attribute__ ( ( hotpatch ( 0 , 0 ) ) ) int ap_query_configuration ( s#ap_config_info * ) 
ap_test_config_usage_domain int ap_test_config_usage_domain ( unsigned int ) 
ap_test_config_ctrl_domain int ap_test_config_ctrl_domain ( unsigned int ) 
ap_owned_by_def_drv int ap_owned_by_def_drv ( int , int ) 
ap_apqn_in_matrix_owned_by_def_drv int ap_apqn_in_matrix_owned_by_def_drv ( unsigned long * , unsigned long * ) 
s##device_private
s##sock
s##vfsmount
s##posix_acl
s##module
s##workqueue_struct
s##bpf_prog_array
s##cgroup_taskset
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##iov_iter
s##hd_struct
s##gendisk
s##request_queue
s##kmem_cache
s##eventfd_ctx
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##mmu_notifier_mm
s##xol_area
s##compat_timespec
s##pollfd
s##pid_namespace
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_plug
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##mtd_info
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##fwnode_handle
s##subsys_private
s##iommu_group
s##iommu_fwspec
s##iommu_ops
s##driver_private
s#ap_device_id struct ap_device_id { t#__u16 match_flags ; t#__u8 dev_type ; t#kernel_ulong_t driver_info ; } 
s#ap_device struct ap_device { s#device device ; s#ap_driver * drv ; int device_type ; } 
s#ap_driver struct ap_driver { s#device_driver driver ; s#ap_device_id * ids ; unsigned int flags ; int ( * probe ) ( s#ap_device * ) ; void ( * remove ) ( s#ap_device * ) ; void ( * suspend ) ( s#ap_device * ) ; void ( * resume ) ( s#ap_device * ) ; } 
ap_driver_register int ap_driver_register ( s#ap_driver * , s#module * , char * ) 
ap_driver_unregister void ap_driver_unregister ( s#ap_driver * ) 
ap_bus_force_rescan void ap_bus_force_rescan ( void ) 
ap_parse_mask_str int ap_parse_mask_str ( const char * , unsigned long * , int , s#mutex * ) 

/* drivers/s390/crypto/ap_queue.o */
t#ap_qid_t typedef unsigned int ap_qid_t 
ap_send int ap_send ( t#ap_qid_t , unsigned long long , void * , t#size_t ) 
ap_recv int ap_recv ( t#ap_qid_t , unsigned long long * , void * , t#size_t ) 
s##device_private
s##sock
s##seq_file
s##file
s##vm_operations_struct
s##vm_area_struct
s##kernfs_open_node
s##kernfs_iattrs
s##module
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##fwnode_handle
s##iommu_group
s##iommu_fwspec
s##ap_device_id
ap_queue_suspend void ap_queue_suspend ( s#ap_device * ) 
ap_queue_resume void ap_queue_resume ( s#ap_device * ) 
s#ap_card struct ap_card { s#ap_device ap_dev ; s#list_head list ; s#list_head queues ; void * private ; int raw_hwtype ; unsigned int functions ; int queue_depth ; int id ; t#atomic_t total_request_count ; } 
e#ap_state enum ap_state { AP_STATE_RESET_START , AP_STATE_RESET_WAIT , AP_STATE_SETIRQ_WAIT , AP_STATE_IDLE , AP_STATE_WORKING , AP_STATE_QUEUE_FULL , AP_STATE_SUSPEND_WAIT , AP_STATE_BORKED , NR_AP_STATES } 
s#ap_message struct ap_message { s#list_head list ; unsigned long long psmid ; void * message ; t#size_t length ; int rc ; void * private ; unsigned int special : 1 ; void ( * receive ) ( s#ap_queue * , s#ap_message * , s#ap_message * ) ; } 
s#ap_queue struct ap_queue { s#ap_device ap_dev ; s#list_head list ; s#ap_card * card ; t#spinlock_t lock ; void * private ; t#ap_qid_t qid ; int interrupt ; int queue_count ; e#ap_state state ; int pendingq_count ; int requestq_count ; int total_request_count ; int request_timeout ; s#timer_list timeout ; s#list_head pendingq ; s#list_head requestq ; s#ap_message * reply ; } 
ap_queue_init_reply void ap_queue_init_reply ( s#ap_queue * , s#ap_message * ) 
ap_queue_message void ap_queue_message ( s#ap_queue * , s#ap_message * ) 
ap_cancel_message void ap_cancel_message ( s#ap_queue * , s#ap_message * ) 
ap_flush_queue void ap_flush_queue ( s#ap_queue * ) 
ap_queue_remove void ap_queue_remove ( s#ap_queue * ) 
ap_queue_reinit_state void ap_queue_reinit_state ( s#ap_queue * ) 

/* drivers/s390/crypto/pkey_api.o */
s#pkey_seckey struct pkey_seckey { t#__u8 seckey [ 64 ] ; } 
pkey_genseckey int pkey_genseckey ( t#__u16 , t#__u16 , t#__u32 , s#pkey_seckey * ) 
s#pkey_clrkey struct pkey_clrkey { t#__u8 clrkey [ 32 ] ; } 
pkey_clr2seckey int pkey_clr2seckey ( t#__u16 , t#__u16 , t#__u32 , const s#pkey_clrkey * , s#pkey_seckey * ) 
s#pkey_protkey struct pkey_protkey { t#__u32 type ; t#__u32 len ; t#__u8 protkey [ 64 ] ; } 
pkey_sec2protkey int pkey_sec2protkey ( t#__u16 , t#__u16 , const s#pkey_seckey * , s#pkey_protkey * ) 
pkey_clr2protkey int pkey_clr2protkey ( t#__u32 , const s#pkey_clrkey * , s#pkey_protkey * ) 
pkey_findcard int pkey_findcard ( const s#pkey_seckey * , t#__u16 * , t#__u16 * , int ) 
pkey_skey2pkey int pkey_skey2pkey ( const s#pkey_seckey * , s#pkey_protkey * ) 
pkey_verifykey int pkey_verifykey ( const s#pkey_seckey * , t#u16 * , t#u16 * , t#u16 * , t#u32 * ) 
pkey_genprotkey int pkey_genprotkey ( t#__u32 , s#pkey_protkey * ) 
pkey_verifyprotkey int pkey_verifyprotkey ( const s#pkey_protkey * ) 
pkey_keyblob2pkey int pkey_keyblob2pkey ( const t#__u8 * , t#__u32 , s#pkey_protkey * ) 

/* drivers/s390/crypto/zcrypt_api.o */
s##static_key_mod
__tracepoint_s390_zcrypt_req extern s#tracepoint __tracepoint_s390_zcrypt_req 
__tracepoint_s390_zcrypt_rep extern s#tracepoint __tracepoint_s390_zcrypt_rep 
zcrypt_rescan_req extern t#atomic_t zcrypt_rescan_req 
s##device_private
s##sock
s##vfsmount
s##posix_acl
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##trace_array
s##tracer
s##trace_buffer
s##ring_buffer_iter
s##event_filter
s##bpf_prog_array
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##kmem_cache
s##fs_pin
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##cgroup_taskset
s##writeback_control
s##bio_vec
s##pipe_inode_info
s##swap_info_struct
s##mem_cgroup
s##mempolicy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##robust_list_head
s##futex_pi_state
s##numa_group
s##task_delay_info
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##ring_buffer
s##bpf_prog
s##ftrace_hash
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##nlm_lockowner
s##nfs4_lock_state
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##fwnode_handle
s##iommu_group
s##iommu_fwspec
s##ap_device_id
E#NUM_OPS 8 
s#zcrypt_card struct zcrypt_card { s#list_head list ; s#list_head zqueues ; s#kref refcount ; s#ap_card * card ; int online ; int user_space_type ; char * type_string ; int min_mod_size ; int max_mod_size ; int max_exp_bit_length ; int speed_rating [ E#NUM_OPS ] ; t#atomic_t load ; int request_count ; } 
s#zcrypt_queue struct zcrypt_queue { s#list_head list ; s#kref refcount ; s#zcrypt_card * zcard ; s#zcrypt_ops * ops ; s#ap_queue * queue ; int online ; t#atomic_t load ; int request_count ; s#ap_message reply ; } 
s#ica_rsa_modexpo struct ica_rsa_modexpo { char * inputdata ; unsigned int inputdatalength ; char * outputdata ; unsigned int outputdatalength ; char * b_key ; char * n_modulus ; } 
s#ica_rsa_modexpo_crt struct ica_rsa_modexpo_crt { char * inputdata ; unsigned int inputdatalength ; char * outputdata ; unsigned int outputdatalength ; char * bp_key ; char * bq_key ; char * np_prime ; char * nq_prime ; char * u_mult_inv ; } 
s#ica_xcRB struct ica_xcRB { unsigned short agent_ID ; unsigned int user_defined ; unsigned short request_ID ; unsigned int request_control_blk_length ; unsigned char padding1 [ 16 - sizeof ( char * ) ] ; char * request_control_blk_addr ; unsigned int request_data_length ; char padding2 [ 16 - sizeof ( char * ) ] ; char * request_data_address ; unsigned int reply_control_blk_length ; char padding3 [ 16 - sizeof ( char * ) ] ; char * reply_control_blk_addr ; unsigned int reply_data_length ; char padding4 [ 16 - sizeof ( char * ) ] ; char * reply_data_addr ; unsigned short priority_window ; unsigned int status ; } 
s#ep11_urb struct ep11_urb { t#uint16_t targets_num ; t#uint64_t targets ; t#uint64_t weight ; t#uint64_t req_no ; t#uint64_t req_len ; t#uint64_t req ; t#uint64_t resp_len ; t#uint64_t resp ; } 
s#zcrypt_ops struct zcrypt_ops { long ( * rsa_modexpo ) ( s#zcrypt_queue * , s#ica_rsa_modexpo * ) ; long ( * rsa_modexpo_crt ) ( s#zcrypt_queue * , s#ica_rsa_modexpo_crt * ) ; long ( * send_cprb ) ( s#zcrypt_queue * , s#ica_xcRB * , s#ap_message * ) ; long ( * send_ep11_cprb ) ( s#zcrypt_queue * , s#ep11_urb * , s#ap_message * ) ; long ( * rng ) ( s#zcrypt_queue * , char * , s#ap_message * ) ; s#list_head list ; s#module * owner ; int variant ; char name [ 128 ] ; } 
zcrypt_msgtype s#zcrypt_ops * zcrypt_msgtype ( unsigned char * , int ) 
zcrypt_send_cprb long zcrypt_send_cprb ( s#ica_xcRB * ) 
s#zcrypt_device_status_ext struct zcrypt_device_status_ext { unsigned int hwtype : 8 ; unsigned int qid : 16 ; unsigned int online : 1 ; unsigned int functions : 6 ; unsigned int reserved : 1 ; } 
zcrypt_device_status_mask_ext void zcrypt_device_status_mask_ext ( s#zcrypt_device_status_ext * ) 

/* drivers/s390/crypto/zcrypt_card.o */
s##device_private
s##sock
s##vfsmount
s##posix_acl
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##fwnode_handle
s##iommu_group
s##iommu_fwspec
s##ap_device_id
zcrypt_card_alloc s#zcrypt_card * zcrypt_card_alloc ( void ) 
zcrypt_card_free void zcrypt_card_free ( s#zcrypt_card * ) 
zcrypt_card_get void zcrypt_card_get ( s#zcrypt_card * ) 
zcrypt_card_put int zcrypt_card_put ( s#zcrypt_card * ) 
zcrypt_card_register int zcrypt_card_register ( s#zcrypt_card * ) 
zcrypt_card_unregister void zcrypt_card_unregister ( s#zcrypt_card * ) 

/* drivers/s390/crypto/zcrypt_queue.o */
s##device_private
s##sock
s##vfsmount
s##posix_acl
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##fwnode_handle
s##iommu_group
s##iommu_fwspec
s##ap_device_id
zcrypt_queue_alloc s#zcrypt_queue * zcrypt_queue_alloc ( t#size_t ) 
zcrypt_queue_free void zcrypt_queue_free ( s#zcrypt_queue * ) 
zcrypt_queue_get void zcrypt_queue_get ( s#zcrypt_queue * ) 
zcrypt_queue_put int zcrypt_queue_put ( s#zcrypt_queue * ) 
zcrypt_queue_register int zcrypt_queue_register ( s#zcrypt_queue * ) 
zcrypt_queue_unregister void zcrypt_queue_unregister ( s#zcrypt_queue * ) 

/* drivers/s390/net/ctcm_mpc.o */
ctc_mpc_alloc_channel extern int ctc_mpc_alloc_channel ( int , void ( * ) ( int , int ) ) 
ctc_mpc_establish_connectivity extern void ctc_mpc_establish_connectivity ( int , void ( * ) ( int , int , int ) ) 
ctc_mpc_dealloc_ch extern void ctc_mpc_dealloc_ch ( int ) 
ctc_mpc_flow_control extern void ctc_mpc_flow_control ( int , int ) 

/* drivers/s390/net/fsm.o */
t#fsm_function_t typedef void ( * fsm_function_t ) ( s#fsm_instance_t * , int , void * ) 
t#fsm typedef struct { t#fsm_function_t * jumpmatrix ; int nr_events ; int nr_states ; const char * * event_names ; const char * * state_names ; } fsm 
s#fsm_instance_t struct fsm_instance_t { t#fsm * f ; t#atomic_t state ; char name [ 16 ] ; void * userdata ; int userint ; t#wait_queue_head_t wait_q ; } 
t#fsm_instance typedef s#fsm_instance_t fsm_instance 
t#fsm_node typedef struct { int cond_state ; int cond_event ; t#fsm_function_t function ; } fsm_node 
init_fsm extern t#fsm_instance * init_fsm ( char * , const char * * , const char * * , int , int , const t#fsm_node * , int , t#gfp_t ) 
kfree_fsm extern void kfree_fsm ( t#fsm_instance * ) 
t#fsm_timer typedef struct { t#fsm_instance * fi ; s#timer_list tl ; int expire_event ; void * event_arg ; } fsm_timer 
fsm_settimer extern void fsm_settimer ( t#fsm_instance * , t#fsm_timer * ) 
fsm_deltimer extern void fsm_deltimer ( t#fsm_timer * ) 
fsm_addtimer extern int fsm_addtimer ( t#fsm_timer * , int , int , void * ) 
fsm_modtimer extern void fsm_modtimer ( t#fsm_timer * , int , int , void * ) 
fsm_getstate_str extern const char * fsm_getstate_str ( t#fsm_instance * ) 

/* drivers/s390/net/qeth_core_main.o */
s##posix_acl
s##vfsmount
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##mmu_notifier_mm
s##xol_area
s##pid_namespace
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##sec_path
s##workqueue_struct
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##kmem_cache
s##xfrm_state
s##lwtunnel_state
s##uncached_list
s##rt6_info
s##dn_route
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##device_private
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##phy_device
s##sfp_bus
s##prot_inuse
s##ipv4_devconf
s##xt_table
s##rt6_statistics
s##fib6_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##swap_info_struct
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##nlm_lockowner
s##nfs4_lock_state
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s#qeth_dbf_info struct qeth_dbf_info { char name [ 64 ] ; int pages ; int areas ; int len ; int level ; s#debug_view * view ; t#debug_info_t * id ; } 
E#QETH_DBF_INFOS 3 
qeth_dbf extern s#qeth_dbf_info qeth_dbf [ E#QETH_DBF_INFOS ] 
s#qeth_card_list_struct struct qeth_card_list_struct { s#list_head list ; t#rwlock_t rwlock ; } 
qeth_core_card_list extern s#qeth_card_list_struct qeth_core_card_list 
qeth_core_header_cache extern s#kmem_cache * qeth_core_header_cache 
e#qeth_card_states enum qeth_card_states { CARD_STATE_DOWN , CARD_STATE_HARDSETUP , CARD_STATE_SOFTSETUP , CARD_STATE_UP , CARD_STATE_RECOVER , } 
s##ccw_device_private
e#qeth_channel_states enum qeth_channel_states { CH_STATE_UP , CH_STATE_DOWN , CH_STATE_ACTIVATING , CH_STATE_HALTED , CH_STATE_STOPPED , CH_STATE_RCD , CH_STATE_RCD_DONE , } 
e#qeth_cmd_buffer_state enum qeth_cmd_buffer_state { BUF_STATE_FREE , BUF_STATE_LOCKED , } 
s#qeth_reply struct qeth_reply { s#list_head list ; t#wait_queue_head_t wait_q ; int ( * callback ) ( s#qeth_card * , s#qeth_reply * , unsigned long ) ; t#u32 seqno ; unsigned long offset ; t#atomic_t received ; int rc ; void * param ; t#refcount_t refcnt ; } 
s#qeth_cmd_buffer struct qeth_cmd_buffer { e#qeth_cmd_buffer_state state ; s#qeth_channel * channel ; s#qeth_reply * reply ; unsigned char * data ; int rc ; void ( * callback ) ( s#qeth_card * , s#qeth_channel * , s#qeth_cmd_buffer * ) ; } 
s#qeth_channel struct qeth_channel { e#qeth_channel_states state ; s#ccw1 * ccw ; t#spinlock_t iob_lock ; t#wait_queue_head_t wait_q ; s#ccw_device * ccwdev ; s#qeth_cmd_buffer iob [ 8 ] ; t#atomic_t irq_pending ; int io_buf_no ; } 
e#qeth_card_types enum qeth_card_types { QETH_CARD_TYPE_OSD = 1 , QETH_CARD_TYPE_IQD = 5 , QETH_CARD_TYPE_OSN = 6 , QETH_CARD_TYPE_OSM = 3 , QETH_CARD_TYPE_OSX = 2 , } 
e#qeth_link_types enum qeth_link_types { QETH_LINK_TYPE_FAST_ETH = 0x01 , QETH_LINK_TYPE_HSTR = 0x02 , QETH_LINK_TYPE_GBIT_ETH = 0x03 , QETH_LINK_TYPE_OSN = 0x04 , QETH_LINK_TYPE_10GBIT_ETH = 0x10 , QETH_LINK_TYPE_25GBIT_ETH = 0x12 , QETH_LINK_TYPE_LANE_ETH100 = 0x81 , QETH_LINK_TYPE_LANE_TR = 0x82 , QETH_LINK_TYPE_LANE_ETH1000 = 0x83 , QETH_LINK_TYPE_LANE = 0x88 , } 
s#qeth_card_blkt struct qeth_card_blkt { int time_total ; int inter_packet ; int inter_packet_jumbo ; } 
e#qeth_ipa_promisc_modes enum qeth_ipa_promisc_modes { SET_PROMISC_MODE_OFF = 0 , SET_PROMISC_MODE_ON = 1 , } 
s#qeth_card_info struct qeth_card_info { unsigned short unit_addr2 ; unsigned short cula ; unsigned short chpid ; t#__u16 func_level ; char mcl_level [ 4 + 1 ] ; int guestlan ; int mac_bits ; e#qeth_card_types type ; e#qeth_link_types link_type ; int broadcast_capable ; int unique_id ; t#bool layer_enforced ; s#qeth_card_blkt blkt ; e#qeth_ipa_promisc_modes promisc_mode ; t#__u32 diagass_support ; t#__u32 hwtrap ; } 
s#qeth_token struct qeth_token { t#__u32 issuer_rm_w ; t#__u32 issuer_rm_r ; t#__u32 cm_filter_w ; t#__u32 cm_filter_r ; t#__u32 cm_connection_w ; t#__u32 cm_connection_r ; t#__u32 ulp_filter_w ; t#__u32 ulp_filter_r ; t#__u32 ulp_connection_w ; t#__u32 ulp_connection_r ; } 
s#qeth_seqno struct qeth_seqno { t#__u32 trans_hdr ; t#__u32 pdu_hdr ; t#__u32 pdu_hdr_ack ; t#__u16 ipa ; t#__u32 pkt_seqno ; } 
e#qeth_routing_types enum qeth_routing_types { NO_ROUTER = 0 , PRIMARY_ROUTER = 1 , SECONDARY_ROUTER = 2 , MULTICAST_ROUTER = 3 , PRIMARY_CONNECTOR = 4 , SECONDARY_CONNECTOR = 5 , } 
s#qeth_routing_info struct qeth_routing_info { e#qeth_routing_types type ; } 
s#qeth_ipa_info struct qeth_ipa_info { t#__u32 supported_funcs ; t#__u32 enabled_funcs ; } 
e#qeth_sbp_roles enum qeth_sbp_roles { QETH_SBP_ROLE_NONE = 0 , QETH_SBP_ROLE_PRIMARY = 1 , QETH_SBP_ROLE_SECONDARY = 2 , } 
s#qeth_sbp_info struct qeth_sbp_info { t#__u32 supported_funcs ; e#qeth_sbp_roles role ; t#__u32 hostnotification : 1 ; t#__u32 reflect_promisc : 1 ; t#__u32 reflect_promisc_primary : 1 ; } 
s#qeth_vnicc_info struct qeth_vnicc_info { t#u32 sup_chars ; t#u32 cur_chars ; t#u32 set_char_sup ; t#u32 getset_timeout_sup ; t#u32 learning_timeout ; t#u32 wanted_chars ; t#bool rx_bcast_enabled ; } 
e#qeth_discipline_id enum qeth_discipline_id { QETH_DISCIPLINE_UNDETERMINED = - 1 , QETH_DISCIPLINE_LAYER3 = 0 , QETH_DISCIPLINE_LAYER2 = 1 , } 
e#qeth_ipa_isolation_modes enum qeth_ipa_isolation_modes { ISOLATION_MODE_NONE = 0x00000000L , ISOLATION_MODE_FWD = 0x00000001L , ISOLATION_MODE_DROP = 0x00000002L , } 
e#qeth_cq enum qeth_cq { QETH_CQ_DISABLED = 0 , QETH_CQ_ENABLED = 1 , QETH_CQ_NOTAVAILABLE = 2 , } 
s#qeth_card_options struct qeth_card_options { s#qeth_routing_info route4 ; s#qeth_ipa_info ipa4 ; s#qeth_ipa_info adp ; s#qeth_routing_info route6 ; s#qeth_ipa_info ipa6 ; s#qeth_sbp_info sbp ; s#qeth_vnicc_info vnicc ; int fake_broadcast ; e#qeth_discipline_id layer ; int performance_stats ; int rx_sg_cb ; e#qeth_ipa_isolation_modes isolation ; e#qeth_ipa_isolation_modes prev_isolation ; int sniffer ; e#qeth_cq cq ; char hsuid [ 9 ] ; } 
s#qeth_ipato struct qeth_ipato { t#bool enabled ; t#bool invert4 ; t#bool invert6 ; s#list_head entries ; } 
s#qeth_buffer_pool_entry struct qeth_buffer_pool_entry { s#list_head list ; s#list_head init_list ; void * elements [ 16 ] ; } 
s#qeth_qdio_buffer struct qeth_qdio_buffer { s#qdio_buffer * buffer ; s#qeth_buffer_pool_entry * pool_entry ; s#sk_buff * rx_skb ; } 
s#qeth_qdio_q struct qeth_qdio_q { s#qdio_buffer * qdio_bufs [ 128 ] ; s#qeth_qdio_buffer bufs [ 128 ] ; int next_buf_to_init ; } 
s#qeth_qdio_buffer_pool struct qeth_qdio_buffer_pool { s#list_head entry_list ; int buf_count ; } 
s#qeth_qdio_out_buffer struct qeth_qdio_out_buffer { s#qdio_buffer * buffer ; t#atomic_t state ; int next_element_to_fill ; s#sk_buff_head skb_list ; int is_header [ 16 ] ; s#qeth_qdio_out_q * q ; s#qeth_qdio_out_buffer * next_pending ; } 
s#qeth_qdio_out_q struct qeth_qdio_out_q { s#qdio_buffer * qdio_bufs [ 128 ] ; s#qeth_qdio_out_buffer * bufs [ 128 ] ; s#qdio_outbuf_state * bufstates ; int queue_no ; s#qeth_card * card ; t#atomic_t state ; int do_pack ; int next_buf_to_fill ; t#atomic_t used_buffers ; t#atomic_t set_pci_flags_count ; } 
s#qeth_qdio_info struct qeth_qdio_info { t#atomic_t state ; int no_in_queues ; s#qeth_qdio_q * in_q ; s#qeth_qdio_q * c_q ; s#qeth_qdio_buffer_pool in_buf_pool ; s#qeth_qdio_buffer_pool init_pool ; int in_buf_size ; int no_out_queues ; s#qeth_qdio_out_q * * out_qs ; s#qdio_outbuf_state * out_bufstates ; int do_prio_queueing ; int default_out_queue ; } 
s#qeth_perf_stats struct qeth_perf_stats { unsigned int bufs_rec ; unsigned int bufs_sent ; unsigned int buf_elements_sent ; unsigned int skbs_sent_pack ; unsigned int bufs_sent_pack ; unsigned int sc_dp_p ; unsigned int sc_p_dp ; t#__u64 cq_start_time ; unsigned int cq_cnt ; unsigned int cq_time ; t#__u64 inbound_start_time ; unsigned int inbound_cnt ; unsigned int inbound_time ; t#__u64 outbound_start_time ; unsigned int outbound_cnt ; unsigned int outbound_time ; t#__u64 outbound_handler_start_time ; unsigned int outbound_handler_cnt ; unsigned int outbound_handler_time ; t#__u64 inbound_do_qdio_start_time ; unsigned int inbound_do_qdio_cnt ; unsigned int inbound_do_qdio_time ; t#__u64 outbound_do_qdio_start_time ; unsigned int outbound_do_qdio_cnt ; unsigned int outbound_do_qdio_time ; unsigned int large_send_bytes ; unsigned int large_send_cnt ; unsigned int sg_skbs_sent ; unsigned long initial_rx_packets ; unsigned long initial_tx_packets ; unsigned int sg_skbs_rx ; unsigned int sg_frags_rx ; unsigned int sg_alloc_page_rx ; unsigned int tx_csum ; unsigned int tx_lin ; unsigned int tx_linfail ; unsigned int rx_csum ; } 
s#qeth_osn_info struct qeth_osn_info { int ( * assist_cb ) ( s#net_device * , void * ) ; int ( * data_cb ) ( s#sk_buff * ) ; } 
s#qeth_ipacmd_hdr struct qeth_ipacmd_hdr { t#__u8 command ; t#__u8 initiator ; t#__u16 seqno ; t#__u16 return_code ; t#__u8 adapter_type ; t#__u8 rel_adapter_no ; t#__u8 prim_version_no ; t#__u8 param_count ; t#__u16 prot_version ; t#__u32 ipa_supported ; t#__u32 ipa_enabled ; } 
s#qeth_ipacmd_setdelip4 struct qeth_ipacmd_setdelip4 { t#__u8 ip_addr [ 4 ] ; t#__u8 mask [ 4 ] ; t#__u32 flags ; } 
s#qeth_ipacmd_setdelip6 struct qeth_ipacmd_setdelip6 { t#__u8 ip_addr [ 16 ] ; t#__u8 mask [ 16 ] ; t#__u32 flags ; } 
s#qeth_ipacmd_setdelipm struct qeth_ipacmd_setdelipm { t#__u8 mac [ 6 ] ; t#__u8 padding [ 2 ] ; t#__u8 ip6 [ 12 ] ; t#__u8 ip4 [ 4 ] ; } 
s#qeth_ipacmd_setassparms_hdr struct qeth_ipacmd_setassparms_hdr { t#__u32 assist_no ; t#__u16 length ; t#__u16 command_code ; t#__u16 return_code ; t#__u8 number_of_replies ; t#__u8 seq_no ; } 
s#qeth_ipa_caps struct qeth_ipa_caps { t#u32 supported ; t#u32 enabled ; } 
s#qeth_checksum_cmd struct qeth_checksum_cmd { t#__u32 supported ; t#__u32 enabled ; } 
s#qeth_arp_cache_entry struct qeth_arp_cache_entry { t#__u8 macaddr [ 6 ] ; t#__u8 reserved1 [ 2 ] ; t#__u8 ipaddr [ 16 ] ; t#__u8 reserved2 [ 32 ] ; } 
s#qeth_arp_query_data struct qeth_arp_query_data { t#__u16 request_bits ; t#__u16 reply_bits ; t#__u32 no_entries ; char data ; } 
s#qeth_tso_start_data struct qeth_tso_start_data { t#u32 mss ; t#u32 supported ; } 
s#qeth_ipacmd_setassparms struct qeth_ipacmd_setassparms { s#qeth_ipacmd_setassparms_hdr hdr ; union { t#__u32 flags_32bit ; s#qeth_ipa_caps caps ; s#qeth_checksum_cmd chksum ; s#qeth_arp_cache_entry add_arp_entry ; s#qeth_arp_query_data query_arp ; s#qeth_tso_start_data tso ; t#__u8 ip [ 16 ] ; } data ; } 
s#qeth_ipacmd_layer2setdelmac struct qeth_ipacmd_layer2setdelmac { t#__u32 mac_length ; t#__u8 mac [ 6 ] ; } 
s#qeth_ipacmd_layer2setdelvlan struct qeth_ipacmd_layer2setdelvlan { t#__u16 vlan_id ; } 
s#qeth_create_destroy_address struct qeth_create_destroy_address { t#__u8 unique_id [ 8 ] ; } 
s#qeth_ipacmd_setadpparms_hdr struct qeth_ipacmd_setadpparms_hdr { t#u32 supp_hw_cmds ; t#u32 reserved1 ; t#u16 cmdlength ; t#u16 reserved2 ; t#u32 command_code ; t#u16 return_code ; t#u8 used_total ; t#u8 seq_no ; t#u8 flags ; t#u8 reserved3 [ 3 ] ; } 
s#qeth_query_cmds_supp struct qeth_query_cmds_supp { t#__u32 no_lantypes_supp ; t#__u8 lan_type ; t#__u8 reserved1 [ 3 ] ; t#__u32 supported_cmds ; t#__u8 reserved2 [ 8 ] ; } 
s#qeth_change_addr struct qeth_change_addr { t#u32 cmd ; t#u32 addr_size ; t#u32 no_macs ; t#u8 addr [ 6 ] ; } 
s#qeth_snmp_cmd struct qeth_snmp_cmd { t#__u8 token [ 16 ] ; t#__u32 request ; t#__u32 interface ; t#__u32 returncode ; t#__u32 firmwarelevel ; t#__u32 seqno ; t#__u8 data ; } 
s#qeth_set_access_ctrl struct qeth_set_access_ctrl { t#__u32 subcmd_code ; t#__u8 reserved [ 8 ] ; } 
s#qeth_query_oat struct qeth_query_oat { t#__u32 subcmd_code ; t#__u8 reserved [ 12 ] ; } 
s#qeth_query_card_info struct qeth_query_card_info { t#__u8 card_type ; t#__u8 reserved1 ; t#__u16 port_mode ; t#__u32 port_speed ; t#__u32 reserved2 ; } 
s#qeth_query_switch_attributes struct qeth_query_switch_attributes { t#__u8 version ; t#__u8 reserved1 ; t#__u16 reserved2 ; t#__u32 capabilities ; t#__u32 settings ; t#__u8 reserved3 [ 8 ] ; } 
s#qeth_ipacmd_setadpparms struct qeth_ipacmd_setadpparms { s#qeth_ipacmd_setadpparms_hdr hdr ; union { s#qeth_query_cmds_supp query_cmds_supp ; s#qeth_change_addr change_addr ; s#qeth_snmp_cmd snmp ; s#qeth_set_access_ctrl set_access_ctrl ; s#qeth_query_oat query_oat ; s#qeth_query_card_info card_info ; s#qeth_query_switch_attributes query_switch_attributes ; t#__u32 mode ; } data ; } 
s#qeth_set_routing struct qeth_set_routing { t#__u8 type ; } 
s#qeth_ipacmd_diagass struct qeth_ipacmd_diagass { t#__u32 host_tod2 ; t#__u32 : 32 ; t#__u16 subcmd_len ; t#__u16 : 16 ; t#__u32 subcmd ; t#__u8 type ; t#__u8 action ; t#__u16 options ; t#__u32 ext ; t#__u8 cdata [ 64 ] ; } 
s#qeth_ipacmd_sbp_hdr struct qeth_ipacmd_sbp_hdr { t#__u32 supported_sbp_cmds ; t#__u32 enabled_sbp_cmds ; t#__u16 cmdlength ; t#__u16 reserved1 ; t#__u32 command_code ; t#__u16 return_code ; t#__u8 used_total ; t#__u8 seq_no ; t#__u32 reserved2 ; } 
s#qeth_sbp_query_cmds_supp struct qeth_sbp_query_cmds_supp { t#__u32 supported_cmds ; t#__u32 reserved ; } 
s#qeth_sbp_reset_role struct qeth_sbp_reset_role { } 
s#net_if_token struct net_if_token { t#__u16 devnum ; t#__u8 cssid ; t#__u8 iid ; t#__u8 ssid ; t#__u8 chpid ; t#__u16 chid ; } 
s#qeth_sbp_set_primary struct qeth_sbp_set_primary { s#net_if_token token ; } 
s#qeth_sbp_set_secondary struct qeth_sbp_set_secondary { } 
s#qeth_sbp_port_entry struct qeth_sbp_port_entry { t#__u8 role ; t#__u8 state ; t#__u8 reserved1 ; t#__u8 reserved2 ; s#net_if_token token ; } 
s#qeth_sbp_query_ports struct qeth_sbp_query_ports { t#__u8 primary_bp_supported ; t#__u8 secondary_bp_supported ; t#__u8 num_entries ; t#__u8 entry_length ; s#qeth_sbp_port_entry entry [ ] ; } 
s#qeth_sbp_state_change struct qeth_sbp_state_change { t#__u8 primary_bp_supported ; t#__u8 secondary_bp_supported ; t#__u8 num_entries ; t#__u8 entry_length ; s#qeth_sbp_port_entry entry [ ] ; } 
s#qeth_ipacmd_setbridgeport struct qeth_ipacmd_setbridgeport { s#qeth_ipacmd_sbp_hdr hdr ; union { s#qeth_sbp_query_cmds_supp query_cmds_supp ; s#qeth_sbp_reset_role reset_role ; s#qeth_sbp_set_primary set_primary ; s#qeth_sbp_set_secondary set_secondary ; s#qeth_sbp_query_ports query_ports ; s#qeth_sbp_state_change state_change ; } data ; } 
s#mac_addr_lnid struct mac_addr_lnid { t#__u8 mac [ 6 ] ; t#__u16 lnid ; } 
s#qeth_ipacmd_addr_change_entry struct qeth_ipacmd_addr_change_entry { s#net_if_token token ; s#mac_addr_lnid addr_lnid ; t#__u8 change_code ; t#__u8 reserved1 ; t#__u16 reserved2 ; } 
s#qeth_ipacmd_addr_change struct qeth_ipacmd_addr_change { t#__u8 lost_event_mask ; t#__u8 reserved ; t#__u16 num_entries ; s#qeth_ipacmd_addr_change_entry entry [ ] ; } 
s#qeth_ipacmd_vnicc_hdr struct qeth_ipacmd_vnicc_hdr { t#u32 sup ; t#u32 cur ; } 
s#qeth_vnicc_sub_hdr struct qeth_vnicc_sub_hdr { t#u16 data_length ; t#u16 reserved ; t#u32 sub_command ; } 
s#qeth_vnicc_query_cmds struct qeth_vnicc_query_cmds { t#u32 vnic_char ; t#u32 sup_cmds ; } 
s#qeth_vnicc_set_char struct qeth_vnicc_set_char { t#u32 vnic_char ; } 
s#qeth_vnicc_getset_timeout struct qeth_vnicc_getset_timeout { t#u32 vnic_char ; t#u32 timeout ; } 
s#qeth_ipacmd_vnicc struct qeth_ipacmd_vnicc { s#qeth_ipacmd_vnicc_hdr hdr ; s#qeth_vnicc_sub_hdr sub_hdr ; union { s#qeth_vnicc_query_cmds query_cmds ; s#qeth_vnicc_set_char set_char ; s#qeth_vnicc_getset_timeout getset_timeout ; } ; } 
s#qeth_ipa_cmd struct qeth_ipa_cmd { s#qeth_ipacmd_hdr hdr ; union { s#qeth_ipacmd_setdelip4 setdelip4 ; s#qeth_ipacmd_setdelip6 setdelip6 ; s#qeth_ipacmd_setdelipm setdelipm ; s#qeth_ipacmd_setassparms setassparms ; s#qeth_ipacmd_layer2setdelmac setdelmac ; s#qeth_ipacmd_layer2setdelvlan setdelvlan ; s#qeth_create_destroy_address create_destroy_addr ; s#qeth_ipacmd_setadpparms setadapterparms ; s#qeth_set_routing setrtg ; s#qeth_ipacmd_diagass diagass ; s#qeth_ipacmd_setbridgeport sbp ; s#qeth_ipacmd_addr_change addrchange ; s#qeth_ipacmd_vnicc vnicc ; } data ; } 
s#qeth_discipline struct qeth_discipline { const s#device_type * devtype ; int ( * process_rx_buffer ) ( s#qeth_card * , int , int * ) ; int ( * recover ) ( void * ) ; int ( * setup ) ( s#ccwgroup_device * ) ; void ( * remove ) ( s#ccwgroup_device * ) ; int ( * set_online ) ( s#ccwgroup_device * ) ; int ( * set_offline ) ( s#ccwgroup_device * ) ; int ( * freeze ) ( s#ccwgroup_device * ) ; int ( * thaw ) ( s#ccwgroup_device * ) ; int ( * restore ) ( s#ccwgroup_device * ) ; int ( * do_ioctl ) ( s#net_device * , s#ifreq * , int ) ; int ( * control_event_handler ) ( s#qeth_card * , s#qeth_ipa_cmd * ) ; } 
s#gro_list struct gro_list { s#list_head list ; int count ; } 
s#napi_struct struct napi_struct { s#list_head poll_list ; unsigned long state ; int weight ; unsigned long gro_bitmask ; int ( * poll ) ( s#napi_struct * , int ) ; s#net_device * dev ; s#gro_list gro_hash [ 8 ] ; s#sk_buff * skb ; s#hrtimer timer ; s#list_head dev_list ; s#hlist_node napi_hash_node ; unsigned int napi_id ; } 
s#qeth_rx struct qeth_rx { int b_count ; int b_index ; s#qdio_buffer_element * b_element ; int e_offset ; int qdio_err ; } 
s#qeth_card struct qeth_card { s#list_head list ; e#qeth_card_states state ; t#spinlock_t lock ; s#ccwgroup_device * gdev ; s#qeth_channel read ; s#qeth_channel write ; s#qeth_channel data ; s#net_device * dev ; s#net_device_stats stats ; s#qeth_card_info info ; s#qeth_token token ; s#qeth_seqno seqno ; s#qeth_card_options options ; s#workqueue_struct * event_wq ; t#wait_queue_head_t wait_q ; t#spinlock_t mclock ; unsigned long active_vlans [ ( ( ( 4096 ) + ( 8 * sizeof ( long ) ) - 1 ) / ( 8 * sizeof ( long ) ) ) ] ; s#mutex vid_list_mutex ; s#list_head vid_list ; s#hlist_head mac_htable [ 1 << ( 4 ) ] ; s#hlist_head ip_htable [ 1 << ( 4 ) ] ; s#hlist_head ip_mc_htable [ 1 << ( 4 ) ] ; s#work_struct kernel_thread_starter ; t#spinlock_t thread_mask_lock ; unsigned long thread_start_mask ; unsigned long thread_allowed_mask ; unsigned long thread_running_mask ; s#task_struct * recovery_task ; t#spinlock_t ip_lock ; s#qeth_ipato ipato ; s#list_head cmd_waiter_list ; s#qeth_qdio_info qdio ; s#qeth_perf_stats perf_stats ; int read_or_write_problem ; s#qeth_osn_info osn_info ; s#qeth_discipline * discipline ; t#atomic_t force_alloc_skb ; s#service_level qeth_service_level ; s#qdio_ssqd_desc ssqd ; t#debug_info_t * debug ; s#mutex sbp_lock ; s#mutex conf_mutex ; s#mutex discipline_mutex ; s#napi_struct napi ; s#qeth_rx rx ; s#delayed_work buffer_reclaim_work ; int reclaim_index ; s#work_struct close_dev_work ; } 
qeth_card_hw_is_reachable int qeth_card_hw_is_reachable ( s#qeth_card * ) 
qeth_close_dev void qeth_close_dev ( s#qeth_card * ) 
qeth_set_recovery_task void qeth_set_recovery_task ( s#qeth_card * ) 
qeth_clear_recovery_task void qeth_clear_recovery_task ( s#qeth_card * ) 
qeth_set_allowed_threads void qeth_set_allowed_threads ( s#qeth_card * , unsigned long , int ) 
qeth_threads_running int qeth_threads_running ( s#qeth_card * , unsigned long ) 
qeth_wait_for_threads int qeth_wait_for_threads ( s#qeth_card * , unsigned long ) 
qeth_clear_working_pool_list void qeth_clear_working_pool_list ( s#qeth_card * ) 
qeth_realloc_buffer_pool int qeth_realloc_buffer_pool ( s#qeth_card * , int ) 
qeth_clear_ipacmd_list void qeth_clear_ipacmd_list ( s#qeth_card * ) 
qeth_release_buffer void qeth_release_buffer ( s#qeth_channel * , s#qeth_cmd_buffer * ) 
qeth_wait_for_buffer s#qeth_cmd_buffer * qeth_wait_for_buffer ( s#qeth_channel * ) 
qeth_clear_cmd_buffers void qeth_clear_cmd_buffers ( s#qeth_channel * ) 
qeth_clear_thread_start_bit void qeth_clear_thread_start_bit ( s#qeth_card * , unsigned long ) 
qeth_clear_thread_running_bit void qeth_clear_thread_running_bit ( s#qeth_card * , unsigned long ) 
qeth_do_run_thread int qeth_do_run_thread ( s#qeth_card * , unsigned long ) 
qeth_schedule_recovery void qeth_schedule_recovery ( s#qeth_card * ) 
qeth_clear_qdio_buffers void qeth_clear_qdio_buffers ( s#qeth_card * ) 
qeth_qdio_clear_card int qeth_qdio_clear_card ( s#qeth_card * , int ) 
qeth_prepare_control_data void qeth_prepare_control_data ( s#qeth_card * , int , s#qeth_cmd_buffer * ) 
qeth_send_control_data int qeth_send_control_data ( s#qeth_card * , int , s#qeth_cmd_buffer * , int ( * ) ( s#qeth_card * , s#qeth_reply * , unsigned long ) , void * ) 
qeth_print_status_message void qeth_print_status_message ( s#qeth_card * ) 
qeth_init_qdio_queues int qeth_init_qdio_queues ( s#qeth_card * ) 
e#qeth_ipa_cmds enum qeth_ipa_cmds { IPA_CMD_STARTLAN = 0x01 , IPA_CMD_STOPLAN = 0x02 , IPA_CMD_SETVMAC = 0x21 , IPA_CMD_DELVMAC = 0x22 , IPA_CMD_SETGMAC = 0x23 , IPA_CMD_DELGMAC = 0x24 , IPA_CMD_SETVLAN = 0x25 , IPA_CMD_DELVLAN = 0x26 , IPA_CMD_VNICC = 0x2a , IPA_CMD_SETBRIDGEPORT_OSA = 0x2b , IPA_CMD_SETCCID = 0x41 , IPA_CMD_DELCCID = 0x42 , IPA_CMD_MODCCID = 0x43 , IPA_CMD_SETIP = 0xb1 , IPA_CMD_QIPASSIST = 0xb2 , IPA_CMD_SETASSPARMS = 0xb3 , IPA_CMD_SETIPM = 0xb4 , IPA_CMD_DELIPM = 0xb5 , IPA_CMD_SETRTG = 0xb6 , IPA_CMD_DELIP = 0xb7 , IPA_CMD_SETADAPTERPARMS = 0xb8 , IPA_CMD_SET_DIAG_ASS = 0xb9 , IPA_CMD_SETBRIDGEPORT_IQD = 0xbe , IPA_CMD_CREATE_ADDR = 0xc3 , IPA_CMD_DESTROY_ADDR = 0xc4 , IPA_CMD_REGISTER_LOCAL_ADDR = 0xd1 , IPA_CMD_UNREGISTER_LOCAL_ADDR = 0xd2 , IPA_CMD_ADDRESS_CHANGE_NOTIF = 0xd3 , IPA_CMD_UNKNOWN = 0x00 } 
e#qeth_prot_versions enum qeth_prot_versions { QETH_PROT_IPV4 = 0x0004 , QETH_PROT_IPV6 = 0x0006 , } 
qeth_get_ipacmd_buffer s#qeth_cmd_buffer * qeth_get_ipacmd_buffer ( s#qeth_card * , e#qeth_ipa_cmds , e#qeth_prot_versions ) 
qeth_prepare_ipa_cmd void qeth_prepare_ipa_cmd ( s#qeth_card * , s#qeth_cmd_buffer * ) 
qeth_send_ipa_cmd int qeth_send_ipa_cmd ( s#qeth_card * , s#qeth_cmd_buffer * , int ( * ) ( s#qeth_card * , s#qeth_reply * , unsigned long ) , void * ) 
e#qeth_diags_trap_action enum qeth_diags_trap_action { QETH_DIAGS_TRAP_ARM = 0x01 , QETH_DIAGS_TRAP_DISARM = 0x02 , QETH_DIAGS_TRAP_CAPTURE = 0x04 , } 
qeth_hw_trap int qeth_hw_trap ( s#qeth_card * , e#qeth_diags_trap_action ) 
qeth_configure_cq int qeth_configure_cq ( s#qeth_card * , e#qeth_cq ) 
qeth_get_priority_queue int qeth_get_priority_queue ( s#qeth_card * , s#sk_buff * , int ) 
qeth_count_elements unsigned int qeth_count_elements ( s#sk_buff * , unsigned int ) 
s#qeth_hdr_layer2 struct qeth_hdr_layer2 { t#__u8 id ; t#__u8 flags [ 3 ] ; t#__u8 port_no ; t#__u8 hdr_length ; t#__u16 pkt_length ; t#__u16 seq_no ; t#__u16 vlan_id ; t#__u32 reserved ; t#__u8 reserved2 [ 16 ] ; } 
s#ipv4 struct ipv4 { t#u8 res [ 12 ] ; t#u32 addr ; } 
s#rx struct rx { t#u8 res1 [ 2 ] ; t#u8 src_mac [ 6 ] ; t#u8 res2 [ 4 ] ; t#u16 vlan_id ; t#u8 res3 [ 2 ] ; } 
s#qeth_hdr_layer3 struct qeth_hdr_layer3 { t#__u8 id ; t#__u8 flags ; t#__u16 inbound_checksum ; t#__u32 token ; t#__u16 length ; t#__u8 vlan_prio ; t#__u8 ext_flags ; t#__u16 vlan_id ; t#__u16 frame_offset ; union { t#u8 ipv6_addr [ 16 ] ; s#ipv4 ipv4 ; s#rx rx ; } next_hop ; } 
s#qeth_hdr_osn struct qeth_hdr_osn { t#__u8 id ; t#__u8 reserved ; t#__u16 seq_no ; t#__u16 reserved2 ; t#__u16 control_flags ; t#__u16 pdu_length ; t#__u8 reserved3 [ 18 ] ; t#__u32 ccid ; } 
s#qeth_hdr struct qeth_hdr { union { s#qeth_hdr_layer2 l2 ; s#qeth_hdr_layer3 l3 ; s#qeth_hdr_osn osn ; } hdr ; } 
qeth_add_hw_header int qeth_add_hw_header ( s#qeth_card * , s#sk_buff * , s#qeth_hdr * * , unsigned int , unsigned int , unsigned int * ) 
qeth_do_send_packet_fast int qeth_do_send_packet_fast ( s#qeth_qdio_out_q * , s#sk_buff * , s#qeth_hdr * , unsigned int , unsigned int ) 
qeth_do_send_packet int qeth_do_send_packet ( s#qeth_card * , s#qeth_qdio_out_q * , s#sk_buff * , s#qeth_hdr * , unsigned int , unsigned int , int ) 
s#qeth_hdr_ext_tso struct qeth_hdr_ext_tso { t#__u16 hdr_tot_len ; t#__u8 imb_hdr_no ; t#__u8 reserved ; t#__u8 hdr_type ; t#__u8 hdr_version ; t#__u16 hdr_len ; t#__u32 payload_len ; t#__u16 mss ; t#__u16 dg_hdr_len ; t#__u8 padding [ 16 ] ; } 
s#qeth_hdr_tso struct qeth_hdr_tso { s#qeth_hdr hdr ; s#qeth_hdr_ext_tso ext ; } 
qeth_fill_tso_ext void qeth_fill_tso_ext ( s#qeth_hdr_tso * , unsigned int , s#sk_buff * , unsigned int ) 
qeth_xmit int qeth_xmit ( s#qeth_card * , s#sk_buff * , s#qeth_qdio_out_q * , int , int , void ( * ) ( s#qeth_card * , s#qeth_hdr * , s#sk_buff * , int , int , unsigned int ) ) 
qeth_setadp_promisc_mode void qeth_setadp_promisc_mode ( s#qeth_card * ) 
qeth_get_stats s#net_device_stats * qeth_get_stats ( s#net_device * ) 
qeth_setadpparms_change_macaddr int qeth_setadpparms_change_macaddr ( s#qeth_card * ) 
qeth_set_access_ctrl_online int qeth_set_access_ctrl_online ( s#qeth_card * , int ) 
qeth_tx_timeout void qeth_tx_timeout ( s#net_device * ) 
qeth_vm_request_mac int qeth_vm_request_mac ( s#qeth_card * ) 
qeth_trace_features void qeth_trace_features ( s#qeth_card * ) 
qeth_core_hardsetup_card int qeth_core_hardsetup_card ( s#qeth_card * , t#bool * ) 
qeth_core_get_next_skb s#sk_buff * qeth_core_get_next_skb ( s#qeth_card * , s#qeth_qdio_buffer * , s#qdio_buffer_element * * , int * , s#qeth_hdr * * ) 
qeth_poll int qeth_poll ( s#napi_struct * , int ) 
qeth_setassparms_cb int qeth_setassparms_cb ( s#qeth_card * , s#qeth_reply * , unsigned long ) 
e#qeth_ipa_funcs enum qeth_ipa_funcs { IPA_ARP_PROCESSING = 0x00000001L , IPA_INBOUND_CHECKSUM = 0x00000002L , IPA_OUTBOUND_CHECKSUM = 0x00000004L , IPA_FILTERING = 0x00000010L , IPA_IPV6 = 0x00000020L , IPA_MULTICASTING = 0x00000040L , IPA_IP_REASSEMBLY = 0x00000080L , IPA_QUERY_ARP_COUNTERS = 0x00000100L , IPA_QUERY_ARP_ADDR_INFO = 0x00000200L , IPA_SETADAPTERPARMS = 0x00000400L , IPA_VLAN_PRIO = 0x00000800L , IPA_PASSTHRU = 0x00001000L , IPA_FLUSH_ARP_SUPPORT = 0x00002000L , IPA_FULL_VLAN = 0x00004000L , IPA_INBOUND_PASSTHRU = 0x00008000L , IPA_SOURCE_MAC = 0x00010000L , IPA_OSA_MC_ROUTER = 0x00020000L , IPA_QUERY_ARP_ASSIST = 0x00040000L , IPA_INBOUND_TSO = 0x00080000L , IPA_OUTBOUND_TSO = 0x00100000L , IPA_INBOUND_CHECKSUM_V6 = 0x00400000L , IPA_OUTBOUND_CHECKSUM_V6 = 0x00800000L , } 
qeth_get_setassparms_cmd s#qeth_cmd_buffer * qeth_get_setassparms_cmd ( s#qeth_card * , e#qeth_ipa_funcs , t#__u16 , t#__u16 , e#qeth_prot_versions ) 
qeth_send_setassparms int qeth_send_setassparms ( s#qeth_card * , s#qeth_cmd_buffer * , t#__u16 , long , int ( * ) ( s#qeth_card * , s#qeth_reply * , unsigned long ) , void * ) 
qeth_send_simple_setassparms_prot int qeth_send_simple_setassparms_prot ( s#qeth_card * , e#qeth_ipa_funcs , t#u16 , long , e#qeth_prot_versions ) 
qeth_dbf_longtext void qeth_dbf_longtext ( t#debug_info_t * , int , char * , ... ) 
qeth_generic_devtype extern const s#device_type qeth_generic_devtype 
qeth_do_ioctl int qeth_do_ioctl ( s#net_device * , s#ifreq * , int ) 
qeth_core_get_sset_count int qeth_core_get_sset_count ( s#net_device * , int ) 
qeth_core_get_ethtool_stats void qeth_core_get_ethtool_stats ( s#net_device * , s#ethtool_stats * , t#u64 * ) 
qeth_core_get_strings void qeth_core_get_strings ( s#net_device * , t#u32 , t#u8 * ) 
qeth_core_get_drvinfo void qeth_core_get_drvinfo ( s#net_device * , s#ethtool_drvinfo * ) 
qeth_core_ethtool_get_link_ksettings int qeth_core_ethtool_get_link_ksettings ( s#net_device * , s#ethtool_link_ksettings * ) 
qeth_enable_hw_features void qeth_enable_hw_features ( s#net_device * ) 
qeth_set_features int qeth_set_features ( s#net_device * , t#netdev_features_t ) 
qeth_fix_features t#netdev_features_t qeth_fix_features ( s#net_device * , t#netdev_features_t ) 
qeth_features_check t#netdev_features_t qeth_features_check ( s#sk_buff * , s#net_device * , t#netdev_features_t ) 

/* drivers/s390/net/qeth_core_mpc.o */
IPA_PDU_HEADER extern unsigned char IPA_PDU_HEADER [ ] 

/* drivers/s390/net/qeth_core_sys.o */
s##posix_acl
s##vfsmount
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##device_private
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##proc_ns_operations
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##sec_path
s##workqueue_struct
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##kmem_cache
s##xfrm_state
s##lwtunnel_state
s##uncached_list
s##rt6_info
s##dn_route
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
s##prot_inuse
s##ipv4_devconf
s##xt_table
s##rt6_statistics
s##fib6_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##eventfd_ctx
s##mempolicy
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##key_user
s##key_type
s##assoc_array_ptr
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sock_reuseport
qeth_device_blkt_group extern const s#attribute_group qeth_device_blkt_group 
qeth_device_attr_group extern const s#attribute_group qeth_device_attr_group 

/* drivers/s390/net/qeth_l2_main.o */
s##posix_acl
s##vfsmount
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##device_private
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##proc_ns_operations
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##sec_path
s##workqueue_struct
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##kmem_cache
s##xfrm_state
s##lwtunnel_state
s##uncached_list
s##rt6_info
s##dn_route
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
s##prot_inuse
s##ipv4_devconf
s##xt_table
s##rt6_statistics
s##fib6_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##eventfd_ctx
s##mempolicy
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##key_user
s##key_type
s##assoc_array_ptr
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sock_reuseport
s##ccw_device_private
qeth_l2_discipline extern s#qeth_discipline qeth_l2_discipline 
qeth_osn_assist int qeth_osn_assist ( s#net_device * , void * , int ) 
qeth_osn_register int qeth_osn_register ( unsigned char * , s#net_device * * , int ( * ) ( s#net_device * , void * ) , int ( * ) ( s#sk_buff * ) ) 
qeth_osn_deregister void qeth_osn_deregister ( s#net_device * ) 

/* drivers/s390/net/qeth_l3_main.o */
s##posix_acl
s##vfsmount
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##device_private
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##proc_ns_operations
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##sec_path
s##workqueue_struct
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##kmem_cache
s##xfrm_state
s##uncached_list
s##dn_route
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
s##prot_inuse
s##xt_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##eventfd_ctx
s##mempolicy
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##key_user
s##key_type
s##assoc_array_ptr
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sock_reuseport
s##ccw_device_private
qeth_l3_discipline extern s#qeth_discipline qeth_l3_discipline 

/* drivers/s390/net/smsgiucv.o */
smsg_register_callback int smsg_register_callback ( const char * , void ( * ) ( const char * , char * ) ) 
smsg_unregister_callback void smsg_unregister_callback ( const char * , void ( * ) ( const char * , char * ) ) 

/* drivers/scsi/constants.o */
scsi_sense_key_string extern const char * scsi_sense_key_string ( unsigned char ) 
scsi_extd_sense_format extern const char * scsi_extd_sense_format ( unsigned char , unsigned char , const char * * ) 
scsi_hostbyte_string extern const char * scsi_hostbyte_string ( int ) 
scsi_driverbyte_string extern const char * scsi_driverbyte_string ( int ) 
scsi_mlreturn_string extern const char * scsi_mlreturn_string ( int ) 

/* drivers/scsi/fcoe/fcoe_ctlr.o */
e#fip_state enum fip_state { FIP_ST_DISABLED , FIP_ST_LINK_WAIT , FIP_ST_AUTO , FIP_ST_NON_FIP , FIP_ST_ENABLED , FIP_ST_VNMP_START , FIP_ST_VNMP_PROBE1 , FIP_ST_VNMP_PROBE2 , FIP_ST_VNMP_CLAIM , FIP_ST_VNMP_UP , } 
E#FIP_ST_AUTO 2 
e#fip_mode enum fip_mode { FIP_MODE_AUTO = E#FIP_ST_AUTO , FIP_MODE_NON_FIP , FIP_MODE_FABRIC , FIP_MODE_VN2VN , } 
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##sock
s##key_user
s##key_type
s##assoc_array_ptr
s##poll_table_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##proc_ns_operations
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##mem_cgroup
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##hd_geometry
s##pr_ops
s##blk_mq_ctx
s##kmem_cache
s##bpf_prog_array
s##cgroup_taskset
s##workqueue_struct
s##blkcg_gq
s##blk_flush_queue
s##blk_mq_tags
s##blk_mq_alloc_data
s##blk_mq_debugfs_attr
s##blk_queue_stats
s##rq_wb
s##blk_stat_callback
s##blk_trace
s##throtl_data
s##timer_rand_state
s##disk_events
s##badblocks
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##sec_path
s##neigh_parms
s##neighbour
s##udp_tunnel_info
s##bpf_prog
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##l3mdev_ops
s##ndisc_ops
s##xfrm_state
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##mini_Qdisc
s##Qdisc
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##xt_table
s##inet_hashinfo
s##fib_notifier_ops
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s#scsi_vpd struct scsi_vpd { s#callback_head rcu ; int len ; unsigned char data [ ] ; } 
e#scsi_target_state enum scsi_target_state { STARGET_CREATED = 1 , STARGET_RUNNING , STARGET_REMOVE , STARGET_CREATED_REMOVE , STARGET_DEL , } 
s#scsi_target struct scsi_target { s#scsi_device * starget_sdev_user ; s#list_head siblings ; s#list_head devices ; s#device dev ; s#kref reap_ref ; unsigned int channel ; unsigned int id ; unsigned int create : 1 ; unsigned int single_lun : 1 ; unsigned int pdt_1f_for_no_lun : 1 ; unsigned int no_report_luns : 1 ; unsigned int expecting_lun_change : 1 ; t#atomic_t target_busy ; t#atomic_t target_blocked ; unsigned int can_queue ; unsigned int max_target_blocked ; char scsi_level ; e#scsi_target_state state ; void * hostdata ; unsigned long starget_data [ 0 ] ; } 
t#blist_flags_t typedef t#__u64 blist_flags_t 
E#SDEV_EVT_POWER_ON_RESET_OCCURRED ( 1 ) + 7 
E#SDEV_EVT_LAST E#SDEV_EVT_POWER_ON_RESET_OCCURRED 
E#SDEV_EVT_MAXBITS E#SDEV_EVT_LAST + 1 
s#execute_work struct execute_work { s#work_struct work ; } 
s##scsi_device_handler
e#scsi_device_state enum scsi_device_state { SDEV_CREATED = 1 , SDEV_RUNNING , SDEV_CANCEL , SDEV_DEL , SDEV_QUIESCE , SDEV_OFFLINE , SDEV_TRANSPORT_OFFLINE , SDEV_BLOCK , SDEV_CREATED_BLOCK , } 
s#scsi_device struct scsi_device { s#Scsi_Host * host ; s#request_queue * request_queue ; s#list_head siblings ; s#list_head same_target_siblings ; t#atomic_t device_busy ; t#atomic_t device_blocked ; t#spinlock_t list_lock ; s#list_head cmd_list ; s#list_head starved_entry ; unsigned short queue_depth ; unsigned short max_queue_depth ; unsigned short last_queue_full_depth ; unsigned short last_queue_full_count ; unsigned long last_queue_full_time ; unsigned long queue_ramp_up_period ; unsigned long last_queue_ramp_up ; unsigned int id , channel ; t#u64 lun ; unsigned int manufacturer ; unsigned sector_size ; void * hostdata ; unsigned char type ; char scsi_level ; char inq_periph_qual ; s#mutex inquiry_mutex ; unsigned char inquiry_len ; unsigned char * inquiry ; const char * vendor ; const char * model ; const char * rev ; s#scsi_vpd * vpd_pg83 ; s#scsi_vpd * vpd_pg80 ; unsigned char current_tag ; s#scsi_target * sdev_target ; t#blist_flags_t sdev_bflags ; unsigned int eh_timeout ; unsigned removable : 1 ; unsigned changed : 1 ; unsigned busy : 1 ; unsigned lockable : 1 ; unsigned locked : 1 ; unsigned borken : 1 ; unsigned disconnect : 1 ; unsigned soft_reset : 1 ; unsigned sdtr : 1 ; unsigned wdtr : 1 ; unsigned ppr : 1 ; unsigned tagged_supported : 1 ; unsigned simple_tags : 1 ; unsigned was_reset : 1 ; unsigned expecting_cc_ua : 1 ; unsigned use_10_for_rw : 1 ; unsigned use_10_for_ms : 1 ; unsigned no_report_opcodes : 1 ; unsigned no_write_same : 1 ; unsigned use_16_for_rw : 1 ; unsigned skip_ms_page_8 : 1 ; unsigned skip_ms_page_3f : 1 ; unsigned skip_vpd_pages : 1 ; unsigned try_vpd_pages : 1 ; unsigned use_192_bytes_for_3f : 1 ; unsigned no_start_on_add : 1 ; unsigned allow_restart : 1 ; unsigned manage_start_stop : 1 ; unsigned start_stop_pwr_cond : 1 ; unsigned no_uld_attach : 1 ; unsigned select_no_atn : 1 ; unsigned fix_capacity : 1 ; unsigned guess_capacity : 1 ; unsigned retry_hwerror : 1 ; unsigned last_sector_bug : 1 ; unsigned no_read_disc_info : 1 ; unsigned no_read_capacity_16 : 1 ; unsigned try_rc_10_first : 1 ; unsigned security_supported : 1 ; unsigned is_visible : 1 ; unsigned wce_default_on : 1 ; unsigned no_dif : 1 ; unsigned broken_fua : 1 ; unsigned lun_in_cdb : 1 ; unsigned unmap_limit_for_ws : 1 ; t#atomic_t disk_events_disable_depth ; unsigned long supported_events [ ( ( ( E#SDEV_EVT_MAXBITS ) + ( 8 * sizeof ( long ) ) - 1 ) / ( 8 * sizeof ( long ) ) ) ] ; unsigned long pending_events [ ( ( ( E#SDEV_EVT_MAXBITS ) + ( 8 * sizeof ( long ) ) - 1 ) / ( 8 * sizeof ( long ) ) ) ] ; s#list_head event_list ; s#work_struct event_work ; unsigned int max_device_blocked ; t#atomic_t iorequest_cnt ; t#atomic_t iodone_cnt ; t#atomic_t ioerr_cnt ; s#device sdev_gendev , sdev_dev ; s#execute_work ew ; s#work_struct requeue_work ; s#scsi_device_handler * handler ; void * handler_data ; unsigned char access_state ; s#mutex state_mutex ; e#scsi_device_state sdev_state ; s#task_struct * quiesced_by ; unsigned long sdev_data [ 0 ] ; } 
s#scsi_data_buffer struct scsi_data_buffer { s#sg_table table ; unsigned length ; int resid ; } 
s#scsi_pointer struct scsi_pointer { char * ptr ; int this_residual ; s#scatterlist * buffer ; int buffers_residual ; t#dma_addr_t dma_handle ; volatile int Status ; volatile int Message ; volatile int have_data_in ; volatile int sent_command ; volatile int phase ; } 
s#scsi_cmnd struct scsi_cmnd { s#scsi_request req ; s#scsi_device * device ; s#list_head list ; s#list_head eh_entry ; s#delayed_work abort_work ; s#callback_head rcu ; int eh_eflags ; unsigned long serial_number ; unsigned long jiffies_at_alloc ; int retries ; int allowed ; unsigned char prot_op ; unsigned char prot_type ; unsigned char prot_flags ; unsigned short cmd_len ; e#dma_data_direction sc_data_direction ; unsigned char * cmnd ; s#scsi_data_buffer sdb ; s#scsi_data_buffer * prot_sdb ; unsigned underflow ; unsigned transfersize ; s#request * request ; unsigned char * sense_buffer ; void ( * scsi_done ) ( s#scsi_cmnd * ) ; s#scsi_pointer SCp ; unsigned char * host_scribble ; int result ; int flags ; unsigned char tag ; } 
s##scsi_host_cmd_pool
s#scsi_host_template struct scsi_host_template { s#module * module ; const char * name ; int ( * detect ) ( s#scsi_host_template * ) ; int ( * release ) ( s#Scsi_Host * ) ; const char * ( * info ) ( s#Scsi_Host * ) ; int ( * ioctl ) ( s#scsi_device * , int , void * ) ; int ( * compat_ioctl ) ( s#scsi_device * , int , void * ) ; int ( * queuecommand ) ( s#Scsi_Host * , s#scsi_cmnd * ) ; int ( * eh_abort_handler ) ( s#scsi_cmnd * ) ; int ( * eh_device_reset_handler ) ( s#scsi_cmnd * ) ; int ( * eh_target_reset_handler ) ( s#scsi_cmnd * ) ; int ( * eh_bus_reset_handler ) ( s#scsi_cmnd * ) ; int ( * eh_host_reset_handler ) ( s#scsi_cmnd * ) ; int ( * slave_alloc ) ( s#scsi_device * ) ; int ( * slave_configure ) ( s#scsi_device * ) ; void ( * slave_destroy ) ( s#scsi_device * ) ; int ( * target_alloc ) ( s#scsi_target * ) ; void ( * target_destroy ) ( s#scsi_target * ) ; int ( * scan_finished ) ( s#Scsi_Host * , unsigned long ) ; void ( * scan_start ) ( s#Scsi_Host * ) ; int ( * change_queue_depth ) ( s#scsi_device * , int ) ; int ( * map_queues ) ( s#Scsi_Host * ) ; int ( * bios_param ) ( s#scsi_device * , s#block_device * , t#sector_t , int [ ] ) ; void ( * unlock_native_capacity ) ( s#scsi_device * ) ; int ( * show_info ) ( s#seq_file * , s#Scsi_Host * ) ; int ( * write_info ) ( s#Scsi_Host * , char * , int ) ; e#blk_eh_timer_return ( * eh_timed_out ) ( s#scsi_cmnd * ) ; int ( * host_reset ) ( s#Scsi_Host * , int ) ; const char * proc_name ; s#proc_dir_entry * proc_dir ; int can_queue ; int this_id ; unsigned short sg_tablesize ; unsigned short sg_prot_tablesize ; unsigned int max_sectors ; unsigned long dma_boundary ; short cmd_per_lun ; unsigned char present ; int tag_alloc_policy ; unsigned track_queue_depth : 1 ; unsigned supported_mode : 2 ; unsigned unchecked_isa_dma : 1 ; unsigned use_clustering : 1 ; unsigned emulated : 1 ; unsigned skip_settle_delay : 1 ; unsigned no_write_same : 1 ; unsigned force_blk_mq : 1 ; unsigned int max_host_blocked ; s#device_attribute * * shost_attrs ; s#device_attribute * * sdev_attrs ; const s#attribute_group * * sdev_groups ; s#list_head legacy_hosts ; t#u64 vendor_id ; unsigned int cmd_size ; s#scsi_host_cmd_pool * cmd_pool ; } 
s#scsi_transport_template struct scsi_transport_template { s#transport_container host_attrs ; s#transport_container target_attrs ; s#transport_container device_attrs ; int ( * user_scan ) ( s#Scsi_Host * , t#uint , t#uint , t#u64 ) ; int device_size ; int device_private_offset ; int target_size ; int target_private_offset ; int host_size ; unsigned int create_work_queue : 1 ; void ( * eh_strategy_handler ) ( s#Scsi_Host * ) ; } 
e#scsi_host_state enum scsi_host_state { SHOST_CREATED = 1 , SHOST_RUNNING , SHOST_CANCEL , SHOST_DEL , SHOST_RECOVERY , SHOST_CANCEL_RECOVERY , SHOST_DEL_RECOVERY , } 
s#Scsi_Host struct Scsi_Host { s#list_head __devices ; s#list_head __targets ; s#list_head starved_list ; t#spinlock_t default_lock ; t#spinlock_t * host_lock ; s#mutex scan_mutex ; s#list_head eh_cmd_q ; s#task_struct * ehandler ; s#completion * eh_action ; t#wait_queue_head_t host_wait ; s#scsi_host_template * hostt ; s#scsi_transport_template * transportt ; union { s#blk_queue_tag * bqt ; s#blk_mq_tag_set tag_set ; } ; t#atomic_t host_busy ; t#atomic_t host_blocked ; unsigned int host_failed ; unsigned int host_eh_scheduled ; unsigned int host_no ; int eh_deadline ; unsigned long last_reset ; unsigned int max_channel ; unsigned int max_id ; t#u64 max_lun ; unsigned int unique_id ; unsigned short max_cmd_len ; int this_id ; int can_queue ; short cmd_per_lun ; short unsigned int sg_tablesize ; short unsigned int sg_prot_tablesize ; unsigned int max_sectors ; unsigned long dma_boundary ; unsigned nr_hw_queues ; unsigned long cmd_serial_number ; unsigned active_mode : 2 ; unsigned unchecked_isa_dma : 1 ; unsigned use_clustering : 1 ; unsigned host_self_blocked : 1 ; unsigned reverse_ordering : 1 ; unsigned tmf_in_progress : 1 ; unsigned async_scan : 1 ; unsigned eh_noresume : 1 ; unsigned no_write_same : 1 ; unsigned use_blk_mq : 1 ; unsigned use_cmd_list : 1 ; unsigned short_inquiry : 1 ; char work_q_name [ 20 ] ; s#workqueue_struct * work_q ; s#workqueue_struct * tmf_work_q ; unsigned no_scsi2_lun_in_cdb : 1 ; unsigned int max_host_blocked ; unsigned int prot_capabilities ; unsigned char prot_guard_type ; unsigned long base ; unsigned long io_port ; unsigned char n_io_port ; unsigned char dma_channel ; unsigned int irq ; e#scsi_host_state shost_state ; s#device shost_gendev , shost_dev ; s#list_head sht_legacy_list ; void * shost_data ; s#device * dma_dev ; unsigned long hostdata [ 0 ] __attribute__ ( ( aligned ( sizeof ( unsigned long ) ) ) ) ; } 
e#fc_port_state enum fc_port_state { FC_PORTSTATE_UNKNOWN , FC_PORTSTATE_NOTPRESENT , FC_PORTSTATE_ONLINE , FC_PORTSTATE_OFFLINE , FC_PORTSTATE_BLOCKED , FC_PORTSTATE_BYPASSED , FC_PORTSTATE_DIAGNOSTICS , FC_PORTSTATE_LINKDOWN , FC_PORTSTATE_ERROR , FC_PORTSTATE_LOOPBACK , FC_PORTSTATE_DELETED , } 
s#fc_rport struct fc_rport { t#u32 maxframe_size ; t#u32 supported_classes ; t#u32 dev_loss_tmo ; t#u64 node_name ; t#u64 port_name ; t#u32 port_id ; t#u32 roles ; e#fc_port_state port_state ; t#u32 scsi_target_id ; t#u32 fast_io_fail_tmo ; void * dd_data ; unsigned int channel ; t#u32 number ; t#u8 flags ; s#list_head peers ; s#device dev ; s#delayed_work dev_loss_work ; s#work_struct scan_work ; s#delayed_work fail_io_work ; s#work_struct stgt_delete_work ; s#work_struct rport_delete_work ; s#request_queue * rqst_q ; } 
e#fc_rport_state enum fc_rport_state { RPORT_ST_INIT , RPORT_ST_FLOGI , RPORT_ST_PLOGI_WAIT , RPORT_ST_PLOGI , RPORT_ST_PRLI , RPORT_ST_RTV , RPORT_ST_READY , RPORT_ST_ADISC , RPORT_ST_DELETE , } 
s#fc_rport_identifiers struct fc_rport_identifiers { t#u64 node_name ; t#u64 port_name ; t#u32 port_id ; t#u32 roles ; } 
e#fc_rport_event enum fc_rport_event { RPORT_EV_NONE = 0 , RPORT_EV_READY , RPORT_EV_FAILED , RPORT_EV_STOP , RPORT_EV_LOGO } 
s#fc_rport_operations struct fc_rport_operations { void ( * event_callback ) ( s#fc_lport * , s#fc_rport_priv * , e#fc_rport_event ) ; } 
s#fc_rport_priv struct fc_rport_priv { s#fc_lport * local_port ; s#fc_rport * rport ; s#kref kref ; e#fc_rport_state rp_state ; s#fc_rport_identifiers ids ; t#u16 flags ; t#u16 max_seq ; t#u16 disc_id ; t#u16 maxframe_size ; unsigned int retries ; unsigned int major_retries ; unsigned int e_d_tov ; unsigned int r_a_tov ; s#mutex rp_mutex ; s#delayed_work retry_work ; e#fc_rport_event event ; s#fc_rport_operations * ops ; s#list_head peers ; s#work_struct event_work ; t#u32 supported_classes ; t#u16 prli_count ; s#callback_head rcu ; t#u16 sp_features ; t#u8 spp_type ; void ( * lld_event_callback ) ( s#fc_lport * , s#fc_rport_priv * , e#fc_rport_event ) ; } 
s#fc_gpn_ft_resp struct fc_gpn_ft_resp { t#__u8 fp_flags ; t#__u8 fp_fid [ 3 ] ; t#__be32 fp_resvd ; t#__be64 fp_wwpn ; } 
e#fc_disc_event enum fc_disc_event { DISC_EV_NONE = 0 , DISC_EV_SUCCESS , DISC_EV_FAILED } 
s#fc_disc struct fc_disc { unsigned char retry_count ; unsigned char pending ; unsigned char requested ; unsigned short seq_count ; unsigned char buf_len ; t#u16 disc_id ; s#list_head rports ; void * priv ; s#mutex disc_mutex ; s#fc_gpn_ft_resp partial_buf ; s#delayed_work disc_work ; void ( * disc_callback ) ( s#fc_lport * , e#fc_disc_event ) ; } 
e#fc_vport_state enum fc_vport_state { FC_VPORT_UNKNOWN , FC_VPORT_ACTIVE , FC_VPORT_DISABLED , FC_VPORT_LINKDOWN , FC_VPORT_INITIALIZING , FC_VPORT_NO_FABRIC_SUPP , FC_VPORT_NO_FABRIC_RSCS , FC_VPORT_FABRIC_LOGOUT , FC_VPORT_FABRIC_REJ_WWN , FC_VPORT_FAILED , } 
e#fc_port_type enum fc_port_type { FC_PORTTYPE_UNKNOWN , FC_PORTTYPE_OTHER , FC_PORTTYPE_NOTPRESENT , FC_PORTTYPE_NPORT , FC_PORTTYPE_NLPORT , FC_PORTTYPE_LPORT , FC_PORTTYPE_PTP , FC_PORTTYPE_NPIV , } 
s#fc_vport struct fc_vport { e#fc_vport_state vport_state ; e#fc_vport_state vport_last_state ; t#u64 node_name ; t#u64 port_name ; t#u32 roles ; t#u32 vport_id ; e#fc_port_type vport_type ; char symbolic_name [ 64 ] ; void * dd_data ; s#Scsi_Host * shost ; unsigned int channel ; t#u32 number ; t#u8 flags ; s#list_head peers ; s#device dev ; s#work_struct vport_delete_work ; } 
s#fc_frame struct fc_frame { s#sk_buff skb ; } 
s#fc_seq struct fc_seq { t#u8 id ; t#u16 ssb_stat ; t#u16 cnt ; t#u32 rec_data ; } 
s#fc_els_lesb struct fc_els_lesb { t#__be32 lesb_link_fail ; t#__be32 lesb_sync_loss ; t#__be32 lesb_sig_loss ; t#__be32 lesb_prim_err ; t#__be32 lesb_inv_word ; t#__be32 lesb_inv_crc ; } 
s#scsi_lun struct scsi_lun { t#__u8 scsi_lun [ 8 ] ; } 
s#fcp_cmnd struct fcp_cmnd { s#scsi_lun fc_lun ; t#__u8 fc_cmdref ; t#__u8 fc_pri_ta ; t#__u8 fc_tm_flags ; t#__u8 fc_flags ; t#__u8 fc_cdb [ 16 ] ; t#__be32 fc_dl ; } 
s#fc_fcp_pkt struct fc_fcp_pkt { t#spinlock_t scsi_pkt_lock ; t#refcount_t ref_cnt ; t#u32 data_len ; s#scsi_cmnd * cmd ; s#list_head list ; s#fc_lport * lp ; t#u8 state ; t#u8 cdb_status ; t#u8 status_code ; t#u8 scsi_comp_flags ; t#u32 io_status ; t#u32 req_flags ; t#u32 scsi_resid ; t#size_t xfer_len ; s#fcp_cmnd cdb_cmd ; t#u32 xfer_contig_end ; t#u16 max_payload ; t#u16 xfer_ddp ; s#fc_rport * rport ; s#fc_seq * seq_ptr ; s#timer_list timer ; int wait_for_comp ; int timer_delay ; t#u32 recov_retry ; s#fc_seq * recov_seq ; s#completion tm_done ; } 
s#libfc_function_template struct libfc_function_template { int ( * frame_send ) ( s#fc_lport * , s#fc_frame * ) ; s#fc_seq * ( * elsct_send ) ( s#fc_lport * , t#u32 , s#fc_frame * , unsigned int , void ( * ) ( s#fc_seq * , s#fc_frame * , void * ) , void * , t#u32 ) ; int ( * ddp_setup ) ( s#fc_lport * , t#u16 , s#scatterlist * , unsigned int ) ; int ( * ddp_done ) ( s#fc_lport * , t#u16 ) ; int ( * ddp_target ) ( s#fc_lport * , t#u16 , s#scatterlist * , unsigned int ) ; void ( * get_lesb ) ( s#fc_lport * , s#fc_els_lesb * ) ; void ( * exch_mgr_reset ) ( s#fc_lport * , t#u32 , t#u32 ) ; void ( * lport_set_port_id ) ( s#fc_lport * , t#u32 , s#fc_frame * ) ; void ( * rport_event_callback ) ( s#fc_lport * , s#fc_rport_priv * , e#fc_rport_event ) ; int ( * fcp_cmd_send ) ( s#fc_lport * , s#fc_fcp_pkt * , void ( * ) ( s#fc_seq * , s#fc_frame * , void * ) ) ; void ( * fcp_cleanup ) ( s#fc_lport * ) ; void ( * fcp_abort_io ) ( s#fc_lport * ) ; void ( * disc_recv_req ) ( s#fc_lport * , s#fc_frame * ) ; void ( * disc_start ) ( void ( * ) ( s#fc_lport * , e#fc_disc_event ) , s#fc_lport * ) ; void ( * disc_stop ) ( s#fc_lport * ) ; void ( * disc_stop_final ) ( s#fc_lport * ) ; } 
e#fc_lport_state enum fc_lport_state { LPORT_ST_DISABLED = 0 , LPORT_ST_FLOGI , LPORT_ST_DNS , LPORT_ST_RNN_ID , LPORT_ST_RSNN_NN , LPORT_ST_RSPN_ID , LPORT_ST_RFT_ID , LPORT_ST_RFF_ID , LPORT_ST_FDMI , LPORT_ST_RHBA , LPORT_ST_RPA , LPORT_ST_DHBA , LPORT_ST_DPRT , LPORT_ST_SCR , LPORT_ST_READY , LPORT_ST_LOGO , LPORT_ST_RESET } 
s#fc_host_statistics struct fc_host_statistics { t#u64 seconds_since_last_reset ; t#u64 tx_frames ; t#u64 tx_words ; t#u64 rx_frames ; t#u64 rx_words ; t#u64 lip_count ; t#u64 nos_count ; t#u64 error_frames ; t#u64 dumped_frames ; t#u64 link_failure_count ; t#u64 loss_of_sync_count ; t#u64 loss_of_signal_count ; t#u64 prim_seq_protocol_err_count ; t#u64 invalid_tx_word_count ; t#u64 invalid_crc_count ; t#u64 fcp_input_requests ; t#u64 fcp_output_requests ; t#u64 fcp_control_requests ; t#u64 fcp_input_megabytes ; t#u64 fcp_output_megabytes ; t#u64 fcp_packet_alloc_failures ; t#u64 fcp_packet_aborts ; t#u64 fcp_frame_alloc_failures ; t#u64 fc_no_free_exch ; t#u64 fc_no_free_exch_xid ; t#u64 fc_xid_not_found ; t#u64 fc_xid_busy ; t#u64 fc_seq_not_found ; t#u64 fc_non_bls_resp ; } 
s#fc_stats struct fc_stats { t#u64 SecondsSinceLastReset ; t#u64 TxFrames ; t#u64 TxWords ; t#u64 RxFrames ; t#u64 RxWords ; t#u64 ErrorFrames ; t#u64 DumpedFrames ; t#u64 FcpPktAllocFails ; t#u64 FcpPktAborts ; t#u64 FcpFrameAllocFails ; t#u64 LinkFailureCount ; t#u64 LossOfSignalCount ; t#u64 InvalidTxWordCount ; t#u64 InvalidCRCCount ; t#u64 InputRequests ; t#u64 OutputRequests ; t#u64 ControlRequests ; t#u64 InputBytes ; t#u64 OutputBytes ; t#u64 VLinkFailureCount ; t#u64 MissDiscAdvCount ; } 
s#fc_els_rnid_gen struct fc_els_rnid_gen { t#__u8 rnid_vend_id [ 16 ] ; t#__be32 rnid_atype ; t#__be32 rnid_phys_port ; t#__be32 rnid_att_nodes ; t#__u8 rnid_node_mgmt ; t#__u8 rnid_ip_ver ; t#__be16 rnid_prot_port ; t#__be32 rnid_ip_addr [ 4 ] ; t#__u8 rnid_resvd [ 2 ] ; t#__be16 rnid_vend_spec ; } 
s#fc_ns_fts struct fc_ns_fts { t#__be32 ff_type_map [ 256 / 32 ] ; } 
E#FC_TYPE_FCP 0x08 
s#fc_lport struct fc_lport { s#Scsi_Host * host ; s#list_head ema_list ; s#fc_rport_priv * dns_rdata ; s#fc_rport_priv * ms_rdata ; s#fc_rport_priv * ptp_rdata ; void * scsi_priv ; s#fc_disc disc ; s#list_head vports ; s#fc_vport * vport ; s#libfc_function_template tt ; t#u8 link_up ; t#u8 qfull ; t#u16 vlan ; e#fc_lport_state state ; unsigned long boot_time ; s#fc_host_statistics host_stats ; s#fc_stats * stats ; t#u8 retry_count ; t#u32 port_id ; t#u64 wwpn ; t#u64 wwnn ; unsigned int service_params ; unsigned int e_d_tov ; unsigned int r_a_tov ; s#fc_els_rnid_gen rnid_gen ; t#u32 sg_supp : 1 ; t#u32 seq_offload : 1 ; t#u32 crc_offload : 1 ; t#u32 lro_enabled : 1 ; t#u32 does_npiv : 1 ; t#u32 npiv_enabled : 1 ; t#u32 point_to_multipoint : 1 ; t#u32 fdmi_enabled : 1 ; t#u32 mfs ; t#u8 max_retry_count ; t#u8 max_rport_retry_count ; t#u16 rport_priv_size ; t#u16 link_speed ; t#u16 link_supported_speeds ; t#u16 lro_xid ; unsigned int lso_max ; s#fc_ns_fts fcts ; s#mutex lp_mutex ; s#list_head list ; s#delayed_work retry_work ; void * prov [ ( E#FC_TYPE_FCP + 1 ) ] ; s#list_head lport_list ; } 
e#fcf_state enum fcf_state { FCOE_FCF_STATE_UNKNOWN , FCOE_FCF_STATE_DISCONNECTED , FCOE_FCF_STATE_CONNECTED , FCOE_FCF_STATE_DELETED , } 
s#fcoe_fcf_device struct fcoe_fcf_device { t#u32 id ; s#device dev ; s#list_head peers ; s#work_struct delete_work ; s#delayed_work dev_loss_work ; t#u32 dev_loss_tmo ; void * priv ; e#fcf_state state ; t#u64 fabric_name ; t#u64 switch_name ; t#u32 fc_map ; t#u16 vfid ; t#u8 mac [ 6 ] ; t#u8 priority ; t#u32 fka_period ; t#u8 selected ; t#u16 vlan_id ; } 
s#fcoe_fcf struct fcoe_fcf { s#list_head list ; s#work_struct event_work ; s#fcoe_ctlr * fip ; s#fcoe_fcf_device * fcf_dev ; unsigned long time ; t#u64 switch_name ; t#u64 fabric_name ; t#u32 fc_map ; t#u16 vfid ; t#u8 fcf_mac [ 6 ] ; t#u8 fcoe_mac [ 6 ] ; t#u8 pri ; t#u8 flogi_sent ; t#u16 flags ; t#u32 fka_period ; t#u8 fd_flags : 1 ; } 
s#fcoe_sysfs_function_template struct fcoe_sysfs_function_template { void ( * get_fcoe_ctlr_link_fail ) ( s#fcoe_ctlr_device * ) ; void ( * get_fcoe_ctlr_vlink_fail ) ( s#fcoe_ctlr_device * ) ; void ( * get_fcoe_ctlr_miss_fka ) ( s#fcoe_ctlr_device * ) ; void ( * get_fcoe_ctlr_symb_err ) ( s#fcoe_ctlr_device * ) ; void ( * get_fcoe_ctlr_err_block ) ( s#fcoe_ctlr_device * ) ; void ( * get_fcoe_ctlr_fcs_error ) ( s#fcoe_ctlr_device * ) ; void ( * set_fcoe_ctlr_mode ) ( s#fcoe_ctlr_device * ) ; int ( * set_fcoe_ctlr_enabled ) ( s#fcoe_ctlr_device * ) ; void ( * get_fcoe_fcf_selected ) ( s#fcoe_fcf_device * ) ; void ( * get_fcoe_fcf_vlan_id ) ( s#fcoe_fcf_device * ) ; } 
e#fip_conn_type enum fip_conn_type { FIP_CONN_TYPE_UNKNOWN , FIP_CONN_TYPE_FABRIC , FIP_CONN_TYPE_VN2VN , } 
e#ctlr_enabled_state enum ctlr_enabled_state { FCOE_CTLR_ENABLED , FCOE_CTLR_DISABLED , FCOE_CTLR_UNUSED , } 
s#fcoe_fc_els_lesb struct fcoe_fc_els_lesb { t#__be32 lesb_link_fail ; t#__be32 lesb_vlink_fail ; t#__be32 lesb_miss_fka ; t#__be32 lesb_symb_err ; t#__be32 lesb_err_block ; t#__be32 lesb_fcs_error ; } 
s#fcoe_ctlr_device struct fcoe_ctlr_device { t#u32 id ; s#device dev ; s#fcoe_sysfs_function_template * f ; s#list_head fcfs ; char work_q_name [ 20 ] ; s#workqueue_struct * work_q ; char devloss_work_q_name [ 20 ] ; s#workqueue_struct * devloss_work_q ; s#mutex lock ; int fcf_dev_loss_tmo ; e#fip_conn_type mode ; e#ctlr_enabled_state enabled ; s#fcoe_fc_els_lesb lesb ; } 
s#rnd_state struct rnd_state { t#__u32 s1 , s2 , s3 , s4 ; } 
s#fcoe_ctlr struct fcoe_ctlr { e#fip_state state ; e#fip_mode mode ; s#fc_lport * lp ; s#fcoe_fcf * sel_fcf ; s#list_head fcfs ; s#fcoe_ctlr_device * cdev ; t#u16 fcf_count ; unsigned long sol_time ; unsigned long sel_time ; unsigned long port_ka_time ; unsigned long ctlr_ka_time ; s#timer_list timer ; s#work_struct timer_work ; s#work_struct recv_work ; s#sk_buff_head fip_recv_list ; s#sk_buff * flogi_req ; s#rnd_state rnd_state ; t#u32 port_id ; t#u16 user_mfs ; t#u16 flogi_oxid ; t#u8 flogi_req_send ; t#u8 flogi_count ; t#bool map_dest ; t#bool fip_resp ; t#u8 spma ; t#u8 probe_tries ; t#u8 priority ; t#u8 dest_addr [ 6 ] ; t#u8 ctl_src_addr [ 6 ] ; void ( * send ) ( s#fcoe_ctlr * , s#sk_buff * ) ; void ( * update_mac ) ( s#fc_lport * , t#u8 * ) ; t#u8 * ( * get_src_addr ) ( s#fc_lport * ) ; s#mutex ctlr_mutex ; t#spinlock_t ctlr_lock ; } 
fcoe_ctlr_init void fcoe_ctlr_init ( s#fcoe_ctlr * , e#fip_state ) 
fcoe_ctlr_destroy void fcoe_ctlr_destroy ( s#fcoe_ctlr * ) 
fcoe_ctlr_link_up void fcoe_ctlr_link_up ( s#fcoe_ctlr * ) 
fcoe_ctlr_link_down int fcoe_ctlr_link_down ( s#fcoe_ctlr * ) 
fcoe_ctlr_els_send int fcoe_ctlr_els_send ( s#fcoe_ctlr * , s#fc_lport * , s#sk_buff * ) 
fcoe_ctlr_recv void fcoe_ctlr_recv ( s#fcoe_ctlr * , s#sk_buff * ) 
fcoe_ctlr_recv_flogi int fcoe_ctlr_recv_flogi ( s#fcoe_ctlr * , s#fc_lport * , s#fc_frame * ) 
fcoe_wwn_from_mac t#u64 fcoe_wwn_from_mac ( unsigned char [ ] , unsigned int , unsigned int ) 
fcoe_libfc_config int fcoe_libfc_config ( s#fc_lport * , s#fcoe_ctlr * , const s#libfc_function_template * , int ) 
fcoe_fcf_get_selected void fcoe_fcf_get_selected ( s#fcoe_fcf_device * ) 
fcoe_ctlr_set_fip_mode void fcoe_ctlr_set_fip_mode ( s#fcoe_ctlr_device * ) 

/* drivers/scsi/fcoe/fcoe_sysfs.o */
s##device_private
s##sock
s##vfsmount
s##posix_acl
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##sec_path
s##neigh_parms
s##neighbour
s##udp_tunnel_info
s##bpf_prog
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##l3mdev_ops
s##ndisc_ops
s##xfrm_state
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##mini_Qdisc
s##Qdisc
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##rtnl_link_ops
s##phy_device
s##sfp_bus
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##kmem_cache
s##xt_table
s##inet_hashinfo
s##fib_notifier_ops
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##workqueue_struct
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##bpf_prog_array
s##cgroup_taskset
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_mq_ctx
s##blkcg_gq
s##blk_flush_queue
s##blk_mq_tags
s##blk_mq_alloc_data
s##blk_mq_debugfs_attr
s##blk_queue_stats
s##rq_wb
s##blk_stat_callback
s##blk_trace
s##throtl_data
s##hd_geometry
s##pr_ops
s##timer_rand_state
s##disk_events
s##badblocks
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##swap_info_struct
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##mtd_info
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
fcoe_ctlr_device_add s#fcoe_ctlr_device * fcoe_ctlr_device_add ( s#device * , s#fcoe_sysfs_function_template * , int ) 
fcoe_ctlr_device_delete void fcoe_ctlr_device_delete ( s#fcoe_ctlr_device * ) 
fcoe_fcf_device_delete void fcoe_fcf_device_delete ( s#fcoe_fcf_device * ) 
fcoe_fcf_device_add s#fcoe_fcf_device * fcoe_fcf_device_add ( s#fcoe_ctlr_device * , s#fcoe_fcf_device * ) 

/* drivers/scsi/fcoe/fcoe_transport.o */
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##sock
s##key_user
s##key_type
s##assoc_array_ptr
s##poll_table_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##proc_ns_operations
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##mem_cgroup
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##hd_geometry
s##pr_ops
s##blk_mq_ctx
s##kmem_cache
s##bpf_prog_array
s##cgroup_taskset
s##workqueue_struct
s##blkcg_gq
s##blk_flush_queue
s##blk_mq_tags
s##blk_mq_alloc_data
s##blk_mq_debugfs_attr
s##blk_queue_stats
s##rq_wb
s##blk_stat_callback
s##blk_trace
s##throtl_data
s##timer_rand_state
s##disk_events
s##badblocks
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##sec_path
s##neigh_parms
s##neighbour
s##udp_tunnel_info
s##bpf_prog
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##l3mdev_ops
s##ndisc_ops
s##xfrm_state
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##mini_Qdisc
s##Qdisc
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##rtnl_link_ops
s##phy_device
s##sfp_bus
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##xt_table
s##inet_hashinfo
s##fib_notifier_ops
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##scsi_device_handler
s##scsi_host_cmd_pool
fcoe_link_speed_update int fcoe_link_speed_update ( s#fc_lport * ) 
__fcoe_get_lesb void __fcoe_get_lesb ( s#fc_lport * , s#fc_els_lesb * , s#net_device * ) 
fcoe_get_lesb void fcoe_get_lesb ( s#fc_lport * , s#fc_els_lesb * ) 
fcoe_ctlr_get_lesb void fcoe_ctlr_get_lesb ( s#fcoe_ctlr_device * ) 
fcoe_wwn_to_str void fcoe_wwn_to_str ( t#u64 , char * , int ) 
fcoe_validate_vport_create int fcoe_validate_vport_create ( s#fc_vport * ) 
fcoe_get_wwn int fcoe_get_wwn ( s#net_device * , t#u64 * , int ) 
fcoe_fc_crc t#u32 fcoe_fc_crc ( s#fc_frame * ) 
fcoe_start_io int fcoe_start_io ( s#sk_buff * ) 
fcoe_clean_pending_queue void fcoe_clean_pending_queue ( s#fc_lport * ) 
fcoe_check_wait_queue void fcoe_check_wait_queue ( s#fc_lport * , s#sk_buff * ) 
fcoe_queue_timer void fcoe_queue_timer ( s#timer_list * ) 
s#fcoe_percpu_s struct fcoe_percpu_s { s#task_struct * kthread ; s#work_struct work ; s#sk_buff_head fcoe_rx_list ; s#page * crc_eof_page ; int crc_eof_offset ; } 
fcoe_get_paged_crc_eof int fcoe_get_paged_crc_eof ( s#sk_buff * , int , s#fcoe_percpu_s * ) 
s#fcoe_transport struct fcoe_transport { char name [ 16 ] ; t#bool attached ; s#list_head list ; t#bool ( * match ) ( s#net_device * ) ; int ( * alloc ) ( s#net_device * ) ; int ( * create ) ( s#net_device * , e#fip_mode ) ; int ( * destroy ) ( s#net_device * ) ; int ( * enable ) ( s#net_device * ) ; int ( * disable ) ( s#net_device * ) ; } 
fcoe_transport_attach int fcoe_transport_attach ( s#fcoe_transport * ) 
fcoe_transport_detach int fcoe_transport_detach ( s#fcoe_transport * ) 
fcoe_ctlr_destroy_store t#ssize_t fcoe_ctlr_destroy_store ( s#bus_type * , const char * , t#size_t ) 

/* drivers/scsi/hosts.o */
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##sock
s##pipe_inode_info
s##poll_table_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##mem_cgroup
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##device_private
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##hd_geometry
s##pr_ops
s##blk_mq_ctx
s##kmem_cache
s##bpf_prog_array
s##cgroup_taskset
s##workqueue_struct
s##blkcg_gq
s##blk_flush_queue
s##blk_mq_tags
s##blk_mq_alloc_data
s##blk_mq_debugfs_attr
s##blk_queue_stats
s##rq_wb
s##blk_stat_callback
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##badblocks
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##scsi_device_handler
s##scsi_cmnd
s##proc_dir_entry
s##scsi_host_cmd_pool
scsi_remove_host extern void scsi_remove_host ( s#Scsi_Host * ) 
scsi_add_host_with_dma extern int scsi_add_host_with_dma ( s#Scsi_Host * , s#device * , s#device * ) 
scsi_host_alloc extern s#Scsi_Host * scsi_host_alloc ( s#scsi_host_template * , int ) 
scsi_register extern s#Scsi_Host * scsi_register ( s#scsi_host_template * , int ) 
scsi_unregister extern void scsi_unregister ( s#Scsi_Host * ) 
scsi_host_lookup extern s#Scsi_Host * scsi_host_lookup ( unsigned short ) 
scsi_host_get extern s#Scsi_Host * scsi_host_get ( s#Scsi_Host * ) 
scsi_host_busy extern int scsi_host_busy ( s#Scsi_Host * ) 
scsi_host_put extern void scsi_host_put ( s#Scsi_Host * ) 
scsi_is_host_device int scsi_is_host_device ( const s#device * ) 
scsi_queue_work extern int scsi_queue_work ( s#Scsi_Host * , s#work_struct * ) 
scsi_flush_work extern void scsi_flush_work ( s#Scsi_Host * ) 

/* drivers/scsi/iscsi_boot_sysfs.o */
s##sock
s##seq_file
s##vfsmount
s##posix_acl
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##device
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s#iscsi_boot_kobj struct iscsi_boot_kobj { s#kobject kobj ; s#attribute_group * attr_group ; s#list_head list ; void * data ; t#ssize_t ( * show ) ( void * , int , char * ) ; t#umode_t ( * is_visible ) ( void * , int ) ; void ( * release ) ( void * ) ; } 
s#iscsi_boot_kset struct iscsi_boot_kset { s#list_head kobj_list ; s#kset * kset ; } 
iscsi_boot_create_target s#iscsi_boot_kobj * iscsi_boot_create_target ( s#iscsi_boot_kset * , int , void * , t#ssize_t ( * ) ( void * , int , char * ) , t#umode_t ( * ) ( void * , int ) , void ( * ) ( void * ) ) 
iscsi_boot_create_initiator s#iscsi_boot_kobj * iscsi_boot_create_initiator ( s#iscsi_boot_kset * , int , void * , t#ssize_t ( * ) ( void * , int , char * ) , t#umode_t ( * ) ( void * , int ) , void ( * ) ( void * ) ) 
iscsi_boot_create_ethernet s#iscsi_boot_kobj * iscsi_boot_create_ethernet ( s#iscsi_boot_kset * , int , void * , t#ssize_t ( * ) ( void * , int , char * ) , t#umode_t ( * ) ( void * , int ) , void ( * ) ( void * ) ) 
iscsi_boot_create_acpitbl s#iscsi_boot_kobj * iscsi_boot_create_acpitbl ( s#iscsi_boot_kset * , int , void * , t#ssize_t ( * ) ( void * , int , char * ) , t#umode_t ( * ) ( void * , int ) , void ( * ) ( void * ) ) 
iscsi_boot_create_kset s#iscsi_boot_kset * iscsi_boot_create_kset ( const char * ) 
iscsi_boot_create_host_kset s#iscsi_boot_kset * iscsi_boot_create_host_kset ( unsigned int ) 
iscsi_boot_destroy_kset void iscsi_boot_destroy_kset ( s#iscsi_boot_kset * ) 

/* drivers/scsi/libfc/fc_disc.o */
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##module
s##writeback_control
s##kstatfs
s##key_user
s##key_type
s##assoc_array_ptr
s##poll_table_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##user_namespace
s##mem_cgroup
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##device_private
s##sock
s##kernfs_open_node
s##kernfs_iattrs
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##hd_geometry
s##pr_ops
s##blk_mq_ctx
s##kmem_cache
s##cgroup_subsys_state
s##workqueue_struct
s##blkcg_gq
s##blk_flush_queue
s##blk_mq_tags
s##blk_mq_alloc_data
s##blk_mq_debugfs_attr
s##blk_queue_stats
s##rq_wb
s##blk_stat_callback
s##blk_trace
s##throtl_data
s##timer_rand_state
s##disk_events
s##badblocks
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##compat_timespec
s##pollfd
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##cgroup_namespace
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##reclaim_state
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##scsi_device_handler
s##proc_dir_entry
s##scsi_host_cmd_pool
s##net_device
s##sec_path
fc_disc_config void fc_disc_config ( s#fc_lport * , void * ) 
fc_disc_init void fc_disc_init ( s#fc_lport * ) 

/* drivers/scsi/libfc/fc_elsct.o */
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##module
s##writeback_control
s##kstatfs
s##key_user
s##key_type
s##assoc_array_ptr
s##poll_table_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##user_namespace
s##mem_cgroup
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##device_private
s##sock
s##kernfs_open_node
s##kernfs_iattrs
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##hd_geometry
s##pr_ops
s##blk_mq_ctx
s##kmem_cache
s##cgroup_subsys_state
s##workqueue_struct
s##blkcg_gq
s##blk_flush_queue
s##blk_mq_tags
s##blk_mq_alloc_data
s##blk_mq_debugfs_attr
s##blk_queue_stats
s##rq_wb
s##blk_stat_callback
s##blk_trace
s##throtl_data
s##timer_rand_state
s##disk_events
s##badblocks
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##compat_timespec
s##pollfd
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##ucounts
s##proc_ns_operations
s##ipc_namespace
s##mnt_namespace
s##net
s##cgroup_namespace
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##reclaim_state
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##scsi_device_handler
s##proc_dir_entry
s##scsi_host_cmd_pool
s##net_device
s##sec_path
fc_elsct_send s#fc_seq * fc_elsct_send ( s#fc_lport * , t#u32 , s#fc_frame * , unsigned int , void ( * ) ( s#fc_seq * , s#fc_frame * , void * ) , void * , t#u32 ) 
fc_elsct_init int fc_elsct_init ( s#fc_lport * ) 

/* drivers/scsi/libfc/fc_exch.o */
fc_cpu_mask extern t#u16 fc_cpu_mask 
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##module
s##writeback_control
s##kstatfs
s##key_user
s##key_type
s##assoc_array_ptr
s##poll_table_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##user_namespace
s##mem_cgroup
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##device_private
s##sock
s##kernfs_open_node
s##kernfs_iattrs
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##hd_geometry
s##pr_ops
s##blk_mq_ctx
s##kmem_cache
s##cgroup_subsys_state
s##workqueue_struct
s##blkcg_gq
s##blk_flush_queue
s##blk_mq_tags
s##blk_mq_alloc_data
s##blk_mq_debugfs_attr
s##blk_queue_stats
s##rq_wb
s##blk_stat_callback
s##blk_trace
s##throtl_data
s##timer_rand_state
s##disk_events
s##badblocks
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##compat_timespec
s##pollfd
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##ucounts
s##proc_ns_operations
s##ipc_namespace
s##mnt_namespace
s##net
s##cgroup_namespace
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##reclaim_state
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##scsi_device_handler
s##proc_dir_entry
s##scsi_host_cmd_pool
s##net_device
s##sec_path
fc_seq_send int fc_seq_send ( s#fc_lport * , s#fc_seq * , s#fc_frame * ) 
fc_seq_start_next s#fc_seq * fc_seq_start_next ( s#fc_seq * ) 
fc_seq_set_resp void fc_seq_set_resp ( s#fc_seq * , void ( * ) ( s#fc_seq * , s#fc_frame * , void * ) , void * ) 
fc_exch_done void fc_exch_done ( s#fc_seq * ) 
e#fc_els_cmd enum fc_els_cmd { ELS_LS_RJT = 0x01 , ELS_LS_ACC = 0x02 , ELS_PLOGI = 0x03 , ELS_FLOGI = 0x04 , ELS_LOGO = 0x05 , ELS_ABTX = 0x06 , ELS_RCS = 0x07 , ELS_RES = 0x08 , ELS_RSS = 0x09 , ELS_RSI = 0x0a , ELS_ESTS = 0x0b , ELS_ESTC = 0x0c , ELS_ADVC = 0x0d , ELS_RTV = 0x0e , ELS_RLS = 0x0f , ELS_ECHO = 0x10 , ELS_TEST = 0x11 , ELS_RRQ = 0x12 , ELS_REC = 0x13 , ELS_SRR = 0x14 , ELS_PRLI = 0x20 , ELS_PRLO = 0x21 , ELS_SCN = 0x22 , ELS_TPLS = 0x23 , ELS_TPRLO = 0x24 , ELS_LCLM = 0x25 , ELS_GAID = 0x30 , ELS_FACT = 0x31 , ELS_FDACDT = 0x32 , ELS_NACT = 0x33 , ELS_NDACT = 0x34 , ELS_QOSR = 0x40 , ELS_RVCS = 0x41 , ELS_PDISC = 0x50 , ELS_FDISC = 0x51 , ELS_ADISC = 0x52 , ELS_RNC = 0x53 , ELS_FARP_REQ = 0x54 , ELS_FARP_REPL = 0x55 , ELS_RPS = 0x56 , ELS_RPL = 0x57 , ELS_RPBC = 0x58 , ELS_FAN = 0x60 , ELS_RSCN = 0x61 , ELS_SCR = 0x62 , ELS_RNFT = 0x63 , ELS_CSR = 0x68 , ELS_CSU = 0x69 , ELS_LINIT = 0x70 , ELS_LSTS = 0x72 , ELS_RNID = 0x78 , ELS_RLIR = 0x79 , ELS_LIRR = 0x7a , ELS_SRL = 0x7b , ELS_SBRP = 0x7c , ELS_RPSC = 0x7d , ELS_QSA = 0x7e , ELS_EVFP = 0x7f , ELS_LKA = 0x80 , ELS_AUTH_ELS = 0x90 , } 
e#fc_els_rjt_reason enum fc_els_rjt_reason { ELS_RJT_NONE = 0 , ELS_RJT_INVAL = 0x01 , ELS_RJT_LOGIC = 0x03 , ELS_RJT_BUSY = 0x05 , ELS_RJT_PROT = 0x07 , ELS_RJT_UNAB = 0x09 , ELS_RJT_UNSUP = 0x0b , ELS_RJT_INPROG = 0x0e , ELS_RJT_FIP = 0x20 , ELS_RJT_VENDOR = 0xff , } 
e#fc_els_rjt_explan enum fc_els_rjt_explan { ELS_EXPL_NONE = 0x00 , ELS_EXPL_SPP_OPT_ERR = 0x01 , ELS_EXPL_SPP_ICTL_ERR = 0x03 , ELS_EXPL_AH = 0x11 , ELS_EXPL_AH_REQ = 0x13 , ELS_EXPL_SID = 0x15 , ELS_EXPL_OXID_RXID = 0x17 , ELS_EXPL_INPROG = 0x19 , ELS_EXPL_PLOGI_REQD = 0x1e , ELS_EXPL_INSUF_RES = 0x29 , ELS_EXPL_UNAB_DATA = 0x2a , ELS_EXPL_UNSUPR = 0x2c , ELS_EXPL_INV_LEN = 0x2d , ELS_EXPL_NOT_NEIGHBOR = 0x62 , } 
s#fc_seq_els_data struct fc_seq_els_data { e#fc_els_rjt_reason reason ; e#fc_els_rjt_explan explan ; } 
fc_seq_els_rsp_send void fc_seq_els_rsp_send ( s#fc_frame * , e#fc_els_cmd , s#fc_seq_els_data * ) 
fc_seq_assign s#fc_seq * fc_seq_assign ( s#fc_lport * , s#fc_frame * ) 
fc_seq_release void fc_seq_release ( s#fc_seq * ) 
fc_exch_mgr_reset void fc_exch_mgr_reset ( s#fc_lport * , t#u32 , t#u32 ) 
fc_exch_seq_send s#fc_seq * fc_exch_seq_send ( s#fc_lport * , s#fc_frame * , void ( * ) ( s#fc_seq * , s#fc_frame * , void * ) , void ( * ) ( s#fc_seq * , void * ) , void * , t#u32 ) 
fc_exch_update_stats void fc_exch_update_stats ( s#fc_lport * ) 
s##fc_exch_mgr_anchor
s##fc_exch_mgr
fc_exch_mgr_add s#fc_exch_mgr_anchor * fc_exch_mgr_add ( s#fc_lport * , s#fc_exch_mgr * , t#bool ( * ) ( s#fc_frame * ) ) 
fc_exch_mgr_del void fc_exch_mgr_del ( s#fc_exch_mgr_anchor * ) 
fc_exch_mgr_list_clone int fc_exch_mgr_list_clone ( s#fc_lport * , s#fc_lport * ) 
E#FC_SOF_I2 0x2d 
E#FC_SOF_I3 0x2e 
E#FC_SOF_I4 0x29 
E#FC_SOF_F 0x28 
e#fc_class enum fc_class { FC_CLASS_NONE = 0 , FC_CLASS_2 = E#FC_SOF_I2 , FC_CLASS_3 = E#FC_SOF_I3 , FC_CLASS_4 = E#FC_SOF_I4 , FC_CLASS_F = E#FC_SOF_F , } 
fc_exch_mgr_alloc s#fc_exch_mgr * fc_exch_mgr_alloc ( s#fc_lport * , e#fc_class , t#u16 , t#u16 , t#bool ( * ) ( s#fc_frame * ) ) 
fc_exch_mgr_free void fc_exch_mgr_free ( s#fc_lport * ) 
fc_exch_recv void fc_exch_recv ( s#fc_lport * , s#fc_frame * ) 
fc_exch_init int fc_exch_init ( s#fc_lport * ) 

/* drivers/scsi/libfc/fc_fcp.o */
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##sock
s##key_user
s##key_type
s##assoc_array_ptr
s##poll_table_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##user_namespace
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##mem_cgroup
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##hd_geometry
s##pr_ops
s##blk_mq_ctx
s##kmem_cache
s##cgroup_subsys_state
s##workqueue_struct
s##blkcg_gq
s##blk_flush_queue
s##blk_mq_tags
s##blk_mq_alloc_data
s##blk_mq_debugfs_attr
s##blk_queue_stats
s##rq_wb
s##blk_stat_callback
s##blk_trace
s##throtl_data
s##timer_rand_state
s##disk_events
s##badblocks
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##ucounts
s##proc_ns_operations
s##ipc_namespace
s##mnt_namespace
s##net
s##cgroup_namespace
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##reclaim_state
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##scsi_device_handler
s##proc_dir_entry
s##scsi_host_cmd_pool
fc_queuecommand int fc_queuecommand ( s#Scsi_Host * , s#scsi_cmnd * ) 
fc_eh_abort int fc_eh_abort ( s#scsi_cmnd * ) 
fc_eh_device_reset int fc_eh_device_reset ( s#scsi_cmnd * ) 
fc_eh_host_reset int fc_eh_host_reset ( s#scsi_cmnd * ) 
fc_slave_alloc int fc_slave_alloc ( s#scsi_device * ) 
s##net_device
s##sec_path
fc_fcp_destroy void fc_fcp_destroy ( s#fc_lport * ) 
fc_fcp_init int fc_fcp_init ( s#fc_lport * ) 

/* drivers/scsi/libfc/fc_frame.o */
s##net_device
s##sock
s##sec_path
fc_frame_crc_check t#u32 fc_frame_crc_check ( s#fc_frame * ) 
_fc_frame_alloc s#fc_frame * _fc_frame_alloc ( t#size_t ) 
s##fc_lport
fc_frame_alloc_fill s#fc_frame * fc_frame_alloc_fill ( s#fc_lport * , t#size_t ) 

/* drivers/scsi/libfc/fc_libfc.o */
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##sock
s##key_user
s##key_type
s##assoc_array_ptr
s##poll_table_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##user_namespace
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##mem_cgroup
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##hd_geometry
s##pr_ops
s##blk_mq_ctx
s##kmem_cache
s##cgroup_subsys_state
s##workqueue_struct
s##blkcg_gq
s##blk_flush_queue
s##blk_mq_tags
s##blk_mq_alloc_data
s##blk_mq_debugfs_attr
s##blk_queue_stats
s##rq_wb
s##blk_stat_callback
s##blk_trace
s##throtl_data
s##timer_rand_state
s##disk_events
s##badblocks
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##ucounts
s##proc_ns_operations
s##ipc_namespace
s##mnt_namespace
s##net
s##cgroup_namespace
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##reclaim_state
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
fc_lport_notifier_head extern s#blocking_notifier_head fc_lport_notifier_head 
s##net_device
s##sec_path
e#fc_rctl enum fc_rctl { FC_RCTL_DD_UNCAT = 0x00 , FC_RCTL_DD_SOL_DATA = 0x01 , FC_RCTL_DD_UNSOL_CTL = 0x02 , FC_RCTL_DD_SOL_CTL = 0x03 , FC_RCTL_DD_UNSOL_DATA = 0x04 , FC_RCTL_DD_DATA_DESC = 0x05 , FC_RCTL_DD_UNSOL_CMD = 0x06 , FC_RCTL_DD_CMD_STATUS = 0x07 , FC_RCTL_ELS_REQ = 0x22 , FC_RCTL_ELS_REP = 0x23 , FC_RCTL_ELS4_REQ = 0x32 , FC_RCTL_ELS4_REP = 0x33 , FC_RCTL_VFTH = 0x50 , FC_RCTL_IFRH = 0x51 , FC_RCTL_ENCH = 0x52 , FC_RCTL_BA_NOP = 0x80 , FC_RCTL_BA_ABTS = 0x81 , FC_RCTL_BA_RMC = 0x82 , FC_RCTL_BA_ACC = 0x84 , FC_RCTL_BA_RJT = 0x85 , FC_RCTL_BA_PRMT = 0x86 , FC_RCTL_ACK_1 = 0xc0 , FC_RCTL_ACK_0 = 0xc1 , FC_RCTL_P_RJT = 0xc2 , FC_RCTL_F_RJT = 0xc3 , FC_RCTL_P_BSY = 0xc4 , FC_RCTL_F_BSY = 0xc5 , FC_RCTL_F_BSYL = 0xc6 , FC_RCTL_LCR = 0xc7 , FC_RCTL_END = 0xc9 , } 
fc_fill_hdr void fc_fill_hdr ( s#fc_frame * , const s#fc_frame * , e#fc_rctl , t#u32 , t#u16 , t#u32 ) 
fc_fill_reply_hdr void fc_fill_reply_hdr ( s#fc_frame * , const s#fc_frame * , e#fc_rctl , t#u32 ) 
s##scsi_device_handler
s##proc_dir_entry
s##scsi_host_cmd_pool
fc_lport_iterate void fc_lport_iterate ( void ( * ) ( s#fc_lport * , void * ) , void * ) 
e#fc_fh_type enum fc_fh_type { FC_TYPE_BLS = 0x00 , FC_TYPE_ELS = 0x01 , FC_TYPE_IP = 0x05 , FC_TYPE_FCP = 0x08 , FC_TYPE_CT = 0x20 , FC_TYPE_ILS = 0x22 , FC_TYPE_NVME = 0x28 , } 
s#fc_els_spp struct fc_els_spp { t#__u8 spp_type ; t#__u8 spp_type_ext ; t#__u8 spp_flags ; t#__u8 _spp_resvd ; t#__be32 spp_orig_pa ; t#__be32 spp_resp_pa ; t#__be32 spp_params ; } 
s#fc4_prov struct fc4_prov { int ( * prli ) ( s#fc_rport_priv * , t#u32 , const s#fc_els_spp * , s#fc_els_spp * ) ; void ( * prlo ) ( s#fc_rport_priv * ) ; void ( * recv ) ( s#fc_lport * , s#fc_frame * ) ; s#module * module ; } 
fc_fc4_register_provider int fc_fc4_register_provider ( e#fc_fh_type , s#fc4_prov * ) 
fc_fc4_deregister_provider void fc_fc4_deregister_provider ( e#fc_fh_type , s#fc4_prov * ) 

/* drivers/scsi/libfc/fc_lport.o */
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##sock
s##key_user
s##key_type
s##assoc_array_ptr
s##poll_table_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##user_namespace
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##mem_cgroup
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##hd_geometry
s##pr_ops
s##blk_mq_ctx
s##kmem_cache
s##cgroup_subsys_state
s##workqueue_struct
s##blkcg_gq
s##blk_flush_queue
s##blk_mq_tags
s##blk_mq_alloc_data
s##blk_mq_debugfs_attr
s##blk_queue_stats
s##rq_wb
s##blk_stat_callback
s##blk_trace
s##throtl_data
s##timer_rand_state
s##disk_events
s##badblocks
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##ucounts
s##proc_ns_operations
s##ipc_namespace
s##mnt_namespace
s##net
s##cgroup_namespace
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##reclaim_state
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##scsi_device_handler
s##proc_dir_entry
s##scsi_host_cmd_pool
fc_get_host_port_state void fc_get_host_port_state ( s#Scsi_Host * ) 
fc_get_host_speed void fc_get_host_speed ( s#Scsi_Host * ) 
fc_get_host_stats s#fc_host_statistics * fc_get_host_stats ( s#Scsi_Host * ) 
s##net_device
s##sec_path
fc_fabric_login int fc_fabric_login ( s#fc_lport * ) 
fc_linkup void fc_linkup ( s#fc_lport * ) 
fc_linkdown void fc_linkdown ( s#fc_lport * ) 
fc_fabric_logoff int fc_fabric_logoff ( s#fc_lport * ) 
fc_lport_destroy int fc_lport_destroy ( s#fc_lport * ) 
fc_set_mfs int fc_set_mfs ( s#fc_lport * , t#u32 ) 
fc_lport_set_local_id void fc_lport_set_local_id ( s#fc_lport * , t#u32 ) 
fc_lport_recv void fc_lport_recv ( s#fc_lport * , s#fc_frame * ) 
fc_lport_reset int fc_lport_reset ( s#fc_lport * ) 
fc_lport_logo_resp void fc_lport_logo_resp ( s#fc_seq * , s#fc_frame * , void * ) 
fc_lport_flogi_resp void fc_lport_flogi_resp ( s#fc_seq * , s#fc_frame * , void * ) 
fc_lport_config int fc_lport_config ( s#fc_lport * ) 
fc_lport_init int fc_lport_init ( s#fc_lport * ) 
fc_lport_bsg_request int fc_lport_bsg_request ( s#bsg_job * ) 

/* drivers/scsi/libfc/fc_npiv.o */
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##module
s##writeback_control
s##kstatfs
s##key_user
s##key_type
s##assoc_array_ptr
s##poll_table_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##user_namespace
s##mem_cgroup
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##device_private
s##sock
s##kernfs_open_node
s##kernfs_iattrs
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##hd_geometry
s##pr_ops
s##blk_mq_ctx
s##kmem_cache
s##cgroup_subsys_state
s##workqueue_struct
s##blkcg_gq
s##blk_flush_queue
s##blk_mq_tags
s##blk_mq_alloc_data
s##blk_mq_debugfs_attr
s##blk_queue_stats
s##rq_wb
s##blk_stat_callback
s##blk_trace
s##throtl_data
s##timer_rand_state
s##disk_events
s##badblocks
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##compat_timespec
s##pollfd
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##cgroup_namespace
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##reclaim_state
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##scsi_device_handler
s##proc_dir_entry
s##scsi_host_cmd_pool
s##net_device
s##sec_path
libfc_vport_create s#fc_lport * libfc_vport_create ( s#fc_vport * , int ) 
fc_vport_id_lookup s#fc_lport * fc_vport_id_lookup ( s#fc_lport * , t#u32 ) 
fc_vport_setlink void fc_vport_setlink ( s#fc_lport * ) 

/* drivers/scsi/libfc/fc_rport.o */
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##module
s##writeback_control
s##kstatfs
s##key_user
s##key_type
s##assoc_array_ptr
s##poll_table_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##user_namespace
s##mem_cgroup
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##device_private
s##sock
s##kernfs_open_node
s##kernfs_iattrs
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##hd_geometry
s##pr_ops
s##blk_mq_ctx
s##kmem_cache
s##cgroup_subsys_state
s##workqueue_struct
s##blkcg_gq
s##blk_flush_queue
s##blk_mq_tags
s##blk_mq_alloc_data
s##blk_mq_debugfs_attr
s##blk_queue_stats
s##rq_wb
s##blk_stat_callback
s##blk_trace
s##throtl_data
s##timer_rand_state
s##disk_events
s##badblocks
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##compat_timespec
s##pollfd
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##ucounts
s##proc_ns_operations
s##ipc_namespace
s##mnt_namespace
s##net
s##cgroup_namespace
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##reclaim_state
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##scsi_device_handler
s##proc_dir_entry
s##scsi_host_cmd_pool
s##net_device
s##sec_path
fc_rport_lookup s#fc_rport_priv * fc_rport_lookup ( const s#fc_lport * , t#u32 ) 
fc_rport_create s#fc_rport_priv * fc_rport_create ( s#fc_lport * , t#u32 ) 
fc_rport_destroy void fc_rport_destroy ( s#kref * ) 
fc_set_rport_loss_tmo void fc_set_rport_loss_tmo ( s#fc_rport * , t#u32 ) 
fc_rport_login int fc_rport_login ( s#fc_rport_priv * ) 
fc_rport_logoff int fc_rport_logoff ( s#fc_rport_priv * ) 
fc_rport_recv_req void fc_rport_recv_req ( s#fc_lport * , s#fc_frame * ) 
fc_rport_flush_queue void fc_rport_flush_queue ( void ) 
fc_rport_terminate_io void fc_rport_terminate_io ( s#fc_rport * ) 

/* drivers/scsi/libiscsi.o */
s##posix_acl
s##vfsmount
s##device_private
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##sec_path
s##workqueue_struct
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##kmem_cache
s##xfrm_state
s##lwtunnel_state
s##uncached_list
s##rt6_info
s##dn_route
s##prefix_info
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
s##prot_inuse
s##ipv4_devconf
s##xt_table
s##rt6_statistics
s##fib6_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##eventfd_ctx
s##mempolicy
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_mq_ctx
s##blkcg_gq
s##blk_flush_queue
s##blk_mq_tags
s##blk_mq_alloc_data
s##blk_mq_debugfs_attr
s##blk_queue_stats
s##rq_wb
s##blk_stat_callback
s##blk_trace
s##bsg_job
s##throtl_data
s##hd_geometry
s##pr_ops
s##timer_rand_state
s##disk_events
s##badblocks
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s#iscsi_cls_session struct iscsi_cls_session { s#list_head sess_list ; s#iscsi_transport * transport ; t#spinlock_t lock ; s#work_struct block_work ; s#work_struct unblock_work ; s#work_struct scan_work ; s#work_struct unbind_work ; int recovery_tmo ; t#bool recovery_tmo_sysfs_override ; s#delayed_work recovery_work ; unsigned int target_id ; t#bool ida_used ; t#pid_t creator ; int state ; int sid ; void * dd_data ; s#device dev ; } 
s#iscsi_endpoint struct iscsi_endpoint { void * dd_data ; s#device dev ; t#uint64_t id ; s#iscsi_cls_conn * conn ; } 
e#iscsi_param enum iscsi_param { ISCSI_PARAM_MAX_RECV_DLENGTH , ISCSI_PARAM_MAX_XMIT_DLENGTH , ISCSI_PARAM_HDRDGST_EN , ISCSI_PARAM_DATADGST_EN , ISCSI_PARAM_INITIAL_R2T_EN , ISCSI_PARAM_MAX_R2T , ISCSI_PARAM_IMM_DATA_EN , ISCSI_PARAM_FIRST_BURST , ISCSI_PARAM_MAX_BURST , ISCSI_PARAM_PDU_INORDER_EN , ISCSI_PARAM_DATASEQ_INORDER_EN , ISCSI_PARAM_ERL , ISCSI_PARAM_IFMARKER_EN , ISCSI_PARAM_OFMARKER_EN , ISCSI_PARAM_EXP_STATSN , ISCSI_PARAM_TARGET_NAME , ISCSI_PARAM_TPGT , ISCSI_PARAM_PERSISTENT_ADDRESS , ISCSI_PARAM_PERSISTENT_PORT , ISCSI_PARAM_SESS_RECOVERY_TMO , ISCSI_PARAM_CONN_PORT , ISCSI_PARAM_CONN_ADDRESS , ISCSI_PARAM_USERNAME , ISCSI_PARAM_USERNAME_IN , ISCSI_PARAM_PASSWORD , ISCSI_PARAM_PASSWORD_IN , ISCSI_PARAM_FAST_ABORT , ISCSI_PARAM_ABORT_TMO , ISCSI_PARAM_LU_RESET_TMO , ISCSI_PARAM_HOST_RESET_TMO , ISCSI_PARAM_PING_TMO , ISCSI_PARAM_RECV_TMO , ISCSI_PARAM_IFACE_NAME , ISCSI_PARAM_ISID , ISCSI_PARAM_INITIATOR_NAME , ISCSI_PARAM_TGT_RESET_TMO , ISCSI_PARAM_TARGET_ALIAS , ISCSI_PARAM_CHAP_IN_IDX , ISCSI_PARAM_CHAP_OUT_IDX , ISCSI_PARAM_BOOT_ROOT , ISCSI_PARAM_BOOT_NIC , ISCSI_PARAM_BOOT_TARGET , ISCSI_PARAM_AUTO_SND_TGT_DISABLE , ISCSI_PARAM_DISCOVERY_SESS , ISCSI_PARAM_PORTAL_TYPE , ISCSI_PARAM_CHAP_AUTH_EN , ISCSI_PARAM_DISCOVERY_LOGOUT_EN , ISCSI_PARAM_BIDI_CHAP_EN , ISCSI_PARAM_DISCOVERY_AUTH_OPTIONAL , ISCSI_PARAM_DEF_TIME2WAIT , ISCSI_PARAM_DEF_TIME2RETAIN , ISCSI_PARAM_MAX_SEGMENT_SIZE , ISCSI_PARAM_STATSN , ISCSI_PARAM_KEEPALIVE_TMO , ISCSI_PARAM_LOCAL_PORT , ISCSI_PARAM_TSID , ISCSI_PARAM_DEF_TASKMGMT_TMO , ISCSI_PARAM_TCP_TIMESTAMP_STAT , ISCSI_PARAM_TCP_WSF_DISABLE , ISCSI_PARAM_TCP_NAGLE_DISABLE , ISCSI_PARAM_TCP_TIMER_SCALE , ISCSI_PARAM_TCP_TIMESTAMP_EN , ISCSI_PARAM_TCP_XMIT_WSF , ISCSI_PARAM_TCP_RECV_WSF , ISCSI_PARAM_IP_FRAGMENT_DISABLE , ISCSI_PARAM_IPV4_TOS , ISCSI_PARAM_IPV6_TC , ISCSI_PARAM_IPV6_FLOW_LABEL , ISCSI_PARAM_IS_FW_ASSIGNED_IPV6 , ISCSI_PARAM_DISCOVERY_PARENT_IDX , ISCSI_PARAM_DISCOVERY_PARENT_TYPE , ISCSI_PARAM_LOCAL_IPADDR , ISCSI_PARAM_MAX , } 
s##scsi_device_handler
s##scsi_host_cmd_pool
e#iscsi_host_param enum iscsi_host_param { ISCSI_HOST_PARAM_HWADDRESS , ISCSI_HOST_PARAM_INITIATOR_NAME , ISCSI_HOST_PARAM_NETDEV_NAME , ISCSI_HOST_PARAM_IPADDRESS , ISCSI_HOST_PARAM_PORT_STATE , ISCSI_HOST_PARAM_PORT_SPEED , ISCSI_HOST_PARAM_MAX , } 
t#itt_t typedef t#uint32_t itt_t 
s#iscsi_hdr struct iscsi_hdr { t#uint8_t opcode ; t#uint8_t flags ; t#uint8_t rsvd2 [ 2 ] ; t#uint8_t hlength ; t#uint8_t dlength [ 3 ] ; s#scsi_lun lun ; t#itt_t itt ; t#__be32 ttt ; t#__be32 statsn ; t#__be32 exp_statsn ; t#__be32 max_statsn ; t#uint8_t other [ 12 ] ; } 
s#iscsi_stats_custom struct iscsi_stats_custom { char desc [ 64 ] ; t#uint64_t value ; } 
s#iscsi_stats struct iscsi_stats { t#uint64_t txdata_octets ; t#uint64_t rxdata_octets ; t#uint32_t noptx_pdus ; t#uint32_t scsicmd_pdus ; t#uint32_t tmfcmd_pdus ; t#uint32_t login_pdus ; t#uint32_t text_pdus ; t#uint32_t dataout_pdus ; t#uint32_t logout_pdus ; t#uint32_t snack_pdus ; t#uint32_t noprx_pdus ; t#uint32_t scsirsp_pdus ; t#uint32_t tmfrsp_pdus ; t#uint32_t textrsp_pdus ; t#uint32_t datain_pdus ; t#uint32_t logoutrsp_pdus ; t#uint32_t r2t_pdus ; t#uint32_t async_pdus ; t#uint32_t rjt_pdus ; t#uint32_t digest_err ; t#uint32_t timeout_err ; t#uint32_t custom_length ; s#iscsi_stats_custom custom [ 0 ] __attribute__ ( ( aligned ( sizeof ( uint64_t ) ) ) ) ; } 
s#iscsi_r2t_info struct iscsi_r2t_info { t#__be32 ttt ; t#__be32 exp_statsn ; t#uint32_t data_length ; t#uint32_t data_offset ; int data_count ; int datasn ; int sent ; } 
s#iscsi_task struct iscsi_task { s#iscsi_hdr * hdr ; unsigned short hdr_max ; unsigned short hdr_len ; t#itt_t hdr_itt ; t#__be32 cmdsn ; s#scsi_lun lun ; int itt ; unsigned imm_count ; s#iscsi_r2t_info unsol_r2t ; char * data ; unsigned data_count ; s#scsi_cmnd * sc ; s#iscsi_conn * conn ; unsigned long last_xfer ; unsigned long last_timeout ; t#bool have_checked_conn ; t#bool protected ; int state ; t#refcount_t refcount ; s#list_head running ; void * dd_data ; } 
e#iscsi_tgt_dscvr enum iscsi_tgt_dscvr { ISCSI_TGT_DSCVR_SEND_TARGETS = 1 , ISCSI_TGT_DSCVR_ISNS = 2 , ISCSI_TGT_DSCVR_SLP = 3 , } 
s#iscsi_path struct iscsi_path { t#uint64_t handle ; t#uint8_t mac_addr [ 6 ] ; t#uint8_t mac_addr_old [ 6 ] ; t#uint32_t ip_addr_len ; union { s#in_addr v4_addr ; s#in6_addr v6_addr ; } src ; union { s#in_addr v4_addr ; s#in6_addr v6_addr ; } dst ; t#uint16_t vlan_id ; t#uint16_t pmtu ; } 
s#iscsi_iface struct iscsi_iface { s#device dev ; s#iscsi_transport * transport ; t#uint32_t iface_type ; t#uint32_t iface_num ; void * dd_data ; } 
e#iscsi_param_type enum iscsi_param_type { ISCSI_PARAM , ISCSI_HOST_PARAM , ISCSI_NET_PARAM , ISCSI_FLASHNODE_PARAM , ISCSI_CHAP_PARAM , ISCSI_IFACE_PARAM , } 
s#iscsi_bus_flash_session struct iscsi_bus_flash_session { s#list_head sess_list ; s#iscsi_transport * transport ; unsigned int target_id ; int flash_state ; void * dd_data ; s#device dev ; unsigned first_burst ; unsigned max_burst ; unsigned short max_r2t ; int default_taskmgmt_timeout ; int initial_r2t_en ; int imm_data_en ; int time2wait ; int time2retain ; int pdu_inorder_en ; int dataseq_inorder_en ; int erl ; int tpgt ; char * username ; char * username_in ; char * password ; char * password_in ; char * targetname ; char * targetalias ; char * portal_type ; t#uint16_t tsid ; t#uint16_t chap_in_idx ; t#uint16_t chap_out_idx ; t#uint16_t discovery_parent_idx ; t#uint16_t discovery_parent_type ; t#uint8_t auto_snd_tgt_disable ; t#uint8_t discovery_sess ; t#uint8_t entry_state ; t#uint8_t chap_auth_en ; t#uint8_t discovery_logout_en ; t#uint8_t bidi_chap_en ; t#uint8_t discovery_auth_optional ; t#uint8_t isid [ 6 ] ; t#uint8_t is_boot_target ; } 
s#iscsi_bus_flash_conn struct iscsi_bus_flash_conn { s#list_head conn_list ; void * dd_data ; s#iscsi_transport * transport ; s#device dev ; t#uint32_t exp_statsn ; t#uint32_t statsn ; unsigned max_recv_dlength ; unsigned max_xmit_dlength ; unsigned max_segment_size ; unsigned tcp_xmit_wsf ; unsigned tcp_recv_wsf ; int hdrdgst_en ; int datadgst_en ; int port ; char * ipaddress ; char * link_local_ipv6_addr ; char * redirect_ipaddr ; t#uint16_t keepalive_timeout ; t#uint16_t local_port ; t#uint8_t snack_req_en ; t#uint8_t tcp_timestamp_stat ; t#uint8_t tcp_nagle_disable ; t#uint8_t tcp_wsf_disable ; t#uint8_t tcp_timer_scale ; t#uint8_t tcp_timestamp_en ; t#uint8_t ipv4_tos ; t#uint8_t ipv6_traffic_class ; t#uint8_t ipv6_flow_label ; t#uint8_t fragment_disable ; t#uint8_t is_fw_assigned_ipv6 ; } 
s#iscsi_transport struct iscsi_transport { s#module * owner ; char * name ; unsigned int caps ; s#iscsi_cls_session * ( * create_session ) ( s#iscsi_endpoint * , t#uint16_t , t#uint16_t , t#uint32_t ) ; void ( * destroy_session ) ( s#iscsi_cls_session * ) ; s#iscsi_cls_conn * ( * create_conn ) ( s#iscsi_cls_session * , t#uint32_t ) ; int ( * bind_conn ) ( s#iscsi_cls_session * , s#iscsi_cls_conn * , t#uint64_t , int ) ; int ( * start_conn ) ( s#iscsi_cls_conn * ) ; void ( * stop_conn ) ( s#iscsi_cls_conn * , int ) ; void ( * destroy_conn ) ( s#iscsi_cls_conn * ) ; int ( * set_param ) ( s#iscsi_cls_conn * , e#iscsi_param , char * , int ) ; int ( * get_ep_param ) ( s#iscsi_endpoint * , e#iscsi_param , char * ) ; int ( * get_conn_param ) ( s#iscsi_cls_conn * , e#iscsi_param , char * ) ; int ( * get_session_param ) ( s#iscsi_cls_session * , e#iscsi_param , char * ) ; int ( * get_host_param ) ( s#Scsi_Host * , e#iscsi_host_param , char * ) ; int ( * set_host_param ) ( s#Scsi_Host * , e#iscsi_host_param , char * , int ) ; int ( * send_pdu ) ( s#iscsi_cls_conn * , s#iscsi_hdr * , char * , t#uint32_t ) ; void ( * get_stats ) ( s#iscsi_cls_conn * , s#iscsi_stats * ) ; int ( * init_task ) ( s#iscsi_task * ) ; int ( * xmit_task ) ( s#iscsi_task * ) ; void ( * cleanup_task ) ( s#iscsi_task * ) ; int ( * alloc_pdu ) ( s#iscsi_task * , t#uint8_t ) ; int ( * xmit_pdu ) ( s#iscsi_task * ) ; int ( * init_pdu ) ( s#iscsi_task * , unsigned int , unsigned int ) ; void ( * parse_pdu_itt ) ( s#iscsi_conn * , t#itt_t , int * , int * ) ; void ( * session_recovery_timedout ) ( s#iscsi_cls_session * ) ; s#iscsi_endpoint * ( * ep_connect ) ( s#Scsi_Host * , s#sockaddr * , int ) ; int ( * ep_poll ) ( s#iscsi_endpoint * , int ) ; void ( * ep_disconnect ) ( s#iscsi_endpoint * ) ; int ( * tgt_dscvr ) ( s#Scsi_Host * , e#iscsi_tgt_dscvr , t#uint32_t , s#sockaddr * ) ; int ( * set_path ) ( s#Scsi_Host * , s#iscsi_path * ) ; int ( * set_iface_param ) ( s#Scsi_Host * , void * , t#uint32_t ) ; int ( * get_iface_param ) ( s#iscsi_iface * , e#iscsi_param_type , int , char * ) ; t#umode_t ( * attr_is_visible ) ( int , int ) ; int ( * bsg_request ) ( s#bsg_job * ) ; int ( * send_ping ) ( s#Scsi_Host * , t#uint32_t , t#uint32_t , t#uint32_t , t#uint32_t , s#sockaddr * ) ; int ( * get_chap ) ( s#Scsi_Host * , t#uint16_t , t#uint32_t * , char * ) ; int ( * delete_chap ) ( s#Scsi_Host * , t#uint16_t ) ; int ( * set_chap ) ( s#Scsi_Host * , void * , int ) ; int ( * get_flashnode_param ) ( s#iscsi_bus_flash_session * , int , char * ) ; int ( * set_flashnode_param ) ( s#iscsi_bus_flash_session * , s#iscsi_bus_flash_conn * , void * , int ) ; int ( * new_flashnode ) ( s#Scsi_Host * , const char * , int ) ; int ( * del_flashnode ) ( s#iscsi_bus_flash_session * ) ; int ( * login_flashnode ) ( s#iscsi_bus_flash_session * , s#iscsi_bus_flash_conn * ) ; int ( * logout_flashnode ) ( s#iscsi_bus_flash_session * , s#iscsi_bus_flash_conn * ) ; int ( * logout_flashnode_sid ) ( s#iscsi_cls_session * ) ; int ( * get_host_stats ) ( s#Scsi_Host * , char * , int ) ; t#u8 ( * check_protection ) ( s#iscsi_task * , t#sector_t * ) ; } 
s#iscsi_cls_conn struct iscsi_cls_conn { s#list_head conn_list ; void * dd_data ; s#iscsi_transport * transport ; t#uint32_t cid ; s#mutex ep_mutex ; s#iscsi_endpoint * ep ; s#device dev ; } 
s#__kfifo struct __kfifo { unsigned int in ; unsigned int out ; unsigned int mask ; unsigned int esize ; void * data ; } 
s#kfifo struct kfifo { union { s#__kfifo kfifo ; unsigned char * type ; const unsigned char * const_type ; char ( * rectype ) [ 0 ] ; void * ptr ; void const * ptr_const ; } ; unsigned char buf [ 0 ] ; } 
s#iscsi_pool struct iscsi_pool { s#kfifo queue ; void * * pool ; int max ; } 
s#iscsi_session struct iscsi_session { s#iscsi_cls_session * cls_session ; s#mutex eh_mutex ; t#uint32_t cmdsn ; t#uint32_t exp_cmdsn ; t#uint32_t max_cmdsn ; t#uint32_t queued_cmdsn ; int abort_timeout ; int lu_reset_timeout ; int tgt_reset_timeout ; int initial_r2t_en ; unsigned short max_r2t ; int imm_data_en ; unsigned first_burst ; unsigned max_burst ; int time2wait ; int time2retain ; int pdu_inorder_en ; int dataseq_inorder_en ; int erl ; int fast_abort ; int tpgt ; char * username ; char * username_in ; char * password ; char * password_in ; char * targetname ; char * targetalias ; char * ifacename ; char * initiatorname ; char * boot_root ; char * boot_nic ; char * boot_target ; char * portal_type ; char * discovery_parent_type ; t#uint16_t discovery_parent_idx ; t#uint16_t def_taskmgmt_tmo ; t#uint16_t tsid ; t#uint8_t auto_snd_tgt_disable ; t#uint8_t discovery_sess ; t#uint8_t chap_auth_en ; t#uint8_t discovery_logout_en ; t#uint8_t bidi_chap_en ; t#uint8_t discovery_auth_optional ; t#uint8_t isid [ 6 ] ; s#iscsi_transport * tt ; s#Scsi_Host * host ; s#iscsi_conn * leadconn ; t#spinlock_t frwd_lock ; t#spinlock_t back_lock ; int state ; int age ; int scsi_cmds_max ; int cmds_max ; s#iscsi_task * * cmds ; s#iscsi_pool cmdpool ; void * dd_data ; } 
s#iscsi_tm struct iscsi_tm { t#uint8_t opcode ; t#uint8_t flags ; t#uint8_t rsvd1 [ 2 ] ; t#uint8_t hlength ; t#uint8_t dlength [ 3 ] ; s#scsi_lun lun ; t#itt_t itt ; t#itt_t rtt ; t#__be32 cmdsn ; t#__be32 exp_statsn ; t#__be32 refcmdsn ; t#__be32 exp_datasn ; t#uint8_t rsvd2 [ 8 ] ; } 
s#iscsi_conn struct iscsi_conn { s#iscsi_cls_conn * cls_conn ; void * dd_data ; s#iscsi_session * session ; int stop_stage ; s#timer_list transport_timer ; unsigned long last_recv ; unsigned long last_ping ; int ping_timeout ; int recv_timeout ; s#iscsi_task * ping_task ; t#uint32_t exp_statsn ; t#uint32_t statsn ; int id ; int c_stage ; char * data ; s#iscsi_task * login_task ; s#iscsi_task * task ; t#spinlock_t taskqueuelock ; s#list_head mgmtqueue ; s#list_head cmdqueue ; s#list_head requeue ; s#work_struct xmitwork ; unsigned long suspend_tx ; unsigned long suspend_rx ; t#wait_queue_head_t ehwait ; s#iscsi_tm tmhdr ; s#timer_list tmf_timer ; int tmf_state ; unsigned max_recv_dlength ; unsigned max_xmit_dlength ; int hdrdgst_en ; int datadgst_en ; int ifmarker_en ; int ofmarker_en ; int persistent_port ; char * persistent_address ; unsigned max_segment_size ; unsigned tcp_xmit_wsf ; unsigned tcp_recv_wsf ; t#uint16_t keepalive_tmo ; t#uint16_t local_port ; t#uint8_t tcp_timestamp_stat ; t#uint8_t tcp_nagle_disable ; t#uint8_t tcp_wsf_disable ; t#uint8_t tcp_timer_scale ; t#uint8_t tcp_timestamp_en ; t#uint8_t fragment_disable ; t#uint8_t ipv4_tos ; t#uint8_t ipv6_traffic_class ; t#uint8_t ipv6_flow_label ; t#uint8_t is_fw_assigned_ipv6 ; char * local_ipaddr ; t#uint64_t txdata_octets ; t#uint64_t rxdata_octets ; t#uint32_t scsicmd_pdus_cnt ; t#uint32_t dataout_pdus_cnt ; t#uint32_t scsirsp_pdus_cnt ; t#uint32_t datain_pdus_cnt ; t#uint32_t r2t_pdus_cnt ; t#uint32_t tmfcmd_pdus_cnt ; t#int32_t tmfrsp_pdus_cnt ; t#uint32_t eh_abort_cnt ; t#uint32_t fmr_unalign_cnt ; } 
iscsi_conn_queue_work extern void iscsi_conn_queue_work ( s#iscsi_conn * ) 
s#iscsi_nopin struct iscsi_nopin { t#uint8_t opcode ; t#uint8_t flags ; t#__be16 rsvd2 ; t#uint8_t rsvd3 ; t#uint8_t dlength [ 3 ] ; s#scsi_lun lun ; t#itt_t itt ; t#__be32 ttt ; t#__be32 statsn ; t#__be32 exp_cmdsn ; t#__be32 max_cmdsn ; t#uint8_t rsvd4 [ 12 ] ; } 
iscsi_update_cmdsn extern void iscsi_update_cmdsn ( s#iscsi_session * , s#iscsi_nopin * ) 
s#iscsi_data struct iscsi_data { t#uint8_t opcode ; t#uint8_t flags ; t#uint8_t rsvd2 [ 2 ] ; t#uint8_t rsvd3 ; t#uint8_t dlength [ 3 ] ; s#scsi_lun lun ; t#itt_t itt ; t#__be32 ttt ; t#__be32 rsvd4 ; t#__be32 exp_statsn ; t#__be32 rsvd5 ; t#__be32 datasn ; t#__be32 offset ; t#__be32 rsvd6 ; } 
iscsi_prep_data_out_pdu extern void iscsi_prep_data_out_pdu ( s#iscsi_task * , s#iscsi_r2t_info * , s#iscsi_data * ) 
__iscsi_get_task extern void __iscsi_get_task ( s#iscsi_task * ) 
__iscsi_put_task extern void __iscsi_put_task ( s#iscsi_task * ) 
iscsi_put_task extern void iscsi_put_task ( s#iscsi_task * ) 
iscsi_complete_scsi_task extern void iscsi_complete_scsi_task ( s#iscsi_task * , t#uint32_t , t#uint32_t ) 
iscsi_conn_send_pdu extern int iscsi_conn_send_pdu ( s#iscsi_cls_conn * , s#iscsi_hdr * , char * , t#uint32_t ) 
iscsi_itt_to_task extern s#iscsi_task * iscsi_itt_to_task ( s#iscsi_conn * , t#itt_t ) 
__iscsi_complete_pdu extern int __iscsi_complete_pdu ( s#iscsi_conn * , s#iscsi_hdr * , char * , int ) 
iscsi_complete_pdu extern int iscsi_complete_pdu ( s#iscsi_conn * , s#iscsi_hdr * , char * , int ) 
iscsi_verify_itt extern int iscsi_verify_itt ( s#iscsi_conn * , t#itt_t ) 
iscsi_itt_to_ctask extern s#iscsi_task * iscsi_itt_to_ctask ( s#iscsi_conn * , t#itt_t ) 
e#iscsi_err enum iscsi_err { ISCSI_OK = 0 , ISCSI_ERR_DATASN = 1000 + 1 , ISCSI_ERR_DATA_OFFSET = 1000 + 2 , ISCSI_ERR_MAX_CMDSN = 1000 + 3 , ISCSI_ERR_EXP_CMDSN = 1000 + 4 , ISCSI_ERR_BAD_OPCODE = 1000 + 5 , ISCSI_ERR_DATALEN = 1000 + 6 , ISCSI_ERR_AHSLEN = 1000 + 7 , ISCSI_ERR_PROTO = 1000 + 8 , ISCSI_ERR_LUN = 1000 + 9 , ISCSI_ERR_BAD_ITT = 1000 + 10 , ISCSI_ERR_CONN_FAILED = 1000 + 11 , ISCSI_ERR_R2TSN = 1000 + 12 , ISCSI_ERR_SESSION_FAILED = 1000 + 13 , ISCSI_ERR_HDR_DGST = 1000 + 14 , ISCSI_ERR_DATA_DGST = 1000 + 15 , ISCSI_ERR_PARAM_NOT_FOUND = 1000 + 16 , ISCSI_ERR_NO_SCSI_CMD = 1000 + 17 , ISCSI_ERR_INVALID_HOST = 1000 + 18 , ISCSI_ERR_XMIT_FAILED = 1000 + 19 , ISCSI_ERR_TCP_CONN_CLOSE = 1000 + 20 , ISCSI_ERR_SCSI_EH_SESSION_RST = 1000 + 21 , ISCSI_ERR_NOP_TIMEDOUT = 1000 + 22 , } 
iscsi_session_failure extern void iscsi_session_failure ( s#iscsi_session * , e#iscsi_err ) 
iscsi_conn_failure extern void iscsi_conn_failure ( s#iscsi_conn * , e#iscsi_err ) 
iscsi_requeue_task extern void iscsi_requeue_task ( s#iscsi_task * ) 
iscsi_queuecommand extern int iscsi_queuecommand ( s#Scsi_Host * , s#scsi_cmnd * ) 
iscsi_target_alloc extern int iscsi_target_alloc ( s#scsi_target * ) 
iscsi_suspend_queue extern void iscsi_suspend_queue ( s#iscsi_conn * ) 
iscsi_suspend_tx extern void iscsi_suspend_tx ( s#iscsi_conn * ) 
iscsi_eh_cmd_timed_out extern e#blk_eh_timer_return iscsi_eh_cmd_timed_out ( s#scsi_cmnd * ) 
iscsi_eh_abort extern int iscsi_eh_abort ( s#scsi_cmnd * ) 
iscsi_eh_device_reset extern int iscsi_eh_device_reset ( s#scsi_cmnd * ) 
iscsi_session_recovery_timedout extern void iscsi_session_recovery_timedout ( s#iscsi_cls_session * ) 
iscsi_eh_session_reset extern int iscsi_eh_session_reset ( s#scsi_cmnd * ) 
iscsi_eh_recover_target extern int iscsi_eh_recover_target ( s#scsi_cmnd * ) 
iscsi_pool_init extern int iscsi_pool_init ( s#iscsi_pool * , int , void * * * , int ) 
iscsi_pool_free extern void iscsi_pool_free ( s#iscsi_pool * ) 
iscsi_host_add extern int iscsi_host_add ( s#Scsi_Host * , s#device * ) 
iscsi_host_alloc extern s#Scsi_Host * iscsi_host_alloc ( s#scsi_host_template * , int , t#bool ) 
iscsi_host_remove extern void iscsi_host_remove ( s#Scsi_Host * ) 
iscsi_host_free extern void iscsi_host_free ( s#Scsi_Host * ) 
iscsi_session_setup extern s#iscsi_cls_session * iscsi_session_setup ( s#iscsi_transport * , s#Scsi_Host * , t#uint16_t , int , int , t#uint32_t , unsigned int ) 
iscsi_session_teardown extern void iscsi_session_teardown ( s#iscsi_cls_session * ) 
iscsi_conn_setup extern s#iscsi_cls_conn * iscsi_conn_setup ( s#iscsi_cls_session * , int , t#uint32_t ) 
iscsi_conn_teardown extern void iscsi_conn_teardown ( s#iscsi_cls_conn * ) 
iscsi_conn_start extern int iscsi_conn_start ( s#iscsi_cls_conn * ) 
iscsi_conn_stop extern void iscsi_conn_stop ( s#iscsi_cls_conn * , int ) 
iscsi_conn_bind extern int iscsi_conn_bind ( s#iscsi_cls_session * , s#iscsi_cls_conn * , int ) 
iscsi_switch_str_param extern int iscsi_switch_str_param ( char * * , char * ) 
iscsi_set_param extern int iscsi_set_param ( s#iscsi_cls_conn * , e#iscsi_param , char * , int ) 
iscsi_session_get_param extern int iscsi_session_get_param ( s#iscsi_cls_session * , e#iscsi_param , char * ) 
iscsi_conn_get_addr_param extern int iscsi_conn_get_addr_param ( s#__kernel_sockaddr_storage * , e#iscsi_param , char * ) 
iscsi_conn_get_param extern int iscsi_conn_get_param ( s#iscsi_cls_conn * , e#iscsi_param , char * ) 
iscsi_host_get_param extern int iscsi_host_get_param ( s#Scsi_Host * , e#iscsi_host_param , char * ) 
iscsi_host_set_param extern int iscsi_host_set_param ( s#Scsi_Host * , e#iscsi_host_param , char * , int ) 

/* drivers/scsi/libiscsi_tcp.o */
s##crypto_type
s##skcipher_givcrypt_request
s##posix_acl
s##vfsmount
s##device_private
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##sec_path
s##workqueue_struct
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##kmem_cache
s##xfrm_state
s##lwtunnel_state
s##uncached_list
s##rt6_info
s##dn_route
s##prefix_info
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
s##prot_inuse
s##ipv4_devconf
s##xt_table
s##rt6_statistics
s##fib6_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##eventfd_ctx
s##mempolicy
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_mq_ctx
s##blkcg_gq
s##blk_flush_queue
s##blk_mq_tags
s##blk_mq_alloc_data
s##blk_mq_debugfs_attr
s##blk_queue_stats
s##rq_wb
s##blk_stat_callback
s##blk_trace
s##bsg_job
s##throtl_data
s##hd_geometry
s##pr_ops
s##timer_rand_state
s##disk_events
s##badblocks
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
E#ISCSI_DIGEST_SIZE sizeof ( __u32 ) 
s##scsi_device_handler
s##scsi_host_cmd_pool
s##scsi_transport_template
s#iscsi_tcp_recv struct iscsi_tcp_recv { s#iscsi_hdr * hdr ; s#iscsi_segment segment ; t#uint32_t hdr_buf [ 64 ] ; int datalen ; } 
s#iscsi_tcp_conn struct iscsi_tcp_conn { s#iscsi_conn * iscsi_conn ; void * dd_data ; int stop_stage ; s#iscsi_tcp_recv in ; s#ahash_request * rx_hash ; } 
t#iscsi_segment_done_fn_t typedef int iscsi_segment_done_fn_t ( s#iscsi_tcp_conn * , s#iscsi_segment * ) 
s#iscsi_segment struct iscsi_segment { unsigned char * data ; unsigned int size ; unsigned int copied ; unsigned int total_size ; unsigned int total_copied ; s#ahash_request * hash ; unsigned char padbuf [ 4 ] ; unsigned char recv_digest [ E#ISCSI_DIGEST_SIZE ] ; unsigned char digest [ E#ISCSI_DIGEST_SIZE ] ; unsigned int digest_len ; s#scatterlist * sg ; void * sg_mapped ; unsigned int sg_offset ; t#bool atomic_mapped ; t#iscsi_segment_done_fn_t * done ; } 
iscsi_tcp_segment_unmap extern void iscsi_tcp_segment_unmap ( s#iscsi_segment * ) 
iscsi_tcp_segment_done extern int iscsi_tcp_segment_done ( s#iscsi_tcp_conn * , s#iscsi_segment * , int , unsigned ) 
iscsi_tcp_dgst_header extern void iscsi_tcp_dgst_header ( s#ahash_request * , const void * , t#size_t , unsigned char [ E#ISCSI_DIGEST_SIZE ] ) 
iscsi_segment_init_linear extern void iscsi_segment_init_linear ( s#iscsi_segment * , void * , t#size_t , t#iscsi_segment_done_fn_t * , s#ahash_request * ) 
iscsi_segment_seek_sg extern int iscsi_segment_seek_sg ( s#iscsi_segment * , s#scatterlist * , unsigned int , unsigned int , t#size_t , t#iscsi_segment_done_fn_t * , s#ahash_request * ) 
iscsi_tcp_hdr_recv_prep extern void iscsi_tcp_hdr_recv_prep ( s#iscsi_tcp_conn * ) 
iscsi_tcp_cleanup_task extern void iscsi_tcp_cleanup_task ( s#iscsi_task * ) 
iscsi_tcp_recv_segment_is_hdr extern int iscsi_tcp_recv_segment_is_hdr ( s#iscsi_tcp_conn * ) 
iscsi_tcp_recv_skb extern int iscsi_tcp_recv_skb ( s#iscsi_conn * , s#sk_buff * , unsigned int , t#bool , int * ) 
iscsi_tcp_task_init extern int iscsi_tcp_task_init ( s#iscsi_task * ) 
iscsi_tcp_task_xmit extern int iscsi_tcp_task_xmit ( s#iscsi_task * ) 
iscsi_tcp_conn_setup extern s#iscsi_cls_conn * iscsi_tcp_conn_setup ( s#iscsi_cls_session * , int , t#uint32_t ) 
iscsi_tcp_conn_teardown extern void iscsi_tcp_conn_teardown ( s#iscsi_cls_conn * ) 
iscsi_tcp_r2tpool_alloc extern int iscsi_tcp_r2tpool_alloc ( s#iscsi_session * ) 
iscsi_tcp_r2tpool_free extern void iscsi_tcp_r2tpool_free ( s#iscsi_session * ) 
iscsi_tcp_set_max_r2t extern int iscsi_tcp_set_max_r2t ( s#iscsi_conn * , char * ) 
iscsi_tcp_conn_get_stats extern void iscsi_tcp_conn_get_stats ( s#iscsi_cls_conn * , s#iscsi_stats * ) 

/* drivers/scsi/libsas/sas_event.o */
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##module
s##writeback_control
s##kstatfs
s##iov_iter
s##poll_table_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##mem_cgroup
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##device_private
s##sock
s##kernfs_open_node
s##kernfs_iattrs
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##hd_geometry
s##pr_ops
s##blk_mq_ctx
s##kmem_cache
s##cgroup_subsys_state
s##workqueue_struct
s##blkcg_gq
s##blk_flush_queue
s##blk_mq_tags
s##blk_mq_alloc_data
s##blk_mq_debugfs_attr
s##blk_queue_stats
s##rq_wb
s##blk_stat_callback
s##blk_trace
s##throtl_data
s##timer_rand_state
s##disk_events
s##badblocks
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##compat_timespec
s##pollfd
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##reclaim_state
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##scsi_device_handler
s##proc_dir_entry
s##scsi_host_cmd_pool
s##scsi_transport_template
s#scsi_core struct scsi_core { s#Scsi_Host * shost ; } 
e#sas_device_type enum sas_device_type { SAS_PHY_UNUSED = 0 , SAS_END_DEVICE = 1 , SAS_EDGE_EXPANDER_DEVICE = 2 , SAS_FANOUT_EXPANDER_DEVICE = 3 , SAS_HA = 4 , SAS_SATA_DEV = 5 , SAS_SATA_PM = 7 , SAS_SATA_PM_PORT = 8 , SAS_SATA_PENDING = 9 , } 
E#SAS_PROTOCOL_STP 0x04 
E#SAS_PROTOCOL_SATA 0x01 
e#sas_protocol enum sas_protocol { SAS_PROTOCOL_NONE = 0 , SAS_PROTOCOL_SATA = 0x01 , SAS_PROTOCOL_SMP = 0x02 , SAS_PROTOCOL_STP = 0x04 , SAS_PROTOCOL_SSP = 0x08 , SAS_PROTOCOL_ALL = 0x0E , SAS_PROTOCOL_STP_ALL = E#SAS_PROTOCOL_STP | E#SAS_PROTOCOL_SATA , } 
s#sas_identify struct sas_identify { e#sas_device_type device_type ; e#sas_protocol initiator_port_protocols ; e#sas_protocol target_port_protocols ; t#u64 sas_address ; t#u8 phy_identifier ; } 
E#SAS_LINK_RATE_1_5_GBPS 8 
E#SAS_LINK_RATE_3_0_GBPS 9 
e#sas_linkrate enum sas_linkrate { SAS_LINK_RATE_UNKNOWN = 0 , SAS_PHY_DISABLED = 1 , SAS_PHY_RESET_PROBLEM = 2 , SAS_SATA_SPINUP_HOLD = 3 , SAS_SATA_PORT_SELECTOR = 4 , SAS_PHY_RESET_IN_PROGRESS = 5 , SAS_LINK_RATE_1_5_GBPS = 8 , SAS_LINK_RATE_G1 = E#SAS_LINK_RATE_1_5_GBPS , SAS_LINK_RATE_3_0_GBPS = 9 , SAS_LINK_RATE_G2 = E#SAS_LINK_RATE_3_0_GBPS , SAS_LINK_RATE_6_0_GBPS = 10 , SAS_LINK_RATE_12_0_GBPS = 11 , SAS_LINK_RATE_FAILED = 0x10 , SAS_PHY_VIRTUAL = 0x11 , } 
s#sas_phy struct sas_phy { s#device dev ; int number ; int enabled ; s#sas_identify identify ; e#sas_linkrate negotiated_linkrate ; e#sas_linkrate minimum_linkrate_hw ; e#sas_linkrate minimum_linkrate ; e#sas_linkrate maximum_linkrate_hw ; e#sas_linkrate maximum_linkrate ; t#u32 invalid_dword_count ; t#u32 running_disparity_error_count ; t#u32 loss_of_dword_sync_count ; t#u32 phy_reset_problem_count ; s#list_head port_siblings ; void * hostdata ; } 
e#sas_class enum sas_class { SAS , EXPANDER } 
e#sas_phy_type enum sas_phy_type { PHY_TYPE_PHYSICAL , PHY_TYPE_VIRTUAL } 
e#sas_phy_role enum sas_phy_role { PHY_ROLE_NONE = 0 , PHY_ROLE_TARGET = 0x40 , PHY_ROLE_INITIATOR = 0x80 , } 
e#sas_oob_mode enum sas_oob_mode { OOB_NOT_CONNECTED , SATA_OOB_MODE , SAS_OOB_MODE } 
s#sas_work struct sas_work { s#list_head drain_node ; s#work_struct work ; } 
s#sas_discovery_event struct sas_discovery_event { s#sas_work work ; s#asd_sas_port * port ; } 
E#DISC_NUM_EVENTS ( 0U ) + 4 
s#sas_discovery struct sas_discovery { s#sas_discovery_event disc_work [ E#DISC_NUM_EVENTS ] ; unsigned long pending ; t#u8 fanout_sas_addr [ 8 ] ; t#u8 eeds_a [ 8 ] ; t#u8 eeds_b [ 8 ] ; int max_level ; } 
s#sas_rphy struct sas_rphy { s#device dev ; s#sas_identify identify ; s#list_head list ; s#request_queue * q ; t#u32 scsi_target_id ; } 
e#ex_phy_state enum ex_phy_state { PHY_EMPTY , PHY_VACANT , PHY_NOT_PRESENT , PHY_DEVICE_DISCOVERED } 
e#routing_attribute enum routing_attribute { DIRECT_ROUTING , SUBTRACTIVE_ROUTING , TABLE_ROUTING , } 
s#sas_port struct sas_port { s#device dev ; int port_identifier ; int num_phys ; unsigned int is_backlink : 1 ; s#sas_rphy * rphy ; s#mutex phy_list_mutex ; s#list_head phy_list ; s#list_head del_list ; } 
s#ex_phy struct ex_phy { int phy_id ; e#ex_phy_state phy_state ; e#sas_device_type attached_dev_type ; e#sas_linkrate linkrate ; t#u8 attached_sata_host : 1 ; t#u8 attached_sata_dev : 1 ; t#u8 attached_sata_ps : 1 ; e#sas_protocol attached_tproto ; e#sas_protocol attached_iproto ; t#u8 attached_sas_addr [ 8 ] ; t#u8 attached_phy_id ; int phy_change_count ; e#routing_attribute routing_attr ; t#u8 virtual : 1 ; int last_da_index ; s#sas_phy * phy ; s#sas_port * port ; } 
s#expander_device struct expander_device { s#list_head children ; int ex_change_count ; t#u16 max_route_indexes ; t#u8 num_phys ; t#u8 t2t_supp : 1 ; t#u8 configuring : 1 ; t#u8 conf_route_table : 1 ; t#u8 enclosure_logical_id [ 8 ] ; s#ex_phy * ex_phy ; s#sas_port * parent_port ; s#mutex cmd_mutex ; } 
e#ata_lpm_policy enum ata_lpm_policy { ATA_LPM_UNKNOWN , ATA_LPM_MAX_POWER , ATA_LPM_MED_POWER , ATA_LPM_MIN_POWER , } 
E#ATA_MAX_DEVICES 2 
E#ATA_EH_DESC_LEN 80 
s#ata_eh_info struct ata_eh_info { s#ata_device * dev ; t#u32 serror ; unsigned int err_mask ; unsigned int action ; unsigned int dev_action [ E#ATA_MAX_DEVICES ] ; unsigned int flags ; unsigned int probe_mask ; char desc [ E#ATA_EH_DESC_LEN ] ; int desc_len ; } 
E#ATA_EH_CMD_TIMEOUT_TABLE_SIZE 6 
s#ata_eh_context struct ata_eh_context { s#ata_eh_info i ; int tries [ E#ATA_MAX_DEVICES ] ; int cmd_timeout_idx [ E#ATA_MAX_DEVICES ] [ E#ATA_EH_CMD_TIMEOUT_TABLE_SIZE ] ; unsigned int classes [ E#ATA_MAX_DEVICES ] ; unsigned int did_probe_mask ; unsigned int unloaded_mask ; unsigned int saved_ncq_enabled ; t#u8 saved_xfer_mode [ E#ATA_MAX_DEVICES ] ; unsigned long last_reset ; } 
s#ata_link struct ata_link { s#ata_port * ap ; int pmp ; s#device tdev ; unsigned int active_tag ; t#u32 sactive ; unsigned int flags ; t#u32 saved_scontrol ; unsigned int hw_sata_spd_limit ; unsigned int sata_spd_limit ; unsigned int sata_spd ; e#ata_lpm_policy lpm_policy ; s#ata_eh_info eh_info ; s#ata_eh_context eh_context ; s#ata_device device [ E#ATA_MAX_DEVICES ] ; unsigned long last_lpm_change ; } 
E#ATA_ID_WORDS 256 
E#SATA_PMP_GSCR_DWORDS 128 
E#ATA_LOG_DEVSLP_SIZE 0x08 
E#ATA_LOG_NCQ_SEND_RECV_SIZE 0x14 
E#ATA_LOG_NCQ_NON_DATA_SIZE 0x40 
s#ata_ering_entry struct ata_ering_entry { unsigned int eflags ; unsigned int err_mask ; t#u64 timestamp ; } 
E#ATA_ERING_SIZE 32 
s#ata_ering struct ata_ering { int cursor ; s#ata_ering_entry ring [ E#ATA_ERING_SIZE ] ; } 
s#ata_device struct ata_device { s#ata_link * link ; unsigned int devno ; unsigned int horkage ; unsigned long flags ; s#scsi_device * sdev ; void * private_data ; s#device tdev ; t#u64 n_sectors ; t#u64 n_native_sectors ; unsigned int class ; unsigned long unpark_deadline ; t#u8 pio_mode ; t#u8 dma_mode ; t#u8 xfer_mode ; unsigned int xfer_shift ; unsigned int multi_count ; unsigned int max_sectors ; unsigned int cdb_len ; unsigned long pio_mask ; unsigned long mwdma_mask ; unsigned long udma_mask ; t#u16 cylinders ; t#u16 heads ; t#u16 sectors ; union { t#u16 id [ E#ATA_ID_WORDS ] ; t#u32 gscr [ E#SATA_PMP_GSCR_DWORDS ] ; } __attribute__ ( ( __aligned__ ( 256 ) ) ) ; t#u8 devslp_timing [ E#ATA_LOG_DEVSLP_SIZE ] ; t#u8 ncq_send_recv_cmds [ E#ATA_LOG_NCQ_SEND_RECV_SIZE ] ; t#u8 ncq_non_data_cmds [ E#ATA_LOG_NCQ_NON_DATA_SIZE ] ; t#u32 zac_zoned_cap ; t#u32 zac_zones_optimal_open ; t#u32 zac_zones_optimal_nonseq ; t#u32 zac_zones_max_open ; int spdn_cnt ; s#ata_ering ering ; } 
s#ata_taskfile struct ata_taskfile { unsigned long flags ; t#u8 protocol ; t#u8 ctl ; t#u8 hob_feature ; t#u8 hob_nsect ; t#u8 hob_lbal ; t#u8 hob_lbam ; t#u8 hob_lbah ; t#u8 feature ; t#u8 nsect ; t#u8 lbal ; t#u8 lbam ; t#u8 lbah ; t#u8 device ; t#u8 command ; t#u32 auxiliary ; } 
E#ATAPI_CDB_LEN 16 
t#ata_qc_cb_t typedef void ( * ata_qc_cb_t ) ( s#ata_queued_cmd * ) 
s#ata_queued_cmd struct ata_queued_cmd { s#ata_port * ap ; s#ata_device * dev ; s#scsi_cmnd * scsicmd ; void ( * scsidone ) ( s#scsi_cmnd * ) ; s#ata_taskfile tf ; t#u8 cdb [ E#ATAPI_CDB_LEN ] ; unsigned long flags ; unsigned int tag ; unsigned int n_elem ; unsigned int orig_n_elem ; int dma_dir ; unsigned int sect_size ; unsigned int nbytes ; unsigned int extrabytes ; unsigned int curbytes ; s#scatterlist sgent ; s#scatterlist * sg ; s#scatterlist * cursg ; unsigned int cursg_ofs ; unsigned int err_mask ; s#ata_taskfile result_tf ; t#ata_qc_cb_t complete_fn ; void * private_data ; void * lldd_task ; } 
t#ata_prereset_fn_t typedef int ( * ata_prereset_fn_t ) ( s#ata_link * , unsigned long ) 
t#ata_reset_fn_t typedef int ( * ata_reset_fn_t ) ( s#ata_link * , unsigned int * , unsigned long ) 
t#ata_postreset_fn_t typedef void ( * ata_postreset_fn_t ) ( s#ata_link * , unsigned int * ) 
s#ata_host struct ata_host { t#spinlock_t lock ; s#device * dev ; void * const * iomap ; unsigned int n_ports ; unsigned int n_tags ; void * private_data ; s#ata_port_operations * ops ; unsigned long flags ; s#kref kref ; s#mutex eh_mutex ; s#task_struct * eh_owner ; s#ata_port * simplex_claimed ; s#ata_port * ports [ 0 ] ; } 
e#sw_activity enum sw_activity { OFF , BLINK_ON , BLINK_OFF , } 
s#ata_port_operations struct ata_port_operations { int ( * qc_defer ) ( s#ata_queued_cmd * ) ; int ( * check_atapi_dma ) ( s#ata_queued_cmd * ) ; void ( * qc_prep ) ( s#ata_queued_cmd * ) ; unsigned int ( * qc_issue ) ( s#ata_queued_cmd * ) ; t#bool ( * qc_fill_rtf ) ( s#ata_queued_cmd * ) ; int ( * cable_detect ) ( s#ata_port * ) ; unsigned long ( * mode_filter ) ( s#ata_device * , unsigned long ) ; void ( * set_piomode ) ( s#ata_port * , s#ata_device * ) ; void ( * set_dmamode ) ( s#ata_port * , s#ata_device * ) ; int ( * set_mode ) ( s#ata_link * , s#ata_device * * ) ; unsigned int ( * read_id ) ( s#ata_device * , s#ata_taskfile * , t#u16 * ) ; void ( * dev_config ) ( s#ata_device * ) ; void ( * freeze ) ( s#ata_port * ) ; void ( * thaw ) ( s#ata_port * ) ; t#ata_prereset_fn_t prereset ; t#ata_reset_fn_t softreset ; t#ata_reset_fn_t hardreset ; t#ata_postreset_fn_t postreset ; t#ata_prereset_fn_t pmp_prereset ; t#ata_reset_fn_t pmp_softreset ; t#ata_reset_fn_t pmp_hardreset ; t#ata_postreset_fn_t pmp_postreset ; void ( * error_handler ) ( s#ata_port * ) ; void ( * lost_interrupt ) ( s#ata_port * ) ; void ( * post_internal_cmd ) ( s#ata_queued_cmd * ) ; void ( * sched_eh ) ( s#ata_port * ) ; void ( * end_eh ) ( s#ata_port * ) ; int ( * scr_read ) ( s#ata_link * , unsigned int , t#u32 * ) ; int ( * scr_write ) ( s#ata_link * , unsigned int , t#u32 ) ; void ( * pmp_attach ) ( s#ata_port * ) ; void ( * pmp_detach ) ( s#ata_port * ) ; int ( * set_lpm ) ( s#ata_link * , e#ata_lpm_policy , unsigned ) ; int ( * port_suspend ) ( s#ata_port * , t#pm_message_t ) ; int ( * port_resume ) ( s#ata_port * ) ; int ( * port_start ) ( s#ata_port * ) ; void ( * port_stop ) ( s#ata_port * ) ; void ( * host_stop ) ( s#ata_host * ) ; t#ssize_t ( * em_show ) ( s#ata_port * , char * ) ; t#ssize_t ( * em_store ) ( s#ata_port * , const char * , t#size_t ) ; t#ssize_t ( * sw_activity_show ) ( s#ata_device * , char * ) ; t#ssize_t ( * sw_activity_store ) ( s#ata_device * , e#sw_activity ) ; t#ssize_t ( * transmit_led_message ) ( s#ata_port * , t#u32 , t#ssize_t ) ; void ( * phy_reset ) ( s#ata_port * ) ; void ( * eng_timeout ) ( s#ata_port * ) ; const s#ata_port_operations * inherits ; } 
E#ATA_MAX_QUEUE 32 
s#ata_port_stats struct ata_port_stats { unsigned long unhandled_irq ; unsigned long idle_irq ; unsigned long rw_reqbuf ; } 
E#ATA_SECT_SIZE 512 
s#ata_port struct ata_port { s#Scsi_Host * scsi_host ; s#ata_port_operations * ops ; t#spinlock_t * lock ; unsigned long flags ; unsigned int pflags ; unsigned int print_id ; unsigned int local_port_no ; unsigned int port_no ; unsigned int pio_mask ; unsigned int mwdma_mask ; unsigned int udma_mask ; unsigned int cbl ; s#ata_queued_cmd qcmd [ E#ATA_MAX_QUEUE ] ; unsigned long sas_tag_allocated ; unsigned int qc_active ; int nr_active_links ; unsigned int sas_last_tag ; s#ata_link link ; s#ata_link * slave_link ; int nr_pmp_links ; s#ata_link * pmp_link ; s#ata_link * excl_link ; s#ata_port_stats stats ; s#ata_host * host ; s#device * dev ; s#device tdev ; s#mutex scsi_scan_mutex ; s#delayed_work hotplug_task ; s#work_struct scsi_rescan_task ; unsigned int hsm_task_state ; t#u32 msg_enable ; s#list_head eh_done_q ; t#wait_queue_head_t eh_wait_q ; int eh_tries ; s#completion park_req_pending ; t#pm_message_t pm_mesg ; e#ata_lpm_policy target_lpm_policy ; s#timer_list fastdrain_timer ; unsigned long fastdrain_cnt ; int em_message_type ; void * private_data ; t#u8 sector_buf [ E#ATA_SECT_SIZE ] __attribute__ ( ( __aligned__ ( 256 ) ) ) ; } 
s#report_general_resp struct report_general_resp { t#__be16 change_count ; t#__be16 route_indexes ; t#u8 _r_a ; t#u8 num_phys ; t#u8 t2t_supp : 1 ; t#u8 zone_config : 1 ; t#u8 self_config : 1 ; t#u8 stp_cont_awt : 1 ; t#u8 orej_retry_supp : 1 ; t#u8 config_others : 1 ; t#u8 configuring : 1 ; t#u8 conf_route_table : 1 ; t#u8 _r_c ; t#u8 enclosure_logical_id [ 8 ] ; t#u8 _r_d [ 12 ] ; } 
s#discover_resp struct discover_resp { t#u8 _r_a [ 5 ] ; t#u8 phy_id ; t#__be16 _r_b ; t#u8 _r_d : 1 ; t#u8 attached_dev_type : 3 ; t#u8 _r_c : 4 ; t#u8 _r_e : 4 ; t#u8 linkrate : 4 ; t#u8 _r_f : 4 ; t#u8 iproto : 3 ; t#u8 attached_sata_host : 1 ; t#u8 attached_sata_ps : 1 ; t#u8 _r_g : 3 ; t#u8 tproto : 3 ; t#u8 attached_sata_dev : 1 ; t#u8 sas_addr [ 8 ] ; t#u8 attached_sas_addr [ 8 ] ; t#u8 attached_phy_id ; t#u8 _r_h [ 7 ] ; t#u8 pmin_linkrate : 4 ; t#u8 hmin_linkrate : 4 ; t#u8 pmax_linkrate : 4 ; t#u8 hmax_linkrate : 4 ; t#u8 change_count ; t#u8 virtual : 1 ; t#u8 _r_i : 3 ; t#u8 pptv : 4 ; t#u8 _r_j : 4 ; t#u8 routing_attr : 4 ; t#u8 conn_type ; t#u8 conn_el_index ; t#u8 conn_phy_link ; t#u8 _r_k [ 8 ] ; } 
s#dev_to_host_fis struct dev_to_host_fis { t#u8 fis_type ; t#u8 flags ; t#u8 status ; t#u8 error ; t#u8 lbal ; union { t#u8 lbam ; t#u8 byte_count_low ; } ; union { t#u8 lbah ; t#u8 byte_count_high ; } ; t#u8 device ; t#u8 lbal_exp ; t#u8 lbam_exp ; t#u8 lbah_exp ; t#u8 _r_a ; union { t#u8 sector_count ; t#u8 interrupt_reason ; } ; t#u8 sector_count_exp ; t#u8 _r_b ; t#u8 _r_c ; t#u32 _r_d ; } 
s#report_phy_sata_resp struct report_phy_sata_resp { t#u8 _r_a [ 5 ] ; t#u8 phy_id ; t#u8 _r_b ; t#u8 _r_c : 6 ; t#u8 affil_supp : 1 ; t#u8 affil_valid : 1 ; t#u32 _r_d ; t#u8 stp_sas_addr [ 8 ] ; s#dev_to_host_fis fis ; t#u32 _r_e ; t#u8 affil_stp_ini_addr [ 8 ] ; t#__be32 crc ; } 
s#smp_resp struct smp_resp { t#u8 frame_type ; t#u8 function ; t#u8 result ; t#u8 reserved ; union { s#report_general_resp rg ; s#discover_resp disc ; s#report_phy_sata_resp rps ; } ; } 
s#sata_device struct sata_device { unsigned int class ; t#u8 port_no ; s#ata_port * ap ; s#ata_host * ata_host ; s#smp_resp rps_resp __attribute__ ( ( __aligned__ ( 256 ) ) ) ; t#u8 fis [ 24 ] ; } 
s#ssp_device struct ssp_device { s#list_head eh_list_node ; s#scsi_lun reset_lun ; } 
s#domain_device struct domain_device { t#spinlock_t done_lock ; e#sas_device_type dev_type ; e#sas_linkrate linkrate ; e#sas_linkrate min_linkrate ; e#sas_linkrate max_linkrate ; int pathways ; s#domain_device * parent ; s#list_head siblings ; s#asd_sas_port * port ; s#sas_phy * phy ; s#list_head dev_list_node ; s#list_head disco_list_node ; e#sas_protocol iproto ; e#sas_protocol tproto ; s#sas_rphy * rphy ; t#u8 sas_addr [ 8 ] ; t#u8 hashed_sas_addr [ 3 ] ; t#u8 frame_rcvd [ 32 ] ; union { s#expander_device ex_dev ; s#sata_device sata_dev ; s#ssp_device ssp_dev ; } ; void * lldd_dev ; unsigned long state ; s#kref kref ; } 
s#asd_sas_port struct asd_sas_port { s#sas_discovery disc ; s#domain_device * port_dev ; t#spinlock_t dev_list_lock ; s#list_head dev_list ; s#list_head disco_list ; s#list_head destroy_list ; s#list_head sas_port_del_list ; e#sas_linkrate linkrate ; s#sas_work work ; int suspended ; int id ; e#sas_class class ; t#u8 sas_addr [ 8 ] ; t#u8 attached_sas_addr [ 8 ] ; e#sas_protocol iproto ; e#sas_protocol tproto ; e#sas_oob_mode oob_mode ; t#spinlock_t phy_list_lock ; s#list_head phy_list ; int num_phys ; t#u32 phy_mask ; s#sas_ha_struct * ha ; s#sas_port * port ; void * lldd_port ; } 
s#asd_sas_phy struct asd_sas_phy { t#atomic_t event_nr ; int in_shutdown ; int error ; int suspended ; s#sas_phy * phy ; int enabled ; int id ; e#sas_class class ; e#sas_protocol iproto ; e#sas_protocol tproto ; e#sas_phy_type type ; e#sas_phy_role role ; e#sas_oob_mode oob_mode ; e#sas_linkrate linkrate ; t#u8 * sas_addr ; t#u8 attached_sas_addr [ 8 ] ; t#spinlock_t frame_rcvd_lock ; t#u8 * frame_rcvd ; int frame_rcvd_size ; t#spinlock_t sas_prim_lock ; t#u32 sas_prim ; s#list_head port_phy_el ; s#asd_sas_port * port ; s#sas_ha_struct * ha ; void * lldd_phy ; } 
e#port_event enum port_event { PORTE_BYTES_DMAED = 0U , PORTE_BROADCAST_RCVD , PORTE_LINK_RESET_ERR , PORTE_TIMER_EVENT , PORTE_HARD_RESET , PORT_NUM_EVENTS , } 
e#phy_event enum phy_event { PHYE_LOSS_OF_SIGNAL = 0U , PHYE_OOB_DONE , PHYE_OOB_ERROR , PHYE_SPINUP_HOLD , PHYE_RESUME_TIMEOUT , PHYE_SHUTDOWN , PHY_NUM_EVENTS , } 
s#sas_ha_struct struct sas_ha_struct { s#list_head defer_q ; s#mutex drain_mutex ; unsigned long state ; t#spinlock_t lock ; int eh_active ; t#wait_queue_head_t eh_wait_q ; s#list_head eh_dev_q ; s#mutex disco_mutex ; s#scsi_core core ; char * sas_ha_name ; s#device * dev ; s#module * lldd_module ; s#workqueue_struct * event_q ; s#workqueue_struct * disco_q ; t#u8 * sas_addr ; t#u8 hashed_sas_addr [ 3 ] ; t#spinlock_t phy_port_lock ; s#asd_sas_phy * * sas_phy ; s#asd_sas_port * * sas_port ; int num_phys ; int strict_wide_ports ; int ( * notify_port_event ) ( s#asd_sas_phy * , e#port_event ) ; int ( * notify_phy_event ) ( s#asd_sas_phy * , e#phy_event ) ; void * lldd_ha ; s#list_head eh_done_q ; s#list_head eh_ata_q ; int event_thres ; } 
sas_drain_work extern int sas_drain_work ( s#sas_ha_struct * ) 

/* drivers/scsi/libsas/sas_host_smp.o */
try_test_sas_gpio_gp_bit int try_test_sas_gpio_gp_bit ( unsigned int , t#u8 * , t#u8 , t#u8 ) 

/* drivers/scsi/libsas/sas_init.o */
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##sock
s##pipe_inode_info
s##poll_table_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##mem_cgroup
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##device_private
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##hd_geometry
s##pr_ops
s##blk_mq_ctx
s##kmem_cache
s##cgroup_subsys_state
s##workqueue_struct
s##blkcg_gq
s##blk_flush_queue
s##blk_mq_tags
s##blk_mq_alloc_data
s##blk_mq_debugfs_attr
s##blk_queue_stats
s##rq_wb
s##blk_stat_callback
s##blk_trace
s##throtl_data
s##timer_rand_state
s##disk_events
s##badblocks
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##reclaim_state
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##scsi_device_handler
s##proc_dir_entry
s##scsi_host_cmd_pool
s#host_to_dev_fis struct host_to_dev_fis { t#u8 fis_type ; t#u8 flags ; t#u8 command ; t#u8 features ; t#u8 lbal ; union { t#u8 lbam ; t#u8 byte_count_low ; } ; union { t#u8 lbah ; t#u8 byte_count_high ; } ; t#u8 device ; t#u8 lbal_exp ; t#u8 lbam_exp ; t#u8 lbah_exp ; t#u8 features_exp ; union { t#u8 sector_count ; t#u8 interrupt_reason ; } ; t#u8 sector_count_exp ; t#u8 _r_a ; t#u8 control ; t#u32 _r_b ; } 
s#sas_ata_task struct sas_ata_task { s#host_to_dev_fis fis ; t#u8 atapi_packet [ 16 ] ; t#u8 retry_count ; t#u8 dma_xfer : 1 ; t#u8 use_ncq : 1 ; t#u8 set_affil_pol : 1 ; t#u8 stp_affil_pol : 1 ; t#u8 device_control_reg_update : 1 ; } 
s#sas_smp_task struct sas_smp_task { s#scatterlist smp_req ; s#scatterlist smp_resp ; } 
e#task_attribute enum task_attribute { TASK_ATTR_SIMPLE = 0 , TASK_ATTR_HOQ = 1 , TASK_ATTR_ORDERED = 2 , TASK_ATTR_ACA = 4 , } 
s#sas_ssp_task struct sas_ssp_task { t#u8 retry_count ; t#u8 LUN [ 8 ] ; t#u8 enable_first_burst : 1 ; e#task_attribute task_attr ; t#u8 task_prio ; s#scsi_cmnd * cmd ; } 
e#service_response enum service_response { SAS_TASK_COMPLETE , SAS_TASK_UNDELIVERED = - 1 , } 
e#exec_status enum exec_status { __SAM_STAT_CHECK_CONDITION = 0x02 , SAS_DEV_NO_RESPONSE = 0x80 , SAS_DATA_UNDERRUN , SAS_DATA_OVERRUN , SAS_INTERRUPTED , SAS_QUEUE_FULL , SAS_DEVICE_UNKNOWN , SAS_SG_ERR , SAS_OPEN_REJECT , SAS_OPEN_TO , SAS_PROTO_RESPONSE , SAS_PHY_DOWN , SAS_NAK_R_ERR , SAS_PENDING , SAS_ABORTED_TASK , } 
e#sas_open_rej_reason enum sas_open_rej_reason { SAS_OREJ_UNKNOWN = 0 , SAS_OREJ_BAD_DEST = 1 , SAS_OREJ_CONN_RATE = 2 , SAS_OREJ_EPROTO = 3 , SAS_OREJ_RESV_AB0 = 4 , SAS_OREJ_RESV_AB1 = 5 , SAS_OREJ_RESV_AB2 = 6 , SAS_OREJ_RESV_AB3 = 7 , SAS_OREJ_WRONG_DEST = 8 , SAS_OREJ_STP_NORES = 9 , SAS_OREJ_NO_DEST = 10 , SAS_OREJ_PATH_BLOCKED = 11 , SAS_OREJ_RSVD_CONT0 = 12 , SAS_OREJ_RSVD_CONT1 = 13 , SAS_OREJ_RSVD_INIT0 = 14 , SAS_OREJ_RSVD_INIT1 = 15 , SAS_OREJ_RSVD_STOP0 = 16 , SAS_OREJ_RSVD_STOP1 = 17 , SAS_OREJ_RSVD_RETRY = 18 , } 
s#task_status_struct struct task_status_struct { e#service_response resp ; e#exec_status stat ; int buf_valid_size ; t#u8 buf [ 96 ] ; t#u32 residual ; e#sas_open_rej_reason open_rej_reason ; } 
s#sas_task_slow struct sas_task_slow { s#timer_list timer ; s#completion completion ; } 
s#sas_task struct sas_task { s#domain_device * dev ; t#spinlock_t task_state_lock ; unsigned task_state_flags ; e#sas_protocol task_proto ; union { s#sas_ata_task ata_task ; s#sas_smp_task smp_task ; s#sas_ssp_task ssp_task ; } ; s#scatterlist * scatter ; int num_scatter ; t#u32 total_xfer_len ; t#u8 data_dir : 2 ; s#task_status_struct task_status ; void ( * task_done ) ( s#sas_task * ) ; void * lldd_task ; void * uldd_task ; s#sas_task_slow * slow_task ; } 
sas_alloc_task extern s#sas_task * sas_alloc_task ( t#gfp_t ) 
sas_alloc_slow_task extern s#sas_task * sas_alloc_slow_task ( t#gfp_t ) 
sas_free_task extern void sas_free_task ( s#sas_task * ) 
sas_prep_resume_ha extern void sas_prep_resume_ha ( s#sas_ha_struct * ) 
sas_resume_ha extern void sas_resume_ha ( s#sas_ha_struct * ) 
sas_suspend_ha extern void sas_suspend_ha ( s#sas_ha_struct * ) 
dev_attr_phy_event_threshold extern s#device_attribute dev_attr_phy_event_threshold 
e#phy_func enum phy_func { PHY_FUNC_NOP , PHY_FUNC_LINK_RESET , PHY_FUNC_HARD_RESET , PHY_FUNC_DISABLE , PHY_FUNC_CLEAR_ERROR_LOG = 5 , PHY_FUNC_CLEAR_AFFIL , PHY_FUNC_TX_SATA_PS_SIGNAL , PHY_FUNC_RELEASE_SPINUP_HOLD = 0x10 , PHY_FUNC_SET_LINK_RATE , PHY_FUNC_GET_EVENTS , } 
s#sas_domain_function_template struct sas_domain_function_template { void ( * lldd_port_formed ) ( s#asd_sas_phy * ) ; void ( * lldd_port_deformed ) ( s#asd_sas_phy * ) ; int ( * lldd_dev_found ) ( s#domain_device * ) ; void ( * lldd_dev_gone ) ( s#domain_device * ) ; int ( * lldd_execute_task ) ( s#sas_task * , t#gfp_t ) ; int ( * lldd_abort_task ) ( s#sas_task * ) ; int ( * lldd_abort_task_set ) ( s#domain_device * , t#u8 * ) ; int ( * lldd_clear_aca ) ( s#domain_device * , t#u8 * ) ; int ( * lldd_clear_task_set ) ( s#domain_device * , t#u8 * ) ; int ( * lldd_I_T_nexus_reset ) ( s#domain_device * ) ; int ( * lldd_ata_check_ready ) ( s#domain_device * ) ; void ( * lldd_ata_set_dmamode ) ( s#domain_device * ) ; int ( * lldd_lu_reset ) ( s#domain_device * , t#u8 * ) ; int ( * lldd_query_task ) ( s#sas_task * ) ; int ( * lldd_clear_nexus_port ) ( s#asd_sas_port * ) ; int ( * lldd_clear_nexus_ha ) ( s#sas_ha_struct * ) ; int ( * lldd_control_phy ) ( s#asd_sas_phy * , e#phy_func , void * ) ; int ( * lldd_write_gpio ) ( s#sas_ha_struct * , t#u8 , t#u8 , t#u8 , t#u8 * ) ; } 
sas_domain_attach_transport extern s#scsi_transport_template * sas_domain_attach_transport ( s#sas_domain_function_template * ) 
sas_register_ha extern int sas_register_ha ( s#sas_ha_struct * ) 
sas_unregister_ha extern int sas_unregister_ha ( s#sas_ha_struct * ) 

/* drivers/scsi/libsas/sas_scsi_host.o */
s##device_private
s##sock
s##vfsmount
s##posix_acl
s##module
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##mmu_notifier_mm
s##xol_area
s##compat_timespec
s##pollfd
s##pid_namespace
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##bpf_prog_array
s##cgroup_taskset
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_mq_ctx
s##kmem_cache
s##blkcg_gq
s##workqueue_struct
s##blk_flush_queue
s##blk_mq_tags
s##blk_mq_alloc_data
s##blk_mq_debugfs_attr
s##blk_queue_stats
s##rq_wb
s##blk_stat_callback
s##blk_trace
s##throtl_data
s##hd_geometry
s##pr_ops
s##timer_rand_state
s##disk_events
s##badblocks
s##reclaim_state
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##iov_iter
s##swap_info_struct
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##mtd_info
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##scsi_device_handler
s##proc_dir_entry
s##scsi_host_cmd_pool
sas_get_local_phy s#sas_phy * sas_get_local_phy ( s#domain_device * ) 
sas_wait_eh void sas_wait_eh ( s#domain_device * ) 
sas_eh_abort_handler int sas_eh_abort_handler ( s#scsi_cmnd * ) 
sas_request_addr int sas_request_addr ( s#Scsi_Host * , t#u8 * ) 
sas_queuecommand extern int sas_queuecommand ( s#Scsi_Host * , s#scsi_cmnd * ) 
sas_target_alloc extern int sas_target_alloc ( s#scsi_target * ) 
sas_slave_configure extern int sas_slave_configure ( s#scsi_device * ) 
sas_change_queue_depth extern int sas_change_queue_depth ( s#scsi_device * , int ) 
sas_bios_param extern int sas_bios_param ( s#scsi_device * , s#block_device * , t#sector_t , int * ) 
sas_task_abort void sas_task_abort ( s#sas_task * ) 
sas_phy_reset int sas_phy_reset ( s#sas_phy * , int ) 
sas_eh_device_reset_handler int sas_eh_device_reset_handler ( s#scsi_cmnd * ) 
sas_eh_target_reset_handler int sas_eh_target_reset_handler ( s#scsi_cmnd * ) 
sas_target_destroy extern void sas_target_destroy ( s#scsi_target * ) 
sas_ioctl extern int sas_ioctl ( s#scsi_device * , int , void * ) 

/* drivers/scsi/libsas/sas_task.o */
s##device_private
s##sock
s##vfsmount
s##posix_acl
s##module
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##compat_timespec
s##pollfd
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_mq_ctx
s##kmem_cache
s##blkcg_gq
s##workqueue_struct
s##blk_flush_queue
s##blk_mq_tags
s##blk_mq_alloc_data
s##blk_mq_debugfs_attr
s##blk_queue_stats
s##rq_wb
s##cgroup_subsys_state
s##blk_stat_callback
s##blk_trace
s##throtl_data
s##hd_geometry
s##pr_ops
s##timer_rand_state
s##disk_events
s##badblocks
s##reclaim_state
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##iov_iter
s##swap_info_struct
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##mtd_info
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##scsi_device_handler
s##proc_dir_entry
s##scsi_host_cmd_pool
s##scsi_transport_template
s#ssp_response_iu struct ssp_response_iu { t#u8 _r_a [ 10 ] ; t#u8 _r_b : 6 ; t#u8 datapres : 2 ; t#u8 status ; t#u32 _r_c ; t#__be32 sense_data_len ; t#__be32 response_data_len ; t#u8 resp_data [ 0 ] ; t#u8 sense_data [ 0 ] ; } 
sas_ssp_task_response extern void sas_ssp_task_response ( s#device * , s#sas_task * , s#ssp_response_iu * ) 

/* drivers/scsi/osd/osd_initiator.o */
s##Scsi_Host
s##blk_mq_ctx
s##device_private
s##sock
s##seq_file
s##vfsmount
s##posix_acl
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##reclaim_state
s##workqueue_struct
s##cgroup_subsys_state
s##kmem_cache
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##swap_info_struct
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##mtd_info
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##hd_geometry
s##pr_ops
s##timer_rand_state
s##disk_events
s##badblocks
s##blkcg_gq
s##blk_flush_queue
s##blk_mq_tags
s##blk_mq_alloc_data
s##blk_mq_debugfs_attr
s##blk_queue_stats
s##rq_wb
s##blk_stat_callback
s##blk_trace
s##bsg_job
s##throtl_data
s##scsi_device_handler
e#osd_std_version enum osd_std_version { OSD_VER_NONE = 0 , OSD_VER1 = 1 , OSD_VER2 = 2 , } 
s#osd_dev struct osd_dev { s#scsi_device * scsi_device ; unsigned def_timeout ; e#osd_std_version version ; } 
E#OSD_SYSTEMID_LEN 20 
s#osd_dev_info struct osd_dev_info { unsigned systemid_len ; t#u8 systemid [ E#OSD_SYSTEMID_LEN ] ; unsigned osdname_len ; t#u8 * osdname ; } 
osd_auto_detect_ver int osd_auto_detect_ver ( s#osd_dev * , void * , s#osd_dev_info * ) 
osd_dev_init void osd_dev_init ( s#osd_dev * , s#scsi_device * ) 
osd_dev_fini void osd_dev_fini ( s#osd_dev * ) 
s#scsi_varlen_cdb_hdr struct scsi_varlen_cdb_hdr { t#__u8 opcode ; t#__u8 control ; t#__u8 misc [ 5 ] ; t#__u8 additional_cdb_length ; t#__be16 service_action ; } 
s#__osdv1_cdb_addr_len struct __osdv1_cdb_addr_len { t#__be32 list_identifier ; t#__be64 length ; t#__be64 start_address ; } 
s#__osdv2_cdb_addr_len struct __osdv2_cdb_addr_len { t#__be64 length ; t#__be64 start_address ; union { t#__be32 list_identifier ; t#__be32 cdb_continuation_length ; } ; } 
t#osd_cdb_offset typedef t#__be32 osd_cdb_offset 
s#osd_attributes_page_mode struct osd_attributes_page_mode { t#__be32 get_attr_page ; t#__be32 get_attr_alloc_length ; t#osd_cdb_offset get_attr_offset ; t#__be32 set_attr_page ; t#__be32 set_attr_id ; t#__be32 set_attr_length ; t#osd_cdb_offset set_attr_offset ; } 
s#osd_attributes_list_mode struct osd_attributes_list_mode { t#__be32 get_attr_desc_bytes ; t#osd_cdb_offset get_attr_desc_offset ; t#__be32 get_attr_alloc_length ; t#osd_cdb_offset get_attr_offset ; t#__be32 set_attr_bytes ; t#osd_cdb_offset set_attr_offset ; t#__be32 not_used ; } 
s#osd_attributes_cdb_mode struct osd_attributes_cdb_mode { t#__be32 set_attr_page ; t#__be32 set_attr_id ; t#__be16 set_attr_len ; t#u8 set_attr_val [ 18 ] ; } 
s#osd_cdb_head struct osd_cdb_head { s#scsi_varlen_cdb_hdr varlen_cdb ; t#u8 options ; t#u8 command_specific_options ; t#u8 timestamp_control ; t#u8 reserved1 [ 3 ] ; t#__be64 partition ; t#__be64 object ; union { s#__osdv1_cdb_addr_len __attribute__ ( ( packed ) ) v1 ; s#__osdv2_cdb_addr_len __attribute__ ( ( packed ) ) v2 ; } ; union { s#osd_attributes_page_mode __attribute__ ( ( packed ) ) attrs_page ; s#osd_attributes_list_mode __attribute__ ( ( packed ) ) attrs_list ; s#osd_attributes_cdb_mode __attribute__ ( ( packed ) ) attrs_cdb ; t#u8 get_set_attributes_parameters [ 28 ] ; } ; } 
E#OSDv1_CAP_LEN 80 
E#OSDv1_CRYPTO_KEYID_SIZE 20 
E#OSD_CRYPTO_NONCE_SIZE 12 
s#osdv1_security_parameters struct osdv1_security_parameters { t#u8 integrity_check_value [ E#OSDv1_CRYPTO_KEYID_SIZE ] ; t#u8 request_nonce [ E#OSD_CRYPTO_NONCE_SIZE ] ; t#osd_cdb_offset data_in_integrity_check_offset ; t#osd_cdb_offset data_out_integrity_check_offset ; } 
s#osdv1_cdb struct osdv1_cdb { s#osd_cdb_head h ; t#u8 caps [ E#OSDv1_CAP_LEN ] ; s#osdv1_security_parameters sec_params ; } 
E#OSD_CAP_LEN 104 
E#OSDv2_CRYPTO_KEYID_SIZE 32 
s#osdv2_security_parameters struct osdv2_security_parameters { t#u8 integrity_check_value [ E#OSDv2_CRYPTO_KEYID_SIZE ] ; t#u8 request_nonce [ E#OSD_CRYPTO_NONCE_SIZE ] ; t#osd_cdb_offset data_in_integrity_check_offset ; t#osd_cdb_offset data_out_integrity_check_offset ; } 
s#osdv2_cdb struct osdv2_cdb { s#osd_cdb_head h ; t#u8 caps [ E#OSD_CAP_LEN ] ; s#osdv2_security_parameters sec_params ; } 
E#OSDv2_ADDITIONAL_CDB_LENGTH 228 
E#OSD_ADDITIONAL_CDB_LENGTH E#OSDv2_ADDITIONAL_CDB_LENGTH 
E#OSD_TOTAL_CDB_LEN E#OSD_ADDITIONAL_CDB_LENGTH + 8 
s#osd_cdb struct osd_cdb { union { s#osdv1_cdb v1 ; s#osdv2_cdb v2 ; t#u8 buff [ E#OSD_TOTAL_CDB_LEN ] ; } ; } 
E#OSD_CRYPTO_KEYID_SIZE E#OSDv2_CRYPTO_KEYID_SIZE 
s#osd_data_out_integrity_info struct osd_data_out_integrity_info { t#__be64 data_bytes ; t#__be64 set_attributes_bytes ; t#__be64 get_attributes_bytes ; t#__u8 integrity_check_value [ E#OSD_CRYPTO_KEYID_SIZE ] ; } 
s#osd_data_in_integrity_info struct osd_data_in_integrity_info { t#__be64 data_bytes ; t#__be64 retrieved_attributes_bytes ; t#__u8 integrity_check_value [ E#OSD_CRYPTO_KEYID_SIZE ] ; } 
s#_osd_req_data_segment struct _osd_req_data_segment { void * buff ; unsigned alloc_size ; unsigned total_bytes ; } 
s#_osd_io_info struct _osd_io_info { s#bio * bio ; t#u64 total_bytes ; t#u64 residual ; s#request * req ; s#_osd_req_data_segment * last_seg ; t#u8 * pad_buff ; } 
E#OSD_MAX_SENSE_LEN 252 
e#osd_attributes_mode enum osd_attributes_mode { OSD_CDB_SET_ONE_ATTR = 0x10 , OSD_CDB_GET_ATTR_PAGE_SET_ONE = 0x20 , OSD_CDB_GET_SET_ATTR_LISTS = 0x30 , OSD_CDB_GET_SET_ATTR_MASK = 0x30 , } 
t#osd_req_done_fn typedef void ( osd_req_done_fn ) ( s#osd_request * , void * ) 
s#osd_request struct osd_request { s#osd_cdb cdb ; s#osd_data_out_integrity_info out_data_integ ; s#osd_data_in_integrity_info in_data_integ ; s#osd_dev * osd_dev ; s#request * request ; s#_osd_req_data_segment cdb_cont , set_attr , enc_get_attr , get_attr ; s#_osd_io_info out , in ; unsigned timeout ; unsigned retries ; unsigned sense_len ; t#u8 sense [ E#OSD_MAX_SENSE_LEN ] ; e#osd_attributes_mode attributes_mode ; t#osd_req_done_fn * async_done ; void * async_private ; t#blk_status_t async_error ; int req_errors ; } 
osd_start_request s#osd_request * osd_start_request ( s#osd_dev * ) 
osd_end_request void osd_end_request ( s#osd_request * ) 
osd_execute_request int osd_execute_request ( s#osd_request * ) 
osd_execute_request_async int osd_execute_request_async ( s#osd_request * , t#osd_req_done_fn * , void * ) 
osd_req_format void osd_req_format ( s#osd_request * , t#u64 ) 
t#osd_id typedef t#u64 osd_id 
s#osd_obj_id_list struct osd_obj_id_list { t#__be64 list_bytes ; t#__be64 continuation_id ; t#__be32 list_identifier ; t#u8 pad [ 3 ] ; t#u8 root_lstchg ; t#__be64 object_ids [ 0 ] ; } 
osd_req_list_dev_partitions int osd_req_list_dev_partitions ( s#osd_request * , t#osd_id , s#osd_obj_id_list * , unsigned ) 
e#osd_options_flush_scope_values enum osd_options_flush_scope_values { OSD_CDB_FLUSH_ALL = 0 , OSD_CDB_FLUSH_ATTR_ONLY = 1 , OSD_CDB_FLUSH_ALL_RECURSIVE = 2 , OSD_CDB_FLUSH_ALL_RANGE = 2 , } 
osd_req_flush_obsd void osd_req_flush_obsd ( s#osd_request * , e#osd_options_flush_scope_values ) 
osd_req_create_partition void osd_req_create_partition ( s#osd_request * , t#osd_id ) 
osd_req_remove_partition void osd_req_remove_partition ( s#osd_request * , t#osd_id ) 
osd_req_list_partition_collections int osd_req_list_partition_collections ( s#osd_request * , t#osd_id , t#osd_id , s#osd_obj_id_list * , unsigned ) 
osd_req_list_partition_objects int osd_req_list_partition_objects ( s#osd_request * , t#osd_id , t#osd_id , s#osd_obj_id_list * , unsigned ) 
osd_req_flush_partition void osd_req_flush_partition ( s#osd_request * , t#osd_id , e#osd_options_flush_scope_values ) 
s#osd_obj_id struct osd_obj_id { t#osd_id partition ; t#osd_id id ; } 
osd_req_list_collection_objects int osd_req_list_collection_objects ( s#osd_request * , const s#osd_obj_id * , t#osd_id , s#osd_obj_id_list * , unsigned ) 
osd_req_flush_collection void osd_req_flush_collection ( s#osd_request * , const s#osd_obj_id * , e#osd_options_flush_scope_values ) 
osd_req_create_object void osd_req_create_object ( s#osd_request * , s#osd_obj_id * ) 
osd_req_remove_object void osd_req_remove_object ( s#osd_request * , s#osd_obj_id * ) 
osd_req_write void osd_req_write ( s#osd_request * , const s#osd_obj_id * , t#u64 , s#bio * , t#u64 ) 
osd_req_write_kern int osd_req_write_kern ( s#osd_request * , const s#osd_obj_id * , t#u64 , void * , t#u64 ) 
osd_req_flush_object void osd_req_flush_object ( s#osd_request * , const s#osd_obj_id * , e#osd_options_flush_scope_values , t#u64 , t#u64 ) 
osd_req_read void osd_req_read ( s#osd_request * , const s#osd_obj_id * , t#u64 , s#bio * , t#u64 ) 
osd_req_read_kern int osd_req_read_kern ( s#osd_request * , const s#osd_obj_id * , t#u64 , void * , t#u64 ) 
s#osd_sg_entry struct osd_sg_entry { t#u64 offset ; t#u64 len ; } 
osd_req_write_sg int osd_req_write_sg ( s#osd_request * , const s#osd_obj_id * , s#bio * , const s#osd_sg_entry * , unsigned ) 
osd_req_read_sg int osd_req_read_sg ( s#osd_request * , const s#osd_obj_id * , s#bio * , const s#osd_sg_entry * , unsigned ) 
osd_req_write_sg_kern int osd_req_write_sg_kern ( s#osd_request * , const s#osd_obj_id * , void * * , const s#osd_sg_entry * , unsigned ) 
osd_req_read_sg_kern int osd_req_read_sg_kern ( s#osd_request * , const s#osd_obj_id * , void * * , const s#osd_sg_entry * , unsigned ) 
osd_req_get_attributes void osd_req_get_attributes ( s#osd_request * , const s#osd_obj_id * ) 
osd_req_set_attributes void osd_req_set_attributes ( s#osd_request * , const s#osd_obj_id * ) 
s#osd_attr struct osd_attr { t#u32 attr_page ; t#u32 attr_id ; t#u16 len ; void * val_ptr ; } 
osd_req_add_set_attr_list int osd_req_add_set_attr_list ( s#osd_request * , const s#osd_attr * , unsigned ) 
osd_req_add_get_attr_list int osd_req_add_get_attr_list ( s#osd_request * , const s#osd_attr * , unsigned ) 
osd_req_decode_get_attr_list int osd_req_decode_get_attr_list ( s#osd_request * , s#osd_attr * , int * , void * * ) 
osd_req_add_get_attr_page int osd_req_add_get_attr_page ( s#osd_request * , t#u32 , void * , unsigned , const s#osd_attr * ) 
osd_finalize_request int osd_finalize_request ( s#osd_request * , t#u8 , const void * , const t#u8 * ) 
e#osd_err_priority enum osd_err_priority { OSD_ERR_PRI_NO_ERROR = 0 , OSD_ERR_PRI_CLEAR_PAGES = 1 , OSD_ERR_PRI_RESOURCE = 2 , OSD_ERR_PRI_BAD_CRED = 3 , OSD_ERR_PRI_NO_ACCESS = 4 , OSD_ERR_PRI_UNREACHABLE = 5 , OSD_ERR_PRI_NOT_FOUND = 6 , OSD_ERR_PRI_NO_SPACE = 7 , OSD_ERR_PRI_EIO = 8 , } 
s#osd_sense_info struct osd_sense_info { e#osd_err_priority osd_err_pri ; int key ; int additional_code ; union { t#u16 sense_info ; t#u16 cdb_field_offset ; } ; union { t#u64 command_info ; } ; t#u32 not_initiated_command_functions ; t#u32 completed_command_functions ; s#osd_obj_id obj ; s#osd_attr attr ; } 
osd_req_decode_sense_full int osd_req_decode_sense_full ( s#osd_request * , s#osd_sense_info * , t#bool , s#osd_obj_id * , int , s#osd_attr * , int ) 
osd_sec_init_nosec_doall_caps void osd_sec_init_nosec_doall_caps ( void * , const s#osd_obj_id * , t#bool , const t#bool ) 

/* drivers/scsi/osd/osd_uld.o */
s##Scsi_Host
s##blk_mq_ctx
s##device_private
s##sock
s##seq_file
s##vfsmount
s##posix_acl
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##reclaim_state
s##workqueue_struct
s##cgroup_subsys_state
s##kmem_cache
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##swap_info_struct
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##mtd_info
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##hd_geometry
s##pr_ops
s##timer_rand_state
s##disk_events
s##badblocks
s##blkcg_gq
s##blk_mq_hw_ctx
s##blk_mq_alloc_data
s##blk_mq_debugfs_attr
s##blk_queue_stats
s##rq_wb
s##blk_mq_ops
s##blk_stat_callback
s##blk_trace
s##blk_flush_queue
s##bsg_job
s##throtl_data
s##blk_mq_tag_set
s##scsi_device_handler
t#do_test_fn typedef int ( do_test_fn ) ( s#osd_dev * , unsigned , unsigned long ) 
osduld_register_test int osduld_register_test ( unsigned , t#do_test_fn * ) 
osduld_unregister_test void osduld_unregister_test ( unsigned ) 
osduld_path_lookup s#osd_dev * osduld_path_lookup ( const char * ) 
osduld_info_lookup s#osd_dev * osduld_info_lookup ( const s#osd_dev_info * ) 
osduld_put_device void osduld_put_device ( s#osd_dev * ) 
osduld_device_info const s#osd_dev_info * osduld_device_info ( s#osd_dev * ) 
osduld_device_same t#bool osduld_device_same ( s#osd_dev * , const s#osd_dev_info * ) 

/* drivers/scsi/raid_class.o */
s##sock
s##vfsmount
s##posix_acl
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##blk_mq_ctx
s##kmem_cache
s##blkcg_gq
s##workqueue_struct
s##blk_flush_queue
s##blk_mq_tags
s##blk_mq_alloc_data
s##blk_mq_debugfs_attr
s##blk_queue_stats
s##rq_wb
s##cgroup_subsys_state
s##blk_stat_callback
s##blk_trace
s##bsg_job
s##throtl_data
s##hd_geometry
s##pr_ops
s##timer_rand_state
s##disk_events
s##badblocks
s##reclaim_state
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##swap_info_struct
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##mtd_info
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s#raid_template struct raid_template { s#transport_container raid_attrs ; } 
raid_component_add int raid_component_add ( s#raid_template * , s#device * , s#device * ) 
s#raid_function_template struct raid_function_template { void * cookie ; int ( * is_raid ) ( s#device * ) ; void ( * get_resync ) ( s#device * ) ; void ( * get_state ) ( s#device * ) ; } 
raid_class_attach s#raid_template * raid_class_attach ( s#raid_function_template * ) 
raid_class_release void raid_class_release ( s#raid_template * ) 

/* drivers/scsi/scsi.o */
scsi_logging_level extern unsigned int scsi_logging_level 
s#async_domain struct async_domain { s#list_head pending ; unsigned registered : 1 ; } 
scsi_sd_probe_domain extern s#async_domain scsi_sd_probe_domain 
scsi_sd_pm_domain extern s#async_domain scsi_sd_pm_domain 
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##sock
s##pipe_inode_info
s##kmem_cache
s##fs_pin
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_array
s##tracer
s##trace_buffer
s##ring_buffer_iter
s##event_filter
s##bpf_prog_array
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##cgroup_taskset
s##ring_buffer
s##bpf_prog
s##ftrace_hash
s##writeback_control
s##kstatfs
s##mem_cgroup
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_geometry
s##pr_ops
s##blk_mq_ctx
s##workqueue_struct
s##blkcg_gq
s##blk_flush_queue
s##blk_mq_tags
s##blk_mq_alloc_data
s##blk_mq_debugfs_attr
s##blk_queue_stats
s##rq_wb
s##blk_stat_callback
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##badblocks
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##numa_group
s##task_delay_info
s##uprobe
s##gs_cb
s##scsi_device_handler
s##proc_dir_entry
s##scsi_host_cmd_pool
s##scsi_transport_template
scsi_cmd_get_serial extern void scsi_cmd_get_serial ( s#Scsi_Host * , s#scsi_cmnd * ) 
scsi_change_queue_depth extern int scsi_change_queue_depth ( s#scsi_device * , int ) 
scsi_track_queue_full extern int scsi_track_queue_full ( s#scsi_device * , int ) 
scsi_get_vpd_page extern int scsi_get_vpd_page ( s#scsi_device * , t#u8 , unsigned char * , int ) 
scsi_report_opcode extern int scsi_report_opcode ( s#scsi_device * , unsigned char * , unsigned int , unsigned char ) 
scsi_device_get extern int scsi_device_get ( s#scsi_device * ) 
scsi_device_put extern void scsi_device_put ( s#scsi_device * ) 
__scsi_iterate_devices extern s#scsi_device * __scsi_iterate_devices ( s#Scsi_Host * , s#scsi_device * ) 
starget_for_each_device extern void starget_for_each_device ( s#scsi_target * , void * , void ( * ) ( s#scsi_device * , void * ) ) 
__starget_for_each_device extern void __starget_for_each_device ( s#scsi_target * , void * , void ( * ) ( s#scsi_device * , void * ) ) 
__scsi_device_lookup_by_target extern s#scsi_device * __scsi_device_lookup_by_target ( s#scsi_target * , t#u64 ) 
scsi_device_lookup_by_target extern s#scsi_device * scsi_device_lookup_by_target ( s#scsi_target * , t#u64 ) 
__scsi_device_lookup extern s#scsi_device * __scsi_device_lookup ( s#Scsi_Host * , t#uint , t#uint , t#u64 ) 
scsi_device_lookup extern s#scsi_device * scsi_device_lookup ( s#Scsi_Host * , t#uint , t#uint , t#u64 ) 

/* drivers/scsi/scsi_common.o */
scsi_device_type extern const char * scsi_device_type ( unsigned ) 
scsilun_to_int extern t#u64 scsilun_to_int ( s#scsi_lun * ) 
int_to_scsilun extern void int_to_scsilun ( t#u64 , s#scsi_lun * ) 
scsi_normalize_sense extern t#bool scsi_normalize_sense ( const t#u8 * , int , s#scsi_sense_hdr * ) 
scsi_sense_desc_find extern const t#u8 * scsi_sense_desc_find ( const t#u8 * , int , int ) 
scsi_build_sense_buffer extern void scsi_build_sense_buffer ( int , t#u8 * , t#u8 , t#u8 , t#u8 ) 
scsi_set_sense_information int scsi_set_sense_information ( t#u8 * , int , t#u64 ) 
scsi_set_sense_field_pointer int scsi_set_sense_field_pointer ( t#u8 * , int , t#u16 , t#u8 , t#bool ) 

/* drivers/scsi/scsi_devinfo.o */
e#scsi_devinfo_key enum scsi_devinfo_key { SCSI_DEVINFO_GLOBAL = 0 , SCSI_DEVINFO_SPI , } 
scsi_dev_info_list_add_keyed extern int scsi_dev_info_list_add_keyed ( int , char * , char * , char * , t#blist_flags_t , e#scsi_devinfo_key ) 
scsi_dev_info_list_del_keyed extern int scsi_dev_info_list_del_keyed ( char * , char * , e#scsi_devinfo_key ) 
s##Scsi_Host
s##blk_mq_ctx
s##device_private
s##sock
s##vfsmount
s##posix_acl
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##reclaim_state
s##workqueue_struct
s##cgroup_subsys_state
s##kmem_cache
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##swap_info_struct
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##mtd_info
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##hd_geometry
s##pr_ops
s##timer_rand_state
s##disk_events
s##badblocks
s##blkcg_gq
s##blk_mq_hw_ctx
s##blk_mq_alloc_data
s##blk_mq_debugfs_attr
s##blk_queue_stats
s##rq_wb
s##blk_mq_ops
s##blk_stat_callback
s##blk_trace
s##blk_flush_queue
s##bsg_job
s##throtl_data
s##blk_mq_tag_set
s##scsi_device_handler
scsi_get_device_flags_keyed extern t#blist_flags_t scsi_get_device_flags_keyed ( s#scsi_device * , const unsigned char * , const unsigned char * , e#scsi_devinfo_key ) 
scsi_dev_info_add_list extern int scsi_dev_info_add_list ( e#scsi_devinfo_key , const char * ) 
scsi_dev_info_remove_list extern int scsi_dev_info_remove_list ( e#scsi_devinfo_key ) 

/* drivers/scsi/scsi_dh.o */
s##sock
s##seq_file
s##vfsmount
s##posix_acl
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##blk_mq_ctx
s##kmem_cache
s##blkcg_gq
s##blk_mq_hw_ctx
s##blk_mq_alloc_data
s##blk_mq_debugfs_attr
s##blk_queue_stats
s##rq_wb
s##blk_mq_ops
s##workqueue_struct
s##cgroup_subsys_state
s##blk_stat_callback
s##blk_trace
s##blk_flush_queue
s##bsg_job
s##throtl_data
s##blk_mq_tag_set
s##hd_geometry
s##pr_ops
s##timer_rand_state
s##disk_events
s##badblocks
s##reclaim_state
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##swap_info_struct
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##mtd_info
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##Scsi_Host
t#activate_complete typedef void ( * activate_complete ) ( void * , int ) 
s#scsi_device_handler struct scsi_device_handler { s#list_head list ; s#module * module ; const char * name ; int ( * check_sense ) ( s#scsi_device * , s#scsi_sense_hdr * ) ; int ( * attach ) ( s#scsi_device * ) ; void ( * detach ) ( s#scsi_device * ) ; int ( * activate ) ( s#scsi_device * , t#activate_complete , void * ) ; int ( * prep_fn ) ( s#scsi_device * , s#request * ) ; int ( * set_params ) ( s#scsi_device * , const char * ) ; void ( * rescan ) ( s#scsi_device * ) ; } 
scsi_register_device_handler extern int scsi_register_device_handler ( s#scsi_device_handler * ) 
scsi_unregister_device_handler extern int scsi_unregister_device_handler ( s#scsi_device_handler * ) 
scsi_dh_activate extern int scsi_dh_activate ( s#request_queue * , t#activate_complete , void * ) 
scsi_dh_set_params extern int scsi_dh_set_params ( s#request_queue * , const char * ) 
scsi_dh_attach extern int scsi_dh_attach ( s#request_queue * , const char * ) 
scsi_dh_attached_handler_name extern const char * scsi_dh_attached_handler_name ( s#request_queue * , t#gfp_t ) 

/* drivers/scsi/scsi_error.o */
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##sock
s##pipe_inode_info
s##poll_table_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##writeback_control
s##kstatfs
s##mem_cgroup
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##hd_geometry
s##pr_ops
s##blk_mq_ctx
s##kmem_cache
s##bpf_prog_array
s##cgroup_taskset
s##workqueue_struct
s##blkcg_gq
s##blk_flush_queue
s##blk_mq_tags
s##blk_mq_alloc_data
s##blk_mq_debugfs_attr
s##blk_queue_stats
s##rq_wb
s##blk_stat_callback
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##badblocks
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##proc_dir_entry
s##scsi_host_cmd_pool
scsi_schedule_eh void scsi_schedule_eh ( s#Scsi_Host * ) 
scsi_block_when_processing_errors extern int scsi_block_when_processing_errors ( s#scsi_device * ) 
scsi_check_sense extern int scsi_check_sense ( s#scsi_cmnd * ) 
s#scsi_eh_save struct scsi_eh_save { int result ; int eh_eflags ; e#dma_data_direction data_direction ; unsigned underflow ; unsigned char cmd_len ; unsigned char prot_op ; unsigned char * cmnd ; s#scsi_data_buffer sdb ; s#request * next_rq ; unsigned char eh_cmnd [ 16 ] ; s#scatterlist sense_sgl ; } 
scsi_eh_prep_cmnd extern void scsi_eh_prep_cmnd ( s#scsi_cmnd * , s#scsi_eh_save * , unsigned char * , int , unsigned ) 
scsi_eh_restore_cmnd extern void scsi_eh_restore_cmnd ( s#scsi_cmnd * , s#scsi_eh_save * ) 
scsi_eh_finish_cmd extern void scsi_eh_finish_cmd ( s#scsi_cmnd * , s#list_head * ) 
scsi_eh_get_sense int scsi_eh_get_sense ( s#list_head * , s#list_head * ) 
scsi_eh_ready_devs void scsi_eh_ready_devs ( s#Scsi_Host * , s#list_head * , s#list_head * ) 
scsi_eh_flush_done_q extern void scsi_eh_flush_done_q ( s#list_head * ) 
scsi_report_bus_reset extern void scsi_report_bus_reset ( s#Scsi_Host * , int ) 
scsi_report_device_reset extern void scsi_report_device_reset ( s#Scsi_Host * , int , int ) 
scsi_ioctl_reset extern int scsi_ioctl_reset ( s#scsi_device * , int * ) 
scsi_command_normalize_sense extern t#bool scsi_command_normalize_sense ( const s#scsi_cmnd * , s#scsi_sense_hdr * ) 
scsi_get_sense_info_fld extern t#bool scsi_get_sense_info_fld ( const t#u8 * , int , t#u64 * ) 

/* drivers/scsi/scsi_ioctl.o */
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##sock
s##pipe_inode_info
s##poll_table_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##mem_cgroup
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##hd_geometry
s##pr_ops
s##blk_mq_ctx
s##kmem_cache
s##cgroup_subsys_state
s##workqueue_struct
s##blkcg_gq
s##blk_flush_queue
s##blk_mq_tags
s##blk_mq_alloc_data
s##blk_mq_debugfs_attr
s##blk_queue_stats
s##rq_wb
s##blk_stat_callback
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##badblocks
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##reclaim_state
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##proc_dir_entry
s##scsi_host_cmd_pool
s##scsi_transport_template
s##scsi_device_handler
scsi_set_medium_removal extern int scsi_set_medium_removal ( s#scsi_device * , char ) 
scsi_ioctl extern int scsi_ioctl ( s#scsi_device * , int , void * ) 
scsi_ioctl_block_when_processing_errors int scsi_ioctl_block_when_processing_errors ( s#scsi_device * , int , t#bool ) 

/* drivers/scsi/scsi_lib.o */
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##module
s##writeback_control
s##kstatfs
s##iov_iter
s##poll_table_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##mem_cgroup
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##device_private
s##sock
s##kernfs_open_node
s##kernfs_iattrs
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##hd_geometry
s##pr_ops
s##blk_mq_ctx
s##kmem_cache
s##cgroup_subsys_state
s##workqueue_struct
s##blkcg_gq
s##blk_flush_queue
s##blk_mq_tags
s##blk_mq_alloc_data
s##blk_mq_debugfs_attr
s##blk_queue_stats
s##rq_wb
s##blk_stat_callback
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##badblocks
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##compat_timespec
s##pollfd
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##reclaim_state
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##proc_dir_entry
s##scsi_host_cmd_pool
__scsi_execute extern int __scsi_execute ( s#scsi_device * , const unsigned char * , int , void * , unsigned , unsigned char * , s#scsi_sense_hdr * , int , int , t#u64 , t#req_flags_t , int * ) 
scsi_init_io extern int scsi_init_io ( s#scsi_cmnd * ) 
__scsi_init_queue void __scsi_init_queue ( s#Scsi_Host * , s#request_queue * ) 
scsi_device_from_queue extern s#scsi_device * scsi_device_from_queue ( s#request_queue * ) 
scsi_block_requests extern void scsi_block_requests ( s#Scsi_Host * ) 
scsi_unblock_requests extern void scsi_unblock_requests ( s#Scsi_Host * ) 
s#scsi_mode_data struct scsi_mode_data { t#__u32 length ; t#__u16 block_descriptor_length ; t#__u8 medium_type ; t#__u8 device_specific ; t#__u8 header_length ; t#__u8 longlba : 1 ; } 
scsi_mode_select extern int scsi_mode_select ( s#scsi_device * , int , int , int , unsigned char * , int , int , int , s#scsi_mode_data * , s#scsi_sense_hdr * ) 
scsi_mode_sense extern int scsi_mode_sense ( s#scsi_device * , int , int , unsigned char * , int , int , int , s#scsi_mode_data * , s#scsi_sense_hdr * ) 
scsi_test_unit_ready extern int scsi_test_unit_ready ( s#scsi_device * , int , int , s#scsi_sense_hdr * ) 
scsi_device_set_state extern int scsi_device_set_state ( s#scsi_device * , e#scsi_device_state ) 
E#SDEV_EVT_MEDIA_CHANGE 1 
e#scsi_device_event enum scsi_device_event { SDEV_EVT_MEDIA_CHANGE = 1 , SDEV_EVT_INQUIRY_CHANGE_REPORTED , SDEV_EVT_CAPACITY_CHANGE_REPORTED , SDEV_EVT_SOFT_THRESHOLD_REACHED_REPORTED , SDEV_EVT_MODE_PARAMETER_CHANGE_REPORTED , SDEV_EVT_LUN_CHANGE_REPORTED , SDEV_EVT_ALUA_STATE_CHANGE_REPORTED , SDEV_EVT_POWER_ON_RESET_OCCURRED , SDEV_EVT_FIRST = E#SDEV_EVT_MEDIA_CHANGE , SDEV_EVT_LAST = E#SDEV_EVT_POWER_ON_RESET_OCCURRED , SDEV_EVT_MAXBITS = E#SDEV_EVT_LAST + 1 } 
s#scsi_event struct scsi_event { e#scsi_device_event evt_type ; s#list_head node ; } 
sdev_evt_send extern void sdev_evt_send ( s#scsi_device * , s#scsi_event * ) 
sdev_evt_alloc extern s#scsi_event * sdev_evt_alloc ( e#scsi_device_event , t#gfp_t ) 
sdev_evt_send_simple extern void sdev_evt_send_simple ( s#scsi_device * , e#scsi_device_event , t#gfp_t ) 
scsi_device_quiesce extern int scsi_device_quiesce ( s#scsi_device * ) 
scsi_device_resume extern void scsi_device_resume ( s#scsi_device * ) 
scsi_target_quiesce extern void scsi_target_quiesce ( s#scsi_target * ) 
scsi_target_resume extern void scsi_target_resume ( s#scsi_target * ) 
scsi_internal_device_block_nowait int scsi_internal_device_block_nowait ( s#scsi_device * ) 
scsi_internal_device_unblock_nowait int scsi_internal_device_unblock_nowait ( s#scsi_device * , e#scsi_device_state ) 
scsi_target_block extern void scsi_target_block ( s#device * ) 
scsi_target_unblock extern void scsi_target_unblock ( s#device * , e#scsi_device_state ) 
scsi_kmap_atomic_sg extern void * scsi_kmap_atomic_sg ( s#scatterlist * , int , t#size_t * , t#size_t * ) 
scsi_kunmap_atomic_sg extern void scsi_kunmap_atomic_sg ( void * ) 
sdev_disable_disk_events extern void sdev_disable_disk_events ( s#scsi_device * ) 
sdev_enable_disk_events extern void sdev_enable_disk_events ( s#scsi_device * ) 
scsi_vpd_lun_id extern int scsi_vpd_lun_id ( s#scsi_device * , char * , t#size_t ) 
scsi_vpd_tpg_id extern int scsi_vpd_tpg_id ( s#scsi_device * , int * ) 

/* drivers/scsi/scsi_lib_dma.o */
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##module
s##writeback_control
s##kstatfs
s##iov_iter
s##poll_table_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##mem_cgroup
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##device_private
s##sock
s##kernfs_open_node
s##kernfs_iattrs
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##hd_geometry
s##pr_ops
s##blk_mq_ctx
s##kmem_cache
s##cgroup_subsys_state
s##workqueue_struct
s##blkcg_gq
s##blk_flush_queue
s##blk_mq_tags
s##blk_mq_alloc_data
s##blk_mq_debugfs_attr
s##blk_queue_stats
s##rq_wb
s##blk_stat_callback
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##badblocks
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##compat_timespec
s##pollfd
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##reclaim_state
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##proc_dir_entry
s##scsi_host_cmd_pool
s##scsi_transport_template
s##scsi_device_handler
scsi_dma_map extern int scsi_dma_map ( s#scsi_cmnd * ) 
scsi_dma_unmap extern void scsi_dma_unmap ( s#scsi_cmnd * ) 

/* drivers/scsi/scsi_logging.o */
s##Scsi_Host
s##blk_mq_ctx
s##device_private
s##sock
s##seq_file
s##vfsmount
s##posix_acl
s##module
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##compat_timespec
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##reclaim_state
s##workqueue_struct
s##cgroup_subsys_state
s##kmem_cache
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##iov_iter
s##swap_info_struct
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##mtd_info
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##hd_geometry
s##pr_ops
s##timer_rand_state
s##disk_events
s##badblocks
s##blkcg_gq
s##blk_flush_queue
s##blk_mq_tags
s##blk_mq_alloc_data
s##blk_mq_debugfs_attr
s##blk_queue_stats
s##rq_wb
s##blk_stat_callback
s##blk_trace
s##bsg_job
s##throtl_data
s##scsi_device_handler
sdev_prefix_printk __attribute__ ( ( format ( printf , 4 , 5 ) ) ) void sdev_prefix_printk ( const char * , const s#scsi_device * , const char * , const char * , ... ) 
scmd_printk __attribute__ ( ( format ( printf , 3 , 4 ) ) ) void scmd_printk ( const char * , const s#scsi_cmnd * , const char * , ... ) 
__scsi_format_command extern t#size_t __scsi_format_command ( char * , t#size_t , const unsigned char * , t#size_t ) 
scsi_print_command extern void scsi_print_command ( s#scsi_cmnd * ) 
scsi_print_sense_hdr extern void scsi_print_sense_hdr ( const s#scsi_device * , const char * , const s#scsi_sense_hdr * ) 
__scsi_print_sense extern void __scsi_print_sense ( const s#scsi_device * , const char * , const unsigned char * , int ) 
scsi_print_sense extern void scsi_print_sense ( const s#scsi_cmnd * ) 
scsi_print_result extern void scsi_print_result ( const s#scsi_cmnd * , const char * , int ) 

/* drivers/scsi/scsi_netlink.o */
s##posix_acl
s##vfsmount
s##module
s##device_private
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##sec_path
s##workqueue_struct
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##l3mdev_ops
s##ndisc_ops
s##xfrm_state
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##kmem_cache
s##xt_table
s##inet_hashinfo
s##fib_notifier_ops
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##lwtunnel_state
s##rtable
s##dn_route
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##mempolicy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_mq_ctx
s##blkcg_gq
s##blk_mq_hw_ctx
s##blk_mq_alloc_data
s##blk_mq_debugfs_attr
s##blk_queue_stats
s##rq_wb
s##blk_mq_ops
s##blk_stat_callback
s##blk_trace
s##blk_flush_queue
s##bsg_job
s##throtl_data
s##blk_mq_tag_set
s##hd_geometry
s##pr_ops
s##timer_rand_state
s##disk_events
s##badblocks
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##kernfs_open_node
s##kernfs_iattrs
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##request_sock_ops
s##timewait_sock_ops
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sock_reuseport
scsi_nl_sock extern s#sock * scsi_nl_sock 

/* drivers/scsi/scsi_pm.o */
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##module
s##writeback_control
s##kstatfs
s##iov_iter
s##poll_table_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##mem_cgroup
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##device_private
s##sock
s##kernfs_open_node
s##kernfs_iattrs
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##hd_geometry
s##pr_ops
s##blk_mq_ctx
s##kmem_cache
s##cgroup_subsys_state
s##workqueue_struct
s##blkcg_gq
s##blk_flush_queue
s##blk_mq_tags
s##blk_mq_alloc_data
s##blk_mq_debugfs_attr
s##blk_queue_stats
s##rq_wb
s##blk_stat_callback
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##badblocks
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##compat_timespec
s##pollfd
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##reclaim_state
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##scsi_cmnd
s##proc_dir_entry
s##scsi_host_cmd_pool
s##scsi_transport_template
s##scsi_device_handler
scsi_autopm_get_device extern int scsi_autopm_get_device ( s#scsi_device * ) 
scsi_autopm_put_device extern void scsi_autopm_put_device ( s#scsi_device * ) 

/* drivers/scsi/scsi_scan.o */
s##device_private
s##sock
s##vfsmount
s##posix_acl
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##bpf_prog_array
s##cgroup_taskset
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_mq_ctx
s##kmem_cache
s##blkcg_gq
s##workqueue_struct
s##blk_flush_queue
s##blk_mq_tags
s##blk_mq_alloc_data
s##blk_mq_debugfs_attr
s##blk_queue_stats
s##rq_wb
s##blk_stat_callback
s##blk_trace
s##bsg_job
s##throtl_data
s##hd_geometry
s##pr_ops
s##timer_rand_state
s##disk_events
s##badblocks
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##swap_info_struct
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##mtd_info
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
scsi_is_target_device extern int scsi_is_target_device ( const s#device * ) 
scsi_sanitize_inquiry_string extern void scsi_sanitize_inquiry_string ( unsigned char * , int ) 
s##proc_dir_entry
s##scsi_host_cmd_pool
__scsi_add_device extern s#scsi_device * __scsi_add_device ( s#Scsi_Host * , t#uint , t#uint , t#u64 , void * ) 
scsi_add_device extern int scsi_add_device ( s#Scsi_Host * , t#uint , t#uint , t#u64 ) 
scsi_rescan_device extern void scsi_rescan_device ( s#device * ) 
e#scsi_scan_mode enum scsi_scan_mode { SCSI_SCAN_INITIAL = 0 , SCSI_SCAN_RESCAN , SCSI_SCAN_MANUAL , } 
scsi_scan_target extern void scsi_scan_target ( s#device * , unsigned int , unsigned int , t#u64 , e#scsi_scan_mode ) 
scsi_scan_host extern void scsi_scan_host ( s#Scsi_Host * ) 
scsi_get_host_dev extern s#scsi_device * scsi_get_host_dev ( s#Scsi_Host * ) 
scsi_free_host_dev extern void scsi_free_host_dev ( s#scsi_device * ) 

/* drivers/scsi/scsi_sysfs.o */
s##device_private
s##sock
s##vfsmount
s##posix_acl
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_mq_ctx
s##kmem_cache
s##blkcg_gq
s##workqueue_struct
s##blk_flush_queue
s##blk_mq_tags
s##blk_mq_alloc_data
s##blk_mq_debugfs_attr
s##blk_queue_stats
s##rq_wb
s##cgroup_subsys_state
s##blk_stat_callback
s##blk_trace
s##bsg_job
s##throtl_data
s##hd_geometry
s##pr_ops
s##timer_rand_state
s##disk_events
s##badblocks
s##reclaim_state
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##swap_info_struct
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##mtd_info
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##of_device_id
s##acpi_device_id
s##driver_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##subsys_private
s##iommu_group
s##iommu_fwspec
s##iommu_ops
scsi_bus_type extern s#bus_type scsi_bus_type 
s##proc_dir_entry
s##scsi_host_cmd_pool
scsi_remove_device extern void scsi_remove_device ( s#scsi_device * ) 
scsi_remove_target extern void scsi_remove_target ( s#device * ) 
scsi_register_driver extern int scsi_register_driver ( s#device_driver * ) 
scsi_register_interface extern int scsi_register_interface ( s#class_interface * ) 
scsi_is_sdev_device extern int scsi_is_sdev_device ( const s#device * ) 

/* drivers/scsi/scsi_transport_fc.o */
fc_get_event_number t#u32 fc_get_event_number ( void ) 
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##sock
s##key_user
s##key_type
s##assoc_array_ptr
s##poll_table_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##user_namespace
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##mem_cgroup
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##hd_geometry
s##pr_ops
s##blk_mq_ctx
s##kmem_cache
s##cgroup_subsys_state
s##workqueue_struct
s##blkcg_gq
s##blk_flush_queue
s##blk_mq_tags
s##blk_mq_alloc_data
s##blk_mq_debugfs_attr
s##blk_queue_stats
s##rq_wb
s##blk_stat_callback
s##blk_trace
s##throtl_data
s##timer_rand_state
s##disk_events
s##badblocks
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##cgroup_namespace
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##reclaim_state
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##scsi_device_handler
s##proc_dir_entry
s##scsi_host_cmd_pool
e#fc_host_event_code enum fc_host_event_code { FCH_EVT_LIP = 0x1 , FCH_EVT_LINKUP = 0x2 , FCH_EVT_LINKDOWN = 0x3 , FCH_EVT_LIPRESET = 0x4 , FCH_EVT_RSCN = 0x5 , FCH_EVT_ADAPTER_CHANGE = 0x103 , FCH_EVT_PORT_UNKNOWN = 0x200 , FCH_EVT_PORT_OFFLINE = 0x201 , FCH_EVT_PORT_ONLINE = 0x202 , FCH_EVT_PORT_FABRIC = 0x204 , FCH_EVT_LINK_UNKNOWN = 0x500 , FCH_EVT_VENDOR_UNIQUE = 0xffff , } 
fc_host_post_fc_event void fc_host_post_fc_event ( s#Scsi_Host * , t#u32 , e#fc_host_event_code , t#u32 , char * , t#u64 ) 
fc_host_post_event void fc_host_post_event ( s#Scsi_Host * , t#u32 , e#fc_host_event_code , t#u32 ) 
fc_host_post_vendor_event void fc_host_post_vendor_event ( s#Scsi_Host * , t#u32 , t#u32 , char * , t#u64 ) 
fc_host_fpin_rcv void fc_host_fpin_rcv ( s#Scsi_Host * , t#u32 , char * ) 
scsi_is_fc_rport int scsi_is_fc_rport ( const s#device * ) 
fc_eh_timed_out e#blk_eh_timer_return fc_eh_timed_out ( s#scsi_cmnd * ) 
s#fc_function_template struct fc_function_template { void ( * get_rport_dev_loss_tmo ) ( s#fc_rport * ) ; void ( * set_rport_dev_loss_tmo ) ( s#fc_rport * , t#u32 ) ; void ( * get_starget_node_name ) ( s#scsi_target * ) ; void ( * get_starget_port_name ) ( s#scsi_target * ) ; void ( * get_starget_port_id ) ( s#scsi_target * ) ; void ( * get_host_port_id ) ( s#Scsi_Host * ) ; void ( * get_host_port_type ) ( s#Scsi_Host * ) ; void ( * get_host_port_state ) ( s#Scsi_Host * ) ; void ( * get_host_active_fc4s ) ( s#Scsi_Host * ) ; void ( * get_host_speed ) ( s#Scsi_Host * ) ; void ( * get_host_fabric_name ) ( s#Scsi_Host * ) ; void ( * get_host_symbolic_name ) ( s#Scsi_Host * ) ; void ( * set_host_system_hostname ) ( s#Scsi_Host * ) ; s#fc_host_statistics * ( * get_fc_host_stats ) ( s#Scsi_Host * ) ; void ( * reset_fc_host_stats ) ( s#Scsi_Host * ) ; int ( * issue_fc_host_lip ) ( s#Scsi_Host * ) ; void ( * dev_loss_tmo_callbk ) ( s#fc_rport * ) ; void ( * terminate_rport_io ) ( s#fc_rport * ) ; void ( * set_vport_symbolic_name ) ( s#fc_vport * ) ; int ( * vport_create ) ( s#fc_vport * , t#bool ) ; int ( * vport_disable ) ( s#fc_vport * , t#bool ) ; int ( * vport_delete ) ( s#fc_vport * ) ; int ( * tsk_mgmt_response ) ( s#Scsi_Host * , t#u64 , t#u64 , int ) ; int ( * it_nexus_response ) ( s#Scsi_Host * , t#u64 , int ) ; int ( * bsg_request ) ( s#bsg_job * ) ; int ( * bsg_timeout ) ( s#bsg_job * ) ; t#u32 dd_fcrport_size ; t#u32 dd_fcvport_size ; t#u32 dd_bsg_size ; unsigned long show_rport_maxframe_size : 1 ; unsigned long show_rport_supported_classes : 1 ; unsigned long show_rport_dev_loss_tmo : 1 ; unsigned long show_starget_node_name : 1 ; unsigned long show_starget_port_name : 1 ; unsigned long show_starget_port_id : 1 ; unsigned long show_host_node_name : 1 ; unsigned long show_host_port_name : 1 ; unsigned long show_host_permanent_port_name : 1 ; unsigned long show_host_supported_classes : 1 ; unsigned long show_host_supported_fc4s : 1 ; unsigned long show_host_supported_speeds : 1 ; unsigned long show_host_maxframe_size : 1 ; unsigned long show_host_serial_number : 1 ; unsigned long show_host_manufacturer : 1 ; unsigned long show_host_model : 1 ; unsigned long show_host_model_description : 1 ; unsigned long show_host_hardware_version : 1 ; unsigned long show_host_driver_version : 1 ; unsigned long show_host_firmware_version : 1 ; unsigned long show_host_optionrom_version : 1 ; unsigned long show_host_port_id : 1 ; unsigned long show_host_port_type : 1 ; unsigned long show_host_port_state : 1 ; unsigned long show_host_active_fc4s : 1 ; unsigned long show_host_speed : 1 ; unsigned long show_host_fabric_name : 1 ; unsigned long show_host_symbolic_name : 1 ; unsigned long show_host_system_hostname : 1 ; unsigned long disable_target_scan : 1 ; } 
fc_attach_transport s#scsi_transport_template * fc_attach_transport ( s#fc_function_template * ) 
fc_release_transport void fc_release_transport ( s#scsi_transport_template * ) 
fc_remove_host void fc_remove_host ( s#Scsi_Host * ) 
fc_remote_port_add s#fc_rport * fc_remote_port_add ( s#Scsi_Host * , int , s#fc_rport_identifiers * ) 
fc_remote_port_delete void fc_remote_port_delete ( s#fc_rport * ) 
fc_remote_port_rolechg void fc_remote_port_rolechg ( s#fc_rport * , t#u32 ) 
fc_block_rport int fc_block_rport ( s#fc_rport * ) 
fc_block_scsi_eh int fc_block_scsi_eh ( s#scsi_cmnd * ) 
s#fc_vport_identifiers struct fc_vport_identifiers { t#u64 node_name ; t#u64 port_name ; t#u32 roles ; t#bool disable ; e#fc_port_type vport_type ; char symbolic_name [ 64 ] ; } 
fc_vport_create s#fc_vport * fc_vport_create ( s#Scsi_Host * , int , s#fc_vport_identifiers * ) 
fc_vport_terminate int fc_vport_terminate ( s#fc_vport * ) 

/* drivers/scsi/scsi_transport_iscsi.o */
s##device_private
s##posix_acl
s##vfsmount
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##workqueue_struct
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##sec_path
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##kmem_cache
s##xfrm_state
s##lwtunnel_state
s##uncached_list
s##rt6_info
s##dn_route
s##prefix_info
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
s##prot_inuse
s##ipv4_devconf
s##xt_table
s##rt6_statistics
s##fib6_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_mq_ctx
s##blkcg_gq
s##blk_flush_queue
s##blk_mq_tags
s##blk_mq_alloc_data
s##blk_mq_debugfs_attr
s##blk_queue_stats
s##rq_wb
s##blk_stat_callback
s##blk_trace
s##throtl_data
s##hd_geometry
s##pr_ops
s##timer_rand_state
s##disk_events
s##badblocks
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##eventfd_ctx
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sock_reuseport
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##scsi_device_handler
s##scsi_host_cmd_pool
s##iscsi_task
s##iscsi_conn
iscsi_create_endpoint extern s#iscsi_endpoint * iscsi_create_endpoint ( int ) 
iscsi_destroy_endpoint extern void iscsi_destroy_endpoint ( s#iscsi_endpoint * ) 
iscsi_lookup_endpoint extern s#iscsi_endpoint * iscsi_lookup_endpoint ( t#u64 ) 
e#iscsi_ipaddress_state enum iscsi_ipaddress_state { ISCSI_IPDDRESS_STATE_UNCONFIGURED , ISCSI_IPDDRESS_STATE_ACQUIRING , ISCSI_IPDDRESS_STATE_TENTATIVE , ISCSI_IPDDRESS_STATE_VALID , ISCSI_IPDDRESS_STATE_DISABLING , ISCSI_IPDDRESS_STATE_INVALID , ISCSI_IPDDRESS_STATE_DEPRECATED , } 
iscsi_get_ipaddress_state_name extern char * iscsi_get_ipaddress_state_name ( e#iscsi_ipaddress_state ) 
e#iscsi_router_state enum iscsi_router_state { ISCSI_ROUTER_STATE_UNKNOWN , ISCSI_ROUTER_STATE_ADVERTISED , ISCSI_ROUTER_STATE_MANUAL , ISCSI_ROUTER_STATE_STALE , } 
iscsi_get_router_state_name extern char * iscsi_get_router_state_name ( e#iscsi_router_state ) 
iscsi_create_iface extern s#iscsi_iface * iscsi_create_iface ( s#Scsi_Host * , s#iscsi_transport * , t#uint32_t , t#uint32_t , int ) 
iscsi_destroy_iface extern void iscsi_destroy_iface ( s#iscsi_iface * ) 
iscsi_flashnode_bus_match extern int iscsi_flashnode_bus_match ( s#device * , s#device_driver * ) 
iscsi_create_flashnode_sess extern s#iscsi_bus_flash_session * iscsi_create_flashnode_sess ( s#Scsi_Host * , int , s#iscsi_transport * , int ) 
iscsi_create_flashnode_conn extern s#iscsi_bus_flash_conn * iscsi_create_flashnode_conn ( s#Scsi_Host * , s#iscsi_bus_flash_session * , s#iscsi_transport * , int ) 
iscsi_find_flashnode_sess extern s#device * iscsi_find_flashnode_sess ( s#Scsi_Host * , void * , int ( * ) ( s#device * , void * ) ) 
iscsi_find_flashnode_conn extern s#device * iscsi_find_flashnode_conn ( s#iscsi_bus_flash_session * ) 
iscsi_destroy_flashnode_sess extern void iscsi_destroy_flashnode_sess ( s#iscsi_bus_flash_session * ) 
iscsi_destroy_all_flashnode extern void iscsi_destroy_all_flashnode ( s#Scsi_Host * ) 
iscsi_session_chkready extern int iscsi_session_chkready ( s#iscsi_cls_session * ) 
iscsi_is_session_online extern int iscsi_is_session_online ( s#iscsi_cls_session * ) 
iscsi_is_session_dev extern int iscsi_is_session_dev ( const s#device * ) 
iscsi_host_for_each_session extern void iscsi_host_for_each_session ( s#Scsi_Host * , void ( * ) ( s#iscsi_cls_session * ) ) 
iscsi_scan_finished extern int iscsi_scan_finished ( s#Scsi_Host * , unsigned long ) 
iscsi_block_scsi_eh extern int iscsi_block_scsi_eh ( s#scsi_cmnd * ) 
iscsi_unblock_session extern void iscsi_unblock_session ( s#iscsi_cls_session * ) 
iscsi_block_session extern void iscsi_block_session ( s#iscsi_cls_session * ) 
iscsi_alloc_session extern s#iscsi_cls_session * iscsi_alloc_session ( s#Scsi_Host * , s#iscsi_transport * , int ) 
iscsi_add_session extern int iscsi_add_session ( s#iscsi_cls_session * , unsigned int ) 
iscsi_create_session extern s#iscsi_cls_session * iscsi_create_session ( s#Scsi_Host * , s#iscsi_transport * , int , unsigned int ) 
iscsi_remove_session extern void iscsi_remove_session ( s#iscsi_cls_session * ) 
iscsi_free_session extern void iscsi_free_session ( s#iscsi_cls_session * ) 
iscsi_create_conn extern s#iscsi_cls_conn * iscsi_create_conn ( s#iscsi_cls_session * , int , t#uint32_t ) 
iscsi_destroy_conn extern int iscsi_destroy_conn ( s#iscsi_cls_conn * ) 
iscsi_recv_pdu extern int iscsi_recv_pdu ( s#iscsi_cls_conn * , s#iscsi_hdr * , char * , t#uint32_t ) 
iscsi_offload_mesg extern int iscsi_offload_mesg ( s#Scsi_Host * , s#iscsi_transport * , t#uint32_t , char * , t#uint16_t ) 
iscsi_conn_error_event extern void iscsi_conn_error_event ( s#iscsi_cls_conn * , e#iscsi_err ) 
e#iscsi_conn_state enum iscsi_conn_state { ISCSI_CONN_STATE_FREE , ISCSI_CONN_STATE_XPT_WAIT , ISCSI_CONN_STATE_IN_LOGIN , ISCSI_CONN_STATE_LOGGED_IN , ISCSI_CONN_STATE_IN_LOGOUT , ISCSI_CONN_STATE_LOGOUT_REQUESTED , ISCSI_CONN_STATE_CLEANUP_WAIT , } 
iscsi_conn_login_event extern void iscsi_conn_login_event ( s#iscsi_cls_conn * , e#iscsi_conn_state ) 
e#iscsi_host_event_code enum iscsi_host_event_code { ISCSI_EVENT_LINKUP = 1 , ISCSI_EVENT_LINKDOWN , ISCSI_EVENT_MAX , } 
iscsi_post_host_event extern void iscsi_post_host_event ( t#uint32_t , s#iscsi_transport * , e#iscsi_host_event_code , t#uint32_t , t#uint8_t * ) 
iscsi_ping_comp_event extern void iscsi_ping_comp_event ( t#uint32_t , s#iscsi_transport * , t#uint32_t , t#uint32_t , t#uint32_t , t#uint8_t * ) 
e#iscsi_uevent_e enum iscsi_uevent_e { ISCSI_UEVENT_UNKNOWN = 0 , ISCSI_UEVENT_CREATE_SESSION = 10 + 1 , ISCSI_UEVENT_DESTROY_SESSION = 10 + 2 , ISCSI_UEVENT_CREATE_CONN = 10 + 3 , ISCSI_UEVENT_DESTROY_CONN = 10 + 4 , ISCSI_UEVENT_BIND_CONN = 10 + 5 , ISCSI_UEVENT_SET_PARAM = 10 + 6 , ISCSI_UEVENT_START_CONN = 10 + 7 , ISCSI_UEVENT_STOP_CONN = 10 + 8 , ISCSI_UEVENT_SEND_PDU = 10 + 9 , ISCSI_UEVENT_GET_STATS = 10 + 10 , ISCSI_UEVENT_GET_PARAM = 10 + 11 , ISCSI_UEVENT_TRANSPORT_EP_CONNECT = 10 + 12 , ISCSI_UEVENT_TRANSPORT_EP_POLL = 10 + 13 , ISCSI_UEVENT_TRANSPORT_EP_DISCONNECT = 10 + 14 , ISCSI_UEVENT_TGT_DSCVR = 10 + 15 , ISCSI_UEVENT_SET_HOST_PARAM = 10 + 16 , ISCSI_UEVENT_UNBIND_SESSION = 10 + 17 , ISCSI_UEVENT_CREATE_BOUND_SESSION = 10 + 18 , ISCSI_UEVENT_TRANSPORT_EP_CONNECT_THROUGH_HOST = 10 + 19 , ISCSI_UEVENT_PATH_UPDATE = 10 + 20 , ISCSI_UEVENT_SET_IFACE_PARAMS = 10 + 21 , ISCSI_UEVENT_PING = 10 + 22 , ISCSI_UEVENT_GET_CHAP = 10 + 23 , ISCSI_UEVENT_DELETE_CHAP = 10 + 24 , ISCSI_UEVENT_SET_FLASHNODE_PARAMS = 10 + 25 , ISCSI_UEVENT_NEW_FLASHNODE = 10 + 26 , ISCSI_UEVENT_DEL_FLASHNODE = 10 + 27 , ISCSI_UEVENT_LOGIN_FLASHNODE = 10 + 28 , ISCSI_UEVENT_LOGOUT_FLASHNODE = 10 + 29 , ISCSI_UEVENT_LOGOUT_FLASHNODE_SID = 10 + 30 , ISCSI_UEVENT_SET_CHAP = 10 + 31 , ISCSI_UEVENT_GET_HOST_STATS = 10 + 32 , ISCSI_KEVENT_RECV_PDU = 100 + 1 , ISCSI_KEVENT_CONN_ERROR = 100 + 2 , ISCSI_KEVENT_IF_ERROR = 100 + 3 , ISCSI_KEVENT_DESTROY_SESSION = 100 + 4 , ISCSI_KEVENT_UNBIND_SESSION = 100 + 5 , ISCSI_KEVENT_CREATE_SESSION = 100 + 6 , ISCSI_KEVENT_PATH_REQ = 100 + 7 , ISCSI_KEVENT_IF_DOWN = 100 + 8 , ISCSI_KEVENT_CONN_LOGIN_STATE = 100 + 9 , ISCSI_KEVENT_HOST_EVENT = 100 + 10 , ISCSI_KEVENT_PING_COMP = 100 + 11 , } 
iscsi_session_event extern int iscsi_session_event ( s#iscsi_cls_session * , e#iscsi_uevent_e ) 
iscsi_get_discovery_parent_name extern char * iscsi_get_discovery_parent_name ( int ) 
iscsi_get_port_speed_name extern char * iscsi_get_port_speed_name ( s#Scsi_Host * ) 
iscsi_get_port_state_name extern char * iscsi_get_port_state_name ( s#Scsi_Host * ) 
iscsi_register_transport extern s#scsi_transport_template * iscsi_register_transport ( s#iscsi_transport * ) 
iscsi_unregister_transport extern int iscsi_unregister_transport ( s#iscsi_transport * ) 

/* drivers/scsi/scsi_transport_sas.o */
s##device_private
s##sock
s##vfsmount
s##posix_acl
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_mq_ctx
s##kmem_cache
s##blkcg_gq
s##workqueue_struct
s##blk_flush_queue
s##blk_mq_tags
s##blk_mq_alloc_data
s##blk_mq_debugfs_attr
s##blk_queue_stats
s##rq_wb
s##cgroup_subsys_state
s##blk_stat_callback
s##blk_trace
s##throtl_data
s##hd_geometry
s##pr_ops
s##timer_rand_state
s##disk_events
s##badblocks
s##reclaim_state
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##swap_info_struct
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##mtd_info
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
sas_remove_children void sas_remove_children ( s#device * ) 
s##scsi_device_handler
s##proc_dir_entry
s##scsi_host_cmd_pool
sas_remove_host extern void sas_remove_host ( s#Scsi_Host * ) 
sas_get_address t#u64 sas_get_address ( s#scsi_device * ) 
sas_tlr_supported unsigned int sas_tlr_supported ( s#scsi_device * ) 
sas_disable_tlr void sas_disable_tlr ( s#scsi_device * ) 
sas_enable_tlr void sas_enable_tlr ( s#scsi_device * ) 
sas_is_tlr_enabled unsigned int sas_is_tlr_enabled ( s#scsi_device * ) 
sas_phy_alloc extern s#sas_phy * sas_phy_alloc ( s#device * , int ) 
sas_phy_add extern int sas_phy_add ( s#sas_phy * ) 
sas_phy_free extern void sas_phy_free ( s#sas_phy * ) 
sas_phy_delete extern void sas_phy_delete ( s#sas_phy * ) 
scsi_is_sas_phy extern int scsi_is_sas_phy ( const s#device * ) 
sas_port_alloc s#sas_port * sas_port_alloc ( s#device * , int ) 
sas_port_alloc_num s#sas_port * sas_port_alloc_num ( s#device * ) 
sas_port_add int sas_port_add ( s#sas_port * ) 
sas_port_free void sas_port_free ( s#sas_port * ) 
sas_port_delete void sas_port_delete ( s#sas_port * ) 
scsi_is_sas_port int scsi_is_sas_port ( const s#device * ) 
sas_port_get_phy s#sas_phy * sas_port_get_phy ( s#sas_port * ) 
sas_port_add_phy void sas_port_add_phy ( s#sas_port * , s#sas_phy * ) 
sas_port_delete_phy void sas_port_delete_phy ( s#sas_port * , s#sas_phy * ) 
sas_port_mark_backlink void sas_port_mark_backlink ( s#sas_port * ) 
sas_read_port_mode_page int sas_read_port_mode_page ( s#scsi_device * ) 
sas_end_device_alloc extern s#sas_rphy * sas_end_device_alloc ( s#sas_port * ) 
sas_expander_alloc extern s#sas_rphy * sas_expander_alloc ( s#sas_port * , e#sas_device_type ) 
sas_rphy_add extern int sas_rphy_add ( s#sas_rphy * ) 
sas_rphy_free void sas_rphy_free ( s#sas_rphy * ) 
sas_rphy_delete extern void sas_rphy_delete ( s#sas_rphy * ) 
sas_rphy_unlink extern void sas_rphy_unlink ( s#sas_rphy * ) 
sas_rphy_remove extern void sas_rphy_remove ( s#sas_rphy * ) 
scsi_is_sas_rphy extern int scsi_is_sas_rphy ( const s#device * ) 
s#sas_phy_linkrates struct sas_phy_linkrates { e#sas_linkrate maximum_linkrate ; e#sas_linkrate minimum_linkrate ; } 
s#sas_function_template struct sas_function_template { int ( * get_linkerrors ) ( s#sas_phy * ) ; int ( * get_enclosure_identifier ) ( s#sas_rphy * , t#u64 * ) ; int ( * get_bay_identifier ) ( s#sas_rphy * ) ; int ( * phy_reset ) ( s#sas_phy * , int ) ; int ( * phy_enable ) ( s#sas_phy * , int ) ; int ( * phy_setup ) ( s#sas_phy * ) ; void ( * phy_release ) ( s#sas_phy * ) ; int ( * set_phy_speed ) ( s#sas_phy * , s#sas_phy_linkrates * ) ; void ( * smp_handler ) ( s#bsg_job * , s#Scsi_Host * , s#sas_rphy * ) ; } 
sas_attach_transport extern s#scsi_transport_template * sas_attach_transport ( s#sas_function_template * ) 
sas_release_transport extern void sas_release_transport ( s#scsi_transport_template * ) 

/* drivers/scsi/scsi_transport_spi.o */
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##sock
s##pipe_inode_info
s##poll_table_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##workqueue_struct
s##bpf_prog_array
s##cgroup_taskset
s##kstatfs
s##eventfd_ctx
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_geometry
s##pr_ops
s##blk_mq_ctx
s##kmem_cache
s##blkcg_gq
s##blk_flush_queue
s##blk_mq_tags
s##blk_mq_alloc_data
s##blk_mq_debugfs_attr
s##blk_queue_stats
s##rq_wb
s##blk_stat_callback
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##badblocks
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##proc_dir_entry
s##scsi_host_cmd_pool
s##scsi_device_handler
spi_dv_device void spi_dv_device ( s#scsi_device * ) 
spi_schedule_dv_device void spi_schedule_dv_device ( s#scsi_device * ) 
spi_display_xfer_agreement void spi_display_xfer_agreement ( s#scsi_target * ) 
spi_populate_width_msg int spi_populate_width_msg ( unsigned char * , int ) 
spi_populate_sync_msg int spi_populate_sync_msg ( unsigned char * , int , int ) 
spi_populate_ppr_msg int spi_populate_ppr_msg ( unsigned char * , int , int , int , int ) 
spi_populate_tag_msg int spi_populate_tag_msg ( unsigned char * , s#scsi_cmnd * ) 
spi_print_msg int spi_print_msg ( const unsigned char * ) 
e#spi_signal_type enum spi_signal_type { SPI_SIGNAL_UNKNOWN = 1 , SPI_SIGNAL_SE , SPI_SIGNAL_LVD , SPI_SIGNAL_HVD , } 
s#spi_function_template struct spi_function_template { void ( * get_period ) ( s#scsi_target * ) ; void ( * set_period ) ( s#scsi_target * , int ) ; void ( * get_offset ) ( s#scsi_target * ) ; void ( * set_offset ) ( s#scsi_target * , int ) ; void ( * get_width ) ( s#scsi_target * ) ; void ( * set_width ) ( s#scsi_target * , int ) ; void ( * get_iu ) ( s#scsi_target * ) ; void ( * set_iu ) ( s#scsi_target * , int ) ; void ( * get_dt ) ( s#scsi_target * ) ; void ( * set_dt ) ( s#scsi_target * , int ) ; void ( * get_qas ) ( s#scsi_target * ) ; void ( * set_qas ) ( s#scsi_target * , int ) ; void ( * get_wr_flow ) ( s#scsi_target * ) ; void ( * set_wr_flow ) ( s#scsi_target * , int ) ; void ( * get_rd_strm ) ( s#scsi_target * ) ; void ( * set_rd_strm ) ( s#scsi_target * , int ) ; void ( * get_rti ) ( s#scsi_target * ) ; void ( * set_rti ) ( s#scsi_target * , int ) ; void ( * get_pcomp_en ) ( s#scsi_target * ) ; void ( * set_pcomp_en ) ( s#scsi_target * , int ) ; void ( * get_hold_mcs ) ( s#scsi_target * ) ; void ( * set_hold_mcs ) ( s#scsi_target * , int ) ; void ( * get_signalling ) ( s#Scsi_Host * ) ; void ( * set_signalling ) ( s#Scsi_Host * , e#spi_signal_type ) ; int ( * deny_binding ) ( s#scsi_target * ) ; unsigned long show_period : 1 ; unsigned long show_offset : 1 ; unsigned long show_width : 1 ; unsigned long show_iu : 1 ; unsigned long show_dt : 1 ; unsigned long show_qas : 1 ; unsigned long show_wr_flow : 1 ; unsigned long show_rd_strm : 1 ; unsigned long show_rti : 1 ; unsigned long show_pcomp_en : 1 ; unsigned long show_hold_mcs : 1 ; } 
spi_attach_transport s#scsi_transport_template * spi_attach_transport ( s#spi_function_template * ) 
spi_release_transport void spi_release_transport ( s#scsi_transport_template * ) 

/* drivers/scsi/scsi_transport_srp.o */
srp_tmo_valid extern int srp_tmo_valid ( int , int , long ) 
srp_parse_tmo int srp_parse_tmo ( int * , const char * ) 
s##device_private
s##sock
s##vfsmount
s##posix_acl
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_mq_ctx
s##kmem_cache
s##blkcg_gq
s##workqueue_struct
s##blk_flush_queue
s##blk_mq_tags
s##blk_mq_alloc_data
s##blk_mq_debugfs_attr
s##blk_queue_stats
s##rq_wb
s##cgroup_subsys_state
s##blk_stat_callback
s##blk_trace
s##bsg_job
s##throtl_data
s##hd_geometry
s##pr_ops
s##timer_rand_state
s##disk_events
s##badblocks
s##reclaim_state
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##swap_info_struct
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##mtd_info
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
e#srp_rport_state enum srp_rport_state { SRP_RPORT_RUNNING , SRP_RPORT_BLOCKED , SRP_RPORT_FAIL_FAST , SRP_RPORT_LOST , } 
s#srp_rport struct srp_rport { s#device dev ; t#u8 port_id [ 16 ] ; t#u8 roles ; void * lld_data ; s#mutex mutex ; e#srp_rport_state state ; int reconnect_delay ; int failed_reconnects ; s#delayed_work reconnect_work ; int fast_io_fail_tmo ; int dev_loss_tmo ; s#delayed_work fast_io_fail_work ; s#delayed_work dev_loss_work ; } 
srp_start_tl_fail_timers extern void srp_start_tl_fail_timers ( s#srp_rport * ) 
srp_reconnect_rport extern int srp_reconnect_rport ( s#srp_rport * ) 
s##proc_dir_entry
s##scsi_host_cmd_pool
s##scsi_device_handler
srp_timed_out e#blk_eh_timer_return srp_timed_out ( s#scsi_cmnd * ) 
srp_rport_get extern void srp_rport_get ( s#srp_rport * ) 
srp_rport_put extern void srp_rport_put ( s#srp_rport * ) 
s#srp_rport_identifiers struct srp_rport_identifiers { t#u8 port_id [ 16 ] ; t#u8 roles ; } 
srp_rport_add extern s#srp_rport * srp_rport_add ( s#Scsi_Host * , s#srp_rport_identifiers * ) 
srp_rport_del extern void srp_rport_del ( s#srp_rport * ) 
srp_remove_host extern void srp_remove_host ( s#Scsi_Host * ) 
srp_stop_rport_timers extern void srp_stop_rport_timers ( s#srp_rport * ) 
s#srp_function_template struct srp_function_template { t#bool has_rport_state ; t#bool reset_timer_if_blocked ; int * reconnect_delay ; int * fast_io_fail_tmo ; int * dev_loss_tmo ; int ( * reconnect ) ( s#srp_rport * ) ; void ( * terminate_rport_io ) ( s#srp_rport * ) ; void ( * rport_delete ) ( s#srp_rport * ) ; } 
srp_attach_transport extern s#scsi_transport_template * srp_attach_transport ( s#srp_function_template * ) 
srp_release_transport extern void srp_release_transport ( s#scsi_transport_template * ) 

/* drivers/scsi/scsicam.o */
s##posix_acl
s##vfsmount
s##sock
s##seq_file
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##hd_geometry
s##pr_ops
s##blk_mq_ctx
s##kmem_cache
s##blkcg_gq
s##blk_mq_hw_ctx
s##blk_mq_alloc_data
s##blk_mq_debugfs_attr
s##blk_queue_stats
s##rq_wb
s##blk_mq_ops
s##workqueue_struct
s##cgroup_subsys_state
s##blk_stat_callback
s##blk_trace
s##blk_flush_queue
s##bsg_job
s##throtl_data
s##blk_mq_tag_set
s##timer_rand_state
s##disk_events
s##badblocks
s##reclaim_state
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##writeback_control
s##swap_info_struct
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
scsi_bios_ptable extern unsigned char * scsi_bios_ptable ( s#block_device * ) 
scsicam_bios_param extern int scsicam_bios_param ( s#block_device * , t#sector_t , int * ) 
scsi_partsize extern int scsi_partsize ( unsigned char * , unsigned long , unsigned int * , unsigned int * , unsigned int * ) 

/* drivers/spmi/spmi.o */
s##device_private
s##sock
s##vfsmount
s##posix_acl
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_array
s##tracer
s##trace_buffer
s##ring_buffer_iter
s##event_filter
s##bpf_prog_array
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##kmem_cache
s##fs_pin
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##cgroup_taskset
s##writeback_control
s##bio_vec
s##pipe_inode_info
s##swap_info_struct
s##mem_cgroup
s##mempolicy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##robust_list_head
s##futex_pi_state
s##numa_group
s##task_delay_info
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##ring_buffer
s##bpf_prog
s##ftrace_hash
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##iommu_group
s##iommu_fwspec
s#spmi_controller struct spmi_controller { s#device dev ; unsigned int nr ; int ( * cmd ) ( s#spmi_controller * , t#u8 , t#u8 ) ; int ( * read_cmd ) ( s#spmi_controller * , t#u8 , t#u8 , t#u16 , t#u8 * , t#size_t ) ; int ( * write_cmd ) ( s#spmi_controller * , t#u8 , t#u8 , t#u16 , const t#u8 * , t#size_t ) ; } 
s#spmi_device struct spmi_device { s#device dev ; s#spmi_controller * ctrl ; t#u8 usid ; } 
spmi_device_add int spmi_device_add ( s#spmi_device * ) 
spmi_device_remove void spmi_device_remove ( s#spmi_device * ) 
spmi_register_read int spmi_register_read ( s#spmi_device * , t#u8 , t#u8 * ) 
spmi_ext_register_read int spmi_ext_register_read ( s#spmi_device * , t#u8 , t#u8 * , t#size_t ) 
spmi_ext_register_readl int spmi_ext_register_readl ( s#spmi_device * , t#u16 , t#u8 * , t#size_t ) 
spmi_register_write int spmi_register_write ( s#spmi_device * , t#u8 , t#u8 ) 
spmi_register_zero_write int spmi_register_zero_write ( s#spmi_device * , t#u8 ) 
spmi_ext_register_write int spmi_ext_register_write ( s#spmi_device * , t#u8 , const t#u8 * , t#size_t ) 
spmi_ext_register_writel int spmi_ext_register_writel ( s#spmi_device * , t#u16 , const t#u8 * , t#size_t ) 
spmi_command_reset int spmi_command_reset ( s#spmi_device * ) 
spmi_command_sleep int spmi_command_sleep ( s#spmi_device * ) 
spmi_command_wakeup int spmi_command_wakeup ( s#spmi_device * ) 
spmi_command_shutdown int spmi_command_shutdown ( s#spmi_device * ) 
spmi_device_alloc s#spmi_device * spmi_device_alloc ( s#spmi_controller * ) 
spmi_controller_alloc s#spmi_controller * spmi_controller_alloc ( s#device * , t#size_t ) 
spmi_controller_add int spmi_controller_add ( s#spmi_controller * ) 
spmi_controller_remove void spmi_controller_remove ( s#spmi_controller * ) 
s#spmi_driver struct spmi_driver { s#device_driver driver ; int ( * probe ) ( s#spmi_device * ) ; void ( * remove ) ( s#spmi_device * ) ; } 
__spmi_driver_register int __spmi_driver_register ( s#spmi_driver * , s#module * ) 

/* drivers/target/iscsi/iscsi_target.o */
e#iscsi_timer_flags_table enum iscsi_timer_flags_table { ISCSI_TF_RUNNING = 0x01 , ISCSI_TF_STOP = 0x02 , ISCSI_TF_EXPIRED = 0x04 , } 
s##vfsmount
s##posix_acl
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##mmu_notifier_mm
s##xol_area
s##pid_namespace
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##sec_path
s##workqueue_struct
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##kmem_cache
s##xfrm_state
s##lwtunnel_state
s##rtable
s##rt6_info
s##dn_route
s##prefix_info
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##phy_device
s##sfp_bus
s##prot_inuse
s##ipv4_devconf
s##fib_table
s##inet_peer_base
s##xt_table
s##inet_hashinfo
s##rt6_statistics
s##fib6_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_mq_ctx
s##blkcg_gq
s##blk_flush_queue
s##blk_mq_tags
s##blk_mq_alloc_data
s##blk_mq_debugfs_attr
s##blk_queue_stats
s##rq_wb
s##blk_stat_callback
s##blk_trace
s##bsg_job
s##throtl_data
s##hd_geometry
s##pr_ops
s##timer_rand_state
s##disk_events
s##badblocks
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##swap_info_struct
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##mtd_info
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
e#np_thread_state_table enum np_thread_state_table { ISCSI_NP_THREAD_ACTIVE = 1 , ISCSI_NP_THREAD_INACTIVE = 2 , ISCSI_NP_THREAD_RESET = 3 , ISCSI_NP_THREAD_SHUTDOWN = 4 , ISCSI_NP_THREAD_EXIT = 5 , } 
e#np_flags_table enum np_flags_table { NPF_IP_NETWORK = 0x00 , } 
e#cmd_i_state_table enum cmd_i_state_table { ISTATE_NO_STATE = 0 , ISTATE_NEW_CMD = 1 , ISTATE_DEFERRED_CMD = 2 , ISTATE_UNSOLICITED_DATA = 3 , ISTATE_RECEIVE_DATAOUT = 4 , ISTATE_RECEIVE_DATAOUT_RECOVERY = 5 , ISTATE_RECEIVED_LAST_DATAOUT = 6 , ISTATE_WITHIN_DATAOUT_RECOVERY = 7 , ISTATE_IN_CONNECTION_RECOVERY = 8 , ISTATE_RECEIVED_TASKMGT = 9 , ISTATE_SEND_ASYNCMSG = 10 , ISTATE_SENT_ASYNCMSG = 11 , ISTATE_SEND_DATAIN = 12 , ISTATE_SEND_LAST_DATAIN = 13 , ISTATE_SENT_LAST_DATAIN = 14 , ISTATE_SEND_LOGOUTRSP = 15 , ISTATE_SENT_LOGOUTRSP = 16 , ISTATE_SEND_NOPIN = 17 , ISTATE_SENT_NOPIN = 18 , ISTATE_SEND_REJECT = 19 , ISTATE_SENT_REJECT = 20 , ISTATE_SEND_R2T = 21 , ISTATE_SENT_R2T = 22 , ISTATE_SEND_R2T_RECOVERY = 23 , ISTATE_SENT_R2T_RECOVERY = 24 , ISTATE_SEND_LAST_R2T = 25 , ISTATE_SENT_LAST_R2T = 26 , ISTATE_SEND_LAST_R2T_RECOVERY = 27 , ISTATE_SENT_LAST_R2T_RECOVERY = 28 , ISTATE_SEND_STATUS = 29 , ISTATE_SEND_STATUS_BROKEN_PC = 30 , ISTATE_SENT_STATUS = 31 , ISTATE_SEND_STATUS_RECOVERY = 32 , ISTATE_SENT_STATUS_RECOVERY = 33 , ISTATE_SEND_TASKMGTRSP = 34 , ISTATE_SENT_TASKMGTRSP = 35 , ISTATE_SEND_TEXTRSP = 36 , ISTATE_SENT_TEXTRSP = 37 , ISTATE_SEND_NOPIN_WANT_RESPONSE = 38 , ISTATE_SENT_NOPIN_WANT_RESPONSE = 39 , ISTATE_SEND_NOPIN_NO_RESPONSE = 40 , ISTATE_REMOVE = 41 , ISTATE_FREE = 42 , } 
e#cmd_flags_table enum cmd_flags_table { ICF_GOT_LAST_DATAOUT = 0x00000001 , ICF_GOT_DATACK_SNACK = 0x00000002 , ICF_NON_IMMEDIATE_UNSOLICITED_DATA = 0x00000004 , ICF_SENT_LAST_R2T = 0x00000008 , ICF_WITHIN_COMMAND_RECOVERY = 0x00000010 , ICF_CONTIG_MEMORY = 0x00000020 , ICF_ATTACHED_TO_RQUEUE = 0x00000040 , ICF_OOO_CMDSN = 0x00000080 , ICF_SENDTARGETS_ALL = 0x00000100 , ICF_SENDTARGETS_SINGLE = 0x00000200 , } 
s#iscsi_pdu struct iscsi_pdu { int status ; int type ; t#u8 flags ; t#u32 data_sn ; t#u32 length ; t#u32 offset ; t#u32 pdu_send_order ; t#u32 seq_no ; } 
s#iscsi_seq struct iscsi_seq { int sent ; int status ; int type ; t#u32 data_sn ; t#u32 first_datasn ; t#u32 last_datasn ; t#u32 next_burst_len ; t#u32 pdu_start ; t#u32 pdu_count ; t#u32 offset ; t#u32 orig_offset ; t#u32 pdu_send_order ; t#u32 r2t_sn ; t#u32 seq_send_order ; t#u32 seq_no ; t#u32 xfer_len ; } 
s#iscsi_sess_ops struct iscsi_sess_ops { char InitiatorName [ 224 ] ; char InitiatorAlias [ 256 ] ; char TargetName [ 224 ] ; char TargetAlias [ 256 ] ; char TargetAddress [ 256 ] ; t#u16 TargetPortalGroupTag ; t#u16 MaxConnections ; t#u8 InitialR2T ; t#u8 ImmediateData ; t#u32 MaxBurstLength ; t#u32 FirstBurstLength ; t#u16 DefaultTime2Wait ; t#u16 DefaultTime2Retain ; t#u16 MaxOutstandingR2T ; t#u8 DataPDUInOrder ; t#u8 DataSequenceInOrder ; t#u8 ErrorRecoveryLevel ; t#u8 SessionType ; t#u8 RDMAExtensions ; } 
e#target_prot_op enum target_prot_op { TARGET_PROT_NORMAL = 0 , TARGET_PROT_DIN_INSERT = ( 1 << 0 ) , TARGET_PROT_DOUT_INSERT = ( 1 << 1 ) , TARGET_PROT_DIN_STRIP = ( 1 << 2 ) , TARGET_PROT_DOUT_STRIP = ( 1 << 3 ) , TARGET_PROT_DIN_PASS = ( 1 << 4 ) , TARGET_PROT_DOUT_PASS = ( 1 << 5 ) , } 
e#target_prot_type enum target_prot_type { TARGET_DIF_TYPE0_PROT , TARGET_DIF_TYPE1_PROT , TARGET_DIF_TYPE2_PROT , TARGET_DIF_TYPE3_PROT , } 
s#t10_alua_lu_gp struct t10_alua_lu_gp { t#u16 lu_gp_id ; int lu_gp_valid_id ; t#u32 lu_gp_members ; t#atomic_t lu_gp_ref_cnt ; t#spinlock_t lu_gp_lock ; s#config_group lu_gp_group ; s#list_head lu_gp_node ; s#list_head lu_gp_mem_list ; } 
s#t10_alua_lu_gp_member struct t10_alua_lu_gp_member { t#bool lu_gp_assoc ; t#atomic_t lu_gp_mem_ref_cnt ; t#spinlock_t lu_gp_mem_lock ; s#t10_alua_lu_gp * lu_gp ; s#se_device * lu_gp_mem_dev ; s#list_head lu_gp_mem_list ; } 
s#se_ml_stat_grps struct se_ml_stat_grps { s#config_group stat_group ; s#config_group scsi_auth_intr_group ; s#config_group scsi_att_intr_port_group ; } 
s#se_lun_acl struct se_lun_acl { t#u64 mapped_lun ; s#se_node_acl * se_lun_nacl ; s#se_lun * se_lun ; s#config_group se_lun_group ; s#se_ml_stat_grps ml_stat_grps ; } 
s#se_dev_entry struct se_dev_entry { t#u64 mapped_lun ; t#u64 pr_res_key ; t#u64 creation_time ; t#bool lun_access_ro ; t#u32 attach_count ; t#atomic_long_t total_cmds ; t#atomic_long_t read_bytes ; t#atomic_long_t write_bytes ; t#atomic_t ua_count ; s#kref pr_kref ; s#completion pr_comp ; s#se_lun_acl * se_lun_acl ; t#spinlock_t ua_lock ; s#se_lun * se_lun ; unsigned long deve_flags ; s#list_head alua_port_list ; s#list_head lun_link ; s#list_head ua_list ; s#hlist_node link ; s#callback_head callback_head ; } 
s#t10_pr_registration struct t10_pr_registration { char pr_reg_isid [ 16 ] ; unsigned char pr_iport [ 256 ] ; unsigned char pr_tport [ 256 ] ; t#u16 pr_aptpl_rpti ; t#u16 pr_reg_tpgt ; int pr_reg_all_tg_pt ; int pr_reg_aptpl ; int pr_res_holder ; int pr_res_type ; int pr_res_scope ; t#bool isid_present_at_reg ; t#u64 pr_res_mapped_lun ; t#u64 pr_aptpl_target_lun ; t#u16 tg_pt_sep_rtpi ; t#u32 pr_res_generation ; t#u64 pr_reg_bin_isid ; t#u64 pr_res_key ; t#atomic_t pr_res_holders ; s#se_node_acl * pr_reg_nacl ; s#se_dev_entry * pr_reg_deve ; s#list_head pr_reg_list ; s#list_head pr_reg_abort_list ; s#list_head pr_reg_aptpl_list ; s#list_head pr_reg_atp_list ; s#list_head pr_reg_atp_mem_list ; } 
s##target_backend
s#se_hba struct se_hba { t#u16 hba_tpgt ; t#u32 hba_id ; t#u32 hba_flags ; t#u32 dev_count ; t#u32 hba_index ; void * hba_ptr ; s#list_head hba_node ; t#spinlock_t device_lock ; s#config_group hba_group ; s#mutex hba_access_mutex ; s#target_backend * backend ; } 
s#t10_wwn struct t10_wwn { char vendor [ 8 ] ; char model [ 16 ] ; char revision [ 4 ] ; char unit_serial [ 254 ] ; t#spinlock_t t10_vpd_lock ; s#se_device * t10_dev ; s#config_group t10_wwn_group ; s#list_head t10_vpd_list ; } 
s#t10_alua_tg_pt_gp struct t10_alua_tg_pt_gp { t#u16 tg_pt_gp_id ; int tg_pt_gp_valid_id ; int tg_pt_gp_alua_supported_states ; int tg_pt_gp_alua_access_status ; int tg_pt_gp_alua_access_type ; int tg_pt_gp_nonop_delay_msecs ; int tg_pt_gp_trans_delay_msecs ; int tg_pt_gp_implicit_trans_secs ; int tg_pt_gp_pref ; int tg_pt_gp_write_metadata ; t#u32 tg_pt_gp_members ; int tg_pt_gp_alua_access_state ; t#atomic_t tg_pt_gp_ref_cnt ; t#spinlock_t tg_pt_gp_lock ; s#mutex tg_pt_gp_transition_mutex ; s#se_device * tg_pt_gp_dev ; s#config_group tg_pt_gp_group ; s#list_head tg_pt_gp_list ; s#list_head tg_pt_gp_lun_list ; s#se_lun * tg_pt_gp_alua_lun ; s#se_node_acl * tg_pt_gp_alua_nacl ; } 
s#t10_alua struct t10_alua { t#u16 alua_tg_pt_gps_counter ; t#u32 alua_tg_pt_gps_count ; t#spinlock_t lba_map_lock ; t#u32 lba_map_segment_size ; t#u32 lba_map_segment_multiplier ; s#list_head lba_map_list ; t#spinlock_t tg_pt_gps_lock ; s#se_device * t10_dev ; s#t10_alua_tg_pt_gp * default_tg_pt_gp ; s#config_group alua_tg_pt_gps_group ; s#list_head tg_pt_gps_list ; } 
s#t10_reservation struct t10_reservation { int pr_all_tg_pt ; int pr_aptpl_active ; t#u32 pr_generation ; t#spinlock_t registration_lock ; t#spinlock_t aptpl_reg_lock ; s#se_node_acl * pr_res_holder ; s#list_head registration_list ; s#list_head aptpl_reg_list ; } 
s#se_dev_attrib struct se_dev_attrib { int emulate_model_alias ; int emulate_dpo ; int emulate_fua_write ; int emulate_fua_read ; int emulate_write_cache ; int emulate_ua_intlck_ctrl ; int emulate_tas ; int emulate_tpu ; int emulate_tpws ; int emulate_caw ; int emulate_3pc ; int emulate_pr ; e#target_prot_type pi_prot_type ; e#target_prot_type hw_pi_prot_type ; int pi_prot_verify ; int enforce_pr_isids ; int force_pr_aptpl ; int is_nonrot ; int emulate_rest_reord ; int unmap_zeroes_data ; t#u32 hw_block_size ; t#u32 block_size ; t#u32 hw_max_sectors ; t#u32 optimal_sectors ; t#u32 hw_queue_depth ; t#u32 queue_depth ; t#u32 max_unmap_lba_count ; t#u32 max_unmap_block_desc_count ; t#u32 unmap_granularity ; t#u32 unmap_granularity_alignment ; t#u32 max_write_same_len ; t#u32 max_bytes_per_io ; s#se_device * da_dev ; s#config_group da_group ; } 
s#se_dev_stat_grps struct se_dev_stat_grps { s#config_group stat_group ; s#config_group scsi_dev_group ; s#config_group scsi_tgt_dev_group ; s#config_group scsi_lu_group ; } 
s##target_backend_ops
s#se_device struct se_device { t#u16 dev_rpti_counter ; t#u32 dev_cur_ordered_id ; t#u32 dev_flags ; t#u32 queue_depth ; t#u64 dev_res_bin_isid ; t#u32 dev_index ; t#u64 creation_time ; t#atomic_long_t num_resets ; t#atomic_long_t aborts_complete ; t#atomic_long_t aborts_no_task ; t#atomic_long_t num_cmds ; t#atomic_long_t read_bytes ; t#atomic_long_t write_bytes ; t#atomic_t simple_cmds ; t#atomic_t dev_ordered_sync ; t#atomic_t dev_qf_count ; t#u32 export_count ; t#spinlock_t delayed_cmd_lock ; t#spinlock_t execute_task_lock ; t#spinlock_t dev_reservation_lock ; unsigned int dev_reservation_flags ; t#spinlock_t se_port_lock ; t#spinlock_t se_tmr_lock ; t#spinlock_t qf_cmd_lock ; s#semaphore caw_sem ; s#se_node_acl * dev_reserved_node_acl ; s#t10_alua_lu_gp_member * dev_alua_lu_gp_mem ; s#t10_pr_registration * dev_pr_res_holder ; s#list_head dev_sep_list ; s#list_head dev_tmr_list ; s#workqueue_struct * tmr_wq ; s#work_struct qf_work_queue ; s#list_head delayed_cmd_list ; s#list_head state_list ; s#list_head qf_cmd_list ; s#se_hba * se_hba ; s#t10_wwn t10_wwn ; s#t10_alua t10_alua ; s#t10_reservation t10_pr ; s#se_dev_attrib dev_attrib ; s#config_group dev_action_group ; s#config_group dev_group ; s#config_group dev_pr_group ; s#se_dev_stat_grps dev_stat_grps ; unsigned char dev_alias [ 512 ] ; unsigned char udev_path [ 512 ] ; const s#target_backend_ops * transport ; s#se_lun xcopy_lun ; int prot_length ; t#u32 hba_index ; s#callback_head callback_head ; } 
s#scsi_port_stats struct scsi_port_stats { t#atomic_long_t cmd_pdus ; t#atomic_long_t tx_data_octets ; t#atomic_long_t rx_data_octets ; } 
s#se_port_stat_grps struct se_port_stat_grps { s#config_group stat_group ; s#config_group scsi_port_group ; s#config_group scsi_tgt_port_group ; s#config_group scsi_transport_group ; } 
s#se_lun struct se_lun { t#u64 unpacked_lun ; t#bool lun_shutdown ; t#bool lun_access_ro ; t#u32 lun_index ; t#u16 lun_rtpi ; t#atomic_t lun_acl_count ; s#se_device * lun_se_dev ; s#list_head lun_deve_list ; t#spinlock_t lun_deve_lock ; int lun_tg_pt_secondary_stat ; int lun_tg_pt_secondary_write_md ; t#atomic_t lun_tg_pt_secondary_offline ; s#mutex lun_tg_pt_md_mutex ; s#list_head lun_tg_pt_gp_link ; s#t10_alua_tg_pt_gp * lun_tg_pt_gp ; t#spinlock_t lun_tg_pt_gp_lock ; s#se_portal_group * lun_tpg ; s#scsi_port_stats lun_stats ; s#config_group lun_group ; s#se_port_stat_grps port_stat_grps ; s#completion lun_ref_comp ; s#completion lun_shutdown_comp ; s#percpu_ref lun_ref ; s#list_head lun_dev_link ; s#hlist_node link ; s#callback_head callback_head ; } 
t#sense_reason_t typedef unsigned sense_reason_t 
e#transport_state_table enum transport_state_table { TRANSPORT_NO_STATE = 0 , TRANSPORT_NEW_CMD = 1 , TRANSPORT_WRITE_PENDING = 3 , TRANSPORT_PROCESSING = 5 , TRANSPORT_COMPLETE = 6 , TRANSPORT_ISTATE_PROCESSING = 11 , TRANSPORT_COMPLETE_QF_WP = 18 , TRANSPORT_COMPLETE_QF_OK = 19 , TRANSPORT_COMPLETE_QF_ERR = 20 , } 
s#se_tmr_req struct se_tmr_req { t#u8 function ; t#u8 response ; int call_transport ; t#u64 ref_task_tag ; void * fabric_tmr_ptr ; s#se_cmd * task_cmd ; s#se_device * tmr_dev ; s#list_head tmr_list ; } 
s#se_cmd struct se_cmd { t#sense_reason_t sense_reason ; t#u32 sense_info ; t#u8 scsi_status ; t#u8 scsi_asc ; t#u8 scsi_ascq ; t#u16 scsi_sense_length ; unsigned cmd_wait_set : 1 ; unsigned unknown_data_length : 1 ; t#bool state_active : 1 ; t#u64 tag ; int alua_nonop_delay ; e#dma_data_direction data_direction ; int sam_task_attr ; unsigned int map_tag ; e#transport_state_table t_state ; t#u32 se_cmd_flags ; t#u32 data_length ; t#u32 residual_count ; t#u64 orig_fe_lun ; t#u64 pr_res_key ; void * sense_buffer ; s#list_head se_delayed_node ; s#list_head se_qf_node ; s#se_device * se_dev ; s#se_lun * se_lun ; s#se_session * se_sess ; s#se_tmr_req * se_tmr_req ; s#list_head se_cmd_list ; s#completion cmd_wait_comp ; const s#target_core_fabric_ops * se_tfo ; t#sense_reason_t ( * execute_cmd ) ( s#se_cmd * ) ; t#sense_reason_t ( * transport_complete_callback ) ( s#se_cmd * , t#bool , int * ) ; void * protocol_data ; unsigned char * t_task_cdb ; unsigned char __t_task_cdb [ 32 ] ; unsigned long long t_task_lba ; unsigned int t_task_nolb ; unsigned int transport_state ; t#spinlock_t t_state_lock ; s#kref cmd_kref ; s#completion t_transport_stop_comp ; s#work_struct work ; s#scatterlist * t_data_sg ; s#scatterlist * t_data_sg_orig ; unsigned int t_data_nents ; unsigned int t_data_nents_orig ; void * t_data_vmap ; s#scatterlist * t_bidi_data_sg ; unsigned int t_bidi_data_nents ; int lun_ref_active ; s#list_head state_list ; void * priv ; e#target_prot_op prot_op ; e#target_prot_type prot_type ; t#u8 prot_checks ; t#bool prot_pto ; t#u32 prot_length ; t#u32 reftag_seed ; s#scatterlist * t_prot_sg ; unsigned int t_prot_nents ; t#sense_reason_t pi_err ; t#sector_t bad_sector ; int cpuid ; } 
s##target_fabric_configfs
s#se_wwn struct se_wwn { s#target_fabric_configfs * wwn_tf ; void * priv ; s#config_group wwn_group ; s#config_group fabric_stat_group ; } 
s#se_tpg_np struct se_tpg_np { s#se_portal_group * tpg_np_parent ; s#config_group tpg_np_group ; } 
s#target_core_fabric_ops struct target_core_fabric_ops { s#module * module ; const char * name ; t#size_t node_acl_size ; t#u32 max_data_sg_nents ; char * ( * get_fabric_name ) ( void ) ; char * ( * tpg_get_wwn ) ( s#se_portal_group * ) ; t#u16 ( * tpg_get_tag ) ( s#se_portal_group * ) ; t#u32 ( * tpg_get_default_depth ) ( s#se_portal_group * ) ; int ( * tpg_check_demo_mode ) ( s#se_portal_group * ) ; int ( * tpg_check_demo_mode_cache ) ( s#se_portal_group * ) ; int ( * tpg_check_demo_mode_write_protect ) ( s#se_portal_group * ) ; int ( * tpg_check_prod_mode_write_protect ) ( s#se_portal_group * ) ; int ( * tpg_check_demo_mode_login_only ) ( s#se_portal_group * ) ; int ( * tpg_check_prot_fabric_only ) ( s#se_portal_group * ) ; t#u32 ( * tpg_get_inst_index ) ( s#se_portal_group * ) ; int ( * check_stop_free ) ( s#se_cmd * ) ; void ( * release_cmd ) ( s#se_cmd * ) ; void ( * close_session ) ( s#se_session * ) ; t#u32 ( * sess_get_index ) ( s#se_session * ) ; t#u32 ( * sess_get_initiator_sid ) ( s#se_session * , unsigned char * , t#u32 ) ; int ( * write_pending ) ( s#se_cmd * ) ; int ( * write_pending_status ) ( s#se_cmd * ) ; void ( * set_default_node_attributes ) ( s#se_node_acl * ) ; int ( * get_cmd_state ) ( s#se_cmd * ) ; int ( * queue_data_in ) ( s#se_cmd * ) ; int ( * queue_status ) ( s#se_cmd * ) ; void ( * queue_tm_rsp ) ( s#se_cmd * ) ; void ( * aborted_task ) ( s#se_cmd * ) ; s#se_wwn * ( * fabric_make_wwn ) ( s#target_fabric_configfs * , s#config_group * , const char * ) ; void ( * fabric_drop_wwn ) ( s#se_wwn * ) ; void ( * add_wwn_groups ) ( s#se_wwn * ) ; s#se_portal_group * ( * fabric_make_tpg ) ( s#se_wwn * , s#config_group * , const char * ) ; void ( * fabric_drop_tpg ) ( s#se_portal_group * ) ; int ( * fabric_post_link ) ( s#se_portal_group * , s#se_lun * ) ; void ( * fabric_pre_unlink ) ( s#se_portal_group * , s#se_lun * ) ; s#se_tpg_np * ( * fabric_make_np ) ( s#se_portal_group * , s#config_group * , const char * ) ; void ( * fabric_drop_np ) ( s#se_tpg_np * ) ; int ( * fabric_init_nodeacl ) ( s#se_node_acl * , const char * ) ; s#configfs_attribute * * tfc_discovery_attrs ; s#configfs_attribute * * tfc_wwn_attrs ; s#configfs_attribute * * tfc_tpg_base_attrs ; s#configfs_attribute * * tfc_tpg_np_base_attrs ; s#configfs_attribute * * tfc_tpg_attrib_attrs ; s#configfs_attribute * * tfc_tpg_auth_attrs ; s#configfs_attribute * * tfc_tpg_param_attrs ; s#configfs_attribute * * tfc_tpg_nacl_base_attrs ; s#configfs_attribute * * tfc_tpg_nacl_attrib_attrs ; s#configfs_attribute * * tfc_tpg_nacl_auth_attrs ; s#configfs_attribute * * tfc_tpg_nacl_param_attrs ; } 
s#se_portal_group struct se_portal_group { int proto_id ; t#atomic_t tpg_pr_ref_count ; s#mutex acl_node_mutex ; t#spinlock_t session_lock ; s#mutex tpg_lun_mutex ; s#list_head se_tpg_node ; s#list_head acl_node_list ; s#hlist_head tpg_lun_hlist ; s#se_lun * tpg_virt_lun0 ; s#list_head tpg_sess_list ; const s#target_core_fabric_ops * se_tpg_tfo ; s#se_wwn * se_tpg_wwn ; s#config_group tpg_group ; s#config_group tpg_lun_group ; s#config_group tpg_np_group ; s#config_group tpg_acl_group ; s#config_group tpg_attrib_group ; s#config_group tpg_auth_group ; s#config_group tpg_param_group ; } 
s#se_node_acl struct se_node_acl { char initiatorname [ 224 ] ; t#bool dynamic_node_acl ; t#bool dynamic_stop ; t#u32 queue_depth ; t#u32 acl_index ; e#target_prot_type saved_prot_type ; char acl_tag [ 64 ] ; t#atomic_t acl_pr_ref_count ; s#hlist_head lun_entry_hlist ; s#se_session * nacl_sess ; s#se_portal_group * se_tpg ; s#mutex lun_entry_mutex ; t#spinlock_t nacl_sess_lock ; s#config_group acl_group ; s#config_group acl_attrib_group ; s#config_group acl_auth_group ; s#config_group acl_param_group ; s#config_group acl_fabric_stat_group ; s#list_head acl_list ; s#list_head acl_sess_list ; s#completion acl_free_comp ; s#kref acl_kref ; } 
s##percpu_ida_cpu
s#percpu_ida struct percpu_ida { unsigned nr_tags ; unsigned percpu_max_size ; unsigned percpu_batch_size ; s#percpu_ida_cpu * tag_cpu ; t#cpumask_t cpus_have_tags ; struct { t#spinlock_t lock ; unsigned cpu_last_stolen ; t#wait_queue_head_t wait ; unsigned nr_free ; unsigned * freelist ; } __attribute__ ( ( __aligned__ ( 256 ) ) ) ; } 
s#se_session struct se_session { unsigned sess_tearing_down : 1 ; t#u64 sess_bin_isid ; e#target_prot_op sup_prot_ops ; e#target_prot_type sess_prot_type ; s#se_node_acl * se_node_acl ; s#se_portal_group * se_tpg ; void * fabric_sess_ptr ; s#list_head sess_list ; s#list_head sess_acl_list ; s#list_head sess_cmd_list ; s#list_head sess_wait_list ; t#spinlock_t sess_cmd_lock ; void * sess_cmd_map ; s#percpu_ida sess_tag_pool ; } 
e#tpg_state_table enum tpg_state_table { TPG_STATE_FREE = 0 , TPG_STATE_ACTIVE = 1 , TPG_STATE_INACTIVE = 2 , TPG_STATE_COLD_RESET = 3 , } 
s#iscsi_tpg_attrib struct iscsi_tpg_attrib { t#u32 authentication ; t#u32 login_timeout ; t#u32 netif_timeout ; t#u32 generate_node_acls ; t#u32 cache_dynamic_acls ; t#u32 default_cmdsn_depth ; t#u32 demo_mode_write_protect ; t#u32 prod_mode_write_protect ; t#u32 demo_mode_discovery ; t#u32 default_erl ; t#u8 t10_pi ; t#u32 fabric_prot_type ; t#u32 tpg_enabled_sendtargets ; t#u32 login_keys_workaround ; s#iscsi_portal_group * tpg ; } 
e#naf_flags_table enum naf_flags_table { NAF_USERID_SET = 0x01 , NAF_PASSWORD_SET = 0x02 , NAF_USERID_IN_SET = 0x04 , NAF_PASSWORD_IN_SET = 0x08 , } 
s#iscsi_node_auth struct iscsi_node_auth { e#naf_flags_table naf_flags ; int authenticate_target ; int enforce_discovery_auth ; char userid [ 256 ] ; char password [ 256 ] ; char userid_mutual [ 256 ] ; char password_mutual [ 256 ] ; } 
s#iscsi_param_list struct iscsi_param_list { t#bool iser ; s#list_head param_list ; s#list_head extra_response_list ; } 
e#tiqn_state_table enum tiqn_state_table { TIQN_STATE_ACTIVE = 1 , TIQN_STATE_SHUTDOWN = 2 , } 
s#iscsi_wwn_stat_grps struct iscsi_wwn_stat_grps { s#config_group iscsi_stat_group ; s#config_group iscsi_instance_group ; s#config_group iscsi_sess_err_group ; s#config_group iscsi_tgt_attr_group ; s#config_group iscsi_login_stats_group ; s#config_group iscsi_logout_stats_group ; } 
s#iscsi_sess_err_stats struct iscsi_sess_err_stats { t#spinlock_t lock ; t#u32 digest_errors ; t#u32 cxn_timeout_errors ; t#u32 pdu_format_errors ; t#u32 last_sess_failure_type ; char last_sess_fail_rem_name [ 224 ] ; } 
s#iscsi_login_stats struct iscsi_login_stats { t#spinlock_t lock ; t#u32 accepts ; t#u32 other_fails ; t#u32 redirects ; t#u32 authorize_fails ; t#u32 authenticate_fails ; t#u32 negotiate_fails ; t#u64 last_fail_time ; t#u32 last_fail_type ; int last_intr_fail_ip_family ; s#__kernel_sockaddr_storage last_intr_fail_sockaddr ; char last_intr_fail_name [ 224 ] ; } 
s#iscsi_logout_stats struct iscsi_logout_stats { t#spinlock_t lock ; t#u32 normal_logouts ; t#u32 abnormal_logouts ; } 
s#iscsi_tiqn struct iscsi_tiqn { unsigned char tiqn [ 224 ] ; e#tiqn_state_table tiqn_state ; int tiqn_access_count ; t#u32 tiqn_active_tpgs ; t#u32 tiqn_ntpgs ; t#u32 tiqn_num_tpg_nps ; t#u32 tiqn_nsessions ; s#list_head tiqn_list ; s#list_head tiqn_tpg_list ; t#spinlock_t tiqn_state_lock ; t#spinlock_t tiqn_tpg_lock ; s#se_wwn tiqn_wwn ; s#iscsi_wwn_stat_grps tiqn_stat_grps ; int tiqn_index ; s#iscsi_sess_err_stats sess_err_stats ; s#iscsi_login_stats login_stats ; s#iscsi_logout_stats logout_stats ; } 
s#iscsi_portal_group struct iscsi_portal_group { unsigned char tpg_chap_id ; e#tpg_state_table tpg_state ; t#u16 tpgt ; t#u16 ntsih ; t#u32 nsessions ; t#u32 num_tpg_nps ; t#u32 sid ; t#spinlock_t tpg_np_lock ; t#spinlock_t tpg_state_lock ; s#se_portal_group tpg_se_tpg ; s#mutex tpg_access_lock ; s#semaphore np_login_sem ; s#iscsi_tpg_attrib tpg_attrib ; s#iscsi_node_auth tpg_demo_auth ; s#iscsi_param_list * param_list ; s#iscsi_tiqn * tpg_tiqn ; s#list_head tpg_gnp_list ; s#list_head tpg_list ; } 
s#iscsi_session struct iscsi_session { t#u8 initiator_vendor ; t#u8 isid [ 6 ] ; e#iscsi_timer_flags_table time2retain_timer_flags ; t#u8 version_active ; t#u16 cid_called ; t#u16 conn_recovery_count ; t#u16 tsih ; t#u32 session_state ; t#itt_t init_task_tag ; t#u32 targ_xfer_tag ; t#u32 cmdsn_window ; s#mutex cmdsn_mutex ; t#u32 exp_cmd_sn ; t#atomic_t max_cmd_sn ; s#list_head sess_ooo_cmdsn_list ; t#u32 sid ; char auth_type [ 8 ] ; int session_index ; int session_usage_count ; int session_waiting_on_uc ; t#atomic_long_t cmd_pdus ; t#atomic_long_t rsp_pdus ; t#atomic_long_t tx_data_octets ; t#atomic_long_t rx_data_octets ; t#atomic_long_t conn_digest_errors ; t#atomic_long_t conn_timeout_errors ; t#u64 creation_time ; t#atomic_t nconn ; t#atomic_t session_continuation ; t#atomic_t session_fall_back_to_erl0 ; t#atomic_t session_logout ; t#atomic_t session_reinstatement ; t#atomic_t session_stop_active ; t#atomic_t sleep_on_sess_wait_comp ; s#list_head sess_conn_list ; s#list_head cr_active_list ; s#list_head cr_inactive_list ; t#spinlock_t conn_lock ; t#spinlock_t cr_a_lock ; t#spinlock_t cr_i_lock ; t#spinlock_t session_usage_lock ; t#spinlock_t ttt_lock ; s#completion async_msg_comp ; s#completion reinstatement_comp ; s#completion session_wait_comp ; s#completion session_waiting_on_uc_comp ; s#timer_list time2retain_timer ; s#iscsi_sess_ops * sess_ops ; s#se_session * se_sess ; s#iscsi_portal_group * tpg ; } 
s#iscsi_conn_recovery struct iscsi_conn_recovery { t#u16 cid ; t#u32 cmd_count ; t#u32 maxrecvdatasegmentlength ; t#u32 maxxmitdatasegmentlength ; int ready_for_reallegiance ; s#list_head conn_recovery_cmd_list ; t#spinlock_t conn_recovery_cmd_lock ; s#timer_list time2retain_timer ; s#iscsi_session * sess ; s#list_head cr_list ; } 
s#iscsi_tmr_req struct iscsi_tmr_req { t#bool task_reassign : 1 ; t#u32 exp_data_sn ; s#iscsi_cmd * ref_cmd ; s#iscsi_conn_recovery * conn_recovery ; s#se_tmr_req * se_tmr_req ; } 
s#iscsi_cmd struct iscsi_cmd { e#iscsi_timer_flags_table dataout_timer_flags ; t#u8 dataout_timeout_retries ; t#u8 error_recovery_count ; e#cmd_i_state_table deferred_i_state ; e#cmd_i_state_table i_state ; t#u8 immediate_cmd ; t#u8 immediate_data ; t#u8 iscsi_opcode ; t#u8 iscsi_response ; t#u8 logout_reason ; t#u8 logout_response ; t#u8 maxcmdsn_inc ; t#u8 unsolicited_data ; t#u8 reject_reason ; t#u16 logout_cid ; e#cmd_flags_table cmd_flags ; t#itt_t init_task_tag ; t#u32 targ_xfer_tag ; t#u32 cmd_sn ; t#u32 exp_stat_sn ; t#u32 stat_sn ; t#u32 data_sn ; t#u32 r2t_sn ; t#u32 acked_data_sn ; t#u32 buf_ptr_size ; t#u32 data_crc ; t#u32 outstanding_r2ts ; t#u32 r2t_offset ; t#u32 iov_data_count ; t#u32 orig_iov_data_count ; t#u32 iov_misc_count ; t#u32 pdu_count ; t#u32 pdu_send_order ; t#u32 pdu_start ; t#u32 seq_send_order ; t#u32 seq_count ; t#u32 seq_no ; t#u32 seq_start_offset ; t#u32 seq_end_offset ; t#u32 read_data_done ; t#u32 write_data_done ; t#u32 first_burst_len ; t#u32 next_burst_len ; t#u32 tx_size ; void * buf_ptr ; void * text_in_ptr ; e#dma_data_direction data_direction ; unsigned char pdu [ 48 + 4 ] ; t#atomic_t immed_queue_count ; t#atomic_t response_queue_count ; t#spinlock_t datain_lock ; t#spinlock_t dataout_timeout_lock ; t#spinlock_t istate_lock ; t#spinlock_t error_lock ; t#spinlock_t r2t_lock ; s#list_head datain_list ; s#list_head cmd_r2t_list ; s#timer_list dataout_timer ; s#kvec * iov_data ; s#kvec iov_misc [ 5 ] ; s#iscsi_pdu * pdu_list ; s#iscsi_pdu * pdu_ptr ; s#iscsi_seq * seq_list ; s#iscsi_seq * seq_ptr ; s#iscsi_tmr_req * tmr_req ; s#iscsi_conn * conn ; s#iscsi_conn_recovery * cr ; s#iscsi_session * sess ; s#list_head i_conn_node ; s#se_cmd se_cmd ; unsigned char sense_buffer [ ( 96 + 2 ) ] ; t#u32 padding ; t#u8 pad_bytes [ 4 ] ; s#scatterlist * first_data_sg ; t#u32 first_data_sg_off ; t#u32 kmapped_nents ; t#sense_reason_t sense_reason ; } 
e#datain_req_comp_table enum datain_req_comp_table { DATAIN_COMPLETE_NORMAL = 1 , DATAIN_COMPLETE_WITHIN_COMMAND_RECOVERY = 2 , DATAIN_COMPLETE_CONNECTION_RECOVERY = 3 , } 
e#datain_req_rec_table enum datain_req_rec_table { DATAIN_WITHIN_COMMAND_RECOVERY = 1 , DATAIN_CONNECTION_RECOVERY = 2 , } 
s#iscsi_datain_req struct iscsi_datain_req { e#datain_req_comp_table dr_complete ; int generate_recovery_values ; e#datain_req_rec_table recovery ; t#u32 begrun ; t#u32 runlength ; t#u32 data_length ; t#u32 data_offset ; t#u32 data_sn ; t#u32 next_burst_len ; t#u32 read_data_done ; t#u32 seq_send_order ; s#list_head cmd_datain_node ; } 
s#iscsi_r2t struct iscsi_r2t { int seq_complete ; int recovery_r2t ; int sent_r2t ; t#u32 r2t_sn ; t#u32 offset ; t#u32 targ_xfer_tag ; t#u32 xfer_len ; s#list_head r2t_list ; } 
s#iscsit_transport struct iscsit_transport { char name [ 16 ] ; int transport_type ; t#bool rdma_shutdown ; int priv_size ; s#module * owner ; s#list_head t_node ; int ( * iscsit_setup_np ) ( s#iscsi_np * , s#__kernel_sockaddr_storage * ) ; int ( * iscsit_accept_np ) ( s#iscsi_np * , s#iscsi_conn * ) ; void ( * iscsit_free_np ) ( s#iscsi_np * ) ; void ( * iscsit_wait_conn ) ( s#iscsi_conn * ) ; void ( * iscsit_free_conn ) ( s#iscsi_conn * ) ; int ( * iscsit_get_login_rx ) ( s#iscsi_conn * , s#iscsi_login * ) ; int ( * iscsit_put_login_tx ) ( s#iscsi_conn * , s#iscsi_login * , t#u32 ) ; int ( * iscsit_immediate_queue ) ( s#iscsi_conn * , s#iscsi_cmd * , int ) ; int ( * iscsit_response_queue ) ( s#iscsi_conn * , s#iscsi_cmd * , int ) ; int ( * iscsit_get_dataout ) ( s#iscsi_conn * , s#iscsi_cmd * , t#bool ) ; int ( * iscsit_queue_data_in ) ( s#iscsi_conn * , s#iscsi_cmd * ) ; int ( * iscsit_queue_status ) ( s#iscsi_conn * , s#iscsi_cmd * ) ; void ( * iscsit_aborted_task ) ( s#iscsi_conn * , s#iscsi_cmd * ) ; int ( * iscsit_xmit_pdu ) ( s#iscsi_conn * , s#iscsi_cmd * , s#iscsi_datain_req * , const void * , t#u32 ) ; void ( * iscsit_release_cmd ) ( s#iscsi_conn * , s#iscsi_cmd * ) ; void ( * iscsit_get_rx_pdu ) ( s#iscsi_conn * ) ; int ( * iscsit_validate_params ) ( s#iscsi_conn * ) ; void ( * iscsit_get_r2t_ttt ) ( s#iscsi_conn * , s#iscsi_cmd * , s#iscsi_r2t * ) ; e#target_prot_op ( * iscsit_get_sup_prot_ops ) ( s#iscsi_conn * ) ; } 
s#iscsi_np struct iscsi_np { int np_network_transport ; int np_ip_proto ; int np_sock_type ; e#np_thread_state_table np_thread_state ; t#bool enabled ; t#atomic_t np_reset_count ; e#iscsi_timer_flags_table np_login_timer_flags ; t#u32 np_exports ; e#np_flags_table np_flags ; t#spinlock_t np_thread_lock ; s#completion np_restart_comp ; s#socket * np_socket ; s#__kernel_sockaddr_storage np_sockaddr ; s#task_struct * np_thread ; s#timer_list np_login_timer ; void * np_context ; s#iscsit_transport * np_transport ; s#list_head np_list ; } 
s#iscsi_login struct iscsi_login { t#u8 auth_complete ; t#u8 checked_for_existing ; t#u8 current_stage ; t#u8 leading_connection ; t#u8 first_request ; t#u8 version_min ; t#u8 version_max ; t#u8 login_complete ; t#u8 login_failed ; t#bool zero_tsih ; char isid [ 6 ] ; t#u32 cmd_sn ; t#itt_t init_task_tag ; t#u32 initial_exp_statsn ; t#u32 rsp_length ; t#u16 cid ; t#u16 tsih ; char req [ 48 ] ; char rsp [ 48 ] ; char * req_buf ; char * rsp_buf ; s#iscsi_conn * conn ; s#iscsi_np * np ; } 
s##crypto_type
s##skcipher_givcrypt_request
s#iscsi_conn_ops struct iscsi_conn_ops { t#u8 HeaderDigest ; t#u8 DataDigest ; t#u32 MaxRecvDataSegmentLength ; t#u32 MaxXmitDataSegmentLength ; t#u32 InitiatorRecvDataSegmentLength ; t#u32 TargetRecvDataSegmentLength ; } 
s##iscsi_login_thread_s
s#iscsi_tpg_np struct iscsi_tpg_np { s#iscsi_np * tpg_np ; s#iscsi_portal_group * tpg ; s#iscsi_tpg_np * tpg_np_parent ; s#list_head tpg_np_list ; s#list_head tpg_np_child_list ; s#list_head tpg_np_parent_list ; s#se_tpg_np se_tpg_np ; t#spinlock_t tpg_np_parent_lock ; s#completion tpg_np_comp ; s#kref tpg_np_kref ; } 
s#iscsi_conn struct iscsi_conn { t#wait_queue_head_t queues_wq ; t#u8 auth_complete ; t#u8 conn_state ; t#u8 conn_logout_reason ; t#u8 network_transport ; e#iscsi_timer_flags_table nopin_timer_flags ; e#iscsi_timer_flags_table nopin_response_timer_flags ; t#u8 which_thread ; t#u16 cid ; t#u16 login_port ; int net_size ; int login_family ; t#u32 auth_id ; t#u32 conn_flags ; t#itt_t login_itt ; t#u32 exp_statsn ; t#u32 stat_sn ; s#__kernel_sockaddr_storage login_sockaddr ; s#__kernel_sockaddr_storage local_sockaddr ; int conn_usage_count ; int conn_waiting_on_uc ; t#atomic_t check_immediate_queue ; t#atomic_t conn_logout_remove ; t#atomic_t connection_exit ; t#atomic_t connection_recovery ; t#atomic_t connection_reinstatement ; t#atomic_t connection_wait_rcfr ; t#atomic_t sleep_on_conn_wait_comp ; t#atomic_t transport_failed ; s#completion conn_post_wait_comp ; s#completion conn_wait_comp ; s#completion conn_wait_rcfr_comp ; s#completion conn_waiting_on_uc_comp ; s#completion conn_logout_comp ; s#completion tx_half_close_comp ; s#completion rx_half_close_comp ; s#socket * sock ; void ( * orig_data_ready ) ( s#sock * ) ; void ( * orig_state_change ) ( s#sock * ) ; unsigned long login_flags ; s#delayed_work login_work ; s#iscsi_login * login ; s#timer_list nopin_timer ; s#timer_list nopin_response_timer ; s#timer_list transport_timer ; s#task_struct * login_kworker ; t#spinlock_t cmd_lock ; t#spinlock_t conn_usage_lock ; t#spinlock_t immed_queue_lock ; t#spinlock_t nopin_timer_lock ; t#spinlock_t response_queue_lock ; t#spinlock_t state_lock ; s#ahash_request * conn_rx_hash ; s#ahash_request * conn_tx_hash ; t#cpumask_var_t conn_cpumask ; unsigned int conn_rx_reset_cpumask : 1 ; unsigned int conn_tx_reset_cpumask : 1 ; s#list_head conn_cmd_list ; s#list_head immed_queue_list ; s#list_head response_queue_list ; s#iscsi_conn_ops * conn_ops ; s#iscsi_login * conn_login ; s#iscsit_transport * conn_transport ; s#iscsi_param_list * param_list ; void * auth_protocol ; void * context ; s#iscsi_login_thread_s * login_thread ; s#iscsi_portal_group * tpg ; s#iscsi_tpg_np * tpg_np ; s#iscsi_session * sess ; int bitmap_id ; int rx_thread_active ; s#task_struct * rx_thread ; s#completion rx_login_comp ; int tx_thread_active ; s#task_struct * tx_thread ; s#list_head conn_list ; } 
iscsit_queue_rsp extern int iscsit_queue_rsp ( s#iscsi_conn * , s#iscsi_cmd * ) 
iscsit_aborted_task extern void iscsit_aborted_task ( s#iscsi_conn * , s#iscsi_cmd * ) 
iscsit_add_reject extern int iscsit_add_reject ( s#iscsi_conn * , t#u8 , unsigned char * ) 
iscsit_reject_cmd extern int iscsit_reject_cmd ( s#iscsi_cmd * , t#u8 , unsigned char * ) 
iscsit_setup_scsi_cmd extern int iscsit_setup_scsi_cmd ( s#iscsi_conn * , s#iscsi_cmd * , unsigned char * ) 
iscsit_set_unsoliticed_dataout extern void iscsit_set_unsoliticed_dataout ( s#iscsi_cmd * ) 
s#iscsi_scsi_req struct iscsi_scsi_req { t#uint8_t opcode ; t#uint8_t flags ; t#__be16 rsvd2 ; t#uint8_t hlength ; t#uint8_t dlength [ 3 ] ; s#scsi_lun lun ; t#itt_t itt ; t#__be32 data_length ; t#__be32 cmdsn ; t#__be32 exp_statsn ; t#uint8_t cdb [ 16 ] ; } 
iscsit_process_scsi_cmd extern int iscsit_process_scsi_cmd ( s#iscsi_conn * , s#iscsi_cmd * , s#iscsi_scsi_req * ) 
__iscsit_check_dataout_hdr extern int __iscsit_check_dataout_hdr ( s#iscsi_conn * , void * , s#iscsi_cmd * , t#u32 , t#bool * ) 
iscsit_check_dataout_hdr extern int iscsit_check_dataout_hdr ( s#iscsi_conn * , void * , s#iscsi_cmd * * ) 
iscsit_check_dataout_payload extern int iscsit_check_dataout_payload ( s#iscsi_cmd * , s#iscsi_data * , t#bool ) 
s#iscsi_nopout struct iscsi_nopout { t#uint8_t opcode ; t#uint8_t flags ; t#__be16 rsvd2 ; t#uint8_t rsvd3 ; t#uint8_t dlength [ 3 ] ; s#scsi_lun lun ; t#itt_t itt ; t#__be32 ttt ; t#__be32 cmdsn ; t#__be32 exp_statsn ; t#uint8_t rsvd4 [ 16 ] ; } 
iscsit_setup_nop_out extern int iscsit_setup_nop_out ( s#iscsi_conn * , s#iscsi_cmd * , s#iscsi_nopout * ) 
iscsit_process_nop_out extern int iscsit_process_nop_out ( s#iscsi_conn * , s#iscsi_cmd * , s#iscsi_nopout * ) 
iscsit_handle_task_mgt_cmd extern int iscsit_handle_task_mgt_cmd ( s#iscsi_conn * , s#iscsi_cmd * , unsigned char * ) 
s#iscsi_text struct iscsi_text { t#uint8_t opcode ; t#uint8_t flags ; t#uint8_t rsvd2 [ 2 ] ; t#uint8_t hlength ; t#uint8_t dlength [ 3 ] ; t#uint8_t rsvd4 [ 8 ] ; t#itt_t itt ; t#__be32 ttt ; t#__be32 cmdsn ; t#__be32 exp_statsn ; t#uint8_t rsvd5 [ 16 ] ; } 
iscsit_setup_text_cmd extern int iscsit_setup_text_cmd ( s#iscsi_conn * , s#iscsi_cmd * , s#iscsi_text * ) 
iscsit_process_text_cmd extern int iscsit_process_text_cmd ( s#iscsi_conn * , s#iscsi_cmd * , s#iscsi_text * ) 
iscsit_handle_logout_cmd extern int iscsit_handle_logout_cmd ( s#iscsi_conn * , s#iscsi_cmd * , unsigned char * ) 
iscsit_handle_snack extern int iscsit_handle_snack ( s#iscsi_conn * , unsigned char * ) 
s#iscsi_datain struct iscsi_datain { t#u8 flags ; t#u32 data_sn ; t#u32 length ; t#u32 offset ; } 
s#iscsi_data_rsp struct iscsi_data_rsp { t#uint8_t opcode ; t#uint8_t flags ; t#uint8_t rsvd2 ; t#uint8_t cmd_status ; t#uint8_t hlength ; t#uint8_t dlength [ 3 ] ; s#scsi_lun lun ; t#itt_t itt ; t#__be32 ttt ; t#__be32 statsn ; t#__be32 exp_cmdsn ; t#__be32 max_cmdsn ; t#__be32 datasn ; t#__be32 offset ; t#__be32 residual_count ; } 
iscsit_build_datain_pdu extern void iscsit_build_datain_pdu ( s#iscsi_cmd * , s#iscsi_conn * , s#iscsi_datain * , s#iscsi_data_rsp * , t#bool ) 
s#iscsi_logout_rsp struct iscsi_logout_rsp { t#uint8_t opcode ; t#uint8_t flags ; t#uint8_t response ; t#uint8_t rsvd2 ; t#uint8_t hlength ; t#uint8_t dlength [ 3 ] ; t#uint8_t rsvd3 [ 8 ] ; t#itt_t itt ; t#__be32 rsvd4 ; t#__be32 statsn ; t#__be32 exp_cmdsn ; t#__be32 max_cmdsn ; t#__be32 rsvd5 ; t#__be16 t2wait ; t#__be16 t2retain ; t#__be32 rsvd6 ; } 
iscsit_build_logout_rsp extern int iscsit_build_logout_rsp ( s#iscsi_cmd * , s#iscsi_conn * , s#iscsi_logout_rsp * ) 
iscsit_build_nopin_rsp extern void iscsit_build_nopin_rsp ( s#iscsi_cmd * , s#iscsi_conn * , s#iscsi_nopin * , t#bool ) 
iscsit_build_r2ts_for_cmd extern int iscsit_build_r2ts_for_cmd ( s#iscsi_conn * , s#iscsi_cmd * , t#bool ) 
s#iscsi_scsi_rsp struct iscsi_scsi_rsp { t#uint8_t opcode ; t#uint8_t flags ; t#uint8_t response ; t#uint8_t cmd_status ; t#uint8_t hlength ; t#uint8_t dlength [ 3 ] ; t#uint8_t rsvd [ 8 ] ; t#itt_t itt ; t#__be32 rsvd1 ; t#__be32 statsn ; t#__be32 exp_cmdsn ; t#__be32 max_cmdsn ; t#__be32 exp_datasn ; t#__be32 bi_residual_count ; t#__be32 residual_count ; } 
iscsit_build_rsp_pdu extern void iscsit_build_rsp_pdu ( s#iscsi_cmd * , s#iscsi_conn * , t#bool , s#iscsi_scsi_rsp * ) 
s#iscsi_tm_rsp struct iscsi_tm_rsp { t#uint8_t opcode ; t#uint8_t flags ; t#uint8_t response ; t#uint8_t qualifier ; t#uint8_t hlength ; t#uint8_t dlength [ 3 ] ; t#uint8_t rsvd2 [ 8 ] ; t#itt_t itt ; t#itt_t rtt ; t#__be32 statsn ; t#__be32 exp_cmdsn ; t#__be32 max_cmdsn ; t#uint8_t rsvd3 [ 12 ] ; } 
iscsit_build_task_mgt_rsp extern void iscsit_build_task_mgt_rsp ( s#iscsi_cmd * , s#iscsi_conn * , s#iscsi_tm_rsp * ) 
s#iscsi_text_rsp struct iscsi_text_rsp { t#uint8_t opcode ; t#uint8_t flags ; t#uint8_t rsvd2 [ 2 ] ; t#uint8_t hlength ; t#uint8_t dlength [ 3 ] ; t#uint8_t rsvd4 [ 8 ] ; t#itt_t itt ; t#__be32 ttt ; t#__be32 statsn ; t#__be32 exp_cmdsn ; t#__be32 max_cmdsn ; t#uint8_t rsvd5 [ 12 ] ; } 
e#iscsit_transport_type enum iscsit_transport_type { ISCSI_TCP = 0 , ISCSI_SCTP_TCP = 1 , ISCSI_SCTP_UDP = 2 , ISCSI_IWARP_TCP = 3 , ISCSI_IWARP_SCTP = 4 , ISCSI_INFINIBAND = 5 , ISCSI_CXGBIT = 6 , } 
iscsit_build_text_rsp extern int iscsit_build_text_rsp ( s#iscsi_cmd * , s#iscsi_conn * , s#iscsi_text_rsp * , e#iscsit_transport_type ) 
s#iscsi_reject struct iscsi_reject { t#uint8_t opcode ; t#uint8_t flags ; t#uint8_t reason ; t#uint8_t rsvd2 ; t#uint8_t hlength ; t#uint8_t dlength [ 3 ] ; t#uint8_t rsvd3 [ 8 ] ; t#__be32 ffffffff ; t#uint8_t rsvd4 [ 4 ] ; t#__be32 statsn ; t#__be32 exp_cmdsn ; t#__be32 max_cmdsn ; t#__be32 datasn ; t#uint8_t rsvd5 [ 8 ] ; } 
iscsit_build_reject extern void iscsit_build_reject ( s#iscsi_cmd * , s#iscsi_conn * , s#iscsi_reject * ) 
iscsit_immediate_queue extern int iscsit_immediate_queue ( s#iscsi_conn * , s#iscsi_cmd * , int ) 
iscsit_response_queue extern int iscsit_response_queue ( s#iscsi_conn * , s#iscsi_cmd * , int ) 
iscsit_logout_post_handler extern int iscsit_logout_post_handler ( s#iscsi_cmd * , s#iscsi_conn * ) 

/* drivers/target/iscsi/iscsi_target_datain_values.o */
s##module
s##posix_acl
s##vfsmount
s##bio_vec
s##pipe_inode_info
s##poll_table_struct
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##compat_timespec
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##writeback_control
s##swap_info_struct
s##device
s##kmem_cache
s##mem_cgroup
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##seq_file
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##target_backend
s##target_backend_ops
s##target_core_fabric_ops
s##target_fabric_configfs
s##percpu_ida_cpu
s##socket
s##sock
s##iscsit_transport
s##crypto_type
s##skcipher_givcrypt_request
s##iscsi_login_thread_s
iscsit_get_datain_values extern s#iscsi_datain_req * iscsit_get_datain_values ( s#iscsi_cmd * , s#iscsi_datain * ) 

/* drivers/target/iscsi/iscsi_target_device.o */
s##iscsi_pdu
s##iscsi_seq
s##module
s##posix_acl
s##vfsmount
s##bio_vec
s##pipe_inode_info
s##poll_table_struct
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##compat_timespec
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##writeback_control
s##swap_info_struct
s##device
s##kmem_cache
s##mem_cgroup
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##seq_file
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##target_backend
s##target_backend_ops
s##target_fabric_configfs
s##percpu_ida_cpu
s##socket
s##sock
s##iscsit_transport
s##crypto_type
s##skcipher_givcrypt_request
s##iscsi_login_thread_s
iscsit_increment_maxcmdsn extern void iscsit_increment_maxcmdsn ( s#iscsi_cmd * , s#iscsi_session * ) 

/* drivers/target/iscsi/iscsi_target_erl0.o */
s##socket
s##sock
s##workqueue_struct
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##module
s##writeback_control
s##kstatfs
s##seq_file
s##mem_cgroup
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##mtd_info
s##user_namespace
s##bio_vec
s##pipe_inode_info
s##poll_table_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##key_user
s##key_type
s##assoc_array_ptr
s##bdi_writeback
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##device
s##kmem_cache
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##compat_timespec
s##pollfd
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##iscsit_transport
s##crypto_type
s##skcipher_givcrypt_request
s##iscsi_login_thread_s
s##percpu_ida_cpu
s##target_backend
s##target_backend_ops
s##target_fabric_configfs
iscsit_cause_connection_reinstatement extern void iscsit_cause_connection_reinstatement ( s#iscsi_conn * , int ) 

/* drivers/target/iscsi/iscsi_target_erl1.o */
s##module
s##posix_acl
s##vfsmount
s##bio_vec
s##pipe_inode_info
s##poll_table_struct
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##compat_timespec
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##writeback_control
s##swap_info_struct
s##device
s##kmem_cache
s##mem_cgroup
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##seq_file
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##target_backend
s##target_backend_ops
s##target_fabric_configfs
s##percpu_ida_cpu
s##socket
s##sock
s##crypto_type
s##skcipher_givcrypt_request
s##iscsi_login_thread_s
iscsit_stop_dataout_timer extern void iscsit_stop_dataout_timer ( s#iscsi_cmd * ) 

/* drivers/target/iscsi/iscsi_target_login.o */
s##vfsmount
s##posix_acl
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##mmu_notifier_mm
s##xol_area
s##pid_namespace
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##sec_path
s##workqueue_struct
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##kmem_cache
s##xfrm_state
s##lwtunnel_state
s##rtable
s##rt6_info
s##dn_route
s##prefix_info
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##phy_device
s##sfp_bus
s##prot_inuse
s##ipv4_devconf
s##fib_table
s##inet_peer_base
s##xt_table
s##inet_hashinfo
s##rt6_statistics
s##fib6_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##swap_info_struct
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##mtd_info
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##iscsi_pdu
s##iscsi_seq
s##target_backend
s##target_backend_ops
s##target_fabric_configfs
s##percpu_ida_cpu
s##crypto_type
s##skcipher_givcrypt_request
s##iscsi_login_thread_s
iscsi_change_param_sprintf extern __attribute__ ( ( format ( printf , 2 , 3 ) ) ) int iscsi_change_param_sprintf ( s#iscsi_conn * , const char * , ... ) 

/* drivers/target/iscsi/iscsi_target_nego.o */
s##vfsmount
s##posix_acl
s##module
s##device_private
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##mmu_notifier_mm
s##xol_area
s##pid_namespace
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##sec_path
s##workqueue_struct
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##l3mdev_ops
s##ndisc_ops
s##xfrm_state
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##kmem_cache
s##xt_table
s##inet_hashinfo
s##fib_notifier_ops
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##lwtunnel_state
s##rtable
s##dn_route
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##swap_info_struct
s##request_sock_ops
s##timewait_sock_ops
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sock_reuseport
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##mtd_info
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##iscsi_pdu
s##iscsi_seq
s##target_backend
s##target_backend_ops
s##target_fabric_configfs
s##percpu_ida_cpu
s##crypto_type
s##skcipher_givcrypt_request
s##iscsi_login_thread_s
iscsi_target_check_login_request extern int iscsi_target_check_login_request ( s#iscsi_conn * , s#iscsi_login * ) 

/* drivers/target/iscsi/iscsi_target_parameters.o */
s#iscsi_param struct iscsi_param { char * name ; char * value ; t#u8 set_param ; t#u8 phase ; t#u8 scope ; t#u8 sender ; t#u8 type ; t#u8 use ; t#u16 type_range ; t#u32 state ; s#list_head p_list ; } 
iscsi_find_param_from_key extern s#iscsi_param * iscsi_find_param_from_key ( char * , s#iscsi_param_list * ) 

/* drivers/target/iscsi/iscsi_target_tmr.o */
s##module
s##posix_acl
s##vfsmount
s##bio_vec
s##pipe_inode_info
s##poll_table_struct
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##compat_timespec
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##writeback_control
s##swap_info_struct
s##device
s##kmem_cache
s##mem_cgroup
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##seq_file
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##target_backend
s##target_backend_ops
s##target_fabric_configfs
s##percpu_ida_cpu
s##socket
s##sock
s##crypto_type
s##skcipher_givcrypt_request
s##iscsi_login_thread_s
iscsit_tmr_post_handler extern int iscsit_tmr_post_handler ( s#iscsi_cmd * , s#iscsi_conn * ) 

/* drivers/target/iscsi/iscsi_target_transport.o */
s##sock
s##seq_file
s##vfsmount
s##posix_acl
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##device
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##socket
s##crypto_type
s##skcipher_givcrypt_request
s##iscsi_login_thread_s
s##percpu_ida_cpu
s##target_backend
s##target_backend_ops
s##target_core_fabric_ops
s##target_fabric_configfs
s##iscsi_pdu
s##iscsi_seq
iscsit_register_transport extern int iscsit_register_transport ( s#iscsit_transport * ) 
iscsit_unregister_transport extern void iscsit_unregister_transport ( s#iscsit_transport * ) 

/* drivers/target/iscsi/iscsi_target_util.o */
s##posix_acl
s##vfsmount
s##device_private
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##sec_path
s##workqueue_struct
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##kmem_cache
s##xfrm_state
s##lwtunnel_state
s##rtable
s##rt6_info
s##dn_route
s##prefix_info
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
s##prot_inuse
s##ipv4_devconf
s##fib_table
s##inet_peer_base
s##xt_table
s##inet_hashinfo
s##rt6_statistics
s##fib6_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##eventfd_ctx
s##mempolicy
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_mq_ctx
s##blkcg_gq
s##blk_flush_queue
s##blk_mq_tags
s##blk_mq_alloc_data
s##blk_mq_debugfs_attr
s##blk_queue_stats
s##rq_wb
s##blk_stat_callback
s##blk_trace
s##bsg_job
s##throtl_data
s##hd_geometry
s##pr_ops
s##timer_rand_state
s##disk_events
s##badblocks
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##target_backend
s##target_backend_ops
s##target_fabric_configfs
s##percpu_ida_cpu
s##crypto_type
s##skcipher_givcrypt_request
s##iscsi_login_thread_s
iscsit_allocate_cmd extern s#iscsi_cmd * iscsit_allocate_cmd ( s#iscsi_conn * , int ) 
iscsit_sequence_cmd extern int iscsit_sequence_cmd ( s#iscsi_conn * , s#iscsi_cmd * , unsigned char * , t#__be32 ) 
iscsit_find_cmd_from_itt extern s#iscsi_cmd * iscsit_find_cmd_from_itt ( s#iscsi_conn * , t#itt_t ) 
iscsit_find_cmd_from_itt_or_dump extern s#iscsi_cmd * iscsit_find_cmd_from_itt_or_dump ( s#iscsi_conn * , t#itt_t , t#u32 ) 
iscsit_add_cmd_to_immediate_queue extern void iscsit_add_cmd_to_immediate_queue ( s#iscsi_cmd * , s#iscsi_conn * , t#u8 ) 
iscsit_release_cmd extern void iscsit_release_cmd ( s#iscsi_cmd * ) 
iscsit_free_cmd extern void iscsit_free_cmd ( s#iscsi_cmd * , t#bool ) 

/* drivers/target/target_core_alua.o */
s##module
s##posix_acl
s##vfsmount
s##iov_iter
s##poll_table_struct
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##compat_timespec
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##pipe_inode_info
s##writeback_control
s##swap_info_struct
s##dev_pagemap
s##kmem_cache
s##mem_cgroup
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##vm_operations_struct
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##seq_file
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s#target_fabric_configfs struct target_fabric_configfs { t#atomic_t tf_access_cnt ; s#list_head tf_list ; s#config_group tf_group ; s#config_group tf_disc_group ; const s#target_core_fabric_ops * tf_ops ; s#config_item_type tf_discovery_cit ; s#config_item_type tf_wwn_cit ; s#config_item_type tf_wwn_fabric_stats_cit ; s#config_item_type tf_tpg_cit ; s#config_item_type tf_tpg_base_cit ; s#config_item_type tf_tpg_lun_cit ; s#config_item_type tf_tpg_port_cit ; s#config_item_type tf_tpg_port_stat_cit ; s#config_item_type tf_tpg_np_cit ; s#config_item_type tf_tpg_np_base_cit ; s#config_item_type tf_tpg_attrib_cit ; s#config_item_type tf_tpg_auth_cit ; s#config_item_type tf_tpg_param_cit ; s#config_item_type tf_tpg_nacl_cit ; s#config_item_type tf_tpg_nacl_base_cit ; s#config_item_type tf_tpg_nacl_attrib_cit ; s#config_item_type tf_tpg_nacl_auth_cit ; s#config_item_type tf_tpg_nacl_param_cit ; s#config_item_type tf_tpg_nacl_stat_cit ; s#config_item_type tf_tpg_mappedlun_cit ; s#config_item_type tf_tpg_mappedlun_stat_cit ; } 
s##percpu_ida_cpu
e#target_pr_check_type enum target_pr_check_type { TARGET_PR_CHECK_SCSI2_ANY , TARGET_PR_CHECK_SCSI2_SCSI3 , } 
s#target_pr_ops struct target_pr_ops { t#sense_reason_t ( * check_conflict ) ( s#se_cmd * , e#target_pr_check_type ) ; t#sense_reason_t ( * scsi2_reserve ) ( s#se_cmd * ) ; t#sense_reason_t ( * scsi2_release ) ( s#se_cmd * ) ; t#sense_reason_t ( * reset ) ( s#se_device * ) ; t#sense_reason_t ( * pr_register ) ( s#se_cmd * , t#u64 , t#u64 , t#bool , t#bool , t#bool , t#bool ) ; t#sense_reason_t ( * pr_reserve ) ( s#se_cmd * , int , t#u64 ) ; t#sense_reason_t ( * pr_release ) ( s#se_cmd * , int , t#u64 ) ; t#sense_reason_t ( * pr_clear ) ( s#se_cmd * , t#u64 ) ; t#sense_reason_t ( * pr_preempt ) ( s#se_cmd * , t#u64 , t#u64 , int , t#bool ) ; t#sense_reason_t ( * pr_register_and_move ) ( s#se_cmd * , t#u64 , t#u64 , t#bool , int ) ; t#sense_reason_t ( * pr_read_keys ) ( s#se_cmd * , unsigned char * , t#u32 ) ; t#sense_reason_t ( * pr_read_reservation ) ( s#se_cmd * , unsigned char * , t#u32 ) ; t#sense_reason_t ( * pr_report_capabilities ) ( s#se_cmd * , unsigned char * , t#u32 ) ; t#sense_reason_t ( * pr_read_full_status ) ( s#se_cmd * , unsigned char * , t#u32 ) ; } 
s#target_backend_ops struct target_backend_ops { char name [ 16 ] ; char inquiry_prod [ 16 ] ; char inquiry_rev [ 4 ] ; s#module * owner ; t#u8 transport_flags ; int ( * attach_hba ) ( s#se_hba * , t#u32 ) ; void ( * detach_hba ) ( s#se_hba * ) ; int ( * pmode_enable_hba ) ( s#se_hba * , unsigned long ) ; s#se_device * ( * alloc_device ) ( s#se_hba * , const char * ) ; int ( * configure_device ) ( s#se_device * ) ; void ( * destroy_device ) ( s#se_device * ) ; void ( * free_device ) ( s#se_device * ) ; t#ssize_t ( * set_configfs_dev_params ) ( s#se_device * , const char * , t#ssize_t ) ; t#ssize_t ( * show_configfs_dev_params ) ( s#se_device * , char * ) ; t#sense_reason_t ( * parse_cdb ) ( s#se_cmd * ) ; t#u32 ( * get_device_type ) ( s#se_device * ) ; t#sector_t ( * get_blocks ) ( s#se_device * ) ; t#sector_t ( * get_alignment_offset_lbas ) ( s#se_device * ) ; unsigned int ( * get_lbppbe ) ( s#se_device * ) ; unsigned int ( * get_io_min ) ( s#se_device * ) ; unsigned int ( * get_io_opt ) ( s#se_device * ) ; unsigned char * ( * get_sense_buffer ) ( s#se_cmd * ) ; t#bool ( * get_write_cache ) ( s#se_device * ) ; int ( * init_prot ) ( s#se_device * ) ; int ( * format_prot ) ( s#se_device * ) ; void ( * free_prot ) ( s#se_device * ) ; s#target_pr_ops * pr_ops ; s#configfs_attribute * * tb_dev_attrib_attrs ; s#configfs_attribute * * tb_dev_action_attrs ; } 
s#target_backend struct target_backend { s#list_head list ; const s#target_backend_ops * ops ; s#config_item_type tb_dev_cit ; s#config_item_type tb_dev_attrib_cit ; s#config_item_type tb_dev_action_cit ; s#config_item_type tb_dev_pr_cit ; s#config_item_type tb_dev_wwn_cit ; s#config_item_type tb_dev_alua_tg_pt_gps_cit ; s#config_item_type tb_dev_stat_cit ; } 
s##scatterlist
core_alua_check_nonop_delay int core_alua_check_nonop_delay ( s#se_cmd * ) 

/* drivers/target/target_core_configfs.o */
s##sock
s##vfsmount
s##posix_acl
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##mmu_notifier_mm
s##xol_area
s##kmem_cache
s##fs_pin
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##ipc_namespace
s##mnt_namespace
s##net
s##bpf_prog_array
s##cgroup_taskset
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##robust_list_head
s##futex_pi_state
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##fwnode_handle
s##iommu_group
s##iommu_fwspec
s##ring_buffer
s##bpf_prog
s##static_key_mod
s##trace_array
s##tracer
s##trace_buffer
s##ring_buffer_iter
s##event_filter
s##ftrace_hash
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
target_depend_item int target_depend_item ( s#config_item * ) 
target_undepend_item void target_undepend_item ( s#config_item * ) 
s##percpu_ida_cpu
s##scatterlist
target_register_template int target_register_template ( const s#target_core_fabric_ops * ) 
target_unregister_template void target_unregister_template ( const s#target_core_fabric_ops * ) 
sbc_attrib_attrs extern s#configfs_attribute * sbc_attrib_attrs [ ] 
passthrough_attrib_attrs extern s#configfs_attribute * passthrough_attrib_attrs [ ] 

/* drivers/target/target_core_device.o */
s##posix_acl
s##vfsmount
s##device_private
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##sec_path
s##workqueue_struct
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##kmem_cache
s##xfrm_state
s##lwtunnel_state
s##uncached_list
s##rt6_info
s##dn_route
s##prefix_info
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
s##prot_inuse
s##ipv4_devconf
s##xt_table
s##rt6_statistics
s##fib6_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##eventfd_ctx
s##mempolicy
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_mq_ctx
s##blkcg_gq
s##blk_mq_hw_ctx
s##blk_mq_alloc_data
s##blk_mq_debugfs_attr
s##blk_queue_stats
s##rq_wb
s##blk_mq_ops
s##blk_stat_callback
s##blk_trace
s##blk_flush_queue
s##bsg_job
s##throtl_data
s##blk_mq_tag_set
s##hd_geometry
s##pr_ops
s##timer_rand_state
s##disk_events
s##badblocks
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##percpu_ida_cpu
transport_lookup_cmd_lun t#sense_reason_t transport_lookup_cmd_lun ( s#se_cmd * , t#u64 ) 
transport_lookup_tmr_lun int transport_lookup_tmr_lun ( s#se_cmd * , t#u64 ) 
target_lun_is_rdonly t#bool target_lun_is_rdonly ( s#se_cmd * ) 
target_nacl_find_deve s#se_dev_entry * target_nacl_find_deve ( s#se_node_acl * , t#u64 ) 
target_configure_unmap_from_queue t#bool target_configure_unmap_from_queue ( s#se_dev_attrib * , s#request_queue * ) 
target_to_linux_sector t#sector_t target_to_linux_sector ( s#se_device * , t#sector_t ) 
target_find_device s#se_device * target_find_device ( int , t#bool ) 
passthrough_parse_cdb t#sense_reason_t passthrough_parse_cdb ( s#se_cmd * , t#sense_reason_t ( * ) ( s#se_cmd * ) ) 

/* drivers/target/target_core_hba.o */
s##posix_acl
s##vfsmount
s##device_private
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##sec_path
s##workqueue_struct
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##kmem_cache
s##xfrm_state
s##lwtunnel_state
s##uncached_list
s##rt6_info
s##dn_route
s##prefix_info
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
s##prot_inuse
s##ipv4_devconf
s##xt_table
s##rt6_statistics
s##fib6_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##eventfd_ctx
s##mempolicy
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##percpu_ida_cpu
transport_backend_register int transport_backend_register ( const s#target_backend_ops * ) 
target_backend_unregister void target_backend_unregister ( const s#target_backend_ops * ) 

/* drivers/target/target_core_pr.o */
s##module
s##posix_acl
s##vfsmount
s##iov_iter
s##poll_table_struct
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##compat_timespec
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##pipe_inode_info
s##writeback_control
s##swap_info_struct
s##dev_pagemap
s##kmem_cache
s##mem_cgroup
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##vm_operations_struct
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##seq_file
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##percpu_ida_cpu
s##scatterlist
core_scsi3_pr_seq_non_holder extern int core_scsi3_pr_seq_non_holder ( s#se_cmd * , t#u32 , char * , t#bool ) 

/* drivers/target/target_core_sbc.o */
s##sock
s##vfsmount
s##posix_acl
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##blk_mq_ctx
s##kmem_cache
s##blkcg_gq
s##workqueue_struct
s##blk_flush_queue
s##blk_mq_tags
s##blk_mq_alloc_data
s##blk_mq_debugfs_attr
s##blk_queue_stats
s##rq_wb
s##cgroup_subsys_state
s##blk_stat_callback
s##blk_trace
s##bsg_job
s##throtl_data
s##hd_geometry
s##pr_ops
s##timer_rand_state
s##disk_events
s##badblocks
s##reclaim_state
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##swap_info_struct
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##mtd_info
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##percpu_ida_cpu
sbc_get_write_same_sectors t#sector_t sbc_get_write_same_sectors ( s#se_cmd * ) 
sbc_create_compare_and_write_sg s#scatterlist * sbc_create_compare_and_write_sg ( s#se_cmd * ) 
s#sbc_ops struct sbc_ops { t#sense_reason_t ( * execute_rw ) ( s#se_cmd * , s#scatterlist * , t#u32 , e#dma_data_direction ) ; t#sense_reason_t ( * execute_sync_cache ) ( s#se_cmd * ) ; t#sense_reason_t ( * execute_write_same ) ( s#se_cmd * ) ; t#sense_reason_t ( * execute_unmap ) ( s#se_cmd * , t#sector_t , t#sector_t ) ; t#sense_reason_t ( * execute_compare_and_write ) ( s#se_cmd * ) ; } 
sbc_parse_cdb t#sense_reason_t sbc_parse_cdb ( s#se_cmd * , s#sbc_ops * ) 
sbc_get_device_type t#u32 sbc_get_device_type ( s#se_device * ) 
sbc_dif_copy_prot void sbc_dif_copy_prot ( s#se_cmd * , unsigned int , t#bool , s#scatterlist * , int ) 
sbc_dif_verify t#sense_reason_t sbc_dif_verify ( s#se_cmd * , t#sector_t , unsigned int , unsigned int , s#scatterlist * , int ) 

/* drivers/target/target_core_spc.o */
s##sock
s##vfsmount
s##posix_acl
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##blk_mq_ctx
s##kmem_cache
s##blkcg_gq
s##workqueue_struct
s##blk_flush_queue
s##blk_mq_tags
s##blk_mq_alloc_data
s##blk_mq_debugfs_attr
s##blk_queue_stats
s##rq_wb
s##cgroup_subsys_state
s##blk_stat_callback
s##blk_trace
s##bsg_job
s##throtl_data
s##hd_geometry
s##pr_ops
s##timer_rand_state
s##disk_events
s##badblocks
s##reclaim_state
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##swap_info_struct
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##mtd_info
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##percpu_ida_cpu
spc_emulate_inquiry_std t#sense_reason_t spc_emulate_inquiry_std ( s#se_cmd * , unsigned char * ) 
spc_emulate_evpd_83 t#sense_reason_t spc_emulate_evpd_83 ( s#se_cmd * , unsigned char * ) 
spc_emulate_report_luns t#sense_reason_t spc_emulate_report_luns ( s#se_cmd * ) 
spc_parse_cdb t#sense_reason_t spc_parse_cdb ( s#se_cmd * , unsigned int * ) 

/* drivers/target/target_core_tmr.o */
s##module
s##dentry
s##percpu_ida_cpu
s##workqueue_struct
s##scatterlist
core_tmr_alloc_req int core_tmr_alloc_req ( s#se_cmd * , void * , t#u8 , t#gfp_t ) 

/* drivers/target/target_core_tpg.o */
s##posix_acl
s##vfsmount
s##device_private
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##sec_path
s##workqueue_struct
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##kmem_cache
s##xfrm_state
s##lwtunnel_state
s##uncached_list
s##rt6_info
s##dn_route
s##prefix_info
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
s##prot_inuse
s##ipv4_devconf
s##xt_table
s##rt6_statistics
s##fib6_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##eventfd_ctx
s##mempolicy
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##percpu_ida_cpu
core_tpg_get_initiator_node_acl s#se_node_acl * core_tpg_get_initiator_node_acl ( s#se_portal_group * , unsigned char * ) 
core_allocate_nexus_loss_ua void core_allocate_nexus_loss_ua ( s#se_node_acl * ) 
target_tpg_has_node_acl t#bool target_tpg_has_node_acl ( s#se_portal_group * , const char * ) 
core_tpg_check_initiator_node_acl s#se_node_acl * core_tpg_check_initiator_node_acl ( s#se_portal_group * , unsigned char * ) 
core_tpg_set_initiator_node_queue_depth int core_tpg_set_initiator_node_queue_depth ( s#se_node_acl * , t#u32 ) 
core_tpg_set_initiator_node_tag int core_tpg_set_initiator_node_tag ( s#se_portal_group * , s#se_node_acl * , const char * ) 
core_tpg_register int core_tpg_register ( s#se_wwn * , s#se_portal_group * , int ) 
core_tpg_deregister int core_tpg_deregister ( s#se_portal_group * ) 

/* drivers/target/target_core_transport.o */
s##posix_acl
s##vfsmount
s##device_private
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##kmem_cache
s##fs_pin
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##sec_path
s##workqueue_struct
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##xfrm_state
s##lwtunnel_state
s##uncached_list
s##rt6_info
s##dn_route
s##prefix_info
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
s##prot_inuse
s##ipv4_devconf
s##xt_table
s##rt6_statistics
s##fib6_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##eventfd_ctx
s##mempolicy
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_mq_ctx
s##blkcg_gq
s##blk_flush_queue
s##blk_mq_tags
s##blk_mq_alloc_data
s##blk_mq_debugfs_attr
s##blk_queue_stats
s##rq_wb
s##blk_stat_callback
s##blk_trace
s##bsg_job
s##throtl_data
s##hd_geometry
s##pr_ops
s##timer_rand_state
s##disk_events
s##badblocks
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##ring_buffer
s##static_key_mod
s##trace_array
s##tracer
s##trace_buffer
s##ring_buffer_iter
s##event_filter
s##ftrace_hash
s##numa_group
s##task_delay_info
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##percpu_ida_cpu
transport_init_session s#se_session * transport_init_session ( e#target_prot_op ) 
transport_alloc_session_tags int transport_alloc_session_tags ( s#se_session * , unsigned int , unsigned int ) 
transport_init_session_tags s#se_session * transport_init_session_tags ( unsigned int , unsigned int , e#target_prot_op ) 
__transport_register_session void __transport_register_session ( s#se_portal_group * , s#se_node_acl * , s#se_session * , void * ) 
transport_register_session void transport_register_session ( s#se_portal_group * , s#se_node_acl * , s#se_session * , void * ) 
target_alloc_session s#se_session * target_alloc_session ( s#se_portal_group * , unsigned int , unsigned int , e#target_prot_op , const char * , void * , int ( * ) ( s#se_portal_group * , s#se_session * , void * ) ) 
target_show_dynamic_sessions t#ssize_t target_show_dynamic_sessions ( s#se_portal_group * , char * ) 
target_put_nacl void target_put_nacl ( s#se_node_acl * ) 
transport_deregister_session_configfs void transport_deregister_session_configfs ( s#se_session * ) 
transport_free_session void transport_free_session ( s#se_session * ) 
transport_deregister_session void transport_deregister_session ( s#se_session * ) 
transport_copy_sense_to_cmd void transport_copy_sense_to_cmd ( s#se_cmd * , unsigned char * ) 
target_complete_cmd void target_complete_cmd ( s#se_cmd * , t#u8 ) 
target_complete_cmd_with_sense void target_complete_cmd_with_sense ( s#se_cmd * , t#sense_reason_t ) 
target_complete_cmd_with_length void target_complete_cmd_with_length ( s#se_cmd * , t#u8 , int ) 
s#t10_vpd struct t10_vpd { unsigned char device_identifier [ 254 ] ; int protocol_identifier_set ; t#u32 protocol_identifier ; t#u32 device_identifier_code_set ; t#u32 association ; t#u32 device_identifier_type ; s#list_head vpd_list ; } 
transport_set_vpd_proto_id void transport_set_vpd_proto_id ( s#t10_vpd * , unsigned char * ) 
transport_set_vpd_assoc int transport_set_vpd_assoc ( s#t10_vpd * , unsigned char * ) 
transport_set_vpd_ident_type int transport_set_vpd_ident_type ( s#t10_vpd * , unsigned char * ) 
transport_set_vpd_ident int transport_set_vpd_ident ( s#t10_vpd * , unsigned char * ) 
transport_init_se_cmd void transport_init_se_cmd ( s#se_cmd * , const s#target_core_fabric_ops * , s#se_session * , t#u32 , int , int , unsigned char * ) 
target_setup_cmd_from_cdb t#sense_reason_t target_setup_cmd_from_cdb ( s#se_cmd * , unsigned char * ) 
transport_handle_cdb_direct int transport_handle_cdb_direct ( s#se_cmd * ) 
target_submit_cmd_map_sgls int target_submit_cmd_map_sgls ( s#se_cmd * , s#se_session * , unsigned char * , unsigned char * , t#u64 , t#u32 , int , int , int , s#scatterlist * , t#u32 , s#scatterlist * , t#u32 , s#scatterlist * , t#u32 ) 
target_submit_cmd int target_submit_cmd ( s#se_cmd * , s#se_session * , unsigned char * , unsigned char * , t#u64 , t#u32 , int , int , int ) 
target_submit_tmr int target_submit_tmr ( s#se_cmd * , s#se_session * , unsigned char * , t#u64 , void * , unsigned char , t#gfp_t , t#u64 , int ) 
transport_generic_request_failure void transport_generic_request_failure ( s#se_cmd * , t#sense_reason_t ) 
target_execute_cmd void target_execute_cmd ( s#se_cmd * ) 
target_free_sgl void target_free_sgl ( s#scatterlist * , int ) 
transport_kmap_data_sg void * transport_kmap_data_sg ( s#se_cmd * ) 
transport_kunmap_data_sg void transport_kunmap_data_sg ( s#se_cmd * ) 
target_alloc_sgl int target_alloc_sgl ( s#scatterlist * * , unsigned int * , t#u32 , t#bool , t#bool ) 
transport_generic_new_cmd t#sense_reason_t transport_generic_new_cmd ( s#se_cmd * ) 
transport_generic_free_cmd int transport_generic_free_cmd ( s#se_cmd * , int ) 
target_get_sess_cmd int target_get_sess_cmd ( s#se_cmd * , t#bool ) 
target_put_sess_cmd int target_put_sess_cmd ( s#se_cmd * ) 
target_show_cmd void target_show_cmd ( const char * , s#se_cmd * ) 
target_sess_cmd_list_set_waiting void target_sess_cmd_list_set_waiting ( s#se_session * ) 
target_wait_for_sess_cmds void target_wait_for_sess_cmds ( s#se_session * ) 
transport_wait_for_tasks t#bool transport_wait_for_tasks ( s#se_cmd * ) 
transport_send_check_condition_and_sense int transport_send_check_condition_and_sense ( s#se_cmd * , t#sense_reason_t , int ) 
transport_check_aborted_status int transport_check_aborted_status ( s#se_cmd * , int ) 
transport_generic_handle_tmr int transport_generic_handle_tmr ( s#se_cmd * ) 

/* drivers/tty/hvc/hvc_console.o */
s##device_private
s##sock
s##vfsmount
s##posix_acl
s##module
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##mmu_notifier_mm
s##xol_area
s##compat_timespec
s##pollfd
s##pid_namespace
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##bpf_prog_array
s##cgroup_taskset
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##mem_cgroup
s##uprobe
s##gs_cb
s##iov_iter
s##swap_info_struct
s##dev_pagemap
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##fwnode_handle
s##iommu_group
s##iommu_fwspec
s##proc_dir_entry
s#serial_icounter_struct struct serial_icounter_struct { int cts , dsr , rng , dcd ; int rx , tx ; int frame , overrun , parity , brk ; int buf_overrun ; int reserved [ 9 ] ; } 
s#hvc_struct struct hvc_struct { s#tty_port port ; t#spinlock_t lock ; int index ; int do_wakeup ; char * outbuf ; int outbuf_size ; int n_outbuf ; t#uint32_t vtermno ; const s#hv_ops * ops ; int irq_requested ; int data ; s#winsize ws ; s#work_struct tty_resize ; s#list_head next ; unsigned long flags ; } 
s#hv_ops struct hv_ops { int ( * get_chars ) ( t#uint32_t , char * , int ) ; int ( * put_chars ) ( t#uint32_t , const char * , int ) ; int ( * notifier_add ) ( s#hvc_struct * , int ) ; void ( * notifier_del ) ( s#hvc_struct * , int ) ; void ( * notifier_hangup ) ( s#hvc_struct * , int ) ; int ( * tiocmget ) ( s#hvc_struct * ) ; int ( * tiocmset ) ( s#hvc_struct * , unsigned int , unsigned int ) ; void ( * dtr_rts ) ( s#hvc_struct * , int ) ; } 
hvc_instantiate extern int hvc_instantiate ( t#uint32_t , int , const s#hv_ops * ) 
hvc_kick void hvc_kick ( void ) 
hvc_poll int hvc_poll ( s#hvc_struct * ) 
__hvc_resize extern void __hvc_resize ( s#hvc_struct * , s#winsize ) 
hvc_alloc extern s#hvc_struct * hvc_alloc ( t#uint32_t , int , const s#hv_ops * , int ) 
hvc_remove extern int hvc_remove ( s#hvc_struct * ) 

/* drivers/tty/n_tracesink.o */
n_tracesink_datadrain void n_tracesink_datadrain ( t#u8 * , int ) 

/* drivers/tty/n_tty.o */
s##device_private
s##sock
s##seq_file
s##vfsmount
s##posix_acl
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##kmem_cache
s##fs_pin
s##ucounts
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##cgroup_namespace
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##nlm_lockowner
s##nfs4_lock_state
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##fwnode_handle
s##iommu_group
s##iommu_fwspec
s##proc_dir_entry
s##serial_icounter_struct
n_tty_inherit_ops extern void n_tty_inherit_ops ( s#tty_ldisc_ops * ) 

/* drivers/tty/serdev/core.o */
s##device_private
s##sock
s##seq_file
s##vfsmount
s##posix_acl
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##iommu_group
s##iommu_fwspec
s#serdev_controller_ops struct serdev_controller_ops { int ( * write_buf ) ( s#serdev_controller * , const unsigned char * , t#size_t ) ; void ( * write_flush ) ( s#serdev_controller * ) ; int ( * write_room ) ( s#serdev_controller * ) ; int ( * open ) ( s#serdev_controller * ) ; void ( * close ) ( s#serdev_controller * ) ; void ( * set_flow_control ) ( s#serdev_controller * , t#bool ) ; unsigned int ( * set_baudrate ) ( s#serdev_controller * , unsigned int ) ; void ( * wait_until_sent ) ( s#serdev_controller * , long ) ; int ( * get_tiocm ) ( s#serdev_controller * ) ; int ( * set_tiocm ) ( s#serdev_controller * , unsigned int , unsigned int ) ; } 
s#serdev_controller struct serdev_controller { s#device dev ; unsigned int nr ; s#serdev_device * serdev ; const s#serdev_controller_ops * ops ; } 
s#serdev_device_ops struct serdev_device_ops { int ( * receive_buf ) ( s#serdev_device * , const unsigned char * , t#size_t ) ; void ( * write_wakeup ) ( s#serdev_device * ) ; } 
s#serdev_device struct serdev_device { s#device dev ; int nr ; s#serdev_controller * ctrl ; const s#serdev_device_ops * ops ; s#completion write_comp ; s#mutex write_lock ; } 
serdev_device_add int serdev_device_add ( s#serdev_device * ) 
serdev_device_remove void serdev_device_remove ( s#serdev_device * ) 
serdev_device_open int serdev_device_open ( s#serdev_device * ) 
serdev_device_close void serdev_device_close ( s#serdev_device * ) 
serdev_device_write_wakeup void serdev_device_write_wakeup ( s#serdev_device * ) 
serdev_device_write_buf int serdev_device_write_buf ( s#serdev_device * , const unsigned char * , t#size_t ) 
serdev_device_write int serdev_device_write ( s#serdev_device * , const unsigned char * , t#size_t , unsigned long ) 
serdev_device_write_flush void serdev_device_write_flush ( s#serdev_device * ) 
serdev_device_write_room int serdev_device_write_room ( s#serdev_device * ) 
serdev_device_set_baudrate unsigned int serdev_device_set_baudrate ( s#serdev_device * , unsigned int ) 
serdev_device_set_flow_control void serdev_device_set_flow_control ( s#serdev_device * , t#bool ) 
serdev_device_wait_until_sent void serdev_device_wait_until_sent ( s#serdev_device * , long ) 
serdev_device_get_tiocm int serdev_device_get_tiocm ( s#serdev_device * ) 
serdev_device_set_tiocm int serdev_device_set_tiocm ( s#serdev_device * , int , int ) 
serdev_device_alloc s#serdev_device * serdev_device_alloc ( s#serdev_controller * ) 
serdev_controller_alloc s#serdev_controller * serdev_controller_alloc ( s#device * , t#size_t ) 
serdev_controller_add int serdev_controller_add ( s#serdev_controller * ) 
serdev_controller_remove void serdev_controller_remove ( s#serdev_controller * ) 
s#serdev_device_driver struct serdev_device_driver { s#device_driver driver ; int ( * probe ) ( s#serdev_device * ) ; void ( * remove ) ( s#serdev_device * ) ; } 
__serdev_device_driver_register int __serdev_device_driver_register ( s#serdev_device_driver * , s#module * ) 

/* drivers/tty/sysrq.o */
handle_sysrq void handle_sysrq ( int ) 
s#sysrq_key_op struct sysrq_key_op { void ( * handler ) ( int ) ; char * help_msg ; char * action_msg ; int enable_mask ; } 
register_sysrq_key int register_sysrq_key ( int , s#sysrq_key_op * ) 
unregister_sysrq_key int unregister_sysrq_key ( int , s#sysrq_key_op * ) 

/* drivers/tty/tty_baudrate.o */
tty_termios_baud_rate extern t#speed_t tty_termios_baud_rate ( s#ktermios * ) 
tty_termios_input_baud_rate extern t#speed_t tty_termios_input_baud_rate ( s#ktermios * ) 
tty_termios_encode_baud_rate extern void tty_termios_encode_baud_rate ( s#ktermios * , t#speed_t , t#speed_t ) 
s##device_private
s##sock
s##seq_file
s##vfsmount
s##posix_acl
s##module
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##compat_timespec
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##mem_cgroup
s##uprobe
s##gs_cb
s##iov_iter
s##swap_info_struct
s##dev_pagemap
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##fwnode_handle
s##iommu_group
s##iommu_fwspec
s##proc_dir_entry
s##serial_icounter_struct
tty_encode_baud_rate extern void tty_encode_baud_rate ( s#tty_struct * , t#speed_t , t#speed_t ) 

/* drivers/tty/tty_buffer.o */
s##device_private
s##sock
s##seq_file
s##vfsmount
s##posix_acl
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##fwnode_handle
s##iommu_group
s##iommu_fwspec
s##proc_dir_entry
s##serial_icounter_struct
tty_buffer_lock_exclusive extern void tty_buffer_lock_exclusive ( s#tty_port * ) 
tty_buffer_unlock_exclusive extern void tty_buffer_unlock_exclusive ( s#tty_port * ) 
tty_buffer_space_avail extern int tty_buffer_space_avail ( s#tty_port * ) 
tty_buffer_request_room extern int tty_buffer_request_room ( s#tty_port * , t#size_t ) 
tty_insert_flip_string_fixed_flag extern int tty_insert_flip_string_fixed_flag ( s#tty_port * , const unsigned char * , char , t#size_t ) 
tty_insert_flip_string_flags extern int tty_insert_flip_string_flags ( s#tty_port * , const unsigned char * , const char * , t#size_t ) 
__tty_insert_flip_char int __tty_insert_flip_char ( s#tty_port * , unsigned char , char ) 
tty_schedule_flip void tty_schedule_flip ( s#tty_port * ) 
tty_prepare_flip_string extern int tty_prepare_flip_string ( s#tty_port * , unsigned char * * , t#size_t ) 
tty_ldisc_receive_buf extern int tty_ldisc_receive_buf ( s#tty_ldisc * , const unsigned char * , char * , int ) 
tty_flip_buffer_push extern void tty_flip_buffer_push ( s#tty_port * ) 
tty_buffer_set_limit extern int tty_buffer_set_limit ( s#tty_port * , int ) 

/* drivers/tty/tty_io.o */
tty_std_termios extern s#ktermios tty_std_termios 
s##device_private
s##sock
s##vfsmount
s##posix_acl
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##nameidata
s##sem_undo_list
s##fs_struct
s#fdtable struct fdtable { unsigned int max_fds ; s#file * * fd ; unsigned long * close_on_exec ; unsigned long * open_fds ; unsigned long * full_fds_bits ; s#callback_head rcu ; } 
s#files_struct struct files_struct { t#atomic_t count ; t#bool resize_in_progress ; t#wait_queue_head_t resize_wait ; s#fdtable * fdt ; s#fdtable fdtab ; t#spinlock_t file_lock __attribute__ ( ( __aligned__ ( 256 ) ) ) ; unsigned int next_fd ; unsigned long close_on_exec_init [ 1 ] ; unsigned long open_fds_init [ 1 ] ; unsigned long full_fds_bits_init [ 1 ] ; s#file * fd_array [ 64 ] ; } 
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##cgroup_namespace
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##nlm_lockowner
s##nfs4_lock_state
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##fwnode_handle
s##iommu_group
s##iommu_fwspec
s##proc_dir_entry
tty_name extern const char * tty_name ( const s#tty_struct * ) 
tty_wakeup extern void tty_wakeup ( s#tty_struct * ) 
tty_hangup extern void tty_hangup ( s#tty_struct * ) 
tty_vhangup extern void tty_vhangup ( s#tty_struct * ) 
tty_hung_up_p extern int tty_hung_up_p ( s#file * ) 
stop_tty extern void stop_tty ( s#tty_struct * ) 
start_tty extern void start_tty ( s#tty_struct * ) 
tty_init_termios extern void tty_init_termios ( s#tty_struct * ) 
tty_standard_install extern int tty_standard_install ( s#tty_driver * , s#tty_struct * ) 
tty_kref_put extern void tty_kref_put ( s#tty_struct * ) 
tty_release_struct extern void tty_release_struct ( s#tty_struct * , int ) 
tty_do_resize extern int tty_do_resize ( s#tty_struct * , s#winsize * ) 
do_SAK extern void do_SAK ( s#tty_struct * ) 
tty_put_char extern int tty_put_char ( s#tty_struct * , unsigned char ) 
tty_register_device extern s#device * tty_register_device ( s#tty_driver * , unsigned , s#device * ) 
tty_register_device_attr extern s#device * tty_register_device_attr ( s#tty_driver * , unsigned , s#device * , void * , const s#attribute_group * * ) 
tty_unregister_device extern void tty_unregister_device ( s#tty_driver * , unsigned ) 
__tty_alloc_driver extern s#tty_driver * __tty_alloc_driver ( unsigned int , s#module * , unsigned long ) 
tty_driver_kref_put extern void tty_driver_kref_put ( s#tty_driver * ) 
tty_set_operations extern void tty_set_operations ( s#tty_driver * , const s#tty_operations * ) 
put_tty_driver extern void put_tty_driver ( s#tty_driver * ) 
tty_register_driver extern int tty_register_driver ( s#tty_driver * ) 
tty_unregister_driver extern int tty_unregister_driver ( s#tty_driver * ) 
tty_devnum extern t#dev_t tty_devnum ( s#tty_struct * ) 

/* drivers/tty/tty_ioctl.o */
s##device_private
s##sock
s##seq_file
s##vfsmount
s##posix_acl
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##proc_dir_entry
s##serial_icounter_struct
tty_chars_in_buffer extern int tty_chars_in_buffer ( s#tty_struct * ) 
tty_write_room extern int tty_write_room ( s#tty_struct * ) 
tty_driver_flush_buffer extern void tty_driver_flush_buffer ( s#tty_struct * ) 
tty_throttle extern void tty_throttle ( s#tty_struct * ) 
tty_unthrottle extern void tty_unthrottle ( s#tty_struct * ) 
tty_wait_until_sent extern void tty_wait_until_sent ( s#tty_struct * , long ) 
tty_termios_copy_hw extern void tty_termios_copy_hw ( s#ktermios * , s#ktermios * ) 
tty_termios_hw_change extern int tty_termios_hw_change ( s#ktermios * , s#ktermios * ) 
tty_set_termios extern int tty_set_termios ( s#tty_struct * , s#ktermios * ) 
tty_mode_ioctl extern int tty_mode_ioctl ( s#tty_struct * , s#file * , unsigned int , unsigned long ) 
tty_perform_flush extern int tty_perform_flush ( s#tty_struct * , unsigned long ) 
n_tty_ioctl_helper extern int n_tty_ioctl_helper ( s#tty_struct * , s#file * , unsigned int , unsigned long ) 
n_tty_compat_ioctl_helper extern long n_tty_compat_ioctl_helper ( s#tty_struct * , s#file * , unsigned int , unsigned long ) 

/* drivers/tty/tty_jobctrl.o */
s##device_private
s##sock
s##seq_file
s##vfsmount
s##posix_acl
s##module
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##compat_timespec
s##pollfd
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##mem_cgroup
s##uprobe
s##gs_cb
s##iov_iter
s##swap_info_struct
s##dev_pagemap
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##fwnode_handle
s##iommu_group
s##iommu_fwspec
s##proc_dir_entry
s##serial_icounter_struct
tty_check_change extern int tty_check_change ( s#tty_struct * ) 
get_current_tty extern s#tty_struct * get_current_tty ( void ) 
tty_get_pgrp extern s#pid * tty_get_pgrp ( s#tty_struct * ) 

/* drivers/tty/tty_ldisc.o */
s##device_private
s##sock
s##vfsmount
s##posix_acl
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##nlm_lockowner
s##nfs4_lock_state
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##fwnode_handle
s##iommu_group
s##iommu_fwspec
s##proc_dir_entry
s##serial_icounter_struct
tty_register_ldisc extern int tty_register_ldisc ( int , s#tty_ldisc_ops * ) 
tty_unregister_ldisc extern int tty_unregister_ldisc ( int ) 
tty_ldisc_ref_wait extern s#tty_ldisc * tty_ldisc_ref_wait ( s#tty_struct * ) 
tty_ldisc_ref extern s#tty_ldisc * tty_ldisc_ref ( s#tty_struct * ) 
tty_ldisc_deref extern void tty_ldisc_deref ( s#tty_ldisc * ) 
tty_ldisc_flush extern void tty_ldisc_flush ( s#tty_struct * ) 

/* drivers/tty/tty_mutex.o */
s##device_private
s##sock
s##seq_file
s##vfsmount
s##posix_acl
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##fwnode_handle
s##iommu_group
s##iommu_fwspec
s##proc_dir_entry
s##serial_icounter_struct
tty_lock extern void tty_lock ( s#tty_struct * ) 
tty_unlock extern void tty_unlock ( s#tty_struct * ) 

/* drivers/tty/tty_port.o */
s##device_private
s##sock
s##seq_file
s##vfsmount
s##posix_acl
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##fwnode_handle
s##iommu_group
s##iommu_fwspec
s##proc_dir_entry
tty_port_default_client_ops extern const s#tty_port_client_operations tty_port_default_client_ops 
tty_port_init extern void tty_port_init ( s#tty_port * ) 
tty_port_link_device extern void tty_port_link_device ( s#tty_port * , s#tty_driver * , unsigned ) 
tty_port_register_device extern s#device * tty_port_register_device ( s#tty_port * , s#tty_driver * , unsigned , s#device * ) 
tty_port_register_device_attr extern s#device * tty_port_register_device_attr ( s#tty_port * , s#tty_driver * , unsigned , s#device * , void * , const s#attribute_group * * ) 
tty_port_register_device_attr_serdev extern s#device * tty_port_register_device_attr_serdev ( s#tty_port * , s#tty_driver * , unsigned , s#device * , void * , const s#attribute_group * * ) 
tty_port_register_device_serdev extern s#device * tty_port_register_device_serdev ( s#tty_port * , s#tty_driver * , unsigned , s#device * ) 
tty_port_unregister_device extern void tty_port_unregister_device ( s#tty_port * , s#tty_driver * , unsigned ) 
tty_port_alloc_xmit_buf extern int tty_port_alloc_xmit_buf ( s#tty_port * ) 
tty_port_free_xmit_buf extern void tty_port_free_xmit_buf ( s#tty_port * ) 
tty_port_destroy extern void tty_port_destroy ( s#tty_port * ) 
tty_port_put extern void tty_port_put ( s#tty_port * ) 
tty_port_tty_get extern s#tty_struct * tty_port_tty_get ( s#tty_port * ) 
tty_port_tty_set extern void tty_port_tty_set ( s#tty_port * , s#tty_struct * ) 
tty_port_hangup extern void tty_port_hangup ( s#tty_port * ) 
tty_port_tty_hangup extern void tty_port_tty_hangup ( s#tty_port * , t#bool ) 
tty_port_tty_wakeup extern void tty_port_tty_wakeup ( s#tty_port * ) 
tty_port_carrier_raised extern int tty_port_carrier_raised ( s#tty_port * ) 
tty_port_raise_dtr_rts extern void tty_port_raise_dtr_rts ( s#tty_port * ) 
tty_port_lower_dtr_rts extern void tty_port_lower_dtr_rts ( s#tty_port * ) 
tty_port_block_til_ready extern int tty_port_block_til_ready ( s#tty_port * , s#tty_struct * , s#file * ) 
tty_port_close_start extern int tty_port_close_start ( s#tty_port * , s#tty_struct * , s#file * ) 
tty_port_close_end extern void tty_port_close_end ( s#tty_port * , s#tty_struct * ) 
tty_port_close extern void tty_port_close ( s#tty_port * , s#tty_struct * , s#file * ) 
tty_port_install extern int tty_port_install ( s#tty_port * , s#tty_driver * , s#tty_struct * ) 
tty_port_open extern int tty_port_open ( s#tty_port * , s#tty_struct * , s#file * ) 

/* drivers/tty/vt/consolemap.o */
s##device_private
s##sock
s##seq_file
s##vfsmount
s##posix_acl
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##fwnode_handle
s##iommu_group
s##iommu_fwspec
s##proc_dir_entry
s##serial_icounter_struct
e#con_scroll enum con_scroll { SM_UP , SM_DOWN , } 
s#console_font struct console_font { unsigned int width , height ; unsigned int charcount ; unsigned char * data ; } 
s#consw struct consw { s#module * owner ; const char * ( * con_startup ) ( void ) ; void ( * con_init ) ( s#vc_data * , int ) ; void ( * con_deinit ) ( s#vc_data * ) ; void ( * con_clear ) ( s#vc_data * , int , int , int , int ) ; void ( * con_putc ) ( s#vc_data * , int , int , int ) ; void ( * con_putcs ) ( s#vc_data * , const unsigned short * , int , int , int ) ; void ( * con_cursor ) ( s#vc_data * , int ) ; t#bool ( * con_scroll ) ( s#vc_data * , unsigned int , unsigned int , e#con_scroll , unsigned int ) ; int ( * con_switch ) ( s#vc_data * ) ; int ( * con_blank ) ( s#vc_data * , int , int ) ; int ( * con_font_set ) ( s#vc_data * , s#console_font * , unsigned ) ; int ( * con_font_get ) ( s#vc_data * , s#console_font * ) ; int ( * con_font_default ) ( s#vc_data * , s#console_font * , char * ) ; int ( * con_font_copy ) ( s#vc_data * , int ) ; int ( * con_resize ) ( s#vc_data * , unsigned int , unsigned int , unsigned int ) ; void ( * con_set_palette ) ( s#vc_data * , const unsigned char * ) ; void ( * con_scrolldelta ) ( s#vc_data * , int ) ; int ( * con_set_origin ) ( s#vc_data * ) ; void ( * con_save_screen ) ( s#vc_data * ) ; t#u8 ( * con_build_attr ) ( s#vc_data * , t#u8 , t#u8 , t#u8 , t#u8 , t#u8 , t#u8 ) ; void ( * con_invert_region ) ( s#vc_data * , t#u16 * , int ) ; t#u16 * ( * con_screen_pos ) ( s#vc_data * , int ) ; unsigned long ( * con_getxy ) ( s#vc_data * , unsigned long , int * , int * ) ; void ( * con_flush_scrollback ) ( s#vc_data * ) ; int ( * con_debug_enter ) ( s#vc_data * ) ; int ( * con_debug_leave ) ( s#vc_data * ) ; } 
s#vt_mode struct vt_mode { char mode ; char waitv ; short relsig ; short acqsig ; short frsig ; } 
s##uni_pagedir
s#vc_data struct vc_data { s#tty_port port ; unsigned short vc_num ; unsigned int vc_cols ; unsigned int vc_rows ; unsigned int vc_size_row ; unsigned int vc_scan_lines ; unsigned long vc_origin ; unsigned long vc_scr_end ; unsigned long vc_visible_origin ; unsigned int vc_top , vc_bottom ; const s#consw * vc_sw ; unsigned short * vc_screenbuf ; unsigned int vc_screenbuf_size ; unsigned char vc_mode ; unsigned char vc_attr ; unsigned char vc_def_color ; unsigned char vc_color ; unsigned char vc_s_color ; unsigned char vc_ulcolor ; unsigned char vc_itcolor ; unsigned char vc_halfcolor ; unsigned int vc_cursor_type ; unsigned short vc_complement_mask ; unsigned short vc_s_complement_mask ; unsigned int vc_x , vc_y ; unsigned int vc_saved_x , vc_saved_y ; unsigned long vc_pos ; unsigned short vc_hi_font_mask ; s#console_font vc_font ; unsigned short vc_video_erase_char ; unsigned int vc_state ; unsigned int vc_npar , vc_par [ 16 ] ; s#vt_mode vt_mode ; s#pid * vt_pid ; int vt_newvt ; t#wait_queue_head_t paste_wait ; unsigned int vc_charset : 1 ; unsigned int vc_s_charset : 1 ; unsigned int vc_disp_ctrl : 1 ; unsigned int vc_toggle_meta : 1 ; unsigned int vc_decscnm : 1 ; unsigned int vc_decom : 1 ; unsigned int vc_decawm : 1 ; unsigned int vc_deccm : 1 ; unsigned int vc_decim : 1 ; unsigned int vc_intensity : 2 ; unsigned int vc_italic : 1 ; unsigned int vc_underline : 1 ; unsigned int vc_blink : 1 ; unsigned int vc_reverse : 1 ; unsigned int vc_s_intensity : 2 ; unsigned int vc_s_italic : 1 ; unsigned int vc_s_underline : 1 ; unsigned int vc_s_blink : 1 ; unsigned int vc_s_reverse : 1 ; unsigned int vc_ques : 1 ; unsigned int vc_need_wrap : 1 ; unsigned int vc_can_do_color : 1 ; unsigned int vc_report_mouse : 2 ; unsigned char vc_utf : 1 ; unsigned char vc_utf_count ; int vc_utf_char ; unsigned int vc_tab_stop [ 8 ] ; unsigned char vc_palette [ 16 * 3 ] ; unsigned short * vc_translate ; unsigned char vc_G0_charset ; unsigned char vc_G1_charset ; unsigned char vc_saved_G0 ; unsigned char vc_saved_G1 ; unsigned int vc_resize_user ; unsigned int vc_bell_pitch ; unsigned int vc_bell_duration ; unsigned short vc_cur_blink_ms ; s#vc_data * * vc_display_fg ; s#uni_pagedir * vc_uni_pagedir ; s#uni_pagedir * * vc_uni_pagedir_loc ; t#bool vc_panic_force_write ; } 
inverse_translate extern t#u16 inverse_translate ( s#vc_data * , int , int ) 
con_set_default_unimap int con_set_default_unimap ( s#vc_data * ) 
con_copy_unimap int con_copy_unimap ( s#vc_data * , s#vc_data * ) 

/* drivers/tty/vt/keyboard.o */
register_keyboard_notifier extern int register_keyboard_notifier ( s#notifier_block * ) 
unregister_keyboard_notifier extern int unregister_keyboard_notifier ( s#notifier_block * ) 
kd_mksound extern void kd_mksound ( unsigned int , unsigned int ) 
vt_get_leds extern int vt_get_leds ( int , int ) 

/* drivers/tty/vt/vt.o */
register_vt_notifier extern int register_vt_notifier ( s#notifier_block * ) 
unregister_vt_notifier extern int unregister_vt_notifier ( s#notifier_block * ) 
s##sock
s##seq_file
s##vfsmount
s##posix_acl
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##bio_vec
s##pipe_inode_info
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##proc_dir_entry
s##serial_icounter_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##swap_info_struct
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##uni_pagedir
do_unbind_con_driver extern int do_unbind_con_driver ( const s#consw * , int , int , int ) 
con_is_bound int con_is_bound ( const s#consw * ) 
con_debug_enter int con_debug_enter ( s#vc_data * ) 
con_debug_leave int con_debug_leave ( void ) 
do_unregister_con_driver int do_unregister_con_driver ( const s#consw * ) 
do_take_over_console int do_take_over_console ( const s#consw * , int , int , int ) 
do_blank_screen void do_blank_screen ( int ) 
do_unblank_screen void do_unblank_screen ( int ) 
screen_glyph extern t#u16 screen_glyph ( s#vc_data * , int ) 
screen_pos extern unsigned short * screen_pos ( s#vc_data * , int , int ) 
vc_scrolldelta_helper void vc_scrolldelta_helper ( s#vc_data * , int , unsigned int , void * , unsigned int ) 
color_table extern const unsigned char color_table [ ] 
default_red extern unsigned char default_red [ ] 
default_grn extern unsigned char default_grn [ ] 
default_blu extern unsigned char default_blu [ ] 
update_region void update_region ( s#vc_data * , unsigned long , int ) 
redraw_screen void redraw_screen ( s#vc_data * , int ) 
vc_resize int vc_resize ( s#vc_data * , unsigned int , unsigned int ) 
fg_console extern int fg_console 
console_blank_hook int ( * console_blank_hook ) ( int ) 
console_blanked extern int console_blanked 
s#vc struct vc { s#vc_data * d ; s#work_struct SAK_work ; } 
vc_cons extern s#vc vc_cons [ 63 ] 
global_cursor_default extern int global_cursor_default 
give_up_console void give_up_console ( const s#consw * ) 

/* drivers/tty/vt/vt_ioctl.o */
pm_set_vt_switch extern void pm_set_vt_switch ( int ) 

/* drivers/vfio/mdev/mdev_core.o */
s##device_private
s##sock
s##seq_file
s##vfsmount
s##posix_acl
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##fwnode_handle
s##iommu_group
s##iommu_fwspec
s#mdev_parent_ops struct mdev_parent_ops { s#module * owner ; const s#attribute_group * * dev_attr_groups ; const s#attribute_group * * mdev_attr_groups ; s#attribute_group * * supported_type_groups ; int ( * create ) ( s#kobject * , s#mdev_device * ) ; int ( * remove ) ( s#mdev_device * ) ; int ( * open ) ( s#mdev_device * ) ; void ( * release ) ( s#mdev_device * ) ; t#ssize_t ( * read ) ( s#mdev_device * , char * , t#size_t , t#loff_t * ) ; t#ssize_t ( * write ) ( s#mdev_device * , const char * , t#size_t , t#loff_t * ) ; long ( * ioctl ) ( s#mdev_device * , unsigned int , unsigned long ) ; int ( * mmap ) ( s#mdev_device * , s#vm_area_struct * ) ; } 
s#mdev_parent struct mdev_parent { s#device * dev ; const s#mdev_parent_ops * ops ; s#kref ref ; s#mutex lock ; s#list_head next ; s#kset * mdev_types_kset ; s#list_head type_list ; } 
t#guid_t typedef struct { t#__u8 b [ 16 ] ; } guid_t 
t#uuid_le typedef t#guid_t uuid_le 
s#mdev_device struct mdev_device { s#device dev ; s#mdev_parent * parent ; t#uuid_le uuid ; void * driver_data ; s#kref ref ; s#list_head next ; s#kobject * type_kobj ; } 
mdev_parent_dev extern s#device * mdev_parent_dev ( s#mdev_device * ) 
mdev_get_drvdata extern void * mdev_get_drvdata ( s#mdev_device * ) 
mdev_set_drvdata extern void mdev_set_drvdata ( s#mdev_device * , void * ) 
mdev_dev extern s#device * mdev_dev ( s#mdev_device * ) 
mdev_from_dev extern s#mdev_device * mdev_from_dev ( s#device * ) 
mdev_uuid extern t#uuid_le mdev_uuid ( s#mdev_device * ) 
mdev_register_device extern int mdev_register_device ( s#device * , const s#mdev_parent_ops * ) 
mdev_unregister_device extern void mdev_unregister_device ( s#device * ) 

/* drivers/vfio/mdev/mdev_driver.o */
s##device_private
s##sock
s##seq_file
s##vfsmount
s##posix_acl
s##module
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##compat_timespec
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##iov_iter
s##swap_info_struct
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##driver_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##subsys_private
s##iommu_group
mdev_bus_type extern s#bus_type mdev_bus_type 
s#mdev_driver struct mdev_driver { const char * name ; int ( * probe ) ( s#device * ) ; void ( * remove ) ( s#device * ) ; s#device_driver driver ; } 
mdev_register_driver extern int mdev_register_driver ( s#mdev_driver * , s#module * ) 
mdev_unregister_driver extern void mdev_unregister_driver ( s#mdev_driver * ) 

/* drivers/vfio/vfio.o */
s##iommu_group
s##device_private
s##sock
s##seq_file
s##vfsmount
s##posix_acl
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##nlm_lockowner
s##nfs4_lock_state
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##driver_private
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
vfio_iommu_group_get extern s#iommu_group * vfio_iommu_group_get ( s#device * ) 
vfio_iommu_group_put extern void vfio_iommu_group_put ( s#iommu_group * , s#device * ) 
s#vfio_iommu_driver_ops struct vfio_iommu_driver_ops { char * name ; s#module * owner ; void * ( * open ) ( unsigned long ) ; void ( * release ) ( void * ) ; t#ssize_t ( * read ) ( void * , char * , t#size_t , t#loff_t * ) ; t#ssize_t ( * write ) ( void * , const char * , t#size_t , t#loff_t * ) ; long ( * ioctl ) ( void * , unsigned int , unsigned long ) ; int ( * mmap ) ( void * , s#vm_area_struct * ) ; int ( * attach_group ) ( void * , s#iommu_group * ) ; void ( * detach_group ) ( void * , s#iommu_group * ) ; int ( * pin_pages ) ( void * , unsigned long * , int , int , unsigned long * ) ; int ( * unpin_pages ) ( void * , unsigned long * , int ) ; int ( * register_notifier ) ( void * , unsigned long * , s#notifier_block * ) ; int ( * unregister_notifier ) ( void * , s#notifier_block * ) ; } 
vfio_register_iommu_driver extern int vfio_register_iommu_driver ( const s#vfio_iommu_driver_ops * ) 
vfio_unregister_iommu_driver extern void vfio_unregister_iommu_driver ( const s#vfio_iommu_driver_ops * ) 
s##vfio_device
vfio_device_put extern void vfio_device_put ( s#vfio_device * ) 
s#vfio_device_ops struct vfio_device_ops { char * name ; int ( * open ) ( void * ) ; void ( * release ) ( void * ) ; t#ssize_t ( * read ) ( void * , char * , t#size_t , t#loff_t * ) ; t#ssize_t ( * write ) ( void * , const char * , t#size_t , t#loff_t * ) ; long ( * ioctl ) ( void * , unsigned int , unsigned long ) ; int ( * mmap ) ( void * , s#vm_area_struct * ) ; void ( * request ) ( void * , unsigned int ) ; } 
vfio_add_group_dev extern int vfio_add_group_dev ( s#device * , const s#vfio_device_ops * , void * ) 
vfio_device_get_from_dev extern s#vfio_device * vfio_device_get_from_dev ( s#device * ) 
vfio_device_data extern void * vfio_device_data ( s#vfio_device * ) 
vfio_del_group_dev extern void * vfio_del_group_dev ( s#device * ) 
s##vfio_group
vfio_group_get_external_user extern s#vfio_group * vfio_group_get_external_user ( s#file * ) 
vfio_group_put_external_user extern void vfio_group_put_external_user ( s#vfio_group * ) 
vfio_external_group_match_file extern t#bool vfio_external_group_match_file ( s#vfio_group * , s#file * ) 
vfio_external_user_iommu_id extern int vfio_external_user_iommu_id ( s#vfio_group * ) 
vfio_external_check_extension extern long vfio_external_check_extension ( s#vfio_group * , unsigned long ) 
s#vfio_info_cap_header struct vfio_info_cap_header { t#__u16 id ; t#__u16 version ; t#__u32 next ; } 
s#vfio_info_cap struct vfio_info_cap { s#vfio_info_cap_header * buf ; t#size_t size ; } 
vfio_info_cap_add extern s#vfio_info_cap_header * vfio_info_cap_add ( s#vfio_info_cap * , t#size_t , t#u16 , t#u16 ) 
vfio_info_cap_shift extern void vfio_info_cap_shift ( s#vfio_info_cap * , t#size_t ) 
vfio_info_add_capability extern int vfio_info_add_capability ( s#vfio_info_cap * , s#vfio_info_cap_header * , t#size_t ) 
s#vfio_irq_set struct vfio_irq_set { t#__u32 argsz ; t#__u32 flags ; t#__u32 index ; t#__u32 start ; t#__u32 count ; t#__u8 data [ ] ; } 
vfio_set_irqs_validate_and_prepare extern int vfio_set_irqs_validate_and_prepare ( s#vfio_irq_set * , int , int , t#size_t * ) 
vfio_pin_pages extern int vfio_pin_pages ( s#device * , unsigned long * , int , int , unsigned long * ) 
vfio_unpin_pages extern int vfio_unpin_pages ( s#device * , unsigned long * , int ) 
s##kvm
vfio_group_set_kvm extern void vfio_group_set_kvm ( s#vfio_group * , s#kvm * ) 
e#vfio_notify_type enum vfio_notify_type { VFIO_IOMMU_NOTIFY = 0 , VFIO_GROUP_NOTIFY = 1 , } 
vfio_register_notifier extern int vfio_register_notifier ( s#device * , e#vfio_notify_type , unsigned long * , s#notifier_block * ) 
vfio_unregister_notifier extern int vfio_unregister_notifier ( s#device * , e#vfio_notify_type , s#notifier_block * ) 

/* drivers/vfio/virqfd.o */
s##eventfd_ctx
s##vfsmount
s##posix_acl
s##sock
s##seq_file
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##pipe_inode_info
s##writeback_control
s##bio_vec
s##swap_info_struct
s##device_private
s##driver_private
s##iommu_group
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##kmem_cache
s##mem_cgroup
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s#virqfd struct virqfd { void * opaque ; s#eventfd_ctx * eventfd ; int ( * handler ) ( void * , void * ) ; void ( * thread ) ( void * , void * ) ; void * data ; s#work_struct inject ; t#wait_queue_entry_t wait ; t#poll_table pt ; s#work_struct shutdown ; s#virqfd * * pvirqfd ; } 
vfio_virqfd_enable extern int vfio_virqfd_enable ( void * , int ( * ) ( void * , void * ) , void ( * ) ( void * , void * ) , void * , s#virqfd * * , int ) 
vfio_virqfd_disable extern void vfio_virqfd_disable ( s#virqfd * * ) 

/* drivers/vhost/vhost.o */
t#vhost_work_fn_t typedef void ( * vhost_work_fn_t ) ( s#vhost_work * ) 
s#vhost_work struct vhost_work { s#llist_node node ; t#vhost_work_fn_t fn ; t#wait_queue_head_t done ; int flushing ; unsigned queue_seq ; unsigned done_seq ; unsigned long flags ; } 
vhost_work_init void vhost_work_init ( s#vhost_work * , t#vhost_work_fn_t ) 
s##vfsmount
s##posix_acl
s##sock
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##bpf_prog_array
s##cgroup_taskset
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##pipe_inode_info
s##writeback_control
s##bio_vec
s##swap_info_struct
s##device_private
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kmem_cache
s##mem_cgroup
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s#vhost_umem_node struct vhost_umem_node { s#rb_node rb ; s#list_head link ; t#__u64 start ; t#__u64 last ; t#__u64 size ; t#__u64 userspace_addr ; t#__u32 perm ; t#__u32 flags_padding ; t#__u64 __subtree_last ; } 
E#VHOST_NUM_ADDRS 3 
s##eventfd_ctx
s#vhost_umem struct vhost_umem { s#rb_root umem_tree ; s#list_head umem_list ; int numem ; } 
s#vhost_log struct vhost_log { t#u64 addr ; t#u64 len ; } 
s#vhost_virtqueue struct vhost_virtqueue { s#vhost_dev * dev ; s#mutex mutex ; unsigned int num ; s#vring_desc * desc ; s#vring_avail * avail ; s#vring_used * used ; const s#vhost_umem_node * meta_iotlb [ E#VHOST_NUM_ADDRS ] ; s#file * kick ; s#file * call ; s#file * error ; s#eventfd_ctx * call_ctx ; s#eventfd_ctx * error_ctx ; s#eventfd_ctx * log_ctx ; s#vhost_poll poll ; t#vhost_work_fn_t handle_kick ; t#u16 last_avail_idx ; t#u16 avail_idx ; t#u16 last_used_idx ; t#u16 last_used_event ; t#u16 used_flags ; t#u16 signalled_used ; t#bool signalled_used_valid ; t#bool log_used ; t#u64 log_addr ; s#iovec iov [ 1024 ] ; s#iovec iotlb_iov [ 64 ] ; s#iovec * indirect ; s#vring_used_elem * heads ; s#vhost_umem * umem ; s#vhost_umem * iotlb ; void * private_data ; t#u64 acked_features ; t#u64 acked_backend_features ; void * log_base ; s#vhost_log * log ; t#bool is_le ; t#u32 busyloop_timeout ; } 
s#vhost_dev struct vhost_dev { s#mm_struct * mm ; s#mutex mutex ; s#vhost_virtqueue * * vqs ; int nvqs ; s#file * log_file ; s#eventfd_ctx * log_ctx ; s#llist_head work_list ; s#task_struct * worker ; s#vhost_umem * umem ; s#vhost_umem * iotlb ; t#spinlock_t iotlb_lock ; s#list_head read_list ; s#list_head pending_list ; t#wait_queue_head_t wait ; int iov_limit ; } 
s#vhost_poll struct vhost_poll { t#poll_table table ; t#wait_queue_head_t * wqh ; t#wait_queue_entry_t wait ; s#vhost_work work ; unsigned long mask ; s#vhost_dev * dev ; } 
vhost_poll_init void vhost_poll_init ( s#vhost_poll * , t#vhost_work_fn_t , unsigned long , s#vhost_dev * ) 
vhost_poll_start int vhost_poll_start ( s#vhost_poll * , s#file * ) 
vhost_poll_stop void vhost_poll_stop ( s#vhost_poll * ) 
vhost_work_flush void vhost_work_flush ( s#vhost_dev * , s#vhost_work * ) 
vhost_poll_flush void vhost_poll_flush ( s#vhost_poll * ) 
vhost_work_queue void vhost_work_queue ( s#vhost_dev * , s#vhost_work * ) 
vhost_has_work t#bool vhost_has_work ( s#vhost_dev * ) 
vhost_poll_queue void vhost_poll_queue ( s#vhost_poll * ) 
vhost_dev_init void vhost_dev_init ( s#vhost_dev * , s#vhost_virtqueue * * , int , int ) 
vhost_dev_check_owner long vhost_dev_check_owner ( s#vhost_dev * ) 
vhost_dev_has_owner t#bool vhost_dev_has_owner ( s#vhost_dev * ) 
vhost_dev_set_owner long vhost_dev_set_owner ( s#vhost_dev * ) 
vhost_dev_reset_owner_prepare s#vhost_umem * vhost_dev_reset_owner_prepare ( void ) 
vhost_dev_reset_owner void vhost_dev_reset_owner ( s#vhost_dev * , s#vhost_umem * ) 
vhost_dev_stop void vhost_dev_stop ( s#vhost_dev * ) 
vhost_dev_cleanup void vhost_dev_cleanup ( s#vhost_dev * , t#bool ) 
vhost_chr_write_iter t#ssize_t vhost_chr_write_iter ( s#vhost_dev * , s#iov_iter * ) 
vhost_chr_poll unsigned int vhost_chr_poll ( s#file * , s#vhost_dev * , t#poll_table * ) 
vhost_chr_read_iter t#ssize_t vhost_chr_read_iter ( s#vhost_dev * , s#iov_iter * , int ) 
vq_iotlb_prefetch int vq_iotlb_prefetch ( s#vhost_virtqueue * ) 
vhost_log_access_ok int vhost_log_access_ok ( s#vhost_dev * ) 
vhost_vq_access_ok int vhost_vq_access_ok ( s#vhost_virtqueue * ) 
vhost_vring_ioctl long vhost_vring_ioctl ( s#vhost_dev * , int , void * ) 
vhost_init_device_iotlb int vhost_init_device_iotlb ( s#vhost_dev * , t#bool ) 
vhost_dev_ioctl long vhost_dev_ioctl ( s#vhost_dev * , unsigned int , void * ) 
vhost_log_write int vhost_log_write ( s#vhost_virtqueue * , s#vhost_log * , unsigned int , t#u64 , s#iovec * , int ) 
vhost_vq_init_access int vhost_vq_init_access ( s#vhost_virtqueue * ) 
vhost_get_vq_desc int vhost_get_vq_desc ( s#vhost_virtqueue * , s#iovec [ ] , unsigned int , unsigned int * , unsigned int * , s#vhost_log * , unsigned int * ) 
vhost_discard_vq_desc void vhost_discard_vq_desc ( s#vhost_virtqueue * , int ) 
vhost_add_used int vhost_add_used ( s#vhost_virtqueue * , unsigned int , int ) 
vhost_add_used_n int vhost_add_used_n ( s#vhost_virtqueue * , s#vring_used_elem * , unsigned ) 
vhost_signal void vhost_signal ( s#vhost_dev * , s#vhost_virtqueue * ) 
vhost_add_used_and_signal void vhost_add_used_and_signal ( s#vhost_dev * , s#vhost_virtqueue * , unsigned int , int ) 
vhost_add_used_and_signal_n void vhost_add_used_and_signal_n ( s#vhost_dev * , s#vhost_virtqueue * , s#vring_used_elem * , unsigned ) 
vhost_vq_avail_empty t#bool vhost_vq_avail_empty ( s#vhost_dev * , s#vhost_virtqueue * ) 
vhost_enable_notify t#bool vhost_enable_notify ( s#vhost_dev * , s#vhost_virtqueue * ) 
vhost_disable_notify void vhost_disable_notify ( s#vhost_dev * , s#vhost_virtqueue * ) 
s#vhost_iotlb_msg struct vhost_iotlb_msg { t#__u64 iova ; t#__u64 size ; t#__u64 uaddr ; t#__u8 perm ; t#__u8 type ; } 
s#vhost_msg struct vhost_msg { int type ; union { s#vhost_iotlb_msg iotlb ; t#__u8 padding [ 64 ] ; } ; } 
s#vhost_msg_v2 struct vhost_msg_v2 { t#__u32 type ; t#__u32 reserved ; union { s#vhost_iotlb_msg iotlb ; t#__u8 padding [ 64 ] ; } ; } 
s#vhost_msg_node struct vhost_msg_node { union { s#vhost_msg msg ; s#vhost_msg_v2 msg_v2 ; } ; s#vhost_virtqueue * vq ; s#list_head node ; } 
vhost_new_msg s#vhost_msg_node * vhost_new_msg ( s#vhost_virtqueue * , int ) 
vhost_enqueue_msg void vhost_enqueue_msg ( s#vhost_dev * , s#list_head * , s#vhost_msg_node * ) 
vhost_dequeue_msg s#vhost_msg_node * vhost_dequeue_msg ( s#vhost_dev * , s#list_head * ) 

/* drivers/video/console/bitblit.o */
s##device_private
s##sock
s##seq_file
s##vfsmount
s##posix_acl
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##iommu_group
s##iommu_fwspec
s##proc_dir_entry
s##serial_icounter_struct
s##uni_pagedir
t#u_char typedef unsigned char u_char 
t#u_short typedef unsigned short u_short 
s#display struct display { const t#u_char * fontdata ; int userfont ; t#u_short scrollmode ; t#u_short inverse ; short yscroll ; int vrows ; int cursor_shape ; int con_rotate ; t#u32 xres_virtual ; t#u32 yres_virtual ; t#u32 height ; t#u32 width ; t#u32 bits_per_pixel ; t#u32 grayscale ; t#u32 nonstd ; t#u32 accel_flags ; t#u32 rotate ; s#fb_bitfield red ; s#fb_bitfield green ; s#fb_bitfield blue ; s#fb_bitfield transp ; const s#fb_videomode * mode ; } 
s#fbcon_ops struct fbcon_ops { void ( * bmove ) ( s#vc_data * , s#fb_info * , int , int , int , int , int , int ) ; void ( * clear ) ( s#vc_data * , s#fb_info * , int , int , int , int ) ; void ( * putcs ) ( s#vc_data * , s#fb_info * , const unsigned short * , int , int , int , int , int ) ; void ( * clear_margins ) ( s#vc_data * , s#fb_info * , int ) ; void ( * cursor ) ( s#vc_data * , s#fb_info * , int , int , int , int ) ; int ( * update_start ) ( s#fb_info * ) ; int ( * rotate_font ) ( s#fb_info * , s#vc_data * ) ; s#fb_var_screeninfo var ; s#timer_list cursor_timer ; s#fb_cursor cursor_state ; s#display * p ; int currcon ; int cur_blink_jiffies ; int cursor_flash ; int cursor_reset ; int blank_state ; int graphics ; int save_graphics ; int flags ; int rotate ; int cur_rotate ; char * cursor_data ; t#u8 * fontbuffer ; t#u8 * fontdata ; t#u8 * cursor_src ; t#u32 cursor_size ; t#u32 fd_size ; } 
fbcon_set_bitops extern void fbcon_set_bitops ( s#fbcon_ops * ) 

/* drivers/video/console/dummycon.o */
s##sock
s##seq_file
s##vfsmount
s##posix_acl
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##fwnode_handle
s##iommu_group
s##iommu_fwspec
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##proc_dir_entry
s##serial_icounter_struct
s##uni_pagedir
dummy_con extern const s#consw dummy_con 

/* drivers/video/console/fbcon_ccw.o */
s##device_private
s##sock
s##seq_file
s##vfsmount
s##posix_acl
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##iommu_group
s##iommu_fwspec
s##proc_dir_entry
s##serial_icounter_struct
s##uni_pagedir
fbcon_rotate_ccw extern void fbcon_rotate_ccw ( s#fbcon_ops * ) 

/* drivers/video/console/fbcon_cw.o */
s##device_private
s##sock
s##seq_file
s##vfsmount
s##posix_acl
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##iommu_group
s##iommu_fwspec
s##proc_dir_entry
s##serial_icounter_struct
s##uni_pagedir
fbcon_rotate_cw extern void fbcon_rotate_cw ( s#fbcon_ops * ) 

/* drivers/video/console/fbcon_rotate.o */
s##device_private
s##sock
s##seq_file
s##vfsmount
s##posix_acl
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##iommu_group
s##iommu_fwspec
s##proc_dir_entry
s##serial_icounter_struct
s##uni_pagedir
fbcon_set_rotate extern void fbcon_set_rotate ( s#fbcon_ops * ) 

/* drivers/video/console/fbcon_ud.o */
s##device_private
s##sock
s##seq_file
s##vfsmount
s##posix_acl
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##iommu_group
s##iommu_fwspec
s##proc_dir_entry
s##serial_icounter_struct
s##uni_pagedir
fbcon_rotate_ud extern void fbcon_rotate_ud ( s#fbcon_ops * ) 

/* drivers/video/console/softcursor.o */
s##workqueue_struct
s##sock
s##seq_file
s##vfsmount
s##posix_acl
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##device_private
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##iommu_group
s##iommu_fwspec
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
soft_cursor extern int soft_cursor ( s#fb_info * , s#fb_cursor * ) 

/* drivers/video/fbdev/core/cfbcopyarea.o */
s##workqueue_struct
s##sock
s##seq_file
s##vfsmount
s##posix_acl
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##device_private
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##iommu_group
s##iommu_fwspec
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
cfb_copyarea extern void cfb_copyarea ( s#fb_info * , const s#fb_copyarea * ) 

/* drivers/video/fbdev/core/cfbfillrect.o */
s##workqueue_struct
s##sock
s##seq_file
s##vfsmount
s##posix_acl
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##device_private
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##iommu_group
s##iommu_fwspec
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
cfb_fillrect extern void cfb_fillrect ( s#fb_info * , const s#fb_fillrect * ) 

/* drivers/video/fbdev/core/cfbimgblt.o */
s##workqueue_struct
s##sock
s##seq_file
s##vfsmount
s##posix_acl
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##device_private
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##iommu_group
s##iommu_fwspec
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
cfb_imageblit extern void cfb_imageblit ( s#fb_info * , const s#fb_image * ) 

/* drivers/video/fbdev/core/fb_cmdline.o */
fb_mode_option extern const char * fb_mode_option 
fb_get_options extern int fb_get_options ( const char * , char * * ) 

/* drivers/video/fbdev/core/fb_defio.o */
s##vfsmount
s##posix_acl
s##sock
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pollfd
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##bpf_prog_array
s##cgroup_taskset
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##kmem_cache
s##device_private
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##iommu_group
s##iommu_fwspec
s##workqueue_struct
s##pipe_inode_info
s##swap_info_struct
s##eventfd_ctx
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##userfaultfd_ctx
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##mtd_info
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
fb_deferred_io_fsync extern int fb_deferred_io_fsync ( s#file * , t#loff_t , t#loff_t , int ) 
fb_deferred_io_mmap int fb_deferred_io_mmap ( s#fb_info * , s#vm_area_struct * ) 
fb_deferred_io_init extern void fb_deferred_io_init ( s#fb_info * ) 
fb_deferred_io_open extern void fb_deferred_io_open ( s#fb_info * , s#inode * , s#file * ) 
fb_deferred_io_cleanup extern void fb_deferred_io_cleanup ( s#fb_info * ) 

/* drivers/video/fbdev/core/fb_notify.o */
fb_register_client extern int fb_register_client ( s#notifier_block * ) 
fb_unregister_client extern int fb_unregister_client ( s#notifier_block * ) 
fb_notifier_call_chain extern int fb_notifier_call_chain ( unsigned long , void * ) 

/* drivers/video/fbdev/core/fb_sys_fops.o */
s##workqueue_struct
s##sock
s##seq_file
s##vfsmount
s##posix_acl
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##device_private
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##iommu_group
s##iommu_fwspec
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
fb_sys_read extern t#ssize_t fb_sys_read ( s#fb_info * , char * , t#size_t , t#loff_t * ) 
fb_sys_write extern t#ssize_t fb_sys_write ( s#fb_info * , const char * , t#size_t , t#loff_t * ) 

/* drivers/video/fbdev/core/fbcmap.o */
fb_alloc_cmap extern int fb_alloc_cmap ( s#fb_cmap * , int , int ) 
fb_dealloc_cmap extern void fb_dealloc_cmap ( s#fb_cmap * ) 
fb_copy_cmap extern int fb_copy_cmap ( const s#fb_cmap * , s#fb_cmap * ) 
s##workqueue_struct
s##sock
s##seq_file
s##vfsmount
s##posix_acl
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##device_private
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##iommu_group
s##iommu_fwspec
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
fb_set_cmap extern int fb_set_cmap ( s#fb_cmap * , s#fb_info * ) 
fb_default_cmap extern const s#fb_cmap * fb_default_cmap ( int ) 
fb_invert_cmaps extern void fb_invert_cmaps ( void ) 

/* drivers/video/fbdev/core/fbmem.o */
s##workqueue_struct
s##sock
s##vfsmount
s##posix_acl
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##device_private
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##iommu_group
s##iommu_fwspec
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##bdi_writeback
s##nlm_lockowner
s##nfs4_lock_state
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
registered_fb extern s#fb_info * registered_fb [ 32 ] 
num_registered_fb extern int num_registered_fb 
lock_fb_info extern int lock_fb_info ( s#fb_info * ) 
fb_get_color_depth extern int fb_get_color_depth ( s#fb_var_screeninfo * , s#fb_fix_screeninfo * ) 
fb_pad_aligned_buffer extern void fb_pad_aligned_buffer ( t#u8 * , t#u32 , t#u8 * , t#u32 , t#u32 ) 
fb_pad_unaligned_buffer extern void fb_pad_unaligned_buffer ( t#u8 * , t#u32 , t#u8 * , t#u32 , t#u32 , t#u32 , t#u32 , t#u32 ) 
fb_get_buffer_offset extern char * fb_get_buffer_offset ( s#fb_info * , s#fb_pixmap * , t#u32 ) 
fb_prepare_logo extern int fb_prepare_logo ( s#fb_info * , int ) 
fb_show_logo extern int fb_show_logo ( s#fb_info * , int ) 
fb_pan_display extern int fb_pan_display ( s#fb_info * , s#fb_var_screeninfo * ) 
fb_set_var extern int fb_set_var ( s#fb_info * , s#fb_var_screeninfo * ) 
fb_blank extern int fb_blank ( s#fb_info * , int ) 
fb_class extern s#class * fb_class 
unlink_framebuffer extern int unlink_framebuffer ( s#fb_info * ) 
remove_conflicting_framebuffers extern int remove_conflicting_framebuffers ( s#apertures_struct * , const char * , t#bool ) 
register_framebuffer extern int register_framebuffer ( s#fb_info * ) 
unregister_framebuffer extern int unregister_framebuffer ( s#fb_info * ) 
fb_set_suspend extern void fb_set_suspend ( s#fb_info * , int ) 

/* drivers/video/fbdev/core/fbmon.o */
s##device_private
s##sock
s##seq_file
s##vfsmount
s##posix_acl
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##iommu_group
s##iommu_fwspec
fb_firmware_edid extern const unsigned char * fb_firmware_edid ( s#device * ) 
fb_parse_edid extern int fb_parse_edid ( unsigned char * , s#fb_var_screeninfo * ) 
fb_edid_to_monspecs extern void fb_edid_to_monspecs ( unsigned char * , s#fb_monspecs * ) 
fb_edid_add_monspecs extern void fb_edid_add_monspecs ( unsigned char * , s#fb_monspecs * ) 
fb_get_mode extern int fb_get_mode ( int , t#u32 , s#fb_var_screeninfo * , s#fb_info * ) 
fb_validate_mode extern int fb_validate_mode ( const s#fb_var_screeninfo * , s#fb_info * ) 
fb_destroy_modedb extern void fb_destroy_modedb ( s#fb_videomode * ) 

/* drivers/video/fbdev/core/fbsysfs.o */
s##workqueue_struct
s##sock
s##seq_file
s##vfsmount
s##posix_acl
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##device_private
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##iommu_group
s##iommu_fwspec
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
framebuffer_alloc extern s#fb_info * framebuffer_alloc ( t#size_t , s#device * ) 
framebuffer_release extern void framebuffer_release ( s#fb_info * ) 

/* drivers/video/fbdev/core/modedb.o */
fb_destroy_modelist extern void fb_destroy_modelist ( s#list_head * ) 
fb_find_best_display extern const s#fb_videomode * fb_find_best_display ( const s#fb_monspecs * , s#list_head * ) 
fb_videomode_to_var extern void fb_videomode_to_var ( s#fb_var_screeninfo * , const s#fb_videomode * ) 
fb_var_to_videomode extern void fb_var_to_videomode ( s#fb_videomode * , const s#fb_var_screeninfo * ) 
fb_mode_is_equal extern int fb_mode_is_equal ( const s#fb_videomode * , const s#fb_videomode * ) 
fb_add_videomode extern int fb_add_videomode ( const s#fb_videomode * , s#list_head * ) 
fb_match_mode extern const s#fb_videomode * fb_match_mode ( const s#fb_var_screeninfo * , s#list_head * ) 
fb_find_best_mode extern const s#fb_videomode * fb_find_best_mode ( const s#fb_var_screeninfo * , s#list_head * ) 
fb_find_nearest_mode extern const s#fb_videomode * fb_find_nearest_mode ( const s#fb_videomode * , s#list_head * ) 
fb_videomode_to_modelist extern void fb_videomode_to_modelist ( const s#fb_videomode * , int , s#list_head * ) 
s##workqueue_struct
s##sock
s##seq_file
s##vfsmount
s##posix_acl
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##device_private
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##iommu_group
s##iommu_fwspec
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
fb_find_mode extern int fb_find_mode ( s#fb_var_screeninfo * , s#fb_info * , const char * , const s#fb_videomode * , unsigned int , const s#fb_videomode * , unsigned int ) 
fb_find_mode_cvt extern int fb_find_mode_cvt ( s#fb_videomode * , int , int ) 

/* drivers/video/fbdev/core/syscopyarea.o */
s##workqueue_struct
s##sock
s##seq_file
s##vfsmount
s##posix_acl
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##device_private
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##iommu_group
s##iommu_fwspec
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
sys_copyarea extern void sys_copyarea ( s#fb_info * , const s#fb_copyarea * ) 

/* drivers/video/fbdev/core/sysfillrect.o */
s##workqueue_struct
s##sock
s##seq_file
s##vfsmount
s##posix_acl
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##device_private
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##iommu_group
s##iommu_fwspec
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
sys_fillrect extern void sys_fillrect ( s#fb_info * , const s#fb_fillrect * ) 

/* drivers/video/fbdev/core/sysimgblt.o */
s##workqueue_struct
s##sock
s##seq_file
s##vfsmount
s##posix_acl
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##device_private
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##iommu_group
s##iommu_fwspec
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
sys_imageblit extern void sys_imageblit ( s#fb_info * , const s#fb_image * ) 

/* drivers/video/hdmi.o */
hdmi_avi_infoframe_init int hdmi_avi_infoframe_init ( s#hdmi_avi_infoframe * ) 
hdmi_avi_infoframe_pack t#ssize_t hdmi_avi_infoframe_pack ( s#hdmi_avi_infoframe * , void * , t#size_t ) 
e#hdmi_spd_sdi enum hdmi_spd_sdi { HDMI_SPD_SDI_UNKNOWN , HDMI_SPD_SDI_DSTB , HDMI_SPD_SDI_DVDP , HDMI_SPD_SDI_DVHS , HDMI_SPD_SDI_HDDVR , HDMI_SPD_SDI_DVC , HDMI_SPD_SDI_DSC , HDMI_SPD_SDI_VCD , HDMI_SPD_SDI_GAME , HDMI_SPD_SDI_PC , HDMI_SPD_SDI_BD , HDMI_SPD_SDI_SACD , HDMI_SPD_SDI_HDDVD , HDMI_SPD_SDI_PMP , } 
s#hdmi_spd_infoframe struct hdmi_spd_infoframe { e#hdmi_infoframe_type type ; unsigned char version ; unsigned char length ; char vendor [ 8 ] ; char product [ 16 ] ; e#hdmi_spd_sdi sdi ; } 
hdmi_spd_infoframe_init int hdmi_spd_infoframe_init ( s#hdmi_spd_infoframe * , const char * , const char * ) 
hdmi_spd_infoframe_pack t#ssize_t hdmi_spd_infoframe_pack ( s#hdmi_spd_infoframe * , void * , t#size_t ) 
e#hdmi_audio_coding_type enum hdmi_audio_coding_type { HDMI_AUDIO_CODING_TYPE_STREAM , HDMI_AUDIO_CODING_TYPE_PCM , HDMI_AUDIO_CODING_TYPE_AC3 , HDMI_AUDIO_CODING_TYPE_MPEG1 , HDMI_AUDIO_CODING_TYPE_MP3 , HDMI_AUDIO_CODING_TYPE_MPEG2 , HDMI_AUDIO_CODING_TYPE_AAC_LC , HDMI_AUDIO_CODING_TYPE_DTS , HDMI_AUDIO_CODING_TYPE_ATRAC , HDMI_AUDIO_CODING_TYPE_DSD , HDMI_AUDIO_CODING_TYPE_EAC3 , HDMI_AUDIO_CODING_TYPE_DTS_HD , HDMI_AUDIO_CODING_TYPE_MLP , HDMI_AUDIO_CODING_TYPE_DST , HDMI_AUDIO_CODING_TYPE_WMA_PRO , HDMI_AUDIO_CODING_TYPE_CXT , } 
e#hdmi_audio_sample_size enum hdmi_audio_sample_size { HDMI_AUDIO_SAMPLE_SIZE_STREAM , HDMI_AUDIO_SAMPLE_SIZE_16 , HDMI_AUDIO_SAMPLE_SIZE_20 , HDMI_AUDIO_SAMPLE_SIZE_24 , } 
e#hdmi_audio_sample_frequency enum hdmi_audio_sample_frequency { HDMI_AUDIO_SAMPLE_FREQUENCY_STREAM , HDMI_AUDIO_SAMPLE_FREQUENCY_32000 , HDMI_AUDIO_SAMPLE_FREQUENCY_44100 , HDMI_AUDIO_SAMPLE_FREQUENCY_48000 , HDMI_AUDIO_SAMPLE_FREQUENCY_88200 , HDMI_AUDIO_SAMPLE_FREQUENCY_96000 , HDMI_AUDIO_SAMPLE_FREQUENCY_176400 , HDMI_AUDIO_SAMPLE_FREQUENCY_192000 , } 
e#hdmi_audio_coding_type_ext enum hdmi_audio_coding_type_ext { HDMI_AUDIO_CODING_TYPE_EXT_CT , HDMI_AUDIO_CODING_TYPE_EXT_HE_AAC , HDMI_AUDIO_CODING_TYPE_EXT_HE_AAC_V2 , HDMI_AUDIO_CODING_TYPE_EXT_MPEG_SURROUND , HDMI_AUDIO_CODING_TYPE_EXT_MPEG4_HE_AAC , HDMI_AUDIO_CODING_TYPE_EXT_MPEG4_HE_AAC_V2 , HDMI_AUDIO_CODING_TYPE_EXT_MPEG4_AAC_LC , HDMI_AUDIO_CODING_TYPE_EXT_DRA , HDMI_AUDIO_CODING_TYPE_EXT_MPEG4_HE_AAC_SURROUND , HDMI_AUDIO_CODING_TYPE_EXT_MPEG4_AAC_LC_SURROUND = 10 , } 
s#hdmi_audio_infoframe struct hdmi_audio_infoframe { e#hdmi_infoframe_type type ; unsigned char version ; unsigned char length ; unsigned char channels ; e#hdmi_audio_coding_type coding_type ; e#hdmi_audio_sample_size sample_size ; e#hdmi_audio_sample_frequency sample_frequency ; e#hdmi_audio_coding_type_ext coding_type_ext ; unsigned char channel_allocation ; unsigned char level_shift_value ; t#bool downmix_inhibit ; } 
hdmi_audio_infoframe_init int hdmi_audio_infoframe_init ( s#hdmi_audio_infoframe * ) 
hdmi_audio_infoframe_pack t#ssize_t hdmi_audio_infoframe_pack ( s#hdmi_audio_infoframe * , void * , t#size_t ) 
hdmi_vendor_infoframe_init int hdmi_vendor_infoframe_init ( s#hdmi_vendor_infoframe * ) 
hdmi_vendor_infoframe_pack t#ssize_t hdmi_vendor_infoframe_pack ( s#hdmi_vendor_infoframe * , void * , t#size_t ) 
s#hdmi_any_infoframe struct hdmi_any_infoframe { e#hdmi_infoframe_type type ; unsigned char version ; unsigned char length ; } 
u#hdmi_vendor_any_infoframe union hdmi_vendor_any_infoframe { struct { e#hdmi_infoframe_type type ; unsigned char version ; unsigned char length ; unsigned int oui ; } any ; s#hdmi_vendor_infoframe hdmi ; } 
u#hdmi_infoframe union hdmi_infoframe { s#hdmi_any_infoframe any ; s#hdmi_avi_infoframe avi ; s#hdmi_spd_infoframe spd ; u#hdmi_vendor_any_infoframe vendor ; s#hdmi_audio_infoframe audio ; } 
hdmi_infoframe_pack t#ssize_t hdmi_infoframe_pack ( u#hdmi_infoframe * , void * , t#size_t ) 
s##device_private
s##sock
s##seq_file
s##file
s##vm_operations_struct
s##vm_area_struct
s##kernfs_open_node
s##kernfs_iattrs
s##module
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##fwnode_handle
s##iommu_group
s##iommu_fwspec
hdmi_infoframe_log void hdmi_infoframe_log ( const char * , s#device * , u#hdmi_infoframe * ) 
hdmi_infoframe_unpack int hdmi_infoframe_unpack ( u#hdmi_infoframe * , void * ) 

/* drivers/virtio/virtio.o */
s##device_private
s##sock
s##seq_file
s##vfsmount
s##posix_acl
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##irq_affinity
virtio_check_driver_offered_feature void virtio_check_driver_offered_feature ( const s#virtio_device * , unsigned int ) 
virtio_config_changed void virtio_config_changed ( s#virtio_device * ) 
virtio_config_disable void virtio_config_disable ( s#virtio_device * ) 
virtio_config_enable void virtio_config_enable ( s#virtio_device * ) 
virtio_add_status void virtio_add_status ( s#virtio_device * , unsigned int ) 
virtio_finalize_features int virtio_finalize_features ( s#virtio_device * ) 
s#virtio_driver struct virtio_driver { s#device_driver driver ; const s#virtio_device_id * id_table ; const unsigned int * feature_table ; unsigned int feature_table_size ; const unsigned int * feature_table_legacy ; unsigned int feature_table_size_legacy ; int ( * validate ) ( s#virtio_device * ) ; int ( * probe ) ( s#virtio_device * ) ; void ( * scan ) ( s#virtio_device * ) ; void ( * remove ) ( s#virtio_device * ) ; void ( * config_changed ) ( s#virtio_device * ) ; int ( * freeze ) ( s#virtio_device * ) ; int ( * restore ) ( s#virtio_device * ) ; } 
register_virtio_driver int register_virtio_driver ( s#virtio_driver * ) 
unregister_virtio_driver void unregister_virtio_driver ( s#virtio_driver * ) 
register_virtio_device int register_virtio_device ( s#virtio_device * ) 
unregister_virtio_device void unregister_virtio_device ( s#virtio_device * ) 
virtio_device_freeze int virtio_device_freeze ( s#virtio_device * ) 
virtio_device_restore int virtio_device_restore ( s#virtio_device * ) 

/* drivers/virtio/virtio_ring.o */
s##device_private
s##sock
s##seq_file
s##vfsmount
s##posix_acl
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##irq_affinity
virtqueue_add_sgs int virtqueue_add_sgs ( s#virtqueue * , s#scatterlist * [ ] , unsigned int , unsigned int , void * , t#gfp_t ) 
virtqueue_add_outbuf int virtqueue_add_outbuf ( s#virtqueue * , s#scatterlist [ ] , unsigned int , void * , t#gfp_t ) 
virtqueue_add_inbuf int virtqueue_add_inbuf ( s#virtqueue * , s#scatterlist [ ] , unsigned int , void * , t#gfp_t ) 
virtqueue_add_inbuf_ctx int virtqueue_add_inbuf_ctx ( s#virtqueue * , s#scatterlist [ ] , unsigned int , void * , void * , t#gfp_t ) 
virtqueue_kick_prepare t#bool virtqueue_kick_prepare ( s#virtqueue * ) 
virtqueue_notify t#bool virtqueue_notify ( s#virtqueue * ) 
virtqueue_kick t#bool virtqueue_kick ( s#virtqueue * ) 
virtqueue_get_buf_ctx void * virtqueue_get_buf_ctx ( s#virtqueue * , unsigned int * , void * * ) 
virtqueue_get_buf void * virtqueue_get_buf ( s#virtqueue * , unsigned int * ) 
virtqueue_disable_cb void virtqueue_disable_cb ( s#virtqueue * ) 
virtqueue_enable_cb_prepare unsigned virtqueue_enable_cb_prepare ( s#virtqueue * ) 
virtqueue_poll t#bool virtqueue_poll ( s#virtqueue * , unsigned ) 
virtqueue_enable_cb t#bool virtqueue_enable_cb ( s#virtqueue * ) 
virtqueue_enable_cb_delayed t#bool virtqueue_enable_cb_delayed ( s#virtqueue * ) 
virtqueue_detach_unused_buf void * virtqueue_detach_unused_buf ( s#virtqueue * ) 
vring_interrupt t#irqreturn_t vring_interrupt ( int , void * ) 
__vring_new_virtqueue s#virtqueue * __vring_new_virtqueue ( unsigned int , s#vring , s#virtio_device * , t#bool , t#bool , t#bool ( * ) ( s#virtqueue * ) , void ( * ) ( s#virtqueue * ) , const char * ) 
virtio_max_dma_size t#size_t virtio_max_dma_size ( s#virtio_device * ) 
vring_create_virtqueue s#virtqueue * vring_create_virtqueue ( unsigned int , unsigned int , unsigned int , s#virtio_device * , t#bool , t#bool , t#bool , t#bool ( * ) ( s#virtqueue * ) , void ( * ) ( s#virtqueue * ) , const char * ) 
vring_new_virtqueue s#virtqueue * vring_new_virtqueue ( unsigned int , unsigned int , unsigned int , s#virtio_device * , t#bool , t#bool , void * , t#bool ( * ) ( s#virtqueue * ) , void ( * ) ( s#virtqueue * ) , const char * ) 
vring_del_virtqueue void vring_del_virtqueue ( s#virtqueue * ) 
vring_transport_features void vring_transport_features ( s#virtio_device * ) 
virtqueue_get_vring_size unsigned int virtqueue_get_vring_size ( s#virtqueue * ) 
virtqueue_is_broken t#bool virtqueue_is_broken ( s#virtqueue * ) 
virtio_break_device void virtio_break_device ( s#virtio_device * ) 
virtqueue_get_desc_addr t#dma_addr_t virtqueue_get_desc_addr ( s#virtqueue * ) 
virtqueue_get_avail_addr t#dma_addr_t virtqueue_get_avail_addr ( s#virtqueue * ) 
virtqueue_get_used_addr t#dma_addr_t virtqueue_get_used_addr ( s#virtqueue * ) 
virtqueue_get_vring const s#vring * virtqueue_get_vring ( s#virtqueue * ) 

/* drivers/watchdog/watchdog_core.o */
s##device_private
s##sock
s##seq_file
s##vfsmount
s##posix_acl
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##iommu_group
s##iommu_fwspec
s#watchdog_info struct watchdog_info { t#__u32 options ; t#__u32 firmware_version ; t#__u8 identity [ 32 ] ; } 
s#watchdog_ops struct watchdog_ops { s#module * owner ; int ( * start ) ( s#watchdog_device * ) ; int ( * stop ) ( s#watchdog_device * ) ; int ( * ping ) ( s#watchdog_device * ) ; unsigned int ( * status ) ( s#watchdog_device * ) ; int ( * set_timeout ) ( s#watchdog_device * , unsigned int ) ; int ( * set_pretimeout ) ( s#watchdog_device * , unsigned int ) ; unsigned int ( * get_timeleft ) ( s#watchdog_device * ) ; int ( * restart ) ( s#watchdog_device * , unsigned long , void * ) ; long ( * ioctl ) ( s#watchdog_device * , unsigned int , unsigned long ) ; } 
s##watchdog_governor
s##watchdog_core_data
s#watchdog_device struct watchdog_device { int id ; s#device * parent ; const s#attribute_group * * groups ; const s#watchdog_info * info ; const s#watchdog_ops * ops ; const s#watchdog_governor * gov ; unsigned int bootstatus ; unsigned int timeout ; unsigned int pretimeout ; unsigned int min_timeout ; unsigned int max_timeout ; unsigned int min_hw_heartbeat_ms ; unsigned int max_hw_heartbeat_ms ; s#notifier_block reboot_nb ; s#notifier_block restart_nb ; void * driver_data ; s#watchdog_core_data * wd_data ; unsigned long status ; s#list_head deferred ; } 
watchdog_init_timeout extern int watchdog_init_timeout ( s#watchdog_device * , unsigned int , s#device * ) 
watchdog_set_restart_priority void watchdog_set_restart_priority ( s#watchdog_device * , int ) 
watchdog_register_device extern int watchdog_register_device ( s#watchdog_device * ) 
watchdog_unregister_device extern void watchdog_unregister_device ( s#watchdog_device * ) 
devm_watchdog_register_device int devm_watchdog_register_device ( s#device * , s#watchdog_device * ) 

/* drivers/watchdog/watchdog_pretimeout.o */
s##device_private
s##sock
s##seq_file
s##file
s##vm_operations_struct
s##vm_area_struct
s##kernfs_open_node
s##kernfs_iattrs
s##module
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##fwnode_handle
s##iommu_group
s##iommu_fwspec
s#watchdog_governor struct watchdog_governor { const char name [ 20 ] ; void ( * pretimeout ) ( s#watchdog_device * ) ; } 
s##watchdog_core_data
watchdog_notify_pretimeout void watchdog_notify_pretimeout ( s#watchdog_device * ) 
watchdog_register_governor int watchdog_register_governor ( s#watchdog_governor * ) 
watchdog_unregister_governor void watchdog_unregister_governor ( s#watchdog_governor * ) 

/* fs/aio.o */
s##posix_acl
s##module
s##device_private
s##sock
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##kmem_cache
s##fs_pin
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##bpf_prog_array
s##cgroup_taskset
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_mq_ctx
s##pipe_inode_info
s##swap_info_struct
s##mem_cgroup
s##blk_mq_hw_ctx
s##blk_mq_alloc_data
s##blk_mq_debugfs_attr
s##blk_queue_stats
s##rq_wb
s##blk_mq_ops
s##workqueue_struct
s##blk_stat_callback
s##blk_trace
s##blk_flush_queue
s##bsg_job
s##throtl_data
s##blk_mq_tag_set
s##hd_geometry
s##pr_ops
s##timer_rand_state
s##disk_events
s##badblocks
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##ring_buffer
s##bpf_prog
s##static_key_mod
s##trace_array
s##tracer
s##trace_buffer
s##ring_buffer_iter
s##event_filter
s##ftrace_hash
s##numa_group
s##task_delay_info
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##kernfs_open_node
s##kernfs_iattrs
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##mtd_info
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
t#kiocb_cancel_fn typedef int ( kiocb_cancel_fn ) ( s#kiocb * ) 
kiocb_set_cancel_fn void kiocb_set_cancel_fn ( s#kiocb * , t#kiocb_cancel_fn * ) 

/* fs/anon_inodes.o */
s##posix_acl
s##sock
s##seq_file
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##pipe_inode_info
s##writeback_control
s##bio_vec
s##swap_info_struct
s##device
s##kmem_cache
s##mem_cgroup
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
anon_inode_getfile s#file * anon_inode_getfile ( const char * , const s#file_operations * , void * , int ) 
anon_inode_getfd int anon_inode_getfd ( const char * , const s#file_operations * , void * , int ) 

/* fs/attr.o */
s##posix_acl
s##vfsmount
s##sock
s##seq_file
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pollfd
s##kmem_cache
s##fs_pin
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##cgroup_namespace
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##pipe_inode_info
s##writeback_control
s##bio_vec
s##swap_info_struct
s##device
s##mem_cgroup
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##kstatfs
s##export_operations
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##cdev
s#fsnotify_mark_connector struct fsnotify_mark_connector { t#spinlock_t lock ; unsigned int flags ; union { s#inode * inode ; s#vfsmount * mnt ; s#fsnotify_mark_connector * destroy_next ; } ; s#hlist_head list ; } 
s##fscrypt_info
setattr_prepare extern int setattr_prepare ( s#dentry * , s#iattr * ) 
inode_newsize_ok extern int inode_newsize_ok ( const s#inode * , t#loff_t ) 
setattr_copy extern void setattr_copy ( s#inode * , const s#iattr * ) 
notify_change extern int notify_change ( s#dentry * , s#iattr * , s#inode * * ) 

/* fs/bad_inode.o */
s##posix_acl
s##vfsmount
s##module
s##writeback_control
s##kstatfs
s##seq_file
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##iov_iter
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cred
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##compat_timespec
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##mem_cgroup
s##uprobe
s##gs_cb
s##swap_info_struct
s##dev_pagemap
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
make_bad_inode extern void make_bad_inode ( s#inode * ) 
is_bad_inode extern t#bool is_bad_inode ( s#inode * ) 
iget_failed extern void iget_failed ( s#inode * ) 

/* fs/block_dev.o */
s##posix_acl
s##sock
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##hd_geometry
s##pr_ops
s##blk_mq_ctx
s##kmem_cache
s##workqueue_struct
s##blk_mq_hw_ctx
s##blk_mq_alloc_data
s##blk_mq_debugfs_attr
s##blk_queue_stats
s##rq_wb
s##blk_mq_ops
s##blk_stat_callback
s##blk_trace
s##blk_flush_queue
s##bsg_job
s##throtl_data
s##blk_mq_tag_set
s##timer_rand_state
s##disk_events
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##kstatfs
s##iomap
s##xattr_handler
s##fscrypt_operations
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
I_BDEV extern s#block_device * I_BDEV ( s#inode * ) 
kill_bdev extern void kill_bdev ( s#block_device * ) 
invalidate_bdev extern void invalidate_bdev ( s#block_device * ) 
set_blocksize extern int set_blocksize ( s#block_device * , int ) 
sb_set_blocksize extern int sb_set_blocksize ( s#super_block * , int ) 
sb_min_blocksize extern int sb_min_blocksize ( s#super_block * , int ) 
sync_blockdev extern int sync_blockdev ( s#block_device * ) 
fsync_bdev extern int fsync_bdev ( s#block_device * ) 
freeze_bdev extern s#super_block * freeze_bdev ( s#block_device * ) 
thaw_bdev extern int thaw_bdev ( s#block_device * , s#super_block * ) 
blkdev_fsync extern int blkdev_fsync ( s#file * , t#loff_t , t#loff_t , int ) 
bdev_read_page extern int bdev_read_page ( s#block_device * , t#sector_t , s#page * ) 
bdev_write_page extern int bdev_write_page ( s#block_device * , t#sector_t , s#page * , s#writeback_control * ) 
blockdev_superblock extern s#super_block * blockdev_superblock 
bdget extern s#block_device * bdget ( t#dev_t ) 
bdgrab extern s#block_device * bdgrab ( s#block_device * ) 
bdput extern void bdput ( s#block_device * ) 
bd_link_disk_holder extern int bd_link_disk_holder ( s#block_device * , s#gendisk * ) 
bd_unlink_disk_holder extern void bd_unlink_disk_holder ( s#block_device * , s#gendisk * ) 
revalidate_disk extern int revalidate_disk ( s#gendisk * ) 
check_disk_change extern int check_disk_change ( s#block_device * ) 
bd_set_size extern void bd_set_size ( s#block_device * , t#loff_t ) 
blkdev_get extern int blkdev_get ( s#block_device * , t#fmode_t , void * ) 
blkdev_get_by_path extern s#block_device * blkdev_get_by_path ( const char * , t#fmode_t , void * ) 
blkdev_get_by_dev extern s#block_device * blkdev_get_by_dev ( t#dev_t , t#fmode_t , void * ) 
blkdev_put extern void blkdev_put ( s#block_device * , t#fmode_t ) 
blkdev_write_iter extern t#ssize_t blkdev_write_iter ( s#kiocb * , s#iov_iter * ) 
blkdev_read_iter extern t#ssize_t blkdev_read_iter ( s#kiocb * , s#iov_iter * ) 
ioctl_by_bdev extern int ioctl_by_bdev ( s#block_device * , unsigned , unsigned long ) 
lookup_bdev extern s#block_device * lookup_bdev ( const char * ) 
__invalidate_device extern int __invalidate_device ( s#block_device * , t#bool ) 

/* fs/buffer.o */
s##posix_acl
s##vfsmount
s##module
s##device_private
s##sock
s##pipe_inode_info
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##kmem_cache
s##fs_pin
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##mempolicy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_mq_ctx
s##blk_mq_hw_ctx
s##blk_mq_alloc_data
s##blk_mq_debugfs_attr
s##blk_queue_stats
s##rq_wb
s##blk_mq_ops
s##workqueue_struct
s##blk_stat_callback
s##blk_flush_queue
s##bsg_job
s##throtl_data
s##blk_mq_tag_set
s##hd_geometry
s##pr_ops
s##timer_rand_state
s##disk_events
s##badblocks
s##robust_list_head
s##futex_pi_state
s##ring_buffer
s##bpf_prog
s##static_key_mod
s##trace_array
s##tracer
s##trace_buffer
s##ring_buffer_iter
s##event_filter
s##ftrace_hash
s##numa_group
s##task_delay_info
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##kernfs_open_node
s##kernfs_iattrs
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
t#bh_end_io_t typedef void ( bh_end_io_t ) ( s#buffer_head * , int ) 
s#buffer_head struct buffer_head { unsigned long b_state ; s#buffer_head * b_this_page ; s#page * b_page ; t#sector_t b_blocknr ; t#size_t b_size ; char * b_data ; s#block_device * b_bdev ; t#bh_end_io_t * b_end_io ; void * b_private ; s#list_head b_assoc_buffers ; s#address_space * b_assoc_map ; t#atomic_t b_count ; } 
init_buffer void init_buffer ( s#buffer_head * , t#bh_end_io_t * , void * ) 
touch_buffer void touch_buffer ( s#buffer_head * ) 
__lock_buffer void __lock_buffer ( s#buffer_head * ) 
unlock_buffer void unlock_buffer ( s#buffer_head * ) 
buffer_check_dirty_writeback void buffer_check_dirty_writeback ( s#page * , t#bool * , t#bool * ) 
__wait_on_buffer void __wait_on_buffer ( s#buffer_head * ) 
end_buffer_read_sync void end_buffer_read_sync ( s#buffer_head * , int ) 
end_buffer_write_sync void end_buffer_write_sync ( s#buffer_head * , int ) 
end_buffer_async_write void end_buffer_async_write ( s#buffer_head * , int ) 
mark_buffer_async_write void mark_buffer_async_write ( s#buffer_head * ) 
sync_mapping_buffers int sync_mapping_buffers ( s#address_space * ) 
mark_buffer_dirty_inode void mark_buffer_dirty_inode ( s#buffer_head * , s#inode * ) 
__set_page_dirty_buffers extern int __set_page_dirty_buffers ( s#page * ) 
invalidate_inode_buffers void invalidate_inode_buffers ( s#inode * ) 
alloc_page_buffers s#buffer_head * alloc_page_buffers ( s#page * , unsigned long , t#bool ) 
mark_buffer_dirty void mark_buffer_dirty ( s#buffer_head * ) 
mark_buffer_write_io_error void mark_buffer_write_io_error ( s#buffer_head * ) 
__brelse void __brelse ( s#buffer_head * ) 
__bforget void __bforget ( s#buffer_head * ) 
__find_get_block s#buffer_head * __find_get_block ( s#block_device * , t#sector_t , unsigned ) 
__getblk_gfp s#buffer_head * __getblk_gfp ( s#block_device * , t#sector_t , unsigned , t#gfp_t ) 
__breadahead void __breadahead ( s#block_device * , t#sector_t , unsigned int ) 
__breadahead_gfp void __breadahead_gfp ( s#block_device * , t#sector_t , unsigned int , t#gfp_t ) 
__bread_gfp s#buffer_head * __bread_gfp ( s#block_device * , t#sector_t , unsigned , t#gfp_t ) 
invalidate_bh_lrus void invalidate_bh_lrus ( void ) 
set_bh_page void set_bh_page ( s#buffer_head * , s#page * , unsigned long ) 
block_invalidatepage void block_invalidatepage ( s#page * , unsigned int , unsigned int ) 
create_empty_buffers void create_empty_buffers ( s#page * , unsigned long , unsigned long ) 
clean_bdev_aliases void clean_bdev_aliases ( s#block_device * , t#sector_t , t#sector_t ) 
t#get_block_t typedef int ( get_block_t ) ( s#inode * , t#sector_t , s#buffer_head * , int ) 
__block_write_full_page int __block_write_full_page ( s#inode * , s#page * , t#get_block_t * , s#writeback_control * , t#bh_end_io_t * ) 
page_zero_new_buffers void page_zero_new_buffers ( s#page * , unsigned , unsigned ) 
__block_write_begin int __block_write_begin ( s#page * , t#loff_t , unsigned , t#get_block_t * ) 
block_write_begin int block_write_begin ( s#address_space * , t#loff_t , unsigned , unsigned , s#page * * , t#get_block_t * ) 
block_write_end int block_write_end ( s#file * , s#address_space * , t#loff_t , unsigned , unsigned , s#page * , void * ) 
generic_write_end int generic_write_end ( s#file * , s#address_space * , t#loff_t , unsigned , unsigned , s#page * , void * ) 
block_is_partially_uptodate int block_is_partially_uptodate ( s#page * , unsigned long , unsigned long ) 
block_read_full_page int block_read_full_page ( s#page * , t#get_block_t * ) 
generic_cont_expand_simple int generic_cont_expand_simple ( s#inode * , t#loff_t ) 
cont_write_begin int cont_write_begin ( s#file * , s#address_space * , t#loff_t , unsigned , unsigned , s#page * * , void * * , t#get_block_t * , t#loff_t * ) 
block_commit_write int block_commit_write ( s#page * , unsigned , unsigned ) 
block_page_mkwrite int block_page_mkwrite ( s#vm_area_struct * , s#vm_fault * , t#get_block_t ) 
nobh_write_begin int nobh_write_begin ( s#address_space * , t#loff_t , unsigned , unsigned , s#page * * , void * * , t#get_block_t * ) 
nobh_write_end int nobh_write_end ( s#file * , s#address_space * , t#loff_t , unsigned , unsigned , s#page * , void * ) 
nobh_writepage int nobh_writepage ( s#page * , t#get_block_t * , s#writeback_control * ) 
nobh_truncate_page int nobh_truncate_page ( s#address_space * , t#loff_t , t#get_block_t * ) 
block_truncate_page int block_truncate_page ( s#address_space * , t#loff_t , t#get_block_t * ) 
block_write_full_page int block_write_full_page ( s#page * , t#get_block_t * , s#writeback_control * ) 
generic_block_bmap t#sector_t generic_block_bmap ( s#address_space * , t#sector_t , t#get_block_t * ) 
submit_bh int submit_bh ( int , int , s#buffer_head * ) 
ll_rw_block void ll_rw_block ( int , int , int , s#buffer_head * [ ] ) 
write_dirty_buffer void write_dirty_buffer ( s#buffer_head * , int ) 
__sync_dirty_buffer int __sync_dirty_buffer ( s#buffer_head * , int ) 
sync_dirty_buffer int sync_dirty_buffer ( s#buffer_head * ) 
try_to_free_buffers int try_to_free_buffers ( s#page * ) 
alloc_buffer_head s#buffer_head * alloc_buffer_head ( t#gfp_t ) 
free_buffer_head void free_buffer_head ( s#buffer_head * ) 
bh_uptodate_or_lock int bh_uptodate_or_lock ( s#buffer_head * ) 
bh_submit_read int bh_submit_read ( s#buffer_head * ) 

/* fs/char_dev.o */
register_chrdev_region extern int register_chrdev_region ( t#dev_t , unsigned , const char * ) 
unregister_chrdev_region extern void unregister_chrdev_region ( t#dev_t , unsigned ) 
alloc_chrdev_region extern int alloc_chrdev_region ( t#dev_t * , unsigned , unsigned , const char * ) 
s##sock
s##vfsmount
s##posix_acl
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##device_private
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pollfd
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##bpf_prog_array
s##cgroup_taskset
s##pipe_inode_info
s##swap_info_struct
s##kmem_cache
s##mem_cgroup
s##mempolicy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_mq_ctx
s##blk_mq_hw_ctx
s##blk_mq_alloc_data
s##blk_mq_debugfs_attr
s##blk_queue_stats
s##rq_wb
s##blk_mq_ops
s##workqueue_struct
s##blk_stat_callback
s##blk_trace
s##blk_flush_queue
s##bsg_job
s##throtl_data
s##blk_mq_tag_set
s##hd_geometry
s##pr_ops
s##timer_rand_state
s##disk_events
s##badblocks
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##mtd_info
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
cdev_init void cdev_init ( s#cdev * , const s#file_operations * ) 
cdev_alloc s#cdev * cdev_alloc ( void ) 
cdev_del void cdev_del ( s#cdev * ) 
cdev_add int cdev_add ( s#cdev * , t#dev_t , unsigned ) 
cdev_set_parent void cdev_set_parent ( s#cdev * , s#kobject * ) 
cdev_device_add int cdev_device_add ( s#cdev * , s#device * ) 
cdev_device_del void cdev_device_del ( s#cdev * , s#device * ) 
__register_chrdev extern int __register_chrdev ( unsigned int , unsigned int , unsigned int , const char * , const s#file_operations * ) 
__unregister_chrdev extern void __unregister_chrdev ( unsigned int , unsigned int , unsigned int , const char * ) 

/* fs/configfs/dir.o */
s##sock
s##seq_file
s##posix_acl
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##device
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
configfs_remove_default_groups void configfs_remove_default_groups ( s#config_group * ) 
configfs_depend_item int configfs_depend_item ( s#configfs_subsystem * , s#config_item * ) 
configfs_undepend_item void configfs_undepend_item ( s#config_item * ) 
configfs_depend_item_unlocked int configfs_depend_item_unlocked ( s#configfs_subsystem * , s#config_item * ) 
configfs_register_group int configfs_register_group ( s#config_group * , s#config_group * ) 
configfs_unregister_group void configfs_unregister_group ( s#config_group * ) 
configfs_register_default_group s#config_group * configfs_register_default_group ( s#config_group * , const char * , const s#config_item_type * ) 
configfs_unregister_default_group void configfs_unregister_default_group ( s#config_group * ) 
configfs_register_subsystem int configfs_register_subsystem ( s#configfs_subsystem * ) 
configfs_unregister_subsystem void configfs_unregister_subsystem ( s#configfs_subsystem * ) 

/* fs/configfs/item.o */
s##sock
s##seq_file
s##vfsmount
s##posix_acl
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##device
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
config_item_set_name extern __attribute__ ( ( format ( printf , 2 , 3 ) ) ) int config_item_set_name ( s#config_item * , const char * , ... ) 
config_item_init_type_name extern void config_item_init_type_name ( s#config_item * , const char * , const s#config_item_type * ) 
config_group_init_type_name extern void config_group_init_type_name ( s#config_group * , const char * , const s#config_item_type * ) 
config_item_get extern s#config_item * config_item_get ( s#config_item * ) 
config_item_get_unless_zero extern s#config_item * config_item_get_unless_zero ( s#config_item * ) 
config_item_put extern void config_item_put ( s#config_item * ) 
config_group_init extern void config_group_init ( s#config_group * ) 
config_group_find_item extern s#config_item * config_group_find_item ( s#config_group * , const char * ) 

/* fs/coredump.o */
s##posix_acl
s##sock
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##kmem_cache
s##fs_pin
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##nameidata
s##sem_undo_list
s#fs_struct struct fs_struct { int users ; t#spinlock_t lock ; t#seqcount_t seq ; int umask ; int in_exec ; s#path root , pwd ; } 
s##ipc_namespace
s##mnt_namespace
s##net
s##bpf_prog_array
s##cgroup_taskset
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##fwnode_handle
s##iommu_group
s##iommu_fwspec
s##workqueue_struct
s##hd_struct
s##eventfd_ctx
s##blk_plug
s##robust_list_head
s##futex_pi_state
s##ring_buffer
s##bpf_prog
s##static_key_mod
s##trace_array
s##tracer
s##trace_buffer
s##ring_buffer_iter
s##event_filter
s##ftrace_hash
s##mempolicy
s##numa_group
s##task_delay_info
s##uprobe
s##gs_cb
s#linux_binprm struct linux_binprm { char buf [ 128 ] ; s#vm_area_struct * vma ; unsigned long vma_pages ; s#mm_struct * mm ; unsigned long p ; unsigned int cred_prepared : 1 , cap_effective : 1 ; unsigned int recursion_depth ; s#file * file ; s#cred * cred ; int unsafe ; unsigned int per_clear ; int argc , envc ; const char * filename ; const char * interp ; unsigned interp_flags ; unsigned interp_data ; unsigned long loader , exec ; } 
s#linux_binfmt struct linux_binfmt { s#list_head lh ; s#module * module ; int ( * load_binary ) ( s#linux_binprm * ) ; int ( * load_shlib ) ( s#file * ) ; int ( * core_dump ) ( s#coredump_params * ) ; unsigned long min_coredump ; } 
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##mtd_info
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fscrypt_info
s#coredump_params struct coredump_params { const t#siginfo_t * siginfo ; s#pt_regs * regs ; s#file * file ; unsigned long limit ; unsigned long mm_flags ; t#loff_t written ; t#loff_t pos ; } 
dump_emit extern int dump_emit ( s#coredump_params * , const void * , int ) 
dump_skip extern int dump_skip ( s#coredump_params * , t#size_t ) 
dump_align extern int dump_align ( s#coredump_params * , int ) 
dump_truncate extern void dump_truncate ( s#coredump_params * ) 

/* fs/crypto/bio.o */
s##posix_acl
s##vfsmount
s##sock
s##seq_file
s##pipe_inode_info
s##poll_table_struct
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##kmem_cache
s##cgroup_subsys_state
s##workqueue_struct
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##mem_cgroup
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s#fscrypt_operations struct fscrypt_operations { unsigned int flags ; const char * key_prefix ; int ( * get_context ) ( s#inode * , void * , t#size_t ) ; int ( * set_context ) ( s#inode * , const void * , t#size_t , void * ) ; int ( * dummy_context ) ( s#inode * ) ; t#bool ( * is_encrypted ) ( s#inode * ) ; t#bool ( * empty_dir ) ( s#inode * ) ; unsigned ( * max_namelen ) ( s#inode * ) ; } 
s##hd_struct
s##mtd_info
s##bdi_writeback
s##cdev
s##fsnotify_mark_connector
s##scatterlist
s##crypto_type
s#fscrypt_info struct fscrypt_info { t#u8 ci_data_mode ; t#u8 ci_filename_mode ; t#u8 ci_flags ; s#crypto_skcipher * ci_ctfm ; t#u8 ci_master_key [ 8 ] ; } 
s##swap_info_struct
s##device
s#fscrypt_ctx struct fscrypt_ctx { union { struct { s#page * bounce_page ; s#page * control_page ; } w ; struct { s#bio * bio ; s#work_struct work ; } r ; s#list_head free_list ; } ; t#u8 flags ; } 
fscrypt_decrypt_bio_pages extern void fscrypt_decrypt_bio_pages ( s#fscrypt_ctx * , s#bio * ) 
fscrypt_pullback_bio_page extern void fscrypt_pullback_bio_page ( s#page * * , t#bool ) 
fscrypt_zeroout_range extern int fscrypt_zeroout_range ( const s#inode * , unsigned long , t#sector_t , unsigned int ) 

/* fs/crypto/crypto.o */
s##posix_acl
s##vfsmount
s##sock
s##seq_file
s##pipe_inode_info
s##poll_table_struct
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##kmem_cache
s##cgroup_subsys_state
s##workqueue_struct
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##mem_cgroup
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##mtd_info
s##bdi_writeback
s##cdev
s##fsnotify_mark_connector
s##crypto_type
s##swap_info_struct
s##device
fscrypt_release_ctx extern void fscrypt_release_ctx ( s#fscrypt_ctx * ) 
fscrypt_get_ctx extern s#fscrypt_ctx * fscrypt_get_ctx ( const s#inode * , t#gfp_t ) 
fscrypt_encrypt_page extern s#page * fscrypt_encrypt_page ( const s#inode * , s#page * , unsigned int , unsigned int , t#u64 , t#gfp_t ) 
fscrypt_decrypt_page extern int fscrypt_decrypt_page ( const s#inode * , s#page * , unsigned int , unsigned int , t#u64 ) 
fscrypt_d_ops extern const s#dentry_operations fscrypt_d_ops 
fscrypt_restore_control_page extern void fscrypt_restore_control_page ( s#page * ) 

/* fs/crypto/fname.o */
s##posix_acl
s##vfsmount
s##module
s##writeback_control
s##kstatfs
s##seq_file
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##iov_iter
s##poll_table_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cred
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##compat_timespec
s##pollfd
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##kmem_cache
s##cgroup_subsys_state
s##workqueue_struct
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##swap_info_struct
s##device
s##export_operations
s##xattr_handler
s##hd_struct
s##mtd_info
s##bdi_writeback
s##cdev
s##fsnotify_mark_connector
s##crypto_type
fscrypt_fname_encrypted_size extern t#u32 fscrypt_fname_encrypted_size ( const s#inode * , t#u32 ) 
s#fscrypt_str struct fscrypt_str { unsigned char * name ; t#u32 len ; } 
fscrypt_fname_alloc_buffer extern int fscrypt_fname_alloc_buffer ( const s#inode * , t#u32 , s#fscrypt_str * ) 
fscrypt_fname_free_buffer extern void fscrypt_fname_free_buffer ( s#fscrypt_str * ) 
fscrypt_fname_disk_to_usr extern int fscrypt_fname_disk_to_usr ( s#inode * , t#u32 , t#u32 , const s#fscrypt_str * , s#fscrypt_str * ) 
fscrypt_fname_usr_to_disk extern int fscrypt_fname_usr_to_disk ( s#inode * , const s#qstr * , s#fscrypt_str * ) 
s#fscrypt_name struct fscrypt_name { const s#qstr * usr_fname ; s#fscrypt_str disk_name ; t#u32 hash ; t#u32 minor_hash ; s#fscrypt_str crypto_buf ; } 
fscrypt_setup_filename extern int fscrypt_setup_filename ( s#inode * , const s#qstr * , int , s#fscrypt_name * ) 
fscrypt_free_filename extern void fscrypt_free_filename ( s#fscrypt_name * ) 

/* fs/crypto/keyinfo.o */
s##posix_acl
s##vfsmount
s##module
s##writeback_control
s##kstatfs
s##seq_file
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##iov_iter
s##poll_table_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cred
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##compat_timespec
s##pollfd
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##kmem_cache
s##cgroup_subsys_state
s##workqueue_struct
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##swap_info_struct
s##device
s##export_operations
s##xattr_handler
s##hd_struct
s##mtd_info
s##bdi_writeback
s##cdev
s##fsnotify_mark_connector
s##crypto_type
fscrypt_get_encryption_info extern int fscrypt_get_encryption_info ( s#inode * ) 
fscrypt_put_encryption_info extern void fscrypt_put_encryption_info ( s#inode * , s#fscrypt_info * ) 

/* fs/crypto/policy.o */
s##posix_acl
s##module
s##writeback_control
s##kstatfs
s##seq_file
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##compat_timespec
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##kmem_cache
s##cgroup_subsys_state
s##workqueue_struct
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##iov_iter
s##swap_info_struct
s##device
s##export_operations
s##xattr_handler
s##hd_struct
s##mtd_info
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##scatterlist
s##crypto_type
fscrypt_ioctl_set_policy extern int fscrypt_ioctl_set_policy ( s#file * , const void * ) 
fscrypt_ioctl_get_policy extern int fscrypt_ioctl_get_policy ( s#file * , void * ) 
fscrypt_has_permitted_context extern int fscrypt_has_permitted_context ( s#inode * , s#inode * ) 
fscrypt_inherit_context extern int fscrypt_inherit_context ( s#inode * , s#inode * , void * , t#bool ) 

/* fs/dax.o */
s##posix_acl
s##vfsmount
s##module
s##device_private
s##sock
s##pipe_inode_info
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##compat_timespec
s##kmem_cache
s##fs_pin
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##mempolicy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_mq_ctx
s##blkcg_gq
s##blk_mq_hw_ctx
s##blk_mq_alloc_data
s##blk_mq_debugfs_attr
s##blk_queue_stats
s##rq_wb
s##blk_mq_ops
s##workqueue_struct
s##blk_stat_callback
s##blk_trace
s##blk_flush_queue
s##bsg_job
s##throtl_data
s##blk_mq_tag_set
s##hd_geometry
s##pr_ops
s##timer_rand_state
s##disk_events
s##badblocks
s##reclaim_state
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##ring_buffer
s##bpf_prog
s##static_key_mod
s##trace_array
s##tracer
s##trace_buffer
s##ring_buffer_iter
s##event_filter
s##ftrace_hash
s##numa_group
s##task_delay_info
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##kernfs_open_node
s##kernfs_iattrs
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
dax_layout_busy_page s#page * dax_layout_busy_page ( s#address_space * ) 
dax_writeback_mapping_range int dax_writeback_mapping_range ( s#address_space * , s#block_device * , s#writeback_control * ) 
s##dax_device
__dax_zero_page_range int __dax_zero_page_range ( s#block_device * , s#dax_device * , t#sector_t , unsigned int , unsigned int ) 
s#iomap struct iomap { t#sector_t blkno ; t#loff_t offset ; t#u64 length ; t#u16 type ; t#u16 flags ; s#block_device * bdev ; s#dax_device * dax_dev ; } 
s#iomap_ops struct iomap_ops { int ( * iomap_begin ) ( s#inode * , t#loff_t , t#loff_t , unsigned , s#iomap * ) ; int ( * iomap_end ) ( s#inode * , t#loff_t , t#loff_t , t#ssize_t , unsigned , s#iomap * ) ; } 
dax_iomap_rw t#ssize_t dax_iomap_rw ( s#kiocb * , s#iov_iter * , const s#iomap_ops * ) 
dax_iomap_fault int dax_iomap_fault ( s#vm_fault * , e#page_entry_size , t#pfn_t * , int * , const s#iomap_ops * ) 
dax_finish_sync_fault int dax_finish_sync_fault ( s#vm_fault * , e#page_entry_size , t#pfn_t ) 

/* fs/dcache.o */
sysctl_vfs_cache_pressure extern int sysctl_vfs_cache_pressure 
rename_lock extern t#seqlock_t rename_lock 
s#name_snapshot struct name_snapshot { const unsigned char * name ; unsigned char inline_name [ 32 ] ; } 
s##posix_acl
s##module
s##device_private
s##sock
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##compat_timespec
s##kmem_cache
s#fs_pin struct fs_pin { t#wait_queue_head_t wait ; int done ; s#hlist_node s_list ; s#hlist_node m_list ; void ( * kill ) ( s#fs_pin * ) ; } 
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##nameidata
s##sem_undo_list
s##files_struct
s##uts_namespace
s##ipc_namespace
s#mnt_pcp struct mnt_pcp { int mnt_count ; int mnt_writers ; } 
s#mountpoint struct mountpoint { s#hlist_node m_hash ; s#dentry * m_dentry ; s#hlist_head m_list ; int m_count ; } 
s#mount struct mount { s#hlist_node mnt_hash ; s#mount * mnt_parent ; s#dentry * mnt_mountpoint ; s#vfsmount mnt ; union { s#callback_head mnt_rcu ; s#llist_node mnt_llist ; } ; s#mnt_pcp * mnt_pcp ; s#list_head mnt_mounts ; s#list_head mnt_child ; s#list_head mnt_instance ; const char * mnt_devname ; s#list_head mnt_list ; s#list_head mnt_expire ; s#list_head mnt_share ; s#list_head mnt_slave_list ; s#list_head mnt_slave ; s#mount * mnt_master ; s#mnt_namespace * mnt_ns ; s#mountpoint * mnt_mp ; s#hlist_node mnt_mp_list ; s#list_head mnt_umounting ; s#fsnotify_mark_connector * mnt_fsnotify_marks ; t#__u32 mnt_fsnotify_mask ; int mnt_id ; int mnt_group_id ; int mnt_expiry_mark ; s#hlist_head mnt_pins ; s#fs_pin mnt_umount ; s#dentry * mnt_ex_mountpoint ; } 
s#mnt_namespace struct mnt_namespace { t#atomic_t count ; s#ns_common ns ; s#mount * root ; s#list_head list ; s#user_namespace * user_ns ; s#ucounts * ucounts ; t#u64 seq ; t#wait_queue_head_t poll ; t#u64 event ; unsigned int mounts ; unsigned int pending_mounts ; } 
s##net
s##bpf_prog_array
s##cgroup_taskset
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##iov_iter
s##hd_struct
s##eventfd_ctx
s##workqueue_struct
s##blk_plug
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##ring_buffer
s##bpf_prog
s##static_key_mod
s##trace_array
s##tracer
s##trace_buffer
s##ring_buffer_iter
s##event_filter
s##ftrace_hash
s##mempolicy
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##kernfs_open_node
s##kernfs_iattrs
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##mtd_info
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fscrypt_info
take_dentry_name_snapshot void take_dentry_name_snapshot ( s#name_snapshot * , s#dentry * ) 
release_dentry_name_snapshot void release_dentry_name_snapshot ( s#name_snapshot * ) 
__d_drop extern void __d_drop ( s#dentry * ) 
d_drop extern void d_drop ( s#dentry * ) 
dput extern void dput ( s#dentry * ) 
dget_parent extern s#dentry * dget_parent ( s#dentry * ) 
d_find_alias extern s#dentry * d_find_alias ( s#inode * ) 
d_prune_aliases extern void d_prune_aliases ( s#inode * ) 
shrink_dcache_sb extern void shrink_dcache_sb ( s#super_block * ) 
path_has_submounts extern int path_has_submounts ( const s#path * ) 
shrink_dcache_parent extern void shrink_dcache_parent ( s#dentry * ) 
d_invalidate extern void d_invalidate ( s#dentry * ) 
d_alloc extern s#dentry * d_alloc ( s#dentry * , const s#qstr * ) 
d_alloc_pseudo extern s#dentry * d_alloc_pseudo ( s#super_block * , const s#qstr * ) 
d_alloc_name s#dentry * d_alloc_name ( s#dentry * , const char * ) 
d_set_d_op extern void d_set_d_op ( s#dentry * , const s#dentry_operations * ) 
d_set_fallthru extern void d_set_fallthru ( s#dentry * ) 
d_instantiate extern void d_instantiate ( s#dentry * , s#inode * ) 
d_instantiate_new extern void d_instantiate_new ( s#dentry * , s#inode * ) 
d_instantiate_no_diralias extern int d_instantiate_no_diralias ( s#dentry * , s#inode * ) 
d_make_root extern s#dentry * d_make_root ( s#inode * ) 
d_find_any_alias extern s#dentry * d_find_any_alias ( s#inode * ) 
d_obtain_alias extern s#dentry * d_obtain_alias ( s#inode * ) 
d_obtain_root extern s#dentry * d_obtain_root ( s#inode * ) 
d_add_ci extern s#dentry * d_add_ci ( s#dentry * , s#inode * , s#qstr * ) 
d_lookup extern s#dentry * d_lookup ( const s#dentry * , const s#qstr * ) 
d_hash_and_lookup extern s#dentry * d_hash_and_lookup ( s#dentry * , s#qstr * ) 
d_delete extern void d_delete ( s#dentry * ) 
d_rehash extern void d_rehash ( s#dentry * ) 
d_alloc_parallel extern s#dentry * d_alloc_parallel ( s#dentry * , const s#qstr * , t#wait_queue_head_t * ) 
__d_lookup_done extern void __d_lookup_done ( s#dentry * ) 
d_add extern void d_add ( s#dentry * , s#inode * ) 
d_exact_alias extern s#dentry * d_exact_alias ( s#dentry * , s#inode * ) 
dentry_update_name_case extern void dentry_update_name_case ( s#dentry * , const s#qstr * ) 
d_move extern void d_move ( s#dentry * , s#dentry * ) 
d_splice_alias extern s#dentry * d_splice_alias ( s#inode * , s#dentry * ) 
d_path extern char * d_path ( const s#path * , char * , int ) 
simple_dname extern char * simple_dname ( s#dentry * , char * , int ) 
dentry_path_raw extern char * dentry_path_raw ( s#dentry * , char * , int ) 
d_tmpfile extern void d_tmpfile ( s#dentry * , s#inode * ) 
names_cachep extern s#kmem_cache * names_cachep 
d_genocide extern void d_genocide ( s#dentry * ) 

/* fs/dcookies.o */
s##dcookie_user
dcookie_register s#dcookie_user * dcookie_register ( void ) 
dcookie_unregister void dcookie_unregister ( s#dcookie_user * ) 
s##posix_acl
s##module
s##bio_vec
s##pipe_inode_info
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##kmem_cache
s##fs_pin
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##writeback_control
s##swap_info_struct
s##device_private
s##sock
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##fwnode_handle
s##iommu_group
s##iommu_fwspec
s##mem_cgroup
s##mempolicy
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##robust_list_head
s##futex_pi_state
s##ring_buffer
s##bpf_prog
s##static_key_mod
s##trace_array
s##tracer
s##trace_buffer
s##ring_buffer_iter
s##event_filter
s##ftrace_hash
s##numa_group
s##task_delay_info
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
get_dcookie int get_dcookie ( const s#path * , unsigned long * ) 

/* fs/debugfs/file.o */
s##sock
s##vfsmount
s##posix_acl
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
debugfs_real_fops const s#file_operations * debugfs_real_fops ( const s#file * ) 
debugfs_file_get int debugfs_file_get ( s#dentry * ) 
debugfs_file_put void debugfs_file_put ( s#dentry * ) 
debugfs_attr_read t#ssize_t debugfs_attr_read ( s#file * , char * , t#size_t , t#loff_t * ) 
debugfs_attr_write t#ssize_t debugfs_attr_write ( s#file * , const char * , t#size_t , t#loff_t * ) 
debugfs_create_u8 s#dentry * debugfs_create_u8 ( const char * , t#umode_t , s#dentry * , t#u8 * ) 
debugfs_create_u16 s#dentry * debugfs_create_u16 ( const char * , t#umode_t , s#dentry * , t#u16 * ) 
debugfs_create_u32 s#dentry * debugfs_create_u32 ( const char * , t#umode_t , s#dentry * , t#u32 * ) 
debugfs_create_u64 s#dentry * debugfs_create_u64 ( const char * , t#umode_t , s#dentry * , t#u64 * ) 
debugfs_create_ulong s#dentry * debugfs_create_ulong ( const char * , t#umode_t , s#dentry * , unsigned long * ) 
debugfs_create_x8 s#dentry * debugfs_create_x8 ( const char * , t#umode_t , s#dentry * , t#u8 * ) 
debugfs_create_x16 s#dentry * debugfs_create_x16 ( const char * , t#umode_t , s#dentry * , t#u16 * ) 
debugfs_create_x32 s#dentry * debugfs_create_x32 ( const char * , t#umode_t , s#dentry * , t#u32 * ) 
debugfs_create_x64 s#dentry * debugfs_create_x64 ( const char * , t#umode_t , s#dentry * , t#u64 * ) 
debugfs_create_size_t s#dentry * debugfs_create_size_t ( const char * , t#umode_t , s#dentry * , t#size_t * ) 
debugfs_create_atomic_t s#dentry * debugfs_create_atomic_t ( const char * , t#umode_t , s#dentry * , t#atomic_t * ) 
debugfs_read_file_bool t#ssize_t debugfs_read_file_bool ( s#file * , char * , t#size_t , t#loff_t * ) 
debugfs_write_file_bool t#ssize_t debugfs_write_file_bool ( s#file * , const char * , t#size_t , t#loff_t * ) 
debugfs_create_bool s#dentry * debugfs_create_bool ( const char * , t#umode_t , s#dentry * , t#bool * ) 
s#debugfs_blob_wrapper struct debugfs_blob_wrapper { void * data ; unsigned long size ; } 
debugfs_create_blob s#dentry * debugfs_create_blob ( const char * , t#umode_t , s#dentry * , s#debugfs_blob_wrapper * ) 
debugfs_create_u32_array s#dentry * debugfs_create_u32_array ( const char * , t#umode_t , s#dentry * , t#u32 * , t#u32 ) 
s#debugfs_reg32 struct debugfs_reg32 { char * name ; unsigned long offset ; } 
debugfs_print_regs32 void debugfs_print_regs32 ( s#seq_file * , const s#debugfs_reg32 * , int , void * , char * ) 
s#debugfs_regset32 struct debugfs_regset32 { const s#debugfs_reg32 * regs ; int nregs ; void * base ; } 
debugfs_create_regset32 s#dentry * debugfs_create_regset32 ( const char * , t#umode_t , s#dentry * , s#debugfs_regset32 * ) 
debugfs_create_devm_seqfile s#dentry * debugfs_create_devm_seqfile ( s#device * , const char * , s#dentry * , int ( * ) ( s#seq_file * , void * ) ) 

/* fs/debugfs/inode.o */
s##posix_acl
s##sock
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pollfd
s##kmem_cache
s##fs_pin
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##cgroup_namespace
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##pipe_inode_info
s##writeback_control
s##bio_vec
s##swap_info_struct
s##device
s##mem_cgroup
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##bdi_writeback
s##cdev
s##fscrypt_info
debugfs_lookup s#dentry * debugfs_lookup ( const char * , s#dentry * ) 
debugfs_create_file s#dentry * debugfs_create_file ( const char * , t#umode_t , s#dentry * , void * , const s#file_operations * ) 
debugfs_create_file_unsafe s#dentry * debugfs_create_file_unsafe ( const char * , t#umode_t , s#dentry * , void * , const s#file_operations * ) 
debugfs_create_file_size s#dentry * debugfs_create_file_size ( const char * , t#umode_t , s#dentry * , void * , const s#file_operations * , t#loff_t ) 
debugfs_create_dir s#dentry * debugfs_create_dir ( const char * , s#dentry * ) 
t#debugfs_automount_t typedef s#vfsmount * ( * debugfs_automount_t ) ( s#dentry * , void * ) 
debugfs_create_automount s#dentry * debugfs_create_automount ( const char * , s#dentry * , t#debugfs_automount_t , void * ) 
debugfs_create_symlink s#dentry * debugfs_create_symlink ( const char * , s#dentry * , const char * ) 
debugfs_remove void debugfs_remove ( s#dentry * ) 
debugfs_remove_recursive void debugfs_remove_recursive ( s#dentry * ) 
debugfs_rename s#dentry * debugfs_rename ( s#dentry * , s#dentry * , s#dentry * , const char * ) 
debugfs_initialized t#bool debugfs_initialized ( void ) 

/* fs/direct-io.o */
s##device_private
s##sock
s##seq_file
s##vfsmount
s##posix_acl
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##reclaim_state
s##workqueue_struct
s##cgroup_subsys_state
s##blk_mq_ctx
s##blkcg_gq
s##kmem_cache
s##blk_mq_hw_ctx
s##blk_mq_alloc_data
s##blk_mq_debugfs_attr
s##blk_queue_stats
s##rq_wb
s##blk_mq_ops
s##blk_stat_callback
s##blk_trace
s##blk_flush_queue
s##bsg_job
s##throtl_data
s##blk_mq_tag_set
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##swap_info_struct
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##mtd_info
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##hd_geometry
s##pr_ops
s##timer_rand_state
s##disk_events
s##badblocks
dio_end_io void dio_end_io ( s#bio * ) 
t#dio_iodone_t typedef int ( dio_iodone_t ) ( s#kiocb * , t#loff_t , t#ssize_t , void * ) 
t#dio_submit_t typedef void ( dio_submit_t ) ( s#bio * , s#inode * , t#loff_t ) 
__blockdev_direct_IO t#ssize_t __blockdev_direct_IO ( s#kiocb * , s#inode * , s#block_device * , s#iov_iter * , t#get_block_t , t#dio_iodone_t , t#dio_submit_t , int ) 

/* fs/dlm/main.o */
s#dlm_slot struct dlm_slot { int nodeid ; int slot ; } 
s#dlm_lockspace_ops struct dlm_lockspace_ops { void ( * recover_prep ) ( void * ) ; void ( * recover_slot ) ( void * , s#dlm_slot * ) ; void ( * recover_done ) ( void * , s#dlm_slot * , int , int , t#uint32_t ) ; } 
t#dlm_lockspace_t typedef void dlm_lockspace_t 
dlm_new_lockspace int dlm_new_lockspace ( const char * , const char * , t#uint32_t , int , const s#dlm_lockspace_ops * , void * , int * , t#dlm_lockspace_t * * ) 
dlm_release_lockspace int dlm_release_lockspace ( t#dlm_lockspace_t * , int ) 
s#dlm_lksb struct dlm_lksb { int sb_status ; t#__u32 sb_lkid ; char sb_flags ; char * sb_lvbptr ; } 
dlm_lock int dlm_lock ( t#dlm_lockspace_t * , int , s#dlm_lksb * , t#uint32_t , void * , unsigned int , t#uint32_t , void ( * ) ( void * ) , void * , void ( * ) ( void * , int ) ) 
dlm_unlock int dlm_unlock ( t#dlm_lockspace_t * , t#uint32_t , t#uint32_t , s#dlm_lksb * , void * ) 

/* fs/dlm/plock.o */
s##vfsmount
s##posix_acl
s##module
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##mmu_notifier_mm
s##xol_area
s##compat_timespec
s##pid_namespace
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##mem_cgroup
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##dev_pagemap
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
dlm_posix_lock int dlm_posix_lock ( t#dlm_lockspace_t * , t#u64 , s#file * , int , s#file_lock * ) 
dlm_posix_unlock int dlm_posix_unlock ( t#dlm_lockspace_t * , t#u64 , s#file * , s#file_lock * ) 
dlm_posix_get int dlm_posix_get ( t#dlm_lockspace_t * , t#u64 , s#file * , s#file_lock * ) 

/* fs/eventfd.o */
s##eventfd_ctx
eventfd_signal t#__u64 eventfd_signal ( s#eventfd_ctx * , t#__u64 ) 
eventfd_ctx_get s#eventfd_ctx * eventfd_ctx_get ( s#eventfd_ctx * ) 
eventfd_ctx_put void eventfd_ctx_put ( s#eventfd_ctx * ) 
eventfd_ctx_remove_wait_queue int eventfd_ctx_remove_wait_queue ( s#eventfd_ctx * , t#wait_queue_entry_t * , t#__u64 * ) 
eventfd_ctx_read t#ssize_t eventfd_ctx_read ( s#eventfd_ctx * , int , t#__u64 * ) 
s##vfsmount
s##posix_acl
s##module
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##mmu_notifier_mm
s##xol_area
s##compat_timespec
s##kmem_cache
s##fs_pin
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##device_private
s##sock
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##fwnode_handle
s##iommu_group
s##iommu_fwspec
s##ring_buffer
s##bpf_prog
s##static_key_mod
s##trace_array
s##tracer
s##trace_buffer
s##ring_buffer_iter
s##event_filter
s##ftrace_hash
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##uprobe
s##gs_cb
s##iov_iter
s##swap_info_struct
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
eventfd_fget s#file * eventfd_fget ( int ) 
eventfd_ctx_fdget s#eventfd_ctx * eventfd_ctx_fdget ( int ) 
eventfd_ctx_fileget s#eventfd_ctx * eventfd_ctx_fileget ( s#file * ) 

/* fs/exec.o */
s##sock
s##posix_acl
s##device_private
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##kmem_cache
s##fs_pin
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##nameidata
s##sem_undo_list
s##ipc_namespace
s##mnt_namespace
s##net
s##bpf_prog_array
s##cgroup_taskset
s##hd_struct
s##gendisk
s##request_queue
s##eventfd_ctx
s##mempolicy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##workqueue_struct
s##blk_plug
s##robust_list_head
s##futex_pi_state
s##ring_buffer
s##bpf_prog
s##static_key_mod
s##trace_array
s##tracer
s##trace_buffer
s##ring_buffer_iter
s##event_filter
s##ftrace_hash
s##numa_group
s##task_delay_info
s##uprobe
s##gs_cb
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##fwnode_handle
s##iommu_group
s##iommu_fwspec
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##mtd_info
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
__register_binfmt extern void __register_binfmt ( s#linux_binfmt * , int ) 
unregister_binfmt extern void unregister_binfmt ( s#linux_binfmt * ) 
copy_strings_kernel extern int copy_strings_kernel ( int , const char * const * , s#linux_binprm * ) 
setup_arg_pages extern int setup_arg_pages ( s#linux_binprm * , unsigned long , int ) 
open_exec extern s#file * open_exec ( const char * ) 
kernel_read extern int kernel_read ( s#file * , t#loff_t , char * , unsigned long ) 
e#kernel_read_file_id enum kernel_read_file_id { READING_UNKNOWN , READING_FIRMWARE , READING_FIRMWARE_PREALLOC_BUFFER , READING_MODULE , READING_KEXEC_IMAGE , READING_KEXEC_INITRAMFS , READING_POLICY , READING_MAX_ID , } 
kernel_read_file extern int kernel_read_file ( s#file * , void * * , t#loff_t * , t#loff_t , e#kernel_read_file_id ) 
kernel_read_file_from_path extern int kernel_read_file_from_path ( char * , void * * , t#loff_t * , t#loff_t , e#kernel_read_file_id ) 
kernel_read_file_from_fd extern int kernel_read_file_from_fd ( int , void * * , t#loff_t * , t#loff_t , e#kernel_read_file_id ) 
read_code extern t#ssize_t read_code ( s#file * , unsigned long , t#loff_t , t#size_t ) 
get_task_comm extern char * get_task_comm ( char * , s#task_struct * ) 
flush_old_exec extern int flush_old_exec ( s#linux_binprm * ) 
would_dump extern void would_dump ( s#linux_binprm * , s#file * ) 
setup_new_exec extern void setup_new_exec ( s#linux_binprm * ) 
bprm_change_interp extern int bprm_change_interp ( char * , s#linux_binprm * ) 
install_exec_creds extern void install_exec_creds ( s#linux_binprm * ) 
prepare_binprm extern int prepare_binprm ( s#linux_binprm * ) 
remove_arg_zero extern int remove_arg_zero ( s#linux_binprm * ) 
search_binary_handler extern int search_binary_handler ( s#linux_binprm * ) 
set_binfmt extern void set_binfmt ( s#linux_binfmt * ) 

/* fs/exportfs/expfs.o */
s##posix_acl
s##sock
s##seq_file
s##bio_vec
s##pipe_inode_info
s##poll_table_struct
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pollfd
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##writeback_control
s##swap_info_struct
s##device
s##kmem_cache
s##mem_cgroup
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##kstatfs
s##iomap
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
exportfs_encode_inode_fh extern int exportfs_encode_inode_fh ( s#inode * , s#fid * , int * , s#inode * ) 
exportfs_encode_fh extern int exportfs_encode_fh ( s#dentry * , s#fid * , int * , int ) 
exportfs_decode_fh extern s#dentry * exportfs_decode_fh ( s#vfsmount * , s#fid * , int , int , int ( * ) ( void * , s#dentry * ) , void * ) 

/* fs/fat/dir.o */
s##posix_acl
s##vfsmount
s##module
s##writeback_control
s##kstatfs
s##seq_file
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##bio_vec
s##pipe_inode_info
s##poll_table_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##cred
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##swap_info_struct
s##device
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s#msdos_dir_entry struct msdos_dir_entry { t#__u8 name [ 11 ] ; t#__u8 attr ; t#__u8 lcase ; t#__u8 ctime_cs ; t#__le16 ctime ; t#__le16 cdate ; t#__le16 adate ; t#__le16 starthi ; t#__le16 time , date , start ; t#__le32 size ; } 
s#fat_slot_info struct fat_slot_info { t#loff_t i_pos ; t#loff_t slot_off ; int nr_slots ; s#msdos_dir_entry * de ; s#buffer_head * bh ; } 
fat_search_long extern int fat_search_long ( s#inode * , const unsigned char * , int , s#fat_slot_info * ) 
fat_get_dotdot_entry extern int fat_get_dotdot_entry ( s#inode * , s#buffer_head * * , s#msdos_dir_entry * * ) 
fat_dir_empty extern int fat_dir_empty ( s#inode * ) 
fat_scan extern int fat_scan ( s#inode * , const unsigned char * , s#fat_slot_info * ) 
fat_remove_entries extern int fat_remove_entries ( s#inode * , s#fat_slot_info * ) 
fat_alloc_new_dir extern int fat_alloc_new_dir ( s#inode * , s#timespec * ) 
fat_add_entries extern int fat_add_entries ( s#inode * , void * , int , s#fat_slot_info * ) 

/* fs/fat/fatent.o */
s##posix_acl
s##vfsmount
s##module
s##writeback_control
s##kstatfs
s##seq_file
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##iov_iter
s##poll_table_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cred
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##compat_timespec
s##pollfd
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##device_private
s##sock
s##kernfs_open_node
s##kernfs_iattrs
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##blk_mq_ctx
s##kmem_cache
s##blkcg_gq
s##blk_mq_hw_ctx
s##blk_mq_alloc_data
s##blk_mq_debugfs_attr
s##blk_queue_stats
s##rq_wb
s##blk_mq_ops
s##workqueue_struct
s##cgroup_subsys_state
s##blk_stat_callback
s##blk_trace
s##blk_flush_queue
s##bsg_job
s##throtl_data
s##blk_mq_tag_set
s##hd_geometry
s##pr_ops
s##timer_rand_state
s##disk_events
s##badblocks
s##reclaim_state
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##swap_info_struct
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
fat_free_clusters extern int fat_free_clusters ( s#inode * , int ) 

/* fs/fat/file.o */
s##posix_acl
s##sock
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pollfd
s##kmem_cache
s##fs_pin
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##bpf_prog_array
s##cgroup_taskset
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##workqueue_struct
s##kstatfs
s##pipe_inode_info
s##swap_info_struct
s##mem_cgroup
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##mtd_info
s##blk_mq_ctx
s##blk_mq_hw_ctx
s##blk_mq_alloc_data
s##blk_mq_debugfs_attr
s##blk_queue_stats
s##rq_wb
s##blk_mq_ops
s##blk_stat_callback
s##blk_trace
s##blk_flush_queue
s##bsg_job
s##throtl_data
s##blk_mq_tag_set
s##hd_geometry
s##pr_ops
s##timer_rand_state
s##disk_events
s##badblocks
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fscrypt_info
fat_getattr extern int fat_getattr ( const s#path * , s#kstat * , t#u32 , unsigned int ) 
fat_setattr extern int fat_setattr ( s#dentry * , s#iattr * ) 

/* fs/fat/inode.o */
s##posix_acl
s##vfsmount
s##sock
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##bpf_prog_array
s##cgroup_taskset
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##blk_mq_ctx
s##kmem_cache
s##workqueue_struct
s##blk_mq_hw_ctx
s##blk_mq_alloc_data
s##blk_mq_debugfs_attr
s##blk_queue_stats
s##rq_wb
s##blk_mq_ops
s##blk_stat_callback
s##blk_trace
s##blk_flush_queue
s##bsg_job
s##throtl_data
s##blk_mq_tag_set
s##hd_geometry
s##pr_ops
s##timer_rand_state
s##disk_events
s##badblocks
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##swap_info_struct
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
t#__kernel_fsid_t typedef struct { int val [ 2 ] ; } __kernel_fsid_t 
s#kstatfs struct kstatfs { long f_type ; long f_bsize ; t#u64 f_blocks ; t#u64 f_bfree ; t#u64 f_bavail ; t#u64 f_files ; t#u64 f_ffree ; t#__kernel_fsid_t f_fsid ; long f_namelen ; long f_frsize ; long f_flags ; long f_spare [ 4 ] ; } 
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
fat_attach extern void fat_attach ( s#inode * , t#loff_t ) 
fat_detach extern void fat_detach ( s#inode * ) 
fat_build_inode extern s#inode * fat_build_inode ( s#super_block * , s#msdos_dir_entry * , t#loff_t ) 
fat_sync_inode extern int fat_sync_inode ( s#inode * ) 
fat_fill_super extern int fat_fill_super ( s#super_block * , void * , int , int , void ( * ) ( s#super_block * ) ) 
fat_flush_inodes extern int fat_flush_inodes ( s#super_block * , s#inode * , s#inode * ) 

/* fs/fat/misc.o */
s##posix_acl
s##vfsmount
s##module
s##iov_iter
s##poll_table_struct
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##compat_timespec
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##pipe_inode_info
s##writeback_control
s##swap_info_struct
s##device
s##kmem_cache
s##mem_cgroup
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##seq_file
s##bdi_writeback
s##hd_struct
s##gendisk
s##request_queue
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##mtd_info
s##workqueue_struct
__fat_fs_error extern __attribute__ ( ( format ( printf , 3 , 4 ) ) ) __attribute__ ( ( __cold__ ) ) void __fat_fs_error ( s#super_block * , int , const char * , ... ) 
s#fat_mount_options struct fat_mount_options { t#kuid_t fs_uid ; t#kgid_t fs_gid ; unsigned short fs_fmask ; unsigned short fs_dmask ; unsigned short codepage ; int time_offset ; char * iocharset ; unsigned short shortname ; unsigned char name_check ; unsigned char errors ; unsigned char nfs ; unsigned short allow_utime ; unsigned quiet : 1 , showexec : 1 , sys_immutable : 1 , dotsOK : 1 , isvfat : 1 , utf8 : 1 , unicode_xlate : 1 , numtail : 1 , flush : 1 , nocase : 1 , usefree : 1 , tz_set : 1 , rodir : 1 , discard : 1 , dos1xfloppy : 1 ; } 
t#wchar_t typedef t#u16 wchar_t 
s#nls_table struct nls_table { const char * charset ; const char * alias ; int ( * uni2char ) ( t#wchar_t , unsigned char * , int ) ; int ( * char2uni ) ( const unsigned char * , int , t#wchar_t * ) ; const unsigned char * charset2lower ; const unsigned char * charset2upper ; s#module * owner ; s#nls_table * next ; } 
s##fatent_operations
s#msdos_sb_info struct msdos_sb_info { unsigned short sec_per_clus ; unsigned short cluster_bits ; unsigned int cluster_size ; unsigned char fats , fat_bits ; unsigned short fat_start ; unsigned long fat_length ; unsigned long dir_start ; unsigned short dir_entries ; unsigned long data_start ; unsigned long max_cluster ; unsigned long root_cluster ; unsigned long fsinfo_sector ; s#mutex fat_lock ; s#mutex nfs_build_inode_lock ; s#mutex s_lock ; unsigned int prev_free ; unsigned int free_clusters ; unsigned int free_clus_valid ; s#fat_mount_options options ; s#nls_table * nls_disk ; s#nls_table * nls_io ; const void * dir_ops ; int dir_per_block ; int dir_per_block_bits ; unsigned int vol_id ; int fatent_shift ; const s#fatent_operations * fatent_ops ; s#inode * fat_inode ; s#inode * fsinfo_inode ; s#ratelimit_state ratelimit ; t#spinlock_t inode_hash_lock ; s#hlist_head inode_hashtable [ ( 1UL << 8 ) ] ; t#spinlock_t dir_hash_lock ; s#hlist_head dir_hashtable [ ( 1UL << 8 ) ] ; unsigned int dirty ; s#callback_head rcu ; } 
fat_time_unix2fat extern void fat_time_unix2fat ( s#msdos_sb_info * , s#timespec * , t#__le16 * , t#__le16 * , t#u8 * ) 

/* fs/fcntl.o */
s##vfsmount
s##posix_acl
s##sock
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##kmem_cache
s##fs_pin
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##nameidata
s##sem_undo_list
s##fs_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##bpf_prog_array
s##cgroup_taskset
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##fwnode_handle
s##iommu_group
s##iommu_fwspec
s##workqueue_struct
s##hd_struct
s##eventfd_ctx
s##blk_plug
s##robust_list_head
s##futex_pi_state
s##ring_buffer
s##bpf_prog
s##static_key_mod
s##trace_array
s##tracer
s##trace_buffer
s##ring_buffer_iter
s##event_filter
s##ftrace_hash
s##numa_group
s##task_delay_info
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##kstatfs
s##export_operations
s##fscrypt_operations
s##mtd_info
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
__f_setown extern void __f_setown ( s#file * , s#pid * , e#pid_type , int ) 
f_setown extern int f_setown ( s#file * , unsigned long , int ) 
fasync_helper extern int fasync_helper ( int , s#file * , int , s#fasync_struct * * ) 
kill_fasync extern void kill_fasync ( s#fasync_struct * * , int , int ) 

/* fs/file.o */
get_unused_fd_flags extern int get_unused_fd_flags ( unsigned ) 
put_unused_fd extern void put_unused_fd ( unsigned int ) 
s##vfsmount
s##posix_acl
s##module
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##mmu_notifier_mm
s##xol_area
s##compat_timespec
s##kmem_cache
s##fs_pin
s##nameidata
s##sem_undo_list
s##fs_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##device_private
s##sock
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##fwnode_handle
s##iommu_group
s##iommu_fwspec
s##ring_buffer
s##bpf_prog
s##static_key_mod
s##trace_array
s##tracer
s##trace_buffer
s##ring_buffer_iter
s##event_filter
s##ftrace_hash
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##uprobe
s##gs_cb
s##iov_iter
s##swap_info_struct
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
fd_install extern void fd_install ( unsigned int , s#file * ) 
fget extern s#file * fget ( unsigned int ) 
fget_raw extern s#file * fget_raw ( unsigned int ) 
__fdget extern unsigned long __fdget ( unsigned int ) 
iterate_fd int iterate_fd ( s#files_struct * , unsigned , int ( * ) ( const void * , s#file * , unsigned ) , const void * ) 

/* fs/file_table.o */
get_max_files extern unsigned long get_max_files ( void ) 
s##posix_acl
s##sock
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pollfd
s##kmem_cache
s##fs_pin
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##nameidata
s##sem_undo_list
s##fs_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##bpf_prog_array
s##cgroup_taskset
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##workqueue_struct
s##pipe_inode_info
s##hd_struct
s##eventfd_ctx
s##blk_plug
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##mtd_info
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##fscrypt_info
alloc_file extern s#file * alloc_file ( const s#path * , t#fmode_t , const s#file_operations * ) 
fput extern void fput ( s#file * ) 

/* fs/filesystems.o */
s##posix_acl
s##vfsmount
s##sock
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##kmem_cache
s##fs_pin
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##bpf_prog_array
s##cgroup_taskset
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##robust_list_head
s##futex_pi_state
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##fwnode_handle
s##iommu_group
s##iommu_fwspec
s##ring_buffer
s##bpf_prog
s##static_key_mod
s##trace_array
s##tracer
s##trace_buffer
s##ring_buffer_iter
s##event_filter
s##ftrace_hash
s##mempolicy
s##numa_group
s##pipe_inode_info
s##writeback_control
s##bio_vec
s##swap_info_struct
s##mem_cgroup
s##task_delay_info
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##nlm_lockowner
s##nfs4_lock_state
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
register_filesystem extern int register_filesystem ( s#file_system_type * ) 
unregister_filesystem extern int unregister_filesystem ( s#file_system_type * ) 
get_fs_type extern s#file_system_type * get_fs_type ( const char * ) 

/* fs/fs-writeback.o */
s##static_key_mod
__tracepoint_wbc_writepage extern s#tracepoint __tracepoint_wbc_writepage 
s##posix_acl
s##vfsmount
s##module
s##device_private
s##sock
s##iov_iter
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##compat_timespec
s##kmem_cache
s##fs_pin
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##bpf_prog_array
s##cgroup_taskset
s##swap_info_struct
s##eventfd_ctx
s##mempolicy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_mq_ctx
s##blk_mq_hw_ctx
s##blk_mq_alloc_data
s##blk_mq_debugfs_attr
s##blk_queue_stats
s##rq_wb
s##blk_mq_ops
s##workqueue_struct
s##blk_stat_callback
s##blk_trace
s##blk_flush_queue
s##bsg_job
s##throtl_data
s##blk_mq_tag_set
s##hd_geometry
s##pr_ops
s##timer_rand_state
s##disk_events
s##badblocks
s##reclaim_state
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##ring_buffer
s##bpf_prog
s##trace_array
s##tracer
s##trace_buffer
s##ring_buffer_iter
s##event_filter
s##ftrace_hash
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##kernfs_open_node
s##kernfs_iattrs
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
__inode_attach_wb void __inode_attach_wb ( s#inode * , s#page * ) 
wbc_attach_and_unlock_inode void wbc_attach_and_unlock_inode ( s#writeback_control * , s#inode * ) 
wbc_detach_inode void wbc_detach_inode ( s#writeback_control * ) 
wbc_account_io void wbc_account_io ( s#writeback_control * , s#page * , t#size_t ) 
inode_congested int inode_congested ( s#inode * , int ) 
__mark_inode_dirty extern void __mark_inode_dirty ( s#inode * , int ) 
writeback_inodes_sb_nr void writeback_inodes_sb_nr ( s#super_block * , unsigned long , e#wb_reason ) 
writeback_inodes_sb void writeback_inodes_sb ( s#super_block * , e#wb_reason ) 
try_to_writeback_inodes_sb_nr t#bool try_to_writeback_inodes_sb_nr ( s#super_block * , unsigned long , e#wb_reason ) 
try_to_writeback_inodes_sb t#bool try_to_writeback_inodes_sb ( s#super_block * , e#wb_reason ) 
sync_inodes_sb void sync_inodes_sb ( s#super_block * ) 
write_inode_now extern int write_inode_now ( s#inode * , int ) 
sync_inode int sync_inode ( s#inode * , s#writeback_control * ) 
sync_inode_metadata int sync_inode_metadata ( s#inode * , int ) 

/* fs/fs_struct.o */
unshare_fs_struct extern int unshare_fs_struct ( void ) 
current_umask extern int current_umask ( void ) 

/* fs/fscache/cache.o */
fscache_cache_cleared_wq extern t#wait_queue_head_t fscache_cache_cleared_wq 
s#fscache_transition struct fscache_transition { unsigned long events ; const s#fscache_state * transit_to ; } 
s#fscache_state struct fscache_state { char name [ 24 ] ; char short_name [ 8 ] ; const s#fscache_state * ( * work ) ( s#fscache_object * , int ) ; const s#fscache_transition transitions [ ] ; } 
s#fscache_cache_tag struct fscache_cache_tag { s#list_head link ; s#fscache_cache * cache ; unsigned long flags ; t#atomic_t usage ; char name [ 0 ] ; } 
e#fscache_checkaux enum fscache_checkaux { FSCACHE_CHECKAUX_OKAY , FSCACHE_CHECKAUX_NEEDS_UPDATE , FSCACHE_CHECKAUX_OBSOLETE , } 
s##posix_acl
s##vfsmount
s##sock
s##seq_file
s##bio_vec
s##pipe_inode_info
s##poll_table_struct
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##device
s##kmem_cache
s##mem_cgroup
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s#fscache_cookie_def struct fscache_cookie_def { char name [ 16 ] ; t#uint8_t type ; s#fscache_cache_tag * ( * select_cache ) ( const void * , const void * ) ; t#uint16_t ( * get_key ) ( const void * , void * , t#uint16_t ) ; void ( * get_attr ) ( const void * , t#uint64_t * ) ; t#uint16_t ( * get_aux ) ( const void * , void * , t#uint16_t ) ; e#fscache_checkaux ( * check_aux ) ( void * , const void * , t#uint16_t ) ; void ( * get_context ) ( void * , void * ) ; void ( * put_context ) ( void * , void * ) ; void ( * mark_page_cached ) ( void * , s#address_space * , s#page * ) ; void ( * now_uncached ) ( void * ) ; } 
s#fscache_cookie struct fscache_cookie { t#atomic_t usage ; t#atomic_t n_children ; t#atomic_t n_active ; t#spinlock_t lock ; t#spinlock_t stores_lock ; s#hlist_head backing_objects ; const s#fscache_cookie_def * def ; s#fscache_cookie * parent ; void * netfs_data ; s#radix_tree_root stores ; unsigned long flags ; } 
s#fscache_object struct fscache_object { const s#fscache_state * state ; const s#fscache_transition * oob_table ; int debug_id ; int n_children ; int n_ops ; int n_obj_ops ; int n_in_progress ; int n_exclusive ; t#atomic_t n_reads ; t#spinlock_t lock ; unsigned long lookup_jif ; unsigned long oob_event_mask ; unsigned long event_mask ; unsigned long events ; unsigned long flags ; s#list_head cache_link ; s#hlist_node cookie_link ; s#fscache_cache * cache ; s#fscache_cookie * cookie ; s#fscache_object * parent ; s#work_struct work ; s#list_head dependents ; s#list_head dep_link ; s#list_head pending_ops ; s#rb_node objlist_link ; unsigned long store_limit ; t#loff_t store_limit_l ; } 
e#fscache_operation_state enum fscache_operation_state { FSCACHE_OP_ST_BLANK , FSCACHE_OP_ST_INITIALISED , FSCACHE_OP_ST_PENDING , FSCACHE_OP_ST_IN_PROGRESS , FSCACHE_OP_ST_COMPLETE , FSCACHE_OP_ST_CANCELLED , FSCACHE_OP_ST_DEAD } 
t#fscache_operation_processor_t typedef void ( * fscache_operation_processor_t ) ( s#fscache_operation * ) 
t#fscache_operation_cancel_t typedef void ( * fscache_operation_cancel_t ) ( s#fscache_operation * ) 
t#fscache_operation_release_t typedef void ( * fscache_operation_release_t ) ( s#fscache_operation * ) 
s#fscache_operation struct fscache_operation { s#work_struct work ; s#list_head pend_link ; s#fscache_object * object ; unsigned long flags ; e#fscache_operation_state state ; t#atomic_t usage ; unsigned debug_id ; t#fscache_operation_processor_t processor ; t#fscache_operation_cancel_t cancel ; t#fscache_operation_release_t release ; } 
t#fscache_rw_complete_t typedef void ( * fscache_rw_complete_t ) ( s#page * , void * , int ) 
s#fscache_retrieval struct fscache_retrieval { s#fscache_operation op ; s#fscache_cookie * cookie ; s#address_space * mapping ; t#fscache_rw_complete_t end_io_func ; void * context ; s#list_head to_do ; unsigned long start_time ; t#atomic_t n_pages ; } 
t#fscache_page_retrieval_func_t typedef int ( * fscache_page_retrieval_func_t ) ( s#fscache_retrieval * , s#page * , t#gfp_t ) 
t#fscache_pages_retrieval_func_t typedef int ( * fscache_pages_retrieval_func_t ) ( s#fscache_retrieval * , s#list_head * , unsigned * , t#gfp_t ) 
s#fscache_storage struct fscache_storage { s#fscache_operation op ; unsigned long store_limit ; } 
s#fscache_cache_ops struct fscache_cache_ops { const char * name ; s#fscache_object * ( * alloc_object ) ( s#fscache_cache * , s#fscache_cookie * ) ; int ( * lookup_object ) ( s#fscache_object * ) ; void ( * lookup_complete ) ( s#fscache_object * ) ; s#fscache_object * ( * grab_object ) ( s#fscache_object * ) ; int ( * pin_object ) ( s#fscache_object * ) ; void ( * unpin_object ) ( s#fscache_object * ) ; int ( * check_consistency ) ( s#fscache_operation * ) ; void ( * update_object ) ( s#fscache_object * ) ; void ( * invalidate_object ) ( s#fscache_operation * ) ; void ( * drop_object ) ( s#fscache_object * ) ; void ( * put_object ) ( s#fscache_object * ) ; void ( * sync_cache ) ( s#fscache_cache * ) ; int ( * attr_changed ) ( s#fscache_object * ) ; int ( * reserve_space ) ( s#fscache_object * , t#loff_t ) ; t#fscache_page_retrieval_func_t read_or_alloc_page ; t#fscache_pages_retrieval_func_t read_or_alloc_pages ; t#fscache_page_retrieval_func_t allocate_page ; t#fscache_pages_retrieval_func_t allocate_pages ; int ( * write_page ) ( s#fscache_storage * , s#page * ) ; void ( * uncache_page ) ( s#fscache_object * , s#page * ) ; void ( * dissociate_pages ) ( s#fscache_cache * ) ; } 
s#fscache_cache struct fscache_cache { const s#fscache_cache_ops * ops ; s#fscache_cache_tag * tag ; s#kobject * kobj ; s#list_head link ; t#size_t max_index_size ; char identifier [ 36 ] ; s#work_struct op_gc ; s#list_head object_list ; s#list_head op_gc_list ; t#spinlock_t object_list_lock ; t#spinlock_t op_gc_list_lock ; t#atomic_t object_count ; s#fscache_object * fsdef ; unsigned long flags ; } 
fscache_init_cache extern __attribute__ ( ( format ( printf , 3 , 4 ) ) ) void fscache_init_cache ( s#fscache_cache * , const s#fscache_cache_ops * , const char * , ... ) 
fscache_add_cache extern int fscache_add_cache ( s#fscache_cache * , s#fscache_object * , const char * ) 
fscache_io_error extern void fscache_io_error ( s#fscache_cache * ) 
fscache_withdraw_cache extern void fscache_withdraw_cache ( s#fscache_cache * ) 

/* fs/fscache/cookie.o */
s##posix_acl
s##vfsmount
s##sock
s##seq_file
s##bio_vec
s##pipe_inode_info
s##poll_table_struct
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##device
s##kmem_cache
s##mem_cgroup
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
__fscache_acquire_cookie extern s#fscache_cookie * __fscache_acquire_cookie ( s#fscache_cookie * , const s#fscache_cookie_def * , void * , t#bool ) 
__fscache_enable_cookie extern void __fscache_enable_cookie ( s#fscache_cookie * , t#bool ( * ) ( void * ) , void * ) 
__fscache_invalidate extern void __fscache_invalidate ( s#fscache_cookie * ) 
__fscache_wait_on_invalidate extern void __fscache_wait_on_invalidate ( s#fscache_cookie * ) 
__fscache_update_cookie extern void __fscache_update_cookie ( s#fscache_cookie * ) 
__fscache_disable_cookie extern void __fscache_disable_cookie ( s#fscache_cookie * , t#bool ) 
__fscache_relinquish_cookie extern void __fscache_relinquish_cookie ( s#fscache_cookie * , t#bool ) 
__fscache_check_consistency extern int __fscache_check_consistency ( s#fscache_cookie * ) 

/* fs/fscache/fsdef.o */
s##posix_acl
s##vfsmount
s##sock
s##seq_file
s##bio_vec
s##pipe_inode_info
s##poll_table_struct
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##device
s##kmem_cache
s##mem_cgroup
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
fscache_fsdef_index extern s#fscache_cookie fscache_fsdef_index 

/* fs/fscache/netfs.o */
s##posix_acl
s##vfsmount
s##sock
s##seq_file
s##bio_vec
s##pipe_inode_info
s##poll_table_struct
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##device
s##kmem_cache
s##mem_cgroup
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s#fscache_netfs struct fscache_netfs { t#uint32_t version ; const char * name ; s#fscache_cookie * primary_index ; s#list_head link ; } 
__fscache_register_netfs extern int __fscache_register_netfs ( s#fscache_netfs * ) 
__fscache_unregister_netfs extern void __fscache_unregister_netfs ( s#fscache_netfs * ) 

/* fs/fscache/object.o */
s##posix_acl
s##vfsmount
s##sock
s##seq_file
s##bio_vec
s##pipe_inode_info
s##poll_table_struct
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##device
s##kmem_cache
s##mem_cgroup
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
fscache_object_init extern void fscache_object_init ( s#fscache_object * , s#fscache_cookie * , s#fscache_cache * ) 
fscache_object_lookup_negative extern void fscache_object_lookup_negative ( s#fscache_object * ) 
fscache_obtained_object extern void fscache_obtained_object ( s#fscache_object * ) 
fscache_object_destroy extern void fscache_object_destroy ( s#fscache_object * ) 
fscache_object_sleep_till_congested extern t#bool fscache_object_sleep_till_congested ( signed long * ) 
fscache_check_aux extern e#fscache_checkaux fscache_check_aux ( s#fscache_object * , const void * , t#uint16_t ) 
fscache_object_retrying_stale extern void fscache_object_retrying_stale ( s#fscache_object * ) 
e#fscache_why_object_killed enum fscache_why_object_killed { FSCACHE_OBJECT_IS_STALE , FSCACHE_OBJECT_NO_SPACE , FSCACHE_OBJECT_WAS_RETIRED , FSCACHE_OBJECT_WAS_CULLED , } 
fscache_object_mark_killed extern void fscache_object_mark_killed ( s#fscache_object * , e#fscache_why_object_killed ) 

/* fs/fscache/operation.o */
fscache_op_debug_id extern t#atomic_t fscache_op_debug_id 
s##posix_acl
s##vfsmount
s##sock
s##bio_vec
s##pipe_inode_info
s##poll_table_struct
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pollfd
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##device
s##kmem_cache
s##mem_cgroup
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
fscache_operation_init extern void fscache_operation_init ( s#fscache_operation * , t#fscache_operation_processor_t , t#fscache_operation_cancel_t , t#fscache_operation_release_t ) 
fscache_enqueue_operation extern void fscache_enqueue_operation ( s#fscache_operation * ) 
fscache_op_complete extern void fscache_op_complete ( s#fscache_operation * , t#bool ) 
fscache_put_operation extern void fscache_put_operation ( s#fscache_operation * ) 

/* fs/fscache/page.o */
s##posix_acl
s##vfsmount
s##sock
s##seq_file
s##bio_vec
s##pipe_inode_info
s##poll_table_struct
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##device
s##kmem_cache
s##mem_cgroup
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
__fscache_check_page_write extern t#bool __fscache_check_page_write ( s#fscache_cookie * , s#page * ) 
__fscache_wait_on_page_write extern void __fscache_wait_on_page_write ( s#fscache_cookie * , s#page * ) 
__fscache_maybe_release_page extern t#bool __fscache_maybe_release_page ( s#fscache_cookie * , s#page * , t#gfp_t ) 
__fscache_attr_changed extern int __fscache_attr_changed ( s#fscache_cookie * ) 
__fscache_read_or_alloc_page extern int __fscache_read_or_alloc_page ( s#fscache_cookie * , s#page * , t#fscache_rw_complete_t , void * , t#gfp_t ) 
__fscache_read_or_alloc_pages extern int __fscache_read_or_alloc_pages ( s#fscache_cookie * , s#address_space * , s#list_head * , unsigned * , t#fscache_rw_complete_t , void * , t#gfp_t ) 
__fscache_alloc_page extern int __fscache_alloc_page ( s#fscache_cookie * , s#page * , t#gfp_t ) 
__fscache_readpages_cancel extern void __fscache_readpages_cancel ( s#fscache_cookie * , s#list_head * ) 
__fscache_write_page extern int __fscache_write_page ( s#fscache_cookie * , s#page * , t#gfp_t ) 
__fscache_uncache_page extern void __fscache_uncache_page ( s#fscache_cookie * , s#page * ) 
fscache_mark_page_cached extern void fscache_mark_page_cached ( s#fscache_retrieval * , s#page * ) 
s#pagevec struct pagevec { unsigned long nr ; t#bool percpu_pvec_drained ; s#page * pages [ 14 ] ; } 
fscache_mark_pages_cached extern void fscache_mark_pages_cached ( s#fscache_retrieval * , s#pagevec * ) 
__fscache_uncache_all_inode_pages extern void __fscache_uncache_all_inode_pages ( s#fscache_cookie * , s#inode * ) 

/* fs/fuse/dev.o */
s#fuse_in_header struct fuse_in_header { t#uint32_t len ; t#uint32_t opcode ; t#uint64_t unique ; t#uint64_t nodeid ; t#uint32_t uid ; t#uint32_t gid ; t#uint32_t pid ; t#uint32_t padding ; } 
s#fuse_in_arg struct fuse_in_arg { unsigned size ; const void * value ; } 
s#fuse_in struct fuse_in { s#fuse_in_header h ; unsigned argpages : 1 ; unsigned numargs ; s#fuse_in_arg args [ 3 ] ; } 
s#fuse_out_header struct fuse_out_header { t#uint32_t len ; t#int32_t error ; t#uint64_t unique ; } 
s#fuse_arg struct fuse_arg { unsigned size ; void * value ; } 
s#fuse_out struct fuse_out { s#fuse_out_header h ; unsigned argvar : 1 ; unsigned argpages : 1 ; unsigned page_zeroing : 1 ; unsigned page_replace : 1 ; unsigned numargs ; s#fuse_arg args [ 2 ] ; } 
s#fuse_release_in struct fuse_release_in { t#uint64_t fh ; t#uint32_t flags ; t#uint32_t release_flags ; t#uint64_t lock_owner ; } 
s##posix_acl
s##sock
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##mmu_notifier_mm
s##xol_area
s##kmem_cache
s##fs_pin
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##blk_mq_ctx
s##workqueue_struct
s##blk_mq_hw_ctx
s##blk_mq_alloc_data
s##blk_mq_debugfs_attr
s##blk_queue_stats
s##rq_wb
s##blk_mq_ops
s##blk_stat_callback
s##blk_trace
s##blk_flush_queue
s##bsg_job
s##throtl_data
s##blk_mq_tag_set
s##hd_geometry
s##pr_ops
s##timer_rand_state
s##disk_events
s##badblocks
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##nlm_lockowner
s##nfs4_lock_state
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##kstatfs
s##export_operations
s##fscrypt_operations
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s#fuse_init_in struct fuse_init_in { t#uint32_t major ; t#uint32_t minor ; t#uint32_t max_readahead ; t#uint32_t flags ; } 
s#fuse_init_out struct fuse_init_out { t#uint32_t major ; t#uint32_t minor ; t#uint32_t max_readahead ; t#uint32_t flags ; t#uint16_t max_background ; t#uint16_t congestion_threshold ; t#uint32_t max_write ; t#uint32_t time_gran ; t#uint32_t unused [ 9 ] ; } 
s#cuse_init_in struct cuse_init_in { t#uint32_t major ; t#uint32_t minor ; t#uint32_t unused ; t#uint32_t flags ; } 
s#fuse_read_in struct fuse_read_in { t#uint64_t fh ; t#uint64_t offset ; t#uint32_t size ; t#uint32_t read_flags ; t#uint64_t lock_owner ; t#uint32_t flags ; t#uint32_t padding ; } 
s#fuse_write_in struct fuse_write_in { t#uint64_t fh ; t#uint64_t offset ; t#uint32_t size ; t#uint32_t write_flags ; t#uint64_t lock_owner ; t#uint32_t flags ; t#uint32_t padding ; } 
s#fuse_write_out struct fuse_write_out { t#uint32_t size ; t#uint32_t padding ; } 
s#fuse_notify_retrieve_in struct fuse_notify_retrieve_in { t#uint64_t dummy1 ; t#uint64_t offset ; t#uint32_t size ; t#uint32_t dummy2 ; t#uint64_t dummy3 ; t#uint64_t dummy4 ; } 
s#fuse_page_desc struct fuse_page_desc { unsigned int length ; unsigned int offset ; } 
s#fuse_forget_one struct fuse_forget_one { t#uint64_t nodeid ; t#uint64_t nlookup ; } 
s#fuse_forget_link struct fuse_forget_link { s#fuse_forget_one forget_one ; s#fuse_forget_link * next ; } 
s#fuse_iqueue struct fuse_iqueue { unsigned connected ; t#wait_queue_head_t waitq ; t#u64 reqctr ; s#list_head pending ; s#list_head interrupts ; s#fuse_forget_link forget_list_head ; s#fuse_forget_link * forget_list_tail ; int forget_batch ; s#fasync_struct * fasync ; } 
s#fuse_conn struct fuse_conn { t#spinlock_t lock ; t#refcount_t count ; t#atomic_t dev_count ; s#callback_head rcu ; t#kuid_t user_id ; t#kgid_t group_id ; s#pid_namespace * pid_ns ; unsigned max_read ; unsigned max_write ; s#fuse_iqueue iq ; t#u64 khctr ; s#rb_root polled_files ; unsigned max_background ; unsigned congestion_threshold ; unsigned num_background ; unsigned active_background ; s#list_head bg_queue ; int initialized ; int blocked ; t#wait_queue_head_t blocked_waitq ; t#wait_queue_head_t reserved_req_waitq ; unsigned connected ; unsigned conn_error : 1 ; unsigned conn_init : 1 ; unsigned async_read : 1 ; unsigned atomic_o_trunc : 1 ; unsigned export_support : 1 ; unsigned writeback_cache : 1 ; unsigned parallel_dirops : 1 ; unsigned handle_killpriv : 1 ; unsigned no_open : 1 ; unsigned no_fsync : 1 ; unsigned no_fsyncdir : 1 ; unsigned no_flush : 1 ; unsigned no_setxattr : 1 ; unsigned no_getxattr : 1 ; unsigned no_listxattr : 1 ; unsigned no_removexattr : 1 ; unsigned no_lock : 1 ; unsigned no_access : 1 ; unsigned no_create : 1 ; unsigned no_interrupt : 1 ; unsigned no_bmap : 1 ; unsigned no_poll : 1 ; unsigned big_writes : 1 ; unsigned dont_mask : 1 ; unsigned no_flock : 1 ; unsigned no_fallocate : 1 ; unsigned no_rename2 : 1 ; unsigned auto_inval_data : 1 ; unsigned do_readdirplus : 1 ; unsigned readdirplus_auto : 1 ; unsigned async_dio : 1 ; unsigned no_lseek : 1 ; unsigned posix_acl : 1 ; unsigned default_permissions : 1 ; unsigned allow_other : 1 ; t#atomic_t num_waiting ; unsigned minor ; s#list_head entry ; t#dev_t dev ; s#dentry * ctl_dentry [ 5 ] ; int ctl_ndents ; t#u32 scramble_key [ 4 ] ; s#fuse_req * destroy_req ; t#u64 attr_version ; void ( * release ) ( s#fuse_conn * ) ; s#super_block * sb ; s#rw_semaphore killsb ; s#list_head devices ; } 
s#fuse_file struct fuse_file { s#fuse_conn * fc ; s#fuse_req * reserved_req ; t#u64 kh ; t#u64 fh ; t#u64 nodeid ; t#refcount_t count ; t#u32 open_flags ; s#list_head write_entry ; s#rb_node polled_node ; t#wait_queue_head_t poll_wait ; t#bool flock : 1 ; } 
s#fuse_io_priv struct fuse_io_priv { s#kref refcnt ; int async ; t#spinlock_t lock ; unsigned reqs ; t#ssize_t bytes ; t#size_t size ; t#__u64 offset ; t#bool write ; int err ; s#kiocb * iocb ; s#file * file ; s#completion * done ; t#bool blocking ; } 
s#fuse_req struct fuse_req { s#list_head list ; s#list_head intr_entry ; t#refcount_t count ; t#u64 intr_unique ; unsigned long flags ; s#fuse_in in ; s#fuse_out out ; t#wait_queue_head_t waitq ; union { struct { s#fuse_release_in in ; s#inode * inode ; } release ; s#fuse_init_in init_in ; s#fuse_init_out init_out ; s#cuse_init_in cuse_init_in ; struct { s#fuse_read_in in ; t#u64 attr_ver ; } read ; struct { s#fuse_write_in in ; s#fuse_write_out out ; s#fuse_req * next ; } write ; s#fuse_notify_retrieve_in retrieve_in ; } misc ; s#page * * pages ; s#fuse_page_desc * page_descs ; unsigned max_pages ; s#page * inline_pages [ 1 ] ; s#fuse_page_desc inline_page_descs [ 1 ] ; unsigned num_pages ; s#fuse_file * ff ; s#inode * inode ; s#fuse_io_priv * io ; s#list_head writepages_entry ; void ( * end ) ( s#fuse_conn * , s#fuse_req * ) ; s#file * stolen_file ; } 
fuse_request_alloc s#fuse_req * fuse_request_alloc ( unsigned ) 
fuse_get_req s#fuse_req * fuse_get_req ( s#fuse_conn * , unsigned ) 
fuse_get_req_for_background s#fuse_req * fuse_get_req_for_background ( s#fuse_conn * , unsigned ) 
fuse_put_request void fuse_put_request ( s#fuse_conn * , s#fuse_req * ) 
fuse_request_send void fuse_request_send ( s#fuse_conn * , s#fuse_req * ) 
fuse_request_send_background void fuse_request_send_background ( s#fuse_conn * , s#fuse_req * ) 
fuse_abort_conn void fuse_abort_conn ( s#fuse_conn * ) 
fuse_dev_release int fuse_dev_release ( s#inode * , s#file * ) 
fuse_dev_operations extern const s#file_operations fuse_dev_operations 

/* fs/fuse/file.o */
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##sock
s##pipe_inode_info
s##nlm_lockowner
s##nfs4_lock_state
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##workqueue_struct
s##bpf_prog_array
s##cgroup_taskset
s##kstatfs
s##eventfd_ctx
s##export_operations
s##fscrypt_operations
s##hd_geometry
s##pr_ops
s##blk_mq_ctx
s##kmem_cache
s##blk_mq_hw_ctx
s##blk_mq_alloc_data
s##blk_mq_debugfs_attr
s##blk_queue_stats
s##rq_wb
s##blk_mq_ops
s##blk_stat_callback
s##blk_trace
s##blk_flush_queue
s##bsg_job
s##throtl_data
s##blk_mq_tag_set
s##timer_rand_state
s##disk_events
s##badblocks
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##fs_pin
fuse_do_open int fuse_do_open ( s#fuse_conn * , t#u64 , s#file * , t#bool ) 
fuse_sync_release void fuse_sync_release ( s#fuse_file * , int ) 
fuse_direct_io t#ssize_t fuse_direct_io ( s#fuse_io_priv * , s#iov_iter * , t#loff_t * , int ) 
fuse_do_ioctl long fuse_do_ioctl ( s#file * , unsigned int , unsigned long , unsigned int ) 
fuse_file_poll unsigned fuse_file_poll ( s#file * , t#poll_table * ) 

/* fs/fuse/inode.o */
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s#posix_acl_entry struct posix_acl_entry { short e_tag ; unsigned short e_perm ; union { t#kuid_t e_uid ; t#kgid_t e_gid ; } ; } 
s#posix_acl struct posix_acl { t#atomic_t a_refcount ; s#callback_head a_rcu ; unsigned int a_count ; s#posix_acl_entry a_entries [ 0 ] ; } 
s##sock
s##pipe_inode_info
s##nlm_lockowner
s##nfs4_lock_state
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##workqueue_struct
s##bpf_prog_array
s##cgroup_taskset
s##mem_cgroup
s##iomap
s##fscrypt_operations
s##hd_geometry
s##pr_ops
s##blk_mq_ctx
s##kmem_cache
s##blk_mq_hw_ctx
s##blk_mq_alloc_data
s##blk_mq_debugfs_attr
s##blk_queue_stats
s##rq_wb
s##blk_mq_ops
s##blk_stat_callback
s##blk_trace
s##blk_flush_queue
s##bsg_job
s##throtl_data
s##blk_mq_tag_set
s##timer_rand_state
s##disk_events
s##badblocks
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##fs_pin
fuse_conn_init void fuse_conn_init ( s#fuse_conn * ) 
fuse_conn_put void fuse_conn_put ( s#fuse_conn * ) 
fuse_conn_get s#fuse_conn * fuse_conn_get ( s#fuse_conn * ) 
s#fuse_pqueue struct fuse_pqueue { unsigned connected ; t#spinlock_t lock ; s#list_head processing ; s#list_head io ; } 
s#fuse_dev struct fuse_dev { s#fuse_conn * fc ; s#fuse_pqueue pq ; s#list_head entry ; } 
fuse_dev_alloc s#fuse_dev * fuse_dev_alloc ( s#fuse_conn * ) 
fuse_dev_free void fuse_dev_free ( s#fuse_dev * ) 

/* fs/inode.o */
s##module
s##device_private
s##sock
s##iov_iter
s##poll_table_struct
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##compat_timespec
s##pollfd
s##kmem_cache
s##fs_pin
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##mempolicy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_mq_ctx
s##blk_mq_hw_ctx
s##blk_mq_alloc_data
s##blk_mq_debugfs_attr
s##blk_queue_stats
s##rq_wb
s##blk_mq_ops
s##workqueue_struct
s##blk_stat_callback
s##blk_trace
s##blk_flush_queue
s##bsg_job
s##throtl_data
s##blk_mq_tag_set
s##hd_geometry
s##pr_ops
s##timer_rand_state
s##disk_events
s##badblocks
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##kernfs_open_node
s##kernfs_iattrs
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##mtd_info
s##fscrypt_info
empty_aops extern const s#address_space_operations empty_aops 
inode_init_always extern int inode_init_always ( s#super_block * , s#inode * ) 
free_inode_nonrcu extern void free_inode_nonrcu ( s#inode * ) 
__destroy_inode extern void __destroy_inode ( s#inode * ) 
drop_nlink extern void drop_nlink ( s#inode * ) 
clear_nlink extern void clear_nlink ( s#inode * ) 
set_nlink extern void set_nlink ( s#inode * , unsigned int ) 
inc_nlink extern void inc_nlink ( s#inode * ) 
address_space_init_once extern void address_space_init_once ( s#address_space * ) 
inode_init_once extern void inode_init_once ( s#inode * ) 
ihold extern void ihold ( s#inode * ) 
inode_sb_list_add extern void inode_sb_list_add ( s#inode * ) 
__insert_inode_hash extern void __insert_inode_hash ( s#inode * , unsigned long ) 
__remove_inode_hash extern void __remove_inode_hash ( s#inode * ) 
clear_inode extern void clear_inode ( s#inode * ) 
evict_inodes extern void evict_inodes ( s#super_block * ) 
get_next_ino extern unsigned int get_next_ino ( void ) 
new_inode extern s#inode * new_inode ( s#super_block * ) 
unlock_new_inode extern void unlock_new_inode ( s#inode * ) 
lock_two_nondirectories void lock_two_nondirectories ( s#inode * , s#inode * ) 
unlock_two_nondirectories void unlock_two_nondirectories ( s#inode * , s#inode * ) 
iget5_locked extern s#inode * iget5_locked ( s#super_block * , unsigned long , int ( * ) ( s#inode * , void * ) , int ( * ) ( s#inode * , void * ) , void * ) 
iget_locked extern s#inode * iget_locked ( s#super_block * , unsigned long ) 
t#__kernel_ino_t typedef unsigned int __kernel_ino_t 
t#ino_t typedef t#__kernel_ino_t ino_t 
iunique extern t#ino_t iunique ( s#super_block * , t#ino_t ) 
igrab extern s#inode * igrab ( s#inode * ) 
ilookup5_nowait extern s#inode * ilookup5_nowait ( s#super_block * , unsigned long , int ( * ) ( s#inode * , void * ) , void * ) 
ilookup5 extern s#inode * ilookup5 ( s#super_block * , unsigned long , int ( * ) ( s#inode * , void * ) , void * ) 
ilookup extern s#inode * ilookup ( s#super_block * , unsigned long ) 
find_inode_nowait extern s#inode * find_inode_nowait ( s#super_block * , unsigned long , int ( * ) ( s#inode * , unsigned long , void * ) , void * ) 
insert_inode_locked extern int insert_inode_locked ( s#inode * ) 
insert_inode_locked4 extern int insert_inode_locked4 ( s#inode * , unsigned long , int ( * ) ( s#inode * , void * ) , void * ) 
generic_delete_inode extern int generic_delete_inode ( s#inode * ) 
iput extern void iput ( s#inode * ) 
bmap extern t#sector_t bmap ( s#inode * , t#sector_t ) 
generic_update_time extern int generic_update_time ( s#inode * , s#timespec * , int ) 
touch_atime extern void touch_atime ( const s#path * ) 
should_remove_suid extern int should_remove_suid ( s#dentry * ) 
file_remove_privs extern int file_remove_privs ( s#file * ) 
file_update_time extern int file_update_time ( s#file * ) 
inode_needs_sync extern int inode_needs_sync ( s#inode * ) 
init_special_inode extern void init_special_inode ( s#inode * , t#umode_t , t#dev_t ) 
inode_init_owner extern void inode_init_owner ( s#inode * , const s#inode * , t#umode_t ) 
inode_owner_or_capable extern t#bool inode_owner_or_capable ( const s#inode * ) 
inode_dio_wait void inode_dio_wait ( s#inode * ) 
inode_set_flags extern void inode_set_flags ( s#inode * , unsigned int , unsigned int ) 
inode_nohighmem extern void inode_nohighmem ( s#inode * ) 
current_time extern s#timespec current_time ( s#inode * ) 

/* fs/ioctl.o */
fiemap_fill_next_extent int fiemap_fill_next_extent ( s#fiemap_extent_info * , t#u64 , t#u64 , t#u64 , t#u32 ) 
fiemap_check_flags int fiemap_check_flags ( s#fiemap_extent_info * , t#u32 ) 
s##posix_acl
s##vfsmount
s##module
s##device_private
s##sock
s##iov_iter
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##compat_timespec
s##kmem_cache
s##fs_pin
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##bpf_prog_array
s##cgroup_taskset
s##swap_info_struct
s##mem_cgroup
s##mempolicy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##workqueue_struct
s##blk_plug
s##reclaim_state
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##ring_buffer
s##bpf_prog
s##static_key_mod
s##trace_array
s##tracer
s##trace_buffer
s##ring_buffer_iter
s##event_filter
s##ftrace_hash
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##kernfs_open_node
s##kernfs_iattrs
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##fwnode_handle
s##iommu_group
s##iommu_fwspec
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
__generic_block_fiemap extern int __generic_block_fiemap ( s#inode * , s#fiemap_extent_info * , t#loff_t , t#loff_t , t#get_block_t * ) 
generic_block_fiemap extern int generic_block_fiemap ( s#inode * , s#fiemap_extent_info * , t#u64 , t#u64 , t#get_block_t * ) 

/* fs/iomap.o */
s##vfsmount
s##posix_acl
s##sock
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pollfd
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##bpf_prog_array
s##cgroup_taskset
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##blk_mq_ctx
s##workqueue_struct
s##pipe_inode_info
s##kmem_cache
s##eventfd_ctx
s##blk_mq_hw_ctx
s##blk_mq_alloc_data
s##blk_mq_debugfs_attr
s##blk_queue_stats
s##rq_wb
s##blk_mq_ops
s##blk_stat_callback
s##blk_trace
s##blk_flush_queue
s##bsg_job
s##throtl_data
s##blk_mq_tag_set
s##hd_geometry
s##pr_ops
s##timer_rand_state
s##disk_events
s##badblocks
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##mtd_info
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##dax_device
iomap_file_buffered_write t#ssize_t iomap_file_buffered_write ( s#kiocb * , s#iov_iter * , const s#iomap_ops * ) 
iomap_file_dirty int iomap_file_dirty ( s#inode * , t#loff_t , t#loff_t , const s#iomap_ops * ) 
iomap_zero_range int iomap_zero_range ( s#inode * , t#loff_t , t#loff_t , t#bool * , const s#iomap_ops * ) 
iomap_truncate_page int iomap_truncate_page ( s#inode * , t#loff_t , t#bool * , const s#iomap_ops * ) 
iomap_page_mkwrite int iomap_page_mkwrite ( s#vm_fault * , const s#iomap_ops * ) 
iomap_fiemap int iomap_fiemap ( s#inode * , s#fiemap_extent_info * , t#loff_t , t#loff_t , const s#iomap_ops * ) 
iomap_seek_hole t#loff_t iomap_seek_hole ( s#inode * , t#loff_t , const s#iomap_ops * ) 
iomap_seek_data t#loff_t iomap_seek_data ( s#inode * , t#loff_t , const s#iomap_ops * ) 
t#iomap_dio_end_io_t typedef int ( iomap_dio_end_io_t ) ( s#kiocb * , t#ssize_t , unsigned ) 
iomap_dio_rw t#ssize_t iomap_dio_rw ( s#kiocb * , s#iov_iter * , const s#iomap_ops * , t#iomap_dio_end_io_t ) 

/* fs/jbd2/journal.o */
t#ushort typedef unsigned short ushort 
jbd2_journal_enable_debug extern t#ushort jbd2_journal_enable_debug 
s##posix_acl
s##vfsmount
s##sock
s##pipe_inode_info
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##kmem_cache
s##fs_pin
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##bpf_prog_array
s##cgroup_taskset
s##mem_cgroup
s##mempolicy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##blk_mq_ctx
s##workqueue_struct
s##blk_mq_hw_ctx
s##blk_mq_alloc_data
s##blk_mq_debugfs_attr
s##blk_queue_stats
s##rq_wb
s##blk_mq_ops
s##blk_stat_callback
s##blk_trace
s##blk_flush_queue
s##bsg_job
s##throtl_data
s##blk_mq_tag_set
s##hd_geometry
s##pr_ops
s##timer_rand_state
s##disk_events
s##badblocks
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##ring_buffer
s##bpf_prog
s##static_key_mod
s##trace_array
s##tracer
s##trace_buffer
s##ring_buffer_iter
s##event_filter
s##ftrace_hash
s##numa_group
s##task_delay_info
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s#journal_header_s struct journal_header_s { t#__be32 h_magic ; t#__be32 h_blocktype ; t#__be32 h_sequence ; } 
t#journal_header_t typedef s#journal_header_s journal_header_t 
s#journal_superblock_s struct journal_superblock_s { t#journal_header_t s_header ; t#__be32 s_blocksize ; t#__be32 s_maxlen ; t#__be32 s_first ; t#__be32 s_sequence ; t#__be32 s_start ; t#__be32 s_errno ; t#__be32 s_feature_compat ; t#__be32 s_feature_incompat ; t#__be32 s_feature_ro_compat ; t#__u8 s_uuid [ 16 ] ; t#__be32 s_nr_users ; t#__be32 s_dynsuper ; t#__be32 s_max_transaction ; t#__be32 s_max_trans_data ; t#__u8 s_checksum_type ; t#__u8 s_padding2 [ 3 ] ; t#__u32 s_padding [ 42 ] ; t#__be32 s_checksum ; t#__u8 s_users [ 16 * 48 ] ; } 
t#journal_superblock_t typedef s#journal_superblock_s journal_superblock_t 
t#tid_t typedef unsigned int tid_t 
s##jbd2_revoke_table_s
s##proc_dir_entry
s#transaction_run_stats_s struct transaction_run_stats_s { unsigned long rs_wait ; unsigned long rs_request_delay ; unsigned long rs_running ; unsigned long rs_locked ; unsigned long rs_flushing ; unsigned long rs_logging ; t#__u32 rs_handle_count ; t#__u32 rs_blocks ; t#__u32 rs_blocks_logged ; } 
s#transaction_stats_s struct transaction_stats_s { unsigned long ts_tid ; unsigned long ts_requested ; s#transaction_run_stats_s run ; } 
s##crypto_type
s##skcipher_givcrypt_request
s#journal_s struct journal_s { unsigned long j_flags ; int j_errno ; s#buffer_head * j_sb_buffer ; t#journal_superblock_t * j_superblock ; int j_format_version ; t#rwlock_t j_state_lock ; int j_barrier_count ; s#mutex j_barrier ; t#transaction_t * j_running_transaction ; t#transaction_t * j_committing_transaction ; t#transaction_t * j_checkpoint_transactions ; t#wait_queue_head_t j_wait_transaction_locked ; t#wait_queue_head_t j_wait_done_commit ; t#wait_queue_head_t j_wait_commit ; t#wait_queue_head_t j_wait_updates ; t#wait_queue_head_t j_wait_reserved ; s#mutex j_checkpoint_mutex ; s#buffer_head * j_chkpt_bhs [ 64 ] ; unsigned long j_head ; unsigned long j_tail ; unsigned long j_free ; unsigned long j_first ; unsigned long j_last ; s#block_device * j_dev ; int j_blocksize ; unsigned long long j_blk_offset ; char j_devname [ 32 + 24 ] ; s#block_device * j_fs_dev ; unsigned int j_maxlen ; t#atomic_t j_reserved_credits ; t#spinlock_t j_list_lock ; s#inode * j_inode ; t#tid_t j_tail_sequence ; t#tid_t j_transaction_sequence ; t#tid_t j_commit_sequence ; t#tid_t j_commit_request ; t#__u8 j_uuid [ 16 ] ; s#task_struct * j_task ; int j_max_transaction_buffers ; unsigned long j_commit_interval ; s#timer_list j_commit_timer ; t#spinlock_t j_revoke_lock ; s#jbd2_revoke_table_s * j_revoke ; s#jbd2_revoke_table_s * j_revoke_table [ 2 ] ; s#buffer_head * * j_wbuf ; int j_wbufsize ; t#pid_t j_last_sync_writer ; t#u64 j_average_commit_time ; t#u32 j_min_batch_time ; t#u32 j_max_batch_time ; void ( * j_commit_callback ) ( t#journal_t * , t#transaction_t * ) ; t#spinlock_t j_history_lock ; s#proc_dir_entry * j_proc_entry ; s#transaction_stats_s j_stats ; unsigned int j_failed_commit ; void * j_private ; s#crypto_shash * j_chksum_driver ; t#__u32 j_csum_seed ; } 
t#journal_t typedef s#journal_s journal_t 
s#jbd2_buffer_trigger_type struct jbd2_buffer_trigger_type { void ( * t_frozen ) ( s#jbd2_buffer_trigger_type * , s#buffer_head * , void * , t#size_t ) ; void ( * t_abort ) ( s#jbd2_buffer_trigger_type * , s#buffer_head * ) ; } 
s#journal_head struct journal_head { s#buffer_head * b_bh ; int b_jcount ; unsigned b_jlist ; unsigned b_modified ; char * b_frozen_data ; char * b_committed_data ; t#transaction_t * b_transaction ; t#transaction_t * b_next_transaction ; s#journal_head * b_tnext , * b_tprev ; t#transaction_t * b_cp_transaction ; s#journal_head * b_cpnext , * b_cpprev ; s#jbd2_buffer_trigger_type * b_triggers ; s#jbd2_buffer_trigger_type * b_frozen_triggers ; } 
s#transaction_chp_stats_s struct transaction_chp_stats_s { unsigned long cs_chp_time ; t#__u32 cs_forced_to_close ; t#__u32 cs_written ; t#__u32 cs_dropped ; } 
s#transaction_s struct transaction_s { t#journal_t * t_journal ; t#tid_t t_tid ; enum { T_RUNNING , T_LOCKED , T_FLUSH , T_COMMIT , T_COMMIT_DFLUSH , T_COMMIT_JFLUSH , T_COMMIT_CALLBACK , T_FINISHED } t_state ; unsigned long t_log_start ; int t_nr_buffers ; s#journal_head * t_reserved_list ; s#journal_head * t_buffers ; s#journal_head * t_forget ; s#journal_head * t_checkpoint_list ; s#journal_head * t_checkpoint_io_list ; s#journal_head * t_shadow_list ; s#list_head t_inode_list ; t#spinlock_t t_handle_lock ; unsigned long t_max_wait ; unsigned long t_start ; unsigned long t_requested ; s#transaction_chp_stats_s t_chp_stats ; t#atomic_t t_updates ; t#atomic_t t_outstanding_credits ; t#transaction_t * t_cpnext , * t_cpprev ; unsigned long t_expires ; t#ktime_t t_start_time ; t#atomic_t t_handle_count ; unsigned int t_synchronous_commit : 1 ; int t_need_data_flush ; s#list_head t_private_list ; } 
t#transaction_t typedef s#transaction_s transaction_t 
s#jbd2_journal_handle struct jbd2_journal_handle { union { t#transaction_t * h_transaction ; t#journal_t * h_journal ; } ; t#handle_t * h_rsv_handle ; int h_buffer_credits ; int h_ref ; int h_err ; unsigned int h_sync : 1 ; unsigned int h_jdata : 1 ; unsigned int h_reserved : 1 ; unsigned int h_aborted : 1 ; unsigned int h_type : 8 ; unsigned int h_line_no : 16 ; unsigned long h_start_jiffies ; unsigned int h_requested_credits ; unsigned int saved_alloc_context ; } 
t#handle_t typedef s#jbd2_journal_handle handle_t 
jbd2_journal_extend extern int jbd2_journal_extend ( t#handle_t * , int ) 
jbd2_journal_stop extern int jbd2_journal_stop ( t#handle_t * ) 
jbd2_journal_lock_updates extern void jbd2_journal_lock_updates ( t#journal_t * ) 
jbd2_journal_unlock_updates extern void jbd2_journal_unlock_updates ( t#journal_t * ) 
jbd2_journal_get_write_access extern int jbd2_journal_get_write_access ( t#handle_t * , s#buffer_head * ) 
jbd2_journal_get_create_access extern int jbd2_journal_get_create_access ( t#handle_t * , s#buffer_head * ) 
jbd2_journal_get_undo_access extern int jbd2_journal_get_undo_access ( t#handle_t * , s#buffer_head * ) 
jbd2_journal_set_triggers void jbd2_journal_set_triggers ( s#buffer_head * , s#jbd2_buffer_trigger_type * ) 
jbd2_journal_dirty_metadata extern int jbd2_journal_dirty_metadata ( t#handle_t * , s#buffer_head * ) 
jbd2_journal_forget extern int jbd2_journal_forget ( t#handle_t * , s#buffer_head * ) 
jbd2_journal_flush extern int jbd2_journal_flush ( t#journal_t * ) 
jbd2_journal_revoke extern int jbd2_journal_revoke ( t#handle_t * , unsigned long long , s#buffer_head * ) 
jbd2_journal_init_dev extern t#journal_t * jbd2_journal_init_dev ( s#block_device * , s#block_device * , unsigned long long , int , int ) 
jbd2_journal_init_inode extern t#journal_t * jbd2_journal_init_inode ( s#inode * ) 
jbd2_journal_check_used_features extern int jbd2_journal_check_used_features ( t#journal_t * , unsigned long , unsigned long , unsigned long ) 
jbd2_journal_check_available_features extern int jbd2_journal_check_available_features ( t#journal_t * , unsigned long , unsigned long , unsigned long ) 
jbd2_journal_set_features extern int jbd2_journal_set_features ( t#journal_t * , unsigned long , unsigned long , unsigned long ) 
jbd2_journal_load extern int jbd2_journal_load ( t#journal_t * ) 
jbd2_journal_destroy extern int jbd2_journal_destroy ( t#journal_t * ) 
jbd2_journal_abort extern void jbd2_journal_abort ( t#journal_t * , int ) 
jbd2_journal_errno extern int jbd2_journal_errno ( t#journal_t * ) 
jbd2_journal_ack_err extern void jbd2_journal_ack_err ( t#journal_t * ) 
jbd2_journal_clear_err extern int jbd2_journal_clear_err ( t#journal_t * ) 
jbd2_log_wait_commit int jbd2_log_wait_commit ( t#journal_t * , t#tid_t ) 
jbd2_log_start_commit int jbd2_log_start_commit ( t#journal_t * , t#tid_t ) 
jbd2_journal_start_commit int jbd2_journal_start_commit ( t#journal_t * , t#tid_t * ) 
jbd2_journal_force_commit_nested extern int jbd2_journal_force_commit_nested ( t#journal_t * ) 
jbd2_journal_wipe extern int jbd2_journal_wipe ( t#journal_t * , int ) 
jbd2_journal_blocks_per_page extern int jbd2_journal_blocks_per_page ( s#inode * ) 
jbd2_journal_invalidatepage extern int jbd2_journal_invalidatepage ( t#journal_t * , s#page * , unsigned int , unsigned int ) 
jbd2_journal_try_to_free_buffers extern int jbd2_journal_try_to_free_buffers ( t#journal_t * , s#page * , t#gfp_t ) 
jbd2_journal_force_commit extern int jbd2_journal_force_commit ( t#journal_t * ) 
s#jbd2_inode struct jbd2_inode { t#transaction_t * i_transaction ; t#transaction_t * i_next_transaction ; s#list_head i_list ; s#inode * i_vfs_inode ; unsigned long i_flags ; } 
jbd2_journal_inode_add_write extern int jbd2_journal_inode_add_write ( t#handle_t * , s#jbd2_inode * ) 
jbd2_journal_inode_add_wait extern int jbd2_journal_inode_add_wait ( t#handle_t * , s#jbd2_inode * ) 
jbd2_journal_inode_ranged_write extern int jbd2_journal_inode_ranged_write ( t#handle_t * , s#jbd2_inode * , t#loff_t , t#loff_t ) 
jbd2_journal_inode_ranged_wait extern int jbd2_journal_inode_ranged_wait ( t#handle_t * , s#jbd2_inode * , t#loff_t , t#loff_t ) 
jbd2_journal_init_jbd_inode extern void jbd2_journal_init_jbd_inode ( s#jbd2_inode * , s#inode * ) 
jbd2_journal_release_jbd_inode extern void jbd2_journal_release_jbd_inode ( t#journal_t * , s#jbd2_inode * ) 
jbd2_journal_begin_ordered_truncate extern int jbd2_journal_begin_ordered_truncate ( t#journal_t * , s#jbd2_inode * , t#loff_t ) 
jbd2_inode_cache extern s#kmem_cache * jbd2_inode_cache 
__jbd2_debug void __jbd2_debug ( int , const char * , const char * , unsigned int , const char * , ... ) 
jbd2_trans_will_send_data_barrier int jbd2_trans_will_send_data_barrier ( t#journal_t * , t#tid_t ) 
jbd2_transaction_committed int jbd2_transaction_committed ( t#journal_t * , t#tid_t ) 
jbd2_complete_transaction int jbd2_complete_transaction ( t#journal_t * , t#tid_t ) 
jbd2_journal_update_sb_errno extern void jbd2_journal_update_sb_errno ( t#journal_t * ) 
jbd2_journal_clear_features extern void jbd2_journal_clear_features ( t#journal_t * , unsigned long , unsigned long , unsigned long ) 

/* fs/jbd2/transaction.o */
s##posix_acl
s##vfsmount
s##sock
s##pipe_inode_info
s##poll_table_struct
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pollfd
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##bpf_prog_array
s##cgroup_taskset
s##mem_cgroup
s##mempolicy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##blk_mq_ctx
s##kmem_cache
s##workqueue_struct
s##blk_mq_hw_ctx
s##blk_mq_alloc_data
s##blk_mq_debugfs_attr
s##blk_queue_stats
s##rq_wb
s##blk_mq_ops
s##blk_stat_callback
s##blk_trace
s##blk_flush_queue
s##bsg_job
s##throtl_data
s##blk_mq_tag_set
s##hd_geometry
s##pr_ops
s##timer_rand_state
s##disk_events
s##badblocks
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##jbd2_revoke_table_s
s##proc_dir_entry
s##crypto_type
s##skcipher_givcrypt_request
jbd2__journal_start extern t#handle_t * jbd2__journal_start ( t#journal_t * , int , int , t#gfp_t , unsigned int , unsigned int ) 
jbd2_journal_start extern t#handle_t * jbd2_journal_start ( t#journal_t * , int ) 
jbd2_journal_free_reserved extern void jbd2_journal_free_reserved ( t#handle_t * ) 
jbd2_journal_start_reserved extern int jbd2_journal_start_reserved ( t#handle_t * , unsigned int , unsigned int ) 
jbd2__journal_restart extern int jbd2__journal_restart ( t#handle_t * , int , t#gfp_t ) 
jbd2_journal_restart extern int jbd2_journal_restart ( t#handle_t * , int ) 

/* fs/kernfs/dir.o */
s##seq_file
s##vfsmount
s##posix_acl
s##module
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##compat_timespec
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##iov_iter
s##swap_info_struct
s##device
s##kmem_cache
s##export_operations
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s#simple_xattrs struct simple_xattrs { s#list_head head ; t#spinlock_t lock ; } 
s#kernfs_iattrs struct kernfs_iattrs { s#iattr ia_iattr ; void * ia_secdata ; t#u32 ia_secdata_len ; s#simple_xattrs xattrs ; } 
kernfs_path_from_node int kernfs_path_from_node ( s#kernfs_node * , s#kernfs_node * , char * , t#size_t ) 
kernfs_get void kernfs_get ( s#kernfs_node * ) 
kernfs_put void kernfs_put ( s#kernfs_node * ) 
kernfs_find_and_get_ns s#kernfs_node * kernfs_find_and_get_ns ( s#kernfs_node * , const char * , const void * ) 

/* fs/kernfs/file.o */
s##vfsmount
s##posix_acl
s##module
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##mmu_notifier_mm
s##xol_area
s##compat_timespec
s##kmem_cache
s##fs_pin
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##cgroup_namespace
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##iov_iter
s##swap_info_struct
s##device
s##export_operations
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fscrypt_info
s##kernfs_open_node
kernfs_notify void kernfs_notify ( s#kernfs_node * ) 

/* fs/libfs.o */
s##posix_acl
s##module
s##iov_iter
s##poll_table_struct
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##compat_timespec
s##pollfd
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##device_private
s##sock
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##workqueue_struct
s##swap_info_struct
s##kmem_cache
s##mem_cgroup
s##mempolicy
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##iomap
s##xattr_handler
s##fscrypt_operations
s##mtd_info
s##blk_mq_ctx
s##blkcg_gq
s##blk_mq_hw_ctx
s##blk_mq_alloc_data
s##blk_mq_debugfs_attr
s##blk_queue_stats
s##rq_wb
s##blk_mq_ops
s##blk_stat_callback
s##blk_trace
s##blk_flush_queue
s##bsg_job
s##throtl_data
s##blk_mq_tag_set
s##hd_geometry
s##pr_ops
s##timer_rand_state
s##disk_events
s##badblocks
s##reclaim_state
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
simple_getattr extern int simple_getattr ( const s#path * , s#kstat * , t#u32 , unsigned int ) 
simple_statfs extern int simple_statfs ( s#dentry * , s#kstatfs * ) 
always_delete_dentry extern int always_delete_dentry ( const s#dentry * ) 
simple_dentry_operations extern const s#dentry_operations simple_dentry_operations 
simple_lookup extern s#dentry * simple_lookup ( s#inode * , s#dentry * , unsigned int ) 
dcache_dir_open extern int dcache_dir_open ( s#inode * , s#file * ) 
dcache_dir_close extern int dcache_dir_close ( s#inode * , s#file * ) 
dcache_dir_lseek extern t#loff_t dcache_dir_lseek ( s#file * , t#loff_t , int ) 
dcache_readdir extern int dcache_readdir ( s#file * , s#dir_context * ) 
generic_read_dir extern t#ssize_t generic_read_dir ( s#file * , char * , t#size_t , t#loff_t * ) 
simple_dir_operations extern const s#file_operations simple_dir_operations 
simple_dir_inode_operations extern const s#inode_operations simple_dir_inode_operations 
simple_recursive_removal extern void simple_recursive_removal ( s#dentry * , void ( * ) ( s#dentry * ) ) 
mount_pseudo_xattr extern s#dentry * mount_pseudo_xattr ( s#file_system_type * , char * , const s#super_operations * , const s#xattr_handler * * , const s#dentry_operations * , unsigned long ) 
simple_open extern int simple_open ( s#inode * , s#file * ) 
simple_link extern int simple_link ( s#dentry * , s#inode * , s#dentry * ) 
simple_empty extern int simple_empty ( s#dentry * ) 
simple_unlink extern int simple_unlink ( s#inode * , s#dentry * ) 
simple_rmdir extern int simple_rmdir ( s#inode * , s#dentry * ) 
simple_rename extern int simple_rename ( s#inode * , s#dentry * , s#inode * , s#dentry * , unsigned int ) 
simple_setattr extern int simple_setattr ( s#dentry * , s#iattr * ) 
simple_readpage extern int simple_readpage ( s#file * , s#page * ) 
simple_write_begin extern int simple_write_begin ( s#file * , s#address_space * , t#loff_t , unsigned , unsigned , s#page * * , void * * ) 
simple_write_end extern int simple_write_end ( s#file * , s#address_space * , t#loff_t , unsigned , unsigned , s#page * , void * ) 
s#tree_descr struct tree_descr { const char * name ; const s#file_operations * ops ; int mode ; } 
simple_fill_super extern int simple_fill_super ( s#super_block * , unsigned long , const s#tree_descr * ) 
simple_pin_fs extern int simple_pin_fs ( s#file_system_type * , s#vfsmount * * , int * ) 
simple_release_fs extern void simple_release_fs ( s#vfsmount * * , int * ) 
simple_read_from_buffer extern t#ssize_t simple_read_from_buffer ( void * , t#size_t , t#loff_t * , const void * , t#size_t ) 
simple_write_to_buffer extern t#ssize_t simple_write_to_buffer ( void * , t#size_t , t#loff_t * , const void * , t#size_t ) 
memory_read_from_buffer extern t#ssize_t memory_read_from_buffer ( void * , t#size_t , t#loff_t * , const void * , t#size_t ) 
simple_transaction_set void simple_transaction_set ( s#file * , t#size_t ) 
simple_transaction_get char * simple_transaction_get ( s#file * , const char * , t#size_t ) 
simple_transaction_read t#ssize_t simple_transaction_read ( s#file * , char * , t#size_t , t#loff_t * ) 
simple_transaction_release int simple_transaction_release ( s#inode * , s#file * ) 
simple_attr_open int simple_attr_open ( s#inode * , s#file * , int ( * ) ( void * , t#u64 * ) , int ( * ) ( void * , t#u64 ) , const char * ) 
simple_attr_release int simple_attr_release ( s#inode * , s#file * ) 
simple_attr_read t#ssize_t simple_attr_read ( s#file * , char * , t#size_t , t#loff_t * ) 
simple_attr_write t#ssize_t simple_attr_write ( s#file * , const char * , t#size_t , t#loff_t * ) 
generic_fh_to_dentry extern s#dentry * generic_fh_to_dentry ( s#super_block * , s#fid * , int , int , s#inode * ( * ) ( s#super_block * , t#u64 , t#u32 ) ) 
generic_fh_to_parent extern s#dentry * generic_fh_to_parent ( s#super_block * , s#fid * , int , int , s#inode * ( * ) ( s#super_block * , t#u64 , t#u32 ) ) 
__generic_file_fsync extern int __generic_file_fsync ( s#file * , t#loff_t , t#loff_t , int ) 
generic_file_fsync extern int generic_file_fsync ( s#file * , t#loff_t , t#loff_t , int ) 
generic_check_addressable extern int generic_check_addressable ( unsigned , t#u64 ) 
noop_fsync extern int noop_fsync ( s#file * , t#loff_t , t#loff_t , int ) 
noop_set_page_dirty extern int noop_set_page_dirty ( s#page * ) 
noop_invalidatepage extern void noop_invalidatepage ( s#page * , unsigned int , unsigned int ) 
noop_direct_IO extern t#ssize_t noop_direct_IO ( s#kiocb * , s#iov_iter * ) 
kfree_link extern void kfree_link ( void * ) 
alloc_anon_inode extern s#inode * alloc_anon_inode ( s#super_block * ) 
simple_nosetlease extern int simple_nosetlease ( s#file * , long , s#file_lock * * , void * * ) 
simple_get_link const char * simple_get_link ( s#dentry * , s#inode * , s#delayed_call * ) 
simple_symlink_inode_operations extern const s#inode_operations simple_symlink_inode_operations 

/* fs/lockd/clntlock.o */
s#rpc_timer struct rpc_timer { s#timer_list timer ; s#list_head list ; unsigned long expires ; } 
s#rpc_wait_queue struct rpc_wait_queue { t#spinlock_t lock ; s#list_head tasks [ ( 1 + ( 2 ) - ( - 1 ) ) ] ; t#pid_t owner ; unsigned char maxpriority ; unsigned char priority ; unsigned char nr ; unsigned short qlen ; s#rpc_timer timer_list ; const char * name ; } 
s#rpc_wait struct rpc_wait { s#list_head list ; s#list_head links ; s#list_head timer_list ; unsigned long expires ; } 
s##vfsmount
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##sec_path
s##workqueue_struct
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##kmem_cache
s##xfrm_state
s##lwtunnel_state
s##rtable
s##rt6_info
s##dn_route
s##prefix_info
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##phy_device
s##sfp_bus
s##prot_inuse
s##ipv4_devconf
s##fib_table
s##inet_peer_base
s##xt_table
s##inet_hashinfo
s##rt6_statistics
s##fib6_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##eventfd_ctx
s##mempolicy
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_mq_ctx
s##blk_mq_hw_ctx
s##blk_mq_alloc_data
s##blk_mq_debugfs_attr
s##blk_queue_stats
s##rq_wb
s##blk_mq_ops
s##blk_stat_callback
s##blk_trace
s##blk_flush_queue
s##bsg_job
s##throtl_data
s##blk_mq_tag_set
s##hd_geometry
s##pr_ops
s##timer_rand_state
s##disk_events
s##badblocks
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s#nlm_lockowner struct nlm_lockowner { s#list_head list ; t#atomic_t count ; s#nlm_host * host ; t#fl_owner_t owner ; t#uint32_t pid ; } 
s##nfs4_lock_state
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s#xdr_buf struct xdr_buf { s#kvec head [ 1 ] , tail [ 1 ] ; s#page * * pages ; unsigned int page_base , page_len , flags ; unsigned int buflen , len ; } 
s#xdr_stream struct xdr_stream { t#__be32 * p ; s#xdr_buf * buf ; t#__be32 * end ; s#kvec * iov ; s#kvec scratch ; s#page * * page_ptr ; unsigned int nwords ; } 
t#kxdreproc_t typedef void ( * kxdreproc_t ) ( void * , s#xdr_stream * , void * ) 
t#kxdrdproc_t typedef int ( * kxdrdproc_t ) ( void * , s#xdr_stream * , void * ) 
s#rpc_procinfo struct rpc_procinfo { t#u32 p_proc ; t#kxdreproc_t p_encode ; t#kxdrdproc_t p_decode ; unsigned int p_arglen ; unsigned int p_replen ; unsigned int p_count ; unsigned int p_timer ; t#u32 p_statidx ; const char * p_name ; } 
t#rpc_authflavor_t typedef t#u32 rpc_authflavor_t 
s#rpc_auth_create_args struct rpc_auth_create_args { t#rpc_authflavor_t pseudoflavor ; const char * target_name ; } 
s#auth_cred struct auth_cred { t#kuid_t uid ; t#kgid_t gid ; s#group_info * group_info ; const char * principal ; unsigned long ac_flags ; unsigned char machine_cred : 1 ; } 
s#rpcsec_gss_oid struct rpcsec_gss_oid { unsigned int len ; t#u8 data [ 32 ] ; } 
s#rpcsec_gss_info struct rpcsec_gss_info { s#rpcsec_gss_oid oid ; t#u32 qop ; t#u32 service ; } 
s#rpc_authops struct rpc_authops { s#module * owner ; t#rpc_authflavor_t au_flavor ; char * au_name ; s#rpc_auth * ( * create ) ( s#rpc_auth_create_args * , s#rpc_clnt * ) ; void ( * destroy ) ( s#rpc_auth * ) ; int ( * hash_cred ) ( s#auth_cred * , unsigned int ) ; s#rpc_cred * ( * lookup_cred ) ( s#rpc_auth * , s#auth_cred * , int ) ; s#rpc_cred * ( * crcreate ) ( s#rpc_auth * , s#auth_cred * , int , t#gfp_t ) ; int ( * list_pseudoflavors ) ( t#rpc_authflavor_t * , int ) ; t#rpc_authflavor_t ( * info2flavor ) ( s#rpcsec_gss_info * ) ; int ( * flavor2info ) ( t#rpc_authflavor_t , s#rpcsec_gss_info * ) ; int ( * key_timeout ) ( s#rpc_auth * , s#rpc_cred * ) ; } 
s##rpc_cred_cache
s#rpc_auth struct rpc_auth { unsigned int au_cslack ; unsigned int au_rslack ; unsigned int au_verfsize ; unsigned int au_flags ; const s#rpc_authops * au_ops ; t#rpc_authflavor_t au_flavor ; t#atomic_t au_count ; s#rpc_cred_cache * au_credcache ; } 
s#rpc_credops struct rpc_credops { const char * cr_name ; int ( * cr_init ) ( s#rpc_auth * , s#rpc_cred * ) ; void ( * crdestroy ) ( s#rpc_cred * ) ; int ( * crmatch ) ( s#auth_cred * , s#rpc_cred * , int ) ; s#rpc_cred * ( * crbind ) ( s#rpc_task * , s#rpc_cred * , int ) ; t#__be32 * ( * crmarshal ) ( s#rpc_task * , t#__be32 * ) ; int ( * crrefresh ) ( s#rpc_task * ) ; t#__be32 * ( * crvalidate ) ( s#rpc_task * , t#__be32 * ) ; int ( * crwrap_req ) ( s#rpc_task * , t#kxdreproc_t , void * , t#__be32 * , void * ) ; int ( * crunwrap_resp ) ( s#rpc_task * , t#kxdrdproc_t , void * , t#__be32 * , void * ) ; int ( * crkey_timeout ) ( s#rpc_cred * ) ; t#bool ( * crkey_to_expire ) ( s#rpc_cred * ) ; char * ( * crstringify_acceptor ) ( s#rpc_cred * ) ; } 
s#rpc_cred struct rpc_cred { s#hlist_node cr_hash ; s#list_head cr_lru ; s#callback_head cr_rcu ; s#rpc_auth * cr_auth ; const s#rpc_credops * cr_ops ; unsigned long cr_expire ; unsigned long cr_flags ; t#atomic_t cr_count ; t#kuid_t cr_uid ; } 
s#rpc_message struct rpc_message { s#rpc_procinfo * rpc_proc ; void * rpc_argp ; void * rpc_resp ; s#rpc_cred * rpc_cred ; } 
s#rpc_call_ops struct rpc_call_ops { void ( * rpc_call_prepare ) ( s#rpc_task * , void * ) ; void ( * rpc_call_done ) ( s#rpc_task * , void * ) ; void ( * rpc_count_stats ) ( s#rpc_task * , void * ) ; void ( * rpc_release ) ( void * ) ; } 
s#rpc_rqst struct rpc_rqst { s#rpc_xprt * rq_xprt ; s#xdr_buf rq_snd_buf ; s#xdr_buf rq_rcv_buf ; s#rpc_task * rq_task ; s#rpc_cred * rq_cred ; t#__be32 rq_xid ; int rq_cong ; t#u32 rq_seqno ; int rq_enc_pages_num ; s#page * * rq_enc_pages ; void ( * rq_release_snd_buf ) ( s#rpc_rqst * ) ; s#list_head rq_list ; void * rq_buffer ; t#size_t rq_callsize ; void * rq_rbuffer ; t#size_t rq_rcvsize ; t#size_t rq_xmit_bytes_sent ; t#size_t rq_reply_bytes_recvd ; s#xdr_buf rq_private_buf ; unsigned long rq_majortimeo ; unsigned long rq_timeout ; t#ktime_t rq_rtt ; unsigned int rq_retries ; unsigned int rq_connect_cookie ; t#u32 rq_bytes_sent ; t#ktime_t rq_xtime ; int rq_ntrans ; s#list_head rq_bc_list ; unsigned long rq_bc_pa_state ; s#list_head rq_bc_pa_list ; } 
s#rpc_task struct rpc_task { t#atomic_t tk_count ; int tk_status ; s#list_head tk_task ; void ( * tk_callback ) ( s#rpc_task * ) ; void ( * tk_action ) ( s#rpc_task * ) ; unsigned long tk_timeout ; unsigned long tk_runstate ; s#rpc_wait_queue * tk_waitqueue ; union { s#work_struct tk_work ; s#rpc_wait tk_wait ; } u ; s#rpc_message tk_msg ; void * tk_calldata ; const s#rpc_call_ops * tk_ops ; s#rpc_clnt * tk_client ; s#rpc_xprt * tk_xprt ; s#rpc_rqst * tk_rqstp ; s#workqueue_struct * tk_workqueue ; t#ktime_t tk_start ; t#pid_t tk_owner ; unsigned short tk_flags ; unsigned short tk_timeouts ; unsigned short tk_pid ; unsigned char tk_priority : 2 , tk_garb_retry : 2 , tk_cred_retry : 2 , tk_rebind_retry : 2 ; } 
s##svc_xprt
s#svc_pool_stats struct svc_pool_stats { t#atomic_long_t packets ; unsigned long sockets_queued ; t#atomic_long_t threads_woken ; t#atomic_long_t threads_timedout ; } 
s#svc_pool struct svc_pool { unsigned int sp_id ; t#spinlock_t sp_lock ; s#list_head sp_sockets ; unsigned int sp_nrthreads ; s#list_head sp_all_threads ; s#svc_pool_stats sp_stats ; unsigned long sp_flags ; } 
s#auth_domain struct auth_domain { s#kref ref ; s#hlist_node hash ; char * name ; s#auth_ops * flavour ; } 
s#auth_ops struct auth_ops { char * name ; s#module * owner ; int flavour ; int ( * accept ) ( s#svc_rqst * , t#__be32 * ) ; int ( * release ) ( s#svc_rqst * ) ; void ( * domain_release ) ( s#auth_domain * ) ; int ( * set_client ) ( s#svc_rqst * ) ; } 
s#gss_ctx struct gss_ctx { s#gss_api_mech * mech_type ; void * internal_ctx_id ; } 
s#xdr_netobj struct xdr_netobj { unsigned int len ; t#u8 * data ; } 
s#gss_api_ops struct gss_api_ops { int ( * gss_import_sec_context ) ( const void * , t#size_t , s#gss_ctx * , t#time_t * , t#gfp_t ) ; t#u32 ( * gss_get_mic ) ( s#gss_ctx * , s#xdr_buf * , s#xdr_netobj * ) ; t#u32 ( * gss_verify_mic ) ( s#gss_ctx * , s#xdr_buf * , s#xdr_netobj * ) ; t#u32 ( * gss_wrap ) ( s#gss_ctx * , int , s#xdr_buf * , s#page * * ) ; t#u32 ( * gss_unwrap ) ( s#gss_ctx * , int , s#xdr_buf * ) ; void ( * gss_delete_sec_context ) ( void * ) ; } 
s#pf_desc struct pf_desc { t#u32 pseudoflavor ; t#u32 qop ; t#u32 service ; char * name ; char * auth_domain_name ; t#bool datatouch ; } 
s#gss_api_mech struct gss_api_mech { s#list_head gm_list ; s#module * gm_owner ; s#rpcsec_gss_oid gm_oid ; char * gm_name ; const s#gss_api_ops * gm_ops ; int gm_pf_num ; s#pf_desc * gm_pfs ; const char * gm_upcall_enctypes ; } 
s#svc_cred struct svc_cred { t#kuid_t cr_uid ; t#kgid_t cr_gid ; s#group_info * cr_group_info ; t#u32 cr_flavor ; char * cr_raw_principal ; char * cr_principal ; s#gss_api_mech * cr_gss_mech ; } 
s#cache_head struct cache_head { s#hlist_node cache_list ; t#time_t expiry_time ; t#time_t last_refresh ; s#kref ref ; unsigned long flags ; } 
s#cache_deferred_req struct cache_deferred_req { s#hlist_node hash ; s#list_head recent ; s#cache_head * item ; void * owner ; void ( * revisit ) ( s#cache_deferred_req * , int ) ; } 
s#svc_deferred_req struct svc_deferred_req { t#u32 prot ; s#svc_xprt * xprt ; s#__kernel_sockaddr_storage addr ; t#size_t addrlen ; s#__kernel_sockaddr_storage daddr ; t#size_t daddrlen ; s#cache_deferred_req handle ; t#size_t xprt_hlen ; int argslen ; t#__be32 args [ 0 ] ; } 
s#cache_req struct cache_req { s#cache_deferred_req * ( * defer ) ( s#cache_req * ) ; int thread_wait ; } 
s##svc_cacherep
s#svc_rqst struct svc_rqst { s#list_head rq_all ; s#callback_head rq_rcu_head ; s#svc_xprt * rq_xprt ; s#__kernel_sockaddr_storage rq_addr ; t#size_t rq_addrlen ; s#__kernel_sockaddr_storage rq_daddr ; t#size_t rq_daddrlen ; s#svc_serv * rq_server ; s#svc_pool * rq_pool ; s#svc_procedure * rq_procinfo ; s#auth_ops * rq_authop ; s#svc_cred rq_cred ; void * rq_xprt_ctxt ; s#svc_deferred_req * rq_deferred ; t#size_t rq_xprt_hlen ; s#xdr_buf rq_arg ; s#xdr_buf rq_res ; s#page * rq_pages [ ( ( ( 1 * 1024 * 1024u ) + ( ( 1UL ) << 12 ) - 1 ) / ( ( 1UL ) << 12 ) + 2 + 1 ) + 1 ] ; s#page * * rq_respages ; s#page * * rq_next_page ; s#page * * rq_page_end ; s#kvec rq_vec [ ( ( ( 1 * 1024 * 1024u ) + ( ( 1UL ) << 12 ) - 1 ) / ( ( 1UL ) << 12 ) + 2 + 1 ) ] ; t#__be32 rq_xid ; t#u32 rq_prog ; t#u32 rq_vers ; t#u32 rq_proc ; t#u32 rq_prot ; int rq_cachetype ; unsigned long rq_flags ; void * rq_argp ; void * rq_resp ; void * rq_auth_data ; int rq_auth_slack ; int rq_reserved ; s#cache_req rq_chandle ; s#auth_domain * rq_client ; s#auth_domain * rq_gssclient ; s#svc_cacherep * rq_cacherep ; s#task_struct * rq_task ; t#spinlock_t rq_lock ; s#net * rq_bc_net ; } 
t#svc_procfunc typedef t#__be32 ( * svc_procfunc ) ( s#svc_rqst * , void * , void * ) 
t#kxdrproc_t typedef int ( * kxdrproc_t ) ( void * , t#__be32 * , void * ) 
s#svc_procedure struct svc_procedure { t#svc_procfunc pc_func ; t#kxdrproc_t pc_decode ; t#kxdrproc_t pc_encode ; t#kxdrproc_t pc_release ; unsigned int pc_argsize ; unsigned int pc_ressize ; unsigned int pc_count ; unsigned int pc_cachetype ; unsigned int pc_xdrressize ; } 
s#svc_version struct svc_version { t#u32 vs_vers ; t#u32 vs_nproc ; s#svc_procedure * vs_proc ; t#u32 vs_xdrsize ; t#bool vs_hidden ; t#bool vs_rpcb_optnl ; t#bool vs_need_cong_ctrl ; int ( * vs_dispatch ) ( s#svc_rqst * , t#__be32 * ) ; } 
s#svc_stat struct svc_stat { s#svc_program * program ; unsigned int netcnt , netudpcnt , nettcpcnt , nettcpconn ; unsigned int rpccnt , rpcbadfmt , rpcbadauth , rpcbadclnt ; } 
s#svc_program struct svc_program { s#svc_program * pg_next ; t#u32 pg_prog ; unsigned int pg_lovers ; unsigned int pg_hivers ; unsigned int pg_nvers ; s#svc_version * * pg_vers ; char * pg_name ; char * pg_class ; s#svc_stat * pg_stats ; int ( * pg_authenticate ) ( s#svc_rqst * ) ; } 
s#svc_serv_ops struct svc_serv_ops { void ( * svo_shutdown ) ( s#svc_serv * , s#net * ) ; int ( * svo_function ) ( void * ) ; void ( * svo_enqueue_xprt ) ( s#svc_xprt * ) ; int ( * svo_setup ) ( s#svc_serv * , s#svc_pool * , int ) ; s#module * svo_module ; } 
s#svc_serv struct svc_serv { s#svc_program * sv_program ; s#svc_stat * sv_stats ; t#spinlock_t sv_lock ; unsigned int sv_nrthreads ; unsigned int sv_maxconn ; unsigned int sv_max_payload ; unsigned int sv_max_mesg ; unsigned int sv_xdrsize ; s#list_head sv_permsocks ; s#list_head sv_tempsocks ; int sv_tmpcnt ; s#timer_list sv_temptimer ; char * sv_name ; unsigned int sv_nrpools ; s#svc_pool * sv_pools ; s#svc_serv_ops * sv_ops ; s#list_head sv_cb_list ; t#spinlock_t sv_cb_lock ; t#wait_queue_head_t sv_cb_waitq ; s#svc_xprt * sv_bc_xprt ; } 
s#rpc_xprt_ops struct rpc_xprt_ops { void ( * set_buffer_size ) ( s#rpc_xprt * , t#size_t , t#size_t ) ; int ( * reserve_xprt ) ( s#rpc_xprt * , s#rpc_task * ) ; void ( * release_xprt ) ( s#rpc_xprt * , s#rpc_task * ) ; void ( * alloc_slot ) ( s#rpc_xprt * , s#rpc_task * ) ; void ( * free_slot ) ( s#rpc_xprt * , s#rpc_rqst * ) ; void ( * rpcbind ) ( s#rpc_task * ) ; void ( * set_port ) ( s#rpc_xprt * , unsigned short ) ; void ( * connect ) ( s#rpc_xprt * , s#rpc_task * ) ; int ( * buf_alloc ) ( s#rpc_task * ) ; void ( * buf_free ) ( s#rpc_task * ) ; int ( * send_request ) ( s#rpc_task * ) ; void ( * set_retrans_timeout ) ( s#rpc_task * ) ; void ( * timer ) ( s#rpc_xprt * , s#rpc_task * ) ; void ( * release_request ) ( s#rpc_task * ) ; void ( * close ) ( s#rpc_xprt * ) ; void ( * destroy ) ( s#rpc_xprt * ) ; void ( * set_connect_timeout ) ( s#rpc_xprt * , unsigned long , unsigned long ) ; void ( * print_stats ) ( s#rpc_xprt * , s#seq_file * ) ; int ( * enable_swap ) ( s#rpc_xprt * ) ; void ( * disable_swap ) ( s#rpc_xprt * ) ; void ( * inject_disconnect ) ( s#rpc_xprt * ) ; int ( * bc_setup ) ( s#rpc_xprt * , unsigned int ) ; int ( * bc_up ) ( s#svc_serv * , s#net * ) ; t#size_t ( * bc_maxpayload ) ( s#rpc_xprt * ) ; void ( * bc_free_rqst ) ( s#rpc_rqst * ) ; void ( * bc_destroy ) ( s#rpc_xprt * , unsigned int ) ; } 
s#rpc_timeout struct rpc_timeout { unsigned long to_initval , to_maxval , to_increment ; unsigned int to_retries ; unsigned char to_exponential ; } 
E#RPC_DISPLAY_MAX ( 0 ) + 6 
s#rpc_xprt struct rpc_xprt { s#kref kref ; const s#rpc_xprt_ops * ops ; const s#rpc_timeout * timeout ; s#__kernel_sockaddr_storage addr ; t#size_t addrlen ; int prot ; unsigned long cong ; unsigned long cwnd ; t#size_t max_payload ; unsigned int tsh_size ; s#rpc_wait_queue binding ; s#rpc_wait_queue sending ; s#rpc_wait_queue pending ; s#rpc_wait_queue backlog ; s#list_head free ; unsigned int max_reqs ; unsigned int min_reqs ; unsigned int num_reqs ; unsigned long state ; unsigned char resvport : 1 ; t#atomic_t swapper ; unsigned int bind_index ; s#list_head xprt_switch ; t#u32 masked_id ; t#u32 xid_mask ; unsigned long bind_timeout , reestablish_timeout ; unsigned int connect_cookie ; s#work_struct task_cleanup ; s#timer_list timer ; unsigned long last_used , idle_timeout , connect_timeout , max_reconnect_timeout ; t#spinlock_t transport_lock ; t#spinlock_t reserve_lock ; t#spinlock_t recv_lock ; t#u32 xid ; s#rpc_task * snd_task ; s#svc_xprt * bc_xprt ; s#svc_serv * bc_serv ; int bc_alloc_count ; t#atomic_t bc_free_slots ; t#spinlock_t bc_pa_lock ; s#list_head bc_pa_list ; s#list_head recv ; struct { unsigned long bind_count , connect_count , connect_start , connect_time , sends , recvs , bad_xids , max_slots ; unsigned long long req_u , bklog_u , sending_u , pending_u ; } stat ; s#net * xprt_net ; const char * servername ; const char * address_strings [ E#RPC_DISPLAY_MAX ] ; s#dentry * debugfs ; t#atomic_t inject_disconnect ; s#callback_head rcu ; } 
s#rpc_version struct rpc_version { t#u32 number ; unsigned int nrprocs ; s#rpc_procinfo * procs ; } 
s#rpc_program struct rpc_program { const char * name ; t#u32 number ; unsigned int nrvers ; const s#rpc_version * * version ; s#rpc_stat * stats ; const char * pipe_dir_name ; } 
s#rpc_stat struct rpc_stat { const s#rpc_program * program ; unsigned int netcnt , netudpcnt , nettcpcnt , nettcpconn , netreconn ; unsigned int rpccnt , rpcretrans , rpcauthrefresh , rpcgarbage ; } 
s##rpc_iostats
s#rpc_rtt struct rpc_rtt { unsigned long timeo ; unsigned long srtt [ 5 ] ; unsigned long sdrtt [ 5 ] ; int ntimeouts [ 5 ] ; } 
s#rpc_pipe_dir_head struct rpc_pipe_dir_head { s#list_head pdh_entries ; s#dentry * pdh_dentry ; } 
s#rpc_xprt_iter_ops struct rpc_xprt_iter_ops { void ( * xpi_rewind ) ( s#rpc_xprt_iter * ) ; s#rpc_xprt * ( * xpi_xprt ) ( s#rpc_xprt_iter * ) ; s#rpc_xprt * ( * xpi_next ) ( s#rpc_xprt_iter * ) ; } 
s#rpc_xprt_switch struct rpc_xprt_switch { t#spinlock_t xps_lock ; s#kref xps_kref ; unsigned int xps_nxprts ; s#list_head xps_xprt_list ; s#net * xps_net ; const s#rpc_xprt_iter_ops * xps_iter_ops ; s#callback_head xps_rcu ; } 
s#rpc_xprt_iter struct rpc_xprt_iter { s#rpc_xprt_switch * xpi_xpswitch ; s#rpc_xprt * xpi_cursor ; const s#rpc_xprt_iter_ops * xpi_ops ; } 
s#rpc_clnt struct rpc_clnt { t#atomic_t cl_count ; unsigned int cl_clid ; s#list_head cl_clients ; s#list_head cl_tasks ; t#spinlock_t cl_lock ; s#rpc_xprt * cl_xprt ; s#rpc_procinfo * cl_procinfo ; t#u32 cl_prog , cl_vers , cl_maxproc ; s#rpc_auth * cl_auth ; s#rpc_stat * cl_stats ; s#rpc_iostats * cl_metrics ; unsigned int cl_softrtry : 1 , cl_discrtry : 1 , cl_noretranstimeo : 1 , cl_autobind : 1 , cl_chatty : 1 ; s#rpc_rtt * cl_rtt ; const s#rpc_timeout * cl_timeout ; t#atomic_t cl_swapper ; int cl_nodelen ; char cl_nodename [ 64 + 1 ] ; s#rpc_pipe_dir_head cl_pipedir_objects ; s#rpc_clnt * cl_parent ; s#rpc_rtt cl_rtt_default ; s#rpc_timeout cl_timeout_default ; const s#rpc_program * cl_program ; s#dentry * cl_debugfs ; s#rpc_xprt_iter cl_xpi ; } 
s#nsm_private struct nsm_private { unsigned char data [ 16 ] ; } 
s#nsm_handle struct nsm_handle { s#list_head sm_link ; t#atomic_t sm_count ; char * sm_mon_name ; char * sm_name ; s#__kernel_sockaddr_storage sm_addr ; t#size_t sm_addrlen ; unsigned int sm_monitored : 1 , sm_sticky : 1 ; s#nsm_private sm_priv ; char sm_addrbuf [ ( ( 8 * 4 + 7 ) + ( 1 + 10 ) + 1 ) ] ; } 
s#nlmclnt_operations struct nlmclnt_operations { void ( * nlmclnt_alloc_call ) ( void * ) ; t#bool ( * nlmclnt_unlock_prepare ) ( s#rpc_task * , void * ) ; void ( * nlmclnt_release_call ) ( void * ) ; } 
s#nlm_host struct nlm_host { s#hlist_node h_hash ; s#__kernel_sockaddr_storage h_addr ; t#size_t h_addrlen ; s#__kernel_sockaddr_storage h_srcaddr ; t#size_t h_srcaddrlen ; s#rpc_clnt * h_rpcclnt ; char * h_name ; t#u32 h_version ; unsigned short h_proto ; unsigned short h_reclaiming : 1 , h_server : 1 , h_noresvport : 1 , h_inuse : 1 ; t#wait_queue_head_t h_gracewait ; s#rw_semaphore h_rwsem ; t#u32 h_state ; t#u32 h_nsmstate ; t#u32 h_pidcount ; t#atomic_t h_count ; s#mutex h_mutex ; unsigned long h_nextrebind ; unsigned long h_expires ; s#list_head h_lockowners ; t#spinlock_t h_lock ; s#list_head h_granted ; s#list_head h_reclaim ; s#nsm_handle * h_nsmhandle ; char * h_addrbuf ; s#net * net ; char nodename [ 64 + 1 ] ; const s#nlmclnt_operations * h_nlmclnt_ops ; } 
s#nlmclnt_initdata struct nlmclnt_initdata { const char * hostname ; const s#sockaddr * address ; t#size_t addrlen ; unsigned short protocol ; t#u32 nfs_version ; int noresvport ; s#net * net ; const s#nlmclnt_operations * nlmclnt_ops ; } 
nlmclnt_init extern s#nlm_host * nlmclnt_init ( const s#nlmclnt_initdata * ) 
nlmclnt_done extern void nlmclnt_done ( s#nlm_host * ) 

/* fs/lockd/clntproc.o */
s##vfsmount
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##sec_path
s##workqueue_struct
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##kmem_cache
s##xfrm_state
s##lwtunnel_state
s##rtable
s##rt6_info
s##dn_route
s##prefix_info
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##phy_device
s##sfp_bus
s##prot_inuse
s##ipv4_devconf
s##fib_table
s##inet_peer_base
s##xt_table
s##inet_hashinfo
s##rt6_statistics
s##fib6_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##eventfd_ctx
s##mempolicy
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_mq_ctx
s##blk_mq_hw_ctx
s##blk_mq_alloc_data
s##blk_mq_debugfs_attr
s##blk_queue_stats
s##rq_wb
s##blk_mq_ops
s##blk_stat_callback
s##blk_trace
s##blk_flush_queue
s##bsg_job
s##throtl_data
s##blk_mq_tag_set
s##hd_geometry
s##pr_ops
s##timer_rand_state
s##disk_events
s##badblocks
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nfs4_lock_state
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##rpc_cred_cache
s##svc_xprt
s##svc_cacherep
s##rpc_iostats
nlmclnt_proc extern int nlmclnt_proc ( s#nlm_host * , int , s#file_lock * , void * ) 

/* fs/lockd/svc.o */
s##posix_acl
s##vfsmount
s##device_private
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##sec_path
s##workqueue_struct
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##kmem_cache
s##xfrm_state
s##lwtunnel_state
s##uncached_list
s##rt6_info
s##dn_route
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##ip_mc_list
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
s##prot_inuse
s##xt_table
s##inet_hashinfo
s##rt6_statistics
s##fib6_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##netns_ipvs
s##mpls_route
s##eventfd_ctx
s##mempolicy
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##rpc_cred_cache
s##rpc_iostats
s##nfs4_lock_state
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s#svc_xprt_ops struct svc_xprt_ops { s#svc_xprt * ( * xpo_create ) ( s#svc_serv * , s#net * , s#sockaddr * , int , int ) ; s#svc_xprt * ( * xpo_accept ) ( s#svc_xprt * ) ; int ( * xpo_has_wspace ) ( s#svc_xprt * ) ; int ( * xpo_recvfrom ) ( s#svc_rqst * ) ; void ( * xpo_prep_reply_hdr ) ( s#svc_rqst * ) ; int ( * xpo_sendto ) ( s#svc_rqst * ) ; void ( * xpo_release_rqst ) ( s#svc_rqst * ) ; void ( * xpo_detach ) ( s#svc_xprt * ) ; void ( * xpo_free ) ( s#svc_xprt * ) ; int ( * xpo_secure_port ) ( s#svc_rqst * ) ; void ( * xpo_kill_temp_xprt ) ( s#svc_xprt * ) ; } 
s#svc_xprt_class struct svc_xprt_class { const char * xcl_name ; s#module * xcl_owner ; const s#svc_xprt_ops * xcl_ops ; s#list_head xcl_list ; t#u32 xcl_max_payload ; int xcl_ident ; } 
s#svc_xprt struct svc_xprt { s#svc_xprt_class * xpt_class ; const s#svc_xprt_ops * xpt_ops ; s#kref xpt_ref ; s#list_head xpt_list ; s#list_head xpt_ready ; unsigned long xpt_flags ; s#svc_serv * xpt_server ; t#atomic_t xpt_reserved ; t#atomic_t xpt_nr_rqsts ; s#mutex xpt_mutex ; t#spinlock_t xpt_lock ; void * xpt_auth_cache ; s#list_head xpt_deferred ; s#__kernel_sockaddr_storage xpt_local ; t#size_t xpt_locallen ; s#__kernel_sockaddr_storage xpt_remote ; t#size_t xpt_remotelen ; char xpt_remotebuf [ ( 48 ) + 10 ] ; s#rpc_wait_queue xpt_bc_pending ; s#list_head xpt_users ; s#net * xpt_net ; s#rpc_xprt * xpt_bc_xprt ; s#rpc_xprt_switch * xpt_bc_xps ; } 
s##svc_cacherep
s#nfs_fh struct nfs_fh { unsigned short size ; unsigned char data [ 128 ] ; } 
s#nlmsvc_binding struct nlmsvc_binding { t#__be32 ( * fopen ) ( s#svc_rqst * , s#nfs_fh * , s#file * * ) ; void ( * fclose ) ( s#file * ) ; } 
nlmsvc_ops extern const s#nlmsvc_binding * nlmsvc_ops 
lockd_up extern int lockd_up ( s#net * ) 
lockd_down extern void lockd_down ( s#net * ) 

/* fs/lockd/svcsubs.o */
s##posix_acl
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##mmu_notifier_mm
s##xol_area
s##pid_namespace
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##sec_path
s##workqueue_struct
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##kmem_cache
s##xfrm_state
s##lwtunnel_state
s##rtable
s##rt6_info
s##dn_route
s##prefix_info
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##phy_device
s##sfp_bus
s##prot_inuse
s##ipv4_devconf
s##fib_table
s##inet_peer_base
s##xt_table
s##inet_hashinfo
s##rt6_statistics
s##fib6_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##swap_info_struct
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##rpc_clnt
s##rpc_procinfo
s##rpc_cred_cache
s##rpc_xprt
s##rpc_rqst
s##nfs4_lock_state
s##hd_struct
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##mtd_info
nlmsvc_unlock_all_by_sb int nlmsvc_unlock_all_by_sb ( s#super_block * ) 
nlmsvc_unlock_all_by_ip int nlmsvc_unlock_all_by_ip ( s#sockaddr * ) 

/* fs/locks.o */
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##module
s##writeback_control
s##kstatfs
s##iov_iter
s##pipe_inode_info
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##mem_cgroup
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##device_private
s##sock
s##kernfs_open_node
s##kernfs_iattrs
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##fwnode_handle
s##iommu_group
s##iommu_fwspec
s##kmem_cache
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##compat_timespec
s##nameidata
s##sem_undo_list
s##fs_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##bpf_prog_array
s##cgroup_taskset
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##ring_buffer
s##bpf_prog
s##static_key_mod
s##trace_array
s##tracer
s##trace_buffer
s##ring_buffer_iter
s##event_filter
s##ftrace_hash
s##numa_group
s##task_delay_info
s##uprobe
s##gs_cb
s##fs_pin
s##nlm_lockowner
s##nfs4_lock_state
locks_alloc_lock extern s#file_lock * locks_alloc_lock ( void ) 
locks_release_private extern void locks_release_private ( s#file_lock * ) 
locks_free_lock void locks_free_lock ( s#file_lock * ) 
locks_init_lock extern void locks_init_lock ( s#file_lock * ) 
locks_copy_conflock extern void locks_copy_conflock ( s#file_lock * , s#file_lock * ) 
locks_copy_lock extern void locks_copy_lock ( s#file_lock * , s#file_lock * ) 
posix_test_lock extern void posix_test_lock ( s#file * , s#file_lock * ) 
posix_lock_file extern int posix_lock_file ( s#file * , s#file_lock * , s#file_lock * ) 
lease_modify extern int lease_modify ( s#file_lock * , int , s#list_head * ) 
__break_lease extern int __break_lease ( s#inode * , unsigned int , unsigned int ) 
lease_get_mtime extern void lease_get_mtime ( s#inode * , s#timespec * ) 
generic_setlease extern int generic_setlease ( s#file * , long , s#file_lock * * , void * * ) 
vfs_setlease extern int vfs_setlease ( s#file * , long , s#file_lock * * , void * * ) 
locks_lock_inode_wait extern int locks_lock_inode_wait ( s#inode * , s#file_lock * ) 
vfs_test_lock extern int vfs_test_lock ( s#file * , s#file_lock * ) 
vfs_lock_file extern int vfs_lock_file ( s#file * , unsigned int , s#file_lock * , s#file_lock * ) 
locks_remove_posix extern void locks_remove_posix ( s#file * , t#fl_owner_t ) 
posix_unblock_lock extern int posix_unblock_lock ( s#file_lock * ) 
vfs_cancel_lock extern int vfs_cancel_lock ( s#file * , s#file_lock * ) 

/* fs/mbcache.o */
s##mb_cache
mb_cache_entry_create int mb_cache_entry_create ( s#mb_cache * , t#gfp_t , t#u32 , t#sector_t , t#bool ) 
s#mb_cache_entry struct mb_cache_entry { s#list_head e_list ; s#hlist_bl_node e_hash_list ; t#atomic_t e_refcnt ; t#u32 e_key ; t#u32 e_referenced : 1 ; t#u32 e_reusable : 1 ; t#sector_t e_block ; } 
__mb_cache_entry_free void __mb_cache_entry_free ( s#mb_cache_entry * ) 
mb_cache_entry_find_first s#mb_cache_entry * mb_cache_entry_find_first ( s#mb_cache * , t#u32 ) 
mb_cache_entry_find_next s#mb_cache_entry * mb_cache_entry_find_next ( s#mb_cache * , s#mb_cache_entry * ) 
mb_cache_entry_get s#mb_cache_entry * mb_cache_entry_get ( s#mb_cache * , t#u32 , t#sector_t ) 
mb_cache_entry_delete_block void mb_cache_entry_delete_block ( s#mb_cache * , t#u32 , t#sector_t ) 
mb_cache_entry_touch void mb_cache_entry_touch ( s#mb_cache * , s#mb_cache_entry * ) 
mb_cache_create s#mb_cache * mb_cache_create ( int ) 
mb_cache_destroy void mb_cache_destroy ( s#mb_cache * ) 

/* fs/mpage.o */
s##posix_acl
s##vfsmount
s##module
s##device_private
s##sock
s##iov_iter
s##poll_table_struct
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##compat_timespec
s##pollfd
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##bpf_prog_array
s##cgroup_taskset
s##kmem_cache
s##eventfd_ctx
s##mempolicy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_mq_ctx
s##blk_mq_hw_ctx
s##blk_mq_alloc_data
s##blk_mq_debugfs_attr
s##blk_queue_stats
s##rq_wb
s##blk_mq_ops
s##workqueue_struct
s##blk_stat_callback
s##blk_trace
s##blk_flush_queue
s##bsg_job
s##throtl_data
s##blk_mq_tag_set
s##hd_geometry
s##pr_ops
s##timer_rand_state
s##disk_events
s##badblocks
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##kernfs_open_node
s##kernfs_iattrs
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kstatfs
s##iomap
s##xattr_handler
s##fscrypt_operations
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
mpage_readpages int mpage_readpages ( s#address_space * , s#list_head * , unsigned , t#get_block_t ) 
mpage_readpage int mpage_readpage ( s#page * , t#get_block_t ) 
mpage_writepages int mpage_writepages ( s#address_space * , s#writeback_control * , t#get_block_t ) 
mpage_writepage int mpage_writepage ( s#page * , t#get_block_t * , s#writeback_control * ) 

/* fs/namei.o */
s##sock
s##bio_vec
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##mmu_notifier_mm
s##xol_area
s##kmem_cache
s##nameidata
s##sem_undo_list
s##files_struct
s##ipc_namespace
s##proc_dir_entry
s##uevent_sock
s##net_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##sec_path
s##xt_table
s##inet_hashinfo
s##fib_notifier_ops
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##neighbour
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##nf_hook_entry
s##ebt_table
s##workqueue_struct
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##bpf_prog_array
s##cgroup_taskset
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##robust_list_head
s##futex_pi_state
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##ring_buffer
s##bpf_prog
s##static_key_mod
s##trace_array
s##tracer
s##trace_buffer
s##ring_buffer_iter
s##event_filter
s##ftrace_hash
s##numa_group
s##task_delay_info
s##uprobe
s##gs_cb
s##writeback_control
s##swap_info_struct
s##nlm_lockowner
s##nfs4_lock_state
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##bdi_writeback
s##cdev
s##fscrypt_info
generic_permission extern int generic_permission ( s#inode * , int ) 
__inode_permission extern int __inode_permission ( s#inode * , int ) 
inode_permission extern int inode_permission ( s#inode * , int ) 
path_get extern void path_get ( const s#path * ) 
path_put extern void path_put ( const s#path * ) 
follow_up extern int follow_up ( s#path * ) 
follow_down_one extern int follow_down_one ( s#path * ) 
follow_down extern int follow_down ( s#path * ) 
full_name_hash extern unsigned int __attribute__ ( ( pure ) ) full_name_hash ( const void * , const char * , unsigned int ) 
hashlen_string extern t#u64 __attribute__ ( ( pure ) ) hashlen_string ( const void * , const char * ) 
kern_path extern int kern_path ( const char * , unsigned , s#path * ) 
vfs_path_lookup extern int vfs_path_lookup ( s#dentry * , s#vfsmount * , const char * , unsigned int , s#path * ) 
lookup_one_len extern s#dentry * lookup_one_len ( const char * , s#dentry * , int ) 
lookup_one_len_unlocked extern s#dentry * lookup_one_len_unlocked ( const char * , s#dentry * , int ) 
lookup_positive_unlocked extern s#dentry * lookup_positive_unlocked ( const char * , s#dentry * , int ) 
user_path_at_empty extern int user_path_at_empty ( int , const char * , unsigned , s#path * , int * ) 
kern_path_mountpoint extern int kern_path_mountpoint ( int , const char * , s#path * , unsigned int ) 
__check_sticky extern int __check_sticky ( s#inode * , s#inode * ) 
lock_rename extern s#dentry * lock_rename ( s#dentry * , s#dentry * ) 
unlock_rename extern void unlock_rename ( s#dentry * , s#dentry * ) 
vfs_create extern int vfs_create ( s#inode * , s#dentry * , t#umode_t , t#bool ) 
vfs_tmpfile extern s#dentry * vfs_tmpfile ( s#dentry * , t#umode_t , int ) 
kern_path_create extern s#dentry * kern_path_create ( int , const char * , s#path * , unsigned int ) 
done_path_create extern void done_path_create ( s#path * , s#dentry * ) 
user_path_create extern s#dentry * user_path_create ( int , const char * , s#path * , unsigned int ) 
vfs_mknod extern int vfs_mknod ( s#inode * , s#dentry * , t#umode_t , t#dev_t ) 
vfs_mkdir extern int vfs_mkdir ( s#inode * , s#dentry * , t#umode_t ) 
vfs_rmdir extern int vfs_rmdir ( s#inode * , s#dentry * ) 
vfs_unlink extern int vfs_unlink ( s#inode * , s#dentry * , s#inode * * ) 
vfs_symlink extern int vfs_symlink ( s#inode * , s#dentry * , const char * ) 
vfs_link extern int vfs_link ( s#dentry * , s#inode * , s#dentry * , s#inode * * ) 
vfs_rename extern int vfs_rename ( s#inode * , s#dentry * , s#inode * , s#dentry * , s#inode * * , unsigned int ) 
vfs_whiteout extern int vfs_whiteout ( s#inode * , s#dentry * ) 
vfs_readlink extern int vfs_readlink ( s#dentry * , char * , int ) 
vfs_get_link extern const char * vfs_get_link ( s#dentry * , s#delayed_call * ) 
page_get_link extern const char * page_get_link ( s#dentry * , s#inode * , s#delayed_call * ) 
page_put_link extern void page_put_link ( void * ) 
page_readlink extern int page_readlink ( s#dentry * , char * , int ) 
__page_symlink extern int __page_symlink ( s#inode * , const char * , int , int ) 
page_symlink extern int page_symlink ( s#inode * , const char * , int ) 
page_symlink_inode_operations extern const s#inode_operations page_symlink_inode_operations 

/* fs/namespace.o */
s##sock
s##posix_acl
s##module
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##uts_namespace
s##ipc_namespace
s##kmem_cache
s##net
s##bpf_prog_array
s##cgroup_taskset
s#proc_ns_operations struct proc_ns_operations { const char * name ; const char * real_ns_name ; int type ; s#ns_common * ( * get ) ( s#task_struct * ) ; void ( * put ) ( s#ns_common * ) ; int ( * install ) ( s#nsproxy * , s#ns_common * ) ; s#user_namespace * ( * owner ) ( s#ns_common * ) ; s#ns_common * ( * get_parent ) ( s#ns_common * ) ; } 
s##key_user
s##key_type
s##assoc_array_ptr
s##mmu_notifier_mm
s##xol_area
s##compat_timespec
s##nameidata
s##sem_undo_list
s##files_struct
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##ring_buffer
s##bpf_prog
s##static_key_mod
s##trace_array
s##tracer
s##trace_buffer
s##ring_buffer_iter
s##event_filter
s##ftrace_hash
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##uprobe
s##gs_cb
s##iov_iter
s##swap_info_struct
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
fs_kobj extern s#kobject * fs_kobj 
__mnt_is_readonly extern int __mnt_is_readonly ( s#vfsmount * ) 
mnt_want_write extern int mnt_want_write ( s#vfsmount * ) 
mnt_clone_write extern int mnt_clone_write ( s#vfsmount * ) 
mnt_want_write_file extern int mnt_want_write_file ( s#file * ) 
mnt_drop_write extern void mnt_drop_write ( s#vfsmount * ) 
mnt_drop_write_file extern void mnt_drop_write_file ( s#file * ) 
vfs_kern_mount extern s#vfsmount * vfs_kern_mount ( s#file_system_type * , int , const char * , void * ) 
vfs_submount extern s#vfsmount * vfs_submount ( const s#dentry * , s#file_system_type * , const char * , void * ) 
mntput extern void mntput ( s#vfsmount * ) 
mntget extern s#vfsmount * mntget ( s#vfsmount * ) 
path_is_mountpoint extern t#bool path_is_mountpoint ( const s#path * ) 
generic_show_options extern int generic_show_options ( s#seq_file * , s#dentry * ) 
save_mount_options extern void save_mount_options ( s#super_block * , char * ) 
replace_mount_options extern void replace_mount_options ( s#super_block * , char * ) 
may_umount_tree extern int may_umount_tree ( s#vfsmount * ) 
may_umount extern int may_umount ( s#vfsmount * ) 
clone_private_mount extern s#vfsmount * clone_private_mount ( const s#path * ) 
mnt_set_expiry extern void mnt_set_expiry ( s#vfsmount * , s#list_head * ) 
mark_mounts_for_expiry extern void mark_mounts_for_expiry ( s#list_head * ) 
mount_subtree extern s#dentry * mount_subtree ( s#vfsmount * , const char * ) 
path_is_under extern t#bool path_is_under ( const s#path * , const s#path * ) 
kern_mount_data extern s#vfsmount * kern_mount_data ( s#file_system_type * , void * ) 
kern_unmount extern void kern_unmount ( s#vfsmount * ) 

/* fs/nfs/client.o */
s##device_private
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##kmem_cache
s##fs_pin
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##sec_path
s##workqueue_struct
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##xfrm_state
s##lwtunnel_state
s##rtable
s##rt6_info
s##dn_route
s##prefix_info
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
s##prot_inuse
s##ipv4_devconf
s##fib_table
s##inet_peer_base
s##xt_table
s##inet_hashinfo
s##rt6_statistics
s##fib6_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##netns_ipvs
s##mpls_route
s##eventfd_ctx
s##mempolicy
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_mq_ctx
s##blk_mq_hw_ctx
s##blk_mq_alloc_data
s##blk_mq_debugfs_attr
s##blk_queue_stats
s##rq_wb
s##blk_mq_ops
s##blk_stat_callback
s##blk_trace
s##blk_flush_queue
s##bsg_job
s##throtl_data
s##blk_mq_tag_set
s##hd_geometry
s##pr_ops
s##timer_rand_state
s##disk_events
s##badblocks
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##rpc_cred_cache
s##svc_cacherep
s#rpc_iostats struct rpc_iostats { t#spinlock_t om_lock ; unsigned long om_ops , om_ntrans , om_timeouts ; unsigned long long om_bytes_sent , om_bytes_recv ; t#ktime_t om_queue , om_rtt , om_execute ; } 
s#nfs_fsid struct nfs_fsid { t#uint64_t major ; t#uint64_t minor ; } 
s#nfs4_string struct nfs4_string { unsigned int len ; char * data ; } 
s#nfs4_threshold struct nfs4_threshold { t#__u32 bm ; t#__u32 l_type ; t#__u64 rd_sz ; t#__u64 wr_sz ; t#__u64 rd_io_sz ; t#__u64 wr_io_sz ; } 
s#nfs_fattr struct nfs_fattr { unsigned int valid ; t#umode_t mode ; t#__u32 nlink ; t#kuid_t uid ; t#kgid_t gid ; t#dev_t rdev ; t#__u64 size ; union { struct { t#__u32 blocksize ; t#__u32 blocks ; } nfs2 ; struct { t#__u64 used ; } nfs3 ; } du ; s#nfs_fsid fsid ; t#__u64 fileid ; t#__u64 mounted_on_fileid ; s#timespec atime ; s#timespec mtime ; s#timespec ctime ; t#__u64 change_attr ; t#__u64 pre_change_attr ; t#__u64 pre_size ; s#timespec pre_mtime ; s#timespec pre_ctime ; unsigned long time_start ; unsigned long gencount ; s#nfs4_string * owner_name ; s#nfs4_string * group_name ; s#nfs4_threshold * mdsthreshold ; } 
s#nfs_fsinfo struct nfs_fsinfo { s#nfs_fattr * fattr ; t#__u32 rtmax ; t#__u32 rtpref ; t#__u32 rtmult ; t#__u32 wtmax ; t#__u32 wtpref ; t#__u32 wtmult ; t#__u32 dtpref ; t#__u64 maxfilesize ; s#timespec time_delta ; t#__u32 lease_time ; t#__u32 nlayouttypes ; t#__u32 layouttype [ 8 ] ; t#__u32 blksize ; t#__u32 clone_blksize ; } 
s#nfs_auth_info struct nfs_auth_info { unsigned int flavor_len ; t#rpc_authflavor_t flavors [ 12 ] ; } 
s#security_mnt_opts struct security_mnt_opts { char * * mnt_opts ; int * mnt_opts_flags ; int num_mnt_opts ; } 
s#nfs_parsed_mount_data struct nfs_parsed_mount_data { int flags ; unsigned int rsize , wsize ; unsigned int timeo , retrans ; unsigned int acregmin , acregmax , acdirmin , acdirmax ; unsigned int namlen ; unsigned int options ; unsigned int bsize ; s#nfs_auth_info auth_info ; t#rpc_authflavor_t selected_flavor ; char * client_address ; unsigned int version ; unsigned int minorversion ; char * fscache_uniq ; t#bool need_mount ; struct { s#__kernel_sockaddr_storage address ; t#size_t addrlen ; char * hostname ; t#u32 version ; int port ; unsigned short protocol ; } mount_server ; struct { s#__kernel_sockaddr_storage address ; t#size_t addrlen ; char * hostname ; char * export_path ; int port ; unsigned short protocol ; unsigned short nconnect ; } nfs_server ; s#security_mnt_opts lsm_opts ; s#net * net ; } 
s#nfs_clone_mount struct nfs_clone_mount { const s#super_block * sb ; const s#dentry * dentry ; s#nfs_fh * fh ; s#nfs_fattr * fattr ; char * hostname ; char * mnt_path ; s#sockaddr * addr ; t#size_t addrlen ; t#rpc_authflavor_t authflavor ; } 
s#nfs_mount_info struct nfs_mount_info { void ( * fill_super ) ( s#super_block * , s#nfs_mount_info * ) ; int ( * set_security ) ( s#super_block * , s#dentry * , s#nfs_mount_info * ) ; s#nfs_parsed_mount_data * parsed ; s#nfs_clone_mount * cloned ; s#nfs_fh * mntfh ; } 
s#nfs4_label struct nfs4_label { t#uint32_t lfs ; t#uint32_t pi ; t#u32 len ; char * label ; } 
s#nfs_access_entry struct nfs_access_entry { s#rb_node rb_node ; s#list_head lru ; unsigned long jiffies ; s#rpc_cred * cred ; int mask ; s#callback_head callback_head ; } 
s##nfs4_slot
s#nfs4_sequence_args struct nfs4_sequence_args { s#nfs4_slot * sa_slot ; t#u8 sa_cache_this : 1 , sa_privileged : 1 ; } 
s#nfs_removeargs struct nfs_removeargs { s#nfs4_sequence_args seq_args ; const s#nfs_fh * fh ; s#qstr name ; } 
s#nfs4_sequence_res struct nfs4_sequence_res { s#nfs4_slot * sr_slot ; unsigned long sr_timestamp ; int sr_status ; t#u32 sr_status_flags ; t#u32 sr_highest_slotid ; t#u32 sr_target_highest_slotid ; } 
s#nfs4_change_info struct nfs4_change_info { t#u32 atomic ; t#u64 before ; t#u64 after ; } 
s#nfs_removeres struct nfs_removeres { s#nfs4_sequence_res seq_res ; s#nfs_server * server ; s#nfs_fattr * dir_attr ; s#nfs4_change_info cinfo ; } 
s#nfs_unlinkdata struct nfs_unlinkdata { s#nfs_removeargs args ; s#nfs_removeres res ; s#dentry * dentry ; t#wait_queue_head_t wq ; s#rpc_cred * cred ; s#nfs_fattr dir_attr ; long timeout ; } 
s#nfs_renameargs struct nfs_renameargs { s#nfs4_sequence_args seq_args ; const s#nfs_fh * old_dir ; const s#nfs_fh * new_dir ; const s#qstr * old_name ; const s#qstr * new_name ; } 
s#nfs_renameres struct nfs_renameres { s#nfs4_sequence_res seq_res ; s#nfs_server * server ; s#nfs4_change_info old_cinfo ; s#nfs_fattr * old_fattr ; s#nfs4_change_info new_cinfo ; s#nfs_fattr * new_fattr ; } 
s#nfs_renamedata struct nfs_renamedata { s#nfs_renameargs args ; s#nfs_renameres res ; s#rpc_cred * cred ; s#inode * old_dir ; s#dentry * old_dentry ; s#nfs_fattr old_fattr ; s#inode * new_dir ; s#dentry * new_dentry ; s#nfs_fattr new_fattr ; void ( * complete ) ( s#rpc_task * , s#nfs_renamedata * ) ; long timeout ; } 
s#nfs_fsstat struct nfs_fsstat { s#nfs_fattr * fattr ; t#__u64 tbytes ; t#__u64 fbytes ; t#__u64 abytes ; t#__u64 tfiles ; t#__u64 ffiles ; t#__u64 afiles ; } 
s#nfs_pathconf struct nfs_pathconf { s#nfs_fattr * fattr ; t#__u32 max_link ; t#__u32 max_namelen ; } 
s#nfs_entry struct nfs_entry { t#__u64 ino ; t#__u64 cookie , prev_cookie ; const char * name ; unsigned int len ; int eof ; s#nfs_fh * fh ; s#nfs_fattr * fattr ; s#nfs4_label * label ; unsigned char d_type ; s#nfs_server * server ; } 
s#nfs_lock_context struct nfs_lock_context { t#atomic_t count ; s#list_head list ; s#nfs_open_context * open_context ; t#fl_owner_t lockowner ; t#atomic_t io_count ; } 
s#nfs_open_context struct nfs_open_context { s#nfs_lock_context lock_context ; t#fl_owner_t flock_owner ; s#dentry * dentry ; s#rpc_cred * cred ; s#nfs4_state * state ; t#fmode_t mode ; unsigned long flags ; int error ; s#list_head list ; s#nfs4_threshold * mdsthreshold ; } 
s#nfs_write_verifier struct nfs_write_verifier { char data [ 8 ] ; } 
s#nfs_page struct nfs_page { s#list_head wb_list ; s#page * wb_page ; s#nfs_open_context * wb_context ; s#nfs_lock_context * wb_lock_context ; unsigned long wb_index ; unsigned int wb_offset , wb_pgbase , wb_bytes ; s#kref wb_kref ; unsigned long wb_flags ; s#nfs_write_verifier wb_verf ; s#nfs_page * wb_this_page ; s#nfs_page * wb_head ; } 
e#nfs3_stable_how enum nfs3_stable_how { NFS_UNSTABLE = 0 , NFS_DATA_SYNC = 1 , NFS_FILE_SYNC = 2 , NFS_INVALID_STABLE_HOW = - 1 } 
s#nfs_writeverf struct nfs_writeverf { s#nfs_write_verifier verifier ; e#nfs3_stable_how committed ; } 
s#pnfs_layout_range struct pnfs_layout_range { t#u32 iomode ; t#u64 offset ; t#u64 length ; } 
s#nfs4_stateid_struct struct nfs4_stateid_struct { union { char data [ ( 4 + 12 ) ] ; struct { t#__be32 seqid ; char other [ 12 ] ; } __attribute__ ( ( packed ) ) ; } ; enum { NFS4_INVALID_STATEID_TYPE = 0 , NFS4_SPECIAL_STATEID_TYPE , NFS4_OPEN_STATEID_TYPE , NFS4_LOCK_STATEID_TYPE , NFS4_DELEGATION_STATEID_TYPE , NFS4_LAYOUT_STATEID_TYPE , NFS4_PNFS_DS_STATEID_TYPE , NFS4_REVOKED_STATEID_TYPE , } type ; } 
t#nfs4_stateid typedef s#nfs4_stateid_struct nfs4_stateid 
e#pnfs_iomode enum pnfs_iomode { IOMODE_READ = 1 , IOMODE_RW = 2 , IOMODE_ANY = 3 , } 
s#pnfs_layout_hdr struct pnfs_layout_hdr { t#atomic_t plh_refcount ; t#atomic_t plh_outstanding ; s#list_head plh_layouts ; s#list_head plh_bulk_destroy ; s#list_head plh_segs ; s#list_head plh_return_segs ; unsigned long plh_block_lgets ; unsigned long plh_retry_timestamp ; unsigned long plh_flags ; t#nfs4_stateid plh_stateid ; t#u32 plh_barrier ; t#u32 plh_return_seq ; e#pnfs_iomode plh_return_iomode ; t#loff_t plh_lwb ; s#rpc_cred * plh_lc_cred ; s#inode * plh_inode ; } 
s#pnfs_layout_segment struct pnfs_layout_segment { s#list_head pls_list ; s#list_head pls_lc_list ; s#pnfs_layout_range pls_range ; t#atomic_t pls_refcount ; t#u32 pls_seq ; unsigned long pls_flags ; s#pnfs_layout_hdr * pls_layout ; s#work_struct pls_work ; } 
s#nfs_pgio_completion_ops struct nfs_pgio_completion_ops { void ( * error_cleanup ) ( s#list_head * ) ; void ( * init_hdr ) ( s#nfs_pgio_header * ) ; void ( * completion ) ( s#nfs_pgio_header * ) ; void ( * reschedule_io ) ( s#nfs_pgio_header * ) ; } 
s#rpc_task_setup struct rpc_task_setup { s#rpc_task * task ; s#rpc_clnt * rpc_client ; s#rpc_xprt * rpc_xprt ; const s#rpc_message * rpc_message ; const s#rpc_call_ops * callback_ops ; void * callback_data ; s#workqueue_struct * workqueue ; unsigned short flags ; signed char priority ; } 
s#nfs_rw_ops struct nfs_rw_ops { s#nfs_pgio_header * ( * rw_alloc_header ) ( void ) ; void ( * rw_free_header ) ( s#nfs_pgio_header * ) ; int ( * rw_done ) ( s#rpc_task * , s#nfs_pgio_header * , s#inode * ) ; void ( * rw_result ) ( s#rpc_task * , s#nfs_pgio_header * ) ; void ( * rw_initiate ) ( s#nfs_pgio_header * , s#rpc_message * , const s#nfs_rpc_ops * , s#rpc_task_setup * , int ) ; } 
s##nfs_io_completion
s##nfs_direct_req
s#nfs_pgio_args struct nfs_pgio_args { s#nfs4_sequence_args seq_args ; s#nfs_fh * fh ; s#nfs_open_context * context ; s#nfs_lock_context * lock_context ; t#nfs4_stateid stateid ; t#__u64 offset ; t#__u32 count ; unsigned int pgbase ; s#page * * pages ; const t#u32 * bitmask ; e#nfs3_stable_how stable ; } 
s#nfs_pgio_res struct nfs_pgio_res { s#nfs4_sequence_res seq_res ; s#nfs_fattr * fattr ; t#__u32 count ; t#__u32 op_status ; int eof ; s#nfs_writeverf * verf ; const s#nfs_server * server ; } 
s#nfs_page_array struct nfs_page_array { s#page * * pagevec ; unsigned int npages ; s#page * page_array [ ( 8U ) ] ; } 
s#nfs_pgio_header struct nfs_pgio_header { s#inode * inode ; s#rpc_cred * cred ; s#list_head pages ; s#nfs_page * req ; s#nfs_writeverf verf ; t#fmode_t rw_mode ; s#pnfs_layout_segment * lseg ; t#loff_t io_start ; const s#rpc_call_ops * mds_ops ; void ( * release ) ( s#nfs_pgio_header * ) ; const s#nfs_pgio_completion_ops * completion_ops ; const s#nfs_rw_ops * rw_ops ; s#nfs_io_completion * io_completion ; s#nfs_direct_req * dreq ; void * layout_private ; t#spinlock_t lock ; int pnfs_error ; int error ; unsigned long good_bytes ; unsigned long flags ; s#rpc_task task ; s#nfs_fattr fattr ; s#nfs_pgio_args args ; s#nfs_pgio_res res ; unsigned long timestamp ; int ( * pgio_done_cb ) ( s#rpc_task * , s#nfs_pgio_header * ) ; t#__u64 mds_offset ; s#nfs_page_array page_array ; s#nfs_client * ds_clp ; int ds_commit_idx ; int pgio_mirror_idx ; } 
s#nfs_commitargs struct nfs_commitargs { s#nfs4_sequence_args seq_args ; s#nfs_fh * fh ; t#__u64 offset ; t#__u32 count ; const t#u32 * bitmask ; } 
s#nfs_commitres struct nfs_commitres { s#nfs4_sequence_res seq_res ; t#__u32 op_status ; s#nfs_fattr * fattr ; s#nfs_writeverf * verf ; const s#nfs_server * server ; } 
s#nfs_mds_commit_info struct nfs_mds_commit_info { t#atomic_t rpcs_out ; unsigned long ncommit ; s#list_head list ; } 
s#pnfs_commit_bucket struct pnfs_commit_bucket { s#list_head written ; s#list_head committing ; s#pnfs_layout_segment * wlseg ; s#pnfs_layout_segment * clseg ; s#nfs_writeverf direct_verf ; } 
s#pnfs_ds_commit_info struct pnfs_ds_commit_info { int nwritten ; int ncommitting ; int nbuckets ; s#pnfs_commit_bucket * buckets ; } 
s#nfs_commit_info struct nfs_commit_info { s#inode * inode ; s#nfs_mds_commit_info * mds ; s#pnfs_ds_commit_info * ds ; s#nfs_direct_req * dreq ; const s#nfs_commit_completion_ops * completion_ops ; } 
s#nfs_commit_completion_ops struct nfs_commit_completion_ops { void ( * completion ) ( s#nfs_commit_data * ) ; void ( * resched_write ) ( s#nfs_commit_info * , s#nfs_page * ) ; } 
s#nfs_commit_data struct nfs_commit_data { s#rpc_task task ; s#inode * inode ; s#rpc_cred * cred ; s#nfs_fattr fattr ; s#nfs_writeverf verf ; s#list_head pages ; s#list_head list ; s#nfs_direct_req * dreq ; s#nfs_commitargs args ; s#nfs_commitres res ; s#nfs_open_context * context ; s#pnfs_layout_segment * lseg ; s#nfs_client * ds_clp ; int ds_commit_index ; t#loff_t lwb ; const s#rpc_call_ops * mds_ops ; const s#nfs_commit_completion_ops * completion_ops ; int ( * commit_done_cb ) ( s#rpc_task * , s#nfs_commit_data * ) ; unsigned long flags ; } 
s#nfs_client_initdata struct nfs_client_initdata { unsigned long init_flags ; const char * hostname ; const s#sockaddr * addr ; const char * nodename ; const char * ip_addr ; t#size_t addrlen ; s#nfs_subversion * nfs_mod ; int proto ; t#u32 minorversion ; unsigned int nconnect ; s#net * net ; const s#rpc_timeout * timeparms ; } 
s#nfs_rpc_ops struct nfs_rpc_ops { t#u32 version ; const s#dentry_operations * dentry_ops ; const s#inode_operations * dir_inode_ops ; const s#inode_operations * file_inode_ops ; const s#file_operations * file_ops ; const s#nlmclnt_operations * nlmclnt_ops ; int ( * getroot ) ( s#nfs_server * , s#nfs_fh * , s#nfs_fsinfo * ) ; s#vfsmount * ( * submount ) ( s#nfs_server * , s#dentry * , s#nfs_fh * , s#nfs_fattr * ) ; s#dentry * ( * try_mount ) ( int , const char * , s#nfs_mount_info * , s#nfs_subversion * ) ; int ( * getattr ) ( s#nfs_server * , s#nfs_fh * , s#nfs_fattr * , s#nfs4_label * ) ; int ( * setattr ) ( s#dentry * , s#nfs_fattr * , s#iattr * ) ; int ( * lookup ) ( s#inode * , const s#qstr * , s#nfs_fh * , s#nfs_fattr * , s#nfs4_label * ) ; int ( * access ) ( s#inode * , s#nfs_access_entry * ) ; int ( * readlink ) ( s#inode * , s#page * , unsigned int , unsigned int ) ; int ( * create ) ( s#inode * , s#dentry * , s#iattr * , int ) ; int ( * remove ) ( s#inode * , const s#qstr * ) ; void ( * unlink_setup ) ( s#rpc_message * , s#inode * ) ; void ( * unlink_rpc_prepare ) ( s#rpc_task * , s#nfs_unlinkdata * ) ; int ( * unlink_done ) ( s#rpc_task * , s#inode * ) ; void ( * rename_setup ) ( s#rpc_message * , s#inode * ) ; void ( * rename_rpc_prepare ) ( s#rpc_task * , s#nfs_renamedata * ) ; int ( * rename_done ) ( s#rpc_task * , s#inode * , s#inode * ) ; int ( * link ) ( s#inode * , s#inode * , const s#qstr * ) ; int ( * symlink ) ( s#inode * , s#dentry * , s#page * , unsigned int , s#iattr * ) ; int ( * mkdir ) ( s#inode * , s#dentry * , s#iattr * ) ; int ( * rmdir ) ( s#inode * , const s#qstr * ) ; int ( * readdir ) ( s#dentry * , s#rpc_cred * , t#u64 , s#page * * , unsigned int , int ) ; int ( * mknod ) ( s#inode * , s#dentry * , s#iattr * , t#dev_t ) ; int ( * statfs ) ( s#nfs_server * , s#nfs_fh * , s#nfs_fsstat * ) ; int ( * fsinfo ) ( s#nfs_server * , s#nfs_fh * , s#nfs_fsinfo * ) ; int ( * pathconf ) ( s#nfs_server * , s#nfs_fh * , s#nfs_pathconf * ) ; int ( * set_capabilities ) ( s#nfs_server * , s#nfs_fh * ) ; int ( * decode_dirent ) ( s#xdr_stream * , s#nfs_entry * , int ) ; int ( * pgio_rpc_prepare ) ( s#rpc_task * , s#nfs_pgio_header * ) ; void ( * read_setup ) ( s#nfs_pgio_header * , s#rpc_message * ) ; int ( * read_done ) ( s#rpc_task * , s#nfs_pgio_header * ) ; void ( * write_setup ) ( s#nfs_pgio_header * , s#rpc_message * ) ; int ( * write_done ) ( s#rpc_task * , s#nfs_pgio_header * ) ; void ( * commit_setup ) ( s#nfs_commit_data * , s#rpc_message * ) ; void ( * commit_rpc_prepare ) ( s#rpc_task * , s#nfs_commit_data * ) ; int ( * commit_done ) ( s#rpc_task * , s#nfs_commit_data * ) ; int ( * lock ) ( s#file * , int , s#file_lock * ) ; int ( * lock_check_bounds ) ( const s#file_lock * ) ; void ( * clear_acl_cache ) ( s#inode * ) ; void ( * close_context ) ( s#nfs_open_context * , int ) ; s#inode * ( * open_context ) ( s#inode * , s#nfs_open_context * , int , s#iattr * , int * ) ; int ( * have_delegation ) ( s#inode * , t#fmode_t ) ; int ( * return_delegation ) ( s#inode * ) ; s#nfs_client * ( * alloc_client ) ( const s#nfs_client_initdata * ) ; s#nfs_client * ( * init_client ) ( s#nfs_client * , const s#nfs_client_initdata * ) ; void ( * free_client ) ( s#nfs_client * ) ; s#nfs_server * ( * create_server ) ( s#nfs_mount_info * , s#nfs_subversion * ) ; s#nfs_server * ( * clone_server ) ( s#nfs_server * , s#nfs_fh * , s#nfs_fattr * , t#rpc_authflavor_t ) ; } 
t#nfs4_verifier typedef struct { char data [ 8 ] ; } nfs4_verifier 
s##idmap
s#nfs_seqid_counter struct nfs_seqid_counter { t#ktime_t create_time ; int owner_id ; int flags ; t#u32 counter ; t#spinlock_t lock ; s#list_head list ; s#rpc_wait_queue wait ; } 
s#nfs_seqid struct nfs_seqid { s#nfs_seqid_counter * sequence ; s#list_head list ; s#rpc_task * task ; } 
s#nfs4_state_recovery_ops struct nfs4_state_recovery_ops { int owner_flag_bit ; int state_flag_bit ; int ( * recover_open ) ( s#nfs4_state_owner * , s#nfs4_state * ) ; int ( * recover_lock ) ( s#nfs4_state * , s#file_lock * ) ; int ( * establish_clid ) ( s#nfs_client * , s#rpc_cred * ) ; int ( * reclaim_complete ) ( s#nfs_client * , s#rpc_cred * ) ; int ( * detect_trunking ) ( s#nfs_client * , s#nfs_client * * , s#rpc_cred * ) ; } 
s#nfs4_state_maintenance_ops struct nfs4_state_maintenance_ops { int ( * sched_state_renewal ) ( s#nfs_client * , s#rpc_cred * , unsigned ) ; s#rpc_cred * ( * get_state_renewal_cred_locked ) ( s#nfs_client * ) ; int ( * renew_lease ) ( s#nfs_client * , s#rpc_cred * ) ; } 
s#nfs4_pathname struct nfs4_pathname { unsigned int ncomponents ; s#nfs4_string components [ 512 ] ; } 
s#nfs4_fs_location struct nfs4_fs_location { unsigned int nservers ; s#nfs4_string servers [ 10 ] ; s#nfs4_pathname rootpath ; } 
s#nfs4_fs_locations struct nfs4_fs_locations { s#nfs_fattr fattr ; const s#nfs_server * server ; s#nfs4_pathname fs_path ; int nlocations ; s#nfs4_fs_location locations [ 10 ] ; } 
s#nfs4_mig_recovery_ops struct nfs4_mig_recovery_ops { int ( * get_locations ) ( s#inode * , s#nfs4_fs_locations * , s#page * , s#rpc_cred * ) ; int ( * fsid_present ) ( s#inode * , s#rpc_cred * ) ; } 
s#nfs4_minor_version_ops struct nfs4_minor_version_ops { t#u32 minor_version ; unsigned init_caps ; int ( * init_client ) ( s#nfs_client * ) ; void ( * shutdown_client ) ( s#nfs_client * ) ; t#bool ( * match_stateid ) ( const t#nfs4_stateid * , const t#nfs4_stateid * ) ; int ( * find_root_sec ) ( s#nfs_server * , s#nfs_fh * , s#nfs_fsinfo * ) ; void ( * free_lock_state ) ( s#nfs_server * , s#nfs4_lock_state * ) ; int ( * test_and_free_expired ) ( s#nfs_server * , t#nfs4_stateid * , s#rpc_cred * ) ; s#nfs_seqid * ( * alloc_seqid ) ( s#nfs_seqid_counter * , t#gfp_t ) ; int ( * session_trunk ) ( s#rpc_clnt * , s#rpc_xprt * , void * ) ; const s#rpc_call_ops * call_sync_ops ; const s#nfs4_state_recovery_ops * reboot_recovery_ops ; const s#nfs4_state_recovery_ops * nograce_recovery_ops ; const s#nfs4_state_maintenance_ops * state_renewal_ops ; const s#nfs4_mig_recovery_ops * mig_recovery_ops ; } 
s##nfs4_slot_table
s##nfs4_session
s#nfs41_server_owner struct nfs41_server_owner { t#uint64_t minor_id ; t#uint32_t major_id_sz ; char major_id [ 1024 ] ; } 
s#nfs41_server_scope struct nfs41_server_scope { t#uint32_t server_scope_sz ; char server_scope [ 1024 ] ; } 
s#nfstime4 struct nfstime4 { t#u64 seconds ; t#u32 nseconds ; } 
s#nfs41_impl_id struct nfs41_impl_id { char domain [ 1024 + 1 ] ; char name [ 1024 + 1 ] ; s#nfstime4 date ; } 
s##fscache_cache_tag
s#nfs_client struct nfs_client { t#atomic_t cl_count ; t#atomic_t cl_mds_count ; int cl_cons_state ; unsigned long cl_res_state ; unsigned long cl_flags ; s#__kernel_sockaddr_storage cl_addr ; t#size_t cl_addrlen ; char * cl_hostname ; char * cl_acceptor ; s#list_head cl_share_link ; s#list_head cl_superblocks ; s#rpc_clnt * cl_rpcclient ; const s#nfs_rpc_ops * rpc_ops ; int cl_proto ; s#nfs_subversion * cl_nfs_mod ; t#u32 cl_minorversion ; unsigned int cl_nconnect ; s#rpc_cred * cl_machine_cred ; s#list_head cl_ds_clients ; t#u64 cl_clientid ; t#nfs4_verifier cl_confirm ; unsigned long cl_state ; t#spinlock_t cl_lock ; unsigned long cl_lease_time ; unsigned long cl_last_renewal ; s#delayed_work cl_renewd ; s#rpc_wait_queue cl_rpcwaitq ; s#idmap * cl_idmap ; const char * cl_owner_id ; t#u32 cl_cb_ident ; const s#nfs4_minor_version_ops * cl_mvops ; unsigned long cl_mig_gen ; s#nfs4_slot_table * cl_slot_tbl ; t#u32 cl_seqid ; t#u32 cl_exchange_flags ; s#nfs4_session * cl_session ; t#bool cl_preserve_clid ; s#nfs41_server_owner * cl_serverowner ; s#nfs41_server_scope * cl_serverscope ; s#nfs41_impl_id * cl_implid ; unsigned long cl_sp4_flags ; t#wait_queue_head_t cl_lock_waitq ; char cl_ipaddr [ 48 ] ; s#fscache_cookie * fscache ; s#net * cl_net ; } 
s##nlm_host
E#__NFSIOS_BYTESMAX ( 0 ) + 8 
E#__NFSIOS_FSCACHEMAX 5 
E#__NFSIOS_COUNTSMAX ( 0 ) + 27 
s#nfs_iostats struct nfs_iostats { unsigned long long bytes [ E#__NFSIOS_BYTESMAX ] ; unsigned long long fscache [ E#__NFSIOS_FSCACHEMAX ] ; unsigned long events [ E#__NFSIOS_COUNTSMAX ] ; } 
s#nfs_fscache_key struct nfs_fscache_key { s#rb_node node ; s#nfs_client * nfs_client ; struct { struct { unsigned long s_flags ; } super ; struct { s#nfs_fsid fsid ; int flags ; unsigned int rsize ; unsigned int wsize ; unsigned int acregmin ; unsigned int acregmax ; unsigned int acdirmin ; unsigned int acdirmax ; } nfs_server ; struct { t#rpc_authflavor_t au_flavor ; } rpc_auth ; t#u8 uniq_len ; char uniquifier [ 0 ] ; } key ; } 
s#nfs4_layoutdriver_data struct nfs4_layoutdriver_data { s#page * * pages ; t#__u32 pglen ; t#__u32 len ; } 
s#nfs4_layoutget_res struct nfs4_layoutget_res { s#nfs4_sequence_res seq_res ; t#__u32 return_on_close ; s#pnfs_layout_range range ; t#__u32 type ; t#nfs4_stateid stateid ; s#nfs4_layoutdriver_data * layoutp ; } 
s#nfs_pgio_mirror struct nfs_pgio_mirror { s#list_head pg_list ; unsigned long pg_bytes_written ; t#size_t pg_count ; t#size_t pg_bsize ; unsigned int pg_base ; unsigned char pg_recoalesce : 1 ; } 
s#nfs_pageio_descriptor struct nfs_pageio_descriptor { unsigned char pg_moreio : 1 ; s#inode * pg_inode ; const s#nfs_pageio_ops * pg_ops ; const s#nfs_rw_ops * pg_rw_ops ; int pg_ioflags ; int pg_error ; const s#rpc_call_ops * pg_rpc_callops ; const s#nfs_pgio_completion_ops * pg_completion_ops ; s#pnfs_layout_segment * pg_lseg ; s#nfs_io_completion * pg_io_completion ; s#nfs_direct_req * pg_dreq ; void * pg_layout_private ; unsigned int pg_bsize ; t#u32 pg_mirror_count ; s#nfs_pgio_mirror * pg_mirrors ; s#nfs_pgio_mirror pg_mirrors_static [ 1 ] ; s#nfs_pgio_mirror * pg_mirrors_dynamic ; t#u32 pg_mirror_idx ; } 
s#nfs_pageio_ops struct nfs_pageio_ops { void ( * pg_init ) ( s#nfs_pageio_descriptor * , s#nfs_page * ) ; t#size_t ( * pg_test ) ( s#nfs_pageio_descriptor * , s#nfs_page * , s#nfs_page * ) ; int ( * pg_doio ) ( s#nfs_pageio_descriptor * ) ; unsigned int ( * pg_get_mirror_count ) ( s#nfs_pageio_descriptor * , s#nfs_page * ) ; void ( * pg_cleanup ) ( s#nfs_pageio_descriptor * ) ; } 
e#pnfs_try_status enum pnfs_try_status { PNFS_ATTEMPTED = 0 , PNFS_NOT_ATTEMPTED = 1 , PNFS_TRY_AGAIN = 2 , } 
s#nfs4_deviceid struct nfs4_deviceid { char data [ 16 ] ; } 
s#nfs4_deviceid_node struct nfs4_deviceid_node { s#hlist_node node ; s#hlist_node tmpnode ; const s#pnfs_layoutdriver_type * ld ; const s#nfs_client * nfs_client ; unsigned long flags ; unsigned long timestamp_unavailable ; s#nfs4_deviceid deviceid ; s#callback_head rcu ; t#atomic_t ref ; } 
s#pnfs_device struct pnfs_device { s#nfs4_deviceid dev_id ; unsigned int layout_type ; unsigned int mincount ; unsigned int maxcount ; s#page * * pages ; unsigned int pgbase ; unsigned int pglen ; unsigned char nocache : 1 ; } 
s#nfs4_xdr_opaque_ops struct nfs4_xdr_opaque_ops { void ( * encode ) ( s#xdr_stream * , const void * , const s#nfs4_xdr_opaque_data * ) ; void ( * free ) ( s#nfs4_xdr_opaque_data * ) ; } 
s#nfs4_xdr_opaque_data struct nfs4_xdr_opaque_data { const s#nfs4_xdr_opaque_ops * ops ; void * data ; } 
s#nfs4_layoutreturn_args struct nfs4_layoutreturn_args { s#nfs4_sequence_args seq_args ; s#pnfs_layout_hdr * layout ; s#inode * inode ; s#pnfs_layout_range range ; t#nfs4_stateid stateid ; t#__u32 layout_type ; s#nfs4_xdr_opaque_data * ld_private ; } 
s#nfs4_layoutcommit_args struct nfs4_layoutcommit_args { s#nfs4_sequence_args seq_args ; t#nfs4_stateid stateid ; t#__u64 lastbytewritten ; s#inode * inode ; const t#u32 * bitmask ; t#size_t layoutupdate_len ; s#page * layoutupdate_page ; s#page * * layoutupdate_pages ; t#__be32 * start_p ; } 
s#nfs4_layoutcommit_res struct nfs4_layoutcommit_res { s#nfs4_sequence_res seq_res ; s#nfs_fattr * fattr ; const s#nfs_server * server ; int status ; } 
s#nfs4_layoutcommit_data struct nfs4_layoutcommit_data { s#rpc_task task ; s#nfs_fattr fattr ; s#list_head lseg_list ; s#rpc_cred * cred ; s#inode * inode ; s#nfs4_layoutcommit_args args ; s#nfs4_layoutcommit_res res ; } 
s#nfs42_layoutstat_devinfo struct nfs42_layoutstat_devinfo { s#nfs4_deviceid dev_id ; t#__u64 offset ; t#__u64 length ; t#__u64 read_count ; t#__u64 read_bytes ; t#__u64 write_count ; t#__u64 write_bytes ; t#__u32 layout_type ; s#nfs4_xdr_opaque_data ld_private ; } 
s#nfs42_layoutstat_args struct nfs42_layoutstat_args { s#nfs4_sequence_args seq_args ; s#nfs_fh * fh ; s#inode * inode ; t#nfs4_stateid stateid ; int num_dev ; s#nfs42_layoutstat_devinfo * devinfo ; } 
s#pnfs_layoutdriver_type struct pnfs_layoutdriver_type { s#list_head pnfs_tblid ; const t#u32 id ; const char * name ; s#module * owner ; unsigned flags ; unsigned max_deviceinfo_size ; int ( * set_layoutdriver ) ( s#nfs_server * , const s#nfs_fh * ) ; int ( * clear_layoutdriver ) ( s#nfs_server * ) ; s#pnfs_layout_hdr * ( * alloc_layout_hdr ) ( s#inode * , t#gfp_t ) ; void ( * free_layout_hdr ) ( s#pnfs_layout_hdr * ) ; s#pnfs_layout_segment * ( * alloc_lseg ) ( s#pnfs_layout_hdr * , s#nfs4_layoutget_res * , t#gfp_t ) ; void ( * free_lseg ) ( s#pnfs_layout_segment * ) ; void ( * add_lseg ) ( s#pnfs_layout_hdr * , s#pnfs_layout_segment * , s#list_head * ) ; void ( * return_range ) ( s#pnfs_layout_hdr * , s#pnfs_layout_range * ) ; const s#nfs_pageio_ops * pg_read_ops ; const s#nfs_pageio_ops * pg_write_ops ; s#pnfs_ds_commit_info * ( * get_ds_info ) ( s#inode * ) ; void ( * mark_request_commit ) ( s#nfs_page * , s#pnfs_layout_segment * , s#nfs_commit_info * , t#u32 ) ; void ( * clear_request_commit ) ( s#nfs_page * , s#nfs_commit_info * ) ; int ( * scan_commit_lists ) ( s#nfs_commit_info * , int ) ; void ( * recover_commit_reqs ) ( s#list_head * , s#nfs_commit_info * ) ; s#nfs_page * ( * search_commit_reqs ) ( s#nfs_commit_info * , s#page * ) ; int ( * commit_pagelist ) ( s#inode * , s#list_head * , int , s#nfs_commit_info * ) ; int ( * sync ) ( s#inode * , t#bool ) ; e#pnfs_try_status ( * read_pagelist ) ( s#nfs_pgio_header * ) ; e#pnfs_try_status ( * write_pagelist ) ( s#nfs_pgio_header * , int ) ; void ( * free_deviceid_node ) ( s#nfs4_deviceid_node * ) ; s#nfs4_deviceid_node * ( * alloc_deviceid_node ) ( s#nfs_server * , s#pnfs_device * , t#gfp_t ) ; int ( * prepare_layoutreturn ) ( s#nfs4_layoutreturn_args * ) ; void ( * cleanup_layoutcommit ) ( s#nfs4_layoutcommit_data * ) ; int ( * prepare_layoutcommit ) ( s#nfs4_layoutcommit_args * ) ; int ( * prepare_layoutstats ) ( s#nfs42_layoutstat_args * ) ; } 
s#nfs_server struct nfs_server { s#nfs_client * nfs_client ; s#list_head client_link ; s#list_head master_link ; s#rpc_clnt * client ; s#rpc_clnt * client_acl ; s#nlm_host * nlm_host ; s#nfs_iostats * io_stats ; t#atomic_long_t writeback ; int flags ; unsigned int caps ; unsigned int rsize ; unsigned int rpages ; unsigned int wsize ; unsigned int wpages ; unsigned int wtmult ; unsigned int dtsize ; unsigned short port ; unsigned int bsize ; unsigned int acregmin ; unsigned int acregmax ; unsigned int acdirmin ; unsigned int acdirmax ; unsigned int namelen ; unsigned int options ; unsigned int clone_blksize ; s#nfs_fsid fsid ; t#__u64 maxfilesize ; s#timespec time_delta ; unsigned long mount_time ; s#super_block * super ; t#dev_t s_dev ; s#nfs_auth_info auth_info ; s#nfs_fscache_key * fscache_key ; s#fscache_cookie * fscache ; t#u32 pnfs_blksize ; t#u32 attr_bitmask [ 3 ] ; t#u32 attr_bitmask_nl [ 3 ] ; t#u32 exclcreat_bitmask [ 3 ] ; t#u32 cache_consistency_bitmask [ 3 ] ; t#u32 acl_bitmask ; t#u32 fh_expire_type ; s#pnfs_layoutdriver_type * pnfs_curr_ld ; s#rpc_wait_queue roc_rpcwaitq ; void * pnfs_ld_data ; s#rb_root state_owners ; s#ida openowner_id ; s#ida lockowner_id ; s#list_head state_owners_lru ; s#list_head layouts ; s#list_head delegations ; unsigned long mig_gen ; unsigned long mig_status ; void ( * destroy ) ( s#nfs_server * ) ; t#atomic_t active ; s#__kernel_sockaddr_storage mountd_address ; t#size_t mountd_addrlen ; t#u32 mountd_version ; unsigned short mountd_port ; unsigned short mountd_protocol ; s#rpc_wait_queue uoc_rpcwaitq ; } 
s#nfs4_state_owner struct nfs4_state_owner { s#nfs_server * so_server ; s#list_head so_lru ; unsigned long so_expires ; s#rb_node so_server_node ; s#rpc_cred * so_cred ; t#spinlock_t so_lock ; t#atomic_t so_count ; unsigned long so_flags ; s#list_head so_states ; s#nfs_seqid_counter so_seqid ; t#seqcount_t so_reclaim_seqcount ; s#mutex so_delegreturn_mutex ; } 
s#nfs4_state struct nfs4_state { s#list_head open_states ; s#list_head inode_states ; s#list_head lock_states ; s#nfs4_state_owner * owner ; s#inode * inode ; unsigned long flags ; t#spinlock_t state_lock ; t#seqlock_t seqlock ; t#nfs4_stateid stateid ; t#nfs4_stateid open_stateid ; unsigned int n_rdonly ; unsigned int n_wronly ; unsigned int n_rdwr ; t#fmode_t state ; t#atomic_t count ; } 
s#nfs4_lock_state struct nfs4_lock_state { s#list_head ls_locks ; s#nfs4_state * ls_state ; unsigned long ls_flags ; s#nfs_seqid_counter ls_seqid ; t#nfs4_stateid ls_stateid ; t#atomic_t ls_count ; t#fl_owner_t ls_owner ; } 
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s#nfs_subversion struct nfs_subversion { s#module * owner ; s#file_system_type * nfs_fs ; const s#rpc_version * rpc_vers ; const s#nfs_rpc_ops * rpc_ops ; const s#super_operations * sops ; const s#xattr_handler * * xattr ; s#list_head list ; } 
register_nfs_version void register_nfs_version ( s#nfs_subversion * ) 
unregister_nfs_version void unregister_nfs_version ( s#nfs_subversion * ) 
nfs_alloc_client extern s#nfs_client * nfs_alloc_client ( const s#nfs_client_initdata * ) 
nfs_free_client extern void nfs_free_client ( s#nfs_client * ) 
nfs_put_client extern void nfs_put_client ( s#nfs_client * ) 
nfs_client_init_is_complete extern t#bool nfs_client_init_is_complete ( const s#nfs_client * ) 
nfs_client_init_status extern int nfs_client_init_status ( const s#nfs_client * ) 
nfs_wait_client_init_complete extern int nfs_wait_client_init_complete ( const s#nfs_client * ) 
nfs_get_client s#nfs_client * nfs_get_client ( const s#nfs_client_initdata * ) 
nfs_mark_client_ready extern void nfs_mark_client_ready ( s#nfs_client * , int ) 
nfs_init_timeout_values void nfs_init_timeout_values ( s#rpc_timeout * , int , int , int ) 
nfs_create_rpc_client int nfs_create_rpc_client ( s#nfs_client * , const s#nfs_client_initdata * , t#rpc_authflavor_t ) 
nfs_init_server_rpcclient int nfs_init_server_rpcclient ( s#nfs_server * , const s#rpc_timeout * , t#rpc_authflavor_t ) 
nfs_init_client extern s#nfs_client * nfs_init_client ( s#nfs_client * , const s#nfs_client_initdata * ) 
nfs_probe_fsinfo int nfs_probe_fsinfo ( s#nfs_server * , s#nfs_fh * , s#nfs_fattr * ) 
nfs_server_copy_userdata void nfs_server_copy_userdata ( s#nfs_server * , s#nfs_server * ) 
nfs_server_insert_lists void nfs_server_insert_lists ( s#nfs_server * ) 
nfs_server_remove_lists void nfs_server_remove_lists ( s#nfs_server * ) 
nfs_alloc_server s#nfs_server * nfs_alloc_server ( void ) 
nfs_free_server extern void nfs_free_server ( s#nfs_server * ) 
nfs_create_server extern s#nfs_server * nfs_create_server ( s#nfs_mount_info * , s#nfs_subversion * ) 
nfs_clone_server extern s#nfs_server * nfs_clone_server ( s#nfs_server * , s#nfs_fh * , s#nfs_fattr * , t#rpc_authflavor_t ) 

/* fs/nfs/delegation.o */
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##pid_namespace
s##nlm_lockowner
s##rpc_cred_cache
s##workqueue_struct
s##svc_serv
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_dir_entry
s##uevent_sock
s##sec_path
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##kmem_cache
s##xfrm_state
s##lwtunnel_state
s##rtable
s##rt6_info
s##dn_route
s##prefix_info
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##phy_device
s##sfp_bus
s##prot_inuse
s##ipv4_devconf
s##fib_table
s##inet_peer_base
s##xt_table
s##inet_hashinfo
s##rt6_statistics
s##fib6_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##svc_xprt
s##rpc_iostats
s##nlmclnt_operations
s##nfs_subversion
s##nfs4_slot
s##pnfs_layout_segment
s##nfs_io_completion
s##nfs_direct_req
s##idmap
s##nfs4_slot_table
s##nfs4_session
s##fscache_cookie
s##nlm_host
s##nfs_iostats
s##nfs_fscache_key
s##pnfs_layoutdriver_type
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##ipc_namespace
s##mnt_namespace
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_mq_ctx
s##blk_mq_hw_ctx
s##blk_mq_alloc_data
s##blk_mq_debugfs_attr
s##blk_queue_stats
s##rq_wb
s##blk_mq_ops
s##blk_stat_callback
s##blk_trace
s##blk_flush_queue
s##bsg_job
s##throtl_data
s##blk_mq_tag_set
s##hd_geometry
s##pr_ops
s##timer_rand_state
s##disk_events
s##badblocks
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##swap_info_struct
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
nfs_remove_bad_delegation void nfs_remove_bad_delegation ( s#inode * , const t#nfs4_stateid * ) 

/* fs/nfs/dir.o */
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##pid_namespace
s##nlm_lockowner
s##rpc_cred_cache
s##workqueue_struct
s##svc_serv
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_dir_entry
s##uevent_sock
s##sec_path
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##kmem_cache
s##xfrm_state
s##lwtunnel_state
s##rtable
s##rt6_info
s##dn_route
s##prefix_info
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##phy_device
s##sfp_bus
s##prot_inuse
s##ipv4_devconf
s##fib_table
s##inet_peer_base
s##xt_table
s##inet_hashinfo
s##rt6_statistics
s##fib6_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##svc_xprt
s##rpc_iostats
s##nlmclnt_operations
s##nfs_subversion
s##nfs4_slot
s##pnfs_layout_segment
s##nfs_io_completion
s##nfs_direct_req
s##idmap
s##nfs4_slot_table
s##nfs4_session
s##fscache_cache_tag
s##nlm_host
s##pnfs_layoutdriver_type
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##ipc_namespace
s##mnt_namespace
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_mq_ctx
s##blk_mq_hw_ctx
s##blk_mq_alloc_data
s##blk_mq_debugfs_attr
s##blk_queue_stats
s##rq_wb
s##blk_mq_ops
s##blk_stat_callback
s##blk_trace
s##blk_flush_queue
s##bsg_job
s##throtl_data
s##blk_mq_tag_set
s##hd_geometry
s##pr_ops
s##timer_rand_state
s##disk_events
s##badblocks
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##kstatfs
s##export_operations
s##fscrypt_operations
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
nfs_force_lookup_revalidate extern void nfs_force_lookup_revalidate ( s#inode * ) 
nfs_dentry_operations extern const s#dentry_operations nfs_dentry_operations 
nfs_lookup s#dentry * nfs_lookup ( s#inode * , s#dentry * , unsigned int ) 
nfs4_dentry_operations extern const s#dentry_operations nfs4_dentry_operations 
nfs_atomic_open int nfs_atomic_open ( s#inode * , s#dentry * , s#file * , unsigned , t#umode_t , int * ) 
nfs_instantiate extern int nfs_instantiate ( s#dentry * , s#nfs_fh * , s#nfs_fattr * , s#nfs4_label * ) 
nfs_create int nfs_create ( s#inode * , s#dentry * , t#umode_t , t#bool ) 
nfs_mknod int nfs_mknod ( s#inode * , s#dentry * , t#umode_t , t#dev_t ) 
nfs_mkdir int nfs_mkdir ( s#inode * , s#dentry * , t#umode_t ) 
nfs_rmdir int nfs_rmdir ( s#inode * , s#dentry * ) 
nfs_unlink int nfs_unlink ( s#inode * , s#dentry * ) 
nfs_symlink int nfs_symlink ( s#inode * , s#dentry * , const char * ) 
nfs_link int nfs_link ( s#dentry * , s#inode * , s#dentry * ) 
nfs_rename int nfs_rename ( s#inode * , s#dentry * , s#inode * , s#dentry * , unsigned int ) 
nfs_access_zap_cache extern void nfs_access_zap_cache ( s#inode * ) 
nfs_access_add_cache extern void nfs_access_add_cache ( s#inode * , s#nfs_access_entry * ) 
nfs_access_set_mask extern void nfs_access_set_mask ( s#nfs_access_entry * , t#u32 ) 
nfs_may_open extern int nfs_may_open ( s#inode * , s#rpc_cred * , int ) 
nfs_permission extern int nfs_permission ( s#inode * , int ) 

/* fs/nfs/direct.o */
s##nfs_direct_req
nfs_dreq_bytes_left extern t#ssize_t nfs_dreq_bytes_left ( s#nfs_direct_req * ) 

/* fs/nfs/file.o */
nfs_check_flags int nfs_check_flags ( int ) 
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##pid_namespace
s##nlm_lockowner
s##rpc_cred_cache
s##workqueue_struct
s##svc_serv
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_dir_entry
s##uevent_sock
s##sec_path
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##kmem_cache
s##xfrm_state
s##lwtunnel_state
s##rtable
s##rt6_info
s##dn_route
s##prefix_info
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##phy_device
s##sfp_bus
s##prot_inuse
s##ipv4_devconf
s##fib_table
s##inet_peer_base
s##xt_table
s##inet_hashinfo
s##rt6_statistics
s##fib6_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##svc_xprt
s##rpc_iostats
s##nlmclnt_operations
s##nfs_subversion
s##nfs4_slot
s##nfs_io_completion
s##nfs_direct_req
s##idmap
s##nfs4_slot_table
s##nfs4_session
s##fscache_cache_tag
s##nlm_host
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##ipc_namespace
s##mnt_namespace
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_mq_ctx
s##blk_mq_hw_ctx
s##blk_mq_alloc_data
s##blk_mq_debugfs_attr
s##blk_queue_stats
s##rq_wb
s##blk_mq_ops
s##blk_stat_callback
s##blk_trace
s##blk_flush_queue
s##bsg_job
s##throtl_data
s##blk_mq_tag_set
s##hd_geometry
s##pr_ops
s##timer_rand_state
s##disk_events
s##badblocks
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
nfs_file_release int nfs_file_release ( s#inode * , s#file * ) 
nfs_file_llseek t#loff_t nfs_file_llseek ( s#file * , t#loff_t , int ) 
nfs_file_read t#ssize_t nfs_file_read ( s#kiocb * , s#iov_iter * ) 
nfs_file_mmap int nfs_file_mmap ( s#file * , s#vm_area_struct * ) 
nfs_file_fsync int nfs_file_fsync ( s#file * , t#loff_t , t#loff_t , int ) 
nfs_file_write t#ssize_t nfs_file_write ( s#kiocb * , s#iov_iter * ) 
nfs_lock int nfs_lock ( s#file * , int , s#file_lock * ) 
nfs_flock int nfs_flock ( s#file * , int , s#file_lock * ) 
nfs_file_operations extern const s#file_operations nfs_file_operations 

/* fs/nfs/fscache.o */
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##pid_namespace
s##nlm_lockowner
s##rpc_cred_cache
s##workqueue_struct
s##svc_serv
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_dir_entry
s##uevent_sock
s##sec_path
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##kmem_cache
s##xfrm_state
s##lwtunnel_state
s##rtable
s##rt6_info
s##dn_route
s##prefix_info
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##phy_device
s##sfp_bus
s##prot_inuse
s##ipv4_devconf
s##fib_table
s##inet_peer_base
s##xt_table
s##inet_hashinfo
s##rt6_statistics
s##fib6_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##svc_xprt
s##rpc_iostats
s##nlmclnt_operations
s##nfs_subversion
s##nfs4_slot
s##pnfs_layout_segment
s##nfs_io_completion
s##nfs_direct_req
s##idmap
s##nfs4_slot_table
s##nfs4_session
s##fscache_cache_tag
s##nlm_host
s##pnfs_layoutdriver_type
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##ipc_namespace
s##mnt_namespace
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_mq_ctx
s##blk_mq_hw_ctx
s##blk_mq_alloc_data
s##blk_mq_debugfs_attr
s##blk_queue_stats
s##rq_wb
s##blk_mq_ops
s##blk_stat_callback
s##blk_trace
s##blk_flush_queue
s##bsg_job
s##throtl_data
s##blk_mq_tag_set
s##hd_geometry
s##pr_ops
s##timer_rand_state
s##disk_events
s##badblocks
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##swap_info_struct
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
nfs_fscache_open_file extern void nfs_fscache_open_file ( s#inode * , s#file * ) 

/* fs/nfs/inode.o */
s#wait_bit_key struct wait_bit_key { void * flags ; int bit_nr ; unsigned long timeout ; } 
nfs_wait_bit_killable extern int nfs_wait_bit_killable ( s#wait_bit_key * , int ) 
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##pid_namespace
s##nlm_lockowner
s##rpc_cred_cache
s##workqueue_struct
s##svc_xprt
s##svc_cacherep
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_dir_entry
s##uevent_sock
s##sec_path
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##kmem_cache
s##xfrm_state
s##lwtunnel_state
s##rtable
s##rt6_info
s##dn_route
s##prefix_info
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##phy_device
s##sfp_bus
s##prot_inuse
s##ipv4_devconf
s##fib_table
s##inet_peer_base
s##xt_table
s##inet_hashinfo
s##rt6_statistics
s##fib6_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##netns_ipvs
s##mpls_route
s##xattr_handler
s##nfs4_slot
s##nfs_io_completion
s##nfs_direct_req
s##idmap
s##nfs4_slot_table
s##nfs4_session
s##fscache_cache_tag
s##nlm_host
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##ipc_namespace
s##mnt_namespace
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_mq_ctx
s##blk_mq_hw_ctx
s##blk_mq_alloc_data
s##blk_mq_debugfs_attr
s##blk_queue_stats
s##rq_wb
s##blk_mq_ops
s##blk_stat_callback
s##blk_trace
s##blk_flush_queue
s##bsg_job
s##throtl_data
s##blk_mq_tag_set
s##hd_geometry
s##pr_ops
s##timer_rand_state
s##disk_events
s##badblocks
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##swap_info_struct
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##export_operations
s##fscrypt_operations
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
nfs_drop_inode extern int nfs_drop_inode ( s#inode * ) 
nfs_clear_inode extern void nfs_clear_inode ( s#inode * ) 
nfs_sync_inode extern int nfs_sync_inode ( s#inode * ) 
nfs_zap_acl_cache void nfs_zap_acl_cache ( s#inode * ) 
nfs_invalidate_atime extern void nfs_invalidate_atime ( s#inode * ) 
nfs4_label_alloc extern s#nfs4_label * nfs4_label_alloc ( s#nfs_server * , t#gfp_t ) 
nfs_setsecurity extern void nfs_setsecurity ( s#inode * , s#nfs_fattr * , s#nfs4_label * ) 
nfs_fhget extern s#inode * nfs_fhget ( s#super_block * , s#nfs_fh * , s#nfs_fattr * , s#nfs4_label * ) 
nfs_setattr extern int nfs_setattr ( s#dentry * , s#iattr * ) 
nfs_setattr_update_inode extern void nfs_setattr_update_inode ( s#inode * , s#iattr * , s#nfs_fattr * ) 
nfs_getattr extern int nfs_getattr ( const s#path * , s#kstat * , t#u32 , unsigned int ) 
nfs_get_lock_context extern s#nfs_lock_context * nfs_get_lock_context ( s#nfs_open_context * ) 
nfs_put_lock_context extern void nfs_put_lock_context ( s#nfs_lock_context * ) 
nfs_close_context void nfs_close_context ( s#nfs_open_context * , int ) 
alloc_nfs_open_context extern s#nfs_open_context * alloc_nfs_open_context ( s#dentry * , t#fmode_t , s#file * ) 
get_nfs_open_context extern s#nfs_open_context * get_nfs_open_context ( s#nfs_open_context * ) 
put_nfs_open_context extern void put_nfs_open_context ( s#nfs_open_context * ) 
nfs_inode_attach_open_context extern void nfs_inode_attach_open_context ( s#nfs_open_context * ) 
nfs_file_set_open_context extern void nfs_file_set_open_context ( s#file * , s#nfs_open_context * ) 
nfs_open extern int nfs_open ( s#inode * , s#file * ) 
nfs_revalidate_inode extern int nfs_revalidate_inode ( s#nfs_server * , s#inode * ) 
nfs_inc_attr_generation_counter extern unsigned long nfs_inc_attr_generation_counter ( void ) 
nfs_fattr_init extern void nfs_fattr_init ( s#nfs_fattr * ) 
nfs_alloc_fattr extern s#nfs_fattr * nfs_alloc_fattr ( void ) 
nfs_alloc_fhandle extern s#nfs_fh * nfs_alloc_fhandle ( void ) 
_nfs_display_fhandle_hash extern t#u32 _nfs_display_fhandle_hash ( const s#nfs_fh * ) 
_nfs_display_fhandle extern void _nfs_display_fhandle ( const s#nfs_fh * , const char * ) 
nfs_refresh_inode extern int nfs_refresh_inode ( s#inode * , s#nfs_fattr * ) 
nfs_post_op_update_inode extern int nfs_post_op_update_inode ( s#inode * , s#nfs_fattr * ) 
nfs_post_op_update_inode_force_wcc extern int nfs_post_op_update_inode_force_wcc ( s#inode * , s#nfs_fattr * ) 
nfs_alloc_inode extern s#inode * nfs_alloc_inode ( s#super_block * ) 
nfs_destroy_inode extern void nfs_destroy_inode ( s#inode * ) 
nfsiod_workqueue extern s#workqueue_struct * nfsiod_workqueue 
nfs_net_id extern unsigned int nfs_net_id 

/* fs/nfs/namespace.o */
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##mmu_notifier_mm
s##xol_area
s##pid_namespace
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##sec_path
s##workqueue_struct
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##kmem_cache
s##xfrm_state
s##lwtunnel_state
s##rtable
s##rt6_info
s##dn_route
s##prefix_info
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##phy_device
s##sfp_bus
s##prot_inuse
s##ipv4_devconf
s##fib_table
s##inet_peer_base
s##xt_table
s##inet_hashinfo
s##rt6_statistics
s##fib6_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_mq_ctx
s##blk_mq_hw_ctx
s##blk_mq_alloc_data
s##blk_mq_debugfs_attr
s##blk_queue_stats
s##rq_wb
s##blk_mq_ops
s##blk_stat_callback
s##blk_trace
s##blk_flush_queue
s##bsg_job
s##throtl_data
s##blk_mq_tag_set
s##hd_geometry
s##pr_ops
s##timer_rand_state
s##disk_events
s##badblocks
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##swap_info_struct
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##mtd_info
s##nlm_lockowner
s##rpc_cred_cache
s##svc_serv
s##svc_xprt
s##rpc_iostats
s##nlmclnt_operations
s##nfs_subversion
s##nfs4_slot
s##pnfs_layout_segment
s##nfs_io_completion
s##nfs_direct_req
s##idmap
s##nfs4_slot_table
s##nfs4_session
s##fscache_cookie
s##nlm_host
s##nfs_iostats
s##nfs_fscache_key
s##pnfs_layoutdriver_type
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
nfs_path extern char * nfs_path ( char * * , s#dentry * , char * , t#ssize_t , unsigned ) 
nfs_do_submount s#vfsmount * nfs_do_submount ( s#dentry * , s#nfs_fh * , s#nfs_fattr * , t#rpc_authflavor_t ) 
nfs_submount s#vfsmount * nfs_submount ( s#nfs_server * , s#dentry * , s#nfs_fh * , s#nfs_fattr * ) 

/* fs/nfs/nfs3client.o */
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##sec_path
s##workqueue_struct
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##kmem_cache
s##xfrm_state
s##lwtunnel_state
s##rtable
s##rt6_info
s##dn_route
s##prefix_info
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##phy_device
s##sfp_bus
s##prot_inuse
s##ipv4_devconf
s##fib_table
s##inet_peer_base
s##xt_table
s##inet_hashinfo
s##rt6_statistics
s##fib6_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##eventfd_ctx
s##mempolicy
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_mq_ctx
s##blk_mq_hw_ctx
s##blk_mq_alloc_data
s##blk_mq_debugfs_attr
s##blk_queue_stats
s##rq_wb
s##blk_mq_ops
s##blk_stat_callback
s##blk_trace
s##blk_flush_queue
s##bsg_job
s##throtl_data
s##blk_mq_tag_set
s##hd_geometry
s##pr_ops
s##timer_rand_state
s##disk_events
s##badblocks
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nlm_host
s##nfs_iostats
s##nfs_fscache_key
s##fscache_cookie
s##pnfs_layoutdriver_type
s##rpc_cred_cache
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##svc_serv
s##svc_xprt
s##rpc_iostats
s##nlmclnt_operations
s##nfs_subversion
s##nfs4_slot
s##pnfs_layout_segment
s##nfs_io_completion
s##nfs_direct_req
s##idmap
s##nfs4_slot_table
s##nfs4_session
nfs3_set_ds_client extern s#nfs_client * nfs3_set_ds_client ( s#nfs_server * , const s#sockaddr * , int , int , unsigned int , unsigned int ) 

/* fs/nfs/nfs4client.o */
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##sec_path
s##workqueue_struct
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##kmem_cache
s##xfrm_state
s##lwtunnel_state
s##rtable
s##rt6_info
s##dn_route
s##prefix_info
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##phy_device
s##sfp_bus
s##prot_inuse
s##ipv4_devconf
s##fib_table
s##inet_peer_base
s##xt_table
s##inet_hashinfo
s##rt6_statistics
s##fib6_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##netns_ipvs
s##mpls_route
s##eventfd_ctx
s##mempolicy
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_mq_ctx
s##blk_mq_hw_ctx
s##blk_mq_alloc_data
s##blk_mq_debugfs_attr
s##blk_queue_stats
s##rq_wb
s##blk_mq_ops
s##blk_stat_callback
s##blk_trace
s##blk_flush_queue
s##bsg_job
s##throtl_data
s##blk_mq_tag_set
s##hd_geometry
s##pr_ops
s##timer_rand_state
s##disk_events
s##badblocks
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nlmclnt_operations
s##nfs_subversion
s##rpc_cred_cache
s#nfs4_sessionid struct nfs4_sessionid { unsigned char data [ 16 ] ; } 
s#nfs4_channel_attrs struct nfs4_channel_attrs { t#u32 max_rqst_sz ; t#u32 max_resp_sz ; t#u32 max_resp_sz_cached ; t#u32 max_ops ; t#u32 max_reqs ; } 
s#nfs4_session struct nfs4_session { s#nfs4_sessionid sess_id ; t#u32 flags ; unsigned long session_state ; t#u32 hash_alg ; t#u32 ssv_len ; s#nfs4_channel_attrs fc_attrs ; s#nfs4_slot_table fc_slot_table ; s#nfs4_channel_attrs bc_attrs ; s#nfs4_slot_table bc_slot_table ; s#nfs_client * clp ; } 
s#nfs4_slot_table struct nfs4_slot_table { s#nfs4_session * session ; s#nfs4_slot * slots ; unsigned long used_slots [ ( ( ( ( 1024U ) ) + ( 8 * sizeof ( long ) ) - 1 ) / ( 8 * sizeof ( long ) ) ) ] ; t#spinlock_t slot_tbl_lock ; s#rpc_wait_queue slot_tbl_waitq ; t#wait_queue_head_t slot_waitq ; t#u32 max_slots ; t#u32 max_slotid ; t#u32 highest_used_slotid ; t#u32 target_highest_slotid ; t#u32 server_highest_slotid ; t#s32 d_target_highest_slotid ; t#s32 d2_target_highest_slotid ; unsigned long generation ; s#completion complete ; unsigned long slot_tbl_state ; } 
s#nfs4_slot struct nfs4_slot { s#nfs4_slot_table * table ; s#nfs4_slot * next ; unsigned long generation ; t#u32 slot_nr ; t#u32 seq_nr ; unsigned int interrupted : 1 , privileged : 1 , seq_done : 1 ; } 
s##nfs_io_completion
s##nfs_direct_req
s##idmap
s##fscache_cookie
s##nlm_host
s##nfs_iostats
s##nfs_fscache_key
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##svc_cacherep
s##rpc_iostats
nfs4_find_or_create_ds_client extern s#rpc_clnt * nfs4_find_or_create_ds_client ( s#nfs_client * , s#inode * ) 
nfs4_set_ds_client extern s#nfs_client * nfs4_set_ds_client ( s#nfs_server * , const s#sockaddr * , int , int , unsigned int , unsigned int , t#u32 ) 

/* fs/nfs/nfs4idmap.o */
nfs_map_string_to_numeric int nfs_map_string_to_numeric ( const char * , t#size_t , t#__u32 * ) 

/* fs/nfs/nfs4proc.o */
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##sec_path
s##workqueue_struct
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##kmem_cache
s##xfrm_state
s##lwtunnel_state
s##rtable
s##rt6_info
s##dn_route
s##prefix_info
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##phy_device
s##sfp_bus
s##prot_inuse
s##ipv4_devconf
s##fib_table
s##inet_peer_base
s##xt_table
s##inet_hashinfo
s##rt6_statistics
s##fib6_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##netns_ipvs
s##mpls_route
s##eventfd_ctx
s##mempolicy
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_mq_ctx
s##blk_mq_hw_ctx
s##blk_mq_alloc_data
s##blk_mq_debugfs_attr
s##blk_queue_stats
s##rq_wb
s##blk_mq_ops
s##blk_stat_callback
s##blk_trace
s##blk_flush_queue
s##bsg_job
s##throtl_data
s##blk_mq_tag_set
s##hd_geometry
s##pr_ops
s##timer_rand_state
s##disk_events
s##badblocks
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##rpc_cred_cache
s##svc_xprt
s##svc_cacherep
s##rpc_iostats
s##nlmclnt_operations
s##nfs_subversion
s##nfs_io_completion
s##nfs_direct_req
s##idmap
s##fscache_cache_tag
s##nlm_host
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##kstatfs
s##export_operations
s##fscrypt_operations
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
nfs41_sequence_done extern int nfs41_sequence_done ( s#rpc_task * , s#nfs4_sequence_res * ) 
nfs4_sequence_done extern int nfs4_sequence_done ( s#rpc_task * , s#nfs4_sequence_res * ) 
nfs4_setup_sequence extern int nfs4_setup_sequence ( s#nfs_client * , s#nfs4_sequence_args * , s#nfs4_sequence_res * , s#rpc_task * ) 
nfs4_set_rw_stateid extern int nfs4_set_rw_stateid ( t#nfs4_stateid * , const s#nfs_open_context * , const s#nfs_lock_context * , t#fmode_t ) 
nfs4_test_session_trunk extern int nfs4_test_session_trunk ( s#rpc_clnt * , s#rpc_xprt * , void * ) 
nfs4_proc_getdeviceinfo extern int nfs4_proc_getdeviceinfo ( s#nfs_server * , s#pnfs_device * , s#rpc_cred * ) 

/* fs/nfs/nfs4session.o */
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##sec_path
s##workqueue_struct
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##kmem_cache
s##xfrm_state
s##lwtunnel_state
s##rtable
s##rt6_info
s##dn_route
s##prefix_info
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##phy_device
s##sfp_bus
s##prot_inuse
s##ipv4_devconf
s##fib_table
s##inet_peer_base
s##xt_table
s##inet_hashinfo
s##rt6_statistics
s##fib6_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##eventfd_ctx
s##mempolicy
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_mq_ctx
s##blk_mq_hw_ctx
s##blk_mq_alloc_data
s##blk_mq_debugfs_attr
s##blk_queue_stats
s##rq_wb
s##blk_mq_ops
s##blk_stat_callback
s##blk_trace
s##blk_flush_queue
s##bsg_job
s##throtl_data
s##blk_mq_tag_set
s##hd_geometry
s##pr_ops
s##timer_rand_state
s##disk_events
s##badblocks
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nlm_host
s##nfs_iostats
s##nfs_fscache_key
s##fscache_cookie
s##pnfs_layoutdriver_type
s##rpc_cred_cache
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##svc_cacherep
s##rpc_iostats
s##nlmclnt_operations
s##nfs_subversion
s##pnfs_layout_segment
s##nfs_io_completion
s##nfs_direct_req
s##idmap
nfs4_init_ds_session extern int nfs4_init_ds_session ( s#nfs_client * , unsigned long ) 

/* fs/nfs/nfs4state.o */
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##sec_path
s##workqueue_struct
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##kmem_cache
s##xfrm_state
s##lwtunnel_state
s##rtable
s##rt6_info
s##dn_route
s##prefix_info
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##phy_device
s##sfp_bus
s##prot_inuse
s##ipv4_devconf
s##fib_table
s##inet_peer_base
s##xt_table
s##inet_hashinfo
s##rt6_statistics
s##fib6_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##netns_ipvs
s##mpls_route
s##eventfd_ctx
s##mempolicy
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_mq_ctx
s##blk_mq_hw_ctx
s##blk_mq_alloc_data
s##blk_mq_debugfs_attr
s##blk_queue_stats
s##rq_wb
s##blk_mq_ops
s##blk_stat_callback
s##blk_trace
s##blk_flush_queue
s##bsg_job
s##throtl_data
s##blk_mq_tag_set
s##hd_geometry
s##pr_ops
s##timer_rand_state
s##disk_events
s##badblocks
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nlm_host
s##nfs_iostats
s##nfs_fscache_key
s##fscache_cookie
s##rpc_cred_cache
s##nfs_io_completion
s##nfs_direct_req
s##nlmclnt_operations
s##nfs_subversion
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##svc_xprt
s##svc_cacherep
s##rpc_iostats
s##idmap
nfs4_schedule_lease_recovery extern void nfs4_schedule_lease_recovery ( s#nfs_client * ) 
nfs4_schedule_migration_recovery extern int nfs4_schedule_migration_recovery ( const s#nfs_server * ) 
nfs4_schedule_lease_moved_recovery extern void nfs4_schedule_lease_moved_recovery ( s#nfs_client * ) 
nfs4_schedule_stateid_recovery extern int nfs4_schedule_stateid_recovery ( const s#nfs_server * , s#nfs4_state * ) 
nfs4_schedule_session_recovery extern void nfs4_schedule_session_recovery ( s#nfs4_session * , int ) 

/* fs/nfs/nfs4trace.o */
s##static_key_mod
__tracepoint_nfs4_pnfs_read extern s#tracepoint __tracepoint_nfs4_pnfs_read 
__tracepoint_nfs4_pnfs_write extern s#tracepoint __tracepoint_nfs4_pnfs_write 
__tracepoint_nfs4_pnfs_commit_ds extern s#tracepoint __tracepoint_nfs4_pnfs_commit_ds 

/* fs/nfs/nfs4xdr.o */
nfs41_maxgetdevinfo_overhead extern const t#u32 nfs41_maxgetdevinfo_overhead 

/* fs/nfs/nfstrace.o */
s##static_key_mod
__tracepoint_nfs_fsync_enter extern s#tracepoint __tracepoint_nfs_fsync_enter 
__tracepoint_nfs_fsync_exit extern s#tracepoint __tracepoint_nfs_fsync_exit 

/* fs/nfs/pagelist.o */
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##pid_namespace
s##nlm_lockowner
s##rpc_cred_cache
s##workqueue_struct
s##svc_serv
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_dir_entry
s##uevent_sock
s##sec_path
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##kmem_cache
s##xfrm_state
s##lwtunnel_state
s##rtable
s##rt6_info
s##dn_route
s##prefix_info
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##phy_device
s##sfp_bus
s##prot_inuse
s##ipv4_devconf
s##fib_table
s##inet_peer_base
s##xt_table
s##inet_hashinfo
s##rt6_statistics
s##fib6_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##svc_xprt
s##rpc_iostats
s##nlmclnt_operations
s##nfs_subversion
s##nfs4_slot
s##nfs_io_completion
s##nfs_direct_req
s##idmap
s##nfs4_slot_table
s##nfs4_session
s##fscache_cookie
s##nlm_host
s##nfs_iostats
s##nfs_fscache_key
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##ipc_namespace
s##mnt_namespace
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_mq_ctx
s##blk_mq_hw_ctx
s##blk_mq_alloc_data
s##blk_mq_debugfs_attr
s##blk_queue_stats
s##rq_wb
s##blk_mq_ops
s##blk_stat_callback
s##blk_trace
s##blk_flush_queue
s##bsg_job
s##throtl_data
s##blk_mq_tag_set
s##hd_geometry
s##pr_ops
s##timer_rand_state
s##disk_events
s##badblocks
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##swap_info_struct
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
nfs_pgio_current_mirror s#nfs_pgio_mirror * nfs_pgio_current_mirror ( s#nfs_pageio_descriptor * ) 
nfs_pgheader_init extern void nfs_pgheader_init ( s#nfs_pageio_descriptor * , s#nfs_pgio_header * , void ( * ) ( s#nfs_pgio_header * ) ) 
nfs_async_iocounter_wait extern t#bool nfs_async_iocounter_wait ( s#rpc_task * , s#nfs_lock_context * ) 
nfs_generic_pg_test extern t#size_t nfs_generic_pg_test ( s#nfs_pageio_descriptor * , s#nfs_page * , s#nfs_page * ) 
nfs_pgio_header_alloc s#nfs_pgio_header * nfs_pgio_header_alloc ( const s#nfs_rw_ops * ) 
nfs_pgio_header_free void nfs_pgio_header_free ( s#nfs_pgio_header * ) 
nfs_initiate_pgio int nfs_initiate_pgio ( s#rpc_clnt * , s#nfs_pgio_header * , s#rpc_cred * , const s#nfs_rpc_ops * , const s#rpc_call_ops * , int , int ) 
nfs_pageio_init extern void nfs_pageio_init ( s#nfs_pageio_descriptor * , s#inode * , const s#nfs_pageio_ops * , const s#nfs_pgio_completion_ops * , const s#nfs_rw_ops * , t#size_t , int , t#gfp_t ) 
nfs_generic_pgio int nfs_generic_pgio ( s#nfs_pageio_descriptor * , s#nfs_pgio_header * ) 
nfs_pageio_resend extern int nfs_pageio_resend ( s#nfs_pageio_descriptor * , s#nfs_pgio_header * ) 

/* fs/nfs/pnfs.o */
s##device_private
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##sec_path
s##workqueue_struct
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##kmem_cache
s##xfrm_state
s##lwtunnel_state
s##rtable
s##rt6_info
s##dn_route
s##prefix_info
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
s##prot_inuse
s##ipv4_devconf
s##fib_table
s##inet_peer_base
s##xt_table
s##inet_hashinfo
s##rt6_statistics
s##fib6_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##eventfd_ctx
s##mempolicy
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_mq_ctx
s##blk_mq_hw_ctx
s##blk_mq_alloc_data
s##blk_mq_debugfs_attr
s##blk_queue_stats
s##rq_wb
s##blk_mq_ops
s##blk_stat_callback
s##blk_trace
s##blk_flush_queue
s##bsg_job
s##throtl_data
s##blk_mq_tag_set
s##hd_geometry
s##pr_ops
s##timer_rand_state
s##disk_events
s##badblocks
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##rpc_cred_cache
s##svc_serv
s##svc_xprt
s##rpc_iostats
s##nlmclnt_operations
s##nfs_subversion
s##nfs4_slot
s##nfs_io_completion
s##nfs_direct_req
s##idmap
s##nfs4_slot_table
s##nfs4_session
s##fscache_cookie
s##nlm_host
s##nfs_fscache_key
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
pnfs_register_layoutdriver extern int pnfs_register_layoutdriver ( s#pnfs_layoutdriver_type * ) 
pnfs_unregister_layoutdriver extern void pnfs_unregister_layoutdriver ( s#pnfs_layoutdriver_type * ) 
pnfs_put_lseg void pnfs_put_lseg ( s#pnfs_layout_segment * ) 
s##nfs4_cached_acl
s#nfs_delegation struct nfs_delegation { s#list_head super_list ; s#rpc_cred * cred ; s#inode * inode ; t#nfs4_stateid stateid ; t#fmode_t type ; unsigned long pagemod_limit ; t#__u64 change_attr ; unsigned long flags ; t#spinlock_t lock ; s#callback_head rcu ; } 
s#nfs_inode struct nfs_inode { t#__u64 fileid ; s#nfs_fh fh ; unsigned long flags ; unsigned long cache_validity ; unsigned long read_cache_jiffies ; unsigned long attrtimeo ; unsigned long attrtimeo_timestamp ; unsigned long attr_gencount ; unsigned long cache_change_attribute ; s#rb_root access_cache ; s#list_head access_cache_entry_lru ; s#list_head access_cache_inode_lru ; t#__be32 cookieverf [ 2 ] ; unsigned long nrequests ; s#nfs_mds_commit_info commit_info ; s#list_head open_files ; s#rw_semaphore rmdir_sem ; s#nfs4_cached_acl * nfs4_acl ; s#list_head open_states ; s#nfs_delegation * delegation ; s#rw_semaphore rwsem ; s#pnfs_layout_hdr * layout ; t#__u64 write_io ; t#__u64 read_io ; s#fscache_cookie * fscache ; s#inode vfs_inode ; } 
pnfs_destroy_layout void pnfs_destroy_layout ( s#nfs_inode * ) 
pnfs_generic_layout_insert_lseg void pnfs_generic_layout_insert_lseg ( s#pnfs_layout_hdr * , s#pnfs_layout_segment * , t#bool ( * ) ( const s#pnfs_layout_range * , const s#pnfs_layout_range * ) , t#bool ( * ) ( s#pnfs_layout_segment * , s#pnfs_layout_segment * ) , s#list_head * ) 
pnfs_update_layout s#pnfs_layout_segment * pnfs_update_layout ( s#inode * , s#nfs_open_context * , t#loff_t , t#u64 , e#pnfs_iomode , t#bool , t#gfp_t ) 
pnfs_error_mark_layout_for_return void pnfs_error_mark_layout_for_return ( s#inode * , s#pnfs_layout_segment * ) 
pnfs_generic_pg_check_layout void pnfs_generic_pg_check_layout ( s#nfs_pageio_descriptor * ) 
pnfs_generic_pg_init_read void pnfs_generic_pg_init_read ( s#nfs_pageio_descriptor * , s#nfs_page * ) 
pnfs_generic_pg_init_write void pnfs_generic_pg_init_write ( s#nfs_pageio_descriptor * , s#nfs_page * , t#u64 ) 
pnfs_generic_pg_cleanup void pnfs_generic_pg_cleanup ( s#nfs_pageio_descriptor * ) 
pnfs_generic_pg_test t#size_t pnfs_generic_pg_test ( s#nfs_pageio_descriptor * , s#nfs_page * , s#nfs_page * ) 
pnfs_write_done_resend_to_mds int pnfs_write_done_resend_to_mds ( s#nfs_pgio_header * ) 
pnfs_ld_write_done void pnfs_ld_write_done ( s#nfs_pgio_header * ) 
pnfs_generic_pg_writepages int pnfs_generic_pg_writepages ( s#nfs_pageio_descriptor * ) 
pnfs_read_done_resend_to_mds int pnfs_read_done_resend_to_mds ( s#nfs_pgio_header * ) 
pnfs_ld_read_done void pnfs_ld_read_done ( s#nfs_pgio_header * ) 
pnfs_read_resend_pnfs void pnfs_read_resend_pnfs ( s#nfs_pgio_header * ) 
pnfs_generic_pg_readpages int pnfs_generic_pg_readpages ( s#nfs_pageio_descriptor * ) 
pnfs_set_lo_fail void pnfs_set_lo_fail ( s#pnfs_layout_segment * ) 
pnfs_set_layoutcommit void pnfs_set_layoutcommit ( s#inode * , s#pnfs_layout_segment * , t#loff_t ) 
pnfs_layoutcommit_inode int pnfs_layoutcommit_inode ( s#inode * , t#bool ) 
pnfs_generic_sync int pnfs_generic_sync ( s#inode * , t#bool ) 
pnfs_report_layoutstat int pnfs_report_layoutstat ( s#inode * , t#gfp_t ) 
layoutstats_timer extern unsigned int layoutstats_timer 

/* fs/nfs/pnfs_dev.o */
nfs4_print_deviceid void nfs4_print_deviceid ( const s#nfs4_deviceid * ) 
s##device_private
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##sec_path
s##workqueue_struct
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##kmem_cache
s##xfrm_state
s##lwtunnel_state
s##rtable
s##rt6_info
s##dn_route
s##prefix_info
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
s##prot_inuse
s##ipv4_devconf
s##fib_table
s##inet_peer_base
s##xt_table
s##inet_hashinfo
s##rt6_statistics
s##fib6_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##eventfd_ctx
s##mempolicy
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_mq_ctx
s##blk_mq_hw_ctx
s##blk_mq_alloc_data
s##blk_mq_debugfs_attr
s##blk_queue_stats
s##rq_wb
s##blk_mq_ops
s##blk_stat_callback
s##blk_trace
s##blk_flush_queue
s##bsg_job
s##throtl_data
s##blk_mq_tag_set
s##hd_geometry
s##pr_ops
s##timer_rand_state
s##disk_events
s##badblocks
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##rpc_cred_cache
s##svc_serv
s##svc_xprt
s##rpc_iostats
s##nlmclnt_operations
s##nfs_subversion
s##nfs_io_completion
s##nfs_direct_req
s##idmap
s##fscache_cookie
s##nlm_host
s##nfs_iostats
s##nfs_fscache_key
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
nfs4_find_get_deviceid s#nfs4_deviceid_node * nfs4_find_get_deviceid ( s#nfs_server * , const s#nfs4_deviceid * , s#rpc_cred * , t#gfp_t ) 
nfs4_delete_deviceid void nfs4_delete_deviceid ( const s#pnfs_layoutdriver_type * , const s#nfs_client * , const s#nfs4_deviceid * ) 
nfs4_init_deviceid_node void nfs4_init_deviceid_node ( s#nfs4_deviceid_node * , s#nfs_server * , const s#nfs4_deviceid * ) 
nfs4_put_deviceid_node t#bool nfs4_put_deviceid_node ( s#nfs4_deviceid_node * ) 
nfs4_mark_deviceid_unavailable void nfs4_mark_deviceid_unavailable ( s#nfs4_deviceid_node * ) 
nfs4_test_deviceid_unavailable t#bool nfs4_test_deviceid_unavailable ( s#nfs4_deviceid_node * ) 

/* fs/nfs/pnfs_nfs.o */
pnfs_generic_rw_release void pnfs_generic_rw_release ( void * ) 
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##sec_path
s##workqueue_struct
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##kmem_cache
s##xfrm_state
s##lwtunnel_state
s##rtable
s##rt6_info
s##dn_route
s##prefix_info
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##phy_device
s##sfp_bus
s##prot_inuse
s##ipv4_devconf
s##fib_table
s##inet_peer_base
s##xt_table
s##inet_hashinfo
s##rt6_statistics
s##fib6_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##eventfd_ctx
s##mempolicy
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_mq_ctx
s##blk_mq_hw_ctx
s##blk_mq_alloc_data
s##blk_mq_debugfs_attr
s##blk_queue_stats
s##rq_wb
s##blk_mq_ops
s##blk_stat_callback
s##blk_trace
s##blk_flush_queue
s##bsg_job
s##throtl_data
s##blk_mq_tag_set
s##hd_geometry
s##pr_ops
s##timer_rand_state
s##disk_events
s##badblocks
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##rpc_cred_cache
s##svc_serv
s##svc_xprt
s##rpc_iostats
s##nlmclnt_operations
s##nfs_subversion
s##nfs_io_completion
s##nfs_direct_req
s##idmap
s##fscache_cookie
s##nlm_host
s##nfs_iostats
s##nfs_fscache_key
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
pnfs_generic_prepare_to_resend_writes void pnfs_generic_prepare_to_resend_writes ( s#nfs_commit_data * ) 
pnfs_generic_write_commit_done void pnfs_generic_write_commit_done ( s#rpc_task * , void * ) 
pnfs_generic_commit_release void pnfs_generic_commit_release ( void * ) 
pnfs_generic_clear_request_commit void pnfs_generic_clear_request_commit ( s#nfs_page * , s#nfs_commit_info * ) 
pnfs_generic_scan_commit_lists int pnfs_generic_scan_commit_lists ( s#nfs_commit_info * , int ) 
pnfs_generic_recover_commit_reqs void pnfs_generic_recover_commit_reqs ( s#list_head * , s#nfs_commit_info * ) 
pnfs_generic_commit_pagelist int pnfs_generic_commit_pagelist ( s#inode * , s#list_head * , int , s#nfs_commit_info * , int ( * ) ( s#nfs_commit_data * , int ) ) 
s#nfs4_pnfs_ds struct nfs4_pnfs_ds { s#list_head ds_node ; char * ds_remotestr ; s#list_head ds_addrs ; s#nfs_client * ds_clp ; t#atomic_t ds_count ; unsigned long ds_state ; } 
nfs4_pnfs_ds_put void nfs4_pnfs_ds_put ( s#nfs4_pnfs_ds * ) 
nfs4_pnfs_ds_add s#nfs4_pnfs_ds * nfs4_pnfs_ds_add ( s#list_head * , t#gfp_t ) 
nfs4_pnfs_ds_connect int nfs4_pnfs_ds_connect ( s#nfs_server * , s#nfs4_pnfs_ds * , s#nfs4_deviceid_node * , unsigned int , unsigned int , t#u32 , t#u32 ) 
s#nfs4_pnfs_ds_addr struct nfs4_pnfs_ds_addr { s#__kernel_sockaddr_storage da_addr ; t#size_t da_addrlen ; s#list_head da_node ; char * da_remotestr ; } 
nfs4_decode_mp_ds_addr s#nfs4_pnfs_ds_addr * nfs4_decode_mp_ds_addr ( s#net * , s#xdr_stream * , t#gfp_t ) 
pnfs_layout_mark_request_commit void pnfs_layout_mark_request_commit ( s#nfs_page * , s#pnfs_layout_segment * , s#nfs_commit_info * , t#u32 ) 
pnfs_nfs_generic_sync int pnfs_nfs_generic_sync ( s#inode * , t#bool ) 

/* fs/nfs/read.o */
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##pid_namespace
s##nlm_lockowner
s##rpc_cred_cache
s##workqueue_struct
s##svc_serv
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_dir_entry
s##uevent_sock
s##sec_path
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##kmem_cache
s##xfrm_state
s##lwtunnel_state
s##rtable
s##rt6_info
s##dn_route
s##prefix_info
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##phy_device
s##sfp_bus
s##prot_inuse
s##ipv4_devconf
s##fib_table
s##inet_peer_base
s##xt_table
s##inet_hashinfo
s##rt6_statistics
s##fib6_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##svc_xprt
s##rpc_iostats
s##nlmclnt_operations
s##nfs_subversion
s##nfs4_slot
s##nfs_io_completion
s##nfs_direct_req
s##idmap
s##nfs4_slot_table
s##nfs4_session
s##fscache_cache_tag
s##nlm_host
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##ipc_namespace
s##mnt_namespace
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_mq_ctx
s##blk_mq_hw_ctx
s##blk_mq_alloc_data
s##blk_mq_debugfs_attr
s##blk_queue_stats
s##rq_wb
s##blk_mq_ops
s##blk_stat_callback
s##blk_trace
s##blk_flush_queue
s##bsg_job
s##throtl_data
s##blk_mq_tag_set
s##hd_geometry
s##pr_ops
s##timer_rand_state
s##disk_events
s##badblocks
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##swap_info_struct
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
nfs_pageio_init_read extern void nfs_pageio_init_read ( s#nfs_pageio_descriptor * , s#inode * , t#bool , const s#nfs_pgio_completion_ops * ) 
nfs_pageio_reset_read_mds extern void nfs_pageio_reset_read_mds ( s#nfs_pageio_descriptor * ) 

/* fs/nfs/super.o */
s##device_private
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##mmu_notifier_mm
s##xol_area
s##pid_namespace
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##sec_path
s##workqueue_struct
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##kmem_cache
s##xfrm_state
s##lwtunnel_state
s##rtable
s##rt6_info
s##dn_route
s##prefix_info
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
s##prot_inuse
s##ipv4_devconf
s##fib_table
s##inet_peer_base
s##xt_table
s##inet_hashinfo
s##rt6_statistics
s##fib6_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_mq_ctx
s##blk_mq_hw_ctx
s##blk_mq_alloc_data
s##blk_mq_debugfs_attr
s##blk_queue_stats
s##rq_wb
s##blk_mq_ops
s##blk_stat_callback
s##blk_trace
s##blk_flush_queue
s##bsg_job
s##throtl_data
s##blk_mq_tag_set
s##hd_geometry
s##pr_ops
s##timer_rand_state
s##disk_events
s##badblocks
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##swap_info_struct
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sock_reuseport
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##mtd_info
s##nlm_lockowner
s##rpc_cred_cache
s##svc_xprt
s##svc_cacherep
s##nfs_io_completion
s##nfs_direct_req
s##idmap
s##fscache_cache_tag
s##nlm_host
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
nfs_fs_type extern s#file_system_type nfs_fs_type 
nfs_sops extern const s#super_operations nfs_sops 
nfs4_fs_type extern s#file_system_type nfs4_fs_type 
nfs_sb_active extern t#bool nfs_sb_active ( s#super_block * ) 
nfs_sb_deactive extern void nfs_sb_deactive ( s#super_block * ) 
nfs_statfs int nfs_statfs ( s#dentry * , s#kstatfs * ) 
nfs_show_options int nfs_show_options ( s#seq_file * , s#dentry * ) 
nfs_show_devname int nfs_show_devname ( s#seq_file * , s#dentry * ) 
nfs_show_path int nfs_show_path ( s#seq_file * , s#dentry * ) 
nfs_show_stats int nfs_show_stats ( s#seq_file * , s#dentry * ) 
nfs_umount_begin void nfs_umount_begin ( s#super_block * ) 
nfs_auth_info_match t#bool nfs_auth_info_match ( const s#nfs_auth_info * , t#rpc_authflavor_t ) 
nfs_try_mount s#dentry * nfs_try_mount ( int , const char * , s#nfs_mount_info * , s#nfs_subversion * ) 
nfs_remount int nfs_remount ( s#super_block * , int * , char * ) 
nfs_fill_super void nfs_fill_super ( s#super_block * , s#nfs_mount_info * ) 
nfs_set_sb_security int nfs_set_sb_security ( s#super_block * , s#dentry * , s#nfs_mount_info * ) 
nfs_clone_sb_security int nfs_clone_sb_security ( s#super_block * , s#dentry * , s#nfs_mount_info * ) 
nfs_fs_mount_common s#dentry * nfs_fs_mount_common ( s#nfs_server * , int , const char * , s#nfs_mount_info * , s#nfs_subversion * ) 
nfs_fs_mount s#dentry * nfs_fs_mount ( s#file_system_type * , int , const char * , void * ) 
nfs_kill_super void nfs_kill_super ( s#super_block * ) 
nfs_callback_nr_threads extern unsigned short nfs_callback_nr_threads 
nfs_callback_set_tcpport extern unsigned int nfs_callback_set_tcpport 
nfs_idmap_cache_timeout unsigned int nfs_idmap_cache_timeout 
nfs4_disable_idmapping extern t#bool nfs4_disable_idmapping 
max_session_slots extern unsigned short max_session_slots 
max_session_cb_slots extern unsigned short max_session_cb_slots 
send_implementation_id extern unsigned short send_implementation_id 
nfs4_client_id_uniquifier extern char nfs4_client_id_uniquifier [ ( 64 ) ] 
recover_lost_locks extern t#bool recover_lost_locks 

/* fs/nfs/write.o */
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##sec_path
s##workqueue_struct
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##kmem_cache
s##xfrm_state
s##lwtunnel_state
s##rtable
s##rt6_info
s##dn_route
s##prefix_info
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##phy_device
s##sfp_bus
s##prot_inuse
s##ipv4_devconf
s##fib_table
s##inet_peer_base
s##xt_table
s##inet_hashinfo
s##rt6_statistics
s##fib6_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##eventfd_ctx
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_mq_ctx
s##blk_mq_hw_ctx
s##blk_mq_alloc_data
s##blk_mq_debugfs_attr
s##blk_queue_stats
s##rq_wb
s##blk_mq_ops
s##blk_stat_callback
s##blk_trace
s##blk_flush_queue
s##bsg_job
s##throtl_data
s##blk_mq_tag_set
s##hd_geometry
s##pr_ops
s##timer_rand_state
s##disk_events
s##badblocks
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##rpc_cred_cache
s##svc_serv
s##svc_xprt
s##rpc_iostats
s##nlmclnt_operations
s##nfs_subversion
s##nfs4_slot
s##nfs_io_completion
s##nfs_direct_req
s##idmap
s##nfs4_slot_table
s##nfs4_session
s##fscache_cache_tag
s##nlm_host
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
nfs_commitdata_alloc extern s#nfs_commit_data * nfs_commitdata_alloc ( t#bool ) 
nfs_commit_free extern void nfs_commit_free ( s#nfs_commit_data * ) 
nfs_request_add_commit_list_locked void nfs_request_add_commit_list_locked ( s#nfs_page * , s#list_head * , s#nfs_commit_info * ) 
nfs_request_add_commit_list void nfs_request_add_commit_list ( s#nfs_page * , s#nfs_commit_info * ) 
nfs_request_remove_commit_list void nfs_request_remove_commit_list ( s#nfs_page * , s#nfs_commit_info * ) 
nfs_init_cinfo void nfs_init_cinfo ( s#nfs_commit_info * , s#inode * , s#nfs_direct_req * ) 
nfs_pageio_init_write extern void nfs_pageio_init_write ( s#nfs_pageio_descriptor * , s#inode * , int , t#bool , const s#nfs_pgio_completion_ops * ) 
nfs_pageio_reset_write_mds extern void nfs_pageio_reset_write_mds ( s#nfs_pageio_descriptor * ) 
nfs_writeback_update_inode void nfs_writeback_update_inode ( s#nfs_pgio_header * ) 
nfs_commitdata_release void nfs_commitdata_release ( s#nfs_commit_data * ) 
nfs_initiate_commit extern int nfs_initiate_commit ( s#rpc_clnt * , s#nfs_commit_data * , const s#nfs_rpc_ops * , const s#rpc_call_ops * , int , int ) 
nfs_init_commit extern void nfs_init_commit ( s#nfs_commit_data * , s#list_head * , s#pnfs_layout_segment * , s#nfs_commit_info * ) 
nfs_retry_commit void nfs_retry_commit ( s#list_head * , s#pnfs_layout_segment * , s#nfs_commit_info * , t#u32 ) 
nfs_commit_inode extern int nfs_commit_inode ( s#inode * , int ) 
nfs_write_inode extern int nfs_write_inode ( s#inode * , s#writeback_control * ) 
nfs_filemap_write_and_wait_range int nfs_filemap_write_and_wait_range ( s#address_space * , t#loff_t , t#loff_t ) 
nfs_wb_all extern int nfs_wb_all ( s#inode * ) 

/* fs/nfs_common/grace.o */
s##user_namespace
s##ucounts
s##proc_ns_operations
s##proc_dir_entry
s##sock
s##uevent_sock
s##net_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##sec_path
s##kmem_cache
s##xt_table
s##inet_hashinfo
s##fib_notifier_ops
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##neighbour
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##nf_hook_entry
s##ebt_table
s##workqueue_struct
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##netns_ipvs
s##mpls_route
s#lock_manager struct lock_manager { s#list_head list ; t#bool block_opens ; } 
locks_start_grace void locks_start_grace ( s#net * , s#lock_manager * ) 
locks_end_grace void locks_end_grace ( s#lock_manager * ) 
locks_in_grace int locks_in_grace ( s#net * ) 
opens_in_grace int opens_in_grace ( s#net * ) 

/* fs/nfs_common/nfsacl.o */
s##vfsmount
s##sock
s##seq_file
s##bio_vec
s##pipe_inode_info
s##poll_table_struct
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##mem_cgroup
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##device
s##kmem_cache
nfsacl_encode extern int nfsacl_encode ( s#xdr_buf * , unsigned int , s#inode * , s#posix_acl * , int , int ) 
nfsacl_decode extern int nfsacl_decode ( s#xdr_buf * , unsigned int , unsigned int * , s#posix_acl * * ) 

/* fs/nls/nls_base.o */
t#unicode_t typedef t#u32 unicode_t 
utf8_to_utf32 extern int utf8_to_utf32 ( const t#u8 * , int , t#unicode_t * ) 
utf32_to_utf8 extern int utf32_to_utf8 ( t#unicode_t , t#u8 * , int ) 
e#utf16_endian enum utf16_endian { UTF16_HOST_ENDIAN , UTF16_LITTLE_ENDIAN , UTF16_BIG_ENDIAN } 
utf8s_to_utf16s extern int utf8s_to_utf16s ( const t#u8 * , int , e#utf16_endian , t#wchar_t * , int ) 
utf16s_to_utf8s extern int utf16s_to_utf8s ( const t#wchar_t * , int , e#utf16_endian , t#u8 * , int ) 
s##sock
s##seq_file
s##vfsmount
s##posix_acl
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##device
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
__register_nls extern int __register_nls ( s#nls_table * , s#module * ) 
unregister_nls extern int unregister_nls ( s#nls_table * ) 
unload_nls extern void unload_nls ( s#nls_table * ) 
load_nls extern s#nls_table * load_nls ( char * ) 
load_nls_default extern s#nls_table * load_nls_default ( void ) 

/* fs/notify/fsnotify.o */
s##posix_acl
s##sock
s##bio_vec
s##pipe_inode_info
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##kmem_cache
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##net
s##cgroup_namespace
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##writeback_control
s##swap_info_struct
s##device
s##mem_cgroup
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##cdev
s##fscrypt_info
__fsnotify_inode_delete extern void __fsnotify_inode_delete ( s#inode * ) 
__fsnotify_parent extern int __fsnotify_parent ( const s#path * , s#dentry * , t#__u32 ) 
fsnotify extern int fsnotify ( s#inode * , t#__u32 , const void * , int , const unsigned char * , t#u32 ) 

/* fs/notify/notification.o */
fsnotify_get_cookie extern t#u32 fsnotify_get_cookie ( void ) 

/* fs/ocfs2/cluster/heartbeat.o */
o2hb_fill_node_map void o2hb_fill_node_map ( unsigned long * , unsigned ) 
s##posix_acl
s##vfsmount
s##device_private
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##sec_path
s##workqueue_struct
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##kmem_cache
s##xfrm_state
s##lwtunnel_state
s##rtable
s##rt6_info
s##dn_route
s##ndisc_ops
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
s##prot_inuse
s##ipv4_devconf
s##fib_table
s##inet_peer_base
s##xt_table
s##inet_hashinfo
s##ipv6_devconf
s##rt6_statistics
s##fib6_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##eventfd_ctx
s##mempolicy
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_mq_ctx
s##blkcg_gq
s##blk_mq_hw_ctx
s##blk_mq_alloc_data
s##blk_mq_debugfs_attr
s##blk_queue_stats
s##rq_wb
s##blk_mq_ops
s##blk_stat_callback
s##blk_trace
s##blk_flush_queue
s##bsg_job
s##throtl_data
s##blk_mq_tag_set
s##hd_geometry
s##pr_ops
s##timer_rand_state
s##disk_events
s##badblocks
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s#o2nm_node struct o2nm_node { t#spinlock_t nd_lock ; s#config_item nd_item ; char nd_name [ 64 + 1 ] ; t#__u8 nd_num ; t#__be32 nd_ipv4_address ; t#__be16 nd_ipv4_port ; s#rb_node nd_ip_node ; int nd_local ; unsigned long nd_set_attributes ; } 
t#o2hb_cb_func typedef void ( o2hb_cb_func ) ( s#o2nm_node * , int , void * ) 
e#o2hb_callback_type enum o2hb_callback_type { O2HB_NODE_DOWN_CB = 0 , O2HB_NODE_UP_CB , O2HB_NUM_CB } 
s#o2hb_callback_func struct o2hb_callback_func { t#u32 hc_magic ; s#list_head hc_item ; t#o2hb_cb_func * hc_func ; void * hc_data ; int hc_priority ; e#o2hb_callback_type hc_type ; } 
o2hb_setup_callback void o2hb_setup_callback ( s#o2hb_callback_func * , e#o2hb_callback_type , t#o2hb_cb_func * , void * , int ) 
o2hb_register_callback int o2hb_register_callback ( const char * , s#o2hb_callback_func * ) 
o2hb_unregister_callback void o2hb_unregister_callback ( const char * , s#o2hb_callback_func * ) 
o2hb_check_node_heartbeating int o2hb_check_node_heartbeating ( t#u8 ) 
o2hb_check_node_heartbeating_no_sem int o2hb_check_node_heartbeating_no_sem ( t#u8 ) 
o2hb_check_node_heartbeating_from_callback int o2hb_check_node_heartbeating_from_callback ( t#u8 ) 
o2hb_check_local_node_heartbeating int o2hb_check_local_node_heartbeating ( void ) 
o2hb_stop_all_regions void o2hb_stop_all_regions ( void ) 
o2hb_get_all_regions int o2hb_get_all_regions ( char * , t#u8 ) 
o2hb_global_heartbeat_active int o2hb_global_heartbeat_active ( void ) 

/* fs/ocfs2/cluster/masklog.o */
s#mlog_bits struct mlog_bits { unsigned long words [ 64 / 64 ] ; } 
mlog_and_bits extern s#mlog_bits mlog_and_bits 
mlog_not_bits extern s#mlog_bits mlog_not_bits 
__mlog_printk __attribute__ ( ( format ( printf , 4 , 5 ) ) ) void __mlog_printk ( const t#u64 * , const char * , int , const char * , ... ) 

/* fs/ocfs2/cluster/nodemanager.o */
s##posix_acl
s##vfsmount
s##device_private
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##sec_path
s##workqueue_struct
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##kmem_cache
s##xfrm_state
s##lwtunnel_state
s##rtable
s##rt6_info
s##dn_route
s##ndisc_ops
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
s##prot_inuse
s##ipv4_devconf
s##fib_table
s##inet_peer_base
s##xt_table
s##inet_hashinfo
s##ipv6_devconf
s##rt6_statistics
s##fib6_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##eventfd_ctx
s##mempolicy
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
o2nm_get_node_by_num s#o2nm_node * o2nm_get_node_by_num ( t#u8 ) 
o2nm_configured_node_map int o2nm_configured_node_map ( unsigned long * , unsigned ) 
o2nm_get_node_by_ip s#o2nm_node * o2nm_get_node_by_ip ( t#__be32 ) 
o2nm_node_put void o2nm_node_put ( s#o2nm_node * ) 
o2nm_node_get void o2nm_node_get ( s#o2nm_node * ) 
o2nm_this_node t#u8 o2nm_this_node ( void ) 

/* fs/ocfs2/cluster/tcp.o */
s#o2net_msg struct o2net_msg { t#__be16 magic ; t#__be16 data_len ; t#__be16 msg_type ; t#__be16 pad1 ; t#__be32 sys_status ; t#__be32 status ; t#__be32 key ; t#__be32 msg_num ; t#__u8 buf [ 0 ] ; } 
t#o2net_msg_handler_func typedef int ( o2net_msg_handler_func ) ( s#o2net_msg * , t#u32 , void * , void * * ) 
t#o2net_post_msg_handler_func typedef void ( o2net_post_msg_handler_func ) ( int , void * , void * ) 
o2net_register_handler int o2net_register_handler ( t#u32 , t#u32 , t#u32 , t#o2net_msg_handler_func * , void * , t#o2net_post_msg_handler_func * , s#list_head * ) 
o2net_unregister_handler_list void o2net_unregister_handler_list ( s#list_head * ) 
o2net_fill_node_map void o2net_fill_node_map ( unsigned long * , unsigned ) 
o2net_send_message_vec int o2net_send_message_vec ( t#u32 , t#u32 , s#kvec * , t#size_t , t#u8 , int * ) 
o2net_send_message int o2net_send_message ( t#u32 , t#u32 , void * , t#u32 , t#u8 , int * ) 

/* fs/ocfs2/dlm/dlmdebug.o */
s#dlm_migratable_lock struct dlm_migratable_lock { t#__be64 cookie ; t#__be16 pad1 ; t#u8 list ; t#u8 flags ; t#s8 type ; t#s8 convert_type ; t#s8 highest_blocked ; t#u8 node ; } 
s#dlm_recovery_ctxt struct dlm_recovery_ctxt { s#list_head resources ; s#list_head node_data ; t#u8 new_master ; t#u8 dead_node ; t#u16 state ; unsigned long node_map [ ( ( ( 255 ) + ( 8 * sizeof ( long ) ) - 1 ) / ( 8 * sizeof ( long ) ) ) ] ; t#wait_queue_head_t event ; } 
E#DLM_MLE_NUM_TYPES 3 
s##posix_acl
s##vfsmount
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##mmu_notifier_mm
s##xol_area
s##pid_namespace
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##sec_path
s##workqueue_struct
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##kmem_cache
s##xfrm_state
s##lwtunnel_state
s##rtable
s##rt6_info
s##dn_route
s##ndisc_ops
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##phy_device
s##sfp_bus
s##prot_inuse
s##ipv4_devconf
s##fib_table
s##inet_peer_base
s##xt_table
s##inet_hashinfo
s##ipv6_devconf
s##rt6_statistics
s##fib6_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##swap_info_struct
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##nlm_lockowner
s##nfs4_lock_state
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s#dlm_debug_ctxt struct dlm_debug_ctxt { s#dentry * debug_state_dentry ; s#dentry * debug_lockres_dentry ; s#dentry * debug_mle_dentry ; s#dentry * debug_purgelist_dentry ; } 
e#dlm_ctxt_state enum dlm_ctxt_state { DLM_CTXT_NEW = 0 , DLM_CTXT_JOINED = 1 , DLM_CTXT_IN_SHUTDOWN = 2 , DLM_CTXT_LEAVING = 3 , } 
s#dlm_protocol_version struct dlm_protocol_version { t#u8 pv_major ; t#u8 pv_minor ; } 
s#dlm_ctxt struct dlm_ctxt { s#list_head list ; s#hlist_head * * lockres_hash ; s#list_head dirty_list ; s#list_head purge_list ; s#list_head pending_asts ; s#list_head pending_basts ; s#list_head tracking_list ; unsigned int purge_count ; t#spinlock_t spinlock ; t#spinlock_t ast_lock ; t#spinlock_t track_lock ; char * name ; t#u8 node_num ; t#u32 key ; t#u8 joining_node ; t#u8 migrate_done ; t#wait_queue_head_t dlm_join_events ; unsigned long live_nodes_map [ ( ( ( 255 ) + ( 8 * sizeof ( long ) ) - 1 ) / ( 8 * sizeof ( long ) ) ) ] ; unsigned long domain_map [ ( ( ( 255 ) + ( 8 * sizeof ( long ) ) - 1 ) / ( 8 * sizeof ( long ) ) ) ] ; unsigned long exit_domain_map [ ( ( ( 255 ) + ( 8 * sizeof ( long ) ) - 1 ) / ( 8 * sizeof ( long ) ) ) ] ; unsigned long recovery_map [ ( ( ( 255 ) + ( 8 * sizeof ( long ) ) - 1 ) / ( 8 * sizeof ( long ) ) ) ] ; s#dlm_recovery_ctxt reco ; t#spinlock_t master_lock ; s#hlist_head * * master_hash ; s#list_head mle_hb_events ; t#atomic_t mle_tot_count [ E#DLM_MLE_NUM_TYPES ] ; t#atomic_t mle_cur_count [ E#DLM_MLE_NUM_TYPES ] ; t#atomic_t res_tot_count ; t#atomic_t res_cur_count ; s#dlm_debug_ctxt * dlm_debug_ctxt ; s#dentry * dlm_debugfs_subroot ; s#kref dlm_refs ; e#dlm_ctxt_state dlm_state ; unsigned int num_joins ; s#o2hb_callback_func dlm_hb_up ; s#o2hb_callback_func dlm_hb_down ; s#task_struct * dlm_thread_task ; s#task_struct * dlm_reco_thread_task ; s#workqueue_struct * dlm_worker ; t#wait_queue_head_t dlm_thread_wq ; t#wait_queue_head_t dlm_reco_thread_wq ; t#wait_queue_head_t ast_wq ; t#wait_queue_head_t migration_wq ; s#work_struct dispatched_work ; s#list_head work_list ; t#spinlock_t work_lock ; s#list_head dlm_domain_handlers ; s#list_head dlm_eviction_callbacks ; s#dlm_protocol_version fs_locking_proto ; s#dlm_protocol_version dlm_locking_proto ; } 
s#dlm_lock_resource struct dlm_lock_resource { s#hlist_node hash_node ; s#qstr lockname ; s#kref refs ; s#list_head granted ; s#list_head converting ; s#list_head blocked ; s#list_head purge ; s#list_head dirty ; s#list_head recovering ; s#list_head tracking ; unsigned long last_used ; s#dlm_ctxt * dlm ; unsigned migration_pending : 1 ; t#atomic_t asts_reserved ; t#spinlock_t spinlock ; t#wait_queue_head_t wq ; t#u8 owner ; t#u16 state ; char lvb [ 64 ] ; unsigned int inflight_locks ; unsigned int inflight_assert_workers ; unsigned long refmap [ ( ( ( 255 ) + ( 8 * sizeof ( long ) ) - 1 ) / ( 8 * sizeof ( long ) ) ) ] ; } 
t#dlm_astlockfunc_t typedef void ( dlm_astlockfunc_t ) ( void * ) 
t#dlm_bastlockfunc_t typedef void ( dlm_bastlockfunc_t ) ( void * , int ) 
e#dlm_status enum dlm_status { DLM_NORMAL = 0 , DLM_GRANTED , DLM_DENIED , DLM_DENIED_NOLOCKS , DLM_WORKING , DLM_BLOCKED , DLM_BLOCKED_ORPHAN , DLM_DENIED_GRACE_PERIOD , DLM_SYSERR , DLM_NOSUPPORT , DLM_CANCELGRANT , DLM_IVLOCKID , DLM_SYNC , DLM_BADTYPE , DLM_BADRESOURCE , DLM_MAXHANDLES , DLM_NOCLINFO , DLM_NOLOCKMGR , DLM_NOPURGED , DLM_BADARGS , DLM_VOID , DLM_NOTQUEUED , DLM_IVBUFLEN , DLM_CVTUNGRANT , DLM_BADPARAM , DLM_VALNOTVALID , DLM_REJECTED , DLM_ABORT , DLM_CANCEL , DLM_IVRESHANDLE , DLM_DEADLOCK , DLM_DENIED_NOASTS , DLM_FORWARD , DLM_TIMEOUT , DLM_IVGROUPID , DLM_VERS_CONFLICT , DLM_BAD_DEVICE_PATH , DLM_NO_DEVICE_PERMISSION , DLM_NO_CONTROL_DEVICE , DLM_RECOVERING , DLM_MIGRATING , DLM_MAXSTATS , } 
s#dlm_lockstatus struct dlm_lockstatus { e#dlm_status status ; t#u32 flags ; s#dlm_lock * lockid ; char lvb [ 64 ] ; } 
s#dlm_lock struct dlm_lock { s#dlm_migratable_lock ml ; s#list_head list ; s#list_head ast_list ; s#list_head bast_list ; s#dlm_lock_resource * lockres ; t#spinlock_t spinlock ; s#kref lock_refs ; t#dlm_astlockfunc_t * ast ; t#dlm_bastlockfunc_t * bast ; void * astdata ; s#dlm_lockstatus * lksb ; unsigned ast_pending : 1 , bast_pending : 1 , convert_pending : 1 , lock_pending : 1 , cancel_pending : 1 , unlock_pending : 1 , lksb_kernel_allocated : 1 ; } 
dlm_print_one_lock void dlm_print_one_lock ( s#dlm_lock * ) 
dlm_errmsg const char * dlm_errmsg ( e#dlm_status ) 
dlm_errname const char * dlm_errname ( e#dlm_status ) 

/* fs/ocfs2/dlm/dlmdomain.o */
s##posix_acl
s##vfsmount
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##mmu_notifier_mm
s##xol_area
s##pid_namespace
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##sec_path
s##workqueue_struct
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##kmem_cache
s##xfrm_state
s##lwtunnel_state
s##rtable
s##rt6_info
s##dn_route
s##ndisc_ops
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##phy_device
s##sfp_bus
s##prot_inuse
s##ipv4_devconf
s##fib_table
s##inet_peer_base
s##xt_table
s##inet_hashinfo
s##ipv6_devconf
s##rt6_statistics
s##fib6_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##swap_info_struct
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##nlm_lockowner
s##nfs4_lock_state
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
dlm_unregister_domain void dlm_unregister_domain ( s#dlm_ctxt * ) 
dlm_register_domain s#dlm_ctxt * dlm_register_domain ( const char * , t#u32 , s#dlm_protocol_version * ) 
t#dlm_eviction_func typedef void ( dlm_eviction_func ) ( int , void * ) 
s#dlm_eviction_cb struct dlm_eviction_cb { s#list_head ec_item ; t#dlm_eviction_func * ec_func ; void * ec_data ; } 
dlm_setup_eviction_cb void dlm_setup_eviction_cb ( s#dlm_eviction_cb * , t#dlm_eviction_func * , void * ) 
dlm_register_eviction_cb void dlm_register_eviction_cb ( s#dlm_ctxt * , s#dlm_eviction_cb * ) 
dlm_unregister_eviction_cb void dlm_unregister_eviction_cb ( s#dlm_eviction_cb * ) 

/* fs/ocfs2/dlm/dlmlock.o */
s##dlm_debug_ctxt
s##posix_acl
s##vfsmount
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##mmu_notifier_mm
s##xol_area
s##pid_namespace
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##sec_path
s##workqueue_struct
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##kmem_cache
s##xfrm_state
s##lwtunnel_state
s##rtable
s##rt6_info
s##dn_route
s##ndisc_ops
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##phy_device
s##sfp_bus
s##prot_inuse
s##ipv4_devconf
s##fib_table
s##inet_peer_base
s##xt_table
s##inet_hashinfo
s##ipv6_devconf
s##rt6_statistics
s##fib6_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##mtd_info
s##blk_mq_ctx
s##blkcg_gq
s##blk_mq_hw_ctx
s##blk_mq_alloc_data
s##blk_mq_debugfs_attr
s##blk_queue_stats
s##rq_wb
s##blk_mq_ops
s##blk_stat_callback
s##blk_trace
s##blk_flush_queue
s##bsg_job
s##throtl_data
s##blk_mq_tag_set
s##hd_geometry
s##pr_ops
s##timer_rand_state
s##disk_events
s##badblocks
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##swap_info_struct
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
dlmlock e#dlm_status dlmlock ( s#dlm_ctxt * , int , s#dlm_lockstatus * , int , const char * , int , t#dlm_astlockfunc_t * , void * , t#dlm_bastlockfunc_t * ) 

/* fs/ocfs2/dlm/dlmunlock.o */
s##dlm_debug_ctxt
s##posix_acl
s##vfsmount
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##mmu_notifier_mm
s##xol_area
s##pid_namespace
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##sec_path
s##workqueue_struct
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##kmem_cache
s##xfrm_state
s##lwtunnel_state
s##rtable
s##rt6_info
s##dn_route
s##ndisc_ops
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##phy_device
s##sfp_bus
s##prot_inuse
s##ipv4_devconf
s##fib_table
s##inet_peer_base
s##xt_table
s##inet_hashinfo
s##ipv6_devconf
s##rt6_statistics
s##fib6_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##mtd_info
s##blk_mq_ctx
s##blkcg_gq
s##blk_mq_hw_ctx
s##blk_mq_alloc_data
s##blk_mq_debugfs_attr
s##blk_queue_stats
s##rq_wb
s##blk_mq_ops
s##blk_stat_callback
s##blk_trace
s##blk_flush_queue
s##bsg_job
s##throtl_data
s##blk_mq_tag_set
s##hd_geometry
s##pr_ops
s##timer_rand_state
s##disk_events
s##badblocks
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##swap_info_struct
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
t#dlm_astunlockfunc_t typedef void ( dlm_astunlockfunc_t ) ( void * , e#dlm_status ) 
dlmunlock e#dlm_status dlmunlock ( s#dlm_ctxt * , s#dlm_lockstatus * , int , t#dlm_astunlockfunc_t * , void * ) 

/* fs/ocfs2/stackglue.o */
ocfs2_is_o2cb_active int ocfs2_is_o2cb_active ( void ) 
s#ocfs2_protocol_version struct ocfs2_protocol_version { t#u8 pv_major ; t#u8 pv_minor ; } 
s##dlm_lock
s#fsdlm_lksb_plus_lvb struct fsdlm_lksb_plus_lvb { s#dlm_lksb lksb ; char lvb [ 64 ] ; } 
s#ocfs2_dlm_lksb struct ocfs2_dlm_lksb { union { s#dlm_lockstatus lksb_o2dlm ; s#dlm_lksb lksb_fsdlm ; s#fsdlm_lksb_plus_lvb padding ; } ; s#ocfs2_cluster_connection * lksb_conn ; } 
s#ocfs2_locking_protocol struct ocfs2_locking_protocol { s#ocfs2_protocol_version lp_max_version ; void ( * lp_lock_ast ) ( s#ocfs2_dlm_lksb * ) ; void ( * lp_blocking_ast ) ( s#ocfs2_dlm_lksb * , int ) ; void ( * lp_unlock_ast ) ( s#ocfs2_dlm_lksb * , int ) ; } 
s#ocfs2_cluster_connection struct ocfs2_cluster_connection { char cc_name [ 64 + 1 ] ; int cc_namelen ; char cc_cluster_name [ 16 + 1 ] ; int cc_cluster_name_len ; s#ocfs2_protocol_version cc_version ; s#ocfs2_locking_protocol * cc_proto ; void ( * cc_recovery_handler ) ( int , void * ) ; void * cc_recovery_data ; void * cc_lockspace ; void * cc_private ; } 
s##vfsmount
s##posix_acl
s##sock
s##seq_file
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##pipe_inode_info
s##writeback_control
s##bio_vec
s##swap_info_struct
s##device
s##kmem_cache
s##mem_cgroup
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s#ocfs2_stack_operations struct ocfs2_stack_operations { int ( * connect ) ( s#ocfs2_cluster_connection * ) ; int ( * disconnect ) ( s#ocfs2_cluster_connection * ) ; int ( * this_node ) ( s#ocfs2_cluster_connection * , unsigned int * ) ; int ( * dlm_lock ) ( s#ocfs2_cluster_connection * , int , s#ocfs2_dlm_lksb * , t#u32 , void * , unsigned int ) ; int ( * dlm_unlock ) ( s#ocfs2_cluster_connection * , s#ocfs2_dlm_lksb * , t#u32 ) ; int ( * lock_status ) ( s#ocfs2_dlm_lksb * ) ; int ( * lvb_valid ) ( s#ocfs2_dlm_lksb * ) ; void * ( * lock_lvb ) ( s#ocfs2_dlm_lksb * ) ; int ( * plock ) ( s#ocfs2_cluster_connection * , t#u64 , s#file * , int , s#file_lock * ) ; void ( * dump_lksb ) ( s#ocfs2_dlm_lksb * ) ; } 
s#ocfs2_stack_plugin struct ocfs2_stack_plugin { char * sp_name ; s#ocfs2_stack_operations * sp_ops ; s#module * sp_owner ; s#list_head sp_list ; unsigned int sp_count ; s#ocfs2_protocol_version sp_max_proto ; } 
ocfs2_stack_glue_register int ocfs2_stack_glue_register ( s#ocfs2_stack_plugin * ) 
ocfs2_stack_glue_unregister void ocfs2_stack_glue_unregister ( s#ocfs2_stack_plugin * ) 
ocfs2_stack_glue_set_max_proto_version void ocfs2_stack_glue_set_max_proto_version ( s#ocfs2_protocol_version * ) 
ocfs2_dlm_lock int ocfs2_dlm_lock ( s#ocfs2_cluster_connection * , int , s#ocfs2_dlm_lksb * , t#u32 , void * , unsigned int ) 
ocfs2_dlm_unlock int ocfs2_dlm_unlock ( s#ocfs2_cluster_connection * , s#ocfs2_dlm_lksb * , t#u32 ) 
ocfs2_dlm_lock_status int ocfs2_dlm_lock_status ( s#ocfs2_dlm_lksb * ) 
ocfs2_dlm_lvb_valid int ocfs2_dlm_lvb_valid ( s#ocfs2_dlm_lksb * ) 
ocfs2_dlm_lvb void * ocfs2_dlm_lvb ( s#ocfs2_dlm_lksb * ) 
ocfs2_dlm_dump_lksb void ocfs2_dlm_dump_lksb ( s#ocfs2_dlm_lksb * ) 
ocfs2_stack_supports_plocks int ocfs2_stack_supports_plocks ( void ) 
ocfs2_plock int ocfs2_plock ( s#ocfs2_cluster_connection * , t#u64 , s#file * , int , s#file_lock * ) 
ocfs2_cluster_connect int ocfs2_cluster_connect ( const char * , const char * , int , const char * , int , s#ocfs2_locking_protocol * , void ( * ) ( int , void * ) , void * , s#ocfs2_cluster_connection * * ) 
ocfs2_cluster_connect_agnostic int ocfs2_cluster_connect_agnostic ( const char * , int , s#ocfs2_locking_protocol * , void ( * ) ( int , void * ) , void * , s#ocfs2_cluster_connection * * ) 
ocfs2_cluster_disconnect int ocfs2_cluster_disconnect ( s#ocfs2_cluster_connection * , int ) 
ocfs2_cluster_hangup void ocfs2_cluster_hangup ( const char * , int ) 
ocfs2_cluster_this_node int ocfs2_cluster_this_node ( s#ocfs2_cluster_connection * , unsigned int * ) 
ocfs2_kset extern s#kset * ocfs2_kset 

/* fs/open.o */
s##posix_acl
s##sock
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##kmem_cache
s##fs_pin
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##nameidata
s##sem_undo_list
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##bpf_prog_array
s##cgroup_taskset
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##proc_dir_entry
s##serial_icounter_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##workqueue_struct
s##kstatfs
s##pipe_inode_info
s##swap_info_struct
s##mem_cgroup
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##mtd_info
s##blk_mq_ctx
s##blk_mq_hw_ctx
s##blk_mq_alloc_data
s##blk_mq_debugfs_attr
s##blk_queue_stats
s##rq_wb
s##blk_mq_ops
s##blk_stat_callback
s##blk_trace
s##blk_flush_queue
s##bsg_job
s##throtl_data
s##blk_mq_tag_set
s##hd_geometry
s##pr_ops
s##timer_rand_state
s##disk_events
s##badblocks
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##ring_buffer
s##bpf_prog
s##static_key_mod
s##trace_array
s##tracer
s##trace_buffer
s##ring_buffer_iter
s##event_filter
s##ftrace_hash
s##mempolicy
s##numa_group
s##task_delay_info
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##nlm_lockowner
s##nfs4_lock_state
s##fscrypt_info
vfs_truncate extern long vfs_truncate ( const s#path * , t#loff_t ) 
vfs_fallocate extern int vfs_fallocate ( s#file * , int , t#loff_t , t#loff_t ) 
finish_open extern int finish_open ( s#file * , s#dentry * , int ( * ) ( s#inode * , s#file * ) , int * ) 
finish_no_open extern int finish_no_open ( s#file * , s#dentry * ) 
file_path extern char * file_path ( s#file * , char * , int ) 
dentry_open extern s#file * dentry_open ( const s#path * , int , const s#cred * ) 
filp_open extern s#file * filp_open ( const char * , int , t#umode_t ) 
file_open_root extern s#file * file_open_root ( s#dentry * , s#vfsmount * , const char * , int , t#umode_t ) 
filp_clone_open extern s#file * filp_clone_open ( s#file * ) 
filp_close extern int filp_close ( s#file * , t#fl_owner_t ) 
sys_close long sys_close ( unsigned int ) 
generic_file_open extern int generic_file_open ( s#inode * , s#file * ) 
nonseekable_open extern int nonseekable_open ( s#inode * , s#file * ) 

/* fs/pipe.o */
s##posix_acl
s##sock
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##kmem_cache
s##fs_pin
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##mempolicy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##workqueue_struct
s##blk_plug
s##reclaim_state
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##fwnode_handle
s##iommu_group
s##iommu_fwspec
s##robust_list_head
s##futex_pi_state
s##ring_buffer
s##bpf_prog
s##static_key_mod
s##trace_array
s##tracer
s##trace_buffer
s##ring_buffer_iter
s##event_filter
s##ftrace_hash
s##numa_group
s##task_delay_info
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
pipe_lock void pipe_lock ( s#pipe_inode_info * ) 
pipe_unlock void pipe_unlock ( s#pipe_inode_info * ) 
generic_pipe_buf_steal int generic_pipe_buf_steal ( s#pipe_inode_info * , s#pipe_buffer * ) 
generic_pipe_buf_get void generic_pipe_buf_get ( s#pipe_inode_info * , s#pipe_buffer * ) 
generic_pipe_buf_confirm int generic_pipe_buf_confirm ( s#pipe_inode_info * , s#pipe_buffer * ) 
generic_pipe_buf_release void generic_pipe_buf_release ( s#pipe_inode_info * , s#pipe_buffer * ) 

/* fs/posix_acl.o */
s##vfsmount
s##module
s##writeback_control
s##kstatfs
s##seq_file
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##iov_iter
s##poll_table_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##compat_timespec
s##pollfd
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##cgroup_namespace
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##mem_cgroup
s##uprobe
s##gs_cb
s##swap_info_struct
s##dev_pagemap
s##kmem_cache
s##export_operations
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
get_cached_acl s#posix_acl * get_cached_acl ( s#inode * , int ) 
get_cached_acl_rcu s#posix_acl * get_cached_acl_rcu ( s#inode * , int ) 
set_cached_acl void set_cached_acl ( s#inode * , int , s#posix_acl * ) 
forget_cached_acl void forget_cached_acl ( s#inode * , int ) 
forget_all_cached_acls void forget_all_cached_acls ( s#inode * ) 
get_acl s#posix_acl * get_acl ( s#inode * , int ) 
posix_acl_init extern void posix_acl_init ( s#posix_acl * , int ) 
posix_acl_alloc extern s#posix_acl * posix_acl_alloc ( int , t#gfp_t ) 
posix_acl_valid extern int posix_acl_valid ( s#user_namespace * , const s#posix_acl * ) 
posix_acl_equiv_mode extern int posix_acl_equiv_mode ( const s#posix_acl * , t#umode_t * ) 
posix_acl_from_mode extern s#posix_acl * posix_acl_from_mode ( t#umode_t , t#gfp_t ) 
__posix_acl_create extern int __posix_acl_create ( s#posix_acl * * , t#gfp_t , t#umode_t * ) 
__posix_acl_chmod extern int __posix_acl_chmod ( s#posix_acl * * , t#gfp_t , t#umode_t ) 
posix_acl_chmod extern int posix_acl_chmod ( s#inode * , t#umode_t ) 
posix_acl_create extern int posix_acl_create ( s#inode * , t#umode_t * , s#posix_acl * * , s#posix_acl * * ) 
posix_acl_update_mode extern int posix_acl_update_mode ( s#inode * , t#umode_t * , s#posix_acl * * ) 
posix_acl_from_xattr s#posix_acl * posix_acl_from_xattr ( s#user_namespace * , const void * , t#size_t ) 
posix_acl_to_xattr int posix_acl_to_xattr ( s#user_namespace * , const s#posix_acl * , void * , t#size_t ) 
set_posix_acl extern int set_posix_acl ( s#inode * , int , s#posix_acl * ) 
posix_acl_access_xattr_handler extern const s#xattr_handler posix_acl_access_xattr_handler 
posix_acl_default_xattr_handler extern const s#xattr_handler posix_acl_default_xattr_handler 

/* fs/proc/generic.o */
t#nlink_t typedef t#__u32 nlink_t 
s##posix_acl
s##sock
s##seq_file
s##bio_vec
s##pipe_inode_info
s##poll_table_struct
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##writeback_control
s##swap_info_struct
s##device
s##kmem_cache
s##mem_cgroup
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s#proc_dir_entry struct proc_dir_entry { unsigned int low_ino ; t#umode_t mode ; t#nlink_t nlink ; t#kuid_t uid ; t#kgid_t gid ; t#loff_t size ; const s#inode_operations * proc_iops ; const s#file_operations * proc_fops ; s#proc_dir_entry * parent ; s#rb_root_cached subdir ; s#rb_node subdir_node ; void * data ; t#atomic_t count ; t#atomic_t in_use ; s#completion * pde_unload_completion ; s#list_head pde_openers ; t#spinlock_t pde_unload_lock ; t#u8 namelen ; char name [ ] ; } 
proc_symlink extern s#proc_dir_entry * proc_symlink ( const char * , s#proc_dir_entry * , const char * ) 
proc_mkdir_data extern s#proc_dir_entry * proc_mkdir_data ( const char * , t#umode_t , s#proc_dir_entry * , void * ) 
proc_mkdir_mode extern s#proc_dir_entry * proc_mkdir_mode ( const char * , t#umode_t , s#proc_dir_entry * ) 
proc_mkdir extern s#proc_dir_entry * proc_mkdir ( const char * , s#proc_dir_entry * ) 
proc_create_mount_point s#proc_dir_entry * proc_create_mount_point ( const char * ) 
proc_create_data extern s#proc_dir_entry * proc_create_data ( const char * , t#umode_t , s#proc_dir_entry * , const s#file_operations * , void * ) 
proc_set_size extern void proc_set_size ( s#proc_dir_entry * , t#loff_t ) 
proc_set_user extern void proc_set_user ( s#proc_dir_entry * , t#kuid_t , t#kgid_t ) 
remove_proc_entry extern void remove_proc_entry ( const char * , s#proc_dir_entry * ) 
remove_proc_subtree extern int remove_proc_subtree ( const char * , s#proc_dir_entry * ) 
proc_get_parent_data extern void * proc_get_parent_data ( const s#inode * ) 
proc_remove extern void proc_remove ( s#proc_dir_entry * ) 
PDE_DATA extern void * PDE_DATA ( const s#inode * ) 

/* fs/proc/proc_net.o */
s##posix_acl
s##sock
s##bio_vec
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##ucounts
s##uevent_sock
s##net_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##sec_path
s##kmem_cache
s##xt_table
s##inet_hashinfo
s##fib_notifier_ops
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##neighbour
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##nf_hook_entry
s##ebt_table
s##workqueue_struct
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##cgroup_namespace
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##writeback_control
s##swap_info_struct
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##bdi_writeback
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
seq_open_net int seq_open_net ( s#inode * , s#file * , const s#seq_operations * , int ) 
single_open_net int single_open_net ( s#inode * , s#file * , int ( * ) ( s#seq_file * , void * ) ) 
seq_release_net int seq_release_net ( s#inode * , s#file * ) 
single_release_net int single_release_net ( s#inode * , s#file * ) 

/* fs/proc/proc_sysctl.o */
register_sysctl s#ctl_table_header * register_sysctl ( const char * , s#ctl_table * ) 
s#ctl_path struct ctl_path { const char * procname ; } 
register_sysctl_paths s#ctl_table_header * register_sysctl_paths ( const s#ctl_path * , s#ctl_table * ) 
register_sysctl_table s#ctl_table_header * register_sysctl_table ( s#ctl_table * ) 
unregister_sysctl_table void unregister_sysctl_table ( s#ctl_table_header * ) 

/* fs/proc/vmcore.o */
register_oldmem_pfn_is_ram extern int register_oldmem_pfn_is_ram ( int ( * ) ( unsigned long ) ) 
unregister_oldmem_pfn_is_ram extern void unregister_oldmem_pfn_is_ram ( void ) 

/* fs/pstore/platform.o */
s##sock
s##seq_file
s##vfsmount
s##posix_acl
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##device
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
e#pstore_type_id enum pstore_type_id { PSTORE_TYPE_DMESG = 0 , PSTORE_TYPE_MCE = 1 , PSTORE_TYPE_CONSOLE = 2 , PSTORE_TYPE_FTRACE = 3 , PSTORE_TYPE_PPC_RTAS = 4 , PSTORE_TYPE_PPC_OF = 5 , PSTORE_TYPE_PPC_COMMON = 6 , PSTORE_TYPE_PMSG = 7 , PSTORE_TYPE_PPC_OPAL = 8 , PSTORE_TYPE_UNKNOWN = 255 } 
e#kmsg_dump_reason enum kmsg_dump_reason { KMSG_DUMP_UNDEF , KMSG_DUMP_PANIC , KMSG_DUMP_OOPS , KMSG_DUMP_EMERG , KMSG_DUMP_RESTART , KMSG_DUMP_HALT , KMSG_DUMP_POWEROFF , } 
s#pstore_record struct pstore_record { s#pstore_info * psi ; e#pstore_type_id type ; t#u64 id ; s#timespec time ; char * buf ; t#ssize_t size ; t#ssize_t ecc_notice_size ; int count ; e#kmsg_dump_reason reason ; unsigned int part ; t#bool compressed ; } 
s#pstore_info struct pstore_info { s#module * owner ; char * name ; s#semaphore buf_lock ; char * buf ; t#size_t bufsize ; s#mutex read_mutex ; int flags ; void * data ; int ( * open ) ( s#pstore_info * ) ; int ( * close ) ( s#pstore_info * ) ; t#ssize_t ( * read ) ( s#pstore_record * ) ; int ( * write ) ( s#pstore_record * ) ; int ( * write_user ) ( s#pstore_record * , const char * ) ; int ( * erase ) ( s#pstore_record * ) ; } 
pstore_register extern int pstore_register ( s#pstore_info * ) 
pstore_unregister extern void pstore_unregister ( s#pstore_info * ) 

/* fs/quota/dquot.o */
dq_data_lock extern t#spinlock_t dq_data_lock 
s##posix_acl
s##sock
s##seq_file
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pollfd
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##pipe_inode_info
s##writeback_control
s##bio_vec
s##swap_info_struct
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##fwnode_handle
s##iommu_group
s##iommu_fwspec
s##kmem_cache
s##mem_cgroup
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##bdi_writeback
s##hd_struct
s##gendisk
s##request_queue
s##fsnotify_mark_connector
s##fscrypt_info
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##mtd_info
s##workqueue_struct
__quota_error extern __attribute__ ( ( format ( printf , 3 , 4 ) ) ) void __quota_error ( s#super_block * , const char * , const char * , ... ) 
register_quota_format int register_quota_format ( s#quota_format_type * ) 
unregister_quota_format void unregister_quota_format ( s#quota_format_type * ) 
E#_DQST_DQSTAT_LAST 8 
s#dqstats struct dqstats { int stat [ E#_DQST_DQSTAT_LAST ] ; s#percpu_counter counter [ E#_DQST_DQSTAT_LAST ] ; } 
dqstats extern s#dqstats dqstats 
dquot_mark_dquot_dirty int dquot_mark_dquot_dirty ( s#dquot * ) 
mark_info_dirty extern void mark_info_dirty ( s#super_block * , int ) 
dquot_acquire int dquot_acquire ( s#dquot * ) 
dquot_commit int dquot_commit ( s#dquot * ) 
dquot_release int dquot_release ( s#dquot * ) 
dquot_destroy void dquot_destroy ( s#dquot * ) 
dquot_scan_active int dquot_scan_active ( s#super_block * , int ( * ) ( s#dquot * , unsigned long ) , unsigned long ) 
dquot_writeback_dquots int dquot_writeback_dquots ( s#super_block * , int ) 
dquot_quota_sync int dquot_quota_sync ( s#super_block * , int ) 
dqput void dqput ( s#dquot * ) 
dquot_alloc s#dquot * dquot_alloc ( s#super_block * , int ) 
dqget s#dquot * dqget ( s#super_block * , s#kqid ) 
dquot_initialize int dquot_initialize ( s#inode * ) 
dquot_initialize_needed t#bool dquot_initialize_needed ( s#inode * ) 
dquot_drop void dquot_drop ( s#inode * ) 
inode_add_rsv_space void inode_add_rsv_space ( s#inode * , t#qsize_t ) 
inode_claim_rsv_space void inode_claim_rsv_space ( s#inode * , t#qsize_t ) 
inode_reclaim_rsv_space void inode_reclaim_rsv_space ( s#inode * , t#qsize_t ) 
inode_sub_rsv_space void inode_sub_rsv_space ( s#inode * , t#qsize_t ) 
__dquot_alloc_space int __dquot_alloc_space ( s#inode * , t#qsize_t , int ) 
dquot_alloc_inode int dquot_alloc_inode ( s#inode * ) 
dquot_claim_space_nodirty int dquot_claim_space_nodirty ( s#inode * , t#qsize_t ) 
dquot_reclaim_space_nodirty void dquot_reclaim_space_nodirty ( s#inode * , t#qsize_t ) 
__dquot_free_space void __dquot_free_space ( s#inode * , t#qsize_t , int ) 
dquot_free_inode void dquot_free_inode ( s#inode * ) 
__dquot_transfer int __dquot_transfer ( s#inode * , s#dquot * * ) 
dquot_transfer int dquot_transfer ( s#inode * , s#iattr * ) 
dquot_commit_info int dquot_commit_info ( s#super_block * , int ) 
dquot_get_next_id int dquot_get_next_id ( s#super_block * , s#kqid * ) 
dquot_operations extern const s#dquot_operations dquot_operations 
dquot_file_open int dquot_file_open ( s#inode * , s#file * ) 
dquot_disable int dquot_disable ( s#super_block * , int , unsigned int ) 
dquot_quota_off int dquot_quota_off ( s#super_block * , int ) 
dquot_resume int dquot_resume ( s#super_block * , int ) 
dquot_quota_on int dquot_quota_on ( s#super_block * , int , int , const s#path * ) 
dquot_enable int dquot_enable ( s#inode * , int , int , unsigned int ) 
dquot_quota_on_mount int dquot_quota_on_mount ( s#super_block * , char * , int , int ) 
dquot_get_dqblk int dquot_get_dqblk ( s#super_block * , s#kqid , s#qc_dqblk * ) 
dquot_get_next_dqblk int dquot_get_next_dqblk ( s#super_block * , s#kqid * , s#qc_dqblk * ) 
dquot_set_dqblk int dquot_set_dqblk ( s#super_block * , s#kqid , s#qc_dqblk * ) 
dquot_get_state int dquot_get_state ( s#super_block * , s#qc_state * ) 
dquot_set_dqinfo int dquot_set_dqinfo ( s#super_block * , int , s#qc_info * ) 
dquot_quotactl_sysfile_ops extern const s#quotactl_ops dquot_quotactl_sysfile_ops 

/* fs/quota/kqid.o */
qid_eq extern t#bool qid_eq ( s#kqid , s#kqid ) 
qid_lt extern t#bool qid_lt ( s#kqid , s#kqid ) 
t#qid_t typedef t#__kernel_uid32_t qid_t 
s##user_namespace
from_kqid extern t#qid_t from_kqid ( s#user_namespace * , s#kqid ) 
from_kqid_munged extern t#qid_t from_kqid_munged ( s#user_namespace * , s#kqid ) 
qid_valid extern t#bool qid_valid ( s#kqid ) 

/* fs/quota/netlink.o */
quota_send_warning extern void quota_send_warning ( s#kqid , t#dev_t , const char ) 

/* fs/quota/quota_tree.o */
s##posix_acl
s##sock
s##seq_file
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##pipe_inode_info
s##writeback_control
s##bio_vec
s##swap_info_struct
s##device
s##kmem_cache
s##mem_cgroup
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##bdi_writeback
s##hd_struct
s##gendisk
s##request_queue
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##mtd_info
s##workqueue_struct
s#qtree_fmt_operations struct qtree_fmt_operations { void ( * mem2disk_dqblk ) ( void * , s#dquot * ) ; void ( * disk2mem_dqblk ) ( s#dquot * , void * ) ; int ( * is_id ) ( void * , s#dquot * ) ; } 
s#qtree_mem_dqinfo struct qtree_mem_dqinfo { s#super_block * dqi_sb ; int dqi_type ; unsigned int dqi_blocks ; unsigned int dqi_free_blk ; unsigned int dqi_free_entry ; unsigned int dqi_blocksize_bits ; unsigned int dqi_entry_size ; unsigned int dqi_usable_bs ; unsigned int dqi_qtree_depth ; const s#qtree_fmt_operations * dqi_ops ; } 
qtree_entry_unused int qtree_entry_unused ( s#qtree_mem_dqinfo * , char * ) 
qtree_write_dquot int qtree_write_dquot ( s#qtree_mem_dqinfo * , s#dquot * ) 
qtree_delete_dquot int qtree_delete_dquot ( s#qtree_mem_dqinfo * , s#dquot * ) 
qtree_read_dquot int qtree_read_dquot ( s#qtree_mem_dqinfo * , s#dquot * ) 
qtree_release_dquot int qtree_release_dquot ( s#qtree_mem_dqinfo * , s#dquot * ) 
qtree_get_next_id int qtree_get_next_id ( s#qtree_mem_dqinfo * , s#kqid * ) 

/* fs/read_write.o */
s##module
s##posix_acl
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##mmu_notifier_mm
s##xol_area
s##kmem_cache
s##fs_pin
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##robust_list_head
s##futex_pi_state
s##device_private
s##sock
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##fwnode_handle
s##iommu_group
s##iommu_fwspec
s##ring_buffer
s##bpf_prog
s##static_key_mod
s##trace_array
s##tracer
s##trace_buffer
s##ring_buffer_iter
s##event_filter
s##ftrace_hash
s##numa_group
s##task_delay_info
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##cdev
s##fscrypt_info
s##nlm_lockowner
s##nfs4_lock_state
generic_ro_fops extern const s#file_operations generic_ro_fops 
vfs_setpos extern t#loff_t vfs_setpos ( s#file * , t#loff_t , t#loff_t ) 
generic_file_llseek_size extern t#loff_t generic_file_llseek_size ( s#file * , t#loff_t , int , t#loff_t , t#loff_t ) 
generic_file_llseek extern t#loff_t generic_file_llseek ( s#file * , t#loff_t , int ) 
fixed_size_llseek extern t#loff_t fixed_size_llseek ( s#file * , t#loff_t , int , t#loff_t ) 
no_seek_end_llseek extern t#loff_t no_seek_end_llseek ( s#file * , t#loff_t , int ) 
no_seek_end_llseek_size extern t#loff_t no_seek_end_llseek_size ( s#file * , t#loff_t , int , t#loff_t ) 
noop_llseek extern t#loff_t noop_llseek ( s#file * , t#loff_t , int ) 
no_llseek extern t#loff_t no_llseek ( s#file * , t#loff_t , int ) 
default_llseek extern t#loff_t default_llseek ( s#file * , t#loff_t , int ) 
vfs_llseek extern t#loff_t vfs_llseek ( s#file * , t#loff_t , int ) 
vfs_iter_read t#ssize_t vfs_iter_read ( s#file * , s#iov_iter * , t#loff_t * ) 
vfs_iter_write t#ssize_t vfs_iter_write ( s#file * , s#iov_iter * , t#loff_t * ) 
__vfs_read extern t#ssize_t __vfs_read ( s#file * , char * , t#size_t , t#loff_t * ) 
vfs_read extern t#ssize_t vfs_read ( s#file * , char * , t#size_t , t#loff_t * ) 
__vfs_write extern t#ssize_t __vfs_write ( s#file * , const char * , t#size_t , t#loff_t * ) 
__kernel_write extern t#ssize_t __kernel_write ( s#file * , const char * , t#size_t , t#loff_t * ) 
vfs_write extern t#ssize_t vfs_write ( s#file * , const char * , t#size_t , t#loff_t * ) 
iov_shorten unsigned long iov_shorten ( s#iovec * , unsigned long , t#size_t ) 
vfs_readv extern t#ssize_t vfs_readv ( s#file * , const s#iovec * , unsigned long , t#loff_t * , int ) 
vfs_writev extern t#ssize_t vfs_writev ( s#file * , const s#iovec * , unsigned long , t#loff_t * , int ) 
vfs_copy_file_range extern t#ssize_t vfs_copy_file_range ( s#file * , t#loff_t , s#file * , t#loff_t , t#size_t , unsigned int ) 
vfs_clone_file_prep_inodes extern int vfs_clone_file_prep_inodes ( s#inode * , t#loff_t , s#inode * , t#loff_t , t#u64 * , t#bool ) 
do_clone_file_range extern int do_clone_file_range ( s#file * , t#loff_t , s#file * , t#loff_t , t#u64 ) 
vfs_clone_file_range extern int vfs_clone_file_range ( s#file * , t#loff_t , s#file * , t#loff_t , t#u64 ) 
vfs_dedupe_file_range_compare extern int vfs_dedupe_file_range_compare ( s#inode * , t#loff_t , s#inode * , t#loff_t , t#loff_t , t#bool * ) 
vfs_dedupe_file_range_one extern int vfs_dedupe_file_range_one ( s#file * , t#loff_t , s#file * , t#loff_t , t#u64 ) 
s#file_dedupe_range_info struct file_dedupe_range_info { t#__s64 dest_fd ; t#__u64 dest_offset ; t#__u64 bytes_deduped ; t#__s32 status ; t#__u32 reserved ; } 
s#file_dedupe_range struct file_dedupe_range { t#__u64 src_offset ; t#__u64 src_length ; t#__u16 dest_count ; t#__u16 reserved1 ; t#__u32 reserved2 ; s#file_dedupe_range_info info [ 0 ] ; } 
vfs_dedupe_file_range extern int vfs_dedupe_file_range ( s#file * , s#file_dedupe_range * ) 

/* fs/readdir.o */
s##vfsmount
s##posix_acl
s##module
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##mmu_notifier_mm
s##xol_area
s##kmem_cache
s##fs_pin
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##robust_list_head
s##futex_pi_state
s##device_private
s##sock
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##fwnode_handle
s##iommu_group
s##iommu_fwspec
s##ring_buffer
s##bpf_prog
s##static_key_mod
s##trace_array
s##tracer
s##trace_buffer
s##ring_buffer_iter
s##event_filter
s##ftrace_hash
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fscrypt_info
iterate_dir extern int iterate_dir ( s#file * , s#dir_context * ) 

/* fs/select.o */
s##vfsmount
s##posix_acl
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##mmu_notifier_mm
s##xol_area
s##kmem_cache
s##fs_pin
s##nameidata
s##sem_undo_list
s##fs_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##sec_path
s##workqueue_struct
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##xfrm_state
s##lwtunnel_state
s##uncached_list
s##rt6_info
s##dn_route
s##prefix_info
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##phy_device
s##sfp_bus
s##prot_inuse
s##ipv4_devconf
s##xt_table
s##inet_hashinfo
s##rt6_statistics
s##fib6_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##ring_buffer
s##static_key_mod
s##trace_array
s##tracer
s##trace_buffer
s##ring_buffer_iter
s##event_filter
s##ftrace_hash
s##numa_group
s##task_delay_info
s##uprobe
s##gs_cb
s##swap_info_struct
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##mtd_info
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##poll_table_page
s#poll_table_entry struct poll_table_entry { s#file * filp ; unsigned long key ; t#wait_queue_entry_t wait ; t#wait_queue_head_t * wait_address ; } 
s#poll_wqueues struct poll_wqueues { t#poll_table pt ; s#poll_table_page * table ; s#task_struct * polling_task ; int triggered ; int error ; int inline_index ; s#poll_table_entry inline_entries [ ( ( 832 - 256 ) / sizeof ( struct poll_table_entry ) ) ] ; } 
poll_initwait extern void poll_initwait ( s#poll_wqueues * ) 
poll_freewait extern void poll_freewait ( s#poll_wqueues * ) 
poll_schedule_timeout extern int poll_schedule_timeout ( s#poll_wqueues * , int , t#ktime_t * , unsigned long ) 

/* fs/seq_file.o */
s##vfsmount
s##posix_acl
s##module
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##compat_timespec
s##pollfd
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##iov_iter
s##swap_info_struct
s##device
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
seq_open int seq_open ( s#file * , const s#seq_operations * ) 
seq_read t#ssize_t seq_read ( s#file * , char * , t#size_t , t#loff_t * ) 
seq_lseek t#loff_t seq_lseek ( s#file * , t#loff_t , int ) 
seq_release int seq_release ( s#inode * , s#file * ) 
seq_escape void seq_escape ( s#seq_file * , const char * , const char * ) 
seq_vprintf __attribute__ ( ( format ( printf , 2 , 0 ) ) ) void seq_vprintf ( s#seq_file * , const char * , t#va_list ) 
seq_printf __attribute__ ( ( format ( printf , 2 , 3 ) ) ) void seq_printf ( s#seq_file * , const char * , ... ) 
mangle_path char * mangle_path ( char * , const char * , const char * ) 
seq_path int seq_path ( s#seq_file * , const s#path * , const char * ) 
seq_file_path int seq_file_path ( s#seq_file * , s#file * , const char * ) 
seq_dentry int seq_dentry ( s#seq_file * , s#dentry * , const char * ) 
single_open int single_open ( s#file * , int ( * ) ( s#seq_file * , void * ) , void * ) 
single_open_size int single_open_size ( s#file * , int ( * ) ( s#seq_file * , void * ) , void * , t#size_t ) 
single_release int single_release ( s#inode * , s#file * ) 
seq_release_private int seq_release_private ( s#inode * , s#file * ) 
__seq_open_private void * __seq_open_private ( s#file * , const s#seq_operations * , int ) 
seq_open_private int seq_open_private ( s#file * , const s#seq_operations * , int ) 
seq_putc void seq_putc ( s#seq_file * , char ) 
seq_puts void seq_puts ( s#seq_file * , const char * ) 
seq_put_decimal_ull void seq_put_decimal_ull ( s#seq_file * , const char * , unsigned long long ) 
seq_put_decimal_ll void seq_put_decimal_ll ( s#seq_file * , const char * , long long ) 
seq_write int seq_write ( s#seq_file * , const void * , t#size_t ) 
seq_pad void seq_pad ( s#seq_file * , char ) 
seq_hex_dump void seq_hex_dump ( s#seq_file * , const char * , int , int , int , const void * , t#size_t , t#bool ) 
seq_list_start extern s#list_head * seq_list_start ( s#list_head * , t#loff_t ) 
seq_list_start_head extern s#list_head * seq_list_start_head ( s#list_head * , t#loff_t ) 
seq_list_next extern s#list_head * seq_list_next ( void * , s#list_head * , t#loff_t * ) 
seq_hlist_start extern s#hlist_node * seq_hlist_start ( s#hlist_head * , t#loff_t ) 
seq_hlist_start_head extern s#hlist_node * seq_hlist_start_head ( s#hlist_head * , t#loff_t ) 
seq_hlist_next extern s#hlist_node * seq_hlist_next ( void * , s#hlist_head * , t#loff_t * ) 
seq_hlist_start_rcu extern s#hlist_node * seq_hlist_start_rcu ( s#hlist_head * , t#loff_t ) 
seq_hlist_start_head_rcu extern s#hlist_node * seq_hlist_start_head_rcu ( s#hlist_head * , t#loff_t ) 
seq_hlist_next_rcu extern s#hlist_node * seq_hlist_next_rcu ( void * , s#hlist_head * , t#loff_t * ) 
seq_hlist_start_percpu extern s#hlist_node * seq_hlist_start_percpu ( s#hlist_head * , int * , t#loff_t ) 
seq_hlist_next_percpu extern s#hlist_node * seq_hlist_next_percpu ( void * , s#hlist_head * , int * , t#loff_t * ) 

/* fs/splice.o */
s##posix_acl
s##vfsmount
s##module
s##device_private
s##sock
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##kmem_cache
s##fs_pin
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##mempolicy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##workqueue_struct
s##blk_plug
s##robust_list_head
s##futex_pi_state
s##ring_buffer
s##bpf_prog
s##static_key_mod
s##trace_array
s##tracer
s##trace_buffer
s##ring_buffer_iter
s##event_filter
s##ftrace_hash
s##numa_group
s##task_delay_info
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##kernfs_open_node
s##kernfs_iattrs
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##fwnode_handle
s##iommu_group
s##iommu_fwspec
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s#partial_page struct partial_page { unsigned int offset ; unsigned int len ; unsigned long private ; } 
s#splice_pipe_desc struct splice_pipe_desc { s#page * * pages ; s#partial_page * partial ; int nr_pages ; unsigned int nr_pages_max ; const s#pipe_buf_operations * ops ; void ( * spd_release ) ( s#splice_pipe_desc * , unsigned int ) ; } 
splice_to_pipe extern t#ssize_t splice_to_pipe ( s#pipe_inode_info * , s#splice_pipe_desc * ) 
add_to_pipe extern t#ssize_t add_to_pipe ( s#pipe_inode_info * , s#pipe_buffer * ) 
generic_file_splice_read extern t#ssize_t generic_file_splice_read ( s#file * , t#loff_t * , s#pipe_inode_info * , t#size_t , unsigned int ) 
nosteal_pipe_buf_ops extern const s#pipe_buf_operations nosteal_pipe_buf_ops 
kernel_write extern t#ssize_t kernel_write ( s#file * , const char * , t#size_t , t#loff_t * ) 
s#splice_desc struct splice_desc { t#size_t total_len ; unsigned int len ; unsigned int flags ; union { void * userptr ; s#file * file ; void * data ; } u ; t#loff_t pos ; t#loff_t * opos ; t#size_t num_spliced ; t#bool need_wakeup ; } 
t#splice_actor typedef int ( splice_actor ) ( s#pipe_inode_info * , s#pipe_buffer * , s#splice_desc * ) 
__splice_from_pipe extern t#ssize_t __splice_from_pipe ( s#pipe_inode_info * , s#splice_desc * , t#splice_actor * ) 
iter_file_splice_write extern t#ssize_t iter_file_splice_write ( s#pipe_inode_info * , s#file * , t#loff_t * , t#size_t , unsigned int ) 
generic_splice_sendpage extern t#ssize_t generic_splice_sendpage ( s#pipe_inode_info * , s#file * , t#loff_t * , t#size_t , unsigned int ) 
t#splice_direct_actor typedef int ( splice_direct_actor ) ( s#pipe_inode_info * , s#splice_desc * ) 
splice_direct_to_actor extern t#ssize_t splice_direct_to_actor ( s#file * , s#splice_desc * , t#splice_direct_actor * ) 
do_splice_direct extern long do_splice_direct ( s#file * , t#loff_t * , s#file * , t#loff_t * , t#size_t , unsigned int ) 

/* fs/stack.o */
s##posix_acl
s##vfsmount
s##module
s##writeback_control
s##kstatfs
s##seq_file
s##task_struct
s##iov_iter
s##poll_table_struct
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##vm_operations_struct
s##mempolicy
s##userfaultfd_ctx
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cred
s##swap_info_struct
s##dev_pagemap
s##kmem_cache
s##mem_cgroup
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
fsstack_copy_inode_size extern void fsstack_copy_inode_size ( s#inode * , s#inode * ) 
fsstack_copy_attr_all extern void fsstack_copy_attr_all ( s#inode * , const s#inode * ) 

/* fs/stat.o */
s##posix_acl
s##vfsmount
s##module
s##writeback_control
s##kstatfs
s##bio_vec
s##pipe_inode_info
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##kmem_cache
s##fs_pin
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##swap_info_struct
s##device_private
s##sock
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##fwnode_handle
s##iommu_group
s##iommu_fwspec
s##mem_cgroup
s##mempolicy
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##robust_list_head
s##futex_pi_state
s##ring_buffer
s##bpf_prog
s##static_key_mod
s##trace_array
s##tracer
s##trace_buffer
s##ring_buffer_iter
s##event_filter
s##ftrace_hash
s##numa_group
s##task_delay_info
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
generic_fillattr extern void generic_fillattr ( s#inode * , s#kstat * ) 
vfs_getattr_nosec extern int vfs_getattr_nosec ( const s#path * , s#kstat * , t#u32 , unsigned int ) 
vfs_getattr extern int vfs_getattr ( const s#path * , s#kstat * , t#u32 , unsigned int ) 
vfs_statx_fd extern int vfs_statx_fd ( unsigned int , s#kstat * , t#u32 , unsigned int ) 
vfs_statx extern int vfs_statx ( int , const char * , int , s#kstat * , t#u32 ) 
__inode_add_bytes void __inode_add_bytes ( s#inode * , t#loff_t ) 
inode_add_bytes void inode_add_bytes ( s#inode * , t#loff_t ) 
__inode_sub_bytes void __inode_sub_bytes ( s#inode * , t#loff_t ) 
inode_sub_bytes void inode_sub_bytes ( s#inode * , t#loff_t ) 
inode_get_bytes t#loff_t inode_get_bytes ( s#inode * ) 
inode_set_bytes void inode_set_bytes ( s#inode * , t#loff_t ) 

/* fs/statfs.o */
s##posix_acl
s##module
s##bio_vec
s##pipe_inode_info
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##kmem_cache
s##fs_pin
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##writeback_control
s##swap_info_struct
s##device_private
s##sock
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##fwnode_handle
s##iommu_group
s##iommu_fwspec
s##mem_cgroup
s##mempolicy
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##robust_list_head
s##futex_pi_state
s##ring_buffer
s##bpf_prog
s##static_key_mod
s##trace_array
s##tracer
s##trace_buffer
s##ring_buffer_iter
s##event_filter
s##ftrace_hash
s##numa_group
s##task_delay_info
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
vfs_statfs extern int vfs_statfs ( const s#path * , s#kstatfs * ) 

/* fs/super.o */
s##posix_acl
s##module
s##iov_iter
s##poll_table_struct
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##compat_timespec
s##pollfd
s##kmem_cache
s##fs_pin
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##device_private
s##sock
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##workqueue_struct
s##swap_info_struct
s##mem_cgroup
s##mempolicy
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_mq_ctx
s##blk_mq_hw_ctx
s##blk_mq_alloc_data
s##blk_mq_debugfs_attr
s##blk_queue_stats
s##rq_wb
s##blk_mq_ops
s##blk_stat_callback
s##blk_trace
s##blk_flush_queue
s##bsg_job
s##throtl_data
s##blk_mq_tag_set
s##hd_geometry
s##pr_ops
s##timer_rand_state
s##disk_events
s##badblocks
s##reclaim_state
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fscrypt_info
s##kstatfs
s##iomap
s##xattr_handler
s##fscrypt_operations
s##mtd_info
s#super_block_dev struct super_block_dev { s#super_block * sb ; s#list_head entry ; t#dev_t anon_dev ; } 
insert_anon_sbdev int insert_anon_sbdev ( s#super_block * , s#super_block_dev * ) 
remove_anon_sbdev void remove_anon_sbdev ( s#super_block_dev * ) 
deactivate_locked_super void deactivate_locked_super ( s#super_block * ) 
deactivate_super void deactivate_super ( s#super_block * ) 
generic_shutdown_super void generic_shutdown_super ( s#super_block * ) 
sget_userns s#super_block * sget_userns ( s#file_system_type * , int ( * ) ( s#super_block * , void * ) , int ( * ) ( s#super_block * , void * ) , int , s#user_namespace * , void * ) 
sget s#super_block * sget ( s#file_system_type * , int ( * ) ( s#super_block * , void * ) , int ( * ) ( s#super_block * , void * ) , int , void * ) 
drop_super extern void drop_super ( s#super_block * ) 
drop_super_exclusive extern void drop_super_exclusive ( s#super_block * ) 
iterate_supers_type extern void iterate_supers_type ( s#file_system_type * , void ( * ) ( s#super_block * , void * ) , void * ) 
get_super extern s#super_block * get_super ( s#block_device * ) 
get_super_thawed extern s#super_block * get_super_thawed ( s#block_device * ) 
get_super_exclusive_thawed extern s#super_block * get_super_exclusive_thawed ( s#block_device * ) 
get_anon_bdev int get_anon_bdev ( t#dev_t * ) 
free_anon_bdev void free_anon_bdev ( t#dev_t ) 
set_anon_super int set_anon_super ( s#super_block * , void * ) 
kill_anon_super void kill_anon_super ( s#super_block * ) 
kill_litter_super void kill_litter_super ( s#super_block * ) 
mount_ns extern s#dentry * mount_ns ( s#file_system_type * , int , void * , void * , s#user_namespace * , int ( * ) ( s#super_block * , void * , int ) ) 
mount_bdev extern s#dentry * mount_bdev ( s#file_system_type * , int , const char * , void * , int ( * ) ( s#super_block * , void * , int ) ) 
kill_block_super void kill_block_super ( s#super_block * ) 
mount_nodev extern s#dentry * mount_nodev ( s#file_system_type * , int , void * , int ( * ) ( s#super_block * , void * , int ) ) 
mount_single extern s#dentry * mount_single ( s#file_system_type * , int , void * , int ( * ) ( s#super_block * , void * , int ) ) 
super_setup_bdi_name extern __attribute__ ( ( format ( printf , 2 , 3 ) ) ) int super_setup_bdi_name ( s#super_block * , char * , ... ) 
super_setup_bdi extern int super_setup_bdi ( s#super_block * ) 
__sb_end_write void __sb_end_write ( s#super_block * , int ) 
__sb_start_write int __sb_start_write ( s#super_block * , int , t#bool ) 
freeze_super extern int freeze_super ( s#super_block * ) 
thaw_super extern int thaw_super ( s#super_block * ) 

/* fs/sync.o */
s##posix_acl
s##vfsmount
s##module
s##iov_iter
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##compat_timespec
s##kmem_cache
s##fs_pin
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##device_private
s##sock
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##workqueue_struct
s##swap_info_struct
s##mem_cgroup
s##mempolicy
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_mq_ctx
s##blk_mq_hw_ctx
s##blk_mq_alloc_data
s##blk_mq_debugfs_attr
s##blk_queue_stats
s##rq_wb
s##blk_mq_ops
s##blk_stat_callback
s##blk_trace
s##blk_flush_queue
s##bsg_job
s##throtl_data
s##blk_mq_tag_set
s##hd_geometry
s##pr_ops
s##timer_rand_state
s##disk_events
s##badblocks
s##reclaim_state
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##ring_buffer
s##bpf_prog
s##static_key_mod
s##trace_array
s##tracer
s##trace_buffer
s##ring_buffer_iter
s##event_filter
s##ftrace_hash
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##mtd_info
sync_filesystem extern int sync_filesystem ( s#super_block * ) 
vfs_fsync_range extern int vfs_fsync_range ( s#file * , t#loff_t , t#loff_t , int ) 
vfs_fsync extern int vfs_fsync ( s#file * , int ) 

/* fs/sysfs/dir.o */
s##sock
s##seq_file
s##vfsmount
s##posix_acl
s##module
s##writeback_control
s##kstatfs
s##task_struct
s##iov_iter
s##swap_info_struct
s##dev_pagemap
s##kmem_cache
s##mem_cgroup
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##user_namespace
s##bdi_writeback
s##poll_table_struct
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##vm_operations_struct
s##mempolicy
s##userfaultfd_ctx
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##cred
s##kernfs_open_node
s##kernfs_iattrs
sysfs_create_mount_point int sysfs_create_mount_point ( s#kobject * , const char * ) 
sysfs_remove_mount_point void sysfs_remove_mount_point ( s#kobject * , const char * ) 

/* fs/sysfs/file.o */
s##sock
s##vfsmount
s##posix_acl
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##device
s##kmem_cache
s##export_operations
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
sysfs_notify void sysfs_notify ( s#kobject * , const char * , const char * ) 
sysfs_create_file_ns int sysfs_create_file_ns ( s#kobject * , const s#attribute * , const void * ) 
sysfs_create_files int sysfs_create_files ( s#kobject * , const s#attribute * * ) 
sysfs_add_file_to_group int sysfs_add_file_to_group ( s#kobject * , const s#attribute * , const char * ) 
sysfs_chmod_file int sysfs_chmod_file ( s#kobject * , const s#attribute * , t#umode_t ) 
sysfs_break_active_protection s#kernfs_node * sysfs_break_active_protection ( s#kobject * , const s#attribute * ) 
sysfs_unbreak_active_protection void sysfs_unbreak_active_protection ( s#kernfs_node * ) 
sysfs_remove_file_ns void sysfs_remove_file_ns ( s#kobject * , const s#attribute * , const void * ) 
sysfs_remove_files void sysfs_remove_files ( s#kobject * , const s#attribute * * ) 
sysfs_remove_file_from_group void sysfs_remove_file_from_group ( s#kobject * , const s#attribute * , const char * ) 
sysfs_create_bin_file int sysfs_create_bin_file ( s#kobject * , const s#bin_attribute * ) 
sysfs_remove_bin_file void sysfs_remove_bin_file ( s#kobject * , const s#bin_attribute * ) 

/* fs/sysfs/group.o */
s##sock
s##seq_file
s##vfsmount
s##posix_acl
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##device
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
sysfs_create_group int sysfs_create_group ( s#kobject * , const s#attribute_group * ) 
sysfs_create_groups int sysfs_create_groups ( s#kobject * , const s#attribute_group * * ) 
sysfs_update_group int sysfs_update_group ( s#kobject * , const s#attribute_group * ) 
sysfs_remove_group void sysfs_remove_group ( s#kobject * , const s#attribute_group * ) 
sysfs_remove_groups void sysfs_remove_groups ( s#kobject * , const s#attribute_group * * ) 
sysfs_merge_group int sysfs_merge_group ( s#kobject * , const s#attribute_group * ) 
sysfs_unmerge_group void sysfs_unmerge_group ( s#kobject * , const s#attribute_group * ) 
sysfs_add_link_to_group int sysfs_add_link_to_group ( s#kobject * , const char * , s#kobject * , const char * ) 
sysfs_remove_link_from_group void sysfs_remove_link_from_group ( s#kobject * , const char * , const char * ) 
__compat_only_sysfs_link_entry_to_kobj int __compat_only_sysfs_link_entry_to_kobj ( s#kobject * , s#kobject * , const char * ) 

/* fs/sysfs/symlink.o */
s##sock
s##seq_file
s##vfsmount
s##posix_acl
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##device
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
sysfs_create_link int sysfs_create_link ( s#kobject * , s#kobject * , const char * ) 
sysfs_create_link_nowarn int sysfs_create_link_nowarn ( s#kobject * , s#kobject * , const char * ) 
sysfs_remove_link void sysfs_remove_link ( s#kobject * , const char * ) 
sysfs_rename_link_ns int sysfs_rename_link_ns ( s#kobject * , s#kobject * , const char * , const char * , const void * ) 

/* fs/xattr.o */
s##module
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##mmu_notifier_mm
s##xol_area
s##compat_timespec
s##kmem_cache
s##fs_pin
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##device_private
s##sock
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##fwnode_handle
s##iommu_group
s##iommu_fwspec
s##ring_buffer
s##bpf_prog
s##static_key_mod
s##trace_array
s##tracer
s##trace_buffer
s##ring_buffer_iter
s##event_filter
s##ftrace_hash
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##uprobe
s##gs_cb
s##iov_iter
s##swap_info_struct
s##export_operations
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##nlm_lockowner
s##nfs4_lock_state
s##bdi_writeback
s##cdev
s##fscrypt_info
__vfs_setxattr int __vfs_setxattr ( s#dentry * , s#inode * , const char * , const void * , t#size_t , int ) 
vfs_setxattr int vfs_setxattr ( s#dentry * , const char * , const void * , t#size_t , int ) 
xattr_getsecurity t#ssize_t xattr_getsecurity ( s#inode * , const char * , void * , t#size_t ) 
__vfs_getxattr t#ssize_t __vfs_getxattr ( s#dentry * , s#inode * , const char * , void * , t#size_t ) 
vfs_getxattr t#ssize_t vfs_getxattr ( s#dentry * , const char * , void * , t#size_t ) 
vfs_listxattr t#ssize_t vfs_listxattr ( s#dentry * , char * , t#size_t ) 
__vfs_removexattr int __vfs_removexattr ( s#dentry * , const char * ) 
vfs_removexattr int vfs_removexattr ( s#dentry * , const char * ) 
generic_listxattr t#ssize_t generic_listxattr ( s#dentry * , char * , t#size_t ) 
xattr_full_name const char * xattr_full_name ( const s#xattr_handler * , const char * ) 

/* init/do_mounts.o */
name_to_dev_t extern t#dev_t name_to_dev_t ( const char * ) 

/* init/init_task.o */
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##sock
s##bio_vec
s##key_user
s##key_type
s##assoc_array_ptr
s##poll_table_struct
s##kmem_cache
s##fs_pin
s##proc_ns_operations
s##nlm_lockowner
s##nfs4_lock_state
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##mem_cgroup
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##net_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##sec_path
s##xt_table
s##inet_hashinfo
s##fib_notifier_ops
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##neighbour
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##nf_hook_entry
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##cgroup_namespace
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##uprobe
s##gs_cb
init_task extern s#task_struct init_task 

/* init/main.o */
e#system_states extern enum system_states { SYSTEM_BOOTING , SYSTEM_RUNNING , SYSTEM_HALT , SYSTEM_POWER_OFF , SYSTEM_RESTART , } 
system_state extern e#system_states system_state 
static_key_initialized extern t#bool static_key_initialized 
reset_devices extern unsigned int reset_devices 
loops_per_jiffy extern unsigned long loops_per_jiffy 

/* init/version.o */
s##user_namespace
s##ucounts
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##sock
s##seq_file
s##bio_vec
s##pipe_inode_info
s##poll_table_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##cred
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##mem_cgroup
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##device
s##kmem_cache
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##ipc_namespace
s##mnt_namespace
s##net
s##cgroup_namespace
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
init_uts_ns extern s#uts_namespace init_uts_ns 

/* kernel/async.o */
t#async_cookie_t typedef t#u64 async_cookie_t 
t#async_func_t typedef void ( * async_func_t ) ( void * , t#async_cookie_t ) 
async_schedule extern t#async_cookie_t async_schedule ( t#async_func_t , void * ) 
async_schedule_domain extern t#async_cookie_t async_schedule_domain ( t#async_func_t , void * , s#async_domain * ) 
async_synchronize_full extern void async_synchronize_full ( void ) 
async_unregister_domain void async_unregister_domain ( s#async_domain * ) 
async_synchronize_full_domain extern void async_synchronize_full_domain ( s#async_domain * ) 
async_synchronize_cookie_domain extern void async_synchronize_cookie_domain ( t#async_cookie_t , s#async_domain * ) 
async_synchronize_cookie extern void async_synchronize_cookie ( t#async_cookie_t ) 
current_is_async extern t#bool current_is_async ( void ) 

/* kernel/audit.o */
audit_enabled extern t#u32 audit_enabled 
s##audit_buffer
audit_log_task_context extern int audit_log_task_context ( s#audit_buffer * ) 
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##module
s##device_private
s##kmem_cache
s##fs_pin
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##proc_dir_entry
s##uevent_sock
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##xt_table
s##inet_hashinfo
s##fib_notifier_ops
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##lwtunnel_state
s##rtable
s##dn_route
s##workqueue_struct
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##nf_hook_entry
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##netns_ipvs
s##mpls_route
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##l3mdev_ops
s##ndisc_ops
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
s##sec_path
s##request_sock_ops
s##timewait_sock_ops
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##sock_reuseport
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##serial_icounter_struct
s##tty_audit_buf
e#audit_state enum audit_state { AUDIT_DISABLED , AUDIT_BUILD_CONTEXT , AUDIT_RECORD_CONTEXT } 
s#filename struct filename { const char * name ; const char * uptr ; s#audit_names * aname ; int refcnt ; const char iname [ ] ; } 
s#audit_cap_data struct audit_cap_data { t#kernel_cap_t permitted ; t#kernel_cap_t inheritable ; union { unsigned int fE ; t#kernel_cap_t effective ; } ; } 
s#audit_names struct audit_names { s#list_head list ; s#filename * name ; int name_len ; t#bool hidden ; unsigned long ino ; t#dev_t dev ; t#umode_t mode ; t#kuid_t uid ; t#kgid_t gid ; t#dev_t rdev ; t#u32 osid ; s#audit_cap_data fcap ; unsigned int fcap_ver ; unsigned char type ; t#bool should_free ; } 
s##audit_aux_data
s##audit_tree_refs
t#__kernel_mqd_t typedef int __kernel_mqd_t 
t#mqd_t typedef t#__kernel_mqd_t mqd_t 
s#mq_attr struct mq_attr { t#__kernel_long_t mq_flags ; t#__kernel_long_t mq_maxmsg ; t#__kernel_long_t mq_msgsize ; t#__kernel_long_t mq_curmsgs ; t#__kernel_long_t __reserved [ 4 ] ; } 
s#audit_proctitle struct audit_proctitle { int len ; char * value ; } 
s#audit_context struct audit_context { int dummy ; int in_syscall ; e#audit_state state , current_state ; unsigned int serial ; int major ; s#timespec ctime ; unsigned long argv [ 4 ] ; long return_code ; t#u64 prio ; int return_valid ; s#audit_names preallocated_names [ 5 ] ; int name_count ; s#list_head names_list ; char * filterkey ; s#path pwd ; s#audit_aux_data * aux ; s#audit_aux_data * aux_pids ; s#__kernel_sockaddr_storage * sockaddr ; t#size_t sockaddr_len ; t#pid_t pid , ppid ; t#kuid_t uid , euid , suid , fsuid ; t#kgid_t gid , egid , sgid , fsgid ; unsigned long personality ; int arch ; t#pid_t target_pid ; t#kuid_t target_auid ; t#kuid_t target_uid ; unsigned int target_sessionid ; t#u32 target_sid ; char target_comm [ 16 ] ; s#audit_tree_refs * trees , * first_trees ; s#list_head killed_trees ; int tree_count ; int type ; union { struct { int nargs ; long args [ 6 ] ; } socketcall ; struct { t#kuid_t uid ; t#kgid_t gid ; t#umode_t mode ; t#u32 osid ; int has_perm ; t#uid_t perm_uid ; t#gid_t perm_gid ; t#umode_t perm_mode ; unsigned long qbytes ; } ipc ; struct { t#mqd_t mqdes ; s#mq_attr mqstat ; } mq_getsetattr ; struct { t#mqd_t mqdes ; int sigev_signo ; } mq_notify ; struct { t#mqd_t mqdes ; t#size_t msg_len ; unsigned int msg_prio ; s#timespec abs_timeout ; } mq_sendrecv ; struct { int oflag ; t#umode_t mode ; s#mq_attr attr ; } mq_open ; struct { t#pid_t pid ; s#audit_cap_data cap ; } capset ; struct { int fd ; int flags ; } mmap ; struct { int argc ; } execve ; struct { char * name ; } module ; } ; int fds [ 2 ] ; s#audit_proctitle proctitle ; } 
s##seccomp_filter
s##rt_mutex_waiter
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##ring_buffer
s##static_key_mod
s##trace_array
s##tracer
s##trace_buffer
s##ring_buffer_iter
s##event_filter
s##ftrace_hash
s##numa_group
s##task_delay_info
s##uprobe
s##gs_cb
audit_log_task_info extern void audit_log_task_info ( s#audit_buffer * , s#task_struct * ) 
audit_log_secctx extern void audit_log_secctx ( s#audit_buffer * , t#u32 ) 
audit_log_start extern s#audit_buffer * audit_log_start ( s#audit_context * , t#gfp_t , int ) 
audit_log_end extern void audit_log_end ( s#audit_buffer * ) 
audit_log_format extern __attribute__ ( ( format ( printf , 2 , 3 ) ) ) void audit_log_format ( s#audit_buffer * , const char * , ... ) 
audit_log extern __attribute__ ( ( format ( printf , 4 , 5 ) ) ) void audit_log ( s#audit_context * , t#gfp_t , int , const char * , ... ) 

/* kernel/auditsc.o */
s##posix_acl
s##module
s##writeback_control
s##kstatfs
s##bio_vec
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##kmem_cache
s##fs_pin
s##nameidata
s##sem_undo_list
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##device_private
s##sock
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##proc_dir_entry
s##serial_icounter_struct
s##tty_audit_buf
s##audit_aux_data
s##audit_tree_refs
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##robust_list_head
s##futex_pi_state
s##ring_buffer
s##bpf_prog
s##static_key_mod
s##trace_array
s##tracer
s##trace_buffer
s##ring_buffer_iter
s##event_filter
s##ftrace_hash
s##numa_group
s##task_delay_info
s##uprobe
s##gs_cb
s##swap_info_struct
s##nlm_lockowner
s##nfs4_lock_state
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##fscrypt_info
__audit_inode_child extern void __audit_inode_child ( s#inode * , const s#dentry * , const unsigned char ) 

/* kernel/bpf/cgroup.o */
s##static_key_mod
s#static_key_false struct static_key_false { s#static_key key ; } 
cgroup_bpf_enabled_key extern s#static_key_false cgroup_bpf_enabled_key 
s##posix_acl
s##vfsmount
s##module
s##device_private
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##sec_path
s##workqueue_struct
s##udp_tunnel_info
s##btf
s##bpf_verifier_env
s##xdp_umem
s##switchdev_ops
s##l3mdev_ops
s##ndisc_ops
s##xfrm_state
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##kmem_cache
s##xt_table
s##inet_hashinfo
s##fib_notifier_ops
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##lwtunnel_state
s##rtable
s##dn_route
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##bpf_cgroup_storage_map
s##cgroup_taskset
s##eventfd_ctx
s##mempolicy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##kernfs_open_node
s##kernfs_iattrs
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##request_sock_ops
s##timewait_sock_ops
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sock_reuseport
__cgroup_bpf_run_filter_skb int __cgroup_bpf_run_filter_skb ( s#sock * , s#sk_buff * , e#bpf_attach_type ) 
__cgroup_bpf_run_filter_sk int __cgroup_bpf_run_filter_sk ( s#sock * , e#bpf_attach_type ) 
__cgroup_bpf_run_filter_sock_addr int __cgroup_bpf_run_filter_sock_addr ( s#sock * , s#sockaddr * , e#bpf_attach_type , void * ) 
s#bpf_sock_ops_kern struct bpf_sock_ops_kern { s#sock * sk ; t#u32 op ; union { t#u32 args [ 4 ] ; t#u32 reply ; t#u32 replylong [ 4 ] ; } ; t#u32 is_fullsock ; t#u64 temp ; } 
__cgroup_bpf_run_filter_sock_ops int __cgroup_bpf_run_filter_sock_ops ( s#sock * , s#bpf_sock_ops_kern * , e#bpf_attach_type ) 
__cgroup_bpf_check_dev_permission int __cgroup_bpf_check_dev_permission ( short , t#u32 , t#u32 , short , e#bpf_attach_type ) 

/* kernel/bpf/core.o */
s##vfsmount
s##posix_acl
s##sock
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pollfd
s##kmem_cache
s##fs_pin
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##sec_path
s##neigh_parms
s##neighbour
s##udp_tunnel_info
s##bpf_verifier_env
s##xdp_umem
s##switchdev_ops
s##l3mdev_ops
s##ndisc_ops
s##xfrm_state
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##writeback_control
s##bio_vec
s##swap_info_struct
s##mem_cgroup
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##phy_device
s##sfp_bus
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##xt_table
s##inet_hashinfo
s##fib_notifier_ops
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##workqueue_struct
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##bpf_cgroup_storage_map
s##cgroup_taskset
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##robust_list_head
s##futex_pi_state
s##ring_buffer
s##trace_event_call
s##event_filter
s##ftrace_hash
s##mempolicy
s##numa_group
s##task_delay_info
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_enum_map
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##btf
bpf_prog_alloc s#bpf_prog * bpf_prog_alloc ( unsigned int , t#gfp_t ) 
__bpf_call_base t#u64 __bpf_call_base ( t#u64 , t#u64 , t#u64 , t#u64 , t#u64 ) 
bpf_prog_select_runtime s#bpf_prog * bpf_prog_select_runtime ( s#bpf_prog * , int * ) 
bpf_prog_free void bpf_prog_free ( s#bpf_prog * ) 
t#bpf_ctx_copy_t typedef unsigned long ( * bpf_ctx_copy_t ) ( void * , const void * , unsigned long , unsigned long ) 
bpf_event_output t#u64 bpf_event_output ( s#bpf_map * , t#u64 , void * , t#u64 , void * , t#u64 , t#bpf_ctx_copy_t ) 
__tracepoint_xdp_exception extern s#tracepoint __tracepoint_xdp_exception 

/* kernel/bpf/inode.o */
s##posix_acl
s##module
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##sock
s##uevent_sock
s##sec_path
s##neigh_parms
s##neighbour
s##udp_tunnel_info
s##bpf_verifier_env
s##xdp_umem
s##switchdev_ops
s##l3mdev_ops
s##ndisc_ops
s##xfrm_state
s##tls_crypto_info
s##tls_context
s##kernfs_open_node
s##kernfs_iattrs
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##phy_device
s##sfp_bus
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##kmem_cache
s##xt_table
s##inet_hashinfo
s##fib_notifier_ops
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##workqueue_struct
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##bpf_cgroup_storage_map
s##cgroup_taskset
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##btf
bpf_prog_get_type_path s#bpf_prog * bpf_prog_get_type_path ( const char * , e#bpf_prog_type ) 

/* kernel/bpf/offload.o */
s##vfsmount
s##posix_acl
s##module
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##pid_namespace
s##proc_dir_entry
s##sock
s##uevent_sock
s##sec_path
s##neigh_parms
s##neighbour
s##udp_tunnel_info
e#bpf_return_type enum bpf_return_type { RET_INTEGER , RET_VOID , RET_PTR_TO_MAP_VALUE , RET_PTR_TO_MAP_VALUE_OR_NULL , } 
e#bpf_arg_type enum bpf_arg_type { ARG_DONTCARE = 0 , ARG_CONST_MAP_PTR , ARG_PTR_TO_MAP_KEY , ARG_PTR_TO_MAP_VALUE , ARG_PTR_TO_MEM , ARG_PTR_TO_MEM_OR_NULL , ARG_PTR_TO_UNINIT_MEM , ARG_CONST_SIZE , ARG_CONST_SIZE_OR_ZERO , ARG_PTR_TO_CTX , ARG_ANYTHING , } 
s#bpf_func_proto struct bpf_func_proto { t#u64 ( * func ) ( t#u64 , t#u64 , t#u64 , t#u64 , t#u64 ) ; t#bool gpl_only ; t#bool pkt_access ; e#bpf_return_type ret_type ; e#bpf_arg_type arg1_type ; e#bpf_arg_type arg2_type ; e#bpf_arg_type arg3_type ; e#bpf_arg_type arg4_type ; e#bpf_arg_type arg5_type ; } 
e#bpf_func_id enum bpf_func_id { BPF_FUNC_unspec , BPF_FUNC_map_lookup_elem , BPF_FUNC_map_update_elem , BPF_FUNC_map_delete_elem , BPF_FUNC_probe_read , BPF_FUNC_ktime_get_ns , BPF_FUNC_trace_printk , BPF_FUNC_get_prandom_u32 , BPF_FUNC_get_smp_processor_id , BPF_FUNC_skb_store_bytes , BPF_FUNC_l3_csum_replace , BPF_FUNC_l4_csum_replace , BPF_FUNC_tail_call , BPF_FUNC_clone_redirect , BPF_FUNC_get_current_pid_tgid , BPF_FUNC_get_current_uid_gid , BPF_FUNC_get_current_comm , BPF_FUNC_get_cgroup_classid , BPF_FUNC_skb_vlan_push , BPF_FUNC_skb_vlan_pop , BPF_FUNC_skb_get_tunnel_key , BPF_FUNC_skb_set_tunnel_key , BPF_FUNC_perf_event_read , BPF_FUNC_redirect , BPF_FUNC_get_route_realm , BPF_FUNC_perf_event_output , BPF_FUNC_skb_load_bytes , BPF_FUNC_get_stackid , BPF_FUNC_csum_diff , BPF_FUNC_skb_get_tunnel_opt , BPF_FUNC_skb_set_tunnel_opt , BPF_FUNC_skb_change_proto , BPF_FUNC_skb_change_type , BPF_FUNC_skb_under_cgroup , BPF_FUNC_get_hash_recalc , BPF_FUNC_get_current_task , BPF_FUNC_probe_write_user , BPF_FUNC_current_task_under_cgroup , BPF_FUNC_skb_change_tail , BPF_FUNC_skb_pull_data , BPF_FUNC_csum_update , BPF_FUNC_set_hash_invalid , BPF_FUNC_get_numa_node_id , BPF_FUNC_skb_change_head , BPF_FUNC_xdp_adjust_head , BPF_FUNC_probe_read_str , BPF_FUNC_get_socket_cookie , BPF_FUNC_get_socket_uid , BPF_FUNC_set_hash , BPF_FUNC_setsockopt , BPF_FUNC_skb_adjust_room , BPF_FUNC_redirect_map , BPF_FUNC_sk_redirect_map , BPF_FUNC_sock_map_update , BPF_FUNC_xdp_adjust_meta , BPF_FUNC_perf_event_read_value , BPF_FUNC_perf_prog_read_value , BPF_FUNC_getsockopt , BPF_FUNC_sock_ops_cb_flags_set , BPF_FUNC_msg_redirect_map , BPF_FUNC_msg_apply_bytes , BPF_FUNC_msg_cork_bytes , BPF_FUNC_msg_pull_data , BPF_FUNC_bind , BPF_FUNC_xdp_adjust_tail , BPF_FUNC_skb_get_xfrm_state , BPF_FUNC_get_stack , BPF_FUNC_skb_load_bytes_relative , BPF_FUNC_sock_hash_update , BPF_FUNC_msg_redirect_hash , BPF_FUNC_sk_redirect_hash , BPF_FUNC_skb_cgroup_id , BPF_FUNC_get_current_cgroup_id , BPF_FUNC_get_local_storage , __BPF_FUNC_MAX_ID , } 
e#bpf_access_type enum bpf_access_type { BPF_READ = 1 , BPF_WRITE = 2 } 
e#bpf_reg_type enum bpf_reg_type { NOT_INIT = 0 , SCALAR_VALUE , PTR_TO_CTX , CONST_PTR_TO_MAP , PTR_TO_MAP_VALUE , PTR_TO_MAP_VALUE_OR_NULL , PTR_TO_STACK , PTR_TO_PACKET_META , PTR_TO_PACKET , PTR_TO_PACKET_END , } 
s#bpf_insn_access_aux struct bpf_insn_access_aux { e#bpf_reg_type reg_type ; int ctx_field_size ; } 
s#bpf_verifier_ops struct bpf_verifier_ops { const s#bpf_func_proto * ( * get_func_proto ) ( e#bpf_func_id , const s#bpf_prog * ) ; t#bool ( * is_valid_access ) ( int , int , e#bpf_access_type , const s#bpf_prog * , s#bpf_insn_access_aux * ) ; int ( * gen_prologue ) ( s#bpf_insn * , t#bool , const s#bpf_prog * ) ; int ( * gen_ld_abs ) ( const s#bpf_insn * , s#bpf_insn * ) ; t#u32 ( * convert_ctx_access ) ( e#bpf_access_type , const s#bpf_insn * , s#bpf_insn * , s#bpf_prog * , t#u32 * ) ; } 
s##bpf_verifier_stack_elem
s#tnum struct tnum { t#u64 value ; t#u64 mask ; } 
e#bpf_reg_liveness enum bpf_reg_liveness { REG_LIVE_NONE = 0 , REG_LIVE_READ , REG_LIVE_WRITTEN , } 
s#bpf_reg_state struct bpf_reg_state { e#bpf_reg_type type ; union { t#u16 range ; s#bpf_map * map_ptr ; unsigned long raw ; } ; t#s32 off ; t#u32 id ; s#tnum var_off ; t#s64 smin_value ; t#s64 smax_value ; t#u64 umin_value ; t#u64 umax_value ; s#bpf_reg_state * parent ; t#u32 frameno ; e#bpf_reg_liveness live ; } 
E#__MAX_BPF_REG ( 0 ) + 11 
s#bpf_stack_state struct bpf_stack_state { s#bpf_reg_state spilled_ptr ; t#u8 slot_type [ 8 ] ; } 
s#bpf_func_state struct bpf_func_state { s#bpf_reg_state regs [ E#__MAX_BPF_REG ] ; int callsite ; t#u32 frameno ; t#u32 subprogno ; int allocated_stack ; s#bpf_stack_state * stack ; } 
s#bpf_verifier_state struct bpf_verifier_state { s#bpf_func_state * frame [ 8 ] ; t#u32 curframe ; t#bool speculative ; } 
s#bpf_verifier_state_list struct bpf_verifier_state_list { s#bpf_verifier_state state ; s#bpf_verifier_state_list * next ; } 
s#bpf_insn_aux_data struct bpf_insn_aux_data { union { e#bpf_reg_type ptr_type ; unsigned long map_state ; t#s32 call_imm ; t#u32 alu_limit ; } ; int ctx_field_size ; int sanitize_stack_off ; t#bool seen ; t#u8 alu_state ; } 
s#bpf_verifier_log struct bpf_verifier_log { t#u32 level ; char kbuf [ 1024 ] ; char * ubuf ; t#u32 len_used ; t#u32 len_total ; } 
s#bpf_subprog_info struct bpf_subprog_info { t#u32 start ; t#u16 stack_depth ; } 
s#bpf_verifier_env struct bpf_verifier_env { t#u32 insn_idx ; t#u32 prev_insn_idx ; s#bpf_prog * prog ; const s#bpf_verifier_ops * ops ; s#bpf_verifier_stack_elem * head ; int stack_size ; t#bool strict_alignment ; s#bpf_verifier_state * cur_state ; s#bpf_verifier_state_list * * explored_states ; s#bpf_map * used_maps [ 64 ] ; t#u32 used_map_cnt ; t#u32 id_gen ; t#bool allow_ptr_leaks ; t#bool seen_direct_write ; s#bpf_insn_aux_data * insn_aux_data ; s#bpf_verifier_log log ; s#bpf_subprog_info subprog_info [ 256 + 1 ] ; t#u32 subprog_cnt ; } 
s##xdp_umem
s##switchdev_ops
s##l3mdev_ops
s##ndisc_ops
s##xfrm_state
s##tls_crypto_info
s##tls_context
s##kernfs_open_node
s##kernfs_iattrs
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##phy_device
s##sfp_bus
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##kmem_cache
s##xt_table
s##inet_hashinfo
s##fib_notifier_ops
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##workqueue_struct
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##bpf_cgroup_storage_map
s##cgroup_taskset
s##key_user
s##key_type
s##assoc_array_ptr
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##btf
bpf_offload_dev_match t#bool bpf_offload_dev_match ( s#bpf_prog * , s#net_device * ) 
s##bpf_offload_dev
bpf_offload_dev_netdev_register int bpf_offload_dev_netdev_register ( s#bpf_offload_dev * , s#net_device * ) 
bpf_offload_dev_netdev_unregister void bpf_offload_dev_netdev_unregister ( s#bpf_offload_dev * , s#net_device * ) 
bpf_offload_dev_create s#bpf_offload_dev * bpf_offload_dev_create ( void ) 
bpf_offload_dev_destroy void bpf_offload_dev_destroy ( s#bpf_offload_dev * ) 

/* kernel/bpf/syscall.o */
s##vfsmount
s##posix_acl
s##module
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##mmu_notifier_mm
s##xol_area
s##kmem_cache
s##fs_pin
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##sock
s##uevent_sock
s##sec_path
s##neigh_parms
s##neighbour
s##udp_tunnel_info
s##bpf_verifier_env
s##xdp_umem
s##switchdev_ops
s##l3mdev_ops
s##ndisc_ops
s##xfrm_state
s##tls_crypto_info
s##tls_context
s##kernfs_open_node
s##kernfs_iattrs
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##phy_device
s##sfp_bus
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##xt_table
s##inet_hashinfo
s##fib_notifier_ops
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##workqueue_struct
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##bpf_cgroup_storage_map
s##cgroup_taskset
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##robust_list_head
s##futex_pi_state
s##ring_buffer
s##static_key_mod
s##trace_array
s##tracer
s##trace_buffer
s##ring_buffer_iter
s##event_filter
s##ftrace_hash
s##numa_group
s##task_delay_info
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##bdi_writeback
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##btf
bpf_map_put void bpf_map_put ( s#bpf_map * ) 
bpf_map_inc s#bpf_map * bpf_map_inc ( s#bpf_map * , t#bool ) 
bpf_prog_put void bpf_prog_put ( s#bpf_prog * ) 
bpf_prog_add s#bpf_prog * bpf_prog_add ( s#bpf_prog * , int ) 
bpf_prog_sub void bpf_prog_sub ( s#bpf_prog * , int ) 
bpf_prog_inc s#bpf_prog * bpf_prog_inc ( s#bpf_prog * ) 
bpf_prog_inc_not_zero s#bpf_prog * bpf_prog_inc_not_zero ( s#bpf_prog * ) 
bpf_prog_get_type_dev s#bpf_prog * bpf_prog_get_type_dev ( t#u32 , e#bpf_prog_type , t#bool ) 

/* kernel/bpf/tnum.o */
tnum_strn int tnum_strn ( char * , t#size_t , s#tnum ) 

/* kernel/bpf/verifier.o */
s##vfsmount
s##posix_acl
s##module
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##kmem_cache
s##fs_pin
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##sock
s##uevent_sock
s##sec_path
s##neigh_parms
s##neighbour
s##udp_tunnel_info
s##xdp_umem
s##switchdev_ops
s##l3mdev_ops
s##ndisc_ops
s##xfrm_state
s##tls_crypto_info
s##tls_context
s##kernfs_open_node
s##kernfs_iattrs
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##phy_device
s##sfp_bus
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##xt_table
s##inet_hashinfo
s##fib_notifier_ops
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##workqueue_struct
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##bpf_cgroup_storage_map
s##cgroup_taskset
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##robust_list_head
s##futex_pi_state
s##ring_buffer
s##trace_event_call
s##event_filter
s##ftrace_hash
s##numa_group
s##task_delay_info
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##btf
s##bpf_verifier_stack_elem
bpf_verifier_log_write __attribute__ ( ( format ( printf , 2 , 3 ) ) ) void bpf_verifier_log_write ( s#bpf_verifier_env * , const char * , ... ) 

/* kernel/capability.o */
__cap_empty_set extern const t#kernel_cap_t __cap_empty_set 
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##module
s##writeback_control
s##kstatfs
s##iov_iter
s##kmem_cache
s##fs_pin
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##mem_cgroup
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##device_private
s##sock
s##kernfs_open_node
s##kernfs_iattrs
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##fwnode_handle
s##iommu_group
s##iommu_fwspec
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##compat_timespec
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##bpf_prog_array
s##cgroup_taskset
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##ring_buffer
s##bpf_prog
s##static_key_mod
s##trace_array
s##tracer
s##trace_buffer
s##ring_buffer_iter
s##event_filter
s##ftrace_hash
s##numa_group
s##task_delay_info
s##uprobe
s##gs_cb
has_capability extern t#bool has_capability ( s#task_struct * , int ) 
ns_capable extern t#bool ns_capable ( s#user_namespace * , int ) 
ns_capable_noaudit extern t#bool ns_capable_noaudit ( s#user_namespace * , int ) 
capable extern t#bool capable ( int ) 
file_ns_capable extern t#bool file_ns_capable ( const s#file * , s#user_namespace * , int ) 
capable_wrt_inode_uidgid extern t#bool capable_wrt_inode_uidgid ( const s#inode * , int ) 

/* kernel/cgroup/cgroup.o */
s##static_key_mod
s#static_key_true struct static_key_true { s#static_key key ; } 
cpuset_cgrp_subsys_enabled_key extern s#static_key_true cpuset_cgrp_subsys_enabled_key 
cpuset_cgrp_subsys_on_dfl_key extern s#static_key_true cpuset_cgrp_subsys_on_dfl_key 
cpu_cgrp_subsys_enabled_key extern s#static_key_true cpu_cgrp_subsys_enabled_key 
cpu_cgrp_subsys_on_dfl_key extern s#static_key_true cpu_cgrp_subsys_on_dfl_key 
cpuacct_cgrp_subsys_enabled_key extern s#static_key_true cpuacct_cgrp_subsys_enabled_key 
cpuacct_cgrp_subsys_on_dfl_key extern s#static_key_true cpuacct_cgrp_subsys_on_dfl_key 
io_cgrp_subsys_enabled_key extern s#static_key_true io_cgrp_subsys_enabled_key 
io_cgrp_subsys_on_dfl_key extern s#static_key_true io_cgrp_subsys_on_dfl_key 
memory_cgrp_subsys_enabled_key extern s#static_key_true memory_cgrp_subsys_enabled_key 
memory_cgrp_subsys_on_dfl_key extern s#static_key_true memory_cgrp_subsys_on_dfl_key 
devices_cgrp_subsys_enabled_key extern s#static_key_true devices_cgrp_subsys_enabled_key 
devices_cgrp_subsys_on_dfl_key extern s#static_key_true devices_cgrp_subsys_on_dfl_key 
freezer_cgrp_subsys_enabled_key extern s#static_key_true freezer_cgrp_subsys_enabled_key 
freezer_cgrp_subsys_on_dfl_key extern s#static_key_true freezer_cgrp_subsys_on_dfl_key 
net_cls_cgrp_subsys_enabled_key extern s#static_key_true net_cls_cgrp_subsys_enabled_key 
net_cls_cgrp_subsys_on_dfl_key extern s#static_key_true net_cls_cgrp_subsys_on_dfl_key 
perf_event_cgrp_subsys_enabled_key extern s#static_key_true perf_event_cgrp_subsys_enabled_key 
perf_event_cgrp_subsys_on_dfl_key extern s#static_key_true perf_event_cgrp_subsys_on_dfl_key 
net_prio_cgrp_subsys_enabled_key extern s#static_key_true net_prio_cgrp_subsys_enabled_key 
net_prio_cgrp_subsys_on_dfl_key extern s#static_key_true net_prio_cgrp_subsys_on_dfl_key 
hugetlb_cgrp_subsys_enabled_key extern s#static_key_true hugetlb_cgrp_subsys_enabled_key 
hugetlb_cgrp_subsys_on_dfl_key extern s#static_key_true hugetlb_cgrp_subsys_on_dfl_key 
pids_cgrp_subsys_enabled_key extern s#static_key_true pids_cgrp_subsys_enabled_key 
pids_cgrp_subsys_on_dfl_key extern s#static_key_true pids_cgrp_subsys_on_dfl_key 
rdma_cgrp_subsys_enabled_key extern s#static_key_true rdma_cgrp_subsys_enabled_key 
rdma_cgrp_subsys_on_dfl_key extern s#static_key_true rdma_cgrp_subsys_on_dfl_key 
s##posix_acl
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##bpf_prog_array
s#cgroup_taskset struct cgroup_taskset { s#list_head src_csets ; s#list_head dst_csets ; int nr_tasks ; int ssid ; s#list_head * csets ; s#css_set * cur_cset ; s#task_struct * cur_task ; } 
s##eventfd_ctx
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##ipc_namespace
s##mnt_namespace
s##kmem_cache
s##fs_pin
s##proc_dir_entry
s##uevent_sock
s##sec_path
s##workqueue_struct
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##l3mdev_ops
s##ndisc_ops
s##xfrm_state
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##phy_device
s##sfp_bus
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##xt_table
s##inet_hashinfo
s##fib_notifier_ops
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##lwtunnel_state
s##rtable
s##dn_route
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##key_user
s##key_type
s##assoc_array_ptr
s##mmu_notifier_mm
s##xol_area
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##ring_buffer
s##trace_array
s##tracer
s##trace_buffer
s##ring_buffer_iter
s##event_filter
s##ftrace_hash
s##numa_group
s##task_delay_info
s##uprobe
s##gs_cb
s##swap_info_struct
s##request_sock_ops
s##timewait_sock_ops
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##mtd_info
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
cgrp_dfl_root extern s#cgroup_root cgrp_dfl_root 
of_css s#cgroup_subsys_state * of_css ( s#kernfs_open_file * ) 
cgroup_path_ns int cgroup_path_ns ( s#cgroup * , char * , t#size_t , s#cgroup_namespace * ) 
task_cgroup_path int task_cgroup_path ( s#task_struct * , char * , t#size_t ) 
cgroup_get_from_path s#cgroup * cgroup_get_from_path ( const char * ) 
cgroup_get_from_fd s#cgroup * cgroup_get_from_fd ( int ) 

/* kernel/cgroup/cgroup-v1.o */
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##module
s##writeback_control
s##kstatfs
s##iov_iter
s##poll_table_struct
s##kmem_cache
s##fs_pin
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##mem_cgroup
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##device
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##compat_timespec
s##pollfd
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s#task_delay_info struct task_delay_info { t#spinlock_t lock ; unsigned int flags ; t#u64 blkio_start ; t#u64 blkio_delay ; t#u64 swapin_delay ; t#u32 blkio_count ; t#u32 swapin_count ; t#u64 freepages_start ; t#u64 freepages_delay ; t#u32 freepages_count ; } 
s##ftrace_ret_stack
s##uprobe
s##gs_cb
cgroup_attach_task_all int cgroup_attach_task_all ( s#task_struct * , s#task_struct * ) 

/* kernel/cgroup/cpuset.o */
cpuset_mem_spread_node extern int cpuset_mem_spread_node ( void ) 

/* kernel/cgroup/namespace.o */
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##posix_acl
s##module
s##writeback_control
s##kstatfs
s##iov_iter
s##swap_info_struct
s##dev_pagemap
s##kmem_cache
s##mem_cgroup
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##key_user
s##key_type
s##assoc_array_ptr
s##bdi_writeback
s##poll_table_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##compat_timespec
s##pollfd
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
free_cgroup_ns void free_cgroup_ns ( s#cgroup_namespace * ) 

/* kernel/cgroup/rdma.o */
s##vfsmount
s##posix_acl
s##module
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##mmu_notifier_mm
s##xol_area
s##compat_timespec
s##pollfd
s##pid_namespace
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##mem_cgroup
s##uprobe
s##gs_cb
s##iov_iter
s##swap_info_struct
s##dev_pagemap
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
rdmacg_uncharge void rdmacg_uncharge ( s#rdma_cgroup * , s#rdmacg_device * , e#rdmacg_resource_type ) 
rdmacg_try_charge int rdmacg_try_charge ( s#rdma_cgroup * * , s#rdmacg_device * , e#rdmacg_resource_type ) 
rdmacg_register_device int rdmacg_register_device ( s#rdmacg_device * ) 
rdmacg_unregister_device void rdmacg_unregister_device ( s#rdmacg_device * ) 

/* kernel/compat.o */
compat_get_timeval extern int compat_get_timeval ( s#timeval * , const void * ) 
compat_put_timeval extern int compat_put_timeval ( const s#timeval * , void * ) 
compat_get_timespec extern int compat_get_timespec ( s#timespec * , const void * ) 
compat_put_timespec extern int compat_put_timespec ( const s#timespec * , void * ) 
t#compat_sigset_word typedef t#u32 compat_sigset_word 
t#compat_sigset_t typedef struct { t#compat_sigset_word sig [ ( 64 / 32 ) ] ; } compat_sigset_t 
sigset_from_compat extern void sigset_from_compat ( t#sigset_t * , const t#compat_sigset_t * ) 
compat_alloc_user_space extern void * compat_alloc_user_space ( unsigned long ) 

/* kernel/cpu.o */
cpuhp_tasks_frozen extern t#bool cpuhp_tasks_frozen 
cpus_read_lock extern void cpus_read_lock ( void ) 
cpus_read_unlock extern void cpus_read_unlock ( void ) 
cpu_hotplug_disable extern void cpu_hotplug_disable ( void ) 
cpu_hotplug_enable extern void cpu_hotplug_enable ( void ) 
cpu_down int cpu_down ( unsigned int ) 
cpu_up int cpu_up ( unsigned int ) 
E#CPUHP_BP_PREPARE_DYN ( 0 ) + 64 
E#CPUHP_AP_ONLINE_DYN ( E#CPUHP_BP_PREPARE_DYN + 20 ) + 75 
e#cpuhp_state enum cpuhp_state { CPUHP_INVALID = - 1 , CPUHP_OFFLINE = 0 , CPUHP_CREATE_THREADS , CPUHP_PERF_PREPARE , CPUHP_PERF_X86_PREPARE , CPUHP_PERF_X86_AMD_UNCORE_PREP , CPUHP_PERF_BFIN , CPUHP_PERF_POWER , CPUHP_PERF_SUPERH , CPUHP_X86_HPET_DEAD , CPUHP_X86_APB_DEAD , CPUHP_X86_MCE_DEAD , CPUHP_VIRT_NET_DEAD , CPUHP_SLUB_DEAD , CPUHP_MM_WRITEBACK_DEAD , CPUHP_MM_VMSTAT_DEAD , CPUHP_SOFTIRQ_DEAD , CPUHP_NET_MVNETA_DEAD , CPUHP_CPUIDLE_DEAD , CPUHP_ARM64_FPSIMD_DEAD , CPUHP_ARM_OMAP_WAKE_DEAD , CPUHP_IRQ_POLL_DEAD , CPUHP_BLOCK_SOFTIRQ_DEAD , CPUHP_ACPI_CPUDRV_DEAD , CPUHP_S390_PFAULT_DEAD , CPUHP_BLK_MQ_DEAD , CPUHP_FS_BUFF_DEAD , CPUHP_PRINTK_DEAD , CPUHP_MM_MEMCQ_DEAD , CPUHP_PERCPU_CNT_DEAD , CPUHP_RADIX_DEAD , CPUHP_PAGE_ALLOC_DEAD , CPUHP_NET_DEV_DEAD , CPUHP_PCI_XGENE_DEAD , CPUHP_IOMMU_INTEL_DEAD , CPUHP_LUSTRE_CFS_DEAD , CPUHP_WORKQUEUE_PREP , CPUHP_POWER_NUMA_PREPARE , CPUHP_HRTIMERS_PREPARE , CPUHP_PROFILE_PREPARE , CPUHP_X2APIC_PREPARE , CPUHP_SMPCFD_PREPARE , CPUHP_RELAY_PREPARE , CPUHP_SLAB_PREPARE , CPUHP_MD_RAID5_PREPARE , CPUHP_RCUTREE_PREP , CPUHP_CPUIDLE_COUPLED_PREPARE , CPUHP_POWERPC_PMAC_PREPARE , CPUHP_POWERPC_MMU_CTX_PREPARE , CPUHP_XEN_PREPARE , CPUHP_XEN_EVTCHN_PREPARE , CPUHP_ARM_SHMOBILE_SCU_PREPARE , CPUHP_SH_SH3X_PREPARE , CPUHP_NET_FLOW_PREPARE , CPUHP_TOPOLOGY_PREPARE , CPUHP_NET_IUCV_PREPARE , CPUHP_ARM_BL_PREPARE , CPUHP_TRACE_RB_PREPARE , CPUHP_MM_ZS_PREPARE , CPUHP_MM_ZSWP_MEM_PREPARE , CPUHP_MM_ZSWP_POOL_PREPARE , CPUHP_KVM_PPC_BOOK3S_PREPARE , CPUHP_ZCOMP_PREPARE , CPUHP_TIMERS_DEAD , CPUHP_MIPS_SOC_PREPARE , CPUHP_BP_PREPARE_DYN , CPUHP_BP_PREPARE_DYN_END = E#CPUHP_BP_PREPARE_DYN + 20 , CPUHP_BRINGUP_CPU , CPUHP_AP_IDLE_DEAD , CPUHP_AP_OFFLINE , CPUHP_AP_SCHED_STARTING , CPUHP_AP_RCUTREE_DYING , CPUHP_AP_IRQ_GIC_STARTING , CPUHP_AP_IRQ_HIP04_STARTING , CPUHP_AP_IRQ_ARMADA_XP_STARTING , CPUHP_AP_IRQ_BCM2836_STARTING , CPUHP_AP_ARM_MVEBU_COHERENCY , CPUHP_AP_PERF_X86_AMD_UNCORE_STARTING , CPUHP_AP_PERF_X86_STARTING , CPUHP_AP_PERF_X86_AMD_IBS_STARTING , CPUHP_AP_PERF_X86_CQM_STARTING , CPUHP_AP_PERF_X86_CSTATE_STARTING , CPUHP_AP_PERF_XTENSA_STARTING , CPUHP_AP_PERF_METAG_STARTING , CPUHP_AP_MIPS_OP_LOONGSON3_STARTING , CPUHP_AP_ARM_SDEI_STARTING , CPUHP_AP_ARM_VFP_STARTING , CPUHP_AP_ARM64_DEBUG_MONITORS_STARTING , CPUHP_AP_PERF_ARM_HW_BREAKPOINT_STARTING , CPUHP_AP_PERF_ARM_ACPI_STARTING , CPUHP_AP_PERF_ARM_STARTING , CPUHP_AP_ARM_L2X0_STARTING , CPUHP_AP_ARM_ARCH_TIMER_STARTING , CPUHP_AP_ARM_GLOBAL_TIMER_STARTING , CPUHP_AP_JCORE_TIMER_STARTING , CPUHP_AP_EXYNOS4_MCT_TIMER_STARTING , CPUHP_AP_ARM_TWD_STARTING , CPUHP_AP_METAG_TIMER_STARTING , CPUHP_AP_QCOM_TIMER_STARTING , CPUHP_AP_ARMADA_TIMER_STARTING , CPUHP_AP_MARCO_TIMER_STARTING , CPUHP_AP_MIPS_GIC_TIMER_STARTING , CPUHP_AP_ARC_TIMER_STARTING , CPUHP_AP_KVM_STARTING , CPUHP_AP_KVM_ARM_VGIC_INIT_STARTING , CPUHP_AP_KVM_ARM_VGIC_STARTING , CPUHP_AP_KVM_ARM_TIMER_STARTING , CPUHP_AP_DUMMY_TIMER_STARTING , CPUHP_AP_ARM_XEN_STARTING , CPUHP_AP_ARM_CORESIGHT_STARTING , CPUHP_AP_ARM64_ISNDEP_STARTING , CPUHP_AP_SMPCFD_DYING , CPUHP_AP_X86_TBOOT_DYING , CPUHP_AP_ONLINE , CPUHP_TEARDOWN_CPU , CPUHP_AP_ONLINE_IDLE , CPUHP_AP_SMPBOOT_THREADS , CPUHP_AP_X86_VDSO_VMA_ONLINE , CPUHP_AP_PERF_ONLINE , CPUHP_AP_PERF_X86_ONLINE , CPUHP_AP_PERF_X86_UNCORE_ONLINE , CPUHP_AP_PERF_X86_AMD_UNCORE_ONLINE , CPUHP_AP_PERF_X86_AMD_POWER_ONLINE , CPUHP_AP_PERF_X86_RAPL_ONLINE , CPUHP_AP_PERF_X86_CQM_ONLINE , CPUHP_AP_PERF_X86_CSTATE_ONLINE , CPUHP_AP_PERF_S390_CF_ONLINE , CPUHP_AP_PERF_S390_SF_ONLINE , CPUHP_AP_PERF_ARM_CCI_ONLINE , CPUHP_AP_PERF_ARM_CCN_ONLINE , CPUHP_AP_PERF_ARM_HISI_DDRC_ONLINE , CPUHP_AP_PERF_ARM_HISI_HHA_ONLINE , CPUHP_AP_PERF_ARM_HISI_L3_ONLINE , CPUHP_AP_PERF_ARM_L2X0_ONLINE , CPUHP_AP_PERF_ARM_QCOM_L2_ONLINE , CPUHP_AP_PERF_ARM_QCOM_L3_ONLINE , CPUHP_AP_PERF_POWERPC_NEST_IMC_ONLINE , CPUHP_AP_PERF_POWERPC_CORE_IMC_ONLINE , CPUHP_AP_PERF_POWERPC_THREAD_IMC_ONLINE , CPUHP_AP_WORKQUEUE_ONLINE , CPUHP_AP_RCUTREE_ONLINE , CPUHP_AP_ONLINE_DYN , CPUHP_AP_ONLINE_DYN_END = E#CPUHP_AP_ONLINE_DYN + 30 , CPUHP_AP_X86_HPET_ONLINE , CPUHP_AP_X86_KVM_CLK_ONLINE , CPUHP_AP_ACTIVE , CPUHP_ONLINE , } 
__cpuhp_state_add_instance int __cpuhp_state_add_instance ( e#cpuhp_state , s#hlist_node * , t#bool ) 
__cpuhp_setup_state int __cpuhp_setup_state ( e#cpuhp_state , const char * , t#bool , int ( * ) ( unsigned int ) , int ( * ) ( unsigned int ) , t#bool ) 
__cpuhp_state_remove_instance int __cpuhp_state_remove_instance ( e#cpuhp_state , s#hlist_node * , t#bool ) 
__cpuhp_remove_state void __cpuhp_remove_state ( e#cpuhp_state , t#bool ) 
cpu_bit_bitmap extern const unsigned long cpu_bit_bitmap [ 64 + 1 ] [ ( ( ( 256 ) + ( 8 * sizeof ( long ) ) - 1 ) / ( 8 * sizeof ( long ) ) ) ] 
cpu_all_bits extern const unsigned long cpu_all_bits [ ( ( ( 256 ) + ( 8 * sizeof ( long ) ) - 1 ) / ( 8 * sizeof ( long ) ) ) ] 
__cpu_possible_mask extern s#cpumask __cpu_possible_mask 
__cpu_online_mask extern s#cpumask __cpu_online_mask 
__cpu_present_mask extern s#cpumask __cpu_present_mask 
__cpu_active_mask extern s#cpumask __cpu_active_mask 

/* kernel/crash_core.o */
paddr_vmcoreinfo_note t#phys_addr_t paddr_vmcoreinfo_note ( void ) 

/* kernel/crash_dump.o */
elfcorehdr_addr extern unsigned long long elfcorehdr_addr 

/* kernel/cred.o */
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##sock
s##bio_vec
s##poll_table_struct
s##kmem_cache
s##fs_pin
s##proc_ns_operations
s##nlm_lockowner
s##nfs4_lock_state
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##mem_cgroup
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##mempolicy
s##userfaultfd_ctx
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##net_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##sec_path
s##xt_table
s##inet_hashinfo
s##fib_notifier_ops
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##neighbour
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##nf_hook_entry
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##cgroup_namespace
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##uprobe
s##gs_cb
s##key_user
s##key_type
s##assoc_array_ptr
__put_cred extern void __put_cred ( s#cred * ) 
prepare_creds extern s#cred * prepare_creds ( void ) 
commit_creds extern int commit_creds ( s#cred * ) 
abort_creds extern void abort_creds ( s#cred * ) 
override_creds extern const s#cred * override_creds ( const s#cred * ) 
revert_creds extern void revert_creds ( const s#cred * ) 
prepare_kernel_cred extern s#cred * prepare_kernel_cred ( s#task_struct * ) 
set_security_override extern int set_security_override ( s#cred * , t#u32 ) 
set_security_override_from_ctx extern int set_security_override_from_ctx ( s#cred * , const char * ) 
set_create_files_as extern int set_create_files_as ( s#cred * , s#inode * ) 

/* kernel/delayacct.o */
delayacct_on extern int delayacct_on 

/* kernel/events/core.o */
s##sock
s##posix_acl
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##kmem_cache
s##fs_pin
s##proc_dir_entry
s##uevent_sock
s##sec_path
s##neigh_parms
s##neighbour
s##udp_tunnel_info
s##btf
s##key_user
s##key_type
s##assoc_array_ptr
s##bpf_verifier_env
s##xdp_umem
s##switchdev_ops
s##l3mdev_ops
s##ndisc_ops
s##xfrm_state
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##device_private
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##iommu_group
s##iommu_fwspec
s##phy_device
s##sfp_bus
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##xt_table
s##inet_hashinfo
s##fib_notifier_ops
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##workqueue_struct
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##bpf_cgroup_storage_map
s##cgroup_taskset
s##mmu_notifier_mm
s##xol_area
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##robust_list_head
s##futex_pi_state
s##numa_group
s##task_delay_info
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##bdi_writeback
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_array
s##tracer
s##trace_buffer
s##ring_buffer_iter
s##event_filter
s#perf_event_mmap_page struct perf_event_mmap_page { t#__u32 version ; t#__u32 compat_version ; t#__u32 lock ; t#__u32 index ; t#__s64 offset ; t#__u64 time_enabled ; t#__u64 time_running ; union { t#__u64 capabilities ; struct { t#__u64 cap_bit0 : 1 , cap_bit0_is_deprecated : 1 , cap_user_rdpmc : 1 , cap_user_time : 1 , cap_user_time_zero : 1 , cap_____res : 59 ; } ; } ; t#__u16 pmc_width ; t#__u16 time_shift ; t#__u32 time_mult ; t#__u64 time_offset ; t#__u64 time_zero ; t#__u32 size ; t#__u8 __reserved [ 118 * 8 + 4 ] ; t#__u64 data_head ; t#__u64 data_tail ; t#__u64 data_offset ; t#__u64 data_size ; t#__u64 aux_head ; t#__u64 aux_tail ; t#__u64 aux_offset ; t#__u64 aux_size ; } 
s#ring_buffer struct ring_buffer { t#atomic_t refcount ; s#callback_head callback_head ; int nr_pages ; int overwrite ; int paused ; t#atomic_t poll ; t#local_t head ; t#local_t nest ; t#local_t events ; t#local_t wakeup ; t#local_t lost ; long watermark ; long aux_watermark ; t#spinlock_t event_lock ; s#list_head event_list ; t#atomic_t mmap_count ; unsigned long mmap_locked ; s#user_struct * mmap_user ; t#local_t aux_head ; t#local_t aux_nest ; t#local_t aux_wakeup ; unsigned long aux_pgoff ; int aux_nr_pages ; int aux_overwrite ; t#atomic_t aux_mmap_count ; unsigned long aux_mmap_locked ; void ( * free_aux ) ( void * ) ; t#atomic_t aux_refcount ; void * * aux_pages ; void * aux_priv ; s#perf_event_mmap_page * user_page ; void * data_pages [ 0 ] ; } 
s##ftrace_hash
perf_event_disable extern void perf_event_disable ( s#perf_event * ) 
perf_event_enable extern void perf_event_enable ( s#perf_event * ) 
perf_event_addr_filters_sync extern void perf_event_addr_filters_sync ( s#perf_event * ) 
perf_event_refresh extern int perf_event_refresh ( s#perf_event * , int ) 
perf_event_release_kernel extern int perf_event_release_kernel ( s#perf_event * ) 
perf_event_read_value extern t#u64 perf_event_read_value ( s#perf_event * , t#u64 * , t#u64 * ) 
perf_event_update_userpage extern void perf_event_update_userpage ( s#perf_event * ) 
s#perf_guest_info_callbacks struct perf_guest_info_callbacks { int ( * is_in_guest ) ( void ) ; int ( * is_user_mode ) ( void ) ; unsigned long ( * get_guest_ip ) ( void ) ; } 
perf_register_guest_info_callbacks extern int perf_register_guest_info_callbacks ( s#perf_guest_info_callbacks * ) 
perf_unregister_guest_info_callbacks extern int perf_unregister_guest_info_callbacks ( s#perf_guest_info_callbacks * ) 
perf_swevent_get_recursion_context extern int perf_swevent_get_recursion_context ( void ) 
perf_trace_run_bpf_submit void perf_trace_run_bpf_submit ( void * , int , int , s#trace_event_call * , t#u64 , s#pt_regs * , s#hlist_head * , s#task_struct * ) 
perf_tp_event extern void perf_tp_event ( t#u16 , t#u64 , void * , int , s#pt_regs * , s#hlist_head * , int , s#task_struct * ) 
perf_pmu_register extern int perf_pmu_register ( s#pmu * , const char * , int ) 
perf_pmu_unregister extern void perf_pmu_unregister ( s#pmu * ) 
perf_event_create_kernel_counter extern s#perf_event * perf_event_create_kernel_counter ( s#perf_event_attr * , int , s#task_struct * , t#perf_overflow_handler_t , void * ) 
perf_pmu_migrate_context extern void perf_pmu_migrate_context ( s#pmu * , int , int ) 
perf_event_sysfs_show t#ssize_t perf_event_sysfs_show ( s#device * , s#device_attribute * , char * ) 

/* kernel/events/ring_buffer.o */
s##module
s##device_private
s##sock
s##vfsmount
s##posix_acl
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##mmu_notifier_mm
s##xol_area
s##compat_timespec
s##kmem_cache
s##fs_pin
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##bpf_prog_array
s##cgroup_taskset
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##uprobe
s##gs_cb
s##iov_iter
s##swap_info_struct
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##fwnode_handle
s##iommu_group
s##iommu_fwspec
s##bpf_prog
s##trace_event_call
s##event_filter
s##ftrace_hash
s#perf_output_handle struct perf_output_handle { s#perf_event * event ; s#ring_buffer * rb ; unsigned long wakeup ; unsigned long size ; t#u64 aux_flags ; union { void * addr ; unsigned long head ; } ; int page ; } 
perf_aux_output_flag extern void perf_aux_output_flag ( s#perf_output_handle * , t#u64 ) 
perf_aux_output_begin extern void * perf_aux_output_begin ( s#perf_output_handle * , s#perf_event * ) 
perf_aux_output_end extern void perf_aux_output_end ( s#perf_output_handle * , unsigned long ) 
perf_aux_output_skip extern int perf_aux_output_skip ( s#perf_output_handle * , unsigned long ) 
perf_get_aux extern void * perf_get_aux ( s#perf_output_handle * ) 

/* kernel/events/uprobes.o */
s##posix_acl
s##vfsmount
s##module
s##device_private
s##sock
s##iov_iter
s##poll_table_struct
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##compat_timespec
s##pollfd
s##kmem_cache
s##fs_pin
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##bpf_prog_array
s##cgroup_taskset
s##hd_struct
s##gendisk
s##request_queue
s##eventfd_ctx
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##workqueue_struct
s##blk_plug
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##xol_area
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##kernfs_open_node
s##kernfs_iattrs
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##fwnode_handle
s##iommu_group
s##iommu_fwspec
s##kstatfs
s##export_operations
s##fscrypt_operations
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
e#uprobe_filter_ctx enum uprobe_filter_ctx { UPROBE_FILTER_REGISTER , UPROBE_FILTER_UNREGISTER , UPROBE_FILTER_MMAP , } 
s#uprobe_consumer struct uprobe_consumer { int ( * handler ) ( s#uprobe_consumer * , s#pt_regs * ) ; int ( * ret_handler ) ( s#uprobe_consumer * , unsigned long , s#pt_regs * ) ; t#bool ( * filter ) ( s#uprobe_consumer * , e#uprobe_filter_ctx , s#mm_struct * ) ; s#uprobe_consumer * next ; } 
uprobe_unregister extern void uprobe_unregister ( s#inode * , t#loff_t , s#uprobe_consumer * ) 
uprobe_register extern int uprobe_register ( s#inode * , t#loff_t , s#uprobe_consumer * ) 
uprobe_register_refctr extern int uprobe_register_refctr ( s#inode * , t#loff_t , t#loff_t , s#uprobe_consumer * ) 

/* kernel/exit.o */
do_exit void do_exit ( long ) 
complete_and_exit void complete_and_exit ( s#completion * , long ) 

/* kernel/fork.o */
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##posix_acl
s##sock
s##pipe_inode_info
s##kmem_cache
s##fs_pin
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_array
s##tracer
s##trace_buffer
s##ring_buffer_iter
s##event_filter
s##bpf_prog_array
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##cgroup_taskset
s##ring_buffer
s##bpf_prog
s##ftrace_hash
s##workqueue_struct
s##kstatfs
s##eventfd_ctx
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_geometry
s##pr_ops
s##blk_mq_ctx
s##blkcg_gq
s##blk_mq_hw_ctx
s##blk_mq_alloc_data
s##blk_mq_debugfs_attr
s##blk_queue_stats
s##rq_wb
s##blk_mq_ops
s##blk_stat_callback
s##blk_trace
s##blk_flush_queue
s##bsg_job
s##throtl_data
s##blk_mq_tag_set
s##timer_rand_state
s##disk_events
s##badblocks
s##mtd_info
s##fsnotify_mark_connector
s##fscrypt_info
s##userfaultfd_ctx
s##kioctx_table
s##xol_area
s##nameidata
s##sem_undo_list
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##proc_dir_entry
s##serial_icounter_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s#robust_list struct robust_list { s#robust_list * next ; } 
s#robust_list_head struct robust_list_head { s#robust_list list ; long futex_offset ; s#robust_list * list_op_pending ; } 
s##futex_pi_state
s##numa_group
s##uprobe
s##gs_cb
free_task extern void free_task ( s#task_struct * ) 
__put_task_struct extern void __put_task_struct ( s#task_struct * ) 
__mmdrop extern void __mmdrop ( s#mm_struct * ) 
mmput extern void mmput ( s#mm_struct * ) 
get_mm_exe_file extern s#file * get_mm_exe_file ( s#mm_struct * ) 
get_task_exe_file extern s#file * get_task_exe_file ( s#task_struct * ) 
get_task_mm extern s#mm_struct * get_task_mm ( s#task_struct * ) 
mm_access extern s#mm_struct * mm_access ( s#task_struct * , unsigned int ) 

/* kernel/freezer.o */
system_freezing_cnt extern t#atomic_t system_freezing_cnt 
pm_freezing extern t#bool pm_freezing 
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##module
s##device_private
s##sock
s##iov_iter
s##kmem_cache
s##fs_pin
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##kernfs_open_node
s##kernfs_iattrs
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##fwnode_handle
s##iommu_group
s##iommu_fwspec
s##workqueue_struct
s##bpf_prog_array
s##cgroup_taskset
s##kstatfs
s##eventfd_ctx
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##compat_timespec
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_plug
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##ring_buffer
s##bpf_prog
s##static_key_mod
s##trace_array
s##tracer
s##trace_buffer
s##ring_buffer_iter
s##event_filter
s##ftrace_hash
s##numa_group
s##task_delay_info
s##uprobe
s##gs_cb
freezing_slow_path extern t#bool freezing_slow_path ( s#task_struct * ) 
__refrigerator extern t#bool __refrigerator ( t#bool ) 
set_freezable extern t#bool set_freezable ( void ) 

/* kernel/groups.o */
groups_alloc extern s#group_info * groups_alloc ( int ) 
groups_free extern void groups_free ( s#group_info * ) 
groups_sort extern void groups_sort ( s#group_info * ) 
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##module
s##writeback_control
s##kstatfs
s##iov_iter
s##kmem_cache
s##fs_pin
s##proc_ns_operations
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##mem_cgroup
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##device_private
s##sock
s##kernfs_open_node
s##kernfs_iattrs
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##fwnode_handle
s##iommu_group
s##iommu_fwspec
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##compat_timespec
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##bpf_prog_array
s##cgroup_taskset
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##ring_buffer
s##bpf_prog
s##static_key_mod
s##trace_array
s##tracer
s##trace_buffer
s##ring_buffer_iter
s##event_filter
s##ftrace_hash
s##numa_group
s##task_delay_info
s##uprobe
s##gs_cb
s##key_user
s##key_type
s##assoc_array_ptr
set_groups extern void set_groups ( s#cred * , s#group_info * ) 
set_current_groups extern int set_current_groups ( s#group_info * ) 
in_group_p extern int in_group_p ( t#kgid_t ) 
in_egroup_p extern int in_egroup_p ( t#kgid_t ) 

/* kernel/hung_task.o */
reset_hung_task_detector void reset_hung_task_detector ( void ) 

/* kernel/irq/chip.o */
s##device_private
s##sock
s##seq_file
s##vfsmount
s##posix_acl
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##iommu_group
s##iommu_fwspec
s##platform_msi_priv_data
s##proc_dir_entry
irq_set_chip extern int irq_set_chip ( unsigned int , s#irq_chip * ) 
irq_set_irq_type extern int irq_set_irq_type ( unsigned int , unsigned int ) 
irq_set_handler_data extern int irq_set_handler_data ( unsigned int , void * ) 
irq_set_chip_data extern int irq_set_chip_data ( unsigned int , void * ) 
irq_get_irq_data extern s#irq_data * irq_get_irq_data ( unsigned int ) 
handle_nested_irq extern void handle_nested_irq ( unsigned int ) 
handle_simple_irq extern void handle_simple_irq ( s#irq_desc * ) 
handle_untracked_irq extern void handle_untracked_irq ( s#irq_desc * ) 
handle_level_irq extern void handle_level_irq ( s#irq_desc * ) 
handle_fasteoi_irq extern void handle_fasteoi_irq ( s#irq_desc * ) 
handle_edge_irq extern void handle_edge_irq ( s#irq_desc * ) 
__irq_set_handler extern void __irq_set_handler ( unsigned int , t#irq_flow_handler_t , int , const char * ) 
irq_set_chained_handler_and_data void irq_set_chained_handler_and_data ( unsigned int , t#irq_flow_handler_t , void * ) 
irq_set_chip_and_handler_name extern void irq_set_chip_and_handler_name ( unsigned int , s#irq_chip * , t#irq_flow_handler_t , const char * ) 
irq_modify_status void irq_modify_status ( unsigned int , unsigned long , unsigned long ) 

/* kernel/irq/devres.o */
s##device_private
s##sock
s##seq_file
s##vfsmount
s##posix_acl
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
devm_request_threaded_irq extern int devm_request_threaded_irq ( s#device * , unsigned int , t#irq_handler_t , t#irq_handler_t , unsigned long , const char * , void * ) 
devm_request_any_context_irq extern int devm_request_any_context_irq ( s#device * , unsigned int , t#irq_handler_t , unsigned long , const char * , void * ) 
devm_free_irq extern void devm_free_irq ( s#device * , unsigned int , void * ) 
__devm_irq_alloc_descs int __devm_irq_alloc_descs ( s#device * , int , unsigned int , unsigned int , int , s#module * , const s#cpumask * ) 

/* kernel/irq/dummychip.o */
s##device_private
s##sock
s##seq_file
s##vfsmount
s##posix_acl
s##module
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##compat_timespec
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##iov_iter
s##swap_info_struct
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##platform_msi_priv_data
s##irq_domain
dummy_irq_chip extern s#irq_chip dummy_irq_chip 

/* kernel/irq/handle.o */
s##device_private
s##sock
s##seq_file
s##vfsmount
s##posix_acl
s##module
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##compat_timespec
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##iov_iter
s##swap_info_struct
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##platform_msi_priv_data
s##irq_domain
s##proc_dir_entry
handle_bad_irq extern void handle_bad_irq ( s#irq_desc * ) 
no_action extern t#irqreturn_t no_action ( int , void * ) 

/* kernel/irq/irqdesc.o */
nr_irqs extern int nr_irqs 
s##device_private
s##sock
s##seq_file
s##vfsmount
s##posix_acl
s##module
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##compat_timespec
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##iov_iter
s##swap_info_struct
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##iommu_group
s##iommu_fwspec
s##platform_msi_priv_data
s##proc_dir_entry
irq_to_desc extern s#irq_desc * irq_to_desc ( unsigned int ) 
generic_handle_irq int generic_handle_irq ( unsigned int ) 
irq_free_descs void irq_free_descs ( unsigned int , unsigned int ) 
__irq_alloc_descs int __irq_alloc_descs ( int , unsigned int , unsigned int , int , s#module * , const s#cpumask * ) 
irq_get_percpu_devid_partition extern int irq_get_percpu_devid_partition ( unsigned int , s#cpumask * ) 

/* kernel/irq/irqdomain.o */
irqchip_fwnode_ops extern const s#fwnode_operations irqchip_fwnode_ops 
__irq_domain_alloc_fwnode s#fwnode_handle * __irq_domain_alloc_fwnode ( unsigned int , int , const char * , void * ) 
irq_domain_free_fwnode void irq_domain_free_fwnode ( s#fwnode_handle * ) 
s##vfsmount
s##posix_acl
s##sock
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pollfd
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##pipe_inode_info
s##writeback_control
s##bio_vec
s##swap_info_struct
s##device_private
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##iommu_group
s##iommu_fwspec
s##kmem_cache
s##mem_cgroup
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##platform_msi_priv_data
s##proc_dir_entry
__irq_domain_add s#irq_domain * __irq_domain_add ( s#fwnode_handle * , int , t#irq_hw_number_t , int , const s#irq_domain_ops * , void * ) 
irq_domain_remove extern void irq_domain_remove ( s#irq_domain * ) 
irq_domain_add_simple s#irq_domain * irq_domain_add_simple ( s#device_node * , unsigned int , unsigned int , const s#irq_domain_ops * , void * ) 
irq_domain_add_legacy s#irq_domain * irq_domain_add_legacy ( s#device_node * , unsigned int , unsigned int , t#irq_hw_number_t , const s#irq_domain_ops * , void * ) 
irq_find_matching_fwspec extern s#irq_domain * irq_find_matching_fwspec ( s#irq_fwspec * , e#irq_domain_bus_token ) 
irq_domain_check_msi_remap extern t#bool irq_domain_check_msi_remap ( void ) 
irq_set_default_host extern void irq_set_default_host ( s#irq_domain * ) 
irq_domain_associate extern int irq_domain_associate ( s#irq_domain * , unsigned int , t#irq_hw_number_t ) 
irq_domain_associate_many extern void irq_domain_associate_many ( s#irq_domain * , unsigned int , t#irq_hw_number_t , int ) 
irq_create_direct_mapping extern unsigned int irq_create_direct_mapping ( s#irq_domain * ) 
irq_create_mapping extern unsigned int irq_create_mapping ( s#irq_domain * , t#irq_hw_number_t ) 
irq_create_strict_mappings extern int irq_create_strict_mappings ( s#irq_domain * , unsigned int , t#irq_hw_number_t , int ) 
irq_create_fwspec_mapping extern unsigned int irq_create_fwspec_mapping ( s#irq_fwspec * ) 
irq_create_of_mapping extern unsigned int irq_create_of_mapping ( s#of_phandle_args * ) 
irq_dispose_mapping extern void irq_dispose_mapping ( unsigned int ) 
irq_find_mapping extern unsigned int irq_find_mapping ( s#irq_domain * , t#irq_hw_number_t ) 
irq_domain_xlate_onecell int irq_domain_xlate_onecell ( s#irq_domain * , s#device_node * , const t#u32 * , unsigned int , t#irq_hw_number_t * , unsigned int * ) 
irq_domain_xlate_twocell int irq_domain_xlate_twocell ( s#irq_domain * , s#device_node * , const t#u32 * , unsigned int , t#irq_hw_number_t * , unsigned int * ) 
irq_domain_xlate_onetwocell int irq_domain_xlate_onetwocell ( s#irq_domain * , s#device_node * , const t#u32 * , unsigned int , t#irq_hw_number_t * , unsigned int * ) 
irq_domain_simple_ops extern const s#irq_domain_ops irq_domain_simple_ops 
irq_domain_get_irq_data extern s#irq_data * irq_domain_get_irq_data ( s#irq_domain * , unsigned int ) 

/* kernel/irq/manage.o */
synchronize_hardirq extern t#bool synchronize_hardirq ( unsigned int ) 
synchronize_irq extern void synchronize_irq ( unsigned int ) 
irq_set_affinity_hint extern int irq_set_affinity_hint ( unsigned int , const s#cpumask * ) 
irq_set_affinity_notifier extern int irq_set_affinity_notifier ( unsigned int , s#irq_affinity_notify * ) 
irq_set_vcpu_affinity extern int irq_set_vcpu_affinity ( unsigned int , void * ) 
disable_irq_nosync extern void disable_irq_nosync ( unsigned int ) 
disable_irq extern void disable_irq ( unsigned int ) 
disable_hardirq extern t#bool disable_hardirq ( unsigned int ) 
enable_irq extern void enable_irq ( unsigned int ) 
irq_set_irq_wake extern int irq_set_irq_wake ( unsigned int , unsigned int ) 
irq_wake_thread extern void irq_wake_thread ( unsigned int , void * ) 
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##sock
s##bio_vec
s##pipe_inode_info
s##poll_table_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##mem_cgroup
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##device_private
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kmem_cache
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##bpf_prog_array
s##cgroup_taskset
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##proc_dir_entry
setup_irq extern int setup_irq ( unsigned int , s#irqaction * ) 
remove_irq extern void remove_irq ( unsigned int , s#irqaction * ) 
free_irq extern const void * free_irq ( unsigned int , void * ) 
request_threaded_irq extern int request_threaded_irq ( unsigned int , t#irq_handler_t , t#irq_handler_t , unsigned long , const char * , void * ) 
request_any_context_irq extern int request_any_context_irq ( unsigned int , t#irq_handler_t , unsigned long , const char * , void * ) 
enable_percpu_irq extern void enable_percpu_irq ( unsigned int , unsigned int ) 
irq_percpu_is_enabled extern t#bool irq_percpu_is_enabled ( unsigned int ) 
disable_percpu_irq extern void disable_percpu_irq ( unsigned int ) 
free_percpu_irq extern void free_percpu_irq ( unsigned int , void * ) 
request_percpu_irq extern int request_percpu_irq ( unsigned int , t#irq_handler_t , const char * , void * ) 
irq_get_irqchip_state extern int irq_get_irqchip_state ( unsigned int , e#irqchip_irq_state , t#bool * ) 
irq_set_irqchip_state extern int irq_set_irqchip_state ( unsigned int , e#irqchip_irq_state , t#bool ) 

/* kernel/irq/msi.o */
s##device_private
s##sock
s##seq_file
s##vfsmount
s##posix_acl
s##module
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##compat_timespec
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##iov_iter
s##swap_info_struct
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##iommu_group
s##iommu_fwspec
suse_msi_set_irq_unmanaged int suse_msi_set_irq_unmanaged ( s#device * ) 
get_cached_msi_msg void get_cached_msi_msg ( unsigned int , s#msi_msg * ) 

/* kernel/irq/pm.o */
suspend_device_irqs extern void suspend_device_irqs ( void ) 
resume_device_irqs extern void resume_device_irqs ( void ) 

/* kernel/irq_work.o */
irq_work_queue_on t#bool irq_work_queue_on ( s#irq_work * , int ) 
irq_work_queue t#bool irq_work_queue ( s#irq_work * ) 
irq_work_run void irq_work_run ( void ) 
irq_work_sync void irq_work_sync ( s#irq_work * ) 

/* kernel/jump_label.o */
s##static_key_mod
static_key_count extern int static_key_count ( s#static_key * ) 
static_key_slow_inc extern void static_key_slow_inc ( s#static_key * ) 
static_key_enable_cpuslocked extern void static_key_enable_cpuslocked ( s#static_key * ) 
static_key_enable extern void static_key_enable ( s#static_key * ) 
static_key_disable_cpuslocked extern void static_key_disable_cpuslocked ( s#static_key * ) 
static_key_disable extern void static_key_disable ( s#static_key * ) 
static_key_slow_dec extern void static_key_slow_dec ( s#static_key * ) 
s##workqueue_struct
s#static_key_deferred struct static_key_deferred { s#static_key key ; unsigned long timeout ; s#delayed_work work ; } 
static_key_slow_dec_deferred extern void static_key_slow_dec_deferred ( s#static_key_deferred * ) 
static_key_deferred_flush extern void static_key_deferred_flush ( s#static_key_deferred * ) 
jump_label_rate_limit extern void jump_label_rate_limit ( s#static_key_deferred * , unsigned long ) 

/* kernel/kallsyms.o */
kallsyms_lookup_name unsigned long kallsyms_lookup_name ( const char * ) 
s##sock
s##vfsmount
s##posix_acl
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##sec_path
s##neigh_parms
s##neighbour
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##l3mdev_ops
s##ndisc_ops
s##xfrm_state
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##phy_device
s##sfp_bus
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##kmem_cache
s##xt_table
s##inet_hashinfo
s##fib_notifier_ops
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##workqueue_struct
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##bpf_prog_array
s##cgroup_taskset
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
kallsyms_on_each_symbol int kallsyms_on_each_symbol ( int ( * ) ( void * , const char * , s#module * , unsigned long ) , void * ) 
sprint_symbol extern int sprint_symbol ( char * , unsigned long ) 
sprint_symbol_no_offset extern int sprint_symbol_no_offset ( char * , unsigned long ) 
__print_symbol extern void __print_symbol ( const char * , unsigned long ) 

/* kernel/kexec_core.o */
kexec_crash_loaded int kexec_crash_loaded ( void ) 

/* kernel/kmod.o */
__request_module extern __attribute__ ( ( format ( printf , 2 , 3 ) ) ) int __request_module ( t#bool , const char * , ... ) 
usermodehelper_read_trylock extern int usermodehelper_read_trylock ( void ) 
usermodehelper_read_lock_wait extern long usermodehelper_read_lock_wait ( long ) 
usermodehelper_read_unlock extern void usermodehelper_read_unlock ( void ) 
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##sock
s##pipe_inode_info
s##kmem_cache
s##fs_pin
s##proc_ns_operations
s##nlm_lockowner
s##nfs4_lock_state
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_array
s##tracer
s##trace_buffer
s##ring_buffer_iter
s##event_filter
s##bpf_prog_array
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##fwnode_handle
s##iommu_group
s##iommu_fwspec
s##cgroup_taskset
s##ring_buffer
s##bpf_prog
s##ftrace_hash
s##workqueue_struct
s##kstatfs
s##eventfd_ctx
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##mempolicy
s##userfaultfd_ctx
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##nameidata
s##sem_undo_list
s##fs_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_plug
s##robust_list_head
s##futex_pi_state
s##numa_group
s##task_delay_info
s##uprobe
s##gs_cb
s##key_user
s##key_type
s##assoc_array_ptr
s#subprocess_info struct subprocess_info { s#work_struct work ; s#completion * complete ; const char * path ; char * * argv ; char * * envp ; int wait ; int retval ; int ( * init ) ( s#subprocess_info * , s#cred * ) ; void ( * cleanup ) ( s#subprocess_info * ) ; void * data ; } 
call_usermodehelper_setup extern s#subprocess_info * call_usermodehelper_setup ( const char * , char * * , char * * , t#gfp_t , int ( * ) ( s#subprocess_info * , s#cred * ) , void ( * ) ( s#subprocess_info * ) , void * ) 
call_usermodehelper_exec extern int call_usermodehelper_exec ( s#subprocess_info * , int ) 
call_usermodehelper extern int call_usermodehelper ( const char * , char * * , char * * , int ) 

/* kernel/kprobes.o */
t#kprobe_opcode_t typedef t#u16 kprobe_opcode_t 
t#kprobe_pre_handler_t typedef int ( * kprobe_pre_handler_t ) ( s#kprobe * , s#pt_regs * ) 
t#kprobe_post_handler_t typedef void ( * kprobe_post_handler_t ) ( s#kprobe * , s#pt_regs * , unsigned long ) 
t#kprobe_fault_handler_t typedef int ( * kprobe_fault_handler_t ) ( s#kprobe * , s#pt_regs * , int ) 
t#kprobe_break_handler_t typedef int ( * kprobe_break_handler_t ) ( s#kprobe * , s#pt_regs * ) 
s#arch_specific_insn struct arch_specific_insn { t#kprobe_opcode_t * insn ; unsigned int is_ftrace_insn : 1 ; } 
s#kprobe struct kprobe { s#hlist_node hlist ; s#list_head list ; unsigned long nmissed ; t#kprobe_opcode_t * addr ; const char * symbol_name ; unsigned int offset ; t#kprobe_pre_handler_t pre_handler ; t#kprobe_post_handler_t post_handler ; t#kprobe_fault_handler_t fault_handler ; t#kprobe_break_handler_t break_handler ; t#kprobe_opcode_t opcode ; s#arch_specific_insn ainsn ; t#u32 flags ; } 
register_kprobe int register_kprobe ( s#kprobe * ) 
register_kprobes int register_kprobes ( s#kprobe * * , int ) 
unregister_kprobe void unregister_kprobe ( s#kprobe * ) 
unregister_kprobes void unregister_kprobes ( s#kprobe * * , int ) 
s#jprobe struct jprobe { s#kprobe kp ; void * entry ; } 
register_jprobes int register_jprobes ( s#jprobe * * , int ) 
register_jprobe int register_jprobe ( s#jprobe * ) 
unregister_jprobe void unregister_jprobe ( s#jprobe * ) 
unregister_jprobes void unregister_jprobes ( s#jprobe * * , int ) 
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##sock
s##bio_vec
s##pipe_inode_info
s##poll_table_struct
s##kmem_cache
s##fs_pin
s##user_namespace
s##ucounts
s##proc_ns_operations
s##nlm_lockowner
s##nfs4_lock_state
s##key_user
s##key_type
s##assoc_array_ptr
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##mem_cgroup
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##fwnode_handle
s##iommu_group
s##iommu_fwspec
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##cgroup_namespace
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##uprobe
s##gs_cb
s#kretprobe_instance struct kretprobe_instance { s#hlist_node hlist ; s#kretprobe * rp ; t#kprobe_opcode_t * ret_addr ; s#task_struct * task ; char data [ 0 ] ; } 
t#kretprobe_handler_t typedef int ( * kretprobe_handler_t ) ( s#kretprobe_instance * , s#pt_regs * ) 
s#kretprobe struct kretprobe { s#kprobe kp ; t#kretprobe_handler_t handler ; t#kretprobe_handler_t entry_handler ; int maxactive ; int nmissed ; t#size_t data_size ; s#hlist_head free_instances ; t#raw_spinlock_t lock ; } 
register_kretprobe int register_kretprobe ( s#kretprobe * ) 
register_kretprobes int register_kretprobes ( s#kretprobe * * , int ) 
unregister_kretprobe void unregister_kretprobe ( s#kretprobe * ) 
unregister_kretprobes void unregister_kretprobes ( s#kretprobe * * , int ) 
disable_kprobe int disable_kprobe ( s#kprobe * ) 
enable_kprobe int enable_kprobe ( s#kprobe * ) 
jprobe_return void jprobe_return ( void ) 

/* kernel/ksysfs.o */
s##sock
s##seq_file
s##vfsmount
s##posix_acl
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##kmem_cache
s##fs_pin
s##ucounts
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##cgroup_namespace
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##device
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
kernel_kobj extern s#kobject * kernel_kobj 

/* kernel/kthread.o */
kthread_should_stop t#bool kthread_should_stop ( void ) 
kthread_should_park t#bool kthread_should_park ( void ) 
kthread_freezable_should_stop t#bool kthread_freezable_should_stop ( t#bool * ) 
kthread_parkme void kthread_parkme ( void ) 
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##module
s##writeback_control
s##kstatfs
s##iov_iter
s##poll_table_struct
s##kmem_cache
s##fs_pin
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##mem_cgroup
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##device
s##mempolicy
s##userfaultfd_ctx
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##compat_timespec
s##pollfd
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
kthread_create_on_node __attribute__ ( ( format ( printf , 4 , 5 ) ) ) s#task_struct * kthread_create_on_node ( int ( * ) ( void * ) , void * , int , const char [ ] , ... ) 
kthread_bind void kthread_bind ( s#task_struct * , unsigned int ) 
kthread_unpark void kthread_unpark ( s#task_struct * ) 
kthread_park int kthread_park ( s#task_struct * ) 
kthread_stop int kthread_stop ( s#task_struct * ) 
__kthread_init_worker extern void __kthread_init_worker ( s#kthread_worker * , const char * , s#lock_class_key * ) 
kthread_worker_fn int kthread_worker_fn ( void * ) 
kthread_create_worker __attribute__ ( ( format ( printf , 2 , 3 ) ) ) s#kthread_worker * kthread_create_worker ( unsigned int , const char [ ] , ... ) 
kthread_create_worker_on_cpu __attribute__ ( ( format ( printf , 3 , 4 ) ) ) s#kthread_worker * kthread_create_worker_on_cpu ( int , unsigned int , const char [ ] , ... ) 
kthread_queue_work t#bool kthread_queue_work ( s#kthread_worker * , s#kthread_work * ) 
kthread_delayed_work_timer_fn void kthread_delayed_work_timer_fn ( unsigned long ) 
s#kthread_delayed_work struct kthread_delayed_work { s#kthread_work work ; s#timer_list timer ; } 
kthread_queue_delayed_work t#bool kthread_queue_delayed_work ( s#kthread_worker * , s#kthread_delayed_work * , unsigned long ) 
kthread_flush_work void kthread_flush_work ( s#kthread_work * ) 
kthread_mod_delayed_work t#bool kthread_mod_delayed_work ( s#kthread_worker * , s#kthread_delayed_work * , unsigned long ) 
kthread_cancel_work_sync t#bool kthread_cancel_work_sync ( s#kthread_work * ) 
kthread_cancel_delayed_work_sync t#bool kthread_cancel_delayed_work_sync ( s#kthread_delayed_work * ) 
kthread_flush_worker void kthread_flush_worker ( s#kthread_worker * ) 
kthread_destroy_worker void kthread_destroy_worker ( s#kthread_worker * ) 
kthread_associate_blkcg void kthread_associate_blkcg ( s#cgroup_subsys_state * ) 
kthread_blkcg s#cgroup_subsys_state * kthread_blkcg ( void ) 

/* kernel/livepatch/core.o */
s##sock
s##seq_file
s##vfsmount
s##posix_acl
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##kmem_cache
s##fs_pin
s##ucounts
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##cgroup_namespace
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##device
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s#klp_func struct klp_func { const char * old_name ; void * new_func ; unsigned long old_sympos ; void * old_func ; s#kobject kobj ; s#list_head node ; s#list_head stack_node ; unsigned long old_size , new_size ; t#bool nop ; t#bool patched ; t#bool transition ; } 
s#klp_callbacks struct klp_callbacks { int ( * pre_patch ) ( s#klp_object * ) ; void ( * post_patch ) ( s#klp_object * ) ; void ( * pre_unpatch ) ( s#klp_object * ) ; void ( * post_unpatch ) ( s#klp_object * ) ; t#bool post_unpatch_enabled ; } 
s#klp_object struct klp_object { const char * name ; s#klp_func * funcs ; s#klp_callbacks callbacks ; s#kobject kobj ; s#list_head func_list ; s#list_head node ; s#module * mod ; t#bool dynamic ; t#bool patched ; } 
s#klp_state struct klp_state { unsigned long id ; unsigned int version ; void * data ; } 
s#klp_patch struct klp_patch { s#module * mod ; s#klp_object * objs ; s#klp_state * states ; t#bool replace ; s#list_head list ; s#kobject kobj ; s#list_head obj_list ; t#bool enabled ; t#bool forced ; s#work_struct free_work ; s#completion finish ; } 
klp_enable_patch int klp_enable_patch ( s#klp_patch * ) 

/* kernel/livepatch/shadow.o */
klp_shadow_get void * klp_shadow_get ( void * , unsigned long ) 
t#klp_shadow_ctor_t typedef int ( * klp_shadow_ctor_t ) ( void * , void * , void * ) 
klp_shadow_alloc void * klp_shadow_alloc ( void * , unsigned long , t#size_t , t#gfp_t , t#klp_shadow_ctor_t , void * ) 
klp_shadow_get_or_alloc void * klp_shadow_get_or_alloc ( void * , unsigned long , t#size_t , t#gfp_t , t#klp_shadow_ctor_t , void * ) 
t#klp_shadow_dtor_t typedef void ( * klp_shadow_dtor_t ) ( void * , void * ) 
klp_shadow_free void klp_shadow_free ( void * , unsigned long , t#klp_shadow_dtor_t ) 
klp_shadow_free_all void klp_shadow_free_all ( unsigned long , t#klp_shadow_dtor_t ) 

/* kernel/livepatch/state.o */
s##sock
s##seq_file
s##vfsmount
s##posix_acl
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##kmem_cache
s##fs_pin
s##ucounts
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##cgroup_namespace
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##device
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
klp_get_state s#klp_state * klp_get_state ( s#klp_patch * , unsigned long ) 
klp_get_prev_state s#klp_state * klp_get_prev_state ( unsigned long ) 

/* kernel/locking/mutex.o */
__mutex_init extern void __mutex_init ( s#mutex * , const char * , s#lock_class_key * ) 
mutex_lock extern void mutex_lock ( s#mutex * ) 
mutex_unlock extern void mutex_unlock ( s#mutex * ) 
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##mm_struct
s##vm_area_struct
s##compat_timespec
s##pollfd
s##pid_namespace
s##completion
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##pipe_inode_info
s##page
s##task_delay_info
s##ftrace_ret_stack
s##mem_cgroup
s##uprobe_task
s##gs_cb
ww_mutex_unlock extern void ww_mutex_unlock ( s#ww_mutex * ) 
mutex_lock_interruptible extern int mutex_lock_interruptible ( s#mutex * ) 
mutex_lock_killable extern int mutex_lock_killable ( s#mutex * ) 
mutex_lock_io extern void mutex_lock_io ( s#mutex * ) 
mutex_trylock extern int mutex_trylock ( s#mutex * ) 
ww_mutex_lock extern int ww_mutex_lock ( s#ww_mutex * , s#ww_acquire_ctx * ) 
ww_mutex_lock_interruptible extern int ww_mutex_lock_interruptible ( s#ww_mutex * , s#ww_acquire_ctx * ) 
atomic_dec_and_mutex_lock extern int atomic_dec_and_mutex_lock ( t#atomic_t * , s#mutex * ) 

/* kernel/locking/percpu-rwsem.o */
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##mm_struct
s##vm_area_struct
s##compat_timespec
s##pollfd
s##pid_namespace
s##completion
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##pipe_inode_info
s##page
s##task_delay_info
s##ftrace_ret_stack
s##mem_cgroup
s##uprobe_task
s##gs_cb
__percpu_init_rwsem extern int __percpu_init_rwsem ( s#percpu_rw_semaphore * , const char * , s#lock_class_key * ) 
percpu_free_rwsem extern void percpu_free_rwsem ( s#percpu_rw_semaphore * ) 
__percpu_down_read extern int __percpu_down_read ( s#percpu_rw_semaphore * , int ) 
__percpu_up_read extern void __percpu_up_read ( s#percpu_rw_semaphore * ) 
percpu_down_write extern void percpu_down_write ( s#percpu_rw_semaphore * ) 
percpu_up_write extern void percpu_up_write ( s#percpu_rw_semaphore * ) 

/* kernel/locking/rtmutex.o */
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##mm_struct
s##vm_area_struct
s##compat_timespec
s##pollfd
s##pid_namespace
s##completion
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s#rt_mutex_waiter struct rt_mutex_waiter { s#rb_node tree_entry ; s#rb_node pi_tree_entry ; s#task_struct * task ; s#rt_mutex * lock ; int prio ; t#u64 deadline ; } 
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##pipe_inode_info
s##page
s##task_delay_info
s##ftrace_ret_stack
s##mem_cgroup
s##uprobe_task
s##gs_cb
rt_mutex_lock extern void rt_mutex_lock ( s#rt_mutex * ) 
rt_mutex_lock_interruptible extern int rt_mutex_lock_interruptible ( s#rt_mutex * ) 
s#hrtimer_sleeper struct hrtimer_sleeper { s#hrtimer timer ; s#task_struct * task ; } 
rt_mutex_timed_lock extern int rt_mutex_timed_lock ( s#rt_mutex * , s#hrtimer_sleeper * ) 
rt_mutex_trylock extern int rt_mutex_trylock ( s#rt_mutex * ) 
rt_mutex_unlock extern void rt_mutex_unlock ( s#rt_mutex * ) 
rt_mutex_destroy extern void rt_mutex_destroy ( s#rt_mutex * ) 
__rt_mutex_init extern void __rt_mutex_init ( s#rt_mutex * , const char * , s#lock_class_key * ) 

/* kernel/locking/rwsem.o */
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##mm_struct
s##vm_area_struct
s##compat_timespec
s##pollfd
s##pid_namespace
s##completion
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##pipe_inode_info
s##page
s##task_delay_info
s##ftrace_ret_stack
s##mem_cgroup
s##uprobe_task
s##gs_cb
down_read extern void down_read ( s#rw_semaphore * ) 
down_read_trylock extern int down_read_trylock ( s#rw_semaphore * ) 
down_write extern void down_write ( s#rw_semaphore * ) 
down_write_killable extern int down_write_killable ( s#rw_semaphore * ) 
down_write_trylock extern int down_write_trylock ( s#rw_semaphore * ) 
up_read extern void up_read ( s#rw_semaphore * ) 
up_write extern void up_write ( s#rw_semaphore * ) 
downgrade_write extern void downgrade_write ( s#rw_semaphore * ) 

/* kernel/locking/rwsem-xadd.o */
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##mm_struct
s##vm_area_struct
s##compat_timespec
s##pollfd
s##pid_namespace
s##completion
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##pipe_inode_info
s##page
s##task_delay_info
s##ftrace_ret_stack
s##mem_cgroup
s##uprobe_task
s##gs_cb
__init_rwsem extern void __init_rwsem ( s#rw_semaphore * , const char * , s#lock_class_key * ) 
rwsem_down_read_failed extern s#rw_semaphore * rwsem_down_read_failed ( s#rw_semaphore * ) 
rwsem_down_read_failed_killable extern s#rw_semaphore * rwsem_down_read_failed_killable ( s#rw_semaphore * ) 
rwsem_down_write_failed extern s#rw_semaphore * rwsem_down_write_failed ( s#rw_semaphore * ) 
rwsem_down_write_failed_killable extern s#rw_semaphore * rwsem_down_write_failed_killable ( s#rw_semaphore * ) 
rwsem_wake extern s#rw_semaphore * rwsem_wake ( s#rw_semaphore * ) 
rwsem_downgrade_wake extern s#rw_semaphore * rwsem_downgrade_wake ( s#rw_semaphore * ) 

/* kernel/locking/semaphore.o */
down extern void down ( s#semaphore * ) 
down_interruptible extern int down_interruptible ( s#semaphore * ) 
down_killable extern int down_killable ( s#semaphore * ) 
down_trylock extern int down_trylock ( s#semaphore * ) 
down_timeout extern int down_timeout ( s#semaphore * , long ) 
up extern void up ( s#semaphore * ) 

/* kernel/locking/spinlock.o */
in_lock_functions int in_lock_functions ( unsigned long ) 

/* kernel/memremap.o */
memremap void * memremap ( t#resource_size_t , t#size_t , unsigned long ) 
memunmap void memunmap ( void * ) 
s##device_private
s##sock
s##vfsmount
s##posix_acl
s##module
s##workqueue_struct
s##bpf_prog_array
s##cgroup_taskset
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##iov_iter
s##hd_struct
s##gendisk
s##request_queue
s##kmem_cache
s##eventfd_ctx
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##mmu_notifier_mm
s##xol_area
s##compat_timespec
s##pollfd
s##pid_namespace
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_plug
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##mtd_info
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
devm_memremap void * devm_memremap ( s#device * , t#resource_size_t , t#size_t , unsigned long ) 
devm_memunmap void devm_memunmap ( s#device * , void * ) 

/* kernel/module.o */
module_mutex extern s#mutex module_mutex 
register_module_notifier int register_module_notifier ( s#notifier_block * ) 
unregister_module_notifier int unregister_module_notifier ( s#notifier_block * ) 
s##sock
s##vfsmount
s##posix_acl
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##mmu_notifier_mm
s##xol_area
s##kmem_cache
s##fs_pin
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##bpf_prog_array
s##cgroup_taskset
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##robust_list_head
s##futex_pi_state
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##fwnode_handle
s##iommu_group
s##iommu_fwspec
s##ring_buffer
s##bpf_prog
s##static_key_mod
s##trace_array
s##tracer
s##trace_buffer
s##ring_buffer_iter
s##event_filter
s##ftrace_hash
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
__module_put_and_exit extern void __attribute__ ( ( noreturn ) ) __module_put_and_exit ( s#module * , long ) 
s#symsearch struct symsearch { const s#kernel_symbol * start , * stop ; const t#s32 * crcs ; enum { NOT_GPL_ONLY , GPL_ONLY , WILL_BE_GPL_ONLY , } licence ; t#bool unused ; } 
each_symbol_section t#bool each_symbol_section ( t#bool ( * ) ( const s#symsearch * , s#module * , void * ) , void * ) 
find_symbol const s#kernel_symbol * find_symbol ( const char * , s#module * * , const t#s32 * * , t#bool , t#bool ) 
find_module s#module * find_module ( const char * ) 
__tracepoint_module_get extern s#tracepoint __tracepoint_module_get 
ref_module int ref_module ( s#module * , s#module * ) 
module_refcount int module_refcount ( s#module * ) 
__symbol_put void __symbol_put ( const char * ) 
symbol_put_addr void symbol_put_addr ( void * ) 
__module_get extern void __module_get ( s#module * ) 
try_module_get extern t#bool try_module_get ( s#module * ) 
module_put extern void module_put ( s#module * ) 
__symbol_get void * __symbol_get ( const char * ) 
__module_address s#module * __module_address ( unsigned long ) 
__module_text_address s#module * __module_text_address ( unsigned long ) 
s#modversion_info struct modversion_info { unsigned long crc ; char name [ ( 64 - sizeof ( unsigned long ) ) ] ; } 
module_layout void module_layout ( s#module * , s#modversion_info * , s#kernel_param * , s#kernel_symbol * , s#tracepoint * const * ) 

/* kernel/notifier.o */
atomic_notifier_chain_register extern int atomic_notifier_chain_register ( s#atomic_notifier_head * , s#notifier_block * ) 
atomic_notifier_chain_unregister extern int atomic_notifier_chain_unregister ( s#atomic_notifier_head * , s#notifier_block * ) 
__atomic_notifier_call_chain extern int __atomic_notifier_call_chain ( s#atomic_notifier_head * , unsigned long , void * , int , int * ) 
atomic_notifier_call_chain extern int atomic_notifier_call_chain ( s#atomic_notifier_head * , unsigned long , void * ) 
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##module
s##writeback_control
s##kstatfs
s##seq_file
s##mem_cgroup
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##user_namespace
s##iov_iter
s##poll_table_struct
s##kmem_cache
s##fs_pin
s##ucounts
s##proc_ns_operations
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_user
s##key_type
s##assoc_array_ptr
s##bdi_writeback
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##device
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##compat_timespec
s##pollfd
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##cgroup_namespace
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##uprobe
s##gs_cb
blocking_notifier_chain_register extern int blocking_notifier_chain_register ( s#blocking_notifier_head * , s#notifier_block * ) 
blocking_notifier_chain_cond_register extern int blocking_notifier_chain_cond_register ( s#blocking_notifier_head * , s#notifier_block * ) 
blocking_notifier_chain_unregister extern int blocking_notifier_chain_unregister ( s#blocking_notifier_head * , s#notifier_block * ) 
__blocking_notifier_call_chain extern int __blocking_notifier_call_chain ( s#blocking_notifier_head * , unsigned long , void * , int , int * ) 
blocking_notifier_call_chain extern int blocking_notifier_call_chain ( s#blocking_notifier_head * , unsigned long , void * ) 
s#raw_notifier_head struct raw_notifier_head { s#notifier_block * head ; } 
raw_notifier_chain_register extern int raw_notifier_chain_register ( s#raw_notifier_head * , s#notifier_block * ) 
raw_notifier_chain_unregister extern int raw_notifier_chain_unregister ( s#raw_notifier_head * , s#notifier_block * ) 
__raw_notifier_call_chain extern int __raw_notifier_call_chain ( s#raw_notifier_head * , unsigned long , void * , int , int * ) 
raw_notifier_call_chain extern int raw_notifier_call_chain ( s#raw_notifier_head * , unsigned long , void * ) 
s#srcu_notifier_head struct srcu_notifier_head { s#mutex mutex ; s#srcu_struct srcu ; s#notifier_block * head ; } 
srcu_notifier_chain_register extern int srcu_notifier_chain_register ( s#srcu_notifier_head * , s#notifier_block * ) 
srcu_notifier_chain_unregister extern int srcu_notifier_chain_unregister ( s#srcu_notifier_head * , s#notifier_block * ) 
__srcu_notifier_call_chain extern int __srcu_notifier_call_chain ( s#srcu_notifier_head * , unsigned long , void * , int , int * ) 
srcu_notifier_call_chain extern int srcu_notifier_call_chain ( s#srcu_notifier_head * , unsigned long , void * ) 
srcu_init_notifier_head extern void srcu_init_notifier_head ( s#srcu_notifier_head * ) 
register_die_notifier int register_die_notifier ( s#notifier_block * ) 
unregister_die_notifier int unregister_die_notifier ( s#notifier_block * ) 

/* kernel/padata.o */
s##workqueue_struct
s#padata_list struct padata_list { s#list_head list ; t#spinlock_t lock ; } 
s#padata_parallel_queue struct padata_parallel_queue { s#padata_list parallel ; s#padata_list reorder ; s#parallel_data * pd ; s#work_struct work ; t#atomic_t num_obj ; int cpu_index ; } 
s#padata_serial_queue struct padata_serial_queue { s#padata_list serial ; s#work_struct work ; s#parallel_data * pd ; } 
s#padata_cpumask struct padata_cpumask { t#cpumask_var_t pcpu ; t#cpumask_var_t cbcpu ; } 
s#parallel_data struct parallel_data { s#padata_instance * pinst ; s#padata_parallel_queue * pqueue ; s#padata_serial_queue * squeue ; t#atomic_t reorder_objects ; t#atomic_t refcnt ; t#atomic_t seq_nr ; s#padata_cpumask cpumask ; t#spinlock_t lock __attribute__ ( ( __aligned__ ( 256 ) ) ) ; unsigned int processed ; s#timer_list timer ; } 
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##sock
s##seq_file
s##bio_vec
s##pipe_inode_info
s##poll_table_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##cred
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##mem_cgroup
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##mtd_info
s##user_namespace
s##bdi_writeback
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##fwnode_handle
s##iommu_group
s##iommu_fwspec
s##kmem_cache
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s#padata_instance struct padata_instance { s#hlist_node node ; s#workqueue_struct * wq ; s#parallel_data * pd ; s#padata_cpumask cpumask ; s#blocking_notifier_head cpumask_change_notifier ; s#kobject kobj ; s#mutex lock ; t#u8 flags ; } 
s#padata_priv struct padata_priv { s#list_head list ; s#parallel_data * pd ; int cb_cpu ; int info ; void ( * parallel ) ( s#padata_priv * ) ; void ( * serial ) ( s#padata_priv * ) ; } 
padata_do_parallel extern int padata_do_parallel ( s#padata_instance * , s#padata_priv * , int ) 
padata_do_serial extern void padata_do_serial ( s#padata_priv * ) 
padata_register_cpumask_notifier extern int padata_register_cpumask_notifier ( s#padata_instance * , s#notifier_block * ) 
padata_unregister_cpumask_notifier extern int padata_unregister_cpumask_notifier ( s#padata_instance * , s#notifier_block * ) 
padata_set_cpumask extern int padata_set_cpumask ( s#padata_instance * , int , t#cpumask_var_t ) 
padata_start extern int padata_start ( s#padata_instance * ) 
padata_stop extern void padata_stop ( s#padata_instance * ) 
padata_remove_cpu int padata_remove_cpu ( s#padata_instance * , int , int ) 
padata_alloc_possible extern s#padata_instance * padata_alloc_possible ( s#workqueue_struct * ) 
padata_free extern void padata_free ( s#padata_instance * ) 

/* kernel/panic.o */
panic_timeout extern int panic_timeout 
panic_notifier_list extern s#atomic_notifier_head panic_notifier_list 
panic_blink extern long ( * panic_blink ) ( int ) 
nmi_panic void nmi_panic ( s#pt_regs * , const char * ) 
panic __attribute__ ( ( format ( printf , 1 , 2 ) ) ) void panic ( const char * , ... ) 
test_taint extern int test_taint ( unsigned ) 
e#lockdep_ok enum lockdep_ok { LOCKDEP_STILL_OK , LOCKDEP_NOW_UNRELIABLE } 
add_taint extern void add_taint ( unsigned , e#lockdep_ok ) 

/* kernel/params.o */
s##sock
s##seq_file
s##vfsmount
s##posix_acl
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##fwnode_handle
s##iommu_group
s##iommu_fwspec
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
param_set_byte extern int param_set_byte ( const char * , const s#kernel_param * ) 
param_get_byte extern int param_get_byte ( char * , const s#kernel_param * ) 
param_ops_byte extern const s#kernel_param_ops param_ops_byte 
param_set_short extern int param_set_short ( const char * , const s#kernel_param * ) 
param_get_short extern int param_get_short ( char * , const s#kernel_param * ) 
param_ops_short extern const s#kernel_param_ops param_ops_short 
param_set_ushort extern int param_set_ushort ( const char * , const s#kernel_param * ) 
param_get_ushort extern int param_get_ushort ( char * , const s#kernel_param * ) 
param_ops_ushort extern const s#kernel_param_ops param_ops_ushort 
param_set_int extern int param_set_int ( const char * , const s#kernel_param * ) 
param_get_int extern int param_get_int ( char * , const s#kernel_param * ) 
param_ops_int extern const s#kernel_param_ops param_ops_int 
param_set_uint extern int param_set_uint ( const char * , const s#kernel_param * ) 
param_get_uint extern int param_get_uint ( char * , const s#kernel_param * ) 
param_ops_uint extern const s#kernel_param_ops param_ops_uint 
param_set_long extern int param_set_long ( const char * , const s#kernel_param * ) 
param_get_long extern int param_get_long ( char * , const s#kernel_param * ) 
param_ops_long extern const s#kernel_param_ops param_ops_long 
param_set_ulong extern int param_set_ulong ( const char * , const s#kernel_param * ) 
param_get_ulong extern int param_get_ulong ( char * , const s#kernel_param * ) 
param_ops_ulong extern const s#kernel_param_ops param_ops_ulong 
param_set_ullong extern int param_set_ullong ( const char * , const s#kernel_param * ) 
param_get_ullong extern int param_get_ullong ( char * , const s#kernel_param * ) 
param_ops_ullong extern const s#kernel_param_ops param_ops_ullong 
param_set_charp extern int param_set_charp ( const char * , const s#kernel_param * ) 
param_get_charp extern int param_get_charp ( char * , const s#kernel_param * ) 
param_free_charp extern void param_free_charp ( void * ) 
param_ops_charp extern const s#kernel_param_ops param_ops_charp 
param_set_bool extern int param_set_bool ( const char * , const s#kernel_param * ) 
param_get_bool extern int param_get_bool ( char * , const s#kernel_param * ) 
param_ops_bool extern const s#kernel_param_ops param_ops_bool 
param_set_bool_enable_only extern int param_set_bool_enable_only ( const char * , const s#kernel_param * ) 
param_ops_bool_enable_only extern const s#kernel_param_ops param_ops_bool_enable_only 
param_set_invbool extern int param_set_invbool ( const char * , const s#kernel_param * ) 
param_get_invbool extern int param_get_invbool ( char * , const s#kernel_param * ) 
param_ops_invbool extern const s#kernel_param_ops param_ops_invbool 
param_set_bint extern int param_set_bint ( const char * , const s#kernel_param * ) 
param_ops_bint extern const s#kernel_param_ops param_ops_bint 
param_array_ops extern const s#kernel_param_ops param_array_ops 
param_set_copystring extern int param_set_copystring ( const char * , const s#kernel_param * ) 
param_get_string extern int param_get_string ( char * , const s#kernel_param * ) 
param_ops_string extern const s#kernel_param_ops param_ops_string 
kernel_param_lock extern void kernel_param_lock ( s#module * ) 
kernel_param_unlock extern void kernel_param_unlock ( s#module * ) 

/* kernel/pid.o */
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##sock
s##bio_vec
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##net_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##sec_path
s##kmem_cache
s##xt_table
s##inet_hashinfo
s##fib_notifier_ops
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##neighbour
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##nf_hook_entry
s##ebt_table
s##workqueue_struct
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##bpf_prog_array
s##cgroup_taskset
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_array
s##tracer
s##trace_buffer
s##ring_buffer_iter
s##event_filter
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##ring_buffer
s##bpf_prog
s##ftrace_hash
s##writeback_control
s##kstatfs
s##mem_cgroup
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##mtd_info
s##bdi_writeback
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##robust_list_head
s##futex_pi_state
s##numa_group
s##task_delay_info
s##uprobe
s##gs_cb
s##fs_pin
init_pid_ns extern s#pid_namespace init_pid_ns 
put_pid extern void put_pid ( s#pid * ) 
find_pid_ns extern s#pid * find_pid_ns ( int , s#pid_namespace * ) 
find_vpid extern s#pid * find_vpid ( int ) 
pid_task extern s#task_struct * pid_task ( s#pid * , e#pid_type ) 
get_task_pid extern s#pid * get_task_pid ( s#task_struct * , e#pid_type ) 
get_pid_task extern s#task_struct * get_pid_task ( s#pid * , e#pid_type ) 
find_get_pid extern s#pid * find_get_pid ( int ) 
pid_nr_ns t#pid_t pid_nr_ns ( s#pid * , s#pid_namespace * ) 
pid_vnr t#pid_t pid_vnr ( s#pid * ) 
__task_pid_nr_ns t#pid_t __task_pid_nr_ns ( s#task_struct * , e#pid_type , s#pid_namespace * ) 
task_active_pid_ns extern s#pid_namespace * task_active_pid_ns ( s#task_struct * ) 

/* kernel/pid_namespace.o */
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##module
s##writeback_control
s##kstatfs
s##iov_iter
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_user
s##key_type
s##assoc_array_ptr
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##mem_cgroup
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##device_private
s##sock
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##fwnode_handle
s##iommu_group
s##iommu_fwspec
s##kmem_cache
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##compat_timespec
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##ring_buffer
s##bpf_prog
s##static_key_mod
s##trace_array
s##tracer
s##trace_buffer
s##ring_buffer_iter
s##event_filter
s##ftrace_hash
s##numa_group
s##task_delay_info
s##uprobe
s##gs_cb
s##fs_pin
put_pid_ns extern void put_pid_ns ( s#pid_namespace * ) 

/* kernel/power/console.o */
s##device_private
s##sock
s##vfsmount
s##posix_acl
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##workqueue_struct
s##bpf_prog_array
s##cgroup_taskset
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##pipe_inode_info
s##hd_struct
s##gendisk
s##request_queue
s##kmem_cache
s##eventfd_ctx
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##ipc_namespace
s##mnt_namespace
s##net
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_plug
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##mtd_info
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##fwnode_handle
s##iommu_group
s##iommu_fwspec
pm_vt_switch_required extern void pm_vt_switch_required ( s#device * , t#bool ) 
pm_vt_switch_unregister extern void pm_vt_switch_unregister ( s#device * ) 

/* kernel/power/hibernate.o */
s#platform_hibernation_ops struct platform_hibernation_ops { int ( * begin ) ( void ) ; void ( * end ) ( void ) ; int ( * pre_snapshot ) ( void ) ; void ( * finish ) ( void ) ; int ( * prepare ) ( void ) ; int ( * enter ) ( void ) ; void ( * leave ) ( void ) ; int ( * pre_restore ) ( void ) ; void ( * restore_cleanup ) ( void ) ; void ( * recover ) ( void ) ; } 
hibernation_set_ops extern void hibernation_set_ops ( const s#platform_hibernation_ops * ) 
system_entering_hibernation extern t#bool system_entering_hibernation ( void ) 

/* kernel/power/main.o */
lock_system_sleep extern void lock_system_sleep ( void ) 
unlock_system_sleep extern void unlock_system_sleep ( void ) 
register_pm_notifier extern int register_pm_notifier ( s#notifier_block * ) 
unregister_pm_notifier extern int unregister_pm_notifier ( s#notifier_block * ) 
s##workqueue_struct
pm_wq s#workqueue_struct * pm_wq 

/* kernel/power/qos.o */
pm_qos_request int pm_qos_request ( int ) 
s##workqueue_struct
s#pm_qos_request struct pm_qos_request { s#plist_node node ; int pm_qos_class ; s#delayed_work work ; } 
pm_qos_request_active int pm_qos_request_active ( s#pm_qos_request * ) 
pm_qos_add_request void pm_qos_add_request ( s#pm_qos_request * , int , t#s32 ) 
pm_qos_update_request void pm_qos_update_request ( s#pm_qos_request * , t#s32 ) 
pm_qos_remove_request void pm_qos_remove_request ( s#pm_qos_request * ) 
pm_qos_add_notifier int pm_qos_add_notifier ( int , s#notifier_block * ) 
pm_qos_remove_notifier int pm_qos_remove_notifier ( int , s#notifier_block * ) 

/* kernel/printk/printk.o */
console_printk extern int console_printk [ ] 
oops_in_progress extern int oops_in_progress 
s##sock
s##vfsmount
s##posix_acl
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_array
s##tracer
s##trace_buffer
s##ring_buffer_iter
s##event_filter
s##bpf_prog_array
s##device_private
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##kmem_cache
s##fs_pin
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##ipc_namespace
s##mnt_namespace
s##net
s##cgroup_taskset
s##writeback_control
s##bio_vec
s##pipe_inode_info
s##swap_info_struct
s##mem_cgroup
s##mempolicy
s##serial_icounter_struct
s##nlm_lockowner
s##nfs4_lock_state
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##robust_list_head
s##futex_pi_state
s##numa_group
s##task_delay_info
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##ring_buffer
s##bpf_prog
s##ftrace_hash
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##proc_dir_entry
s#console struct console { char name [ 16 ] ; void ( * write ) ( s#console * , const char * , unsigned ) ; int ( * read ) ( s#console * , char * , unsigned ) ; s#tty_driver * ( * device ) ( s#console * , int * ) ; void ( * unblank ) ( void ) ; int ( * setup ) ( s#console * , char * ) ; int ( * match ) ( s#console * , char * , int , char * ) ; short flags ; short index ; int cflag ; void * data ; s#console * next ; } 
console_drivers extern s#console * console_drivers 
console_set_on_cmdline extern int console_set_on_cmdline 
check_syslog_permissions int check_syslog_permissions ( int , int ) 
vprintk_emit __attribute__ ( ( format ( printf , 5 , 0 ) ) ) int vprintk_emit ( int , int , const char * , t#size_t , const char * , t#va_list ) 
vprintk __attribute__ ( ( format ( printf , 1 , 0 ) ) ) int vprintk ( const char * , t#va_list ) 
printk_emit __attribute__ ( ( format ( printf , 5 , 6 ) ) ) __attribute__ ( ( __cold__ ) ) int printk_emit ( int , int , const char * , t#size_t , const char * , ... ) 
vprintk_default __attribute__ ( ( format ( printf , 1 , 0 ) ) ) int vprintk_default ( const char * , t#va_list ) 
printk __attribute__ ( ( format ( printf , 1 , 2 ) ) ) __attribute__ ( ( __cold__ ) ) int printk ( const char * , ... ) 
console_suspend_enabled extern t#bool console_suspend_enabled 
console_lock extern void console_lock ( void ) 
console_trylock extern int console_trylock ( void ) 
console_unlock extern void console_unlock ( void ) 
console_conditional_schedule extern void console_conditional_schedule ( void ) 
console_stop extern void console_stop ( s#console * ) 
console_start extern void console_start ( s#console * ) 
register_console extern void register_console ( s#console * ) 
unregister_console extern int unregister_console ( s#console * ) 
__printk_ratelimit extern int __printk_ratelimit ( const char * ) 
printk_timed_ratelimit extern t#bool printk_timed_ratelimit ( unsigned long * , unsigned int ) 
s#kmsg_dumper struct kmsg_dumper { s#list_head list ; void ( * dump ) ( s#kmsg_dumper * , e#kmsg_dump_reason ) ; e#kmsg_dump_reason max_reason ; t#bool active ; t#bool registered ; t#u32 cur_idx ; t#u32 next_idx ; t#u64 cur_seq ; t#u64 next_seq ; } 
kmsg_dump_register int kmsg_dump_register ( s#kmsg_dumper * ) 
kmsg_dump_unregister int kmsg_dump_unregister ( s#kmsg_dumper * ) 
kmsg_dump_get_line t#bool kmsg_dump_get_line ( s#kmsg_dumper * , t#bool , char * , t#size_t , t#size_t * ) 
kmsg_dump_get_buffer t#bool kmsg_dump_get_buffer ( s#kmsg_dumper * , t#bool , char * , t#size_t , t#size_t * ) 
kmsg_dump_rewind void kmsg_dump_rewind ( s#kmsg_dumper * ) 

/* kernel/profile.o */
prof_on extern int prof_on 
task_handoff_register int task_handoff_register ( s#notifier_block * ) 
task_handoff_unregister int task_handoff_unregister ( s#notifier_block * ) 
e#profile_type enum profile_type { PROFILE_TASK_EXIT , PROFILE_MUNMAP } 
profile_event_register int profile_event_register ( e#profile_type , s#notifier_block * ) 
profile_event_unregister int profile_event_unregister ( e#profile_type , s#notifier_block * ) 
profile_hits void profile_hits ( int , void * , unsigned int ) 

/* kernel/ptrace.o */
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##module
s##writeback_control
s##kstatfs
s##bio_vec
s##pipe_inode_info
s##kmem_cache
s##fs_pin
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##mem_cgroup
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##device_private
s##sock
s##kernfs_open_node
s##kernfs_iattrs
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##fwnode_handle
s##iommu_group
s##iommu_fwspec
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##bpf_prog_array
s##cgroup_taskset
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##robust_list_head
s##futex_pi_state
s##ring_buffer
s##bpf_prog
s##static_key_mod
s##trace_array
s##tracer
s##trace_buffer
s##ring_buffer_iter
s##event_filter
s##ftrace_hash
s##numa_group
s##task_delay_info
s##uprobe
s##gs_cb
t#user_regset_get_fn typedef int user_regset_get_fn ( s#task_struct * , const s#user_regset * , unsigned int , unsigned int , void * , void * ) 
t#user_regset_set_fn typedef int user_regset_set_fn ( s#task_struct * , const s#user_regset * , unsigned int , unsigned int , const void * , const void * ) 
t#user_regset_active_fn typedef int user_regset_active_fn ( s#task_struct * , const s#user_regset * ) 
t#user_regset_writeback_fn typedef int user_regset_writeback_fn ( s#task_struct * , const s#user_regset * , int ) 
t#user_regset_get_size_fn typedef unsigned int user_regset_get_size_fn ( s#task_struct * , const s#user_regset * ) 
s#user_regset struct user_regset { t#user_regset_get_fn * get ; t#user_regset_set_fn * set ; t#user_regset_active_fn * active ; t#user_regset_writeback_fn * writeback ; t#user_regset_get_size_fn * get_size ; unsigned int n ; unsigned int size ; unsigned int align ; unsigned int bias ; unsigned int core_note_type ; } 
s#user_regset_view struct user_regset_view { const char * name ; const s#user_regset * regsets ; unsigned int n ; t#u32 e_flags ; t#u16 e_machine ; t#u8 ei_osabi ; } 
task_user_regset_view const s#user_regset_view * task_user_regset_view ( s#task_struct * ) 

/* kernel/rcu/srcutree.o */
s##workqueue_struct
init_srcu_struct int init_srcu_struct ( s#srcu_struct * ) 
_cleanup_srcu_struct void _cleanup_srcu_struct ( s#srcu_struct * , t#bool ) 
__srcu_read_lock int __srcu_read_lock ( s#srcu_struct * ) 
__srcu_read_unlock void __srcu_read_unlock ( s#srcu_struct * , int ) 
call_srcu void call_srcu ( s#srcu_struct * , s#callback_head * , void ( * ) ( s#callback_head * ) ) 
synchronize_srcu_expedited void synchronize_srcu_expedited ( s#srcu_struct * ) 
synchronize_srcu void synchronize_srcu ( s#srcu_struct * ) 
srcu_barrier void srcu_barrier ( s#srcu_struct * ) 
srcu_batches_completed unsigned long srcu_batches_completed ( s#srcu_struct * ) 
process_srcu void process_srcu ( s#work_struct * ) 
e#rcutorture_type enum rcutorture_type { RCU_FLAVOR , RCU_BH_FLAVOR , RCU_SCHED_FLAVOR , RCU_TASKS_FLAVOR , SRCU_FLAVOR , INVALID_RCU_FLAVOR } 
srcutorture_get_gp_data void srcutorture_get_gp_data ( e#rcutorture_type , s#srcu_struct * , int * , unsigned long * , unsigned long * ) 

/* kernel/rcu/tree.o */
rcu_scheduler_active extern int rcu_scheduler_active 
rcu_note_context_switch void rcu_note_context_switch ( t#bool ) 
rcu_all_qs void rcu_all_qs ( void ) 
rcu_batches_started unsigned long rcu_batches_started ( void ) 
rcu_batches_started_sched unsigned long rcu_batches_started_sched ( void ) 
rcu_batches_started_bh unsigned long rcu_batches_started_bh ( void ) 
rcu_batches_completed unsigned long rcu_batches_completed ( void ) 
rcu_batches_completed_sched unsigned long rcu_batches_completed_sched ( void ) 
rcu_batches_completed_bh unsigned long rcu_batches_completed_bh ( void ) 
rcu_exp_batches_completed unsigned long rcu_exp_batches_completed ( void ) 
rcu_exp_batches_completed_sched unsigned long rcu_exp_batches_completed_sched ( void ) 
rcu_force_quiescent_state void rcu_force_quiescent_state ( void ) 
rcu_bh_force_quiescent_state void rcu_bh_force_quiescent_state ( void ) 
rcu_sched_force_quiescent_state void rcu_sched_force_quiescent_state ( void ) 
show_rcu_gp_kthreads void show_rcu_gp_kthreads ( void ) 
rcutorture_record_test_transition void rcutorture_record_test_transition ( void ) 
rcutorture_get_gp_data void rcutorture_get_gp_data ( e#rcutorture_type , int * , unsigned long * , unsigned long * ) 
rcutorture_record_progress void rcutorture_record_progress ( unsigned long ) 
rcu_is_watching t#bool rcu_is_watching ( void ) 
t#rcu_callback_t typedef void ( * rcu_callback_t ) ( s#callback_head * ) 
call_rcu_sched void call_rcu_sched ( s#callback_head * , t#rcu_callback_t ) 
call_rcu_bh void call_rcu_bh ( s#callback_head * , t#rcu_callback_t ) 
kfree_call_rcu void kfree_call_rcu ( s#callback_head * , t#rcu_callback_t ) 
synchronize_sched void synchronize_sched ( void ) 
synchronize_rcu_bh void synchronize_rcu_bh ( void ) 
get_state_synchronize_rcu unsigned long get_state_synchronize_rcu ( void ) 
cond_synchronize_rcu void cond_synchronize_rcu ( unsigned long ) 
get_state_synchronize_sched unsigned long get_state_synchronize_sched ( void ) 
cond_synchronize_sched void cond_synchronize_sched ( unsigned long ) 
rcu_barrier_bh void rcu_barrier_bh ( void ) 
rcu_barrier_sched void rcu_barrier_sched ( void ) 
synchronize_sched_expedited void synchronize_sched_expedited ( void ) 
synchronize_rcu_expedited void synchronize_rcu_expedited ( void ) 
rcu_barrier void rcu_barrier ( void ) 

/* kernel/rcu/update.o */
rcu_gp_is_normal t#bool rcu_gp_is_normal ( void ) 
rcu_gp_is_expedited t#bool rcu_gp_is_expedited ( void ) 
rcu_expedite_gp void rcu_expedite_gp ( void ) 
rcu_unexpedite_gp void rcu_unexpedite_gp ( void ) 
wakeme_after_rcu void wakeme_after_rcu ( s#callback_head * ) 
t#call_rcu_func_t typedef void ( * call_rcu_func_t ) ( s#callback_head * , t#rcu_callback_t ) 
s#rcu_synchronize struct rcu_synchronize { s#callback_head head ; s#completion completion ; } 
__wait_rcu_gp void __wait_rcu_gp ( t#bool , int , t#call_rcu_func_t * , s#rcu_synchronize * ) 
do_trace_rcu_torture_read void do_trace_rcu_torture_read ( const char * , s#callback_head * , unsigned long , unsigned long , unsigned long ) 
call_rcu_tasks void call_rcu_tasks ( s#callback_head * , t#rcu_callback_t ) 
synchronize_rcu_tasks void synchronize_rcu_tasks ( void ) 
rcu_barrier_tasks void rcu_barrier_tasks ( void ) 

/* kernel/reboot.o */
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##sock
s##pipe_inode_info
s##nlm_lockowner
s##nfs4_lock_state
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_array
s##tracer
s##trace_buffer
s##ring_buffer_iter
s##event_filter
s##bpf_prog_array
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##cgroup_taskset
s##ring_buffer
s##bpf_prog
s##ftrace_hash
s##workqueue_struct
s##kstatfs
s##eventfd_ctx
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kmem_cache
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_plug
s##robust_list_head
s##futex_pi_state
s##numa_group
s##task_delay_info
s##uprobe
s##gs_cb
s##fs_pin
cad_pid extern s#pid * cad_pid 
emergency_restart extern void emergency_restart ( void ) 
register_reboot_notifier extern int register_reboot_notifier ( s#notifier_block * ) 
unregister_reboot_notifier extern int unregister_reboot_notifier ( s#notifier_block * ) 
register_restart_handler extern int register_restart_handler ( s#notifier_block * ) 
unregister_restart_handler extern int unregister_restart_handler ( s#notifier_block * ) 
kernel_restart extern void kernel_restart ( char * ) 
kernel_halt extern void kernel_halt ( void ) 
kernel_power_off extern void kernel_power_off ( void ) 
orderly_poweroff extern void orderly_poweroff ( t#bool ) 
orderly_reboot extern void orderly_reboot ( void ) 

/* kernel/relay.o */
s##vfsmount
s##posix_acl
s##module
s##writeback_control
s##kstatfs
s##seq_file
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##compat_timespec
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##user_struct
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##iov_iter
s##swap_info_struct
s##device_private
s##sock
s##kernfs_open_node
s##kernfs_iattrs
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##fwnode_handle
s##iommu_group
s##iommu_fwspec
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
relay_buf_full extern int relay_buf_full ( s#rchan_buf * ) 
relay_reset extern void relay_reset ( s#rchan * ) 
relay_open s#rchan * relay_open ( const char * , s#dentry * , t#size_t , t#size_t , s#rchan_callbacks * , void * ) 
relay_late_setup_files extern int relay_late_setup_files ( s#rchan * , const char * , s#dentry * ) 
relay_switch_subbuf extern t#size_t relay_switch_subbuf ( s#rchan_buf * , t#size_t ) 
relay_subbufs_consumed extern void relay_subbufs_consumed ( s#rchan * , unsigned int , t#size_t ) 
relay_close extern void relay_close ( s#rchan * ) 
relay_flush extern void relay_flush ( s#rchan * ) 
relay_file_operations extern const s#file_operations relay_file_operations 

/* kernel/resource.o */
ioport_resource extern s#resource ioport_resource 
iomem_resource extern s#resource iomem_resource 
request_resource extern int request_resource ( s#resource * , s#resource * ) 
release_resource extern int release_resource ( s#resource * ) 
walk_iomem_res_desc extern int walk_iomem_res_desc ( unsigned long , unsigned long , t#u64 , t#u64 , void * , int ( * ) ( s#resource * , void * ) ) 
page_is_ram extern int page_is_ram ( unsigned long ) 
region_intersects int region_intersects ( t#resource_size_t , t#size_t , unsigned long , unsigned long ) 
allocate_resource extern int allocate_resource ( s#resource * , s#resource * , t#resource_size_t , t#resource_size_t , t#resource_size_t , t#resource_size_t , t#resource_size_t ( * ) ( void * , const s#resource * , t#resource_size_t , t#resource_size_t ) , void * ) 
insert_resource extern int insert_resource ( s#resource * , s#resource * ) 
remove_resource extern int remove_resource ( s#resource * ) 
adjust_resource int adjust_resource ( s#resource * , t#resource_size_t , t#resource_size_t ) 
__request_region extern s#resource * __request_region ( s#resource * , t#resource_size_t , t#resource_size_t , const char * , int ) 
__release_region extern void __release_region ( s#resource * , t#resource_size_t , t#resource_size_t ) 
s##device_private
s##sock
s##vfsmount
s##posix_acl
s##module
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##compat_timespec
s##pollfd
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##iov_iter
s##swap_info_struct
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
devm_request_resource extern int devm_request_resource ( s#device * , s#resource * , s#resource * ) 
devm_release_resource extern void devm_release_resource ( s#device * , s#resource * ) 
__devm_request_region extern s#resource * __devm_request_region ( s#device * , s#resource * , t#resource_size_t , t#resource_size_t , const char * ) 
__devm_release_region extern void __devm_release_region ( s#device * , s#resource * , t#resource_size_t , t#resource_size_t ) 
s#resource_entry struct resource_entry { s#list_head node ; s#resource * res ; t#resource_size_t offset ; s#resource __res ; } 
resource_list_create_entry extern s#resource_entry * resource_list_create_entry ( s#resource * , t#size_t ) 
resource_list_free extern void resource_list_free ( s#list_head * ) 

/* kernel/sched/clock.o */
sched_clock extern unsigned long long __attribute__ ( ( hotpatch ( 0 , 0 ) ) ) sched_clock ( void ) 

/* kernel/sched/completion.o */
complete extern void complete ( s#completion * ) 
complete_all extern void complete_all ( s#completion * ) 
wait_for_completion extern void wait_for_completion ( s#completion * ) 
wait_for_completion_timeout extern unsigned long wait_for_completion_timeout ( s#completion * , unsigned long ) 
wait_for_completion_io extern void wait_for_completion_io ( s#completion * ) 
wait_for_completion_io_timeout extern unsigned long wait_for_completion_io_timeout ( s#completion * , unsigned long ) 
wait_for_completion_interruptible extern int wait_for_completion_interruptible ( s#completion * ) 
wait_for_completion_interruptible_timeout extern long wait_for_completion_interruptible_timeout ( s#completion * , unsigned long ) 
wait_for_completion_killable extern int wait_for_completion_killable ( s#completion * ) 
wait_for_completion_killable_timeout extern long wait_for_completion_killable_timeout ( s#completion * , unsigned long ) 
try_wait_for_completion extern t#bool try_wait_for_completion ( s#completion * ) 
completion_done extern t#bool completion_done ( s#completion * ) 

/* kernel/sched/core.o */
s##vfsmount
s##posix_acl
s##sock
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_array
s##tracer
s##trace_buffer
s##ring_buffer_iter
s##event_filter
s##bpf_prog_array
s##device_private
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##workqueue_struct
s##hd_geometry
s##pr_ops
s##blk_mq_ctx
s##kmem_cache
s##blkcg_gq
s##blk_mq_hw_ctx
s##blk_mq_alloc_data
s##blk_mq_debugfs_attr
s##blk_queue_stats
s##rq_wb
s##blk_mq_ops
s##blk_stat_callback
s##blk_trace
s##blk_flush_queue
s##bsg_job
s##throtl_data
s##blk_mq_tag_set
s##timer_rand_state
s##disk_events
s##badblocks
s##eventfd_ctx
s##mempolicy
s##userfaultfd_ctx
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##iommu_group
s##iommu_fwspec
s##ring_buffer
s##fs_pin
s##bpf_prog
s##ftrace_hash
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##mtd_info
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##cgroup_taskset
s#rt_prio_array struct rt_prio_array { unsigned long bitmap [ ( ( ( 100 + 1 ) + ( 8 * sizeof ( long ) ) - 1 ) / ( 8 * sizeof ( long ) ) ) ] ; s#list_head queue [ 100 ] ; } 
s#rt_rq struct rt_rq { s#rt_prio_array active ; unsigned int rt_nr_running ; unsigned int rr_nr_running ; struct { int curr ; int next ; } highest_prio ; unsigned long rt_nr_migratory ; unsigned long rt_nr_total ; int overloaded ; s#plist_head pushable_tasks ; int rt_queued ; int rt_throttled ; t#u64 rt_time ; t#u64 rt_runtime ; t#raw_spinlock_t rt_runtime_lock ; unsigned long rt_nr_boosted ; s#rq * rq ; s#task_group * tg ; } 
s#rt_bandwidth struct rt_bandwidth { t#raw_spinlock_t rt_runtime_lock ; t#ktime_t rt_period ; t#u64 rt_runtime ; s#hrtimer rt_period_timer ; unsigned int rt_period_active ; } 
s#cfs_bandwidth struct cfs_bandwidth { t#raw_spinlock_t lock ; t#ktime_t period ; t#u64 quota , runtime ; t#s64 hierarchical_quota ; t#u64 runtime_expires ; int idle , period_active ; s#hrtimer period_timer , slack_timer ; s#list_head throttled_cfs_rq ; int nr_periods , nr_throttled ; t#u64 throttled_time ; } 
s#task_group struct task_group { s#cgroup_subsys_state css ; s#sched_entity * * se ; s#cfs_rq * * cfs_rq ; unsigned long shares ; t#atomic_long_t load_avg __attribute__ ( ( __aligned__ ( 256 ) ) ) ; s#sched_rt_entity * * rt_se ; s#rt_rq * * rt_rq ; s#rt_bandwidth rt_bandwidth ; s#callback_head rcu ; s#list_head list ; s#task_group * parent ; s#list_head siblings ; s#list_head children ; s#cfs_bandwidth cfs_bandwidth ; } 
s#cfs_rq struct cfs_rq { s#load_weight load ; unsigned long runnable_weight ; unsigned int nr_running , h_nr_running ; t#u64 exec_clock ; t#u64 min_vruntime ; s#rb_root_cached tasks_timeline ; s#sched_entity * curr , * next , * last , * skip ; unsigned int nr_spread_over ; s#sched_avg avg ; struct { t#raw_spinlock_t lock __attribute__ ( ( __aligned__ ( 256 ) ) ) ; int nr ; unsigned long load_avg ; unsigned long util_avg ; unsigned long runnable_sum ; } removed ; unsigned long tg_load_avg_contrib ; long propagate ; long prop_runnable_sum ; unsigned long h_load ; t#u64 last_h_load_update ; s#sched_entity * h_load_next ; s#rq * rq ; int on_list ; s#list_head leaf_cfs_rq_list ; s#task_group * tg ; int runtime_enabled ; t#u64 runtime_expires ; t#s64 runtime_remaining ; t#u64 throttled_clock , throttled_clock_task ; t#u64 throttled_clock_task_time ; int throttled , throttle_count ; s#list_head throttled_list ; } 
s#dl_rq struct dl_rq { s#rb_root_cached root ; unsigned long dl_nr_running ; struct { t#u64 curr ; t#u64 next ; } earliest_dl ; unsigned long dl_nr_migratory ; int overloaded ; s#rb_root_cached pushable_dl_tasks_root ; } 
s#dl_bw struct dl_bw { t#raw_spinlock_t lock ; t#u64 bw , total_bw ; } 
s#cpudl_item struct cpudl_item { t#u64 dl ; int cpu ; int idx ; } 
s#cpudl struct cpudl { t#raw_spinlock_t lock ; int size ; t#cpumask_var_t free_cpus ; s#cpudl_item * elements ; } 
s#cpupri_vec struct cpupri_vec { t#atomic_t count ; t#cpumask_var_t mask ; } 
s#cpupri struct cpupri { s#cpupri_vec pri_to_cpu [ ( 100 + 2 ) ] ; int * cpu_to_pri ; } 
s#root_domain struct root_domain { t#atomic_t refcount ; t#atomic_t rto_count ; s#callback_head rcu ; t#cpumask_var_t span ; t#cpumask_var_t online ; t#bool overload ; t#cpumask_var_t dlo_mask ; t#atomic_t dlo_count ; s#dl_bw dl_bw ; s#cpudl cpudl ; s#irq_work rto_push_work ; t#raw_spinlock_t rto_lock ; int rto_loop ; int rto_cpu ; t#atomic_t rto_loop_next ; t#atomic_t rto_loop_start ; t#cpumask_var_t rto_mask ; s#cpupri cpupri ; unsigned long max_cpu_capacity ; } 
s#sched_group_capacity struct sched_group_capacity { t#atomic_t ref ; unsigned long capacity ; unsigned long min_capacity ; unsigned long next_update ; int imbalance ; int id ; unsigned long cpumask [ 0 ] ; } 
s#sched_group struct sched_group { s#sched_group * next ; t#atomic_t ref ; unsigned int group_weight ; s#sched_group_capacity * sgc ; int asym_prefer_cpu ; unsigned long cpumask [ 0 ] ; } 
E#CPU_MAX_IDLE_TYPES 3 
s#sched_domain_shared struct sched_domain_shared { t#atomic_t ref ; t#atomic_t nr_busy_cpus ; int has_idle_cores ; } 
s#sched_domain struct sched_domain { s#sched_domain * parent ; s#sched_domain * child ; s#sched_group * groups ; unsigned long min_interval ; unsigned long max_interval ; unsigned int busy_factor ; unsigned int imbalance_pct ; unsigned int cache_nice_tries ; unsigned int busy_idx ; unsigned int idle_idx ; unsigned int newidle_idx ; unsigned int wake_idx ; unsigned int forkexec_idx ; unsigned int smt_gain ; int nohz_idle ; int flags ; int level ; unsigned long last_balance ; unsigned int balance_interval ; unsigned int nr_balance_failed ; t#u64 max_newidle_lb_cost ; unsigned long next_decay_max_lb_cost ; t#u64 avg_scan_cost ; unsigned int lb_count [ E#CPU_MAX_IDLE_TYPES ] ; unsigned int lb_failed [ E#CPU_MAX_IDLE_TYPES ] ; unsigned int lb_balanced [ E#CPU_MAX_IDLE_TYPES ] ; unsigned int lb_imbalance [ E#CPU_MAX_IDLE_TYPES ] ; unsigned int lb_gained [ E#CPU_MAX_IDLE_TYPES ] ; unsigned int lb_hot_gained [ E#CPU_MAX_IDLE_TYPES ] ; unsigned int lb_nobusyg [ E#CPU_MAX_IDLE_TYPES ] ; unsigned int lb_nobusyq [ E#CPU_MAX_IDLE_TYPES ] ; unsigned int alb_count ; unsigned int alb_failed ; unsigned int alb_pushed ; unsigned int sbe_count ; unsigned int sbe_balanced ; unsigned int sbe_pushed ; unsigned int sbf_count ; unsigned int sbf_balanced ; unsigned int sbf_pushed ; unsigned int ttwu_wake_remote ; unsigned int ttwu_move_affine ; unsigned int ttwu_move_balance ; char * name ; union { void * private ; s#callback_head rcu ; } ; s#sched_domain_shared * shared ; unsigned int span_weight ; unsigned long span [ 0 ] ; } 
t#cpu_stop_fn_t typedef int ( * cpu_stop_fn_t ) ( void * ) 
s##cpu_stop_done
s#cpu_stop_work struct cpu_stop_work { s#list_head list ; t#cpu_stop_fn_t fn ; void * arg ; s#cpu_stop_done * done ; } 
t#call_single_data_t typedef s#__call_single_data call_single_data_t 
s#rq struct rq { t#raw_spinlock_t lock ; unsigned int nr_running ; unsigned int nr_numa_running ; unsigned int nr_preferred_running ; unsigned int numa_migrate_on ; unsigned long cpu_load [ 5 ] ; unsigned long last_load_update_tick ; unsigned long nohz_flags ; s#load_weight load ; unsigned long nr_load_updates ; t#u64 nr_switches ; s#cfs_rq cfs ; s#rt_rq rt ; s#dl_rq dl ; s#list_head leaf_cfs_rq_list ; s#list_head * tmp_alone_branch ; unsigned long nr_uninterruptible ; s#task_struct * curr , * idle , * stop ; unsigned long next_balance ; s#mm_struct * prev_mm ; unsigned int clock_update_flags ; t#u64 clock ; t#u64 clock_task ; t#atomic_t nr_iowait ; s#root_domain * rd ; s#sched_domain * sd ; unsigned long cpu_capacity ; unsigned long cpu_capacity_orig ; s#callback_head * balance_callback ; unsigned char idle_balance ; int active_balance ; int push_cpu ; s#cpu_stop_work active_balance_work ; int cpu ; int online ; s#list_head cfs_tasks ; t#u64 rt_avg ; t#u64 age_stamp ; t#u64 idle_stamp ; t#u64 avg_idle ; t#u64 max_idle_balance_cost ; unsigned long calc_load_update ; long calc_load_active ; int hrtick_csd_pending ; t#call_single_data_t hrtick_csd ; s#hrtimer hrtick_timer ; s#sched_info rq_sched_info ; unsigned long long rq_cpu_time ; unsigned int yld_count ; unsigned int sched_count ; unsigned int sched_goidle ; unsigned int ttwu_count ; unsigned int ttwu_local ; s#llist_head wake_list ; } 
s#pin_cookie struct pin_cookie { } 
s#rq_flags struct rq_flags { unsigned long flags ; s#pin_cookie cookie ; unsigned int clock_update_flags ; } 
s#sched_class struct sched_class { const s#sched_class * next ; void ( * enqueue_task ) ( s#rq * , s#task_struct * , int ) ; void ( * dequeue_task ) ( s#rq * , s#task_struct * , int ) ; void ( * yield_task ) ( s#rq * ) ; t#bool ( * yield_to_task ) ( s#rq * , s#task_struct * , t#bool ) ; void ( * check_preempt_curr ) ( s#rq * , s#task_struct * , int ) ; s#task_struct * ( * pick_next_task ) ( s#rq * , s#task_struct * , s#rq_flags * ) ; void ( * put_prev_task ) ( s#rq * , s#task_struct * ) ; int ( * select_task_rq ) ( s#task_struct * , int , int , int ) ; void ( * migrate_task_rq ) ( s#task_struct * , int ) ; void ( * task_woken ) ( s#rq * , s#task_struct * ) ; void ( * set_cpus_allowed ) ( s#task_struct * , const s#cpumask * ) ; void ( * rq_online ) ( s#rq * ) ; void ( * rq_offline ) ( s#rq * ) ; void ( * set_curr_task ) ( s#rq * ) ; void ( * task_tick ) ( s#rq * , s#task_struct * , int ) ; void ( * task_fork ) ( s#task_struct * ) ; void ( * task_dead ) ( s#task_struct * ) ; void ( * switched_from ) ( s#rq * , s#task_struct * ) ; void ( * switched_to ) ( s#rq * , s#task_struct * ) ; void ( * prio_changed ) ( s#rq * , s#task_struct * , int ) ; unsigned int ( * get_rr_interval ) ( s#rq * , s#task_struct * ) ; void ( * update_curr ) ( s#rq * ) ; void ( * task_change_group ) ( s#task_struct * , int ) ; } 
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##net_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##sec_path
s##xt_table
s##inet_hashinfo
s##fib_notifier_ops
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##neighbour
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##nf_hook_entry
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##robust_list_head
s##futex_pi_state
s##numa_group
s##uprobe
set_cpus_allowed_ptr extern int set_cpus_allowed_ptr ( s#task_struct * , const s#cpumask * ) 
kick_process extern void kick_process ( s#task_struct * ) 
wake_up_process extern int wake_up_process ( s#task_struct * ) 
preempt_notifier_inc void preempt_notifier_inc ( void ) 
preempt_notifier_dec void preempt_notifier_dec ( void ) 
preempt_notifier_register void preempt_notifier_register ( s#preempt_notifier * ) 
preempt_notifier_unregister void preempt_notifier_unregister ( s#preempt_notifier * ) 
single_task_running extern t#bool single_task_running ( void ) 
E#NR_SOFTIRQS ( 0 ) + 10 
s#kernel_stat struct kernel_stat { unsigned long irqs_sum ; unsigned int softirqs [ E#NR_SOFTIRQS ] ; } 
kstat extern __attribute__ ( ( section ( ".data..percpu" "" ) ) ) __typeof__ ( s#kernel_stat ) kstat 
E#NR_STATS 10 
s#kernel_cpustat struct kernel_cpustat { t#u64 cpustat [ E#NR_STATS ] ; } 
kernel_cpustat extern __attribute__ ( ( section ( ".data..percpu" "" ) ) ) __typeof__ ( s#kernel_cpustat ) kernel_cpustat 
schedule void schedule ( void ) 
default_wake_function int default_wake_function ( s#wait_queue_entry * , unsigned , int , void * ) 
set_user_nice extern void set_user_nice ( s#task_struct * , long ) 
s#sched_param struct sched_param { int sched_priority ; } 
sched_setscheduler extern int sched_setscheduler ( s#task_struct * , int , const s#sched_param * ) 
s#sched_attr struct sched_attr { t#__u32 size ; t#__u32 sched_policy ; t#__u64 sched_flags ; t#__s32 sched_nice ; t#__u32 sched_priority ; t#__u64 sched_runtime ; t#__u64 sched_deadline ; t#__u64 sched_period ; } 
sched_setattr extern int sched_setattr ( s#task_struct * , const s#sched_attr * ) 
sched_setscheduler_nocheck extern int sched_setscheduler_nocheck ( s#task_struct * , int , const s#sched_param * ) 
_cond_resched extern int _cond_resched ( void ) 
__cond_resched_lock extern int __cond_resched_lock ( t#spinlock_t * ) 
__cond_resched_softirq extern int __cond_resched_softirq ( void ) 
yield void yield ( void ) 
yield_to extern int yield_to ( s#task_struct * , t#bool ) 
io_schedule_timeout extern long io_schedule_timeout ( long ) 
io_schedule extern void io_schedule ( void ) 
bit_waitqueue s#wait_queue_head * bit_waitqueue ( void * , int ) 

/* kernel/sched/cputime.o */
s##vfsmount
s##posix_acl
s##module
s##writeback_control
s##kstatfs
s##iov_iter
s##swap_info_struct
s##dev_pagemap
s##kmem_cache
s##mem_cgroup
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##bdi_writeback
s##poll_table_struct
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##vm_operations_struct
s##mempolicy
s##userfaultfd_ctx
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##cpu_stop_done
s##compat_timespec
s##pollfd
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
task_cputime_adjusted extern void task_cputime_adjusted ( s#task_struct * , t#u64 * , t#u64 * ) 

/* kernel/sched/idle.o */
play_idle void play_idle ( unsigned long ) 

/* kernel/sched/loadavg.o */
avenrun extern unsigned long avenrun [ ] 

/* kernel/sched/swait.o */
__init_swait_queue_head extern void __init_swait_queue_head ( s#swait_queue_head * , const char * , s#lock_class_key * ) 
swake_up_locked extern void swake_up_locked ( s#swait_queue_head * ) 
swake_up extern void swake_up ( s#swait_queue_head * ) 
swake_up_all extern void swake_up_all ( s#swait_queue_head * ) 
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##mm_struct
s##vm_area_struct
s##compat_timespec
s##pollfd
s##pid_namespace
s##completion
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##pipe_inode_info
s##page
s##task_delay_info
s##ftrace_ret_stack
s##mem_cgroup
s##uprobe_task
s##gs_cb
s#swait_queue struct swait_queue { s#task_struct * task ; s#list_head task_list ; } 
prepare_to_swait extern void prepare_to_swait ( s#swait_queue_head * , s#swait_queue * , int ) 
prepare_to_swait_event extern long prepare_to_swait_event ( s#swait_queue_head * , s#swait_queue * , int ) 
finish_swait extern void finish_swait ( s#swait_queue_head * , s#swait_queue * ) 

/* kernel/sched/wait.o */
__init_waitqueue_head extern void __init_waitqueue_head ( s#wait_queue_head * , const char * , s#lock_class_key * ) 
add_wait_queue extern void add_wait_queue ( s#wait_queue_head * , s#wait_queue_entry * ) 
add_wait_queue_exclusive extern void add_wait_queue_exclusive ( s#wait_queue_head * , s#wait_queue_entry * ) 
remove_wait_queue extern void remove_wait_queue ( s#wait_queue_head * , s#wait_queue_entry * ) 
__wake_up void __wake_up ( s#wait_queue_head * , unsigned int , int , void * ) 
__wake_up_locked void __wake_up_locked ( s#wait_queue_head * , unsigned int , int ) 
__wake_up_locked_key void __wake_up_locked_key ( s#wait_queue_head * , unsigned int , void * ) 
__wake_up_locked_key_bookmark void __wake_up_locked_key_bookmark ( s#wait_queue_head * , unsigned int , void * , t#wait_queue_entry_t * ) 
__wake_up_sync_key void __wake_up_sync_key ( s#wait_queue_head * , unsigned int , int , void * ) 
__wake_up_sync void __wake_up_sync ( s#wait_queue_head * , unsigned int , int ) 
prepare_to_wait void prepare_to_wait ( s#wait_queue_head * , s#wait_queue_entry * , int ) 
prepare_to_wait_exclusive void prepare_to_wait_exclusive ( s#wait_queue_head * , s#wait_queue_entry * , int ) 
init_wait_entry extern void init_wait_entry ( s#wait_queue_entry * , int ) 
prepare_to_wait_event long prepare_to_wait_event ( s#wait_queue_head * , s#wait_queue_entry * , int ) 
do_wait_intr extern int do_wait_intr ( t#wait_queue_head_t * , t#wait_queue_entry_t * ) 
do_wait_intr_irq extern int do_wait_intr_irq ( t#wait_queue_head_t * , t#wait_queue_entry_t * ) 
finish_wait void finish_wait ( s#wait_queue_head * , s#wait_queue_entry * ) 
autoremove_wake_function int autoremove_wake_function ( s#wait_queue_entry * , unsigned , int , void * ) 
wait_woken long wait_woken ( s#wait_queue_entry * , unsigned , long ) 
woken_wake_function int woken_wake_function ( s#wait_queue_entry * , unsigned , int , void * ) 

/* kernel/sched/wait_bit.o */
wake_bit_function int wake_bit_function ( s#wait_queue_entry * , unsigned , int , void * ) 
s#wait_bit_queue_entry struct wait_bit_queue_entry { s#wait_bit_key key ; s#wait_queue_entry wq_entry ; } 
t#wait_bit_action_f typedef int wait_bit_action_f ( s#wait_bit_key * , int ) 
__wait_on_bit int __wait_on_bit ( s#wait_queue_head * , s#wait_bit_queue_entry * , t#wait_bit_action_f * , unsigned int ) 
out_of_line_wait_on_bit int out_of_line_wait_on_bit ( void * , int , t#wait_bit_action_f * , unsigned int ) 
out_of_line_wait_on_bit_timeout int out_of_line_wait_on_bit_timeout ( void * , int , t#wait_bit_action_f * , unsigned int , unsigned long ) 
__wait_on_bit_lock int __wait_on_bit_lock ( s#wait_queue_head * , s#wait_bit_queue_entry * , t#wait_bit_action_f * , unsigned int ) 
out_of_line_wait_on_bit_lock int out_of_line_wait_on_bit_lock ( void * , int , t#wait_bit_action_f * , unsigned int ) 
__wake_up_bit void __wake_up_bit ( s#wait_queue_head * , void * , int ) 
wake_up_bit void wake_up_bit ( void * , int ) 
__var_waitqueue extern t#wait_queue_head_t * __var_waitqueue ( void * ) 
init_wait_var_entry extern void init_wait_var_entry ( s#wait_bit_queue_entry * , void * , int ) 
wake_up_var extern void wake_up_var ( void * ) 
t#wait_atomic_t_action_f typedef int wait_atomic_t_action_f ( t#atomic_t * , unsigned int ) 
out_of_line_wait_on_atomic_t int out_of_line_wait_on_atomic_t ( t#atomic_t * , t#wait_atomic_t_action_f , unsigned int ) 
atomic_t_wait extern int atomic_t_wait ( t#atomic_t * , unsigned int ) 
wake_up_atomic_t void wake_up_atomic_t ( t#atomic_t * ) 
bit_wait extern int bit_wait ( s#wait_bit_key * , int ) 
bit_wait_io extern int bit_wait_io ( s#wait_bit_key * , int ) 
bit_wait_timeout extern int bit_wait_timeout ( s#wait_bit_key * , int ) 
bit_wait_io_timeout extern int bit_wait_io_timeout ( s#wait_bit_key * , int ) 

/* kernel/signal.o */
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##sock
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##proc_ns_operations
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_array
s##tracer
s##trace_buffer
s##ring_buffer_iter
s##event_filter
s##bpf_prog_array
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##cgroup_taskset
s##ring_buffer
s##bpf_prog
s##ftrace_hash
s##workqueue_struct
s##kstatfs
s##eventfd_ctx
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##kmem_cache
s##mempolicy
s##userfaultfd_ctx
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##proc_dir_entry
s##serial_icounter_struct
s##tty_audit_buf
s##audit_aux_data
s##audit_tree_refs
s##seccomp_filter
s##rt_mutex_waiter
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##numa_group
s##task_delay_info
s##uprobe
s##gs_cb
s##fs_pin
kill_pid_info_as_cred extern int kill_pid_info_as_cred ( int , s#siginfo * , s#pid * , const s#cred * , t#u32 ) 
kill_pgrp extern int kill_pgrp ( s#pid * , int , int ) 
kill_pid extern int kill_pid ( s#pid * , int , int ) 
recalc_sigpending extern void recalc_sigpending ( void ) 
dequeue_signal extern int dequeue_signal ( s#task_struct * , t#sigset_t * , t#siginfo_t * ) 
flush_signals extern void flush_signals ( s#task_struct * ) 
force_sig extern void force_sig ( int , s#task_struct * ) 
send_sig extern int send_sig ( int , s#task_struct * , int ) 
send_sig_info extern int send_sig_info ( int , s#siginfo * , s#task_struct * ) 
sigprocmask extern int sigprocmask ( int , t#sigset_t * , t#sigset_t * ) 
kernel_sigaction extern void kernel_sigaction ( int , t#__sighandler_t ) 

/* kernel/smp.o */
smp_call_function_single int smp_call_function_single ( int , t#smp_call_func_t , void * , int ) 
smp_call_function_single_async int smp_call_function_single_async ( int , t#call_single_data_t * ) 
smp_call_function_any int smp_call_function_any ( const s#cpumask * , t#smp_call_func_t , void * , int ) 
smp_call_function_many void smp_call_function_many ( const s#cpumask * , t#smp_call_func_t , void * , t#bool ) 
smp_call_function int smp_call_function ( t#smp_call_func_t , void * , int ) 
setup_max_cpus extern unsigned int setup_max_cpus 
nr_cpu_ids extern unsigned int nr_cpu_ids 
on_each_cpu int on_each_cpu ( t#smp_call_func_t , void * , int ) 
on_each_cpu_mask void on_each_cpu_mask ( const s#cpumask * , t#smp_call_func_t , void * , t#bool ) 
on_each_cpu_cond void on_each_cpu_cond ( t#bool ( * ) ( int , void * ) , t#smp_call_func_t , void * , t#bool , t#gfp_t ) 
kick_all_cpus_sync void kick_all_cpus_sync ( void ) 
wake_up_all_idle_cpus void wake_up_all_idle_cpus ( void ) 
smp_call_on_cpu int smp_call_on_cpu ( unsigned int , int ( * ) ( void * ) , void * , t#bool ) 

/* kernel/smpboot.o */
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##posix_acl
s##module
s##writeback_control
s##kstatfs
s##iov_iter
s##swap_info_struct
s##dev_pagemap
s##kmem_cache
s##mem_cgroup
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##bdi_writeback
s##poll_table_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##compat_timespec
s##pollfd
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s#smp_hotplug_thread struct smp_hotplug_thread { s#task_struct * * store ; s#list_head list ; int ( * thread_should_run ) ( unsigned int ) ; void ( * thread_fn ) ( unsigned int ) ; void ( * create ) ( unsigned int ) ; void ( * setup ) ( unsigned int ) ; void ( * cleanup ) ( unsigned int , t#bool ) ; void ( * park ) ( unsigned int ) ; void ( * unpark ) ( unsigned int ) ; t#cpumask_var_t cpumask ; t#bool selfparking ; const char * thread_comm ; } 
smpboot_register_percpu_thread_cpumask int smpboot_register_percpu_thread_cpumask ( s#smp_hotplug_thread * , const s#cpumask * ) 
smpboot_unregister_percpu_thread void smpboot_unregister_percpu_thread ( s#smp_hotplug_thread * ) 
smpboot_update_cpumask_percpu_thread int smpboot_update_cpumask_percpu_thread ( s#smp_hotplug_thread * , const s#cpumask * ) 

/* kernel/softirq.o */
_local_bh_enable extern void _local_bh_enable ( void ) 
__local_bh_enable_ip extern void __local_bh_enable_ip ( unsigned long , unsigned int ) 
__tasklet_schedule extern void __tasklet_schedule ( s#tasklet_struct * ) 
__tasklet_hi_schedule extern void __tasklet_hi_schedule ( s#tasklet_struct * ) 
__tasklet_hi_schedule_first extern void __tasklet_hi_schedule_first ( s#tasklet_struct * ) 
tasklet_init extern void tasklet_init ( s#tasklet_struct * , void ( * ) ( unsigned long ) , unsigned long ) 
tasklet_kill extern void tasklet_kill ( s#tasklet_struct * ) 
e#hrtimer_mode enum hrtimer_mode { HRTIMER_MODE_ABS = 0x0 , HRTIMER_MODE_REL = 0x1 , HRTIMER_MODE_PINNED = 0x02 , HRTIMER_MODE_ABS_PINNED = 0x02 , HRTIMER_MODE_REL_PINNED = 0x03 , } 
tasklet_hrtimer_init extern void tasklet_hrtimer_init ( s#tasklet_hrtimer * , e#hrtimer_restart ( * ) ( s#hrtimer * ) , t#clockid_t , e#hrtimer_mode ) 

/* kernel/stacktrace.o */
print_stack_trace extern void print_stack_trace ( s#stack_trace * , int ) 
snprint_stack_trace extern int snprint_stack_trace ( char * , t#size_t , s#stack_trace * , int ) 

/* kernel/stop_machine.o */
stop_machine int stop_machine ( t#cpu_stop_fn_t , void * , const s#cpumask * ) 

/* kernel/sys.o */
overflowuid extern int overflowuid 
overflowgid extern int overflowgid 
fs_overflowuid extern int fs_overflowuid 
fs_overflowgid extern int fs_overflowgid 

/* kernel/sysctl.o */
proc_dointvec extern int proc_dointvec ( s#ctl_table * , int , void * , t#size_t * , t#loff_t * ) 
proc_douintvec extern int proc_douintvec ( s#ctl_table * , int , void * , t#size_t * , t#loff_t * ) 
proc_dointvec_jiffies extern int proc_dointvec_jiffies ( s#ctl_table * , int , void * , t#size_t * , t#loff_t * ) 
proc_dointvec_minmax extern int proc_dointvec_minmax ( s#ctl_table * , int , void * , t#size_t * , t#loff_t * ) 
proc_douintvec_minmax extern int proc_douintvec_minmax ( s#ctl_table * , int , void * , t#size_t * , t#loff_t * ) 
proc_dointvec_userhz_jiffies extern int proc_dointvec_userhz_jiffies ( s#ctl_table * , int , void * , t#size_t * , t#loff_t * ) 
proc_dointvec_ms_jiffies extern int proc_dointvec_ms_jiffies ( s#ctl_table * , int , void * , t#size_t * , t#loff_t * ) 
proc_dostring extern int proc_dostring ( s#ctl_table * , int , void * , t#size_t * , t#loff_t * ) 
proc_doulongvec_minmax extern int proc_doulongvec_minmax ( s#ctl_table * , int , void * , t#size_t * , t#loff_t * ) 
proc_doulongvec_ms_jiffies_minmax extern int proc_doulongvec_ms_jiffies_minmax ( s#ctl_table * , int , void * , t#size_t * , t#loff_t * ) 

/* kernel/time/alarmtimer.o */
alarm_expires_remaining t#ktime_t alarm_expires_remaining ( const s#alarm * ) 
alarm_init void alarm_init ( s#alarm * , e#alarmtimer_type , e#alarmtimer_restart ( * ) ( s#alarm * , t#ktime_t ) ) 
alarm_start void alarm_start ( s#alarm * , t#ktime_t ) 
alarm_start_relative void alarm_start_relative ( s#alarm * , t#ktime_t ) 
alarm_restart void alarm_restart ( s#alarm * ) 
alarm_try_to_cancel int alarm_try_to_cancel ( s#alarm * ) 
alarm_cancel int alarm_cancel ( s#alarm * ) 
alarm_forward t#u64 alarm_forward ( s#alarm * , t#ktime_t , t#ktime_t ) 
alarm_forward_now t#u64 alarm_forward_now ( s#alarm * , t#ktime_t ) 

/* kernel/time/clockevents.o */
e#clock_event_state enum clock_event_state { CLOCK_EVT_STATE_DETACHED , CLOCK_EVT_STATE_SHUTDOWN , CLOCK_EVT_STATE_PERIODIC , CLOCK_EVT_STATE_ONESHOT , CLOCK_EVT_STATE_ONESHOT_STOPPED , } 
s##sock
s##seq_file
s##vfsmount
s##posix_acl
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##device_private
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##iommu_group
s##iommu_fwspec
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s#clock_event_device struct clock_event_device { void ( * event_handler ) ( s#clock_event_device * ) ; int ( * set_next_event ) ( unsigned long , s#clock_event_device * ) ; int ( * set_next_ktime ) ( t#ktime_t , s#clock_event_device * ) ; t#ktime_t next_event ; t#u64 max_delta_ns ; t#u64 min_delta_ns ; t#u32 mult ; t#u32 shift ; e#clock_event_state state_use_accessors ; unsigned int features ; unsigned long retries ; int ( * set_state_periodic ) ( s#clock_event_device * ) ; int ( * set_state_oneshot ) ( s#clock_event_device * ) ; int ( * set_state_oneshot_stopped ) ( s#clock_event_device * ) ; int ( * set_state_shutdown ) ( s#clock_event_device * ) ; int ( * tick_resume ) ( s#clock_event_device * ) ; void ( * broadcast ) ( const s#cpumask * ) ; void ( * suspend ) ( s#clock_event_device * ) ; void ( * resume ) ( s#clock_event_device * ) ; unsigned long min_delta_ticks ; unsigned long max_delta_ticks ; const char * name ; int rating ; int irq ; int bound_on ; const s#cpumask * cpumask ; s#list_head list ; s#module * owner ; } 
clockevent_delta2ns extern t#u64 clockevent_delta2ns ( unsigned long , s#clock_event_device * ) 
clockevents_unbind_device extern int clockevents_unbind_device ( s#clock_event_device * , int ) 
clockevents_register_device extern void clockevents_register_device ( s#clock_event_device * ) 
clockevents_config_and_register extern void clockevents_config_and_register ( s#clock_event_device * , t#u32 , unsigned long , unsigned long ) 

/* kernel/time/clocksource.o */
clocks_calc_mult_shift extern void clocks_calc_mult_shift ( t#u32 * , t#u32 * , t#u32 , t#u32 , t#u32 ) 
s##sock
s##vfsmount
s##posix_acl
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##bpf_prog_array
s##cgroup_taskset
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##device_private
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##iommu_group
s##iommu_fwspec
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s#clocksource struct clocksource { t#u64 ( * read ) ( s#clocksource * ) ; t#u64 mask ; t#u32 mult ; t#u32 shift ; t#u64 max_idle_ns ; t#u32 maxadj ; t#u64 max_cycles ; const char * name ; s#list_head list ; int rating ; int ( * enable ) ( s#clocksource * ) ; void ( * disable ) ( s#clocksource * ) ; unsigned long flags ; void ( * suspend ) ( s#clocksource * ) ; void ( * resume ) ( s#clocksource * ) ; void ( * mark_unstable ) ( s#clocksource * ) ; void ( * tick_stable ) ( s#clocksource * ) ; s#module * owner ; } 
__clocksource_update_freq_scale extern void __clocksource_update_freq_scale ( s#clocksource * , t#u32 , t#u32 ) 
__clocksource_register_scale extern int __clocksource_register_scale ( s#clocksource * , t#u32 , t#u32 ) 
clocksource_change_rating extern void clocksource_change_rating ( s#clocksource * , int ) 
clocksource_unregister extern int clocksource_unregister ( s#clocksource * ) 

/* kernel/time/hrtimer.o */
ktime_add_safe extern t#ktime_t ktime_add_safe ( const t#ktime_t , const t#ktime_t ) 
hrtimer_resolution extern unsigned int hrtimer_resolution 
hrtimer_forward extern t#u64 hrtimer_forward ( s#hrtimer * , t#ktime_t , t#ktime_t ) 
hrtimer_start_range_ns extern void hrtimer_start_range_ns ( s#hrtimer * , t#ktime_t , t#u64 , const e#hrtimer_mode ) 
hrtimer_try_to_cancel extern int hrtimer_try_to_cancel ( s#hrtimer * ) 
hrtimer_cancel extern int hrtimer_cancel ( s#hrtimer * ) 
__hrtimer_get_remaining extern t#ktime_t __hrtimer_get_remaining ( const s#hrtimer * , t#bool ) 
hrtimer_init extern void hrtimer_init ( s#hrtimer * , t#clockid_t , e#hrtimer_mode ) 
hrtimer_active extern t#bool hrtimer_active ( const s#hrtimer * ) 
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##module
s##writeback_control
s##kstatfs
s##iov_iter
s##kmem_cache
s##fs_pin
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##mem_cgroup
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##device_private
s##sock
s##kernfs_open_node
s##kernfs_iattrs
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##iommu_group
s##iommu_fwspec
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##compat_timespec
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##bpf_prog_array
s##cgroup_taskset
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##ring_buffer
s##bpf_prog
s##static_key_mod
s##trace_array
s##tracer
s##trace_buffer
s##ring_buffer_iter
s##event_filter
s##ftrace_hash
s##numa_group
s##task_delay_info
s##uprobe
s##gs_cb
hrtimer_init_sleeper extern void hrtimer_init_sleeper ( s#hrtimer_sleeper * , s#task_struct * ) 
schedule_hrtimeout_range extern int schedule_hrtimeout_range ( t#ktime_t * , t#u64 , const e#hrtimer_mode ) 
schedule_hrtimeout extern int schedule_hrtimeout ( t#ktime_t * , const e#hrtimer_mode ) 

/* kernel/time/jiffies.o */
jiffies extern unsigned long volatile __attribute__ ( ( __aligned__ ( 256 ) , __section__ ( ".data..cacheline_aligned" ) ) ) jiffies 

/* kernel/time/posix-clock.o */
s##module
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##writeback_control
s##kstatfs
s##iov_iter
s##kmem_cache
s##fs_pin
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##mem_cgroup
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##sock
s##kernfs_open_node
s##kernfs_iattrs
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##fwnode_handle
s##iommu_group
s##iommu_fwspec
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##compat_timespec
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##bpf_prog_array
s##cgroup_taskset
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##ring_buffer
s##bpf_prog
s##static_key_mod
s##trace_array
s##tracer
s##trace_buffer
s##ring_buffer_iter
s##event_filter
s##ftrace_hash
s##numa_group
s##task_delay_info
s##uprobe
s##gs_cb
s##tty_struct
s##tty_audit_buf
__posix_clock_register int __posix_clock_register ( s#posix_clock * , t#dev_t , s#device * ) 
posix_clock_register int posix_clock_register ( s#posix_clock * , t#dev_t ) 
posix_clock_unregister void posix_clock_unregister ( s#posix_clock * ) 

/* kernel/time/posix-timers.o */
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##module
s##writeback_control
s##kstatfs
s##iov_iter
s##kmem_cache
s##fs_pin
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##mem_cgroup
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##sock
s##kernfs_open_node
s##kernfs_iattrs
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##fwnode_handle
s##iommu_group
s##iommu_fwspec
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##compat_timespec
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##bpf_prog_array
s##cgroup_taskset
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##ring_buffer
s##bpf_prog
s##static_key_mod
s##trace_array
s##tracer
s##trace_buffer
s##ring_buffer_iter
s##event_filter
s##ftrace_hash
s##numa_group
s##task_delay_info
s##uprobe
s##gs_cb
s##tty_struct
s##tty_audit_buf
posix_timer_event int posix_timer_event ( s#k_itimer * , int ) 
s#k_clock struct k_clock { int ( * clock_getres ) ( const t#clockid_t , s#timespec * ) ; int ( * clock_set ) ( const t#clockid_t , const s#timespec * ) ; int ( * clock_get ) ( const t#clockid_t , s#timespec * ) ; int ( * clock_adj ) ( const t#clockid_t , s#timex * ) ; int ( * timer_create ) ( s#k_itimer * ) ; int ( * nsleep ) ( const t#clockid_t , int , s#timespec * , s#timespec * ) ; long ( * nsleep_restart ) ( s#restart_block * ) ; int ( * timer_set ) ( s#k_itimer * , int , s#itimerspec * , s#itimerspec * ) ; int ( * timer_del ) ( s#k_itimer * ) ; void ( * timer_get ) ( s#k_itimer * , s#itimerspec * ) ; } 
posix_timers_register_clock void posix_timers_register_clock ( const t#clockid_t , s#k_clock * ) 

/* kernel/time/tick-common.o */
e#tick_broadcast_state enum tick_broadcast_state { TICK_BROADCAST_EXIT , TICK_BROADCAST_ENTER , } 
tick_broadcast_oneshot_control extern int tick_broadcast_oneshot_control ( e#tick_broadcast_state ) 

/* kernel/time/tick-sched.o */
get_cpu_idle_time_us extern t#u64 get_cpu_idle_time_us ( int , t#u64 * ) 
get_cpu_iowait_time_us extern t#u64 get_cpu_iowait_time_us ( int , t#u64 * ) 

/* kernel/time/time.o */
s#timezone struct timezone { int tz_minuteswest ; int tz_dsttime ; } 
sys_tz extern s#timezone sys_tz 
jiffies_to_msecs extern unsigned int jiffies_to_msecs ( const unsigned long ) 
jiffies_to_usecs extern unsigned int jiffies_to_usecs ( const unsigned long ) 
timespec_trunc extern s#timespec timespec_trunc ( s#timespec , unsigned ) 
mktime64 extern t#time64_t mktime64 ( const unsigned int , const unsigned int , const unsigned int , const unsigned int , const unsigned int , const unsigned int ) 
set_normalized_timespec extern void set_normalized_timespec ( s#timespec * , t#time_t , t#s64 ) 
ns_to_timespec extern s#timespec ns_to_timespec ( const t#s64 ) 
ns_to_timeval extern s#timeval ns_to_timeval ( const t#s64 ) 
__msecs_to_jiffies extern unsigned long __msecs_to_jiffies ( const unsigned int ) 
__usecs_to_jiffies extern unsigned long __usecs_to_jiffies ( const unsigned int ) 
timespec64_to_jiffies extern unsigned long timespec64_to_jiffies ( const s#timespec * ) 
jiffies_to_timespec64 extern void jiffies_to_timespec64 ( const unsigned long , s#timespec * ) 
timeval_to_jiffies extern unsigned long timeval_to_jiffies ( const s#timeval * ) 
jiffies_to_timeval extern void jiffies_to_timeval ( const unsigned long , s#timeval * ) 
jiffies_to_clock_t extern t#clock_t jiffies_to_clock_t ( unsigned long ) 
clock_t_to_jiffies extern unsigned long clock_t_to_jiffies ( unsigned long ) 
jiffies_64_to_clock_t extern t#u64 jiffies_64_to_clock_t ( t#u64 ) 
jiffies64_to_nsecs extern t#u64 jiffies64_to_nsecs ( t#u64 ) 
nsecs_to_jiffies64 extern t#u64 nsecs_to_jiffies64 ( t#u64 ) 
nsecs_to_jiffies extern unsigned long nsecs_to_jiffies ( t#u64 ) 

/* kernel/time/timeconv.o */
s#tm struct tm { int tm_sec ; int tm_min ; int tm_hour ; int tm_mday ; int tm_mon ; long tm_year ; int tm_wday ; int tm_yday ; } 
time64_to_tm void time64_to_tm ( t#time64_t , int , s#tm * ) 

/* kernel/time/timecounter.o */
timecounter_init extern void timecounter_init ( s#timecounter * , const s#cyclecounter * , t#u64 ) 
timecounter_read extern t#u64 timecounter_read ( s#timecounter * ) 
timecounter_cyc2time extern t#u64 timecounter_cyc2time ( s#timecounter * , t#u64 ) 

/* kernel/time/timekeeping.o */
ktime_get_mono_fast_ns extern t#u64 ktime_get_mono_fast_ns ( void ) 
ktime_get_raw_fast_ns extern t#u64 ktime_get_raw_fast_ns ( void ) 
ktime_get_boot_fast_ns extern t#u64 ktime_get_boot_fast_ns ( void ) 
pvclock_gtod_register_notifier extern int pvclock_gtod_register_notifier ( s#notifier_block * ) 
pvclock_gtod_unregister_notifier extern int pvclock_gtod_unregister_notifier ( s#notifier_block * ) 
__getnstimeofday64 extern int __getnstimeofday64 ( s#timespec * ) 
getnstimeofday64 extern void getnstimeofday64 ( s#timespec * ) 
ktime_get extern t#ktime_t ktime_get ( void ) 
ktime_get_resolution_ns extern t#u32 ktime_get_resolution_ns ( void ) 
e#tk_offsets enum tk_offsets { TK_OFFS_REAL , TK_OFFS_BOOT , TK_OFFS_TAI , TK_OFFS_MAX , } 
ktime_get_with_offset extern t#ktime_t ktime_get_with_offset ( e#tk_offsets ) 
ktime_mono_to_any extern t#ktime_t ktime_mono_to_any ( t#ktime_t , e#tk_offsets ) 
ktime_get_raw extern t#ktime_t ktime_get_raw ( void ) 
ktime_get_ts64 extern void ktime_get_ts64 ( s#timespec * ) 
ktime_get_seconds extern t#time64_t ktime_get_seconds ( void ) 
ktime_get_real_seconds extern t#time64_t ktime_get_real_seconds ( void ) 
s#system_time_snapshot struct system_time_snapshot { t#u64 cycles ; t#ktime_t real ; t#ktime_t raw ; unsigned int clock_was_set_seq ; t#u8 cs_was_changed_seq ; } 
ktime_get_snapshot extern void ktime_get_snapshot ( s#system_time_snapshot * ) 
s##sock
s##seq_file
s##vfsmount
s##posix_acl
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##device_private
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##iommu_group
s##iommu_fwspec
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s#system_counterval_t struct system_counterval_t { t#u64 cycles ; s#clocksource * cs ; } 
get_device_system_crosststamp extern int get_device_system_crosststamp ( int ( * ) ( t#ktime_t * , s#system_counterval_t * , void * ) , void * , s#system_time_snapshot * , s#system_device_crosststamp * ) 
do_gettimeofday extern void do_gettimeofday ( s#timeval * ) 
do_settimeofday64 extern int do_settimeofday64 ( const s#timespec * ) 
timekeeping_inject_offset extern int timekeeping_inject_offset ( s#timespec * ) 
getrawmonotonic64 extern void getrawmonotonic64 ( s#timespec * ) 
getboottime64 extern void getboottime64 ( s#timespec * ) 
get_seconds unsigned long get_seconds ( void ) 
current_kernel_time64 s#timespec current_kernel_time64 ( void ) 
get_monotonic_coarse64 s#timespec get_monotonic_coarse64 ( void ) 

/* kernel/time/timer.o */
jiffies_64 extern t#u64 __attribute__ ( ( __aligned__ ( 256 ) , __section__ ( ".data..cacheline_aligned" ) ) ) jiffies_64 
__round_jiffies unsigned long __round_jiffies ( unsigned long , int ) 
__round_jiffies_relative unsigned long __round_jiffies_relative ( unsigned long , int ) 
round_jiffies unsigned long round_jiffies ( unsigned long ) 
round_jiffies_relative unsigned long round_jiffies_relative ( unsigned long ) 
__round_jiffies_up unsigned long __round_jiffies_up ( unsigned long , int ) 
__round_jiffies_up_relative unsigned long __round_jiffies_up_relative ( unsigned long , int ) 
round_jiffies_up unsigned long round_jiffies_up ( unsigned long ) 
round_jiffies_up_relative unsigned long round_jiffies_up_relative ( unsigned long ) 
init_timer_key void init_timer_key ( s#timer_list * , unsigned int , const char * , s#lock_class_key * ) 
mod_timer_pending extern int mod_timer_pending ( s#timer_list * , unsigned long ) 
mod_timer extern int mod_timer ( s#timer_list * , unsigned long ) 
timer_reduce extern int timer_reduce ( s#timer_list * , unsigned long ) 
add_timer extern void add_timer ( s#timer_list * ) 
add_timer_on extern void add_timer_on ( s#timer_list * , int ) 
del_timer extern int del_timer ( s#timer_list * ) 
try_to_del_timer_sync extern int try_to_del_timer_sync ( s#timer_list * ) 
del_timer_sync extern int del_timer_sync ( s#timer_list * ) 
schedule_timeout extern long schedule_timeout ( long ) 
schedule_timeout_interruptible extern long schedule_timeout_interruptible ( long ) 
schedule_timeout_killable extern long schedule_timeout_killable ( long ) 
schedule_timeout_uninterruptible extern long schedule_timeout_uninterruptible ( long ) 
schedule_timeout_idle extern long schedule_timeout_idle ( long ) 
msleep void msleep ( unsigned int ) 
msleep_interruptible unsigned long msleep_interruptible ( unsigned int ) 
usleep_range void usleep_range ( unsigned long , unsigned long ) 

/* kernel/torture.o */
torture_offline t#bool torture_offline ( int , long * , long * , unsigned long * , int * , int * ) 
torture_online t#bool torture_online ( int , long * , long * , unsigned long * , int * , int * ) 
torture_onoff_init int torture_onoff_init ( long , long ) 
torture_onoff_cleanup void torture_onoff_cleanup ( void ) 
torture_onoff_stats void torture_onoff_stats ( void ) 
torture_onoff_failures t#bool torture_onoff_failures ( void ) 
s#torture_random_state struct torture_random_state { unsigned long trs_state ; long trs_count ; } 
torture_random unsigned long torture_random ( s#torture_random_state * ) 
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##sock
s##bio_vec
s##pipe_inode_info
s##poll_table_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##mem_cgroup
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##fwnode_handle
s##iommu_group
s##iommu_fwspec
s##kmem_cache
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##bpf_prog_array
s##cgroup_taskset
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
torture_shuffle_task_register void torture_shuffle_task_register ( s#task_struct * ) 
torture_shuffle_init int torture_shuffle_init ( long ) 
torture_shuffle_cleanup void torture_shuffle_cleanup ( void ) 
torture_shutdown_absorb void torture_shutdown_absorb ( const char * ) 
torture_shutdown_init int torture_shutdown_init ( int , void ( * ) ( void ) ) 
stutter_wait void stutter_wait ( const char * ) 
torture_stutter_init int torture_stutter_init ( int ) 
torture_init_begin t#bool torture_init_begin ( char * , t#bool , int * ) 
torture_init_end void torture_init_end ( void ) 
torture_cleanup_begin t#bool torture_cleanup_begin ( void ) 
torture_cleanup_end void torture_cleanup_end ( void ) 
torture_must_stop t#bool torture_must_stop ( void ) 
torture_must_stop_irq t#bool torture_must_stop_irq ( void ) 
torture_kthread_stopping void torture_kthread_stopping ( char * ) 
_torture_create_kthread int _torture_create_kthread ( int ( * ) ( void * ) , void * , char * , char * , char * , s#task_struct * * ) 
_torture_stop_kthread void _torture_stop_kthread ( char * , s#task_struct * * ) 

/* kernel/trace/blktrace.o */
s##posix_acl
s##vfsmount
s##module
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##mmu_notifier_mm
s##xol_area
s##kmem_cache
s##fs_pin
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##device_private
s##sock
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##iommu_group
s##iommu_fwspec
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##workqueue_struct
s##mtd_info
s##blk_mq_debugfs_attr
s##blk_queue_stats
s##rq_wb
s##bsg_job
s##throtl_data
s##hd_geometry
s##pr_ops
s##timer_rand_state
s##disk_events
s##badblocks
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##ring_buffer
s##bpf_prog
s##static_key_mod
s#trace_array_cpu struct trace_array_cpu { t#atomic_t disabled ; void * buffer_page ; unsigned long entries ; unsigned long saved_latency ; unsigned long critical_start ; unsigned long critical_end ; unsigned long critical_sequence ; unsigned long nice ; unsigned long policy ; unsigned long rt_priority ; unsigned long skipped_entries ; t#u64 preempt_timestamp ; t#pid_t pid ; t#kuid_t uid ; char comm [ 16 ] ; t#bool ignore_pid ; t#bool ftrace_ignore_pid ; } 
s#trace_buffer struct trace_buffer { s#trace_array * tr ; s#ring_buffer * buffer ; s#trace_array_cpu * data ; t#u64 time_start ; int cpu ; } 
s#trace_pid_list struct trace_pid_list { int pid_max ; unsigned long * pids ; } 
t#filter_pred_fn_t typedef int ( * filter_pred_fn_t ) ( s#filter_pred * , void * ) 
t#regex_match_func typedef int ( * regex_match_func ) ( char * , s#regex * , int ) 
s#regex struct regex { char pattern [ 256 ] ; int len ; int field_len ; t#regex_match_func match ; } 
s#ftrace_event_field struct ftrace_event_field { s#list_head link ; const char * name ; const char * type ; int filter_type ; int offset ; int size ; int is_signed ; } 
s#filter_pred struct filter_pred { t#filter_pred_fn_t fn ; t#u64 val ; s#regex regex ; unsigned short * ops ; s#ftrace_event_field * field ; int offset ; int not ; int op ; unsigned short index ; unsigned short parent ; unsigned short left ; unsigned short right ; } 
s#event_filter struct event_filter { int n_preds ; int a_preds ; s#filter_pred * preds ; s#filter_pred * root ; char * filter_string ; } 
s#event_subsystem struct event_subsystem { s#list_head list ; const char * name ; s#event_filter * filter ; int ref_count ; } 
s#trace_subsystem_dir struct trace_subsystem_dir { s#list_head list ; s#event_subsystem * subsystem ; s#trace_array * tr ; s#dentry * entry ; int ref_count ; int nr_events ; } 
s#trace_event_file struct trace_event_file { s#list_head list ; s#trace_event_call * event_call ; s#event_filter * filter ; s#dentry * dir ; s#trace_array * tr ; s#trace_subsystem_dir * system ; s#list_head triggers ; unsigned long flags ; t#atomic_t sm_ref ; t#atomic_t tm_ref ; } 
s##pipe_inode_info
s#tracer_opt struct tracer_opt { const char * name ; t#u32 bit ; } 
s#tracer_flags struct tracer_flags { t#u32 val ; s#tracer_opt * opts ; s#tracer * trace ; } 
s#tracer struct tracer { const char * name ; int ( * init ) ( s#trace_array * ) ; void ( * reset ) ( s#trace_array * ) ; void ( * start ) ( s#trace_array * ) ; void ( * stop ) ( s#trace_array * ) ; int ( * update_thresh ) ( s#trace_array * ) ; void ( * open ) ( s#trace_iterator * ) ; void ( * pipe_open ) ( s#trace_iterator * ) ; void ( * close ) ( s#trace_iterator * ) ; void ( * pipe_close ) ( s#trace_iterator * ) ; t#ssize_t ( * read ) ( s#trace_iterator * , s#file * , char * , t#size_t , t#loff_t * ) ; t#ssize_t ( * splice_read ) ( s#trace_iterator * , s#file * , t#loff_t * , s#pipe_inode_info * , t#size_t , unsigned int ) ; void ( * print_header ) ( s#seq_file * ) ; e#print_line_t ( * print_line ) ( s#trace_iterator * ) ; int ( * set_flag ) ( s#trace_array * , t#u32 , t#u32 , int ) ; int ( * flag_changed ) ( s#trace_array * , t#u32 , int ) ; s#tracer * next ; s#tracer_flags * flags ; int enabled ; int ref ; t#bool print_max ; t#bool allow_instances ; t#bool use_max_tr ; } 
s#trace_option_dentry struct trace_option_dentry { s#tracer_opt * opt ; s#tracer_flags * flags ; s#trace_array * tr ; s#dentry * entry ; } 
s#trace_options struct trace_options { s#tracer * tracer ; s#trace_option_dentry * topts ; } 
s#ftrace_hash struct ftrace_hash { unsigned long size_bits ; s#hlist_head * buckets ; unsigned long count ; s#callback_head rcu ; } 
s#trace_array struct trace_array { s#list_head list ; char * name ; s#trace_buffer trace_buffer ; s#trace_buffer max_buffer ; t#bool allocated_snapshot ; unsigned long max_latency ; s#trace_pid_list * filtered_pids ; t#arch_spinlock_t max_lock ; int buffer_disabled ; int sys_refcount_enter ; int sys_refcount_exit ; s#trace_event_file * enter_syscall_files [ 381 ] ; s#trace_event_file * exit_syscall_files [ 381 ] ; int stop_count ; int clock_id ; int nr_topts ; s#tracer * current_trace ; unsigned int trace_flags ; unsigned char trace_flags_index [ 32 ] ; unsigned int flags ; t#raw_spinlock_t start_lock ; s#dentry * dir ; s#dentry * options ; s#dentry * percpu_dir ; s#dentry * event_dir ; s#trace_options * topts ; s#list_head systems ; s#list_head events ; t#cpumask_var_t tracing_cpumask ; int ref ; s#ftrace_ops * ops ; s#trace_pid_list * function_pids ; s#list_head func_probes ; int function_enabled ; } 
s##ring_buffer_iter
s##numa_group
s##task_delay_info
s##uprobe
s##gs_cb
s##swap_info_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
__trace_note_message extern __attribute__ ( ( format ( printf , 3 , 4 ) ) ) void __trace_note_message ( s#blk_trace * , s#blkcg * , const char * , ... ) 
blk_trace_remove extern int blk_trace_remove ( s#request_queue * ) 
blk_trace_setup extern int blk_trace_setup ( s#request_queue * , char * , t#dev_t , s#block_device * , char * ) 
blk_trace_startstop extern int blk_trace_startstop ( s#request_queue * , int ) 
blk_add_driver_data extern void blk_add_driver_data ( s#request_queue * , s#request * , void * , t#size_t ) 
blk_fill_rwbs extern void blk_fill_rwbs ( char * , unsigned int , int ) 

/* kernel/trace/bpf_trace.o */
s##static_key_mod
s##ring_buffer
s##posix_acl
s##vfsmount
s##module
s##bio_vec
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##mmu_notifier_mm
s##xol_area
s##kmem_cache
s##fs_pin
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##sock
s##uevent_sock
s##sec_path
s##neigh_parms
s##neighbour
s##udp_tunnel_info
s##btf
s##bpf_verifier_env
s##xdp_umem
s##switchdev_ops
s##l3mdev_ops
s##ndisc_ops
s##xfrm_state
s##tls_crypto_info
s##tls_context
s##kernfs_open_node
s##kernfs_iattrs
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##device_private
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##iommu_group
s##iommu_fwspec
s##phy_device
s##sfp_bus
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##xt_table
s##inet_hashinfo
s##fib_notifier_ops
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##workqueue_struct
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##bpf_cgroup_storage_map
s##cgroup_taskset
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##robust_list_head
s##futex_pi_state
s##numa_group
s##task_delay_info
s##uprobe
s##gs_cb
s##writeback_control
s##swap_info_struct
s##nlm_lockowner
s##nfs4_lock_state
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##bdi_writeback
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##ring_buffer_iter
trace_call_bpf unsigned int trace_call_bpf ( s#trace_event_call * , void * ) 
bpf_trace_run1 void bpf_trace_run1 ( s#bpf_prog * , t#u64 ) 
bpf_trace_run2 void bpf_trace_run2 ( s#bpf_prog * , t#u64 , t#u64 ) 
bpf_trace_run3 void bpf_trace_run3 ( s#bpf_prog * , t#u64 , t#u64 , t#u64 ) 
bpf_trace_run4 void bpf_trace_run4 ( s#bpf_prog * , t#u64 , t#u64 , t#u64 , t#u64 ) 
bpf_trace_run5 void bpf_trace_run5 ( s#bpf_prog * , t#u64 , t#u64 , t#u64 , t#u64 , t#u64 ) 
bpf_trace_run6 void bpf_trace_run6 ( s#bpf_prog * , t#u64 , t#u64 , t#u64 , t#u64 , t#u64 , t#u64 ) 
bpf_trace_run7 void bpf_trace_run7 ( s#bpf_prog * , t#u64 , t#u64 , t#u64 , t#u64 , t#u64 , t#u64 , t#u64 ) 
bpf_trace_run8 void bpf_trace_run8 ( s#bpf_prog * , t#u64 , t#u64 , t#u64 , t#u64 , t#u64 , t#u64 , t#u64 , t#u64 ) 
bpf_trace_run9 void bpf_trace_run9 ( s#bpf_prog * , t#u64 , t#u64 , t#u64 , t#u64 , t#u64 , t#u64 , t#u64 , t#u64 , t#u64 ) 
bpf_trace_run10 void bpf_trace_run10 ( s#bpf_prog * , t#u64 , t#u64 , t#u64 , t#u64 , t#u64 , t#u64 , t#u64 , t#u64 , t#u64 , t#u64 ) 
bpf_trace_run11 void bpf_trace_run11 ( s#bpf_prog * , t#u64 , t#u64 , t#u64 , t#u64 , t#u64 , t#u64 , t#u64 , t#u64 , t#u64 , t#u64 , t#u64 ) 
bpf_trace_run12 void bpf_trace_run12 ( s#bpf_prog * , t#u64 , t#u64 , t#u64 , t#u64 , t#u64 , t#u64 , t#u64 , t#u64 , t#u64 , t#u64 , t#u64 , t#u64 ) 

/* kernel/trace/ftrace.o */
ftrace_set_filter_ip int ftrace_set_filter_ip ( s#ftrace_ops * , unsigned long , int , int ) 
ftrace_ops_set_global_filter void ftrace_ops_set_global_filter ( s#ftrace_ops * ) 
ftrace_set_filter int ftrace_set_filter ( s#ftrace_ops * , unsigned char * , int , int ) 
ftrace_set_notrace int ftrace_set_notrace ( s#ftrace_ops * , unsigned char * , int , int ) 
ftrace_set_global_filter void ftrace_set_global_filter ( unsigned char * , int , int ) 
ftrace_set_global_notrace void ftrace_set_global_notrace ( unsigned char * , int , int ) 
register_ftrace_function int register_ftrace_function ( s#ftrace_ops * ) 
unregister_ftrace_function int unregister_ftrace_function ( s#ftrace_ops * ) 

/* kernel/trace/power-traces.o */
s##static_key_mod
__tracepoint_suspend_resume extern s#tracepoint __tracepoint_suspend_resume 
__tracepoint_cpu_idle extern s#tracepoint __tracepoint_cpu_idle 
__tracepoint_cpu_frequency extern s#tracepoint __tracepoint_cpu_frequency 
__tracepoint_powernv_throttle extern s#tracepoint __tracepoint_powernv_throttle 

/* kernel/trace/ring_buffer.o */
s#ring_buffer_event struct ring_buffer_event { ; t#u32 type_len : 5 , time_delta : 27 ; ; t#u32 array [ ] ; } 
ring_buffer_event_length unsigned ring_buffer_event_length ( s#ring_buffer_event * ) 
ring_buffer_event_data void * ring_buffer_event_data ( s#ring_buffer_event * ) 
s##ring_buffer
ring_buffer_time_stamp t#u64 ring_buffer_time_stamp ( s#ring_buffer * , int ) 
ring_buffer_normalize_time_stamp void ring_buffer_normalize_time_stamp ( s#ring_buffer * , int , t#u64 * ) 
__ring_buffer_alloc s#ring_buffer * __ring_buffer_alloc ( unsigned long , unsigned , s#lock_class_key * ) 
ring_buffer_free void ring_buffer_free ( s#ring_buffer * ) 
ring_buffer_resize int ring_buffer_resize ( s#ring_buffer * , unsigned long , int ) 
ring_buffer_change_overwrite void ring_buffer_change_overwrite ( s#ring_buffer * , int ) 
ring_buffer_unlock_commit int ring_buffer_unlock_commit ( s#ring_buffer * , s#ring_buffer_event * ) 
ring_buffer_lock_reserve s#ring_buffer_event * ring_buffer_lock_reserve ( s#ring_buffer * , unsigned long ) 
ring_buffer_discard_commit void ring_buffer_discard_commit ( s#ring_buffer * , s#ring_buffer_event * ) 
ring_buffer_write int ring_buffer_write ( s#ring_buffer * , unsigned long , void * ) 
ring_buffer_record_disable void ring_buffer_record_disable ( s#ring_buffer * ) 
ring_buffer_record_enable void ring_buffer_record_enable ( s#ring_buffer * ) 
ring_buffer_record_off void ring_buffer_record_off ( s#ring_buffer * ) 
ring_buffer_record_on void ring_buffer_record_on ( s#ring_buffer * ) 
ring_buffer_record_disable_cpu void ring_buffer_record_disable_cpu ( s#ring_buffer * , int ) 
ring_buffer_record_enable_cpu void ring_buffer_record_enable_cpu ( s#ring_buffer * , int ) 
ring_buffer_oldest_event_ts t#u64 ring_buffer_oldest_event_ts ( s#ring_buffer * , int ) 
ring_buffer_bytes_cpu unsigned long ring_buffer_bytes_cpu ( s#ring_buffer * , int ) 
ring_buffer_entries_cpu unsigned long ring_buffer_entries_cpu ( s#ring_buffer * , int ) 
ring_buffer_overrun_cpu unsigned long ring_buffer_overrun_cpu ( s#ring_buffer * , int ) 
ring_buffer_commit_overrun_cpu unsigned long ring_buffer_commit_overrun_cpu ( s#ring_buffer * , int ) 
ring_buffer_dropped_events_cpu unsigned long ring_buffer_dropped_events_cpu ( s#ring_buffer * , int ) 
ring_buffer_read_events_cpu unsigned long ring_buffer_read_events_cpu ( s#ring_buffer * , int ) 
ring_buffer_entries unsigned long ring_buffer_entries ( s#ring_buffer * ) 
ring_buffer_overruns unsigned long ring_buffer_overruns ( s#ring_buffer * ) 
s##ring_buffer_iter
ring_buffer_iter_reset void ring_buffer_iter_reset ( s#ring_buffer_iter * ) 
ring_buffer_iter_empty int ring_buffer_iter_empty ( s#ring_buffer_iter * ) 
ring_buffer_peek s#ring_buffer_event * ring_buffer_peek ( s#ring_buffer * , int , t#u64 * , unsigned long * ) 
ring_buffer_iter_peek s#ring_buffer_event * ring_buffer_iter_peek ( s#ring_buffer_iter * , t#u64 * ) 
ring_buffer_consume s#ring_buffer_event * ring_buffer_consume ( s#ring_buffer * , int , t#u64 * , unsigned long * ) 
ring_buffer_read_prepare s#ring_buffer_iter * ring_buffer_read_prepare ( s#ring_buffer * , int ) 
ring_buffer_read_prepare_sync void ring_buffer_read_prepare_sync ( void ) 
ring_buffer_read_start void ring_buffer_read_start ( s#ring_buffer_iter * ) 
ring_buffer_read_finish void ring_buffer_read_finish ( s#ring_buffer_iter * ) 
ring_buffer_read s#ring_buffer_event * ring_buffer_read ( s#ring_buffer_iter * , t#u64 * ) 
ring_buffer_size unsigned long ring_buffer_size ( s#ring_buffer * , int ) 
ring_buffer_reset_cpu void ring_buffer_reset_cpu ( s#ring_buffer * , int ) 
ring_buffer_reset void ring_buffer_reset ( s#ring_buffer * ) 
ring_buffer_empty t#bool ring_buffer_empty ( s#ring_buffer * ) 
ring_buffer_empty_cpu t#bool ring_buffer_empty_cpu ( s#ring_buffer * , int ) 
ring_buffer_swap_cpu int ring_buffer_swap_cpu ( s#ring_buffer * , s#ring_buffer * , int ) 
ring_buffer_alloc_read_page void * ring_buffer_alloc_read_page ( s#ring_buffer * , int ) 
ring_buffer_free_read_page void ring_buffer_free_read_page ( s#ring_buffer * , int , void * ) 
ring_buffer_read_page int ring_buffer_read_page ( s#ring_buffer * , void * * , t#size_t , int , int ) 

/* kernel/trace/rpm-traces.o */
s##static_key_mod
__tracepoint_rpm_return_int extern s#tracepoint __tracepoint_rpm_return_int 
__tracepoint_rpm_idle extern s#tracepoint __tracepoint_rpm_idle 
__tracepoint_rpm_suspend extern s#tracepoint __tracepoint_rpm_suspend 
__tracepoint_rpm_resume extern s#tracepoint __tracepoint_rpm_resume 

/* kernel/trace/trace.o */
tracing_on void tracing_on ( void ) 
__trace_puts extern int __trace_puts ( unsigned long , const char * , int ) 
__trace_bputs extern int __trace_bputs ( unsigned long , const char * ) 
tracing_snapshot void tracing_snapshot ( void ) 
tracing_alloc_snapshot extern int tracing_alloc_snapshot ( void ) 
tracing_snapshot_alloc void tracing_snapshot_alloc ( void ) 
tracing_off void tracing_off ( void ) 
tracing_is_on int tracing_is_on ( void ) 
trace_handle_return e#print_line_t trace_handle_return ( s#trace_seq * ) 
tracing_generic_entry_update void tracing_generic_entry_update ( s#trace_entry * , unsigned long , int ) 
s##ring_buffer
s##static_key_mod
s##posix_acl
s##sock
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##kmem_cache
s##fs_pin
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##bpf_prog_array
s##cgroup_taskset
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##device_private
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##iommu_group
s##iommu_fwspec
s##workqueue_struct
s##swap_info_struct
s##mem_cgroup
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##bpf_prog
s##mempolicy
s##numa_group
s##task_delay_info
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##mtd_info
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##ring_buffer_iter
trace_event_buffer_lock_reserve s#ring_buffer_event * trace_event_buffer_lock_reserve ( s#ring_buffer * * , s#trace_event_file * , int , unsigned long , unsigned long , int ) 
s#trace_event_buffer struct trace_event_buffer { s#ring_buffer * buffer ; s#ring_buffer_event * event ; s#trace_event_file * trace_file ; void * entry ; unsigned long flags ; int pc ; } 
trace_event_buffer_commit void trace_event_buffer_commit ( s#trace_event_buffer * ) 
s#trace_export struct trace_export { s#trace_export * next ; void ( * write ) ( const void * , unsigned int ) ; } 
register_ftrace_export int register_ftrace_export ( s#trace_export * ) 
unregister_ftrace_export int unregister_ftrace_export ( s#trace_export * ) 
trace_vbprintk extern int trace_vbprintk ( unsigned long , const char * , t#va_list ) 
trace_vprintk extern int trace_vprintk ( unsigned long , const char * , t#va_list ) 
e#ftrace_dump_mode enum ftrace_dump_mode { DUMP_NONE , DUMP_ALL , DUMP_ORIG , } 
ftrace_dump extern void ftrace_dump ( e#ftrace_dump_mode ) 

/* kernel/trace/trace_clock.o */
trace_clock_local extern t#u64 __attribute__ ( ( hotpatch ( 0 , 0 ) ) ) trace_clock_local ( void ) 
trace_clock extern t#u64 __attribute__ ( ( hotpatch ( 0 , 0 ) ) ) trace_clock ( void ) 
trace_clock_jiffies extern t#u64 __attribute__ ( ( hotpatch ( 0 , 0 ) ) ) trace_clock_jiffies ( void ) 
trace_clock_global extern t#u64 __attribute__ ( ( hotpatch ( 0 , 0 ) ) ) trace_clock_global ( void ) 

/* kernel/trace/trace_event_perf.o */
perf_trace_buf_alloc void * perf_trace_buf_alloc ( int , s#pt_regs * * , int * ) 

/* kernel/trace/trace_events.o */
s##static_key_mod
s##ring_buffer
s##posix_acl
s##vfsmount
s##sock
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##kmem_cache
s##fs_pin
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##bpf_prog_array
s##cgroup_taskset
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##robust_list_head
s##futex_pi_state
s##device_private
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##iommu_group
s##iommu_fwspec
s##bpf_prog
s##mempolicy
s##numa_group
s##pipe_inode_info
s##writeback_control
s##bio_vec
s##swap_info_struct
s##mem_cgroup
s##task_delay_info
s##uprobe
s##gs_cb
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##nlm_lockowner
s##nfs4_lock_state
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##ring_buffer_iter
trace_define_field extern int trace_define_field ( s#trace_event_call * , const char * , const char * , int , int , int , int ) 
trace_event_raw_init extern int trace_event_raw_init ( s#trace_event_call * ) 
trace_event_ignore_this_pid t#bool trace_event_ignore_this_pid ( s#trace_event_file * ) 
trace_event_buffer_reserve void * trace_event_buffer_reserve ( s#trace_event_buffer * , s#trace_event_file * , unsigned long ) 
trace_event_reg extern int trace_event_reg ( s#trace_event_call * , e#trace_reg , void * ) 
trace_set_clr_event int trace_set_clr_event ( const char * , const char * , int ) 

/* kernel/trace/trace_events_filter.o */
filter_match_preds extern int filter_match_preds ( s#event_filter * , void * ) 

/* kernel/trace/trace_events_trigger.o */
e#event_trigger_type enum event_trigger_type { ETT_NONE = ( 0 ) , ETT_TRACE_ONOFF = ( 1 << 0 ) , ETT_SNAPSHOT = ( 1 << 1 ) , ETT_STACKTRACE = ( 1 << 2 ) , ETT_EVENT_ENABLE = ( 1 << 3 ) , ETT_EVENT_HIST = ( 1 << 4 ) , ETT_HIST_ENABLE = ( 1 << 5 ) , } 
s##static_key_mod
s##ring_buffer
s##vfsmount
s##posix_acl
s##sock
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##kmem_cache
s##fs_pin
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##bpf_prog_array
s##cgroup_taskset
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##robust_list_head
s##futex_pi_state
s##device_private
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##iommu_group
s##iommu_fwspec
s##bpf_prog
s##mempolicy
s##numa_group
s##pipe_inode_info
s##writeback_control
s##bio_vec
s##swap_info_struct
s##mem_cgroup
s##task_delay_info
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##ring_buffer_iter
event_triggers_call extern e#event_trigger_type event_triggers_call ( s#trace_event_file * , void * ) 
event_triggers_post_call extern void event_triggers_post_call ( s#trace_event_file * , e#event_trigger_type , void * ) 

/* kernel/trace/trace_output.o */
s#trace_print_flags struct trace_print_flags { unsigned long mask ; const char * name ; } 
trace_print_flags_seq const char * trace_print_flags_seq ( s#trace_seq * , const char * , unsigned long , const s#trace_print_flags * ) 
trace_print_symbols_seq const char * trace_print_symbols_seq ( s#trace_seq * , unsigned long , const s#trace_print_flags * ) 
trace_print_bitmask_seq const char * trace_print_bitmask_seq ( s#trace_seq * , void * , unsigned int ) 
trace_print_hex_seq const char * trace_print_hex_seq ( s#trace_seq * , const unsigned char * , int , t#bool ) 
trace_print_array_seq const char * trace_print_array_seq ( s#trace_seq * , const void * , int , t#size_t ) 
s##ring_buffer
s##static_key_mod
s##bpf_prog_array
s##sock
s##vfsmount
s##posix_acl
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##mmu_notifier_mm
s##xol_area
s##kmem_cache
s##fs_pin
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##cgroup_taskset
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##robust_list_head
s##futex_pi_state
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##device_private
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##iommu_group
s##iommu_fwspec
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##bpf_prog
s##ring_buffer_iter
trace_raw_output_prep int trace_raw_output_prep ( s#trace_iterator * , s#trace_event * ) 
trace_output_call int trace_output_call ( s#trace_iterator * , char * , char * , ... ) 
register_trace_event extern int register_trace_event ( s#trace_event * ) 
unregister_trace_event extern int unregister_trace_event ( s#trace_event * ) 

/* kernel/trace/trace_printk.o */
__trace_bprintk extern __attribute__ ( ( format ( printf , 2 , 3 ) ) ) int __trace_bprintk ( unsigned long , const char * , ... ) 
__ftrace_vbprintk extern __attribute__ ( ( format ( printf , 2 , 0 ) ) ) int __ftrace_vbprintk ( unsigned long , const char * , t#va_list ) 
__trace_printk extern __attribute__ ( ( format ( printf , 2 , 3 ) ) ) int __trace_printk ( unsigned long , const char * , ... ) 
__ftrace_vprintk extern __attribute__ ( ( format ( printf , 2 , 0 ) ) ) int __ftrace_vprintk ( unsigned long , const char * , t#va_list ) 

/* kernel/trace/trace_seq.o */
trace_seq_printf extern __attribute__ ( ( format ( printf , 2 , 3 ) ) ) void trace_seq_printf ( s#trace_seq * , const char * , ... ) 
trace_seq_bitmask extern void trace_seq_bitmask ( s#trace_seq * , const unsigned long * , int ) 
trace_seq_vprintf extern __attribute__ ( ( format ( printf , 2 , 0 ) ) ) void trace_seq_vprintf ( s#trace_seq * , const char * , t#va_list ) 
trace_seq_bprintf extern void trace_seq_bprintf ( s#trace_seq * , const char * , const t#u32 * ) 
trace_seq_puts extern void trace_seq_puts ( s#trace_seq * , const char * ) 
trace_seq_putc extern void trace_seq_putc ( s#trace_seq * , unsigned char ) 
trace_seq_putmem extern void trace_seq_putmem ( s#trace_seq * , const void * , unsigned int ) 
trace_seq_putmem_hex extern void trace_seq_putmem_hex ( s#trace_seq * , const void * , unsigned int ) 
s##vfsmount
s##posix_acl
s##module
s##iov_iter
s##poll_table_struct
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##compat_timespec
s##pollfd
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##pipe_inode_info
s##writeback_control
s##swap_info_struct
s##dev_pagemap
s##kmem_cache
s##mem_cgroup
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##vm_operations_struct
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
trace_seq_path extern int trace_seq_path ( s#trace_seq * , const s#path * ) 
trace_seq_to_user extern int trace_seq_to_user ( s#trace_seq * , char * , int ) 

/* kernel/tracepoint.o */
s##static_key_mod
tracepoint_probe_register_prio extern int tracepoint_probe_register_prio ( s#tracepoint * , void * , void * , int ) 
tracepoint_probe_register extern int tracepoint_probe_register ( s#tracepoint * , void * , void * ) 
tracepoint_probe_unregister extern int tracepoint_probe_unregister ( s#tracepoint * , void * , void * ) 
register_tracepoint_module_notifier extern int register_tracepoint_module_notifier ( s#notifier_block * ) 
unregister_tracepoint_module_notifier extern int unregister_tracepoint_module_notifier ( s#notifier_block * ) 
for_each_kernel_tracepoint extern void for_each_kernel_tracepoint ( void ( * ) ( s#tracepoint * , void * ) , void * ) 

/* kernel/unsupported-feature.o */
s##module
suse_allow_unsupported_param_ops extern s#kernel_param_ops suse_allow_unsupported_param_ops 
s#unsupported_feature struct unsupported_feature { const char * subsys_name ; t#bool allowed ; } 
suse_mark_unsupported void suse_mark_unsupported ( const s#unsupported_feature * , s#module * ) 

/* kernel/user.o */
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##mm_struct
s##vm_area_struct
s##compat_timespec
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##cgroup_namespace
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##pipe_inode_info
s##page
s##task_delay_info
s##ftrace_ret_stack
s##mem_cgroup
s##uprobe_task
s##gs_cb
s##key_user
s##key_type
s##assoc_array_ptr
init_user_ns extern s#user_namespace init_user_ns 

/* kernel/user_namespace.o */
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##posix_acl
s##module
s##writeback_control
s##kstatfs
s##iov_iter
s##swap_info_struct
s##dev_pagemap
s##kmem_cache
s##mem_cgroup
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##poll_table_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##key_user
s##assoc_array_ptr
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##compat_timespec
s##pollfd
s##nameidata
s##sem_undo_list
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##cgroup_namespace
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
__put_user_ns extern void __put_user_ns ( s#user_namespace * ) 
make_kuid extern t#kuid_t make_kuid ( s#user_namespace * , t#uid_t ) 
from_kuid extern t#uid_t from_kuid ( s#user_namespace * , t#kuid_t ) 
from_kuid_munged extern t#uid_t from_kuid_munged ( s#user_namespace * , t#kuid_t ) 
make_kgid extern t#kgid_t make_kgid ( s#user_namespace * , t#gid_t ) 
from_kgid extern t#gid_t from_kgid ( s#user_namespace * , t#kgid_t ) 
from_kgid_munged extern t#gid_t from_kgid_munged ( s#user_namespace * , t#kgid_t ) 
make_kprojid extern t#kprojid_t make_kprojid ( s#user_namespace * , t#projid_t ) 
from_kprojid extern t#projid_t from_kprojid ( s#user_namespace * , t#kprojid_t ) 
from_kprojid_munged extern t#projid_t from_kprojid_munged ( s#user_namespace * , t#kprojid_t ) 

/* kernel/workqueue.o */
s##workqueue_struct
system_wq extern s#workqueue_struct * system_wq 
system_highpri_wq extern s#workqueue_struct * system_highpri_wq 
system_long_wq extern s#workqueue_struct * system_long_wq 
system_unbound_wq extern s#workqueue_struct * system_unbound_wq 
system_freezable_wq extern s#workqueue_struct * system_freezable_wq 
system_power_efficient_wq extern s#workqueue_struct * system_power_efficient_wq 
system_freezable_power_efficient_wq extern s#workqueue_struct * system_freezable_power_efficient_wq 
queue_work_on extern t#bool queue_work_on ( int , s#workqueue_struct * , s#work_struct * ) 
delayed_work_timer_fn void delayed_work_timer_fn ( unsigned long ) 
queue_delayed_work_on extern t#bool queue_delayed_work_on ( int , s#workqueue_struct * , s#delayed_work * , unsigned long ) 
mod_delayed_work_on extern t#bool mod_delayed_work_on ( int , s#workqueue_struct * , s#delayed_work * , unsigned long ) 
s#rcu_work struct rcu_work { s#work_struct work ; s#callback_head rcu ; s#workqueue_struct * wq ; } 
queue_rcu_work extern t#bool queue_rcu_work ( s#workqueue_struct * , s#rcu_work * ) 
flush_workqueue extern void flush_workqueue ( s#workqueue_struct * ) 
drain_workqueue extern void drain_workqueue ( s#workqueue_struct * ) 
flush_work extern t#bool flush_work ( s#work_struct * ) 
cancel_work_sync extern t#bool cancel_work_sync ( s#work_struct * ) 
flush_delayed_work extern t#bool flush_delayed_work ( s#delayed_work * ) 
flush_rcu_work extern t#bool flush_rcu_work ( s#rcu_work * ) 
cancel_delayed_work extern t#bool cancel_delayed_work ( s#delayed_work * ) 
cancel_delayed_work_sync extern t#bool cancel_delayed_work_sync ( s#delayed_work * ) 
execute_in_process_context int execute_in_process_context ( t#work_func_t , s#execute_work * ) 
__alloc_workqueue_key extern s#workqueue_struct * __alloc_workqueue_key ( const char * , unsigned int , int , s#lock_class_key * , const char * , ... ) 
destroy_workqueue extern void destroy_workqueue ( s#workqueue_struct * ) 
workqueue_set_max_active extern void workqueue_set_max_active ( s#workqueue_struct * , int ) 
current_work extern s#work_struct * current_work ( void ) 
workqueue_congested extern t#bool workqueue_congested ( int , s#workqueue_struct * ) 
work_busy extern unsigned int work_busy ( s#work_struct * ) 
work_on_cpu long work_on_cpu ( int , long ( * ) ( void * ) , void * ) 
work_on_cpu_safe long work_on_cpu_safe ( int , long ( * ) ( void * ) , void * ) 

/* lib/argv_split.o */
argv_free extern void argv_free ( char * * ) 
argv_split extern char * * argv_split ( t#gfp_t , const char * , int * ) 

/* lib/asn1_decoder.o */
t#asn1_action_t typedef int ( * asn1_action_t ) ( void * , t#size_t , unsigned char , const void * , t#size_t ) 
s#asn1_decoder struct asn1_decoder { const unsigned char * machine ; t#size_t machlen ; const t#asn1_action_t * actions ; } 
asn1_ber_decoder extern int asn1_ber_decoder ( const s#asn1_decoder * , void * , const unsigned char * , t#size_t ) 

/* lib/bcd.o */
_bcd2bin unsigned _bcd2bin ( unsigned char ) 
_bin2bcd unsigned char _bin2bcd ( unsigned ) 

/* lib/bitmap.o */
__bitmap_equal extern int __bitmap_equal ( const unsigned long * , const unsigned long * , unsigned int ) 
__bitmap_complement extern void __bitmap_complement ( unsigned long * , const unsigned long * , unsigned int ) 
__bitmap_shift_right extern void __bitmap_shift_right ( unsigned long * , const unsigned long * , unsigned int , unsigned int ) 
__bitmap_shift_left extern void __bitmap_shift_left ( unsigned long * , const unsigned long * , unsigned int , unsigned int ) 
__bitmap_and extern int __bitmap_and ( unsigned long * , const unsigned long * , const unsigned long * , unsigned int ) 
__bitmap_or extern void __bitmap_or ( unsigned long * , const unsigned long * , const unsigned long * , unsigned int ) 
__bitmap_xor extern void __bitmap_xor ( unsigned long * , const unsigned long * , const unsigned long * , unsigned int ) 
__bitmap_andnot extern int __bitmap_andnot ( unsigned long * , const unsigned long * , const unsigned long * , unsigned int ) 
__bitmap_intersects extern int __bitmap_intersects ( const unsigned long * , const unsigned long * , unsigned int ) 
__bitmap_subset extern int __bitmap_subset ( const unsigned long * , const unsigned long * , unsigned int ) 
__bitmap_weight extern int __bitmap_weight ( const unsigned long * , unsigned int ) 
__bitmap_set extern void __bitmap_set ( unsigned long * , unsigned int , int ) 
__bitmap_clear extern void __bitmap_clear ( unsigned long * , unsigned int , int ) 
bitmap_find_next_zero_area_off extern unsigned long bitmap_find_next_zero_area_off ( unsigned long * , unsigned long , unsigned long , unsigned int , unsigned long , unsigned long ) 
__bitmap_parse extern int __bitmap_parse ( const char * , unsigned int , int , unsigned long * , int ) 
bitmap_parse_user extern int bitmap_parse_user ( const char * , unsigned int , unsigned long * , int ) 
bitmap_print_to_pagebuf extern int bitmap_print_to_pagebuf ( t#bool , char * , const unsigned long * , int ) 
bitmap_parselist extern int bitmap_parselist ( const char * , unsigned long * , int ) 
bitmap_parselist_user extern int bitmap_parselist_user ( const char * , unsigned int , unsigned long * , int ) 
bitmap_remap extern void bitmap_remap ( unsigned long * , const unsigned long * , const unsigned long * , const unsigned long * , unsigned int ) 
bitmap_bitremap extern int bitmap_bitremap ( int , const unsigned long * , const unsigned long * , int ) 
bitmap_onto extern void bitmap_onto ( unsigned long * , const unsigned long * , const unsigned long * , unsigned int ) 
bitmap_fold extern void bitmap_fold ( unsigned long * , const unsigned long * , unsigned int , unsigned int ) 
bitmap_find_free_region extern int bitmap_find_free_region ( unsigned long * , unsigned int , int ) 
bitmap_release_region extern void bitmap_release_region ( unsigned long * , unsigned int , int ) 
bitmap_allocate_region extern int bitmap_allocate_region ( unsigned long * , unsigned int , int ) 
bitmap_copy_le extern void bitmap_copy_le ( unsigned long * , const unsigned long * , unsigned int ) 
bitmap_alloc extern unsigned long * bitmap_alloc ( unsigned int , t#gfp_t ) 
bitmap_zalloc extern unsigned long * bitmap_zalloc ( unsigned int , t#gfp_t ) 
bitmap_free extern void bitmap_free ( const unsigned long * ) 
bitmap_from_arr32 extern void bitmap_from_arr32 ( unsigned long * , const t#u32 * , unsigned int ) 
bitmap_to_arr32 extern void bitmap_to_arr32 ( t#u32 * , const unsigned long * , unsigned int ) 

/* lib/bitrev.o */
byte_rev_table extern t#u8 const byte_rev_table [ 256 ] 

/* lib/bsearch.o */
bsearch void * bsearch ( const void * , const void * , t#size_t , t#size_t , int ( * ) ( const void * , const void * ) ) 

/* lib/chacha20.o */
chacha20_block void chacha20_block ( t#u32 * , void * ) 

/* lib/clz_ctz.o */
__ctzsi2 int __attribute__ ( ( weak ) ) __ctzsi2 ( int ) 
__clzsi2 int __attribute__ ( ( weak ) ) __clzsi2 ( int ) 
__clzdi2 int __attribute__ ( ( weak ) ) __clzdi2 ( long ) 
__ctzdi2 int __attribute__ ( ( weak ) ) __ctzdi2 ( long ) 

/* lib/cmdline.o */
get_option extern int get_option ( char * * , int * ) 
get_options extern char * get_options ( const char * , int , int * ) 
memparse extern unsigned long long memparse ( const char * , char * * ) 

/* lib/cordic.o */
s#cordic_iq struct cordic_iq { t#s32 i ; t#s32 q ; } 
cordic_calc_iq s#cordic_iq cordic_calc_iq ( t#s32 ) 

/* lib/cpu_rmap.o */
alloc_cpu_rmap extern s#cpu_rmap * alloc_cpu_rmap ( unsigned int , t#gfp_t ) 
cpu_rmap_put extern int cpu_rmap_put ( s#cpu_rmap * ) 
cpu_rmap_add extern int cpu_rmap_add ( s#cpu_rmap * , void * ) 
cpu_rmap_update extern int cpu_rmap_update ( s#cpu_rmap * , t#u16 , const s#cpumask * ) 
free_irq_cpu_rmap extern void free_irq_cpu_rmap ( s#cpu_rmap * ) 
irq_cpu_rmap_add extern int irq_cpu_rmap_add ( s#cpu_rmap * , int ) 

/* lib/cpumask.o */
cpumask_next_and int cpumask_next_and ( int , const s#cpumask * , const s#cpumask * ) 
cpumask_any_but int cpumask_any_but ( const s#cpumask * , unsigned int ) 
cpumask_next_wrap extern int cpumask_next_wrap ( int , const s#cpumask * , int , t#bool ) 
cpumask_local_spread unsigned int cpumask_local_spread ( unsigned int , int ) 

/* lib/crc-ccitt.o */
crc_ccitt_table extern t#u16 const crc_ccitt_table [ 256 ] 
crc_ccitt extern t#u16 crc_ccitt ( t#u16 , const t#u8 * , t#size_t ) 

/* lib/crc-itu-t.o */
crc_itu_t_table extern t#u16 const crc_itu_t_table [ 256 ] 
crc_itu_t extern t#u16 crc_itu_t ( t#u16 , const t#u8 * , t#size_t ) 

/* lib/crc-t10dif.o */
crc_t10dif_update extern t#__u16 crc_t10dif_update ( t#__u16 , unsigned char const * , t#size_t ) 
crc_t10dif extern t#__u16 crc_t10dif ( unsigned char const * , t#size_t ) 

/* lib/crc16.o */
crc16_table extern t#u16 const crc16_table [ 256 ] 
crc16 extern t#u16 crc16 ( t#u16 , const t#u8 * , t#size_t ) 

/* lib/crc32.o */
crc32_le t#u32 __attribute__ ( ( pure ) ) crc32_le ( t#u32 , unsigned char const * , t#size_t ) 
__crc32c_le t#u32 __attribute__ ( ( pure ) ) __crc32c_le ( t#u32 , unsigned char const * , t#size_t ) 
crc32_le_shift t#u32 __attribute__ ( ( __const__ ) ) crc32_le_shift ( t#u32 , t#size_t ) 
__crc32c_le_shift t#u32 __attribute__ ( ( __const__ ) ) __crc32c_le_shift ( t#u32 , t#size_t ) 
crc32_be t#u32 __attribute__ ( ( pure ) ) crc32_be ( t#u32 , unsigned char const * , t#size_t ) 

/* lib/crc64.o */
crc64_be t#u64 __attribute__ ( ( pure ) ) crc64_be ( t#u64 , const void * , t#size_t ) 

/* lib/crc7.o */
crc7_be_syndrome_table extern const t#u8 crc7_be_syndrome_table [ 256 ] 
crc7_be extern t#u8 crc7_be ( t#u8 , const t#u8 * , t#size_t ) 

/* lib/crc8.o */
crc8_populate_msb void crc8_populate_msb ( t#u8 [ 256 ] , t#u8 ) 
crc8_populate_lsb void crc8_populate_lsb ( t#u8 [ 256 ] , t#u8 ) 
crc8 t#u8 crc8 ( const t#u8 [ 256 ] , t#u8 * , t#size_t , t#u8 ) 

/* lib/ctype.o */
_ctype extern const unsigned char _ctype [ ] 

/* lib/debug_locks.o */
debug_locks extern int debug_locks 
debug_locks_silent extern int debug_locks_silent 
debug_locks_off extern int debug_locks_off ( void ) 

/* lib/dec_and_lock.o */
_atomic_dec_and_lock extern int _atomic_dec_and_lock ( t#atomic_t * , t#spinlock_t * ) 
_atomic_dec_and_lock_irqsave extern int _atomic_dec_and_lock_irqsave ( t#atomic_t * , t#spinlock_t * , unsigned long * ) 

/* lib/devres.o */
s##device_private
s##sock
s##seq_file
s##vfsmount
s##posix_acl
s##module
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##compat_timespec
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##iov_iter
s##swap_info_struct
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
devm_ioremap void * devm_ioremap ( s#device * , t#resource_size_t , t#resource_size_t ) 
devm_ioremap_nocache void * devm_ioremap_nocache ( s#device * , t#resource_size_t , t#resource_size_t ) 
devm_ioremap_wc void * devm_ioremap_wc ( s#device * , t#resource_size_t , t#resource_size_t ) 
devm_iounmap void devm_iounmap ( s#device * , void * ) 
devm_ioremap_resource void * devm_ioremap_resource ( s#device * , s#resource * ) 
s##msi_controller
s##proc_dir_entry
s##hotplug_slot
s##pci_vpd
s##pci_sriov
pcim_iomap_table void * const * pcim_iomap_table ( s#pci_dev * ) 
pcim_iomap void * pcim_iomap ( s#pci_dev * , int , unsigned long ) 
pcim_iounmap void pcim_iounmap ( s#pci_dev * , void * ) 
pcim_iomap_regions int pcim_iomap_regions ( s#pci_dev * , int , const char * ) 
pcim_iomap_regions_request_all int pcim_iomap_regions_request_all ( s#pci_dev * , int , const char * ) 
pcim_iounmap_regions void pcim_iounmap_regions ( s#pci_dev * , int ) 

/* lib/digsig.o */
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##sock
s##seq_file
s##bio_vec
s##pipe_inode_info
s##poll_table_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##cred
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##mem_cgroup
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##user_namespace
s##bdi_writeback
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##device
s##kmem_cache
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##key_user
s##key_type
s##assoc_array_ptr
digsig_verify int digsig_verify ( s#key * , const char * , int , const char * , int ) 

/* lib/dim/dim.o */
s#dim_stats struct dim_stats { int ppms ; int bpms ; int epms ; int cpms ; int cpe_ratio ; } 
s#dim_sample struct dim_sample { t#ktime_t time ; t#u32 pkt_ctr ; t#u32 byte_ctr ; t#u16 event_ctr ; t#u32 comp_ctr ; } 
s#dim struct dim { t#u8 state ; s#dim_stats prev_stats ; s#dim_sample start_sample ; s#dim_sample measuring_sample ; s#work_struct work ; t#u8 profile_ix ; t#u8 mode ; t#u8 tune_state ; t#u8 steps_right ; t#u8 steps_left ; t#u8 tired ; } 
dim_on_top t#bool dim_on_top ( s#dim * ) 
dim_turn void dim_turn ( s#dim * ) 
dim_park_on_top void dim_park_on_top ( s#dim * ) 
dim_park_tired void dim_park_tired ( s#dim * ) 
dim_calc_stats void dim_calc_stats ( s#dim_sample * , s#dim_sample * , s#dim_stats * ) 

/* lib/dim/net_dim.o */
s#dim_cq_moder struct dim_cq_moder { t#u16 usec ; t#u16 pkts ; t#u16 comps ; t#u8 cq_period_mode ; } 
net_dim_get_rx_moderation s#dim_cq_moder net_dim_get_rx_moderation ( t#u8 , int ) 
net_dim_get_def_rx_moderation s#dim_cq_moder net_dim_get_def_rx_moderation ( t#u8 ) 
net_dim_get_tx_moderation s#dim_cq_moder net_dim_get_tx_moderation ( t#u8 , int ) 
net_dim_get_def_tx_moderation s#dim_cq_moder net_dim_get_def_tx_moderation ( t#u8 ) 
net_dim void net_dim ( s#dim * , s#dim_sample ) 

/* lib/div64.o */
iter_div_u64_rem t#u32 iter_div_u64_rem ( t#u64 , t#u32 , t#u64 * ) 

/* lib/dma-noop.o */
s##device_private
s##sock
s##seq_file
s##vfsmount
s##posix_acl
s##module
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##compat_timespec
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##iov_iter
s##swap_info_struct
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
dma_noop_ops extern const s#dma_map_ops dma_noop_ops 

/* lib/dump_stack.o */
dump_stack extern void dump_stack ( void ) 

/* lib/dynamic_debug.o */
s##static_key_mod
s#_ddebug struct _ddebug { const char * modname ; const char * function ; const char * filename ; const char * format ; unsigned int lineno : 18 ; unsigned int flags : 8 ; union { s#static_key_true dd_key_true ; s#static_key_false dd_key_false ; } key ; } 
__dynamic_pr_debug extern __attribute__ ( ( format ( printf , 2 , 3 ) ) ) void __dynamic_pr_debug ( s#_ddebug * , const char * , ... ) 
s##device_private
s##sock
s##vfsmount
s##posix_acl
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##sec_path
s##neigh_parms
s##neighbour
s##udp_tunnel_info
s##bpf_prog
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##l3mdev_ops
s##ndisc_ops
s##xfrm_state
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##mini_Qdisc
s##Qdisc
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##rtnl_link_ops
s##phy_device
s##sfp_bus
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##kmem_cache
s##xt_table
s##inet_hashinfo
s##fib_notifier_ops
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##workqueue_struct
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##bpf_prog_array
s##cgroup_taskset
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
__dynamic_dev_dbg extern __attribute__ ( ( format ( printf , 3 , 4 ) ) ) void __dynamic_dev_dbg ( s#_ddebug * , const s#device * , const char * , ... ) 
__dynamic_netdev_dbg extern __attribute__ ( ( format ( printf , 3 , 4 ) ) ) void __dynamic_netdev_dbg ( s#_ddebug * , const s#net_device * , const char * , ... ) 
ddebug_add_module int ddebug_add_module ( s#_ddebug * , unsigned int , const char * ) 
ddebug_remove_module extern int ddebug_remove_module ( const char * ) 

/* lib/dynamic_queue_limits.o */
dql_completed void dql_completed ( s#dql * , unsigned int ) 
dql_reset void dql_reset ( s#dql * ) 
dql_init int dql_init ( s#dql * , unsigned ) 

/* lib/errseq.o */
errseq_set t#errseq_t errseq_set ( t#errseq_t * , int ) 
errseq_sample t#errseq_t errseq_sample ( t#errseq_t * ) 
errseq_check int errseq_check ( t#errseq_t * , t#errseq_t ) 
errseq_check_and_advance int errseq_check_and_advance ( t#errseq_t * , t#errseq_t * ) 

/* lib/fault-inject.o */
s##posix_acl
s##vfsmount
s##module
s##iov_iter
s##poll_table_struct
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##compat_timespec
s##pollfd
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##pipe_inode_info
s##writeback_control
s##swap_info_struct
s##dev_pagemap
s##kmem_cache
s##mem_cgroup
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##vm_operations_struct
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
setup_fault_attr int setup_fault_attr ( s#fault_attr * , char * ) 
should_fail t#bool should_fail ( s#fault_attr * , t#ssize_t ) 
fault_create_debugfs_attr s#dentry * fault_create_debugfs_attr ( const char * , s#dentry * , s#fault_attr * ) 

/* lib/find_bit.o */
find_next_bit extern unsigned long find_next_bit ( const unsigned long * , unsigned long , unsigned long ) 
find_next_zero_bit extern unsigned long find_next_zero_bit ( const unsigned long * , unsigned long , unsigned long ) 
find_next_and_bit extern unsigned long find_next_and_bit ( const unsigned long * , const unsigned long * , unsigned long , unsigned long ) 
find_first_bit extern unsigned long find_first_bit ( const unsigned long * , unsigned long ) 
find_first_zero_bit extern unsigned long find_first_zero_bit ( const unsigned long * , unsigned long ) 
find_last_bit extern unsigned long find_last_bit ( const unsigned long * , unsigned long ) 
find_next_zero_bit_le extern unsigned long find_next_zero_bit_le ( const void * , unsigned long , unsigned long ) 
find_next_bit_le extern unsigned long find_next_bit_le ( const void * , unsigned long , unsigned long ) 

/* lib/flex_array.o */
s#reciprocal_value struct reciprocal_value { t#u32 m ; t#u8 sh1 , sh2 ; } 
s##flex_array_part
s#flex_array struct flex_array { union { struct { int element_size ; int total_nr_elements ; int elems_per_part ; s#reciprocal_value reciprocal_elems ; s#flex_array_part * parts [ ] ; } ; char padding [ ( ( 1UL ) << 12 ) ] ; } ; } 
flex_array_alloc s#flex_array * flex_array_alloc ( int , unsigned int , t#gfp_t ) 
flex_array_free_parts void flex_array_free_parts ( s#flex_array * ) 
flex_array_free void flex_array_free ( s#flex_array * ) 
flex_array_put int flex_array_put ( s#flex_array * , unsigned int , void * , t#gfp_t ) 
flex_array_clear int flex_array_clear ( s#flex_array * , unsigned int ) 
flex_array_prealloc int flex_array_prealloc ( s#flex_array * , unsigned int , unsigned int , t#gfp_t ) 
flex_array_get void * flex_array_get ( s#flex_array * , unsigned int ) 
flex_array_get_ptr void * flex_array_get_ptr ( s#flex_array * , unsigned int ) 
flex_array_shrink int flex_array_shrink ( s#flex_array * ) 

/* lib/fonts/font_8x16.o */
s#font_desc struct font_desc { int idx ; const char * name ; int width , height ; const void * data ; int pref ; } 
font_vga_8x16 extern const s#font_desc font_vga_8x16 

/* lib/fonts/fonts.o */
find_font extern const s#font_desc * find_font ( const char * ) 
get_default_font extern const s#font_desc * get_default_font ( int , int , t#u32 , t#u32 ) 

/* lib/gcd.o */
gcd unsigned long gcd ( unsigned long , unsigned long ) 

/* lib/genalloc.o */
t#genpool_algo_t typedef unsigned long ( * genpool_algo_t ) ( unsigned long * , unsigned long , unsigned long , unsigned int , void * , s#gen_pool * ) 
s#gen_pool struct gen_pool { t#spinlock_t lock ; s#list_head chunks ; int min_alloc_order ; t#genpool_algo_t algo ; void * data ; const char * name ; } 
gen_pool_create extern s#gen_pool * gen_pool_create ( int , int ) 
gen_pool_add_virt extern int gen_pool_add_virt ( s#gen_pool * , unsigned long , t#phys_addr_t , t#size_t , int ) 
gen_pool_virt_to_phys extern t#phys_addr_t gen_pool_virt_to_phys ( s#gen_pool * , unsigned long ) 
gen_pool_destroy extern void gen_pool_destroy ( s#gen_pool * ) 
gen_pool_alloc extern unsigned long gen_pool_alloc ( s#gen_pool * , t#size_t ) 
gen_pool_alloc_algo extern unsigned long gen_pool_alloc_algo ( s#gen_pool * , t#size_t , t#genpool_algo_t , void * ) 
gen_pool_dma_alloc extern void * gen_pool_dma_alloc ( s#gen_pool * , t#size_t , t#dma_addr_t * ) 
gen_pool_free extern void gen_pool_free ( s#gen_pool * , unsigned long , t#size_t ) 
s#gen_pool_chunk struct gen_pool_chunk { s#list_head next_chunk ; t#atomic_t avail ; t#phys_addr_t phys_addr ; unsigned long start_addr ; unsigned long end_addr ; unsigned long bits [ 0 ] ; } 
gen_pool_for_each_chunk extern void gen_pool_for_each_chunk ( s#gen_pool * , void ( * ) ( s#gen_pool * , s#gen_pool_chunk * , void * ) , void * ) 
gen_pool_avail extern t#size_t gen_pool_avail ( s#gen_pool * ) 
gen_pool_size extern t#size_t gen_pool_size ( s#gen_pool * ) 
gen_pool_set_algo extern void gen_pool_set_algo ( s#gen_pool * , t#genpool_algo_t , void * ) 
gen_pool_first_fit extern unsigned long gen_pool_first_fit ( unsigned long * , unsigned long , unsigned long , unsigned int , void * , s#gen_pool * ) 
gen_pool_first_fit_align extern unsigned long gen_pool_first_fit_align ( unsigned long * , unsigned long , unsigned long , unsigned int , void * , s#gen_pool * ) 
gen_pool_fixed_alloc extern unsigned long gen_pool_fixed_alloc ( unsigned long * , unsigned long , unsigned long , unsigned int , void * , s#gen_pool * ) 
gen_pool_first_fit_order_align extern unsigned long gen_pool_first_fit_order_align ( unsigned long * , unsigned long , unsigned long , unsigned int , void * , s#gen_pool * ) 
gen_pool_best_fit extern unsigned long gen_pool_best_fit ( unsigned long * , unsigned long , unsigned long , unsigned int , void * , s#gen_pool * ) 
s##device_private
s##sock
s##seq_file
s##file
s##vm_operations_struct
s##vm_area_struct
s##kernfs_open_node
s##kernfs_iattrs
s##module
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##iommu_group
s##iommu_fwspec
gen_pool_get extern s#gen_pool * gen_pool_get ( s#device * , const char * ) 
devm_gen_pool_create extern s#gen_pool * devm_gen_pool_create ( s#device * , int , int , const char * ) 

/* lib/glob.o */
glob_match t#bool __attribute__ ( ( pure ) ) glob_match ( char const * , char const * ) 

/* lib/hexdump.o */
hex_asc extern const char hex_asc [ ] 
hex_asc_upper extern const char hex_asc_upper [ ] 
hex_to_bin extern int hex_to_bin ( char ) 
hex2bin extern int hex2bin ( t#u8 * , const char * , t#size_t ) 
bin2hex extern char * bin2hex ( char * , const void * , t#size_t ) 
hex_dump_to_buffer extern int hex_dump_to_buffer ( const void * , t#size_t , int , int , char * , t#size_t , t#bool ) 
print_hex_dump extern void print_hex_dump ( const char * , const char * , int , int , int , const void * , t#size_t , t#bool ) 

/* lib/hweight.o */
__sw_hweight32 extern unsigned int __sw_hweight32 ( unsigned int ) 
__sw_hweight16 extern unsigned int __sw_hweight16 ( unsigned int ) 
__sw_hweight8 extern unsigned int __sw_hweight8 ( unsigned int ) 
__sw_hweight64 extern unsigned long __sw_hweight64 ( t#__u64 ) 

/* lib/idr.o */
idr_alloc_u32 int idr_alloc_u32 ( s#idr * , void * , t#u32 * , unsigned long , t#gfp_t ) 
idr_alloc int idr_alloc ( s#idr * , void * , int , int , t#gfp_t ) 
idr_alloc_cyclic int idr_alloc_cyclic ( s#idr * , void * , int , int , t#gfp_t ) 
idr_for_each int idr_for_each ( const s#idr * , int ( * ) ( int , void * , void * ) , void * ) 
idr_get_next void * idr_get_next ( s#idr * , int * ) 
idr_get_next_ul void * idr_get_next_ul ( s#idr * , unsigned long * ) 
idr_replace void * idr_replace ( s#idr * , void * , unsigned long ) 
ida_get_new_above int ida_get_new_above ( s#ida * , int , int * ) 
ida_remove void ida_remove ( s#ida * , int ) 
ida_destroy void ida_destroy ( s#ida * ) 
ida_alloc_range int ida_alloc_range ( s#ida * , unsigned int , unsigned int , t#gfp_t ) 
ida_free void ida_free ( s#ida * , unsigned int ) 

/* lib/int_sqrt.o */
int_sqrt unsigned long int_sqrt ( unsigned long ) 

/* lib/iomap_copy.o */
__iowrite32_copy __attribute__ ( ( externally_visible ) ) void __iowrite32_copy ( void * , const void * , t#size_t ) 
__ioread32_copy void __ioread32_copy ( void * , const void * , t#size_t ) 
__iowrite64_copy void __iowrite64_copy ( void * , const void * , t#size_t ) 

/* lib/iommu-common.o */
s#iommu_pool struct iommu_pool { unsigned long start ; unsigned long end ; unsigned long hint ; t#spinlock_t lock ; } 
s#iommu_map_table struct iommu_map_table { unsigned long table_map_base ; unsigned long table_shift ; unsigned long nr_pools ; void ( * lazy_flush ) ( s#iommu_map_table * ) ; unsigned long poolsize ; s#iommu_pool pools [ ( 1 << 4 ) ] ; t#u32 flags ; s#iommu_pool large_pool ; unsigned long * map ; } 
iommu_tbl_pool_init extern void iommu_tbl_pool_init ( s#iommu_map_table * , unsigned long , t#u32 , void ( * ) ( s#iommu_map_table * ) , t#bool , t#u32 , t#bool ) 
s##device_private
s##sock
s##seq_file
s##vfsmount
s##posix_acl
s##module
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##compat_timespec
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##iov_iter
s##swap_info_struct
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
iommu_tbl_range_alloc extern unsigned long iommu_tbl_range_alloc ( s#device * , s#iommu_map_table * , unsigned long , unsigned long * , unsigned long , unsigned int ) 
iommu_tbl_range_free extern void iommu_tbl_range_free ( s#iommu_map_table * , t#u64 , unsigned long , unsigned long ) 

/* lib/iommu-helper.o */
iommu_area_alloc unsigned long iommu_area_alloc ( unsigned long * , unsigned long , unsigned long , unsigned int , unsigned long , unsigned long , unsigned long ) 

/* lib/iov_iter.o */
s##posix_acl
s##vfsmount
s##module
s##writeback_control
s##kstatfs
s##seq_file
s##mem_cgroup
s##export_operations
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mempolicy
s##poll_table_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##user_struct
s##cred
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##compat_timespec
s##pollfd
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##device
s##kmem_cache
iov_iter_fault_in_readable int iov_iter_fault_in_readable ( s#iov_iter * , t#size_t ) 
iov_iter_init void iov_iter_init ( s#iov_iter * , int , const s#iovec * , unsigned long , t#size_t ) 
copy_to_iter t#size_t copy_to_iter ( const void * , t#size_t , s#iov_iter * ) 
copy_from_iter t#size_t copy_from_iter ( void * , t#size_t , s#iov_iter * ) 
copy_from_iter_full t#bool copy_from_iter_full ( void * , t#size_t , s#iov_iter * ) 
copy_from_iter_nocache t#size_t copy_from_iter_nocache ( void * , t#size_t , s#iov_iter * ) 
copy_from_iter_full_nocache t#bool copy_from_iter_full_nocache ( void * , t#size_t , s#iov_iter * ) 
copy_page_to_iter t#size_t copy_page_to_iter ( s#page * , t#size_t , t#size_t , s#iov_iter * ) 
copy_page_from_iter t#size_t copy_page_from_iter ( s#page * , t#size_t , t#size_t , s#iov_iter * ) 
iov_iter_zero t#size_t iov_iter_zero ( t#size_t , s#iov_iter * ) 
iov_iter_copy_from_user_atomic t#size_t iov_iter_copy_from_user_atomic ( s#page * , s#iov_iter * , unsigned long , t#size_t ) 
iov_iter_advance void iov_iter_advance ( s#iov_iter * , t#size_t ) 
iov_iter_revert void iov_iter_revert ( s#iov_iter * , t#size_t ) 
iov_iter_single_seg_count t#size_t iov_iter_single_seg_count ( const s#iov_iter * ) 
iov_iter_kvec void iov_iter_kvec ( s#iov_iter * , int , const s#kvec * , unsigned long , t#size_t ) 
iov_iter_bvec void iov_iter_bvec ( s#iov_iter * , int , const s#bio_vec * , unsigned long , t#size_t ) 
iov_iter_pipe void iov_iter_pipe ( s#iov_iter * , int , s#pipe_inode_info * , t#size_t ) 
iov_iter_alignment unsigned long iov_iter_alignment ( const s#iov_iter * ) 
iov_iter_gap_alignment unsigned long iov_iter_gap_alignment ( const s#iov_iter * ) 
iov_iter_get_pages t#ssize_t iov_iter_get_pages ( s#iov_iter * , s#page * * , t#size_t , unsigned , t#size_t * ) 
iov_iter_get_pages_alloc t#ssize_t iov_iter_get_pages_alloc ( s#iov_iter * , s#page * * * , t#size_t , t#size_t * ) 
csum_and_copy_from_iter t#size_t csum_and_copy_from_iter ( void * , t#size_t , t#__wsum * , s#iov_iter * ) 
csum_and_copy_from_iter_full t#bool csum_and_copy_from_iter_full ( void * , t#size_t , t#__wsum * , s#iov_iter * ) 
csum_and_copy_to_iter t#size_t csum_and_copy_to_iter ( const void * , t#size_t , void * , s#iov_iter * ) 
hash_and_copy_to_iter t#size_t hash_and_copy_to_iter ( const void * , t#size_t , void * , s#iov_iter * ) 
iov_iter_npages int iov_iter_npages ( const s#iov_iter * , int ) 
dup_iter const void * dup_iter ( s#iov_iter * , s#iov_iter * , t#gfp_t ) 
import_iovec int import_iovec ( int , const s#iovec * , unsigned , unsigned , s#iovec * * , s#iov_iter * ) 
import_single_range int import_single_range ( int , void * , t#size_t , s#iovec * , s#iov_iter * ) 

/* lib/irq_poll.o */
irq_poll_sched extern void irq_poll_sched ( s#irq_poll * ) 
irq_poll_complete extern void irq_poll_complete ( s#irq_poll * ) 
irq_poll_disable extern void irq_poll_disable ( s#irq_poll * ) 
irq_poll_enable extern void irq_poll_enable ( s#irq_poll * ) 
irq_poll_init extern void irq_poll_init ( s#irq_poll * , int , t#irq_poll_fn * ) 

/* lib/irq_regs.o */
__irq_regs extern __attribute__ ( ( section ( ".data..percpu" "" ) ) ) __typeof__ ( s#pt_regs * ) __irq_regs 

/* lib/kasprintf.o */
kvasprintf extern __attribute__ ( ( format ( printf , 2 , 0 ) ) ) __attribute__ ( ( __malloc__ ) ) char * kvasprintf ( t#gfp_t , const char * , t#va_list ) 
kvasprintf_const extern __attribute__ ( ( format ( printf , 2 , 0 ) ) ) const char * kvasprintf_const ( t#gfp_t , const char * , t#va_list ) 
kasprintf extern __attribute__ ( ( format ( printf , 2 , 3 ) ) ) __attribute__ ( ( __malloc__ ) ) char * kasprintf ( t#gfp_t , const char * , ... ) 

/* lib/kfifo.o */
__kfifo_alloc extern int __kfifo_alloc ( s#__kfifo * , unsigned int , t#size_t , t#gfp_t ) 
__kfifo_free extern void __kfifo_free ( s#__kfifo * ) 
__kfifo_init extern int __kfifo_init ( s#__kfifo * , void * , unsigned int , t#size_t ) 
__kfifo_in extern unsigned int __kfifo_in ( s#__kfifo * , const void * , unsigned int ) 
__kfifo_out_peek extern unsigned int __kfifo_out_peek ( s#__kfifo * , void * , unsigned int ) 
__kfifo_out extern unsigned int __kfifo_out ( s#__kfifo * , void * , unsigned int ) 
__kfifo_from_user extern int __kfifo_from_user ( s#__kfifo * , const void * , unsigned long , unsigned int * ) 
__kfifo_to_user extern int __kfifo_to_user ( s#__kfifo * , void * , unsigned long , unsigned int * ) 
__kfifo_dma_in_prepare extern unsigned int __kfifo_dma_in_prepare ( s#__kfifo * , s#scatterlist * , int , unsigned int ) 
__kfifo_dma_out_prepare extern unsigned int __kfifo_dma_out_prepare ( s#__kfifo * , s#scatterlist * , int , unsigned int ) 
__kfifo_max_r extern unsigned int __kfifo_max_r ( unsigned int , t#size_t ) 
__kfifo_len_r extern unsigned int __kfifo_len_r ( s#__kfifo * , t#size_t ) 
__kfifo_in_r extern unsigned int __kfifo_in_r ( s#__kfifo * , const void * , unsigned int , t#size_t ) 
__kfifo_out_peek_r extern unsigned int __kfifo_out_peek_r ( s#__kfifo * , void * , unsigned int , t#size_t ) 
__kfifo_out_r extern unsigned int __kfifo_out_r ( s#__kfifo * , void * , unsigned int , t#size_t ) 
__kfifo_skip_r extern void __kfifo_skip_r ( s#__kfifo * , t#size_t ) 
__kfifo_from_user_r extern int __kfifo_from_user_r ( s#__kfifo * , const void * , unsigned long , unsigned int * , t#size_t ) 
__kfifo_to_user_r extern int __kfifo_to_user_r ( s#__kfifo * , void * , unsigned long , unsigned int * , t#size_t ) 
__kfifo_dma_in_prepare_r extern unsigned int __kfifo_dma_in_prepare_r ( s#__kfifo * , s#scatterlist * , int , unsigned int , t#size_t ) 
__kfifo_dma_in_finish_r extern void __kfifo_dma_in_finish_r ( s#__kfifo * , unsigned int , t#size_t ) 
__kfifo_dma_out_prepare_r extern unsigned int __kfifo_dma_out_prepare_r ( s#__kfifo * , s#scatterlist * , int , unsigned int , t#size_t ) 
__kfifo_dma_out_finish_r extern void __kfifo_dma_out_finish_r ( s#__kfifo * , t#size_t ) 

/* lib/klist.o */
klist_init extern void klist_init ( s#klist * , void ( * ) ( s#klist_node * ) , void ( * ) ( s#klist_node * ) ) 
klist_add_head extern void klist_add_head ( s#klist_node * , s#klist * ) 
klist_add_tail extern void klist_add_tail ( s#klist_node * , s#klist * ) 
klist_add_behind extern void klist_add_behind ( s#klist_node * , s#klist_node * ) 
klist_add_before extern void klist_add_before ( s#klist_node * , s#klist_node * ) 
klist_del extern void klist_del ( s#klist_node * ) 
klist_remove extern void klist_remove ( s#klist_node * ) 
klist_node_attached extern int klist_node_attached ( s#klist_node * ) 
klist_iter_init_node extern void klist_iter_init_node ( s#klist * , s#klist_iter * , s#klist_node * ) 
klist_iter_init extern void klist_iter_init ( s#klist * , s#klist_iter * ) 
klist_iter_exit extern void klist_iter_exit ( s#klist_iter * ) 
klist_prev extern s#klist_node * klist_prev ( s#klist_iter * ) 
klist_next extern s#klist_node * klist_next ( s#klist_iter * ) 

/* lib/kobject.o */
s##sock
s##seq_file
s##file
s##vm_operations_struct
s##vm_area_struct
s##kernfs_open_node
s##kernfs_iattrs
kobject_get_path extern char * kobject_get_path ( s#kobject * , t#gfp_t ) 
kobject_set_name extern __attribute__ ( ( format ( printf , 2 , 3 ) ) ) int kobject_set_name ( s#kobject * , const char * , ... ) 
kobject_init extern void kobject_init ( s#kobject * , s#kobj_type * ) 
kobject_add extern __attribute__ ( ( format ( printf , 3 , 4 ) ) ) int kobject_add ( s#kobject * , s#kobject * , const char * , ... ) 
kobject_init_and_add extern __attribute__ ( ( format ( printf , 4 , 5 ) ) ) int kobject_init_and_add ( s#kobject * , s#kobj_type * , s#kobject * , const char * , ... ) 
kobject_rename extern int kobject_rename ( s#kobject * , const char * ) 
kobject_move extern int kobject_move ( s#kobject * , s#kobject * ) 
kobject_del extern void kobject_del ( s#kobject * ) 
kobject_get extern s#kobject * kobject_get ( s#kobject * ) 
kobject_get_unless_zero extern s#kobject * kobject_get_unless_zero ( s#kobject * ) 
kobject_put extern void kobject_put ( s#kobject * ) 
kobject_create_and_add extern s#kobject * kobject_create_and_add ( const char * , s#kobject * ) 
kobj_sysfs_ops extern const s#sysfs_ops kobj_sysfs_ops 
kset_register extern int kset_register ( s#kset * ) 
kset_unregister extern void kset_unregister ( s#kset * ) 
kset_find_obj extern s#kobject * kset_find_obj ( s#kset * , const char * ) 
kset_create_and_add extern s#kset * kset_create_and_add ( const char * , const s#kset_uevent_ops * , s#kobject * ) 
kobj_ns_grab_current void * kobj_ns_grab_current ( e#kobj_ns_type ) 
kobj_ns_drop void kobj_ns_drop ( e#kobj_ns_type , void * ) 

/* lib/kobject_uevent.o */
s##posix_acl
s##vfsmount
s##module
s##device_private
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##sec_path
s##workqueue_struct
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##l3mdev_ops
s##ndisc_ops
s##xfrm_state
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##kmem_cache
s##xt_table
s##inet_hashinfo
s##fib_notifier_ops
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##lwtunnel_state
s##rtable
s##dn_route
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##eventfd_ctx
s##mempolicy
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##request_sock_ops
s##timewait_sock_ops
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sock_reuseport
e#kobject_action enum kobject_action { KOBJ_ADD , KOBJ_REMOVE , KOBJ_CHANGE , KOBJ_MOVE , KOBJ_ONLINE , KOBJ_OFFLINE , KOBJ_MAX } 
kobject_uevent_env int kobject_uevent_env ( s#kobject * , e#kobject_action , char * [ ] ) 
kobject_uevent int kobject_uevent ( s#kobject * , e#kobject_action ) 
add_uevent_var __attribute__ ( ( format ( printf , 2 , 3 ) ) ) int add_uevent_var ( s#kobj_uevent_env * , const char * , ... ) 

/* lib/kstrtox.o */
kstrtoull int kstrtoull ( const char * , unsigned int , unsigned long long * ) 
kstrtoll int kstrtoll ( const char * , unsigned int , long long * ) 
_kstrtoul int _kstrtoul ( const char * , unsigned int , unsigned long * ) 
_kstrtol int _kstrtol ( const char * , unsigned int , long * ) 
kstrtouint int kstrtouint ( const char * , unsigned int , unsigned int * ) 
kstrtoint int kstrtoint ( const char * , unsigned int , int * ) 
kstrtou16 int kstrtou16 ( const char * , unsigned int , t#u16 * ) 
kstrtos16 int kstrtos16 ( const char * , unsigned int , t#s16 * ) 
kstrtou8 int kstrtou8 ( const char * , unsigned int , t#u8 * ) 
kstrtos8 int kstrtos8 ( const char * , unsigned int , t#s8 * ) 
kstrtobool int kstrtobool ( const char * , t#bool * ) 
kstrtobool_from_user int kstrtobool_from_user ( const char * , t#size_t , t#bool * ) 
kstrtoull_from_user int kstrtoull_from_user ( const char * , t#size_t , unsigned int , unsigned long long * ) 
kstrtoll_from_user int kstrtoll_from_user ( const char * , t#size_t , unsigned int , long long * ) 
kstrtoul_from_user int kstrtoul_from_user ( const char * , t#size_t , unsigned int , unsigned long * ) 
kstrtol_from_user int kstrtol_from_user ( const char * , t#size_t , unsigned int , long * ) 
kstrtouint_from_user int kstrtouint_from_user ( const char * , t#size_t , unsigned int , unsigned int * ) 
kstrtoint_from_user int kstrtoint_from_user ( const char * , t#size_t , unsigned int , int * ) 
kstrtou16_from_user int kstrtou16_from_user ( const char * , t#size_t , unsigned int , t#u16 * ) 
kstrtos16_from_user int kstrtos16_from_user ( const char * , t#size_t , unsigned int , t#s16 * ) 
kstrtou8_from_user int kstrtou8_from_user ( const char * , t#size_t , unsigned int , t#u8 * ) 
kstrtos8_from_user int kstrtos8_from_user ( const char * , t#size_t , unsigned int , t#s8 * ) 

/* lib/lcm.o */
lcm unsigned long lcm ( unsigned long , unsigned long ) 
lcm_not_zero unsigned long lcm_not_zero ( unsigned long , unsigned long ) 

/* lib/libcrc32c.o */
crc32c extern t#u32 crc32c ( t#u32 , const void * , unsigned int ) 

/* lib/list_sort.o */
list_sort void list_sort ( void * , s#list_head * , int ( * ) ( void * , s#list_head * , s#list_head * ) ) 

/* lib/llist.o */
llist_add_batch extern t#bool llist_add_batch ( s#llist_node * , s#llist_node * , s#llist_head * ) 
llist_del_first extern s#llist_node * llist_del_first ( s#llist_head * ) 
llist_reverse_order s#llist_node * llist_reverse_order ( s#llist_node * ) 

/* lib/lockref.o */
lockref_get extern void lockref_get ( s#lockref * ) 
lockref_get_not_zero extern int lockref_get_not_zero ( s#lockref * ) 
lockref_get_or_lock extern int lockref_get_or_lock ( s#lockref * ) 
lockref_put_return extern int lockref_put_return ( s#lockref * ) 
lockref_put_or_lock extern int lockref_put_or_lock ( s#lockref * ) 
lockref_mark_dead extern void lockref_mark_dead ( s#lockref * ) 
lockref_get_not_dead extern int lockref_get_not_dead ( s#lockref * ) 

/* lib/lz4/lz4_decompress.o */
LZ4_decompress_safe int LZ4_decompress_safe ( const char * , char * , int , int ) 
LZ4_decompress_safe_partial int LZ4_decompress_safe_partial ( const char * , char * , int , int , int ) 
LZ4_decompress_fast int LZ4_decompress_fast ( const char * , char * , int ) 
t#LZ4_streamDecode_t_internal typedef struct { const t#uint8_t * externalDict ; t#size_t extDictSize ; const t#uint8_t * prefixEnd ; t#size_t prefixSize ; } LZ4_streamDecode_t_internal 
t#LZ4_streamDecode_t typedef union { unsigned long long table [ 4 ] ; t#LZ4_streamDecode_t_internal internal_donotuse ; } LZ4_streamDecode_t 
LZ4_setStreamDecode int LZ4_setStreamDecode ( t#LZ4_streamDecode_t * , const char * , int ) 
LZ4_decompress_safe_continue int LZ4_decompress_safe_continue ( t#LZ4_streamDecode_t * , const char * , char * , int , int ) 
LZ4_decompress_fast_continue int LZ4_decompress_fast_continue ( t#LZ4_streamDecode_t * , const char * , char * , int ) 
LZ4_decompress_safe_usingDict int LZ4_decompress_safe_usingDict ( const char * , char * , int , int , const char * , int ) 
LZ4_decompress_fast_usingDict int LZ4_decompress_fast_usingDict ( const char * , char * , int , const char * , int ) 

/* lib/lzo/lzo1x_compress.o */
lzo1x_1_compress int lzo1x_1_compress ( const unsigned char * , t#size_t , unsigned char * , t#size_t * , void * ) 

/* lib/lzo/lzo1x_decompress_safe.o */
lzo1x_decompress_safe int lzo1x_decompress_safe ( const unsigned char * , t#size_t , unsigned char * , t#size_t * ) 

/* lib/memweight.o */
memweight t#size_t memweight ( const void * , t#size_t ) 

/* lib/mpi/mpi-bit.o */
t#mpi_limb_t typedef unsigned long int mpi_limb_t 
s#gcry_mpi struct gcry_mpi { int alloced ; int nlimbs ; int nbits ; int sign ; unsigned flags ; t#mpi_limb_t * d ; } 
t#MPI typedef s#gcry_mpi * MPI 
mpi_get_nbits unsigned mpi_get_nbits ( t#MPI ) 

/* lib/mpi/mpi-cmp.o */
mpi_cmp_ui int mpi_cmp_ui ( t#MPI , t#ulong ) 
mpi_cmp int mpi_cmp ( t#MPI , t#MPI ) 

/* lib/mpi/mpi-pow.o */
mpi_powm int mpi_powm ( t#MPI , t#MPI , t#MPI , t#MPI ) 

/* lib/mpi/mpicoder.o */
mpi_read_raw_data t#MPI mpi_read_raw_data ( const void * , t#size_t ) 
mpi_read_from_buffer t#MPI mpi_read_from_buffer ( const void * , unsigned * ) 
mpi_read_buffer int mpi_read_buffer ( t#MPI , t#uint8_t * , unsigned , unsigned * , int * ) 
mpi_get_buffer void * mpi_get_buffer ( t#MPI , unsigned * , int * ) 
mpi_write_to_sgl int mpi_write_to_sgl ( t#MPI , s#scatterlist * , unsigned , int * ) 
mpi_read_raw_from_sgl t#MPI mpi_read_raw_from_sgl ( s#scatterlist * , unsigned int ) 

/* lib/mpi/mpiutil.o */
mpi_alloc t#MPI mpi_alloc ( unsigned ) 
mpi_free void mpi_free ( t#MPI ) 

/* lib/net_utils.o */
mac_pton t#bool mac_pton ( const char * , t#u8 * ) 

/* lib/nlattr.o */
nla_validate int nla_validate ( const s#nlattr * , int , int , const s#nla_policy * , s#netlink_ext_ack * ) 
nla_policy_len int nla_policy_len ( const s#nla_policy * , int ) 
nla_parse int nla_parse ( s#nlattr * * , int , const s#nlattr * , int , const s#nla_policy * , s#netlink_ext_ack * ) 
nla_find s#nlattr * nla_find ( const s#nlattr * , int , int ) 
nla_strlcpy t#size_t nla_strlcpy ( char * , const s#nlattr * , t#size_t ) 
nla_memcpy int nla_memcpy ( void * , const s#nlattr * , int ) 
nla_memcmp int nla_memcmp ( const s#nlattr * , const void * , t#size_t ) 
nla_strcmp int nla_strcmp ( const s#nlattr * , const char * ) 
s##net_device
s##sock
s##sec_path
__nla_reserve s#nlattr * __nla_reserve ( s#sk_buff * , int , int ) 
__nla_reserve_64bit s#nlattr * __nla_reserve_64bit ( s#sk_buff * , int , int , int ) 
__nla_reserve_nohdr void * __nla_reserve_nohdr ( s#sk_buff * , int ) 
nla_reserve s#nlattr * nla_reserve ( s#sk_buff * , int , int ) 
nla_reserve_64bit s#nlattr * nla_reserve_64bit ( s#sk_buff * , int , int , int ) 
nla_reserve_nohdr void * nla_reserve_nohdr ( s#sk_buff * , int ) 
__nla_put void __nla_put ( s#sk_buff * , int , int , const void * ) 
__nla_put_64bit void __nla_put_64bit ( s#sk_buff * , int , int , const void * , int ) 
__nla_put_nohdr void __nla_put_nohdr ( s#sk_buff * , int , const void * ) 
nla_put int nla_put ( s#sk_buff * , int , int , const void * ) 
nla_put_64bit int nla_put_64bit ( s#sk_buff * , int , int , const void * , int ) 
nla_put_nohdr int nla_put_nohdr ( s#sk_buff * , int , const void * ) 
nla_append int nla_append ( s#sk_buff * , int , const void * ) 

/* lib/nodemask.o */
__next_node_in int __next_node_in ( int , const t#nodemask_t * ) 

/* lib/oid_registry.o */
look_up_OID extern e#OID look_up_OID ( const void * , t#size_t ) 
sprint_oid extern int sprint_oid ( const void * , t#size_t , char * , t#size_t ) 
sprint_OID extern int sprint_OID ( e#OID , char * , t#size_t ) 

/* lib/once.o */
__do_once_start t#bool __do_once_start ( t#bool * , unsigned long * ) 
s##static_key_mod
__do_once_done void __do_once_done ( t#bool * , s#static_key * , unsigned long * ) 

/* lib/parman.o */
s##parman
e#parman_algo_type enum parman_algo_type { PARMAN_ALGO_TYPE_LSORT , } 
s#parman_ops struct parman_ops { unsigned long base_count ; unsigned long resize_step ; int ( * resize ) ( void * , unsigned long ) ; void ( * move ) ( void * , unsigned long , unsigned long , unsigned long ) ; e#parman_algo_type algo ; } 
parman_create s#parman * parman_create ( const s#parman_ops * , void * ) 
parman_destroy void parman_destroy ( s#parman * ) 
s#parman_prio struct parman_prio { s#list_head list ; s#list_head item_list ; unsigned long priority ; } 
parman_prio_init void parman_prio_init ( s#parman * , s#parman_prio * , unsigned long ) 
parman_prio_fini void parman_prio_fini ( s#parman_prio * ) 
s#parman_item struct parman_item { s#list_head list ; unsigned long index ; } 
parman_item_add int parman_item_add ( s#parman * , s#parman_prio * , s#parman_item * ) 
parman_item_remove void parman_item_remove ( s#parman * , s#parman_prio * , s#parman_item * ) 

/* lib/parser.o */
s#match_token struct match_token { int token ; const char * pattern ; } 
t#match_table_t typedef s#match_token match_table_t [ ] 
t#substring_t typedef struct { char * from ; char * to ; } substring_t 
match_token int match_token ( char * , const t#match_table_t , t#substring_t [ ] ) 
match_int int match_int ( t#substring_t * , int * ) 
match_u64 int match_u64 ( t#substring_t * , t#u64 * ) 
match_octal int match_octal ( t#substring_t * , int * ) 
match_hex int match_hex ( t#substring_t * , int * ) 
match_wildcard t#bool match_wildcard ( const char * , const char * ) 
match_strlcpy t#size_t match_strlcpy ( char * , const t#substring_t * , t#size_t ) 
match_strdup char * match_strdup ( const t#substring_t * ) 

/* lib/percpu-refcount.o */
percpu_ref_init int percpu_ref_init ( s#percpu_ref * , t#percpu_ref_func_t * , unsigned int , t#gfp_t ) 
percpu_ref_exit void percpu_ref_exit ( s#percpu_ref * ) 
percpu_ref_switch_to_atomic void percpu_ref_switch_to_atomic ( s#percpu_ref * , t#percpu_ref_func_t * ) 
percpu_ref_switch_to_atomic_sync void percpu_ref_switch_to_atomic_sync ( s#percpu_ref * ) 
percpu_ref_switch_to_percpu void percpu_ref_switch_to_percpu ( s#percpu_ref * ) 
percpu_ref_kill_and_confirm void percpu_ref_kill_and_confirm ( s#percpu_ref * , t#percpu_ref_func_t * ) 
percpu_ref_reinit void percpu_ref_reinit ( s#percpu_ref * ) 

/* lib/percpu_counter.o */
percpu_counter_set void percpu_counter_set ( s#percpu_counter * , t#s64 ) 
percpu_counter_add_batch void percpu_counter_add_batch ( s#percpu_counter * , t#s64 , t#s32 ) 
__percpu_counter_sum t#s64 __percpu_counter_sum ( s#percpu_counter * ) 
__percpu_counter_init int __percpu_counter_init ( s#percpu_counter * , t#s64 , t#gfp_t , s#lock_class_key * ) 
percpu_counter_destroy void percpu_counter_destroy ( s#percpu_counter * ) 
percpu_counter_batch extern int percpu_counter_batch 
__percpu_counter_compare int __percpu_counter_compare ( s#percpu_counter * , t#s64 , t#s32 ) 

/* lib/percpu_ida.o */
s##percpu_ida_cpu
percpu_ida_alloc int percpu_ida_alloc ( s#percpu_ida * , int ) 
percpu_ida_free void percpu_ida_free ( s#percpu_ida * , unsigned ) 
percpu_ida_destroy void percpu_ida_destroy ( s#percpu_ida * ) 
__percpu_ida_init int __percpu_ida_init ( s#percpu_ida * , unsigned long , unsigned long , unsigned long ) 
t#percpu_ida_cb typedef int ( * percpu_ida_cb ) ( unsigned , void * ) 
percpu_ida_for_each_free int percpu_ida_for_each_free ( s#percpu_ida * , t#percpu_ida_cb , void * ) 
percpu_ida_free_tags unsigned percpu_ida_free_tags ( s#percpu_ida * , int ) 

/* lib/radix-tree.o */
radix_tree_preload int radix_tree_preload ( t#gfp_t ) 
radix_tree_maybe_preload int radix_tree_maybe_preload ( t#gfp_t ) 
__radix_tree_insert int __radix_tree_insert ( s#radix_tree_root * , unsigned long , unsigned , void * ) 
radix_tree_lookup_slot void * * radix_tree_lookup_slot ( const s#radix_tree_root * , unsigned long ) 
radix_tree_lookup void * radix_tree_lookup ( const s#radix_tree_root * , unsigned long ) 
radix_tree_replace_slot void radix_tree_replace_slot ( s#radix_tree_root * , void * * , void * ) 
radix_tree_tag_set void * radix_tree_tag_set ( s#radix_tree_root * , unsigned long , unsigned int ) 
radix_tree_tag_clear void * radix_tree_tag_clear ( s#radix_tree_root * , unsigned long , unsigned int ) 
radix_tree_tag_get int radix_tree_tag_get ( const s#radix_tree_root * , unsigned long , unsigned int ) 
s#radix_tree_iter struct radix_tree_iter { unsigned long index ; unsigned long next_index ; unsigned long tags ; s#radix_tree_node * node ; unsigned int shift ; } 
__radix_tree_next_slot void * * __radix_tree_next_slot ( void * * , s#radix_tree_iter * , unsigned ) 
radix_tree_iter_resume void * * radix_tree_iter_resume ( void * * , s#radix_tree_iter * ) 
radix_tree_next_chunk void * * radix_tree_next_chunk ( const s#radix_tree_root * , s#radix_tree_iter * , unsigned ) 
radix_tree_gang_lookup unsigned int radix_tree_gang_lookup ( const s#radix_tree_root * , void * * , unsigned long , unsigned int ) 
radix_tree_gang_lookup_slot unsigned int radix_tree_gang_lookup_slot ( const s#radix_tree_root * , void * * * , unsigned long * , unsigned long , unsigned int ) 
radix_tree_gang_lookup_tag unsigned int radix_tree_gang_lookup_tag ( const s#radix_tree_root * , void * * , unsigned long , unsigned int , unsigned int ) 
radix_tree_gang_lookup_tag_slot unsigned int radix_tree_gang_lookup_tag_slot ( const s#radix_tree_root * , void * * * , unsigned long , unsigned int , unsigned int ) 
radix_tree_iter_delete void radix_tree_iter_delete ( s#radix_tree_root * , s#radix_tree_iter * , void * * ) 
radix_tree_delete_item void * radix_tree_delete_item ( s#radix_tree_root * , unsigned long , void * ) 
radix_tree_delete void * radix_tree_delete ( s#radix_tree_root * , unsigned long ) 
radix_tree_tagged int radix_tree_tagged ( const s#radix_tree_root * , unsigned int ) 
idr_preload void idr_preload ( t#gfp_t ) 
ida_pre_get int ida_pre_get ( s#ida * , t#gfp_t ) 
idr_destroy void idr_destroy ( s#idr * ) 

/* lib/raid6/algos.o */
raid6_empty_zero_page extern const char raid6_empty_zero_page [ ( ( 1UL ) << 12 ) ] 
s#raid6_calls struct raid6_calls { void ( * gen_syndrome ) ( int , t#size_t , void * * ) ; void ( * xor_syndrome ) ( int , int , int , t#size_t , void * * ) ; int ( * valid ) ( void ) ; const char * name ; int prefer ; } 
raid6_call extern s#raid6_calls raid6_call 
raid6_2data_recov extern void ( * raid6_2data_recov ) ( int , t#size_t , int , int , void * * ) 
raid6_datap_recov extern void ( * raid6_datap_recov ) ( int , t#size_t , int , void * * ) 

/* lib/raid6/tables.o */
raid6_gfmul extern const t#u8 raid6_gfmul [ 256 ] [ 256 ] 
raid6_vgfmul extern const t#u8 raid6_vgfmul [ 256 ] [ 32 ] 
raid6_gfexp extern const t#u8 raid6_gfexp [ 256 ] 
raid6_gflog extern const t#u8 raid6_gflog [ 256 ] 
raid6_gfinv extern const t#u8 raid6_gfinv [ 256 ] 
raid6_gfexi extern const t#u8 raid6_gfexi [ 256 ] 

/* lib/random32.o */
prandom_u32_state t#u32 prandom_u32_state ( s#rnd_state * ) 
prandom_u32 t#u32 prandom_u32 ( void ) 
prandom_bytes_state void prandom_bytes_state ( s#rnd_state * , void * , t#size_t ) 
prandom_bytes void prandom_bytes ( void * , t#size_t ) 
prandom_seed void prandom_seed ( t#u32 ) 
prandom_seed_full_state void prandom_seed_full_state ( s#rnd_state * ) 

/* lib/ratelimit.o */
___ratelimit extern int ___ratelimit ( s#ratelimit_state * , const char * ) 

/* lib/rbtree.o */
__rb_erase_color extern void __rb_erase_color ( s#rb_node * , s#rb_root * , void ( * ) ( s#rb_node * , s#rb_node * ) ) 
rb_insert_color extern void rb_insert_color ( s#rb_node * , s#rb_root * ) 
rb_erase extern void rb_erase ( s#rb_node * , s#rb_root * ) 
rb_insert_color_cached extern void rb_insert_color_cached ( s#rb_node * , s#rb_root_cached * , t#bool ) 
rb_erase_cached extern void rb_erase_cached ( s#rb_node * , s#rb_root_cached * ) 
__rb_insert_augmented extern void __rb_insert_augmented ( s#rb_node * , s#rb_root * , t#bool , s#rb_node * * , void ( * ) ( s#rb_node * , s#rb_node * ) ) 
rb_first extern s#rb_node * rb_first ( const s#rb_root * ) 
rb_last extern s#rb_node * rb_last ( const s#rb_root * ) 
rb_next extern s#rb_node * rb_next ( const s#rb_node * ) 
rb_prev extern s#rb_node * rb_prev ( const s#rb_node * ) 
rb_replace_node extern void rb_replace_node ( s#rb_node * , s#rb_node * , s#rb_root * ) 
rb_replace_node_cached extern void rb_replace_node_cached ( s#rb_node * , s#rb_node * , s#rb_root_cached * ) 
rb_replace_node_rcu extern void rb_replace_node_rcu ( s#rb_node * , s#rb_node * , s#rb_root * ) 
rb_next_postorder extern s#rb_node * rb_next_postorder ( const s#rb_node * ) 
rb_first_postorder extern s#rb_node * rb_first_postorder ( const s#rb_root * ) 

/* lib/reciprocal_div.o */
reciprocal_value s#reciprocal_value reciprocal_value ( t#u32 ) 
s#reciprocal_value_adv struct reciprocal_value_adv { t#u32 m ; t#u8 sh , exp ; t#bool is_wide_m ; } 
reciprocal_value_adv s#reciprocal_value_adv reciprocal_value_adv ( t#u32 , t#u8 ) 

/* lib/reed_solomon/reed_solomon.o */
s#rs_control struct rs_control { int mm ; int nn ; t#uint16_t * alpha_to ; t#uint16_t * index_of ; t#uint16_t * genpoly ; int nroots ; int fcr ; int prim ; int iprim ; int gfpoly ; int ( * gffunc ) ( int ) ; int users ; s#list_head list ; } 
free_rs void free_rs ( s#rs_control * ) 
init_rs_gfp s#rs_control * init_rs_gfp ( int , int , int , int , int , t#gfp_t ) 
init_rs_non_canonical s#rs_control * init_rs_non_canonical ( int , int ( * ) ( int ) , int , int , int ) 
decode_rs8 int decode_rs8 ( s#rs_control * , t#uint8_t * , t#uint16_t * , int , t#uint16_t * , int , int * , t#uint16_t , t#uint16_t * ) 

/* lib/refcount.o */
refcount_dec_if_one extern t#bool refcount_dec_if_one ( t#refcount_t * ) 
refcount_dec_not_one extern t#bool refcount_dec_not_one ( t#refcount_t * ) 
refcount_dec_and_mutex_lock extern t#bool refcount_dec_and_mutex_lock ( t#refcount_t * , s#mutex * ) 
refcount_dec_and_lock extern t#bool refcount_dec_and_lock ( t#refcount_t * , t#spinlock_t * ) 

/* lib/rhashtable.o */
rhashtable_insert_slow void * rhashtable_insert_slow ( s#rhashtable * , const void * , s#rhash_head * ) 
s#rhashtable_walker struct rhashtable_walker { s#list_head list ; s#bucket_table * tbl ; } 
s#rhashtable_iter struct rhashtable_iter { s#rhashtable * ht ; s#rhash_head * p ; s#rhlist_head * list ; s#rhashtable_walker walker ; unsigned int slot ; unsigned int skip ; } 
rhashtable_walk_enter void rhashtable_walk_enter ( s#rhashtable * , s#rhashtable_iter * ) 
rhashtable_walk_exit void rhashtable_walk_exit ( s#rhashtable_iter * ) 
rhashtable_walk_start int rhashtable_walk_start ( s#rhashtable_iter * ) 
rhashtable_walk_next void * rhashtable_walk_next ( s#rhashtable_iter * ) 
rhashtable_walk_stop void rhashtable_walk_stop ( s#rhashtable_iter * ) 
rhashtable_init int rhashtable_init ( s#rhashtable * , const s#rhashtable_params * ) 
rhltable_init int rhltable_init ( s#rhltable * , const s#rhashtable_params * ) 
rhashtable_free_and_destroy void rhashtable_free_and_destroy ( s#rhashtable * , void ( * ) ( void * , void * ) , void * ) 
rhashtable_destroy void rhashtable_destroy ( s#rhashtable * ) 
rht_bucket_nested s#rhash_head * * rht_bucket_nested ( const s#bucket_table * , unsigned int ) 
rht_bucket_nested_insert s#rhash_head * * rht_bucket_nested_insert ( s#rhashtable * , s#bucket_table * , unsigned int ) 

/* lib/sbitmap.o */
sbitmap_init_node int sbitmap_init_node ( s#sbitmap * , unsigned int , int , t#gfp_t , int ) 
sbitmap_resize void sbitmap_resize ( s#sbitmap * , unsigned int ) 
sbitmap_get int sbitmap_get ( s#sbitmap * , unsigned int , t#bool ) 
sbitmap_get_shallow int sbitmap_get_shallow ( s#sbitmap * , unsigned int , unsigned long ) 
sbitmap_any_bit_set t#bool sbitmap_any_bit_set ( const s#sbitmap * ) 
sbitmap_any_bit_clear t#bool sbitmap_any_bit_clear ( const s#sbitmap * ) 
sbitmap_weight unsigned int sbitmap_weight ( const s#sbitmap * ) 
s##vfsmount
s##posix_acl
s##module
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##compat_timespec
s##pollfd
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##mem_cgroup
s##uprobe
s##gs_cb
s##iov_iter
s##swap_info_struct
s##dev_pagemap
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
sbitmap_show void sbitmap_show ( s#sbitmap * , s#seq_file * ) 
sbitmap_bitmap_show void sbitmap_bitmap_show ( s#sbitmap * , s#seq_file * ) 
sbitmap_queue_init_node int sbitmap_queue_init_node ( s#sbitmap_queue * , unsigned int , int , t#bool , t#gfp_t , int ) 
sbitmap_queue_resize void sbitmap_queue_resize ( s#sbitmap_queue * , unsigned int ) 
__sbitmap_queue_get int __sbitmap_queue_get ( s#sbitmap_queue * ) 
__sbitmap_queue_get_shallow int __sbitmap_queue_get_shallow ( s#sbitmap_queue * , unsigned int ) 
sbitmap_queue_min_shallow_depth void sbitmap_queue_min_shallow_depth ( s#sbitmap_queue * , unsigned int ) 
sbitmap_queue_wake_up void sbitmap_queue_wake_up ( s#sbitmap_queue * ) 
sbitmap_queue_clear void sbitmap_queue_clear ( s#sbitmap_queue * , unsigned int , unsigned int ) 
sbitmap_queue_wake_all void sbitmap_queue_wake_all ( s#sbitmap_queue * ) 
sbitmap_queue_show void sbitmap_queue_show ( s#sbitmap_queue * , s#seq_file * ) 

/* lib/scatterlist.o */
sg_next s#scatterlist * sg_next ( s#scatterlist * ) 
sg_nents int sg_nents ( s#scatterlist * ) 
sg_nents_for_len int sg_nents_for_len ( s#scatterlist * , t#u64 ) 
sg_last s#scatterlist * sg_last ( s#scatterlist * , unsigned int ) 
sg_init_table void sg_init_table ( s#scatterlist * , unsigned int ) 
sg_init_one void sg_init_one ( s#scatterlist * , const void * , unsigned int ) 
t#sg_free_fn typedef void ( sg_free_fn ) ( s#scatterlist * , unsigned int ) 
__sg_free_table void __sg_free_table ( s#sg_table * , unsigned int , t#bool , t#sg_free_fn * ) 
sg_free_table void sg_free_table ( s#sg_table * ) 
t#sg_alloc_fn typedef s#scatterlist * ( sg_alloc_fn ) ( unsigned int , t#gfp_t ) 
__sg_alloc_table int __sg_alloc_table ( s#sg_table * , unsigned int , unsigned int , s#scatterlist * , t#gfp_t , t#sg_alloc_fn * ) 
sg_alloc_table int sg_alloc_table ( s#sg_table * , unsigned int , t#gfp_t ) 
s##posix_acl
s##vfsmount
s##module
s##writeback_control
s##kstatfs
s##seq_file
s##mem_cgroup
s##export_operations
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mempolicy
s##iov_iter
s##poll_table_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cred
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##compat_timespec
s##pollfd
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##device
s##kmem_cache
__sg_alloc_table_from_pages int __sg_alloc_table_from_pages ( s#sg_table * , s#page * * , unsigned int , unsigned int , unsigned long , unsigned int , t#gfp_t ) 
sg_alloc_table_from_pages int sg_alloc_table_from_pages ( s#sg_table * , s#page * * , unsigned int , unsigned int , unsigned long , t#gfp_t ) 
sgl_alloc_order s#scatterlist * sgl_alloc_order ( unsigned long long , unsigned int , t#bool , t#gfp_t , unsigned int * ) 
sgl_alloc s#scatterlist * sgl_alloc ( unsigned long long , t#gfp_t , unsigned int * ) 
sgl_free_n_order void sgl_free_n_order ( s#scatterlist * , int , int ) 
sgl_free_order void sgl_free_order ( s#scatterlist * , int ) 
sgl_free void sgl_free ( s#scatterlist * ) 
s#sg_page_iter struct sg_page_iter { s#scatterlist * sg ; unsigned int sg_pgoffset ; unsigned int __nents ; int __pg_advance ; } 
__sg_page_iter_start void __sg_page_iter_start ( s#sg_page_iter * , s#scatterlist * , unsigned int , unsigned long ) 
__sg_page_iter_next t#bool __sg_page_iter_next ( s#sg_page_iter * ) 
s#sg_mapping_iter struct sg_mapping_iter { s#page * page ; void * addr ; t#size_t length ; t#size_t consumed ; s#sg_page_iter piter ; unsigned int __offset ; unsigned int __remaining ; unsigned int __flags ; } 
sg_miter_start void sg_miter_start ( s#sg_mapping_iter * , s#scatterlist * , unsigned int , unsigned int ) 
t#__kernel_off_t typedef t#__kernel_long_t __kernel_off_t 
t#off_t typedef t#__kernel_off_t off_t 
sg_miter_skip t#bool sg_miter_skip ( s#sg_mapping_iter * , t#off_t ) 
sg_miter_next t#bool sg_miter_next ( s#sg_mapping_iter * ) 
sg_miter_stop void sg_miter_stop ( s#sg_mapping_iter * ) 
sg_copy_buffer t#size_t sg_copy_buffer ( s#scatterlist * , unsigned int , void * , t#size_t , t#off_t , t#bool ) 
sg_copy_from_buffer t#size_t sg_copy_from_buffer ( s#scatterlist * , unsigned int , const void * , t#size_t ) 
sg_copy_to_buffer t#size_t sg_copy_to_buffer ( s#scatterlist * , unsigned int , void * , t#size_t ) 
sg_pcopy_from_buffer t#size_t sg_pcopy_from_buffer ( s#scatterlist * , unsigned int , const void * , t#size_t , t#off_t ) 
sg_pcopy_to_buffer t#size_t sg_pcopy_to_buffer ( s#scatterlist * , unsigned int , void * , t#size_t , t#off_t ) 
sg_zero_buffer t#size_t sg_zero_buffer ( s#scatterlist * , unsigned int , t#size_t , t#off_t ) 

/* lib/sg_pool.o */
sg_free_table_chained void sg_free_table_chained ( s#sg_table * , t#bool ) 
sg_alloc_table_chained int sg_alloc_table_chained ( s#sg_table * , int , s#scatterlist * ) 

/* lib/sha1.o */
sha_transform void sha_transform ( t#__u32 * , const char * , t#__u32 * ) 
sha_init void sha_init ( t#__u32 * ) 

/* lib/siphash.o */
t#siphash_key_t typedef struct { t#u64 key [ 2 ] ; } siphash_key_t 
__siphash_aligned t#u64 __siphash_aligned ( const void * , t#size_t , const t#siphash_key_t * ) 
siphash_1u64 t#u64 siphash_1u64 ( const t#u64 , const t#siphash_key_t * ) 
siphash_2u64 t#u64 siphash_2u64 ( const t#u64 , const t#u64 , const t#siphash_key_t * ) 
siphash_3u64 t#u64 siphash_3u64 ( const t#u64 , const t#u64 , const t#u64 , const t#siphash_key_t * ) 
siphash_4u64 t#u64 siphash_4u64 ( const t#u64 , const t#u64 , const t#u64 , const t#u64 , const t#siphash_key_t * ) 
siphash_1u32 t#u64 siphash_1u32 ( const t#u32 , const t#siphash_key_t * ) 
siphash_3u32 t#u64 siphash_3u32 ( const t#u32 , const t#u32 , const t#u32 , const t#siphash_key_t * ) 
t#hsiphash_key_t typedef struct { unsigned long key [ 2 ] ; } hsiphash_key_t 
__hsiphash_aligned t#u32 __hsiphash_aligned ( const void * , t#size_t , const t#hsiphash_key_t * ) 
hsiphash_1u32 t#u32 hsiphash_1u32 ( const t#u32 , const t#hsiphash_key_t * ) 
hsiphash_2u32 t#u32 hsiphash_2u32 ( const t#u32 , const t#u32 , const t#hsiphash_key_t * ) 
hsiphash_3u32 t#u32 hsiphash_3u32 ( const t#u32 , const t#u32 , const t#u32 , const t#hsiphash_key_t * ) 
hsiphash_4u32 t#u32 hsiphash_4u32 ( const t#u32 , const t#u32 , const t#u32 , const t#u32 , const t#hsiphash_key_t * ) 

/* lib/sort.o */
sort void sort ( void * , t#size_t , t#size_t , int ( * ) ( const void * , const void * ) , void ( * ) ( void * , void * , int ) ) 

/* lib/stackdepot.o */
t#depot_stack_handle_t typedef t#u32 depot_stack_handle_t 
depot_fetch_stack void depot_fetch_stack ( t#depot_stack_handle_t , s#stack_trace * ) 
depot_save_stack t#depot_stack_handle_t depot_save_stack ( s#stack_trace * , t#gfp_t ) 

/* lib/string.o */
strncasecmp extern int strncasecmp ( const char * , const char * , t#size_t ) 
strcasecmp extern int strcasecmp ( const char * , const char * ) 
strscpy t#ssize_t strscpy ( char * , const char * , t#size_t ) 
strncmp extern int strncmp ( const char * , const char * , t#__kernel_size_t ) 
strchr extern char * strchr ( const char * , int ) 
strchrnul extern char * strchrnul ( const char * , int ) 
strnchr extern char * strnchr ( const char * , t#size_t , int ) 
skip_spaces extern char * skip_spaces ( const char * ) 
strim extern char * strim ( char * ) 
strspn extern t#__kernel_size_t strspn ( const char * , const char * ) 
strcspn extern t#__kernel_size_t strcspn ( const char * , const char * ) 
strpbrk extern char * strpbrk ( const char * , const char * ) 
strsep extern char * strsep ( char * * , const char * ) 
sysfs_streq extern t#bool sysfs_streq ( const char * , const char * ) 
match_string int match_string ( const char * const * , t#size_t , const char * ) 
__sysfs_match_string int __sysfs_match_string ( const char * const * , t#size_t , const char * ) 
memzero_explicit void memzero_explicit ( void * , t#size_t ) 
memset16 extern void * memset16 ( t#uint16_t * , t#uint16_t , t#__kernel_size_t ) 
memset32 extern void * memset32 ( t#uint32_t * , t#uint32_t , t#__kernel_size_t ) 
memset64 extern void * memset64 ( t#uint64_t * , t#uint64_t , t#__kernel_size_t ) 
strnstr extern char * strnstr ( const char * , const char * , t#size_t ) 
memchr_inv void * memchr_inv ( const void * , int , t#size_t ) 
strreplace char * strreplace ( char * , char , char ) 

/* lib/string_helpers.o */
e#string_size_units enum string_size_units { STRING_UNITS_10 , STRING_UNITS_2 , } 
string_get_size void string_get_size ( t#u64 , t#u64 , e#string_size_units , char * , int ) 
string_unescape int string_unescape ( char * , char * , t#size_t , unsigned int ) 
string_escape_mem int string_escape_mem ( const char * , t#size_t , char * , t#size_t , unsigned int , const char * ) 
kstrdup_quotable char * kstrdup_quotable ( const char * , t#gfp_t ) 
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##module
s##writeback_control
s##kstatfs
s##seq_file
s##mem_cgroup
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##user_namespace
s##iov_iter
s##poll_table_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cred
s##bdi_writeback
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##device
s##kmem_cache
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##compat_timespec
s##pollfd
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
kstrdup_quotable_cmdline char * kstrdup_quotable_cmdline ( s#task_struct * , t#gfp_t ) 
kstrdup_quotable_file char * kstrdup_quotable_file ( s#file * , t#gfp_t ) 

/* lib/swiotlb.o */
swiotlb_nr_tbl extern unsigned long swiotlb_nr_tbl ( void ) 
swiotlb_max_segment unsigned int swiotlb_max_segment ( void ) 
s##device_private
s##sock
s##vfsmount
s##posix_acl
s##module
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##mmu_notifier_mm
s##xol_area
s##compat_timespec
s##kmem_cache
s##fs_pin
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##bpf_prog_array
s##cgroup_taskset
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##ring_buffer
s##bpf_prog
s##static_key_mod
s##trace_array
s##tracer
s##trace_buffer
s##ring_buffer_iter
s##event_filter
s##ftrace_hash
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##uprobe
s##gs_cb
s##iov_iter
s##swap_info_struct
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
swiotlb_tbl_map_single extern t#phys_addr_t swiotlb_tbl_map_single ( s#device * , t#dma_addr_t , t#phys_addr_t , t#size_t , e#dma_data_direction , unsigned long ) 
swiotlb_tbl_unmap_single extern void swiotlb_tbl_unmap_single ( s#device * , t#phys_addr_t , t#size_t , e#dma_data_direction , unsigned long ) 
e#dma_sync_target enum dma_sync_target { SYNC_FOR_CPU = 0 , SYNC_FOR_DEVICE = 1 , } 
swiotlb_tbl_sync_single extern void swiotlb_tbl_sync_single ( s#device * , t#phys_addr_t , t#size_t , e#dma_data_direction , e#dma_sync_target ) 
swiotlb_alloc_coherent extern void * swiotlb_alloc_coherent ( s#device * , t#size_t , t#dma_addr_t * , t#gfp_t ) 
swiotlb_free_coherent extern void swiotlb_free_coherent ( s#device * , t#size_t , void * , t#dma_addr_t ) 
swiotlb_map_page extern t#dma_addr_t swiotlb_map_page ( s#device * , s#page * , unsigned long , t#size_t , e#dma_data_direction , unsigned long ) 
swiotlb_unmap_page extern void swiotlb_unmap_page ( s#device * , t#dma_addr_t , t#size_t , e#dma_data_direction , unsigned long ) 
swiotlb_sync_single_for_cpu extern void swiotlb_sync_single_for_cpu ( s#device * , t#dma_addr_t , t#size_t , e#dma_data_direction ) 
swiotlb_sync_single_for_device extern void swiotlb_sync_single_for_device ( s#device * , t#dma_addr_t , t#size_t , e#dma_data_direction ) 
swiotlb_map_sg_attrs extern int swiotlb_map_sg_attrs ( s#device * , s#scatterlist * , int , e#dma_data_direction , unsigned long ) 
swiotlb_unmap_sg_attrs extern void swiotlb_unmap_sg_attrs ( s#device * , s#scatterlist * , int , e#dma_data_direction , unsigned long ) 
swiotlb_sync_sg_for_cpu extern void swiotlb_sync_sg_for_cpu ( s#device * , s#scatterlist * , int , e#dma_data_direction ) 
swiotlb_sync_sg_for_device extern void swiotlb_sync_sg_for_device ( s#device * , s#scatterlist * , int , e#dma_data_direction ) 
swiotlb_dma_mapping_error extern int swiotlb_dma_mapping_error ( s#device * , t#dma_addr_t ) 
swiotlb_dma_supported extern int swiotlb_dma_supported ( s#device * , t#u64 ) 
swiotlb_max_mapping_size t#size_t swiotlb_max_mapping_size ( s#device * ) 
is_swiotlb_active t#bool is_swiotlb_active ( void ) 

/* lib/textsearch.o */
s#ts_state struct ts_state { unsigned int offset ; char cb [ 40 ] ; } 
s#ts_config struct ts_config { s#ts_ops * ops ; int flags ; unsigned int ( * get_next_block ) ( unsigned int , const t#u8 * * , s#ts_config * , s#ts_state * ) ; void ( * finish ) ( s#ts_config * , s#ts_state * ) ; } 
s##sock
s##seq_file
s##vfsmount
s##posix_acl
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##device
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s#ts_ops struct ts_ops { const char * name ; s#ts_config * ( * init ) ( const void * , unsigned int , t#gfp_t , int ) ; unsigned int ( * find ) ( s#ts_config * , s#ts_state * ) ; void ( * destroy ) ( s#ts_config * ) ; void * ( * get_pattern ) ( s#ts_config * ) ; unsigned int ( * get_pattern_len ) ( s#ts_config * ) ; s#module * owner ; s#list_head list ; } 
textsearch_register extern int textsearch_register ( s#ts_ops * ) 
textsearch_unregister extern int textsearch_unregister ( s#ts_ops * ) 
textsearch_find_continuous extern unsigned int textsearch_find_continuous ( s#ts_config * , s#ts_state * , const void * , unsigned int ) 
textsearch_prepare extern s#ts_config * textsearch_prepare ( const char * , const void * , unsigned int , t#gfp_t , int ) 
textsearch_destroy extern void textsearch_destroy ( s#ts_config * ) 

/* lib/timerqueue.o */
timerqueue_add extern t#bool timerqueue_add ( s#timerqueue_head * , s#timerqueue_node * ) 
timerqueue_del extern t#bool timerqueue_del ( s#timerqueue_head * , s#timerqueue_node * ) 
timerqueue_iterate_next extern s#timerqueue_node * timerqueue_iterate_next ( s#timerqueue_node * ) 

/* lib/uuid.o */
guid_null extern const t#guid_t guid_null 
uuid_null extern const t#uuid_t uuid_null 
generate_random_uuid void generate_random_uuid ( unsigned char [ 16 ] ) 
guid_gen extern void guid_gen ( t#guid_t * ) 
uuid_gen extern void uuid_gen ( t#uuid_t * ) 
uuid_is_valid t#bool uuid_is_valid ( const char * ) 
guid_parse int guid_parse ( const char * , t#guid_t * ) 
uuid_parse int uuid_parse ( const char * , t#uuid_t * ) 

/* lib/vsprintf.o */
simple_strtoull extern unsigned long long simple_strtoull ( const char * , char * * , unsigned int ) 
simple_strtoul extern unsigned long simple_strtoul ( const char * , char * * , unsigned int ) 
simple_strtol extern long simple_strtol ( const char * , char * * , unsigned int ) 
simple_strtoll extern long long simple_strtoll ( const char * , char * * , unsigned int ) 
vsnprintf extern __attribute__ ( ( format ( printf , 3 , 0 ) ) ) int vsnprintf ( char * , t#size_t , const char * , t#va_list ) 
vscnprintf extern __attribute__ ( ( format ( printf , 3 , 0 ) ) ) int vscnprintf ( char * , t#size_t , const char * , t#va_list ) 
snprintf extern __attribute__ ( ( format ( printf , 3 , 4 ) ) ) int snprintf ( char * , t#size_t , const char * , ... ) 
scnprintf extern __attribute__ ( ( format ( printf , 3 , 4 ) ) ) int scnprintf ( char * , t#size_t , const char * , ... ) 
vsprintf extern __attribute__ ( ( format ( printf , 2 , 0 ) ) ) int vsprintf ( char * , const char * , t#va_list ) 
sprintf extern __attribute__ ( ( format ( printf , 2 , 3 ) ) ) int sprintf ( char * , const char * , ... ) 
vbin_printf int vbin_printf ( t#u32 * , t#size_t , const char * , t#va_list ) 
bstr_printf int bstr_printf ( char * , t#size_t , const char * , const t#u32 * ) 
bprintf int bprintf ( t#u32 * , t#size_t , const char * , ... ) 
vsscanf extern __attribute__ ( ( format ( scanf , 2 , 0 ) ) ) int vsscanf ( const char * , const char * , t#va_list ) 
sscanf extern __attribute__ ( ( format ( scanf , 2 , 3 ) ) ) int sscanf ( const char * , const char * , ... ) 

/* lib/win_minmax.o */
s#minmax_sample struct minmax_sample { t#u32 t ; t#u32 v ; } 
s#minmax struct minmax { s#minmax_sample s [ 3 ] ; } 
minmax_running_max t#u32 minmax_running_max ( s#minmax * , t#u32 , t#u32 , t#u32 ) 

/* lib/xxhash.o */
s#xxh32_state struct xxh32_state { t#uint32_t total_len_32 ; t#uint32_t large_len ; t#uint32_t v1 ; t#uint32_t v2 ; t#uint32_t v3 ; t#uint32_t v4 ; t#uint32_t mem32 [ 4 ] ; t#uint32_t memsize ; } 
xxh32_copy_state void xxh32_copy_state ( s#xxh32_state * , const s#xxh32_state * ) 
s#xxh64_state struct xxh64_state { t#uint64_t total_len ; t#uint64_t v1 ; t#uint64_t v2 ; t#uint64_t v3 ; t#uint64_t v4 ; t#uint64_t mem64 [ 4 ] ; t#uint32_t memsize ; } 
xxh64_copy_state void xxh64_copy_state ( s#xxh64_state * , const s#xxh64_state * ) 
xxh32 t#uint32_t xxh32 ( const void * , t#size_t , t#uint32_t ) 
xxh64 t#uint64_t xxh64 ( const void * , t#size_t , t#uint64_t ) 
xxh32_reset void xxh32_reset ( s#xxh32_state * , t#uint32_t ) 
xxh64_reset void xxh64_reset ( s#xxh64_state * , t#uint64_t ) 
xxh32_update int xxh32_update ( s#xxh32_state * , const void * , t#size_t ) 
xxh32_digest t#uint32_t xxh32_digest ( const s#xxh32_state * ) 
xxh64_update int xxh64_update ( s#xxh64_state * , const void * , t#size_t ) 
xxh64_digest t#uint64_t xxh64_digest ( const s#xxh64_state * ) 

/* lib/xz/xz_dec_syms.o */
s##xz_dec
e#xz_mode enum xz_mode { XZ_SINGLE , XZ_PREALLOC , XZ_DYNALLOC } 
xz_dec_init extern s#xz_dec * xz_dec_init ( e#xz_mode , t#uint32_t ) 
xz_dec_reset extern void xz_dec_reset ( s#xz_dec * ) 
e#xz_ret enum xz_ret { XZ_OK , XZ_STREAM_END , XZ_UNSUPPORTED_CHECK , XZ_MEM_ERROR , XZ_MEMLIMIT_ERROR , XZ_FORMAT_ERROR , XZ_OPTIONS_ERROR , XZ_DATA_ERROR , XZ_BUF_ERROR } 
s#xz_buf struct xz_buf { const t#uint8_t * in ; t#size_t in_pos ; t#size_t in_size ; t#uint8_t * out ; t#size_t out_pos ; t#size_t out_size ; } 
xz_dec_run extern e#xz_ret xz_dec_run ( s#xz_dec * , s#xz_buf * ) 
xz_dec_end extern void xz_dec_end ( s#xz_dec * ) 

/* lib/zlib_deflate/deflate_syms.o */
zlib_deflate_workspacesize extern int zlib_deflate_workspacesize ( int , int ) 
t#Byte typedef unsigned char Byte 
t#uLong typedef unsigned long uLong 
s#internal_state struct internal_state { int dummy ; } 
s#z_stream_s struct z_stream_s { const t#Byte * next_in ; t#uLong avail_in ; t#uLong total_in ; t#Byte * next_out ; t#uLong avail_out ; t#uLong total_out ; char * msg ; s#internal_state * state ; void * workspace ; int data_type ; t#uLong adler ; t#uLong reserved ; } 
t#z_stream typedef s#z_stream_s z_stream 
t#z_streamp typedef t#z_stream * z_streamp 
zlib_deflate extern int zlib_deflate ( t#z_streamp , int ) 
zlib_deflateInit2 extern int zlib_deflateInit2 ( t#z_streamp , int , int , int , int , int ) 
zlib_deflateEnd extern int zlib_deflateEnd ( t#z_streamp ) 
zlib_deflateReset extern int zlib_deflateReset ( t#z_streamp ) 

/* lib/zlib_inflate/inflate_syms.o */
zlib_inflate_workspacesize extern int zlib_inflate_workspacesize ( void ) 
zlib_inflate extern int zlib_inflate ( t#z_streamp , int ) 
zlib_inflateInit2 extern int zlib_inflateInit2 ( t#z_streamp , int ) 
zlib_inflateEnd extern int zlib_inflateEnd ( t#z_streamp ) 
zlib_inflateReset extern int zlib_inflateReset ( t#z_streamp ) 
zlib_inflateIncomp extern int zlib_inflateIncomp ( t#z_stream * ) 
zlib_inflate_blob extern int zlib_inflate_blob ( void * , unsigned , const void * , unsigned ) 

/* lib/zstd/compress.o */
ZSTD_maxCLevel int ZSTD_maxCLevel ( void ) 
ZSTD_compressBound t#size_t ZSTD_compressBound ( t#size_t ) 
t#ZSTD_strategy typedef enum { ZSTD_fast , ZSTD_dfast , ZSTD_greedy , ZSTD_lazy , ZSTD_lazy2 , ZSTD_btlazy2 , ZSTD_btopt , ZSTD_btopt2 } ZSTD_strategy 
t#ZSTD_compressionParameters typedef struct { unsigned int windowLog ; unsigned int chainLog ; unsigned int hashLog ; unsigned int searchLog ; unsigned int searchLength ; unsigned int targetLength ; t#ZSTD_strategy strategy ; } ZSTD_compressionParameters 
ZSTD_CCtxWorkspaceBound t#size_t ZSTD_CCtxWorkspaceBound ( t#ZSTD_compressionParameters ) 
s##ZSTD_CCtx_s
t#ZSTD_CCtx typedef s#ZSTD_CCtx_s ZSTD_CCtx 
ZSTD_initCCtx t#ZSTD_CCtx * ZSTD_initCCtx ( void * , t#size_t ) 
t#ZSTD_frameParameters typedef struct { unsigned int contentSizeFlag ; unsigned int checksumFlag ; unsigned int noDictIDFlag ; } ZSTD_frameParameters 
t#ZSTD_parameters typedef struct { t#ZSTD_compressionParameters cParams ; t#ZSTD_frameParameters fParams ; } ZSTD_parameters 
ZSTD_compressCCtx t#size_t ZSTD_compressCCtx ( t#ZSTD_CCtx * , void * , t#size_t , const void * , t#size_t , t#ZSTD_parameters ) 
ZSTD_compress_usingDict t#size_t ZSTD_compress_usingDict ( t#ZSTD_CCtx * , void * , t#size_t , const void * , t#size_t , const void * , t#size_t , t#ZSTD_parameters ) 
ZSTD_CDictWorkspaceBound t#size_t ZSTD_CDictWorkspaceBound ( t#ZSTD_compressionParameters ) 
s##ZSTD_CDict_s
t#ZSTD_CDict typedef s#ZSTD_CDict_s ZSTD_CDict 
ZSTD_initCDict t#ZSTD_CDict * ZSTD_initCDict ( const void * , t#size_t , t#ZSTD_parameters , void * , t#size_t ) 
ZSTD_compress_usingCDict t#size_t ZSTD_compress_usingCDict ( t#ZSTD_CCtx * , void * , t#size_t , const void * , t#size_t , const t#ZSTD_CDict * ) 
ZSTD_CStreamWorkspaceBound t#size_t ZSTD_CStreamWorkspaceBound ( t#ZSTD_compressionParameters ) 
s##ZSTD_CStream_s
t#ZSTD_CStream typedef s#ZSTD_CStream_s ZSTD_CStream 
ZSTD_initCStream t#ZSTD_CStream * ZSTD_initCStream ( t#ZSTD_parameters , unsigned long long , void * , t#size_t ) 
ZSTD_initCStream_usingCDict t#ZSTD_CStream * ZSTD_initCStream_usingCDict ( const t#ZSTD_CDict * , unsigned long long , void * , t#size_t ) 
ZSTD_resetCStream t#size_t ZSTD_resetCStream ( t#ZSTD_CStream * , unsigned long long ) 
s#ZSTD_outBuffer_s struct ZSTD_outBuffer_s { void * dst ; t#size_t size ; t#size_t pos ; } 
t#ZSTD_outBuffer typedef s#ZSTD_outBuffer_s ZSTD_outBuffer 
s#ZSTD_inBuffer_s struct ZSTD_inBuffer_s { const void * src ; t#size_t size ; t#size_t pos ; } 
t#ZSTD_inBuffer typedef s#ZSTD_inBuffer_s ZSTD_inBuffer 
ZSTD_compressStream t#size_t ZSTD_compressStream ( t#ZSTD_CStream * , t#ZSTD_outBuffer * , t#ZSTD_inBuffer * ) 
ZSTD_flushStream t#size_t ZSTD_flushStream ( t#ZSTD_CStream * , t#ZSTD_outBuffer * ) 
ZSTD_endStream t#size_t ZSTD_endStream ( t#ZSTD_CStream * , t#ZSTD_outBuffer * ) 
ZSTD_CStreamInSize t#size_t ZSTD_CStreamInSize ( void ) 
ZSTD_CStreamOutSize t#size_t ZSTD_CStreamOutSize ( void ) 
ZSTD_getCParams t#ZSTD_compressionParameters ZSTD_getCParams ( int , unsigned long long , t#size_t ) 
ZSTD_getParams t#ZSTD_parameters ZSTD_getParams ( int , unsigned long long , t#size_t ) 
ZSTD_checkCParams t#size_t ZSTD_checkCParams ( t#ZSTD_compressionParameters ) 
ZSTD_adjustCParams t#ZSTD_compressionParameters ZSTD_adjustCParams ( t#ZSTD_compressionParameters , unsigned long long , t#size_t ) 
ZSTD_compressBegin t#size_t ZSTD_compressBegin ( t#ZSTD_CCtx * , int ) 
ZSTD_compressBegin_usingDict t#size_t ZSTD_compressBegin_usingDict ( t#ZSTD_CCtx * , const void * , t#size_t , int ) 
ZSTD_compressBegin_advanced t#size_t ZSTD_compressBegin_advanced ( t#ZSTD_CCtx * , const void * , t#size_t , t#ZSTD_parameters , unsigned long long ) 
ZSTD_copyCCtx t#size_t ZSTD_copyCCtx ( t#ZSTD_CCtx * , const t#ZSTD_CCtx * , unsigned long long ) 
ZSTD_compressBegin_usingCDict t#size_t ZSTD_compressBegin_usingCDict ( t#ZSTD_CCtx * , const t#ZSTD_CDict * , unsigned long long ) 
ZSTD_compressContinue t#size_t ZSTD_compressContinue ( t#ZSTD_CCtx * , void * , t#size_t , const void * , t#size_t ) 
ZSTD_compressEnd t#size_t ZSTD_compressEnd ( t#ZSTD_CCtx * , void * , t#size_t , const void * , t#size_t ) 
ZSTD_getBlockSizeMax t#size_t ZSTD_getBlockSizeMax ( t#ZSTD_CCtx * ) 
ZSTD_compressBlock t#size_t ZSTD_compressBlock ( t#ZSTD_CCtx * , void * , t#size_t , const void * , t#size_t ) 

/* lib/zstd/decompress.o */
ZSTD_DCtxWorkspaceBound t#size_t ZSTD_DCtxWorkspaceBound ( void ) 
s##ZSTD_DCtx_s
t#ZSTD_DCtx typedef s#ZSTD_DCtx_s ZSTD_DCtx 
ZSTD_initDCtx t#ZSTD_DCtx * ZSTD_initDCtx ( void * , t#size_t ) 
ZSTD_decompressDCtx t#size_t ZSTD_decompressDCtx ( t#ZSTD_DCtx * , void * , t#size_t , const void * , t#size_t ) 
ZSTD_decompress_usingDict t#size_t ZSTD_decompress_usingDict ( t#ZSTD_DCtx * , void * , t#size_t , const void * , t#size_t , const void * , t#size_t ) 
ZSTD_DDictWorkspaceBound t#size_t ZSTD_DDictWorkspaceBound ( void ) 
s##ZSTD_DDict_s
t#ZSTD_DDict typedef s#ZSTD_DDict_s ZSTD_DDict 
ZSTD_initDDict t#ZSTD_DDict * ZSTD_initDDict ( const void * , t#size_t , void * , t#size_t ) 
ZSTD_decompress_usingDDict t#size_t ZSTD_decompress_usingDDict ( t#ZSTD_DCtx * , void * , t#size_t , const void * , t#size_t , const t#ZSTD_DDict * ) 
ZSTD_DStreamWorkspaceBound t#size_t ZSTD_DStreamWorkspaceBound ( t#size_t ) 
s##ZSTD_DStream_s
t#ZSTD_DStream typedef s#ZSTD_DStream_s ZSTD_DStream 
ZSTD_initDStream t#ZSTD_DStream * ZSTD_initDStream ( t#size_t , void * , t#size_t ) 
ZSTD_initDStream_usingDDict t#ZSTD_DStream * ZSTD_initDStream_usingDDict ( t#size_t , const t#ZSTD_DDict * , void * , t#size_t ) 
ZSTD_resetDStream t#size_t ZSTD_resetDStream ( t#ZSTD_DStream * ) 
ZSTD_decompressStream t#size_t ZSTD_decompressStream ( t#ZSTD_DStream * , t#ZSTD_outBuffer * , t#ZSTD_inBuffer * ) 
ZSTD_DStreamInSize t#size_t ZSTD_DStreamInSize ( void ) 
ZSTD_DStreamOutSize t#size_t ZSTD_DStreamOutSize ( void ) 
ZSTD_findFrameCompressedSize t#size_t ZSTD_findFrameCompressedSize ( const void * , t#size_t ) 
ZSTD_getFrameContentSize unsigned long long ZSTD_getFrameContentSize ( const void * , t#size_t ) 
ZSTD_findDecompressedSize unsigned long long ZSTD_findDecompressedSize ( const void * , t#size_t ) 
ZSTD_isFrame unsigned int ZSTD_isFrame ( const void * , t#size_t ) 
ZSTD_getDictID_fromDict unsigned int ZSTD_getDictID_fromDict ( const void * , t#size_t ) 
ZSTD_getDictID_fromDDict unsigned int ZSTD_getDictID_fromDDict ( const t#ZSTD_DDict * ) 
ZSTD_getDictID_fromFrame unsigned int ZSTD_getDictID_fromFrame ( const void * , t#size_t ) 
t#ZSTD_frameParams typedef struct { unsigned long long frameContentSize ; unsigned int windowSize ; unsigned int dictID ; unsigned int checksumFlag ; } ZSTD_frameParams 
ZSTD_getFrameParams t#size_t ZSTD_getFrameParams ( t#ZSTD_frameParams * , const void * , t#size_t ) 
ZSTD_decompressBegin t#size_t ZSTD_decompressBegin ( t#ZSTD_DCtx * ) 
ZSTD_decompressBegin_usingDict t#size_t ZSTD_decompressBegin_usingDict ( t#ZSTD_DCtx * , const void * , t#size_t ) 
ZSTD_copyDCtx void ZSTD_copyDCtx ( t#ZSTD_DCtx * , const t#ZSTD_DCtx * ) 
ZSTD_nextSrcSizeToDecompress t#size_t ZSTD_nextSrcSizeToDecompress ( t#ZSTD_DCtx * ) 
ZSTD_decompressContinue t#size_t ZSTD_decompressContinue ( t#ZSTD_DCtx * , void * , t#size_t , const void * , t#size_t ) 
t#ZSTD_nextInputType_e typedef enum { ZSTDnit_frameHeader , ZSTDnit_blockHeader , ZSTDnit_block , ZSTDnit_lastBlock , ZSTDnit_checksum , ZSTDnit_skippableFrame } ZSTD_nextInputType_e 
ZSTD_nextInputType t#ZSTD_nextInputType_e ZSTD_nextInputType ( t#ZSTD_DCtx * ) 
ZSTD_decompressBlock t#size_t ZSTD_decompressBlock ( t#ZSTD_DCtx * , void * , t#size_t , const void * , t#size_t ) 
ZSTD_insertBlock t#size_t ZSTD_insertBlock ( t#ZSTD_DCtx * , const void * , t#size_t ) 

/* mm/backing-dev.o */
s##workqueue_struct
s##vfsmount
s##posix_acl
s##sock
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##blk_mq_ctx
s##kmem_cache
s##blk_mq_hw_ctx
s##blk_mq_alloc_data
s##blk_mq_debugfs_attr
s##blk_queue_stats
s##rq_wb
s##blk_mq_ops
s##blk_stat_callback
s##blk_trace
s##blk_flush_queue
s##bsg_job
s##throtl_data
s##blk_mq_tag_set
s##hd_geometry
s##pr_ops
s##timer_rand_state
s##disk_events
s##badblocks
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##swap_info_struct
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##mtd_info
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
noop_backing_dev_info extern s#backing_dev_info noop_backing_dev_info 
bdi_alloc_node s#backing_dev_info * bdi_alloc_node ( t#gfp_t , int ) 
bdi_register_va int bdi_register_va ( s#backing_dev_info * , const char * , t#va_list ) 
bdi_register __attribute__ ( ( format ( printf , 2 , 3 ) ) ) int bdi_register ( s#backing_dev_info * , const char * , ... ) 
bdi_register_owner int bdi_register_owner ( s#backing_dev_info * , s#device * ) 
bdi_put void bdi_put ( s#backing_dev_info * ) 
clear_wb_congested void clear_wb_congested ( s#bdi_writeback_congested * , int ) 
set_wb_congested void set_wb_congested ( s#bdi_writeback_congested * , int ) 
congestion_wait long congestion_wait ( int , long ) 
wait_iff_congested long wait_iff_congested ( s#pglist_data * , int , long ) 

/* mm/balloon_compaction.o */
s##posix_acl
s##vfsmount
s##module
s##writeback_control
s##kstatfs
s##iov_iter
s##poll_table_struct
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##compat_timespec
s##pollfd
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##mem_cgroup
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##device
s##kmem_cache
s#balloon_dev_info struct balloon_dev_info { unsigned long isolated_pages ; t#spinlock_t pages_lock ; s#list_head pages ; int ( * migratepage ) ( s#balloon_dev_info * , s#page * , s#page * , e#migrate_mode ) ; s#inode * inode ; } 
balloon_page_enqueue extern s#page * balloon_page_enqueue ( s#balloon_dev_info * ) 
balloon_page_dequeue extern s#page * balloon_page_dequeue ( s#balloon_dev_info * ) 
balloon_aops extern const s#address_space_operations balloon_aops 

/* mm/cleancache.o */
s#cleancache_filekey struct cleancache_filekey { union { t#ino_t ino ; t#__u32 fh [ 6 ] ; t#u32 key [ 6 ] ; } u ; } 
s##posix_acl
s##vfsmount
s##sock
s##bio_vec
s##pipe_inode_info
s##poll_table_struct
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pollfd
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##mem_cgroup
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##iomap
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##device
s##kmem_cache
s#cleancache_ops struct cleancache_ops { int ( * init_fs ) ( t#size_t ) ; int ( * init_shared_fs ) ( t#uuid_t * , t#size_t ) ; int ( * get_page ) ( int , s#cleancache_filekey , unsigned long , s#page * ) ; void ( * put_page ) ( int , s#cleancache_filekey , unsigned long , s#page * ) ; void ( * invalidate_page ) ( int , s#cleancache_filekey , unsigned long ) ; void ( * invalidate_inode ) ( int , s#cleancache_filekey ) ; void ( * invalidate_fs ) ( int ) ; } 
cleancache_register_ops extern int cleancache_register_ops ( const s#cleancache_ops * ) 
__cleancache_init_fs extern void __cleancache_init_fs ( s#super_block * ) 
__cleancache_init_shared_fs extern void __cleancache_init_shared_fs ( s#super_block * ) 
__cleancache_get_page extern int __cleancache_get_page ( s#page * ) 
__cleancache_put_page extern void __cleancache_put_page ( s#page * ) 
__cleancache_invalidate_page extern void __cleancache_invalidate_page ( s#address_space * , s#page * ) 
__cleancache_invalidate_inode extern void __cleancache_invalidate_inode ( s#address_space * ) 
__cleancache_invalidate_fs extern void __cleancache_invalidate_fs ( s#super_block * ) 

/* mm/compaction.o */
s##posix_acl
s##vfsmount
s##module
s##device_private
s##sock
s##iov_iter
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##compat_timespec
s##kmem_cache
s##fs_pin
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_mq_ctx
s##blk_mq_hw_ctx
s##blk_mq_alloc_data
s##blk_mq_debugfs_attr
s##blk_queue_stats
s##rq_wb
s##blk_mq_ops
s##workqueue_struct
s##blk_stat_callback
s##blk_trace
s##blk_flush_queue
s##bsg_job
s##throtl_data
s##blk_mq_tag_set
s##hd_geometry
s##pr_ops
s##timer_rand_state
s##disk_events
s##badblocks
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##ring_buffer
s##bpf_prog
s##static_key_mod
s##trace_array
s##tracer
s##trace_buffer
s##ring_buffer_iter
s##event_filter
s##ftrace_hash
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##kernfs_open_node
s##kernfs_iattrs
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
PageMovable extern int PageMovable ( s#page * ) 
__SetPageMovable extern void __SetPageMovable ( s#page * , s#address_space * ) 
__ClearPageMovable extern void __ClearPageMovable ( s#page * ) 

/* mm/debug.o */
s##posix_acl
s##vfsmount
s##module
s##device_private
s##sock
s##iov_iter
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##compat_timespec
s##kmem_cache
s##fs_pin
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##workqueue_struct
s##blk_plug
s##reclaim_state
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##ring_buffer
s##bpf_prog
s##static_key_mod
s##trace_array
s##tracer
s##trace_buffer
s##ring_buffer_iter
s##event_filter
s##ftrace_hash
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##kernfs_open_node
s##kernfs_iattrs
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##fwnode_handle
s##iommu_group
s##iommu_fwspec
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
dump_page extern void dump_page ( s#page * , const char * ) 

/* mm/dmapool.o */
s##dma_pool
s##device_private
s##sock
s##seq_file
s##vfsmount
s##posix_acl
s##module
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##compat_timespec
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##iov_iter
s##swap_info_struct
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
dma_pool_create s#dma_pool * dma_pool_create ( const char * , s#device * , t#size_t , t#size_t , t#size_t ) 
dma_pool_destroy void dma_pool_destroy ( s#dma_pool * ) 
dma_pool_alloc void * dma_pool_alloc ( s#dma_pool * , t#gfp_t , t#dma_addr_t * ) 
dma_pool_free void dma_pool_free ( s#dma_pool * , void * , t#dma_addr_t ) 
dmam_pool_create s#dma_pool * dmam_pool_create ( const char * , s#device * , t#size_t , t#size_t , t#size_t ) 
dmam_pool_destroy void dmam_pool_destroy ( s#dma_pool * ) 

/* mm/filemap.o */
s##posix_acl
s##vfsmount
s##module
s##device_private
s##sock
s##pipe_inode_info
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##compat_timespec
s##kmem_cache
s##fs_pin
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_mq_ctx
s##blk_mq_hw_ctx
s##blk_mq_alloc_data
s##blk_mq_debugfs_attr
s##blk_queue_stats
s##rq_wb
s##blk_mq_ops
s##workqueue_struct
s##blk_stat_callback
s##blk_trace
s##blk_flush_queue
s##bsg_job
s##throtl_data
s##blk_mq_tag_set
s##hd_geometry
s##pr_ops
s##timer_rand_state
s##disk_events
s##badblocks
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##ring_buffer
s##bpf_prog
s##static_key_mod
s##trace_array
s##tracer
s##trace_buffer
s##ring_buffer_iter
s##event_filter
s##ftrace_hash
s##numa_group
s##task_delay_info
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##kernfs_open_node
s##kernfs_iattrs
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kstatfs
s##iomap
s##fscrypt_operations
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
delete_from_page_cache extern void delete_from_page_cache ( s#page * ) 
filemap_check_errors extern int filemap_check_errors ( s#address_space * ) 
filemap_fdatawrite extern int filemap_fdatawrite ( s#address_space * ) 
filemap_fdatawrite_range extern int filemap_fdatawrite_range ( s#address_space * , t#loff_t , t#loff_t ) 
filemap_flush extern int filemap_flush ( s#address_space * ) 
filemap_range_has_page extern t#bool filemap_range_has_page ( s#address_space * , t#loff_t , t#loff_t ) 
filemap_fdatawait_range_keep_errors extern int filemap_fdatawait_range_keep_errors ( s#address_space * , t#loff_t , t#loff_t ) 
filemap_fdatawait_range extern int filemap_fdatawait_range ( s#address_space * , t#loff_t , t#loff_t ) 
filemap_fdatawait_keep_errors extern int filemap_fdatawait_keep_errors ( s#address_space * ) 
filemap_fdatawait extern int filemap_fdatawait ( s#address_space * ) 
filemap_write_and_wait extern int filemap_write_and_wait ( s#address_space * ) 
filemap_write_and_wait_range extern int filemap_write_and_wait_range ( s#address_space * , t#loff_t , t#loff_t ) 
__filemap_set_wb_err extern void __filemap_set_wb_err ( s#address_space * , int ) 
file_check_and_advance_wb_err extern int file_check_and_advance_wb_err ( s#file * ) 
file_write_and_wait_range extern int file_write_and_wait_range ( s#file * , t#loff_t , t#loff_t ) 
replace_page_cache_page int replace_page_cache_page ( s#page * , s#page * , t#gfp_t ) 
add_to_page_cache_locked int add_to_page_cache_locked ( s#page * , s#address_space * , unsigned long , t#gfp_t ) 
add_to_page_cache_lru int add_to_page_cache_lru ( s#page * , s#address_space * , unsigned long , t#gfp_t ) 
__page_cache_alloc extern s#page * __page_cache_alloc ( t#gfp_t ) 
wait_on_page_bit extern void wait_on_page_bit ( s#page * , int ) 
add_page_wait_queue extern void add_page_wait_queue ( s#page * , t#wait_queue_entry_t * ) 
unlock_page extern void unlock_page ( s#page * ) 
end_page_writeback extern void end_page_writeback ( s#page * ) 
page_endio void page_endio ( s#page * , t#bool , int ) 
__lock_page extern void __lock_page ( s#page * ) 
__lock_page_killable extern int __lock_page_killable ( s#page * ) 
page_cache_next_hole unsigned long page_cache_next_hole ( s#address_space * , unsigned long , unsigned long ) 
page_cache_prev_hole unsigned long page_cache_prev_hole ( s#address_space * , unsigned long , unsigned long ) 
find_get_entry s#page * find_get_entry ( s#address_space * , unsigned long ) 
find_lock_entry s#page * find_lock_entry ( s#address_space * , unsigned long ) 
pagecache_get_page s#page * pagecache_get_page ( s#address_space * , unsigned long , int , t#gfp_t ) 
find_get_pages_contig unsigned find_get_pages_contig ( s#address_space * , unsigned long , unsigned int , s#page * * ) 
find_get_pages_tag unsigned find_get_pages_tag ( s#address_space * , unsigned long * , int , unsigned int , s#page * * ) 
find_get_entries_tag unsigned find_get_entries_tag ( s#address_space * , unsigned long , int , unsigned int , s#page * * , unsigned long * ) 
generic_file_read_iter extern t#ssize_t generic_file_read_iter ( s#kiocb * , s#iov_iter * ) 
filemap_fault extern int filemap_fault ( s#vm_fault * ) 
filemap_map_pages extern void filemap_map_pages ( s#vm_fault * , unsigned long , unsigned long ) 
filemap_page_mkwrite extern int filemap_page_mkwrite ( s#vm_fault * ) 
generic_file_mmap extern int generic_file_mmap ( s#file * , s#vm_area_struct * ) 
generic_file_readonly_mmap extern int generic_file_readonly_mmap ( s#file * , s#vm_area_struct * ) 
t#filler_t typedef int filler_t ( void * , s#page * ) 
read_cache_page extern s#page * read_cache_page ( s#address_space * , unsigned long , t#filler_t * , void * ) 
read_cache_page_gfp extern s#page * read_cache_page_gfp ( s#address_space * , unsigned long , t#gfp_t ) 
generic_write_checks extern t#ssize_t generic_write_checks ( s#kiocb * , s#iov_iter * ) 
pagecache_write_begin int pagecache_write_begin ( s#file * , s#address_space * , t#loff_t , unsigned , unsigned , s#page * * , void * * ) 
pagecache_write_end int pagecache_write_end ( s#file * , s#address_space * , t#loff_t , unsigned , unsigned , s#page * , void * ) 
generic_file_direct_write extern t#ssize_t generic_file_direct_write ( s#kiocb * , s#iov_iter * ) 
grab_cache_page_write_begin s#page * grab_cache_page_write_begin ( s#address_space * , unsigned long , unsigned ) 
generic_perform_write extern t#ssize_t generic_perform_write ( s#file * , s#iov_iter * , t#loff_t ) 
__generic_file_write_iter extern t#ssize_t __generic_file_write_iter ( s#kiocb * , s#iov_iter * ) 
generic_file_write_iter extern t#ssize_t generic_file_write_iter ( s#kiocb * , s#iov_iter * ) 
try_to_release_page extern int try_to_release_page ( s#page * , t#gfp_t ) 

/* mm/gup.o */
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##posix_acl
s##vfsmount
s##module
s##device_private
s##sock
s##iov_iter
s##poll_table_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##kernfs_open_node
s##kernfs_iattrs
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##fwnode_handle
s##iommu_group
s##iommu_fwspec
s##workqueue_struct
s##bpf_prog_array
s##cgroup_taskset
s##kstatfs
s##eventfd_ctx
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kmem_cache
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##compat_timespec
s##pollfd
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_plug
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
fixup_user_fault extern int fixup_user_fault ( s#task_struct * , s#mm_struct * , unsigned long , unsigned int , t#bool * ) 
get_user_pages_locked long get_user_pages_locked ( unsigned long , unsigned long , unsigned int , s#page * * , int * ) 
get_user_pages_unlocked long get_user_pages_unlocked ( unsigned long , unsigned long , s#page * * , unsigned int ) 
get_user_pages_remote long get_user_pages_remote ( s#task_struct * , s#mm_struct * , unsigned long , unsigned long , unsigned int , s#page * * , s#vm_area_struct * * , int * ) 
get_user_pages long get_user_pages ( unsigned long , unsigned long , unsigned int , s#page * * , s#vm_area_struct * * ) 
get_user_pages_longterm long get_user_pages_longterm ( unsigned long , unsigned long , unsigned int , s#page * * , s#vm_area_struct * * ) 

/* mm/huge_memory.o */
s##vfsmount
s##posix_acl
s##module
s##device_private
s##sock
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##compat_timespec
s##pollfd
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##bpf_prog_array
s##cgroup_taskset
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##kmem_cache
s##iov_iter
s##hd_struct
s##eventfd_ctx
s##workqueue_struct
s##blk_plug
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##xol_area
s##userfaultfd_ctx
s##kernfs_open_node
s##kernfs_iattrs
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##fwnode_handle
s##iommu_group
s##iommu_fwspec
s##kstatfs
s##export_operations
s##fscrypt_operations
s##mtd_info
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
thp_get_unmapped_area extern unsigned long thp_get_unmapped_area ( s#file * , unsigned long , unsigned long , unsigned long , unsigned long ) 
vmf_insert_pfn_pmd int vmf_insert_pfn_pmd ( s#vm_area_struct * , unsigned long , t#pmd_t * , t#pfn_t , t#bool ) 

/* mm/hugetlb.o */
s##vfsmount
s##posix_acl
s##module
s##device_private
s##sock
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##compat_timespec
s##pollfd
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##bpf_prog_array
s##cgroup_taskset
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##kmem_cache
s##workqueue_struct
s##blk_plug
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##eventfd_ctx
s##uprobe
s##gs_cb
s##iov_iter
s##hd_struct
s##kernfs_open_node
s##kernfs_iattrs
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##mtd_info
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##linux_binfmt
s##kioctx_table
s##xol_area
s##userfaultfd_ctx
linear_hugepage_index extern unsigned long linear_hugepage_index ( s#vm_area_struct * , unsigned long ) 
vma_kernel_pagesize extern unsigned long vma_kernel_pagesize ( s#vm_area_struct * ) 
PageHuge int PageHuge ( s#page * ) 

/* mm/list_lru.o */
list_lru_add t#bool list_lru_add ( s#list_lru * , s#list_head * ) 
list_lru_del t#bool list_lru_del ( s#list_lru * , s#list_head * ) 
list_lru_isolate void list_lru_isolate ( s#list_lru_one * , s#list_head * ) 
list_lru_isolate_move void list_lru_isolate_move ( s#list_lru_one * , s#list_head * , s#list_head * ) 
s##vfsmount
s##posix_acl
s##sock
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##device
s##workqueue_struct
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##kmem_cache
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##swap_info_struct
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##mtd_info
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
list_lru_count_one unsigned long list_lru_count_one ( s#list_lru * , int , s#mem_cgroup * ) 
list_lru_count_node unsigned long list_lru_count_node ( s#list_lru * , int ) 
e#lru_status enum lru_status { LRU_REMOVED , LRU_REMOVED_RETRY , LRU_ROTATE , LRU_SKIP , LRU_RETRY , } 
t#list_lru_walk_cb typedef e#lru_status ( * list_lru_walk_cb ) ( s#list_head * , s#list_lru_one * , t#spinlock_t * , void * ) 
list_lru_walk_one unsigned long list_lru_walk_one ( s#list_lru * , int , s#mem_cgroup * , t#list_lru_walk_cb , void * , unsigned long * ) 
list_lru_walk_node unsigned long list_lru_walk_node ( s#list_lru * , int , t#list_lru_walk_cb , void * , unsigned long * ) 
__list_lru_init int __list_lru_init ( s#list_lru * , t#bool , s#lock_class_key * ) 
list_lru_destroy void list_lru_destroy ( s#list_lru * ) 

/* mm/maccess.o */
probe_kernel_read extern long probe_kernel_read ( void * , const void * , t#size_t ) 
probe_kernel_write extern long __attribute__ ( ( hotpatch ( 0 , 0 ) ) ) probe_kernel_write ( void * , const void * , t#size_t ) 
probe_user_write extern long __attribute__ ( ( hotpatch ( 0 , 0 ) ) ) probe_user_write ( void * , const void * , t#size_t ) 

/* mm/memcontrol.o */
s##vfsmount
s##posix_acl
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##eventfd_ctx
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##mmu_notifier_mm
s##xol_area
s##array_cache
s#memcg_cache_array struct memcg_cache_array { s#callback_head rcu ; s#kmem_cache * entries [ 0 ] ; } 
s#memcg_cache_params struct memcg_cache_params { s#kmem_cache * root_cache ; union { struct { s#memcg_cache_array * memcg_caches ; s#list_head __root_caches_node ; s#list_head children ; } ; struct { s#mem_cgroup * memcg ; s#list_head children_node ; s#list_head kmem_caches_node ; void ( * deact_fn ) ( s#kmem_cache * ) ; union { s#callback_head deact_rcu_head ; s#work_struct deact_work ; } ; } ; } ; } 
s##alien_cache
s#kmem_cache_node struct kmem_cache_node { t#spinlock_t list_lock ; s#list_head slabs_partial ; s#list_head slabs_full ; s#list_head slabs_free ; unsigned long total_slabs ; unsigned long free_slabs ; unsigned long free_objects ; unsigned int free_limit ; unsigned int colour_next ; s#array_cache * shared ; s#alien_cache * * alien ; unsigned long next_reap ; int free_touched ; } 
s#kmem_cache struct kmem_cache { s#array_cache * cpu_cache ; unsigned int batchcount ; unsigned int limit ; unsigned int shared ; unsigned int size ; s#reciprocal_value reciprocal_buffer_size ; unsigned int flags ; unsigned int num ; unsigned int gfporder ; t#gfp_t allocflags ; t#size_t colour ; unsigned int colour_off ; s#kmem_cache * freelist_cache ; unsigned int freelist_size ; void ( * ctor ) ( void * ) ; const char * name ; s#list_head list ; int refcount ; int object_size ; int align ; s#memcg_cache_params memcg_params ; unsigned int * random_seq ; s#kmem_cache_node * node [ ( 1 << 4 ) ] ; } 
s##fs_pin
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##sec_path
s##workqueue_struct
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##xfrm_state
s##lwtunnel_state
s##uncached_list
s##rt6_info
s##dn_route
s##prefix_info
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##phy_device
s##sfp_bus
s##prot_inuse
s##ipv4_devconf
s##xt_table
s##inet_hashinfo
s##rt6_statistics
s##fib6_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_mq_ctx
s##blk_mq_hw_ctx
s##blk_mq_alloc_data
s##blk_mq_debugfs_attr
s##blk_queue_stats
s##rq_wb
s##blk_mq_ops
s##blk_stat_callback
s##blk_trace
s##blk_flush_queue
s##bsg_job
s##throtl_data
s##blk_mq_tag_set
s##hd_geometry
s##pr_ops
s##timer_rand_state
s##disk_events
s##badblocks
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##kstatfs
s##export_operations
s##fscrypt_operations
s##mtd_info
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
memory_cgrp_subsys extern s#cgroup_subsys memory_cgrp_subsys 
memcg_kmem_enabled_key extern s#static_key_false memcg_kmem_enabled_key 
mem_cgroup_from_task s#mem_cgroup * mem_cgroup_from_task ( s#task_struct * ) 
lock_page_memcg s#mem_cgroup * lock_page_memcg ( s#page * ) 
unlock_page_memcg void unlock_page_memcg ( s#page * ) 
memcg_sockets_enabled_key extern s#static_key_false memcg_sockets_enabled_key 

/* mm/memory.o */
high_memory extern void * high_memory 
zero_pfn unsigned long zero_pfn 
s##vfsmount
s##posix_acl
s##module
s##device_private
s##sock
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pollfd
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##bpf_prog_array
s##cgroup_taskset
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##kmem_cache
s##workqueue_struct
s##blk_plug
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##ftrace_ret_stack
s##eventfd_ctx
s##uprobe
s##gs_cb
s##hd_struct
s##kernfs_open_node
s##kernfs_iattrs
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##mtd_info
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##linux_binfmt
s##kioctx_table
s##xol_area
s##userfaultfd_ctx
zap_vma_ptes int zap_vma_ptes ( s#vm_area_struct * , unsigned long , unsigned long ) 
vm_insert_page int vm_insert_page ( s#vm_area_struct * , unsigned long , s#page * ) 
vm_insert_pfn int vm_insert_pfn ( s#vm_area_struct * , unsigned long , unsigned long ) 
vm_insert_pfn_prot int vm_insert_pfn_prot ( s#vm_area_struct * , unsigned long , unsigned long , t#pgprot_t ) 
vm_insert_mixed int vm_insert_mixed ( s#vm_area_struct * , unsigned long , t#pfn_t ) 
vm_insert_mixed_mkwrite int vm_insert_mixed_mkwrite ( s#vm_area_struct * , unsigned long , t#pfn_t ) 
remap_pfn_range int remap_pfn_range ( s#vm_area_struct * , unsigned long , unsigned long , unsigned long , t#pgprot_t ) 
vm_iomap_memory int vm_iomap_memory ( s#vm_area_struct * , t#phys_addr_t , unsigned long ) 
t#pte_fn_t typedef int ( * pte_fn_t ) ( t#pte_t * , t#pgtable_t , unsigned long , void * ) 
apply_to_page_range extern int apply_to_page_range ( s#mm_struct * , unsigned long , unsigned long , t#pte_fn_t , void * ) 
unmap_mapping_range void unmap_mapping_range ( s#address_space * , t#loff_t const , t#loff_t const , int ) 
handle_mm_fault extern int handle_mm_fault ( s#vm_area_struct * , unsigned long , unsigned int ) 
follow_pte_pmd int follow_pte_pmd ( s#mm_struct * , unsigned long , t#pte_t * * , t#pmd_t * * , t#spinlock_t * * ) 
follow_pfn int follow_pfn ( s#vm_area_struct * , unsigned long , unsigned long * ) 
access_process_vm extern int access_process_vm ( s#task_struct * , unsigned long , void * , int , unsigned int ) 

/* mm/memory_hotplug.o */
memhp_auto_online extern t#bool memhp_auto_online 
s##posix_acl
s##vfsmount
s##module
s##device_private
s##sock
s##iov_iter
s##poll_table_struct
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##compat_timespec
s##pollfd
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##kmem_cache
s##workqueue_struct
s##blk_plug
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##kernfs_open_node
s##kernfs_iattrs
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
t#online_page_callback_t typedef void ( * online_page_callback_t ) ( s#page * ) 
set_online_page_callback extern int set_online_page_callback ( t#online_page_callback_t ) 
restore_online_page_callback extern int restore_online_page_callback ( t#online_page_callback_t ) 
__online_page_set_limits extern void __online_page_set_limits ( s#page * ) 
__online_page_increment_counters extern void __online_page_increment_counters ( s#page * ) 
__online_page_free extern void __online_page_free ( s#page * ) 
add_memory_resource extern int add_memory_resource ( int , s#resource * , t#bool ) 
add_memory extern int add_memory ( int , t#u64 , t#u64 ) 
try_offline_node extern void try_offline_node ( int ) 
remove_memory extern void remove_memory ( int , t#u64 , t#u64 ) 

/* mm/mempolicy.o */
s##posix_acl
s##vfsmount
s##module
s##device_private
s##sock
s##pipe_inode_info
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##kmem_cache
s##fs_pin
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##workqueue_struct
s##blk_plug
s##robust_list_head
s##futex_pi_state
s##ring_buffer
s##bpf_prog
s##static_key_mod
s##trace_array
s##tracer
s##trace_buffer
s##ring_buffer_iter
s##event_filter
s##ftrace_hash
s##numa_group
s##task_delay_info
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##xol_area
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##kernfs_open_node
s##kernfs_iattrs
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##fwnode_handle
s##iommu_group
s##iommu_fwspec
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
alloc_pages_current extern s#page * alloc_pages_current ( t#gfp_t , unsigned ) 

/* mm/mempool.o */
mempool_exit void mempool_exit ( t#mempool_t * ) 
mempool_destroy extern void mempool_destroy ( t#mempool_t * ) 
mempool_init_node int mempool_init_node ( t#mempool_t * , int , t#mempool_alloc_t * , t#mempool_free_t * , void * , t#gfp_t , int ) 
mempool_init int mempool_init ( t#mempool_t * , int , t#mempool_alloc_t * , t#mempool_free_t * , void * ) 
mempool_create extern t#mempool_t * mempool_create ( int , t#mempool_alloc_t * , t#mempool_free_t * , void * ) 
mempool_create_node extern t#mempool_t * mempool_create_node ( int , t#mempool_alloc_t * , t#mempool_free_t * , void * , t#gfp_t , int ) 
mempool_resize extern int mempool_resize ( t#mempool_t * , int ) 
mempool_alloc extern void * mempool_alloc ( t#mempool_t * , t#gfp_t ) 
mempool_free extern void mempool_free ( void * , t#mempool_t * ) 
mempool_alloc_slab void * mempool_alloc_slab ( t#gfp_t , void * ) 
mempool_free_slab void mempool_free_slab ( void * , void * ) 
mempool_kmalloc void * mempool_kmalloc ( t#gfp_t , void * ) 
mempool_kfree void mempool_kfree ( void * , void * ) 
mempool_alloc_pages void * mempool_alloc_pages ( t#gfp_t , void * ) 
mempool_free_pages void mempool_free_pages ( void * , void * ) 

/* mm/migrate.o */
s##posix_acl
s##vfsmount
s##module
s##device_private
s##sock
s##iov_iter
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##compat_timespec
s##kmem_cache
s##fs_pin
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_mq_ctx
s##blk_mq_hw_ctx
s##blk_mq_alloc_data
s##blk_mq_debugfs_attr
s##blk_queue_stats
s##rq_wb
s##blk_mq_ops
s##workqueue_struct
s##blk_stat_callback
s##blk_trace
s##blk_flush_queue
s##bsg_job
s##throtl_data
s##blk_mq_tag_set
s##hd_geometry
s##pr_ops
s##timer_rand_state
s##disk_events
s##badblocks
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##ring_buffer
s##bpf_prog
s##static_key_mod
s##trace_array
s##tracer
s##trace_buffer
s##ring_buffer_iter
s##event_filter
s##ftrace_hash
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##xol_area
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##kernfs_open_node
s##kernfs_iattrs
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
migrate_page_move_mapping extern int migrate_page_move_mapping ( s#address_space * , s#page * , s#page * , s#buffer_head * , e#migrate_mode , int ) 
migrate_page_states extern void migrate_page_states ( s#page * , s#page * ) 
migrate_page_copy extern void migrate_page_copy ( s#page * , s#page * ) 
migrate_page extern int migrate_page ( s#address_space * , s#page * , s#page * , e#migrate_mode ) 
buffer_migrate_page extern int buffer_migrate_page ( s#address_space * , s#page * , s#page * , e#migrate_mode ) 

/* mm/mlock.o */
can_do_mlock extern t#bool can_do_mlock ( void ) 

/* mm/mm_init.o */
s##sock
s##seq_file
s##vfsmount
s##posix_acl
s##module
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##compat_timespec
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##iov_iter
s##swap_info_struct
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##fwnode_handle
s##iommu_group
s##iommu_fwspec
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
mm_kobj extern s#kobject * mm_kobj 

/* mm/mmap.o */
vm_get_page_prot t#pgprot_t vm_get_page_prot ( unsigned long ) 
s##posix_acl
s##module
s##device_private
s##sock
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##compat_timespec
s##kmem_cache
s##fs_pin
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##bpf_prog_array
s##cgroup_taskset
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_mq_ctx
s##iov_iter
s##eventfd_ctx
s##blk_mq_hw_ctx
s##blk_mq_alloc_data
s##blk_mq_debugfs_attr
s##blk_queue_stats
s##rq_wb
s##blk_mq_ops
s##workqueue_struct
s##blk_stat_callback
s##blk_trace
s##blk_flush_queue
s##bsg_job
s##throtl_data
s##blk_mq_tag_set
s##hd_geometry
s##pr_ops
s##timer_rand_state
s##disk_events
s##badblocks
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##ring_buffer
s##bpf_prog
s##static_key_mod
s##trace_array
s##tracer
s##trace_buffer
s##ring_buffer_iter
s##event_filter
s##ftrace_hash
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##xol_area
s##userfaultfd_ctx
s##kernfs_open_node
s##kernfs_iattrs
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kstatfs
s##export_operations
s##fscrypt_operations
s##mtd_info
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
get_unmapped_area extern unsigned long get_unmapped_area ( s#file * , unsigned long , unsigned long , unsigned long , unsigned long ) 
find_vma extern s#vm_area_struct * find_vma ( s#mm_struct * , unsigned long ) 
find_extend_vma s#vm_area_struct * find_extend_vma ( s#mm_struct * , unsigned long ) 
vm_munmap extern int vm_munmap ( unsigned long , t#size_t ) 
vm_brk_flags extern int vm_brk_flags ( unsigned long , unsigned long , unsigned long ) 
vm_brk extern int vm_brk ( unsigned long , unsigned long ) 

/* mm/mmu_context.o */
s##anon_vma
s##posix_acl
s##vfsmount
s##module
s##writeback_control
s##kstatfs
s##seq_file
s##mem_cgroup
s##export_operations
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##compat_timespec
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##user_namespace
s##iov_iter
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##bdi_writeback
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##device
s##kmem_cache
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
use_mm void use_mm ( s#mm_struct * ) 
unuse_mm void unuse_mm ( s#mm_struct * ) 

/* mm/mmu_notifier.o */
mmu_notifier_call_srcu extern void mmu_notifier_call_srcu ( s#callback_head * , void ( * ) ( s#callback_head * ) ) 
mmu_notifier_synchronize extern void mmu_notifier_synchronize ( void ) 
s##anon_vma
s##posix_acl
s##vfsmount
s##module
s##writeback_control
s##kstatfs
s##seq_file
s##mem_cgroup
s##export_operations
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##compat_timespec
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##user_namespace
s##iov_iter
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##bdi_writeback
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##device
s##kmem_cache
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##xol_area
__mmu_notifier_invalidate_range_start extern void __mmu_notifier_invalidate_range_start ( s#mm_struct * , unsigned long , unsigned long ) 
__mmu_notifier_invalidate_range_end extern void __mmu_notifier_invalidate_range_end ( s#mm_struct * , unsigned long , unsigned long ) 
__mmu_notifier_invalidate_range extern void __mmu_notifier_invalidate_range ( s#mm_struct * , unsigned long , unsigned long ) 
mmu_notifier_register extern int mmu_notifier_register ( s#mmu_notifier * , s#mm_struct * ) 
__mmu_notifier_register extern int __mmu_notifier_register ( s#mmu_notifier * , s#mm_struct * ) 
mmu_notifier_unregister extern void mmu_notifier_unregister ( s#mmu_notifier * , s#mm_struct * ) 
mmu_notifier_unregister_no_release extern void mmu_notifier_unregister_no_release ( s#mmu_notifier * , s#mm_struct * ) 

/* mm/oom_kill.o */
register_oom_notifier extern int register_oom_notifier ( s#notifier_block * ) 
unregister_oom_notifier extern int unregister_oom_notifier ( s#notifier_block * ) 

/* mm/page-writeback.o */
dirty_writeback_interval extern unsigned int dirty_writeback_interval 
laptop_mode extern int laptop_mode 
s##device_private
s##sock
s##vfsmount
s##posix_acl
s##module
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##mmu_notifier_mm
s##xol_area
s##compat_timespec
s##kmem_cache
s##fs_pin
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_mq_ctx
s##blk_mq_hw_ctx
s##blk_mq_alloc_data
s##blk_mq_debugfs_attr
s##blk_queue_stats
s##rq_wb
s##blk_mq_ops
s##workqueue_struct
s##blk_stat_callback
s##blk_trace
s##blk_flush_queue
s##bsg_job
s##throtl_data
s##blk_mq_tag_set
s##hd_geometry
s##pr_ops
s##timer_rand_state
s##disk_events
s##badblocks
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##ring_buffer
s##bpf_prog
s##static_key_mod
s##trace_array
s##tracer
s##trace_buffer
s##ring_buffer_iter
s##event_filter
s##ftrace_hash
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##uprobe
s##gs_cb
s##iov_iter
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##mtd_info
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
wb_writeout_inc extern void wb_writeout_inc ( s#bdi_writeback * ) 
bdi_set_max_ratio int bdi_set_max_ratio ( s#backing_dev_info * , unsigned int ) 
balance_dirty_pages_ratelimited void balance_dirty_pages_ratelimited ( s#address_space * ) 
tag_pages_for_writeback void tag_pages_for_writeback ( s#address_space * , unsigned long , unsigned long ) 
t#writepage_t typedef int ( * writepage_t ) ( s#page * , s#writeback_control * , void * ) 
write_cache_pages int write_cache_pages ( s#address_space * , s#writeback_control * , t#writepage_t , void * ) 
generic_writepages int generic_writepages ( s#address_space * , s#writeback_control * ) 
write_one_page int write_one_page ( s#page * , int ) 
account_page_dirtied void account_page_dirtied ( s#page * , s#address_space * ) 
__set_page_dirty_nobuffers int __set_page_dirty_nobuffers ( s#page * ) 
account_page_redirty void account_page_redirty ( s#page * ) 
redirty_page_for_writepage int redirty_page_for_writepage ( s#writeback_control * , s#page * ) 
set_page_dirty int set_page_dirty ( s#page * ) 
set_page_dirty_lock int set_page_dirty_lock ( s#page * ) 
__cancel_dirty_page void __cancel_dirty_page ( s#page * ) 
clear_page_dirty_for_io int clear_page_dirty_for_io ( s#page * ) 
__test_set_page_writeback int __test_set_page_writeback ( s#page * , t#bool ) 
mapping_tagged int mapping_tagged ( s#address_space * , int ) 
wait_for_stable_page void wait_for_stable_page ( s#page * ) 

/* mm/page_alloc.o */
E#N_NORMAL_MEMORY 2 
E#N_HIGH_MEMORY E#N_NORMAL_MEMORY 
E#NR_NODE_STATES ( E#N_HIGH_MEMORY ) + 2 
node_states extern t#nodemask_t node_states [ E#NR_NODE_STATES ] 
totalram_pages extern unsigned long totalram_pages 
movable_zone extern int movable_zone 
nr_node_ids extern int nr_node_ids 
nr_online_nodes extern int nr_online_nodes 
s##posix_acl
s##vfsmount
s##sock
s##pipe_inode_info
s##poll_table_struct
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pollfd
s##kmem_cache
s##fs_pin
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##blk_mq_ctx
s##workqueue_struct
s##blk_mq_hw_ctx
s##blk_mq_alloc_data
s##blk_mq_debugfs_attr
s##blk_queue_stats
s##rq_wb
s##blk_mq_ops
s##blk_stat_callback
s##blk_trace
s##blk_flush_queue
s##bsg_job
s##throtl_data
s##blk_mq_tag_set
s##hd_geometry
s##pr_ops
s##timer_rand_state
s##disk_events
s##badblocks
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
split_page void split_page ( s#page * , unsigned int ) 
__alloc_pages_nodemask s#page * __alloc_pages_nodemask ( t#gfp_t , unsigned int , s#zonelist * , t#nodemask_t * ) 
__get_free_pages extern unsigned long __get_free_pages ( t#gfp_t , unsigned int ) 
get_zeroed_page extern unsigned long get_zeroed_page ( t#gfp_t ) 
__free_pages extern void __free_pages ( s#page * , unsigned int ) 
free_pages extern void free_pages ( unsigned long , unsigned int ) 
__page_frag_cache_drain extern void __page_frag_cache_drain ( s#page * , unsigned int ) 
s#page_frag_cache struct page_frag_cache { void * va ; t#__u16 offset ; t#__u16 size ; unsigned int pagecnt_bias ; t#bool pfmemalloc ; } 
page_frag_alloc extern void * page_frag_alloc ( s#page_frag_cache * , unsigned int , t#gfp_t ) 
page_frag_free extern void page_frag_free ( void * ) 
alloc_pages_exact void * alloc_pages_exact ( t#size_t , t#gfp_t ) 
free_pages_exact void free_pages_exact ( void * , t#size_t ) 
nr_free_buffer_pages extern unsigned long nr_free_buffer_pages ( void ) 
si_mem_available extern long si_mem_available ( void ) 
si_meminfo extern void si_meminfo ( s#sysinfo * ) 
adjust_managed_page_count extern void adjust_managed_page_count ( s#page * , long ) 
free_reserved_area extern unsigned long free_reserved_area ( void * , void * , int , char * ) 

/* mm/percpu.o */
pcpu_base_addr extern void * pcpu_base_addr 
__alloc_percpu_gfp extern void * __alloc_percpu_gfp ( t#size_t , t#size_t , t#gfp_t ) 
__alloc_percpu extern void * __alloc_percpu ( t#size_t , t#size_t ) 
free_percpu extern void free_percpu ( void * ) 
__per_cpu_offset extern unsigned long __per_cpu_offset [ 256 ] 

/* mm/readahead.o */
s##posix_acl
s##vfsmount
s##module
s##device_private
s##sock
s##iov_iter
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##compat_timespec
s##kmem_cache
s##fs_pin
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##mempolicy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_mq_ctx
s##blk_mq_hw_ctx
s##blk_mq_alloc_data
s##blk_mq_debugfs_attr
s##blk_queue_stats
s##rq_wb
s##blk_mq_ops
s##workqueue_struct
s##blk_stat_callback
s##blk_trace
s##blk_flush_queue
s##bsg_job
s##throtl_data
s##blk_mq_tag_set
s##hd_geometry
s##pr_ops
s##timer_rand_state
s##disk_events
s##badblocks
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##ring_buffer
s##bpf_prog
s##static_key_mod
s##trace_array
s##tracer
s##trace_buffer
s##ring_buffer_iter
s##event_filter
s##ftrace_hash
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##kernfs_open_node
s##kernfs_iattrs
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
file_ra_state_init extern void file_ra_state_init ( s#file_ra_state * , s#address_space * ) 
read_cache_pages extern int read_cache_pages ( s#address_space * , s#list_head * , t#filler_t * , void * ) 
page_cache_sync_readahead void page_cache_sync_readahead ( s#address_space * , s#file_ra_state * , s#file * , unsigned long , unsigned long ) 
page_cache_async_readahead void page_cache_async_readahead ( s#address_space * , s#file_ra_state * , s#file * , s#page * , unsigned long , unsigned long ) 

/* mm/rmap.o */
s##posix_acl
s##vfsmount
s##module
s##device_private
s##sock
s##iov_iter
s##poll_table_struct
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##compat_timespec
s##pollfd
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_mq_ctx
s##kmem_cache
s##blk_mq_hw_ctx
s##blk_mq_alloc_data
s##blk_mq_debugfs_attr
s##blk_queue_stats
s##rq_wb
s##blk_mq_ops
s##workqueue_struct
s##blk_stat_callback
s##blk_trace
s##blk_flush_queue
s##bsg_job
s##throtl_data
s##blk_mq_tag_set
s##hd_geometry
s##pr_ops
s##timer_rand_state
s##disk_events
s##badblocks
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##xol_area
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##kernfs_open_node
s##kernfs_iattrs
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
page_mkclean int page_mkclean ( s#page * ) 

/* mm/shmem.o */
s##module
s##device_private
s##sock
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##mmu_notifier_mm
s##xol_area
s##compat_timespec
s##kmem_cache
s##fs_pin
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_mq_ctx
s##blk_mq_hw_ctx
s##blk_mq_alloc_data
s##blk_mq_debugfs_attr
s##blk_queue_stats
s##rq_wb
s##blk_mq_ops
s##workqueue_struct
s##blk_stat_callback
s##blk_trace
s##blk_flush_queue
s##bsg_job
s##throtl_data
s##blk_mq_tag_set
s##hd_geometry
s##pr_ops
s##timer_rand_state
s##disk_events
s##badblocks
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##ring_buffer
s##bpf_prog
s##static_key_mod
s##trace_array
s##tracer
s##trace_buffer
s##ring_buffer_iter
s##event_filter
s##ftrace_hash
s##numa_group
s##task_delay_info
s##uprobe
s##gs_cb
s##nlm_lockowner
s##nfs4_lock_state
s##kernfs_open_node
s##kernfs_iattrs
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##iomap
s##fscrypt_operations
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
shmem_truncate_range extern void shmem_truncate_range ( s#inode * , t#loff_t , t#loff_t ) 
shmem_add_seals extern int shmem_add_seals ( s#file * , unsigned int ) 
shmem_get_seals extern int shmem_get_seals ( s#file * ) 
shmem_file_setup extern s#file * shmem_file_setup ( const char * , t#loff_t , unsigned long ) 
shmem_file_setup_with_mnt extern s#file * shmem_file_setup_with_mnt ( s#vfsmount * , const char * , t#loff_t , unsigned long ) 
shmem_read_mapping_page_gfp extern s#page * shmem_read_mapping_page_gfp ( s#address_space * , unsigned long , t#gfp_t ) 

/* mm/slab.o */
s##array_cache
s##vfsmount
s##posix_acl
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##mmu_notifier_mm
s##xol_area
s##pid_namespace
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##sec_path
s##workqueue_struct
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##l3mdev_ops
s##ndisc_ops
s##xfrm_state
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##phy_device
s##sfp_bus
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##xt_table
s##inet_hashinfo
s##fib_notifier_ops
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##lwtunnel_state
s##rtable
s##dn_route
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##blk_plug
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##hd_struct
s##request_sock_ops
s##timewait_sock_ops
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##mtd_info
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##alien_cache
kmem_cache_alloc void * kmem_cache_alloc ( s#kmem_cache * , t#gfp_t ) 
kmem_cache_alloc_bulk int kmem_cache_alloc_bulk ( s#kmem_cache * , t#gfp_t , t#size_t , void * * ) 
kmem_cache_alloc_trace extern void * kmem_cache_alloc_trace ( s#kmem_cache * , t#gfp_t , t#size_t ) 
kmem_cache_alloc_node void * kmem_cache_alloc_node ( s#kmem_cache * , t#gfp_t , int ) 
kmem_cache_alloc_node_trace extern void * kmem_cache_alloc_node_trace ( s#kmem_cache * , t#gfp_t , int , t#size_t ) 
__kmalloc_node void * __kmalloc_node ( t#size_t , t#gfp_t , int ) 
__kmalloc_node_track_caller extern void * __kmalloc_node_track_caller ( t#size_t , t#gfp_t , int , unsigned long ) 
__kmalloc void * __kmalloc ( t#size_t , t#gfp_t ) 
__kmalloc_track_caller extern void * __kmalloc_track_caller ( t#size_t , t#gfp_t , unsigned long ) 
kmem_cache_free void kmem_cache_free ( s#kmem_cache * , void * ) 
kmem_cache_free_bulk void kmem_cache_free_bulk ( s#kmem_cache * , t#size_t , void * * ) 
kfree void kfree ( const void * ) 
ksize t#size_t ksize ( const void * ) 

/* mm/slab_common.o */
s##array_cache
s##vfsmount
s##posix_acl
s##sock
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_array
s##tracer
s##trace_buffer
s##ring_buffer_iter
s##event_filter
s##bpf_prog_array
s##device_private
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##fs_pin
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##workqueue_struct
s##pipe_inode_info
s##swap_info_struct
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##mempolicy
s##numa_group
s##task_delay_info
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##fwnode_handle
s##iommu_group
s##iommu_fwspec
s##ring_buffer
s##bpf_prog
s##ftrace_hash
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##mtd_info
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##cgroup_taskset
s##eventfd_ctx
s##alien_cache
kmem_cache_size unsigned int kmem_cache_size ( s#kmem_cache * ) 
kmem_cache_create s#kmem_cache * kmem_cache_create ( const char * , t#size_t , t#size_t , unsigned long , void ( * ) ( void * ) ) 
kmem_cache_destroy void kmem_cache_destroy ( s#kmem_cache * ) 
kmem_cache_shrink int kmem_cache_shrink ( s#kmem_cache * ) 
kmalloc_caches extern s#kmem_cache * kmalloc_caches [ ( ( 9 + 12 - 1 ) <= 25 ? ( 9 + 12 - 1 ) : 25 ) + 1 ] 
kmalloc_dma_caches extern s#kmem_cache * kmalloc_dma_caches [ ( ( 9 + 12 - 1 ) <= 25 ? ( 9 + 12 - 1 ) : 25 ) + 1 ] 
kmalloc_order extern void * kmalloc_order ( t#size_t , t#gfp_t , unsigned int ) 
kmalloc_order_trace extern void * kmalloc_order_trace ( t#size_t , t#gfp_t , unsigned int ) 
__krealloc void * __krealloc ( const void * , t#size_t , t#gfp_t ) 
krealloc void * krealloc ( const void * , t#size_t , t#gfp_t ) 
kzfree void kzfree ( const void * ) 
__tracepoint_kmalloc extern s#tracepoint __tracepoint_kmalloc 
__tracepoint_kmem_cache_alloc extern s#tracepoint __tracepoint_kmem_cache_alloc 
__tracepoint_kmalloc_node extern s#tracepoint __tracepoint_kmalloc_node 
__tracepoint_kmem_cache_alloc_node extern s#tracepoint __tracepoint_kmem_cache_alloc_node 
__tracepoint_kfree extern s#tracepoint __tracepoint_kfree 
__tracepoint_kmem_cache_free extern s#tracepoint __tracepoint_kmem_cache_free 

/* mm/sparse.o */
s#page_ext struct page_ext { unsigned long flags ; } 
s#mem_section struct mem_section { unsigned long section_mem_map ; unsigned long * pageblock_flags ; s#page_ext * page_ext ; unsigned long pad ; } 
mem_section extern s#mem_section * mem_section [ ( ( ( ( 1UL << ( 46 - 28 ) ) ) + ( ( ( ( 1UL ) << 12 ) / sizeof ( struct mem_section ) ) ) - 1 ) / ( ( ( ( 1UL ) << 12 ) / sizeof ( struct mem_section ) ) ) ) ] 

/* mm/swap.o */
s##posix_acl
s##vfsmount
s##module
s##device_private
s##sock
s##pipe_inode_info
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##compat_timespec
s##kmem_cache
s##fs_pin
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_mq_ctx
s##blk_mq_hw_ctx
s##blk_mq_alloc_data
s##blk_mq_debugfs_attr
s##blk_queue_stats
s##rq_wb
s##blk_mq_ops
s##workqueue_struct
s##blk_stat_callback
s##blk_trace
s##blk_flush_queue
s##bsg_job
s##throtl_data
s##blk_mq_tag_set
s##hd_geometry
s##pr_ops
s##timer_rand_state
s##disk_events
s##badblocks
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##ring_buffer
s##bpf_prog
s##static_key_mod
s##trace_array
s##tracer
s##trace_buffer
s##ring_buffer_iter
s##event_filter
s##ftrace_hash
s##numa_group
s##task_delay_info
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##kernfs_open_node
s##kernfs_iattrs
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
__put_page void __put_page ( s#page * ) 
put_pages_list void put_pages_list ( s#list_head * ) 
get_kernel_pages int get_kernel_pages ( const s#kvec * , int , int , s#page * * ) 
get_kernel_page int get_kernel_page ( unsigned long , int , s#page * * ) 
mark_page_accessed extern void mark_page_accessed ( s#page * ) 
lru_cache_add_file extern void lru_cache_add_file ( s#page * ) 
release_pages void release_pages ( s#page * * , int ) 
__pagevec_release void __pagevec_release ( s#pagevec * ) 
__pagevec_lru_add void __pagevec_lru_add ( s#pagevec * ) 
pagevec_lookup unsigned pagevec_lookup ( s#pagevec * , s#address_space * , unsigned long , unsigned ) 
pagevec_lookup_tag unsigned pagevec_lookup_tag ( s#pagevec * , s#address_space * , unsigned long * , int , unsigned ) 

/* mm/swapfile.o */
nr_swap_pages extern t#atomic_long_t nr_swap_pages 
s##posix_acl
s##vfsmount
s##module
s##device_private
s##sock
s##iov_iter
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##compat_timespec
s##kmem_cache
s##fs_pin
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##hd_geometry
s##pr_ops
s##blk_mq_ctx
s##blk_mq_hw_ctx
s##blk_mq_alloc_data
s##blk_mq_debugfs_attr
s##blk_queue_stats
s##rq_wb
s##blk_mq_ops
s##workqueue_struct
s##blk_stat_callback
s##blk_trace
s##blk_flush_queue
s##bsg_job
s##throtl_data
s##blk_mq_tag_set
s##timer_rand_state
s##disk_events
s##badblocks
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##ring_buffer
s##bpf_prog
s##static_key_mod
s##trace_array
s##tracer
s##trace_buffer
s##ring_buffer_iter
s##event_filter
s##ftrace_hash
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##kernfs_open_node
s##kernfs_iattrs
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kstatfs
s##export_operations
s##fscrypt_operations
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
add_swap_extent int add_swap_extent ( s#swap_info_struct * , unsigned long , unsigned long , t#sector_t ) 
__page_file_mapping extern s#address_space * __page_file_mapping ( s#page * ) 
__page_file_index extern unsigned long __page_file_index ( s#page * ) 

/* mm/truncate.o */
s##posix_acl
s##vfsmount
s##module
s##device_private
s##sock
s##iov_iter
s##poll_table_struct
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##compat_timespec
s##pollfd
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##bpf_prog_array
s##cgroup_taskset
s##kmem_cache
s##eventfd_ctx
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_mq_ctx
s##blk_mq_hw_ctx
s##blk_mq_alloc_data
s##blk_mq_debugfs_attr
s##blk_queue_stats
s##rq_wb
s##blk_mq_ops
s##workqueue_struct
s##blk_stat_callback
s##blk_trace
s##blk_flush_queue
s##bsg_job
s##throtl_data
s##blk_mq_tag_set
s##hd_geometry
s##pr_ops
s##timer_rand_state
s##disk_events
s##badblocks
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##kernfs_open_node
s##kernfs_iattrs
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kstatfs
s##iomap
s##fscrypt_operations
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
generic_error_remove_page int generic_error_remove_page ( s#address_space * , s#page * ) 
truncate_inode_pages_range extern void truncate_inode_pages_range ( s#address_space * , t#loff_t , t#loff_t ) 
truncate_inode_pages extern void truncate_inode_pages ( s#address_space * , t#loff_t ) 
truncate_inode_pages_final extern void truncate_inode_pages_final ( s#address_space * ) 
invalidate_mapping_pages unsigned long invalidate_mapping_pages ( s#address_space * , unsigned long , unsigned long ) 
invalidate_inode_pages2_range extern int invalidate_inode_pages2_range ( s#address_space * , unsigned long , unsigned long ) 
invalidate_inode_pages2 extern int invalidate_inode_pages2 ( s#address_space * ) 
truncate_pagecache extern void truncate_pagecache ( s#inode * , t#loff_t ) 
truncate_setsize extern void truncate_setsize ( s#inode * , t#loff_t ) 
pagecache_isize_extended void pagecache_isize_extended ( s#inode * , t#loff_t , t#loff_t ) 
truncate_pagecache_range void truncate_pagecache_range ( s#inode * , t#loff_t , t#loff_t ) 

/* mm/util.o */
kfree_const extern void kfree_const ( const void * ) 
kstrdup extern char * kstrdup ( const char * , t#gfp_t ) 
kstrdup_const extern const char * kstrdup_const ( const char * , t#gfp_t ) 
kstrndup extern char * kstrndup ( const char * , t#size_t , t#gfp_t ) 
kmemdup extern void * kmemdup ( const void * , t#size_t , t#gfp_t ) 
memdup_user extern void * memdup_user ( const void * , t#size_t ) 
vmemdup_user extern void * vmemdup_user ( const void * , t#size_t ) 
strndup_user extern char * strndup_user ( const char * , long ) 
memdup_user_nul extern void * memdup_user_nul ( const void * , t#size_t ) 
s##posix_acl
s##vfsmount
s##module
s##device_private
s##sock
s##iov_iter
s##poll_table_struct
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##compat_timespec
s##pollfd
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##kmem_cache
s##workqueue_struct
s##blk_plug
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##kernfs_open_node
s##kernfs_iattrs
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##fwnode_handle
s##iommu_group
s##iommu_fwspec
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
__get_user_pages_fast int __get_user_pages_fast ( unsigned long , int , int , s#page * * ) 
get_user_pages_fast int get_user_pages_fast ( unsigned long , int , int , s#page * * ) 
vm_mmap extern unsigned long vm_mmap ( s#file * , unsigned long , unsigned long , unsigned long , unsigned long , unsigned long ) 
kvmalloc_node extern void * kvmalloc_node ( t#size_t , t#gfp_t , int ) 
kvfree extern void kvfree ( const void * ) 
page_mapped t#bool page_mapped ( s#page * ) 
page_mapping extern s#address_space * page_mapping ( s#page * ) 
__page_mapcount int __page_mapcount ( s#page * ) 
vm_memory_committed unsigned long vm_memory_committed ( void ) 

/* mm/vmalloc.o */
s##posix_acl
s##vfsmount
s##sock
s##bio_vec
s##pipe_inode_info
s##poll_table_struct
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pollfd
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##user_namespace
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##mem_cgroup
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##device
s##kmem_cache
vmalloc_to_page s#page * vmalloc_to_page ( const void * ) 
vmalloc_to_pfn unsigned long vmalloc_to_pfn ( const void * ) 
register_vmap_purge_notifier int register_vmap_purge_notifier ( s#notifier_block * ) 
unregister_vmap_purge_notifier int unregister_vmap_purge_notifier ( s#notifier_block * ) 
vm_unmap_aliases extern void vm_unmap_aliases ( void ) 
vm_unmap_ram extern void vm_unmap_ram ( const void * , unsigned int ) 
vm_map_ram extern void * vm_map_ram ( s#page * * , unsigned int , int , t#pgprot_t ) 
unmap_kernel_range_noflush extern void unmap_kernel_range_noflush ( unsigned long , unsigned long ) 
unmap_kernel_range extern void unmap_kernel_range ( unsigned long , unsigned long ) 
s#vm_struct struct vm_struct { s#vm_struct * next ; void * addr ; unsigned long size ; unsigned long flags ; s#page * * pages ; unsigned int nr_pages ; t#phys_addr_t phys_addr ; const void * caller ; } 
map_vm_area extern int map_vm_area ( s#vm_struct * , t#pgprot_t , s#page * * ) 
__get_vm_area extern s#vm_struct * __get_vm_area ( unsigned long , unsigned long , unsigned long , unsigned long ) 
vfree extern void vfree ( const void * ) 
vunmap extern void vunmap ( const void * ) 
vmap extern void * vmap ( s#page * * , unsigned int , unsigned long , t#pgprot_t ) 
__vmalloc extern void * __vmalloc ( unsigned long , t#gfp_t , t#pgprot_t ) 
vmalloc extern void * vmalloc ( unsigned long ) 
vzalloc extern void * vzalloc ( unsigned long ) 
vmalloc_user extern void * vmalloc_user ( unsigned long ) 
vmalloc_node extern void * vmalloc_node ( unsigned long , int ) 
vzalloc_node extern void * vzalloc_node ( unsigned long , int ) 
vmalloc_32 extern void * vmalloc_32 ( unsigned long ) 
vmalloc_32_user extern void * vmalloc_32_user ( unsigned long ) 
remap_vmalloc_range_partial extern int remap_vmalloc_range_partial ( s#vm_area_struct * , unsigned long , void * , unsigned long ) 
remap_vmalloc_range extern int remap_vmalloc_range ( s#vm_area_struct * , void * , unsigned long ) 
alloc_vm_area extern s#vm_struct * alloc_vm_area ( t#size_t , t#pte_t * * ) 
free_vm_area extern void free_vm_area ( s#vm_struct * ) 

/* mm/vmscan.o */
s##vfsmount
s##posix_acl
s##sock
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_array
s##tracer
s##trace_buffer
s##ring_buffer_iter
s##event_filter
s##bpf_prog_array
s##device_private
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##kmem_cache
s##fs_pin
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_mq_ctx
s##workqueue_struct
s##pipe_inode_info
s##blk_mq_hw_ctx
s##blk_mq_alloc_data
s##blk_mq_debugfs_attr
s##blk_queue_stats
s##rq_wb
s##blk_mq_ops
s##blk_stat_callback
s##blk_trace
s##blk_flush_queue
s##bsg_job
s##throtl_data
s##blk_mq_tag_set
s##hd_geometry
s##pr_ops
s##timer_rand_state
s##disk_events
s##badblocks
s##robust_list_head
s##futex_pi_state
s##numa_group
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##userfaultfd_ctx
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##ring_buffer
s##bpf_prog
s##ftrace_hash
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##mtd_info
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##cgroup_taskset
s##eventfd_ctx
register_shrinker extern int register_shrinker ( s#shrinker * ) 
unregister_shrinker extern void unregister_shrinker ( s#shrinker * ) 

/* mm/vmstat.o */
s#vm_event_state struct vm_event_state { unsigned long event [ E#NR_VM_EVENT_ITEMS ] ; } 
vm_event_states extern __attribute__ ( ( section ( ".data..percpu" "" ) ) ) __typeof__ ( s#vm_event_state ) vm_event_states 
all_vm_events extern void all_vm_events ( unsigned long * ) 
vm_zone_stat extern t#atomic_long_t vm_zone_stat [ E#NR_VM_ZONE_STAT_ITEMS ] 
vm_numa_stat extern t#atomic_long_t vm_numa_stat [ E#NR_VM_NUMA_STAT_ITEMS ] 
vm_node_stat extern t#atomic_long_t vm_node_stat [ E#NR_VM_NODE_STAT_ITEMS ] 
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##sock
s##pipe_inode_info
s##poll_table_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##fwnode_handle
s##iommu_group
s##iommu_fwspec
s##workqueue_struct
s##bpf_prog_array
s##cgroup_taskset
s##kstatfs
s##eventfd_ctx
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kmem_cache
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_plug
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
e#zone_stat_item enum zone_stat_item { NR_FREE_PAGES , NR_ZONE_LRU_BASE , NR_ZONE_INACTIVE_ANON = E#NR_ZONE_LRU_BASE , NR_ZONE_ACTIVE_ANON , NR_ZONE_INACTIVE_FILE , NR_ZONE_ACTIVE_FILE , NR_ZONE_UNEVICTABLE , NR_ZONE_WRITE_PENDING , NR_MLOCK , NR_SLAB_RECLAIMABLE , NR_SLAB_UNRECLAIMABLE , NR_PAGETABLE , NR_KERNEL_STACK_KB , NR_BOUNCE , NR_ZSPAGES , NR_FREE_CMA_PAGES , NR_VM_ZONE_STAT_ITEMS } 
__mod_zone_page_state void __mod_zone_page_state ( s#zone * , e#zone_stat_item , long ) 
e#node_stat_item enum node_stat_item { NR_LRU_BASE , NR_INACTIVE_ANON = E#NR_LRU_BASE , NR_ACTIVE_ANON , NR_INACTIVE_FILE , NR_ACTIVE_FILE , NR_UNEVICTABLE , NR_ISOLATED_ANON , NR_ISOLATED_FILE , WORKINGSET_REFAULT , WORKINGSET_ACTIVATE , WORKINGSET_NODERECLAIM , NR_ANON_MAPPED , NR_FILE_MAPPED , NR_FILE_PAGES , NR_FILE_DIRTY , NR_WRITEBACK , NR_WRITEBACK_TEMP , NR_SHMEM , NR_SHMEM_THPS , NR_SHMEM_PMDMAPPED , NR_ANON_THPS , NR_UNSTABLE_NFS , NR_VMSCAN_WRITE , NR_VMSCAN_IMMEDIATE , NR_DIRTIED , NR_WRITTEN , NR_VM_NODE_STAT_ITEMS } 
__mod_node_page_state void __mod_node_page_state ( s#pglist_data * , e#node_stat_item , long ) 
__inc_zone_page_state void __inc_zone_page_state ( s#page * , e#zone_stat_item ) 
__inc_node_page_state void __inc_node_page_state ( s#page * , e#node_stat_item ) 
__dec_zone_page_state void __dec_zone_page_state ( s#page * , e#zone_stat_item ) 
__dec_node_page_state void __dec_node_page_state ( s#page * , e#node_stat_item ) 
mod_zone_page_state void mod_zone_page_state ( s#zone * , e#zone_stat_item , long ) 
inc_zone_page_state void inc_zone_page_state ( s#page * , e#zone_stat_item ) 
dec_zone_page_state void dec_zone_page_state ( s#page * , e#zone_stat_item ) 
mod_node_page_state void mod_node_page_state ( s#pglist_data * , e#node_stat_item , long ) 
inc_node_page_state void inc_node_page_state ( s#page * , e#node_stat_item ) 
dec_node_page_state void dec_node_page_state ( s#page * , e#node_stat_item ) 

/* mm/zpool.o */
s##sock
s##seq_file
s##vfsmount
s##posix_acl
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##device
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##zpool
s#zpool_ops struct zpool_ops { int ( * evict ) ( s#zpool * , unsigned long ) ; } 
E#ZPOOL_MM_RW 0 
e#zpool_mapmode enum zpool_mapmode { ZPOOL_MM_RW , ZPOOL_MM_RO , ZPOOL_MM_WO , ZPOOL_MM_DEFAULT = E#ZPOOL_MM_RW } 
s#zpool_driver struct zpool_driver { char * type ; s#module * owner ; t#atomic_t refcount ; s#list_head list ; void * ( * create ) ( const char * , t#gfp_t , const s#zpool_ops * , s#zpool * ) ; void ( * destroy ) ( void * ) ; int ( * malloc ) ( void * , t#size_t , t#gfp_t , unsigned long * ) ; void ( * free ) ( void * , unsigned long ) ; int ( * shrink ) ( void * , unsigned int , unsigned int * ) ; void * ( * map ) ( void * , unsigned long , e#zpool_mapmode ) ; void ( * unmap ) ( void * , unsigned long ) ; t#u64 ( * total_size ) ( void * ) ; } 
zpool_register_driver void zpool_register_driver ( s#zpool_driver * ) 
zpool_unregister_driver int zpool_unregister_driver ( s#zpool_driver * ) 
zpool_has_pool t#bool zpool_has_pool ( char * ) 

/* mm/zsmalloc.o */
s##zs_pool
zs_get_total_pages unsigned long zs_get_total_pages ( s#zs_pool * ) 
e#zs_mapmode enum zs_mapmode { ZS_MM_RW , ZS_MM_RO , ZS_MM_WO } 
zs_map_object void * zs_map_object ( s#zs_pool * , unsigned long , e#zs_mapmode ) 
zs_unmap_object void zs_unmap_object ( s#zs_pool * , unsigned long ) 
zs_malloc unsigned long zs_malloc ( s#zs_pool * , t#size_t , t#gfp_t ) 
zs_free void zs_free ( s#zs_pool * , unsigned long ) 
zs_compact unsigned long zs_compact ( s#zs_pool * ) 
s#zs_pool_stats struct zs_pool_stats { unsigned long pages_compacted ; } 
zs_pool_stats void zs_pool_stats ( s#zs_pool * , s#zs_pool_stats * ) 
zs_create_pool s#zs_pool * zs_create_pool ( const char * ) 
zs_destroy_pool void zs_destroy_pool ( s#zs_pool * ) 

/* net/6lowpan/core.o */
s##posix_acl
s##vfsmount
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##prot_inuse
s##ipv4_devconf
s##fib_table
s##inet_peer_base
s##kmem_cache
s##xt_table
s##inet_hashinfo
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##lwtunnel_state
s##rtable
s##dn_route
s##workqueue_struct
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##nf_hook_entry
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##mempolicy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##blk_plug
s##reclaim_state
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##udp_table
s##raw_hashinfo
s##bpf_prog_aux
s##xfrm_policy
s##sock_reuseport
s##sec_path
s##udp_tunnel_info
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
E#__NL802154_SUPPORTED_BOOL_AFTER_LAST 4 
e#nl802154_supported_bool_states enum nl802154_supported_bool_states { NL802154_SUPPORTED_BOOL_FALSE , NL802154_SUPPORTED_BOOL_TRUE , __NL802154_SUPPORTED_BOOL_INVALD , NL802154_SUPPORTED_BOOL_BOTH , __NL802154_SUPPORTED_BOOL_AFTER_LAST , NL802154_SUPPORTED_BOOL_MAX = E#__NL802154_SUPPORTED_BOOL_AFTER_LAST - 1 } 
s#wpan_phy_supported struct wpan_phy_supported { t#u32 channels [ 31 + 1 ] , cca_modes , cca_opts , iftypes ; e#nl802154_supported_bool_states lbt ; t#u8 min_minbe , max_minbe , min_maxbe , max_maxbe , min_csma_backoffs , max_csma_backoffs ; t#s8 min_frame_retries , max_frame_retries ; t#size_t tx_powers_size , cca_ed_levels_size ; const t#s32 * tx_powers , * cca_ed_levels ; } 
E#__NL802154_CCA_ATTR_AFTER_LAST 7 
e#nl802154_cca_modes enum nl802154_cca_modes { __NL802154_CCA_INVALID , NL802154_CCA_ENERGY , NL802154_CCA_CARRIER , NL802154_CCA_ENERGY_CARRIER , NL802154_CCA_ALOHA , NL802154_CCA_UWB_SHR , NL802154_CCA_UWB_MULTIPLEXED , __NL802154_CCA_ATTR_AFTER_LAST , NL802154_CCA_ATTR_MAX = E#__NL802154_CCA_ATTR_AFTER_LAST - 1 } 
E#__NL802154_CCA_OPT_ATTR_AFTER_LAST 2 
e#nl802154_cca_opts enum nl802154_cca_opts { NL802154_CCA_OPT_ENERGY_CARRIER_AND , NL802154_CCA_OPT_ENERGY_CARRIER_OR , __NL802154_CCA_OPT_ATTR_AFTER_LAST , NL802154_CCA_OPT_ATTR_MAX = E#__NL802154_CCA_OPT_ATTR_AFTER_LAST - 1 } 
s#wpan_phy_cca struct wpan_phy_cca { e#nl802154_cca_modes mode ; e#nl802154_cca_opts opt ; } 
s#wpan_phy struct wpan_phy { const void * privid ; t#u32 flags ; t#u8 current_channel ; t#u8 current_page ; s#wpan_phy_supported supported ; t#s32 transmit_power ; s#wpan_phy_cca cca ; t#__le64 perm_extended_addr ; t#s32 cca_ed_level ; t#u8 symbol_duration ; t#u16 lifs_period ; t#u16 sifs_period ; s#device dev ; t#possible_net_t _net ; char priv [ 0 ] __attribute__ ( ( aligned ( 32 ) ) ) ; } 
s#ieee802154_addr struct ieee802154_addr { t#u8 mode ; t#__le16 pan_id ; union { t#__le16 short_addr ; t#__le64 extended_addr ; } ; } 
s#wpan_dev_header_ops struct wpan_dev_header_ops { int ( * create ) ( s#sk_buff * , s#net_device * , const s#ieee802154_addr * , const s#ieee802154_addr * , unsigned int ) ; } 
s#wpan_dev struct wpan_dev { s#wpan_phy * wpan_phy ; int iftype ; s#list_head list ; s#net_device * netdev ; const s#wpan_dev_header_ops * header_ops ; s#net_device * lowpan_dev ; t#u32 identifier ; t#__le16 pan_id ; t#__le16 short_addr ; t#__le64 extended_addr ; t#atomic_t bsn ; t#atomic_t dsn ; t#u8 min_be ; t#u8 max_be ; t#u8 csma_retries ; t#s8 frame_retries ; t#bool lbt ; t#bool promiscuous_mode ; t#bool ackreq ; } 
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
e#lowpan_lltypes enum lowpan_lltypes { LOWPAN_LLTYPE_BTLE , LOWPAN_LLTYPE_IEEE802154 , } 
lowpan_register_netdevice int lowpan_register_netdevice ( s#net_device * , e#lowpan_lltypes ) 
lowpan_register_netdev int lowpan_register_netdev ( s#net_device * , e#lowpan_lltypes ) 
lowpan_unregister_netdevice void lowpan_unregister_netdevice ( s#net_device * ) 
lowpan_unregister_netdev void lowpan_unregister_netdev ( s#net_device * ) 

/* net/6lowpan/iphc.o */
s##proc_ns_operations
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##kmem_cache
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##bpf_prog_aux
s##xfrm_policy
s##workqueue_struct
s##xfrm_state
s##lwtunnel_state
s##rtable
s##rt6_info
s##dn_route
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_dir_entry
s##uevent_sock
s##prot_inuse
s##ipv4_devconf
s##fib_table
s##inet_peer_base
s##xt_table
s##rt6_statistics
s##fib6_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##nf_hook_entry
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##udp_tunnel_info
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##prefix_info
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
s##sec_path
lowpan_header_decompress int lowpan_header_decompress ( s#sk_buff * , const s#net_device * , const void * , const void * ) 
lowpan_header_compress int lowpan_header_compress ( s#sk_buff * , const s#net_device * , const void * , const void * ) 

/* net/6lowpan/nhc.o */
s##proc_ns_operations
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##kmem_cache
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##bpf_prog_aux
s##xfrm_policy
s##workqueue_struct
s##xfrm_state
s##lwtunnel_state
s##rtable
s##rt6_info
s##dn_route
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_dir_entry
s##uevent_sock
s##prot_inuse
s##ipv4_devconf
s##fib_table
s##inet_peer_base
s##xt_table
s##rt6_statistics
s##fib6_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##nf_hook_entry
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##udp_tunnel_info
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##prefix_info
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
s##sec_path
s#lowpan_nhc struct lowpan_nhc { s#rb_node node ; const char * name ; const t#u8 nexthdr ; const t#size_t nexthdrlen ; t#u8 * id ; t#u8 * idmask ; const t#size_t idlen ; void ( * idsetup ) ( s#lowpan_nhc * ) ; int ( * uncompress ) ( s#sk_buff * , t#size_t ) ; int ( * compress ) ( s#sk_buff * , t#u8 * * ) ; } 
lowpan_nhc_add int lowpan_nhc_add ( s#lowpan_nhc * ) 
lowpan_nhc_del void lowpan_nhc_del ( s#lowpan_nhc * ) 

/* net/802/garp.o */
s##sock
s##sec_path
s##neigh_parms
s##neighbour
s##vfsmount
s##posix_acl
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##kmem_cache
s##xt_table
s##inet_hashinfo
s##fib_notifier_ops
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##nf_hook_entry
s##ebt_table
s##workqueue_struct
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##bpf_prog_array
s##cgroup_taskset
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##udp_tunnel_info
s##bpf_prog
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##l3mdev_ops
s##ndisc_ops
s##xfrm_state
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##mini_Qdisc
s##Qdisc
s##cpu_rmap
s##pcpu_dstats
e#garp_applications enum garp_applications { GARP_APPLICATION_GVRP , __GARP_APPLICATION_MAX } 
s#stp_proto struct stp_proto { unsigned char group_address [ 6 ] ; void ( * rcv ) ( const s#stp_proto * , s#sk_buff * , s#net_device * ) ; void * data ; } 
s#garp_application struct garp_application { e#garp_applications type ; unsigned int maxattr ; s#stp_proto proto ; } 
s#garp_applicant struct garp_applicant { s#garp_application * app ; s#net_device * dev ; s#timer_list join_timer ; t#spinlock_t lock ; s#sk_buff_head queue ; s#sk_buff * pdu ; s#rb_root gid ; s#callback_head rcu ; } 
E#__GARP_APPLICATION_MAX 1 
s#garp_port struct garp_port { s#garp_applicant * applicants [ ( E#__GARP_APPLICATION_MAX - 1 ) + 1 ] ; s#callback_head rcu ; } 
s##mrp_port
s##rtnl_link_ops
s##phy_device
s##sfp_bus
garp_request_join int garp_request_join ( const s#net_device * , const s#garp_application * , const void * , t#u8 , t#u8 ) 
garp_request_leave void garp_request_leave ( const s#net_device * , const s#garp_application * , const void * , t#u8 , t#u8 ) 
garp_init_applicant int garp_init_applicant ( s#net_device * , s#garp_application * ) 
garp_uninit_applicant void garp_uninit_applicant ( s#net_device * , s#garp_application * ) 
garp_register_application int garp_register_application ( s#garp_application * ) 
garp_unregister_application void garp_unregister_application ( s#garp_application * ) 

/* net/802/mrp.o */
s##sock
s##sec_path
s##neigh_parms
s##neighbour
s##vfsmount
s##posix_acl
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##kmem_cache
s##xt_table
s##inet_hashinfo
s##fib_notifier_ops
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##nf_hook_entry
s##ebt_table
s##workqueue_struct
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##bpf_prog_array
s##cgroup_taskset
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##udp_tunnel_info
s##bpf_prog
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##l3mdev_ops
s##ndisc_ops
s##xfrm_state
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##mini_Qdisc
s##Qdisc
s##cpu_rmap
s##pcpu_dstats
s##garp_port
e#mrp_applications enum mrp_applications { MRP_APPLICATION_MVRP , __MRP_APPLICATION_MAX } 
s#packet_type struct packet_type { t#__be16 type ; s#net_device * dev ; int ( * func ) ( s#sk_buff * , s#net_device * , s#packet_type * , s#net_device * ) ; void ( * list_func ) ( s#list_head * , s#packet_type * , s#net_device * ) ; t#bool ( * id_match ) ( s#packet_type * , s#sock * ) ; void * af_packet_priv ; s#list_head list ; } 
s#mrp_application struct mrp_application { e#mrp_applications type ; unsigned int maxattr ; s#packet_type pkttype ; unsigned char group_address [ 6 ] ; t#u8 version ; } 
s#mrp_applicant struct mrp_applicant { s#mrp_application * app ; s#net_device * dev ; s#timer_list join_timer ; s#timer_list periodic_timer ; t#spinlock_t lock ; s#sk_buff_head queue ; s#sk_buff * pdu ; s#rb_root mad ; s#callback_head rcu ; } 
E#__MRP_APPLICATION_MAX 1 
s#mrp_port struct mrp_port { s#mrp_applicant * applicants [ ( E#__MRP_APPLICATION_MAX - 1 ) + 1 ] ; s#callback_head rcu ; } 
s##rtnl_link_ops
s##phy_device
s##sfp_bus
mrp_request_join int mrp_request_join ( const s#net_device * , const s#mrp_application * , const void * , t#u8 , t#u8 ) 
mrp_request_leave void mrp_request_leave ( const s#net_device * , const s#mrp_application * , const void * , t#u8 , t#u8 ) 
mrp_init_applicant int mrp_init_applicant ( s#net_device * , s#mrp_application * ) 
mrp_uninit_applicant void mrp_uninit_applicant ( s#net_device * , s#mrp_application * ) 
mrp_register_application int mrp_register_application ( s#mrp_application * ) 
mrp_unregister_application void mrp_unregister_application ( s#mrp_application * ) 

/* net/802/p8022.o */
s##neigh_parms
s##neighbour
s##sock
s##vfsmount
s##posix_acl
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##kmem_cache
s##xt_table
s##inet_hashinfo
s##fib_notifier_ops
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##nf_hook_entry
s##ebt_table
s##workqueue_struct
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##bpf_prog_array
s##cgroup_taskset
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##udp_tunnel_info
s##bpf_prog
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##l3mdev_ops
s##ndisc_ops
s##xfrm_state
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##mini_Qdisc
s##Qdisc
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##rtnl_link_ops
s##phy_device
s##sfp_bus
s##sec_path
s#llc_addr struct llc_addr { unsigned char lsap ; unsigned char mac [ 6 ] ; } 
s#llc_sap struct llc_sap { unsigned char state ; unsigned char p_bit ; unsigned char f_bit ; t#atomic_t refcnt ; int ( * rcv_func ) ( s#sk_buff * , s#net_device * , s#packet_type * , s#net_device * ) ; s#llc_addr laddr ; s#list_head node ; t#spinlock_t sk_lock ; int sk_count ; s#hlist_nulls_head sk_laddr_hash [ ( 1 << 6 ) ] ; s#hlist_head sk_dev_hash [ ( 1 << 6 ) ] ; } 
s#datalink_proto struct datalink_proto { unsigned char type [ 8 ] ; s#llc_sap * sap ; unsigned short header_length ; int ( * rcvfunc ) ( s#sk_buff * , s#net_device * , s#packet_type * , s#net_device * ) ; int ( * request ) ( s#datalink_proto * , s#sk_buff * , unsigned char * ) ; s#list_head node ; } 
register_8022_client s#datalink_proto * register_8022_client ( unsigned char , int ( * ) ( s#sk_buff * , s#net_device * , s#packet_type * , s#net_device * ) ) 
unregister_8022_client void unregister_8022_client ( s#datalink_proto * ) 

/* net/802/psnap.o */
s##neigh_parms
s##neighbour
s##sock
s##vfsmount
s##posix_acl
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##kmem_cache
s##xt_table
s##inet_hashinfo
s##fib_notifier_ops
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##nf_hook_entry
s##ebt_table
s##workqueue_struct
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##bpf_prog_array
s##cgroup_taskset
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##udp_tunnel_info
s##bpf_prog
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##l3mdev_ops
s##ndisc_ops
s##xfrm_state
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##mini_Qdisc
s##Qdisc
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##rtnl_link_ops
s##phy_device
s##sfp_bus
s##sec_path
register_snap_client s#datalink_proto * register_snap_client ( const unsigned char * , int ( * ) ( s#sk_buff * , s#net_device * , s#packet_type * , s#net_device * ) ) 
unregister_snap_client void unregister_snap_client ( s#datalink_proto * ) 

/* net/802/stp.o */
s##neigh_parms
s##neighbour
s##sock
s##vfsmount
s##posix_acl
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##kmem_cache
s##xt_table
s##inet_hashinfo
s##fib_notifier_ops
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##nf_hook_entry
s##ebt_table
s##workqueue_struct
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##bpf_prog_array
s##cgroup_taskset
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##udp_tunnel_info
s##bpf_prog
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##l3mdev_ops
s##ndisc_ops
s##xfrm_state
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##mini_Qdisc
s##Qdisc
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##rtnl_link_ops
s##phy_device
s##sfp_bus
s##sec_path
stp_proto_register int stp_proto_register ( const s#stp_proto * ) 
stp_proto_unregister void stp_proto_unregister ( const s#stp_proto * ) 

/* net/8021q/vlan_core.o */
s##sock
s##sec_path
s##neigh_parms
s##neighbour
s##module
s##udp_tunnel_info
s##bpf_prog
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##l3mdev_ops
s##ndisc_ops
s##xfrm_state
s##tls_crypto_info
s##tls_context
s##vfsmount
s##posix_acl
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##kmem_cache
s##xt_table
s##inet_hashinfo
s##fib_notifier_ops
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##nf_hook_entry
s##ebt_table
s##workqueue_struct
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##bpf_prog_array
s##cgroup_taskset
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
E#VLAN_PROTO_NUM ( 0 ) + 2 
s#vlan_group struct vlan_group { unsigned int nr_vlan_devs ; s#hlist_node hlist ; s#net_device * * vlan_devices_arrays [ E#VLAN_PROTO_NUM ] [ 8 ] ; } 
s#vlan_info struct vlan_info { s#net_device * real_dev ; s#vlan_group grp ; s#list_head vid_list ; unsigned int nr_vids ; s#callback_head rcu ; } 
s##tipc_bearer
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##mini_Qdisc
s##Qdisc
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##rtnl_link_ops
s##phy_device
s##sfp_bus
__vlan_find_dev_deep_rcu extern s#net_device * __vlan_find_dev_deep_rcu ( s#net_device * , t#__be16 , t#u16 ) 
vlan_dev_real_dev extern s#net_device * vlan_dev_real_dev ( const s#net_device * ) 
vlan_dev_vlan_id extern t#u16 vlan_dev_vlan_id ( const s#net_device * ) 
vlan_dev_vlan_proto extern t#__be16 vlan_dev_vlan_proto ( const s#net_device * ) 
vlan_vid_add extern int vlan_vid_add ( s#net_device * , t#__be16 , t#u16 ) 
vlan_vid_del extern void vlan_vid_del ( s#net_device * , t#__be16 , t#u16 ) 
vlan_vids_add_by_dev extern int vlan_vids_add_by_dev ( s#net_device * , const s#net_device * ) 
vlan_vids_del_by_dev extern void vlan_vids_del_by_dev ( s#net_device * , const s#net_device * ) 
vlan_uses_dev extern t#bool vlan_uses_dev ( const s#net_device * ) 

/* net/9p/client.o */
s##sock
s##vfsmount
s##posix_acl
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##mmu_notifier_mm
s##xol_area
s##kmem_cache
s##fs_pin
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##ipc_namespace
s##mnt_namespace
s##net
s##bpf_prog_array
s##cgroup_taskset
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##robust_list_head
s##futex_pi_state
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##fwnode_handle
s##iommu_group
s##iommu_fwspec
s##ring_buffer
s##bpf_prog
s##static_key_mod
s##trace_array
s##tracer
s##trace_buffer
s##ring_buffer_iter
s##event_filter
s##ftrace_hash
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s#p9_fcall struct p9_fcall { t#u32 size ; t#u8 id ; t#u16 tag ; t#size_t offset ; t#size_t capacity ; t#u8 * sdata ; } 
s#p9_req_t struct p9_req_t { int status ; int t_err ; t#wait_queue_head_t * wq ; s#p9_fcall * tc ; s#p9_fcall * rc ; void * aux ; s#list_head req_list ; } 
s#p9_trans_module struct p9_trans_module { s#list_head list ; char * name ; int maxsize ; int def ; s#module * owner ; int ( * create ) ( s#p9_client * , const char * , char * ) ; void ( * close ) ( s#p9_client * ) ; int ( * request ) ( s#p9_client * , s#p9_req_t * ) ; int ( * cancel ) ( s#p9_client * , s#p9_req_t * ) ; int ( * cancelled ) ( s#p9_client * , s#p9_req_t * ) ; int ( * zc_request ) ( s#p9_client * , s#p9_req_t * , s#iov_iter * , s#iov_iter * , int , int , int ) ; } 
e#p9_trans_status enum p9_trans_status { Connected , BeginDisconnect , Disconnected , Hung , } 
s##p9_idpool
s#p9_client struct p9_client { t#spinlock_t lock ; unsigned int msize ; unsigned char proto_version ; s#p9_trans_module * trans_mod ; e#p9_trans_status status ; void * trans ; s#p9_idpool * fidpool ; s#list_head fidlist ; s#p9_idpool * tagpool ; s#p9_req_t * reqs [ 255 ] ; int max_tag ; char name [ 64 + 1 ] ; } 
p9_is_proto_dotl int p9_is_proto_dotl ( s#p9_client * ) 
p9_is_proto_dotu int p9_is_proto_dotu ( s#p9_client * ) 
p9_tag_lookup s#p9_req_t * p9_tag_lookup ( s#p9_client * , t#u16 ) 
p9_client_cb void p9_client_cb ( s#p9_client * , s#p9_req_t * , int ) 
t#int8_t typedef t#__s8 int8_t 
p9_parse_header int p9_parse_header ( s#p9_fcall * , t#int32_t * , t#int8_t * , t#int16_t * , int ) 
p9_client_create s#p9_client * p9_client_create ( const char * , char * ) 
p9_client_destroy void p9_client_destroy ( s#p9_client * ) 
p9_client_disconnect void p9_client_disconnect ( s#p9_client * ) 
p9_client_begin_disconnect void p9_client_begin_disconnect ( s#p9_client * ) 
s#p9_qid struct p9_qid { t#u8 type ; t#u32 version ; t#u64 path ; } 
s#p9_fid struct p9_fid { s#p9_client * clnt ; t#u32 fid ; int mode ; s#p9_qid qid ; t#u32 iounit ; t#kuid_t uid ; void * rdir ; s#list_head flist ; s#hlist_node dlist ; } 
p9_client_attach s#p9_fid * p9_client_attach ( s#p9_client * , s#p9_fid * , const char * , t#kuid_t , const char * ) 
p9_client_walk s#p9_fid * p9_client_walk ( s#p9_fid * , t#uint16_t , const unsigned char * const * , int ) 
p9_client_open int p9_client_open ( s#p9_fid * , int ) 
p9_client_create_dotl int p9_client_create_dotl ( s#p9_fid * , const char * , t#u32 , t#u32 , t#kgid_t , s#p9_qid * ) 
p9_client_fcreate int p9_client_fcreate ( s#p9_fid * , const char * , t#u32 , int , char * ) 
p9_client_symlink int p9_client_symlink ( s#p9_fid * , const char * , const char * , t#kgid_t , s#p9_qid * ) 
p9_client_link int p9_client_link ( s#p9_fid * , s#p9_fid * , const char * ) 
p9_client_fsync int p9_client_fsync ( s#p9_fid * , int ) 
p9_client_clunk int p9_client_clunk ( s#p9_fid * ) 
p9_client_remove int p9_client_remove ( s#p9_fid * ) 
p9_client_unlinkat int p9_client_unlinkat ( s#p9_fid * , const char * , int ) 
p9_client_read int p9_client_read ( s#p9_fid * , t#u64 , s#iov_iter * , int * ) 
p9_client_write int p9_client_write ( s#p9_fid * , t#u64 , s#iov_iter * , int * ) 
s#p9_wstat struct p9_wstat { t#u16 size ; t#u16 type ; t#u32 dev ; s#p9_qid qid ; t#u32 mode ; t#u32 atime ; t#u32 mtime ; t#u64 length ; const char * name ; const char * uid ; const char * gid ; const char * muid ; char * extension ; t#kuid_t n_uid ; t#kgid_t n_gid ; t#kuid_t n_muid ; } 
p9_client_stat s#p9_wstat * p9_client_stat ( s#p9_fid * ) 
s#p9_stat_dotl struct p9_stat_dotl { t#u64 st_result_mask ; s#p9_qid qid ; t#u32 st_mode ; t#kuid_t st_uid ; t#kgid_t st_gid ; t#u64 st_nlink ; t#u64 st_rdev ; t#u64 st_size ; t#u64 st_blksize ; t#u64 st_blocks ; t#u64 st_atime_sec ; t#u64 st_atime_nsec ; t#u64 st_mtime_sec ; t#u64 st_mtime_nsec ; t#u64 st_ctime_sec ; t#u64 st_ctime_nsec ; t#u64 st_btime_sec ; t#u64 st_btime_nsec ; t#u64 st_gen ; t#u64 st_data_version ; } 
p9_client_getattr_dotl s#p9_stat_dotl * p9_client_getattr_dotl ( s#p9_fid * , t#u64 ) 
p9_client_wstat int p9_client_wstat ( s#p9_fid * , s#p9_wstat * ) 
s#p9_iattr_dotl struct p9_iattr_dotl { t#u32 valid ; t#u32 mode ; t#kuid_t uid ; t#kgid_t gid ; t#u64 size ; t#u64 atime_sec ; t#u64 atime_nsec ; t#u64 mtime_sec ; t#u64 mtime_nsec ; } 
p9_client_setattr int p9_client_setattr ( s#p9_fid * , s#p9_iattr_dotl * ) 
s#p9_rstatfs struct p9_rstatfs { t#u32 type ; t#u32 bsize ; t#u64 blocks ; t#u64 bfree ; t#u64 bavail ; t#u64 files ; t#u64 ffree ; t#u64 fsid ; t#u32 namelen ; } 
p9_client_statfs int p9_client_statfs ( s#p9_fid * , s#p9_rstatfs * ) 
p9_client_rename int p9_client_rename ( s#p9_fid * , s#p9_fid * , const char * ) 
p9_client_renameat int p9_client_renameat ( s#p9_fid * , const char * , s#p9_fid * , const char * ) 
p9_client_xattrwalk s#p9_fid * p9_client_xattrwalk ( s#p9_fid * , const char * , t#u64 * ) 
p9_client_xattrcreate int p9_client_xattrcreate ( s#p9_fid * , const char * , t#u64 , int ) 
p9_client_readdir int p9_client_readdir ( s#p9_fid * , char * , t#u32 , t#u64 ) 
p9_client_mknod_dotl int p9_client_mknod_dotl ( s#p9_fid * , const char * , int , t#dev_t , t#kgid_t , s#p9_qid * ) 
p9_client_mkdir_dotl int p9_client_mkdir_dotl ( s#p9_fid * , const char * , int , t#kgid_t , s#p9_qid * ) 
s#p9_flock struct p9_flock { t#u8 type ; t#u32 flags ; t#u64 start ; t#u64 length ; t#u32 proc_id ; char * client_id ; } 
p9_client_lock_dotl int p9_client_lock_dotl ( s#p9_fid * , s#p9_flock * , t#u8 * ) 
s#p9_getlock struct p9_getlock { t#u8 type ; t#u64 start ; t#u64 length ; t#u32 proc_id ; char * client_id ; } 
p9_client_getlock_dotl int p9_client_getlock_dotl ( s#p9_fid * , s#p9_getlock * ) 
p9_client_readlink int p9_client_readlink ( s#p9_fid * , char * * ) 

/* net/9p/error.o */
p9_error_init int p9_error_init ( void ) 
p9_errstr2errno int p9_errstr2errno ( char * , int ) 

/* net/9p/mod.o */
s##sock
s##seq_file
s##vfsmount
s##posix_acl
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##ucounts
s##proc_ns_operations
s##ipc_namespace
s##mnt_namespace
s##net
s##cgroup_namespace
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##device
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##p9_idpool
v9fs_register_trans void v9fs_register_trans ( s#p9_trans_module * ) 
v9fs_unregister_trans void v9fs_unregister_trans ( s#p9_trans_module * ) 
v9fs_get_trans_by_name s#p9_trans_module * v9fs_get_trans_by_name ( char * ) 
v9fs_get_default_trans s#p9_trans_module * v9fs_get_default_trans ( void ) 

/* net/9p/protocol.o */
p9stat_free void p9stat_free ( s#p9_wstat * ) 
s##p9_trans_module
s##p9_idpool
p9stat_read int p9stat_read ( s#p9_client * , char * , int , s#p9_wstat * ) 
s#p9_dirent struct p9_dirent { s#p9_qid qid ; t#u64 d_off ; unsigned char d_type ; char d_name [ 256 ] ; } 
p9dirent_read int p9dirent_read ( s#p9_client * , char * , int , s#p9_dirent * ) 

/* net/9p/trans_common.o */
s##posix_acl
s##vfsmount
s##sock
s##seq_file
s##bio_vec
s##pipe_inode_info
s##poll_table_struct
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##mem_cgroup
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##device
s##kmem_cache
p9_release_pages void p9_release_pages ( s#page * * , int ) 

/* net/9p/util.o */
s##p9_idpool
p9_idpool_create s#p9_idpool * p9_idpool_create ( void ) 
p9_idpool_destroy void p9_idpool_destroy ( s#p9_idpool * ) 
p9_idpool_get int p9_idpool_get ( s#p9_idpool * ) 
p9_idpool_put void p9_idpool_put ( int , s#p9_idpool * ) 
p9_idpool_check int p9_idpool_check ( int , s#p9_idpool * ) 

/* net/bridge/br_device.o */
s##proc_ns_operations
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##kmem_cache
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##bpf_prog_aux
s##xfrm_policy
s##workqueue_struct
s##xfrm_state
s##lwtunnel_state
s##uncached_list
s##proc_dir_entry
s##dn_route
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##key_user
s##key_type
s##assoc_array_ptr
s##uevent_sock
s##prot_inuse
s##ipv4_devconf
s##xt_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##udp_tunnel_info
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##prefix_info
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
s##sec_path
s#nf_br_ops struct nf_br_ops { int ( * br_dev_xmit_hook ) ( s#sk_buff * ) ; } 
nf_br_ops extern const s#nf_br_ops * nf_br_ops 

/* net/bridge/br_fdb.o */
s##posix_acl
s##vfsmount
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##prot_inuse
s##ipv4_devconf
s##kmem_cache
s##xt_table
s##inet_hashinfo
s##workqueue_struct
s##xfrm_state
s##lwtunnel_state
s##uncached_list
s##dn_route
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##nf_hook_entry
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##mempolicy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##blk_plug
s##reclaim_state
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##udp_table
s##raw_hashinfo
s##bpf_prog_aux
s##xfrm_policy
s##sock_reuseport
s##sec_path
s##udp_tunnel_info
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##prefix_info
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
br_fdb_find_port s#net_device * br_fdb_find_port ( const s#net_device * , const unsigned char * , t#__u16 ) 

/* net/bridge/br_forward.o */
s##proc_ns_operations
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##workqueue_struct
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##kmem_cache
s##xfrm_state
s##lwtunnel_state
s##uncached_list
s##proc_dir_entry
s##dn_route
s##prefix_info
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##phy_device
s##sfp_bus
s##sec_path
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##key_user
s##key_type
s##assoc_array_ptr
s##uevent_sock
s##prot_inuse
s##ipv4_devconf
s##xt_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
br_dev_queue_push_xmit int br_dev_queue_push_xmit ( s#net * , s#sock * , s#sk_buff * ) 
br_forward_finish int br_forward_finish ( s#net * , s#sock * , s#sk_buff * ) 
s#net_bridge_vlan_group struct net_bridge_vlan_group { s#rhashtable vlan_hash ; s#rhashtable tunnel_hash ; s#list_head vlan_list ; t#u16 num_vlans ; t#u16 pvid ; } 
s#bridge_id struct bridge_id { unsigned char prio [ 2 ] ; unsigned char addr [ 6 ] ; } 
t#bridge_id typedef s#bridge_id bridge_id 
s#net_bridge_mdb_htable struct net_bridge_mdb_htable { s#hlist_head * mhash ; s#callback_head rcu ; s#net_bridge_mdb_htable * old ; t#u32 size ; t#u32 max ; t#u32 secret ; t#u32 ver ; } 
s#bridge_mcast_other_query struct bridge_mcast_other_query { s#timer_list timer ; unsigned long delay_time ; } 
s#bridge_mcast_own_query struct bridge_mcast_own_query { s#timer_list timer ; t#u32 startup_sent ; } 
s#br_ip struct br_ip { union { t#__be32 ip4 ; s#in6_addr ip6 ; } u ; t#__be16 proto ; t#__u16 vid ; } 
s#bridge_mcast_querier struct bridge_mcast_querier { s#br_ip addr ; s#net_bridge_port * port ; } 
E#BR_MCAST_DIR_SIZE 2 
s#br_mcast_stats struct br_mcast_stats { t#__u64 igmp_v1queries [ E#BR_MCAST_DIR_SIZE ] ; t#__u64 igmp_v2queries [ E#BR_MCAST_DIR_SIZE ] ; t#__u64 igmp_v3queries [ E#BR_MCAST_DIR_SIZE ] ; t#__u64 igmp_leaves [ E#BR_MCAST_DIR_SIZE ] ; t#__u64 igmp_v1reports [ E#BR_MCAST_DIR_SIZE ] ; t#__u64 igmp_v2reports [ E#BR_MCAST_DIR_SIZE ] ; t#__u64 igmp_v3reports [ E#BR_MCAST_DIR_SIZE ] ; t#__u64 igmp_parse_errors ; t#__u64 mld_v1queries [ E#BR_MCAST_DIR_SIZE ] ; t#__u64 mld_v2queries [ E#BR_MCAST_DIR_SIZE ] ; t#__u64 mld_leaves [ E#BR_MCAST_DIR_SIZE ] ; t#__u64 mld_v1reports [ E#BR_MCAST_DIR_SIZE ] ; t#__u64 mld_v2reports [ E#BR_MCAST_DIR_SIZE ] ; t#__u64 mld_parse_errors ; t#__u64 mcast_bytes [ E#BR_MCAST_DIR_SIZE ] ; t#__u64 mcast_packets [ E#BR_MCAST_DIR_SIZE ] ; } 
s#bridge_mcast_stats struct bridge_mcast_stats { s#br_mcast_stats mstats ; s#u64_stats_sync syncp ; } 
s#net_bridge struct net_bridge { t#spinlock_t lock ; t#spinlock_t hash_lock ; s#list_head port_list ; s#net_device * dev ; s#pcpu_sw_netstats * stats ; t#u8 vlan_enabled ; t#u8 vlan_stats_enabled ; t#__be16 vlan_proto ; t#u16 default_pvid ; s#net_bridge_vlan_group * vlgrp ; s#hlist_head hash [ ( 1 << 8 ) ] ; union { s#rtable fake_rtable ; s#rt6_info fake_rt6_info ; } ; t#bool nf_call_iptables ; t#bool nf_call_ip6tables ; t#bool nf_call_arptables ; t#u16 group_fwd_mask ; t#u16 group_fwd_mask_required ; t#bridge_id designated_root ; t#bridge_id t#bridge_id ; t#u32 root_path_cost ; unsigned char topology_change ; unsigned char topology_change_detected ; t#u16 root_port ; unsigned long max_age ; unsigned long hello_time ; unsigned long forward_delay ; unsigned long ageing_time ; unsigned long bridge_max_age ; unsigned long bridge_hello_time ; unsigned long bridge_forward_delay ; unsigned long bridge_ageing_time ; t#u8 group_addr [ 6 ] ; t#bool group_addr_set ; enum { BR_NO_STP , BR_KERNEL_STP , BR_USER_STP , } stp_enabled ; unsigned char multicast_router ; t#u8 multicast_disabled : 1 ; t#u8 multicast_querier : 1 ; t#u8 multicast_query_use_ifaddr : 1 ; t#u8 has_ipv6_addr : 1 ; t#u8 multicast_stats_enabled : 1 ; t#u32 hash_elasticity ; t#u32 hash_max ; t#u32 multicast_last_member_count ; t#u32 multicast_startup_query_count ; t#u8 multicast_igmp_version ; unsigned long multicast_last_member_interval ; unsigned long multicast_membership_interval ; unsigned long multicast_querier_interval ; unsigned long multicast_query_interval ; unsigned long multicast_query_response_interval ; unsigned long multicast_startup_query_interval ; t#spinlock_t multicast_lock ; s#net_bridge_mdb_htable * mdb ; s#hlist_head router_list ; s#timer_list multicast_router_timer ; s#bridge_mcast_other_query ip4_other_query ; s#bridge_mcast_own_query ip4_own_query ; s#bridge_mcast_querier ip4_querier ; s#bridge_mcast_stats * mcast_stats ; s#bridge_mcast_other_query ip6_other_query ; s#bridge_mcast_own_query ip6_own_query ; s#bridge_mcast_querier ip6_querier ; t#u8 multicast_mld_version ; s#timer_list hello_timer ; s#timer_list tcn_timer ; s#timer_list topology_change_timer ; s#delayed_work gc_work ; s#kobject * ifobj ; t#u32 auto_cnt ; int offload_fwd_mark ; } 
t#port_id typedef t#__u16 port_id 
s#net_bridge_port struct net_bridge_port { s#net_bridge * br ; s#net_device * dev ; s#list_head list ; unsigned long flags ; s#net_bridge_vlan_group * vlgrp ; t#u8 priority ; t#u8 state ; t#u16 port_no ; unsigned char topology_change_ack ; unsigned char config_pending ; t#port_id t#port_id ; t#port_id designated_port ; t#bridge_id designated_root ; t#bridge_id designated_bridge ; t#u32 path_cost ; t#u32 designated_cost ; unsigned long designated_age ; s#timer_list forward_delay_timer ; s#timer_list hold_timer ; s#timer_list message_age_timer ; s#kobject kobj ; s#callback_head rcu ; s#bridge_mcast_own_query ip4_own_query ; s#bridge_mcast_own_query ip6_own_query ; unsigned char multicast_router ; s#bridge_mcast_stats * mcast_stats ; s#timer_list multicast_router_timer ; s#hlist_head mglist ; s#hlist_node rlist ; char sysfs_name [ 16 ] ; int offload_fwd_mark ; } 
br_forward void br_forward ( const s#net_bridge_port * , s#sk_buff * , t#bool , t#bool ) 

/* net/bridge/br_input.o */
s##proc_ns_operations
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##kmem_cache
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##bpf_prog_aux
s##xfrm_policy
s##workqueue_struct
s##xfrm_state
s##lwtunnel_state
s##uncached_list
s##proc_dir_entry
s##dn_route
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##key_user
s##key_type
s##assoc_array_ptr
s##uevent_sock
s##prot_inuse
s##ipv4_devconf
s##xt_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##udp_tunnel_info
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##prefix_info
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
s##sec_path
t#br_should_route_hook_t typedef int br_should_route_hook_t ( s#sk_buff * ) 
br_should_route_hook extern t#br_should_route_hook_t * br_should_route_hook 
br_handle_frame_finish int br_handle_frame_finish ( s#net * , s#sock * , s#sk_buff * ) 

/* net/bridge/br_multicast.o */
s##posix_acl
s##vfsmount
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##prot_inuse
s##kmem_cache
s##xt_table
s##inet_hashinfo
s##workqueue_struct
s##xfrm_state
s##lwtunnel_state
s##uncached_list
s##dn_route
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##mempolicy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##blk_plug
s##reclaim_state
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##udp_table
s##raw_hashinfo
s##bpf_prog_aux
s##xfrm_policy
s##sock_reuseport
s##sec_path
s##udp_tunnel_info
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
br_multicast_enabled t#bool br_multicast_enabled ( const s#net_device * ) 
br_multicast_router t#bool br_multicast_router ( const s#net_device * ) 
br_multicast_list_adjacent int br_multicast_list_adjacent ( s#net_device * , s#list_head * ) 
br_multicast_has_querier_anywhere t#bool br_multicast_has_querier_anywhere ( s#net_device * , int ) 
br_multicast_has_querier_adjacent t#bool br_multicast_has_querier_adjacent ( s#net_device * , int ) 

/* net/bridge/br_netfilter_hooks.o */
br_netfilter_enable void br_netfilter_enable ( void ) 

/* net/bridge/br_vlan.o */
s##posix_acl
s##vfsmount
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##prot_inuse
s##ipv4_devconf
s##kmem_cache
s##xt_table
s##inet_hashinfo
s##workqueue_struct
s##xfrm_state
s##lwtunnel_state
s##uncached_list
s##dn_route
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##nf_hook_entry
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##mempolicy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##blk_plug
s##reclaim_state
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##udp_table
s##raw_hashinfo
s##bpf_prog_aux
s##xfrm_policy
s##sock_reuseport
s##sec_path
s##udp_tunnel_info
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##prefix_info
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
br_vlan_enabled t#bool br_vlan_enabled ( const s#net_device * ) 
br_vlan_get_pvid int br_vlan_get_pvid ( const s#net_device * , t#u16 * ) 
s#bridge_vlan_info struct bridge_vlan_info { t#__u16 flags ; t#__u16 vid ; } 
br_vlan_get_info int br_vlan_get_info ( const s#net_device * , t#u16 , s#bridge_vlan_info * ) 

/* net/bridge/netfilter/ebtables.o */
s##proc_ns_operations
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##kmem_cache
s##fs_pin
s##nlm_lockowner
s##nfs4_lock_state
s##workqueue_struct
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##xfrm_state
s##lwtunnel_state
s##uncached_list
s##proc_dir_entry
s##dn_route
s##prefix_info
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##phy_device
s##sfp_bus
s##sec_path
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##key_user
s##key_type
s##assoc_array_ptr
s##uevent_sock
s##prot_inuse
s##ipv4_devconf
E#NF_INET_NUMHOOKS 5 
s#xt_table_info struct xt_table_info { unsigned int size ; unsigned int number ; unsigned int initial_entries ; unsigned int hook_entry [ E#NF_INET_NUMHOOKS ] ; unsigned int underflow [ E#NF_INET_NUMHOOKS ] ; unsigned int stacksize ; void * * * jumpstack ; unsigned char entries [ 0 ] __attribute__ ( ( aligned ( 8 ) ) ) ; } 
s#xt_table struct xt_table { s#list_head list ; unsigned int valid_hooks ; s#xt_table_info * private ; s#module * me ; t#u_int8_t af ; int priority ; int ( * table_init ) ( s#net * ) ; const char name [ 32 ] ; } 
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s#ebt_entries struct ebt_entries { unsigned int distinguisher ; char name [ 32 ] ; unsigned int counter_offset ; int policy ; unsigned int nentries ; char data [ 0 ] __attribute__ ( ( aligned ( __alignof__ ( struct ebt_replace ) ) ) ) ; } 
s#ebt_counter struct ebt_counter { t#__u64 pcnt ; t#__u64 bcnt ; } 
s#ebt_replace_kernel struct ebt_replace_kernel { char name [ 32 ] ; unsigned int valid_hooks ; unsigned int nentries ; unsigned int entries_size ; s#ebt_entries * hook_entry [ 6 ] ; unsigned int num_counters ; s#ebt_counter * counters ; char * entries ; } 
s#ebt_entry struct ebt_entry { unsigned int bitmask ; unsigned int invflags ; t#__be16 ethproto ; char in [ 16 ] ; char logical_in [ 16 ] ; char out [ 16 ] ; char logical_out [ 16 ] ; unsigned char sourcemac [ 6 ] ; unsigned char sourcemsk [ 6 ] ; unsigned char destmac [ 6 ] ; unsigned char destmsk [ 6 ] ; unsigned int watchers_offset ; unsigned int target_offset ; unsigned int next_offset ; unsigned char elems [ 0 ] __attribute__ ( ( aligned ( __alignof__ ( struct ebt_replace ) ) ) ) ; } 
s#ebt_chainstack struct ebt_chainstack { s#ebt_entries * chaininfo ; s#ebt_entry * e ; unsigned int n ; } 
s#ebt_table_info struct ebt_table_info { unsigned int entries_size ; unsigned int nentries ; s#ebt_entries * hook_entry [ 6 ] ; s#ebt_chainstack * * chainstack ; char * entries ; s#ebt_counter counters [ 0 ] __attribute__ ( ( __aligned__ ( 256 ) ) ) ; } 
s#ebt_table struct ebt_table { s#list_head list ; char name [ 32 ] ; s#ebt_replace_kernel * table ; unsigned int valid_hooks ; t#rwlock_t lock ; int ( * check ) ( const s#ebt_table_info * , unsigned int ) ; s#ebt_table_info * private ; s#module * me ; } 
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
ebt_register_table extern int ebt_register_table ( s#net * , const s#ebt_table * , const s#nf_hook_ops * , s#ebt_table * * ) 
ebt_unregister_table extern void ebt_unregister_table ( s#net * , s#ebt_table * , const s#nf_hook_ops * ) 
ebt_do_table extern unsigned int ebt_do_table ( s#sk_buff * , const s#nf_hook_state * , s#ebt_table * ) 

/* net/ceph/auth.o */
s##device_private
s##sock
s##vfsmount
s##posix_acl
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##workqueue_struct
s##bpf_prog_array
s##cgroup_taskset
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##key_user
s##key_type
s##assoc_array_ptr
s##swap_info_struct
s##kmem_cache
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##proc_ns_operations
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##net_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##sec_path
s##xt_table
s##inet_hashinfo
s##fib_notifier_ops
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##neighbour
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##nf_hook_entry
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##reclaim_state
s##blk_mq_ctx
s##blk_mq_hw_ctx
s##blk_mq_alloc_data
s##blk_mq_debugfs_attr
s##blk_queue_stats
s##rq_wb
s##blk_mq_ops
s##blk_stat_callback
s##blk_trace
s##blk_flush_queue
s##bsg_job
s##throtl_data
s##blk_mq_tag_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##kstatfs
s##iomap
s##xattr_handler
s##fscrypt_operations
s##mtd_info
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##hd_geometry
s##pr_ops
s##timer_rand_state
s##disk_events
s##badblocks
s##crypto_skcipher
s#ceph_crypto_key struct ceph_crypto_key { int type ; s#ceph_timespec created ; int len ; void * key ; s#crypto_skcipher * tfm ; } 
ceph_auth_is_authenticated extern int ceph_auth_is_authenticated ( s#ceph_auth_client * ) 
ceph_auth_create_authorizer extern int ceph_auth_create_authorizer ( s#ceph_auth_client * , int , s#ceph_auth_handshake * ) 
ceph_auth_destroy_authorizer void ceph_auth_destroy_authorizer ( s#ceph_authorizer * ) 
ceph_auth_update_authorizer extern int ceph_auth_update_authorizer ( s#ceph_auth_client * , int , s#ceph_auth_handshake * ) 
ceph_auth_add_authorizer_challenge int ceph_auth_add_authorizer_challenge ( s#ceph_auth_client * , s#ceph_authorizer * , void * , int ) 
ceph_auth_verify_authorizer_reply extern int ceph_auth_verify_authorizer_reply ( s#ceph_auth_client * , s#ceph_authorizer * ) 
ceph_auth_invalidate_authorizer extern void ceph_auth_invalidate_authorizer ( s#ceph_auth_client * , int ) 

/* net/ceph/buffer.o */
ceph_buffer_new extern s#ceph_buffer * ceph_buffer_new ( t#size_t , t#gfp_t ) 
ceph_buffer_release extern void ceph_buffer_release ( s#kref * ) 

/* net/ceph/ceph_common.o */
libceph_compatible extern t#bool libceph_compatible ( void * ) 
ceph_msg_type_name extern const char * ceph_msg_type_name ( int ) 
s##crypto_skcipher
s##device_private
s##sock
s##posix_acl
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##workqueue_struct
s##bpf_prog_array
s##cgroup_taskset
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##key_user
s##key_type
s##assoc_array_ptr
s##swap_info_struct
s##kmem_cache
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##proc_ns_operations
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##net_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##sec_path
s##xt_table
s##inet_hashinfo
s##fib_notifier_ops
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##neighbour
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##nf_hook_entry
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##reclaim_state
s##blk_mq_ctx
s##blk_mq_hw_ctx
s##blk_mq_alloc_data
s##blk_mq_debugfs_attr
s##blk_queue_stats
s##rq_wb
s##blk_mq_ops
s##blk_stat_callback
s##blk_trace
s##blk_flush_queue
s##bsg_job
s##throtl_data
s##blk_mq_tag_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##iomap
s##xattr_handler
s##fscrypt_operations
s##mtd_info
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##hd_geometry
s##pr_ops
s##timer_rand_state
s##disk_events
s##badblocks
ceph_check_fsid extern int ceph_check_fsid ( s#ceph_client * , s#ceph_fsid * ) 
ceph_compare_options extern int ceph_compare_options ( s#ceph_options * , s#ceph_client * ) 
ceph_destroy_options extern void ceph_destroy_options ( s#ceph_options * ) 
ceph_parse_options extern s#ceph_options * ceph_parse_options ( char * , const char * , const char * , int ( * ) ( char * , void * ) , void * ) 
ceph_print_client_options int ceph_print_client_options ( s#seq_file * , s#ceph_client * ) 
ceph_client_addr s#ceph_entity_addr * ceph_client_addr ( s#ceph_client * ) 
ceph_client_gid t#u64 ceph_client_gid ( s#ceph_client * ) 
ceph_create_client s#ceph_client * ceph_create_client ( s#ceph_options * , void * ) 
ceph_destroy_client extern void ceph_destroy_client ( s#ceph_client * ) 
__ceph_open_session extern int __ceph_open_session ( s#ceph_client * , unsigned long ) 
ceph_open_session extern int ceph_open_session ( s#ceph_client * ) 
ceph_wait_for_latest_osdmap int ceph_wait_for_latest_osdmap ( s#ceph_client * , unsigned long ) 

/* net/ceph/ceph_fs.o */
s##ceph_string
s#ceph_file_layout_legacy struct ceph_file_layout_legacy { t#__le32 fl_stripe_unit ; t#__le32 fl_stripe_count ; t#__le32 fl_object_size ; t#__le32 fl_cas_hash ; t#__le32 fl_object_stripe_unit ; t#__le32 fl_unused ; t#__le32 fl_pg_pool ; } 
ceph_file_layout_from_legacy extern void ceph_file_layout_from_legacy ( s#ceph_file_layout * , s#ceph_file_layout_legacy * ) 
ceph_file_layout_to_legacy extern void ceph_file_layout_to_legacy ( s#ceph_file_layout * , s#ceph_file_layout_legacy * ) 
ceph_flags_to_mode int ceph_flags_to_mode ( int ) 
ceph_caps_for_mode int ceph_caps_for_mode ( int ) 

/* net/ceph/ceph_hash.o */
ceph_str_hash extern unsigned ceph_str_hash ( int , const char * , unsigned ) 
ceph_str_hash_name extern const char * ceph_str_hash_name ( int ) 

/* net/ceph/ceph_strings.o */
ceph_entity_type_name extern const char * ceph_entity_type_name ( int ) 

/* net/ceph/cls_lock_client.o */
s##ceph_client
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##module
s##writeback_control
s##kstatfs
s##key_user
s##key_type
s##assoc_array_ptr
s##poll_table_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##user_namespace
s##mem_cgroup
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##device_private
s##sock
s##kernfs_open_node
s##kernfs_iattrs
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kmem_cache
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##compat_timespec
s##pollfd
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio
s##ucounts
s##proc_ns_operations
s##proc_dir_entry
s##uevent_sock
s##net_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##sec_path
s##xt_table
s##inet_hashinfo
s##fib_notifier_ops
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##neighbour
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##nf_hook_entry
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##ceph_string
ceph_cls_lock int ceph_cls_lock ( s#ceph_osd_client * , s#ceph_object_id * , s#ceph_object_locator * , char * , t#u8 , char * , char * , char * , t#u8 ) 
ceph_cls_unlock int ceph_cls_unlock ( s#ceph_osd_client * , s#ceph_object_id * , s#ceph_object_locator * , char * , char * ) 
ceph_cls_break_lock int ceph_cls_break_lock ( s#ceph_osd_client * , s#ceph_object_id * , s#ceph_object_locator * , char * , char * , s#ceph_entity_name * ) 
ceph_cls_set_cookie int ceph_cls_set_cookie ( s#ceph_osd_client * , s#ceph_object_id * , s#ceph_object_locator * , char * , t#u8 , char * , char * , char * ) 
s#ceph_locker_id struct ceph_locker_id { s#ceph_entity_name name ; char * cookie ; } 
s#ceph_locker_info struct ceph_locker_info { s#ceph_entity_addr addr ; } 
s#ceph_locker struct ceph_locker { s#ceph_locker_id id ; s#ceph_locker_info info ; } 
ceph_free_lockers void ceph_free_lockers ( s#ceph_locker * , t#u32 ) 
ceph_cls_lock_info int ceph_cls_lock_info ( s#ceph_osd_client * , s#ceph_object_id * , s#ceph_object_locator * , char * , t#u8 * , char * * , s#ceph_locker * * , t#u32 * ) 

/* net/ceph/decode.o */
ceph_decode_entity_addr extern int ceph_decode_entity_addr ( void * * , void * , s#ceph_entity_addr * ) 

/* net/ceph/messenger.o */
ceph_pr_addr extern const char * ceph_pr_addr ( const s#ceph_entity_addr * ) 
ceph_msgr_flush extern void ceph_msgr_flush ( void ) 
s##device_private
s##posix_acl
s##vfsmount
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##workqueue_struct
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##sec_path
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##kmem_cache
s##xfrm_state
s##lwtunnel_state
s##uncached_list
s##rt6_info
s##dn_route
s##prefix_info
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
s##prot_inuse
s##ipv4_devconf
s##xt_table
s##rt6_statistics
s##fib6_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##reclaim_state
s##blk_mq_ctx
s##blk_mq_hw_ctx
s##blk_mq_alloc_data
s##blk_mq_debugfs_attr
s##blk_queue_stats
s##rq_wb
s##blk_mq_ops
s##blk_stat_callback
s##blk_trace
s##blk_flush_queue
s##bsg_job
s##throtl_data
s##blk_mq_tag_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##eventfd_ctx
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##kstatfs
s##iomap
s##xattr_handler
s##fscrypt_operations
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sock_reuseport
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##hd_geometry
s##pr_ops
s##timer_rand_state
s##disk_events
s##badblocks
ceph_con_close extern void ceph_con_close ( s#ceph_connection * ) 
ceph_con_open extern void ceph_con_open ( s#ceph_connection * , t#__u8 , t#__u64 , s#ceph_entity_addr * ) 
ceph_con_init extern void ceph_con_init ( s#ceph_connection * , void * , const s#ceph_connection_operations * , s#ceph_messenger * ) 
ceph_parse_ips extern int ceph_parse_ips ( const char * , const char * , s#ceph_entity_addr * , int , int * ) 
ceph_messenger_init extern void ceph_messenger_init ( s#ceph_messenger * , s#ceph_entity_addr * ) 
ceph_messenger_fini extern void ceph_messenger_fini ( s#ceph_messenger * ) 
ceph_con_send extern void ceph_con_send ( s#ceph_connection * , s#ceph_msg * ) 
ceph_con_keepalive extern void ceph_con_keepalive ( s#ceph_connection * ) 
ceph_msg_data_add_pages void ceph_msg_data_add_pages ( s#ceph_msg * , s#page * * , t#size_t , t#size_t , t#bool ) 
ceph_msg_data_add_pagelist extern void ceph_msg_data_add_pagelist ( s#ceph_msg * , s#ceph_pagelist * ) 
ceph_msg_data_add_bio void ceph_msg_data_add_bio ( s#ceph_msg * , s#ceph_bio_iter * , t#u32 ) 
ceph_msg_data_add_bvecs void ceph_msg_data_add_bvecs ( s#ceph_msg * , s#ceph_bvec_iter * ) 
ceph_msg_data_add_sg extern void ceph_msg_data_add_sg ( s#ceph_msg * , s#scatterlist * , unsigned int , t#u64 ) 
ceph_msg_new2 s#ceph_msg * ceph_msg_new2 ( int , int , int , t#gfp_t , t#bool ) 
ceph_msg_new extern s#ceph_msg * ceph_msg_new ( int , int , t#gfp_t , t#bool ) 
ceph_msg_get extern s#ceph_msg * ceph_msg_get ( s#ceph_msg * ) 
ceph_msg_put extern void ceph_msg_put ( s#ceph_msg * ) 
ceph_msg_dump extern void ceph_msg_dump ( s#ceph_msg * ) 

/* net/ceph/mon_client.o */
s##ceph_crypto_key
s##device_private
s##sock
s##vfsmount
s##posix_acl
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##workqueue_struct
s##bpf_prog_array
s##cgroup_taskset
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##key_user
s##key_type
s##assoc_array_ptr
s##swap_info_struct
s##kmem_cache
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##proc_ns_operations
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##net_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##sec_path
s##xt_table
s##inet_hashinfo
s##fib_notifier_ops
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##neighbour
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##nf_hook_entry
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##reclaim_state
s##blk_mq_ctx
s##blk_mq_hw_ctx
s##blk_mq_alloc_data
s##blk_mq_debugfs_attr
s##blk_queue_stats
s##rq_wb
s##blk_mq_ops
s##blk_stat_callback
s##blk_trace
s##blk_flush_queue
s##bsg_job
s##throtl_data
s##blk_mq_tag_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##kstatfs
s##iomap
s##xattr_handler
s##fscrypt_operations
s##mtd_info
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##hd_geometry
s##pr_ops
s##timer_rand_state
s##disk_events
s##badblocks
ceph_monc_want_map t#bool ceph_monc_want_map ( s#ceph_mon_client * , int , t#u32 , t#bool ) 
ceph_monc_got_map void ceph_monc_got_map ( s#ceph_mon_client * , int , t#u32 ) 
ceph_monc_renew_subs void ceph_monc_renew_subs ( s#ceph_mon_client * ) 
ceph_monc_wait_osdmap extern int ceph_monc_wait_osdmap ( s#ceph_mon_client * , t#u32 , unsigned long ) 
ceph_monc_open_session extern int ceph_monc_open_session ( s#ceph_mon_client * ) 
s#ceph_statfs struct ceph_statfs { t#__le64 kb , kb_used , kb_avail ; t#__le64 num_objects ; } 
ceph_monc_do_statfs int ceph_monc_do_statfs ( s#ceph_mon_client * , t#u64 , s#ceph_statfs * ) 
ceph_monc_get_version int ceph_monc_get_version ( s#ceph_mon_client * , const char * , t#u64 * ) 
s#ceph_mon_generic_request struct ceph_mon_generic_request { s#ceph_mon_client * monc ; s#kref kref ; t#u64 tid ; s#rb_node node ; int result ; s#completion completion ; t#ceph_monc_callback_t complete_cb ; t#u64 private_data ; s#ceph_msg * request ; s#ceph_msg * reply ; union { s#ceph_statfs * st ; t#u64 newest ; } u ; } 
t#ceph_monc_callback_t typedef void ( * ceph_monc_callback_t ) ( s#ceph_mon_generic_request * ) 
ceph_monc_get_version_async int ceph_monc_get_version_async ( s#ceph_mon_client * , const char * , t#ceph_monc_callback_t , t#u64 ) 
ceph_monc_blacklist_add int ceph_monc_blacklist_add ( s#ceph_mon_client * , s#ceph_entity_addr * ) 
ceph_monc_init extern int ceph_monc_init ( s#ceph_mon_client * , s#ceph_client * ) 
ceph_monc_stop extern void ceph_monc_stop ( s#ceph_mon_client * ) 
ceph_monc_validate_auth extern int ceph_monc_validate_auth ( s#ceph_mon_client * ) 

/* net/ceph/osd_client.o */
s##posix_acl
s##vfsmount
s##sock
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##proc_ns_operations
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##net_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##sec_path
s##kmem_cache
s##xt_table
s##inet_hashinfo
s##fib_notifier_ops
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##neighbour
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##nf_hook_entry
s##ebt_table
s##workqueue_struct
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##bpf_prog_array
s##cgroup_taskset
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##blk_mq_ctx
s##blk_mq_hw_ctx
s##blk_mq_alloc_data
s##blk_mq_debugfs_attr
s##blk_queue_stats
s##rq_wb
s##blk_mq_ops
s##blk_stat_callback
s##blk_trace
s##blk_flush_queue
s##bsg_job
s##throtl_data
s##blk_mq_tag_set
s##hd_geometry
s##pr_ops
s##timer_rand_state
s##disk_events
s##badblocks
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##key_user
s##key_type
s##assoc_array_ptr
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##kstatfs
s##iomap
s##xattr_handler
s##fscrypt_operations
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##ceph_crypto_key
osd_req_op_extent_osd_data extern s#ceph_osd_data * osd_req_op_extent_osd_data ( s#ceph_osd_request * , unsigned int ) 
osd_req_op_raw_data_in_pages extern void osd_req_op_raw_data_in_pages ( s#ceph_osd_request * , unsigned int , s#page * * , t#u64 , t#u32 , t#bool , t#bool ) 
osd_req_op_extent_osd_data_pages extern void osd_req_op_extent_osd_data_pages ( s#ceph_osd_request * , unsigned int , s#page * * , t#u64 , t#u32 , t#bool , t#bool ) 
osd_req_op_extent_osd_data_pagelist extern void osd_req_op_extent_osd_data_pagelist ( s#ceph_osd_request * , unsigned int , s#ceph_pagelist * ) 
osd_req_op_extent_osd_data_bio void osd_req_op_extent_osd_data_bio ( s#ceph_osd_request * , unsigned int , s#ceph_bio_iter * , t#u32 ) 
osd_req_op_extent_osd_data_bvecs void osd_req_op_extent_osd_data_bvecs ( s#ceph_osd_request * , unsigned int , s#bio_vec * , t#u32 , t#u32 ) 
osd_req_op_extent_osd_data_bvec_pos void osd_req_op_extent_osd_data_bvec_pos ( s#ceph_osd_request * , unsigned int , s#ceph_bvec_iter * ) 
osd_req_op_extent_osd_data_sg extern void osd_req_op_extent_osd_data_sg ( s#ceph_osd_request * , unsigned int , s#scatterlist * , unsigned int , t#u64 ) 
osd_req_op_cls_request_data_pagelist extern void osd_req_op_cls_request_data_pagelist ( s#ceph_osd_request * , unsigned int , s#ceph_pagelist * ) 
osd_req_op_cls_request_data_pages extern void osd_req_op_cls_request_data_pages ( s#ceph_osd_request * , unsigned int , s#page * * , t#u64 , t#u32 , t#bool , t#bool ) 
osd_req_op_cls_request_data_bvecs void osd_req_op_cls_request_data_bvecs ( s#ceph_osd_request * , unsigned int , s#bio_vec * , t#u32 , t#u32 ) 
osd_req_op_cls_response_data_pages extern void osd_req_op_cls_response_data_pages ( s#ceph_osd_request * , unsigned int , s#page * * , t#u64 , t#u32 , t#bool , t#bool ) 
osd_req_op_writesame_osd_data_sg extern void osd_req_op_writesame_osd_data_sg ( s#ceph_osd_request * , unsigned int , s#scatterlist * , unsigned int , t#u64 ) 
osd_req_op_xattr_response_data_pages extern void osd_req_op_xattr_response_data_pages ( s#ceph_osd_request * , unsigned int , s#page * * , t#u64 , t#u32 , t#bool , t#bool ) 
ceph_osdc_get_request extern void ceph_osdc_get_request ( s#ceph_osd_request * ) 
ceph_osdc_put_request extern void ceph_osdc_put_request ( s#ceph_osd_request * ) 
ceph_osdc_alloc_request extern s#ceph_osd_request * ceph_osdc_alloc_request ( s#ceph_osd_client * , s#ceph_snap_context * , unsigned int , t#bool , t#gfp_t ) 
ceph_osdc_alloc_messages int ceph_osdc_alloc_messages ( s#ceph_osd_request * , t#gfp_t ) 
osd_req_op_init extern void osd_req_op_init ( s#ceph_osd_request * , unsigned int , t#u16 , t#u32 ) 
osd_req_op_writesame_init extern void osd_req_op_writesame_init ( s#ceph_osd_request * , unsigned int , t#u16 , t#u64 , t#u64 , t#u64 ) 
osd_req_op_extent_init extern void osd_req_op_extent_init ( s#ceph_osd_request * , unsigned int , t#u16 , t#u64 , t#u64 , t#u64 , t#u32 ) 
osd_req_op_extent_update extern void osd_req_op_extent_update ( s#ceph_osd_request * , unsigned int , t#u64 ) 
osd_req_op_extent_dup_last extern void osd_req_op_extent_dup_last ( s#ceph_osd_request * , unsigned int , t#u64 ) 
osd_req_op_cls_init extern int osd_req_op_cls_init ( s#ceph_osd_request * , unsigned int , t#u16 , const char * , const char * ) 
osd_req_op_xattr_init extern int osd_req_op_xattr_init ( s#ceph_osd_request * , unsigned int , t#u16 , const char * , const void * , t#size_t , t#u8 , t#u8 ) 
osd_req_op_alloc_hint_init extern void osd_req_op_alloc_hint_init ( s#ceph_osd_request * , unsigned int , t#u64 , t#u64 ) 
s#ceph_vino struct ceph_vino { t#u64 ino ; t#u64 snap ; } 
ceph_osdc_new_request extern s#ceph_osd_request * ceph_osdc_new_request ( s#ceph_osd_client * , s#ceph_file_layout * , s#ceph_vino , t#u64 , t#u64 * , unsigned int , int , int , int , s#ceph_snap_context * , t#u32 , t#u64 , t#bool ) 
ceph_osdc_abort_requests void ceph_osdc_abort_requests ( s#ceph_osd_client * , int ) 
ceph_osdc_update_epoch_barrier void ceph_osdc_update_epoch_barrier ( s#ceph_osd_client * , t#u32 ) 
ceph_osdc_start_request extern int ceph_osdc_start_request ( s#ceph_osd_client * , s#ceph_osd_request * , t#bool ) 
ceph_osdc_cancel_request extern void ceph_osdc_cancel_request ( s#ceph_osd_request * ) 
ceph_osdc_wait_request extern int ceph_osdc_wait_request ( s#ceph_osd_client * , s#ceph_osd_request * ) 
ceph_osdc_sync extern void ceph_osdc_sync ( s#ceph_osd_client * ) 
ceph_osdc_watch s#ceph_osd_linger_request * ceph_osdc_watch ( s#ceph_osd_client * , s#ceph_object_id * , s#ceph_object_locator * , t#rados_watchcb2_t , t#rados_watcherrcb_t , void * ) 
ceph_osdc_unwatch int ceph_osdc_unwatch ( s#ceph_osd_client * , s#ceph_osd_linger_request * ) 
ceph_osdc_notify_ack int ceph_osdc_notify_ack ( s#ceph_osd_client * , s#ceph_object_id * , s#ceph_object_locator * , t#u64 , t#u64 , void * , t#u32 ) 
ceph_osdc_notify int ceph_osdc_notify ( s#ceph_osd_client * , s#ceph_object_id * , s#ceph_object_locator * , void * , t#u32 , t#u32 , s#page * * * , t#size_t * ) 
s#ceph_watch_item struct ceph_watch_item { s#ceph_entity_name name ; t#u64 cookie ; s#ceph_entity_addr addr ; } 
ceph_osdc_list_watchers int ceph_osdc_list_watchers ( s#ceph_osd_client * , s#ceph_object_id * , s#ceph_object_locator * , s#ceph_watch_item * * , t#u32 * ) 
ceph_osdc_flush_notifies extern void ceph_osdc_flush_notifies ( s#ceph_osd_client * ) 
ceph_osdc_maybe_request_map void ceph_osdc_maybe_request_map ( s#ceph_osd_client * ) 
ceph_osdc_call int ceph_osdc_call ( s#ceph_osd_client * , s#ceph_object_id * , s#ceph_object_locator * , const char * , const char * , unsigned int , s#page * , t#size_t , s#page * , t#size_t * ) 
ceph_osdc_readpages extern int ceph_osdc_readpages ( s#ceph_osd_client * , s#ceph_vino , s#ceph_file_layout * , t#u64 , t#u64 * , t#u32 , t#u64 , s#page * * , int , int ) 
ceph_osdc_writepages extern int ceph_osdc_writepages ( s#ceph_osd_client * , s#ceph_vino , s#ceph_file_layout * , s#ceph_snap_context * , t#u64 , t#u64 , t#u32 , t#u64 , s#timespec * , s#page * * , int ) 

/* net/ceph/osdmap.o */
ceph_pg_pool_name_by_id extern const char * ceph_pg_pool_name_by_id ( s#ceph_osdmap * , t#u64 ) 
ceph_pg_poolid_by_name extern int ceph_pg_poolid_by_name ( s#ceph_osdmap * , const char * ) 
ceph_pg_pool_flags t#u64 ceph_pg_pool_flags ( s#ceph_osdmap * , t#u64 ) 
ceph_oloc_copy void ceph_oloc_copy ( s#ceph_object_locator * , const s#ceph_object_locator * ) 
ceph_oloc_destroy void ceph_oloc_destroy ( s#ceph_object_locator * ) 
ceph_oid_copy void ceph_oid_copy ( s#ceph_object_id * , const s#ceph_object_id * ) 
ceph_oid_printf __attribute__ ( ( format ( printf , 2 , 3 ) ) ) void ceph_oid_printf ( s#ceph_object_id * , const char * , ... ) 
ceph_oid_aprintf __attribute__ ( ( format ( printf , 3 , 4 ) ) ) int ceph_oid_aprintf ( s#ceph_object_id * , t#gfp_t , const char * , ... ) 
ceph_oid_destroy void ceph_oid_destroy ( s#ceph_object_id * ) 
ceph_calc_file_object_mapping void ceph_calc_file_object_mapping ( s#ceph_file_layout * , t#u64 , t#u64 , t#u64 * , t#u64 * , t#u32 * ) 
ceph_object_locator_to_pg int ceph_object_locator_to_pg ( s#ceph_osdmap * , const s#ceph_object_id * , const s#ceph_object_locator * , s#ceph_pg * ) 
ceph_pg_to_acting_primary int ceph_pg_to_acting_primary ( s#ceph_osdmap * , const s#ceph_pg * ) 

/* net/ceph/pagelist.o */
ceph_pagelist_alloc s#ceph_pagelist * ceph_pagelist_alloc ( t#gfp_t ) 
ceph_pagelist_release extern void ceph_pagelist_release ( s#ceph_pagelist * ) 
ceph_pagelist_append extern int ceph_pagelist_append ( s#ceph_pagelist * , const void * , t#size_t ) 
ceph_pagelist_reserve extern int ceph_pagelist_reserve ( s#ceph_pagelist * , t#size_t ) 
ceph_pagelist_free_reserve extern int ceph_pagelist_free_reserve ( s#ceph_pagelist * ) 
s#ceph_pagelist_cursor struct ceph_pagelist_cursor { s#ceph_pagelist * pl ; s#list_head * page_lru ; t#size_t room ; } 
ceph_pagelist_set_cursor extern void ceph_pagelist_set_cursor ( s#ceph_pagelist * , s#ceph_pagelist_cursor * ) 
ceph_pagelist_truncate extern int ceph_pagelist_truncate ( s#ceph_pagelist * , s#ceph_pagelist_cursor * ) 

/* net/ceph/pagevec.o */
s##posix_acl
s##vfsmount
s##sock
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##proc_ns_operations
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##net_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##sec_path
s##kmem_cache
s##xt_table
s##inet_hashinfo
s##fib_notifier_ops
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##neighbour
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##nf_hook_entry
s##ebt_table
s##workqueue_struct
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##bpf_prog_array
s##cgroup_taskset
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##blk_mq_ctx
s##blk_mq_hw_ctx
s##blk_mq_alloc_data
s##blk_mq_debugfs_attr
s##blk_queue_stats
s##rq_wb
s##blk_mq_ops
s##blk_stat_callback
s##blk_trace
s##blk_flush_queue
s##bsg_job
s##throtl_data
s##blk_mq_tag_set
s##hd_geometry
s##pr_ops
s##timer_rand_state
s##disk_events
s##badblocks
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##key_user
s##key_type
s##assoc_array_ptr
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##kstatfs
s##iomap
s##xattr_handler
s##fscrypt_operations
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
ceph_get_direct_page_vector extern s#page * * ceph_get_direct_page_vector ( const void * , int , t#bool ) 
ceph_put_page_vector extern void ceph_put_page_vector ( s#page * * , int , t#bool ) 
ceph_release_page_vector extern void ceph_release_page_vector ( s#page * * , int ) 
ceph_alloc_page_vector extern s#page * * ceph_alloc_page_vector ( int , t#gfp_t ) 
ceph_copy_user_to_page_vector extern int ceph_copy_user_to_page_vector ( s#page * * , const void * , t#loff_t , t#size_t ) 
ceph_copy_to_page_vector extern void ceph_copy_to_page_vector ( s#page * * , const void * , t#loff_t , t#size_t ) 
ceph_copy_from_page_vector extern void ceph_copy_from_page_vector ( s#page * * , void * , t#loff_t , t#size_t ) 
ceph_zero_page_vector_range extern void ceph_zero_page_vector_range ( int , int , s#page * * ) 

/* net/ceph/snapshot.o */
ceph_create_snap_context extern s#ceph_snap_context * ceph_create_snap_context ( t#u32 , t#gfp_t ) 
ceph_get_snap_context extern s#ceph_snap_context * ceph_get_snap_context ( s#ceph_snap_context * ) 
ceph_put_snap_context extern void ceph_put_snap_context ( s#ceph_snap_context * ) 

/* net/ceph/string_table.o */
ceph_find_or_create_string extern s#ceph_string * ceph_find_or_create_string ( const char * , t#size_t ) 
ceph_release_string extern void ceph_release_string ( s#kref * ) 

/* net/compat.o */
s#sock_fprog struct sock_fprog { unsigned short len ; s#sock_filter * filter ; } 
get_compat_bpf_fprog s#sock_fprog * get_compat_bpf_fprog ( char * ) 
s##posix_acl
s##vfsmount
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##kmem_cache
s##fs_pin
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##sec_path
s##workqueue_struct
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##xfrm_state
s##lwtunnel_state
s##uncached_list
s##rt6_info
s##dn_route
s##prefix_info
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##phy_device
s##sfp_bus
s##prot_inuse
s##ipv4_devconf
s##xt_table
s##inet_hashinfo
s##rt6_statistics
s##fib6_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##mempolicy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##ring_buffer
s##static_key_mod
s##trace_array
s##tracer
s##trace_buffer
s##ring_buffer_iter
s##event_filter
s##ftrace_hash
s##numa_group
s##task_delay_info
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sock_reuseport
compat_sock_get_timestamp int compat_sock_get_timestamp ( s#sock * , s#timeval * ) 
compat_sock_get_timestampns int compat_sock_get_timestampns ( s#sock * , s#timespec * ) 
compat_mc_setsockopt int compat_mc_setsockopt ( s#sock * , int , int , char * , unsigned int , int ( * ) ( s#sock * , int , int , char * , unsigned int ) ) 
compat_mc_getsockopt int compat_mc_getsockopt ( s#sock * , int , int , char * , int * , int ( * ) ( s#sock * , int , int , char * , int * ) ) 

/* net/core/datagram.o */
s##posix_acl
s##vfsmount
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##sec_path
s##workqueue_struct
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##kmem_cache
s##xfrm_state
s##lwtunnel_state
s##uncached_list
s##rt6_info
s##dn_route
s##prefix_info
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##phy_device
s##sfp_bus
s##prot_inuse
s##ipv4_devconf
s##xt_table
s##inet_hashinfo
s##rt6_statistics
s##fib6_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##mempolicy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sock_reuseport
__skb_wait_for_more_packets int __skb_wait_for_more_packets ( s#sock * , int * , long * , const s#sk_buff * ) 
__skb_try_recv_datagram s#sk_buff * __skb_try_recv_datagram ( s#sock * , unsigned , void ( * ) ( s#sock * , s#sk_buff * ) , int * , int * , int * , s#sk_buff * * ) 
__skb_recv_datagram s#sk_buff * __skb_recv_datagram ( s#sock * , unsigned , void ( * ) ( s#sock * , s#sk_buff * ) , int * , int * , int * ) 
skb_recv_datagram s#sk_buff * skb_recv_datagram ( s#sock * , unsigned , int , int * ) 
skb_free_datagram void skb_free_datagram ( s#sock * , s#sk_buff * ) 
__skb_free_datagram_locked void __skb_free_datagram_locked ( s#sock * , s#sk_buff * , int ) 
__sk_queue_drop_skb int __sk_queue_drop_skb ( s#sock * , s#sk_buff_head * , s#sk_buff * , unsigned int , void ( * ) ( s#sock * , s#sk_buff * ) ) 
skb_kill_datagram int skb_kill_datagram ( s#sock * , s#sk_buff * , unsigned int ) 
s##crypto_type
s##skcipher_givcrypt_request
skb_copy_and_hash_datagram_iter int skb_copy_and_hash_datagram_iter ( const s#sk_buff * , int , s#iov_iter * , int , s#ahash_request * ) 
skb_copy_datagram_iter int skb_copy_datagram_iter ( const s#sk_buff * , int , s#iov_iter * , int ) 
skb_copy_datagram_from_iter int skb_copy_datagram_from_iter ( s#sk_buff * , int , s#iov_iter * , int ) 
zerocopy_sg_from_iter int zerocopy_sg_from_iter ( s#sk_buff * , s#iov_iter * ) 
__skb_checksum_complete_head t#__sum16 __skb_checksum_complete_head ( s#sk_buff * , int ) 
__skb_checksum_complete t#__sum16 __skb_checksum_complete ( s#sk_buff * ) 
skb_copy_and_csum_datagram_msg int skb_copy_and_csum_datagram_msg ( s#sk_buff * , int , s#msghdr * ) 
datagram_poll unsigned int datagram_poll ( s#file * , s#socket * , s#poll_table_struct * ) 

/* net/core/dev.o */
dev_base_lock extern t#rwlock_t dev_base_lock 
s##proc_ns_operations
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##kmem_cache
s##fs_pin
s##nlm_lockowner
s##nfs4_lock_state
s##inet_hashinfo
s##raw_hashinfo
s##btf
s##bpf_verifier_env
s##workqueue_struct
s##uncached_list
s##proc_dir_entry
s##dn_route
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_cgroup_storage_map
s##cgroup_taskset
s##eventfd_ctx
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##device_private
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##uprobe
s##gs_cb
s##key_user
s##key_type
s##assoc_array_ptr
s##uevent_sock
s##prot_inuse
s##xt_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##netns_ipvs
s##mpls_route
s##xdp_umem
s##switchdev_ops
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##ip_mc_list
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s#tcf_walker struct tcf_walker { int stop ; int skip ; int count ; unsigned long cookie ; int ( * fn ) ( s#tcf_proto * , void * , s#tcf_walker * ) ; } 
s#qdisc_walker struct qdisc_walker { int stop ; int skip ; int count ; int ( * fn ) ( s#Qdisc * , unsigned long , s#qdisc_walker * ) ; } 
s##net_rate_estimator
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
s#sd_flow_limit struct sd_flow_limit { t#u64 count ; unsigned int num_buckets ; unsigned int history_head ; t#u16 history [ ( 1 << 7 ) ] ; t#u8 buckets [ ] ; } 
s#softnet_data struct softnet_data { s#list_head poll_list ; s#sk_buff_head process_queue ; unsigned int processed ; unsigned int time_squeeze ; unsigned int received_rps ; s#softnet_data * rps_ipi_list ; s#sd_flow_limit * flow_limit ; s#Qdisc * output_queue ; s#Qdisc * * output_queue_tailp ; s#sk_buff * completion_queue ; s#sk_buff_head xfrm_backlog ; unsigned int input_queue_head __attribute__ ( ( __aligned__ ( 256 ) ) ) ; t#call_single_data_t csd __attribute__ ( ( __aligned__ ( 256 ) ) ) ; s#softnet_data * rps_ipi_next ; unsigned int cpu ; unsigned int input_queue_tail ; unsigned int dropped ; s#sk_buff_head input_pkt_queue ; s#napi_struct backlog ; } 
softnet_data extern __attribute__ ( ( section ( ".data..percpu" "..shared_aligned" ) ) ) __typeof__ ( s#softnet_data ) softnet_data 
dev_add_pack void dev_add_pack ( s#packet_type * ) 
__dev_remove_pack void __dev_remove_pack ( s#packet_type * ) 
dev_remove_pack void dev_remove_pack ( s#packet_type * ) 
s#offload_callbacks struct offload_callbacks { s#sk_buff * ( * gso_segment ) ( s#sk_buff * , t#netdev_features_t ) ; s#sk_buff * ( * gro_receive ) ( s#list_head * , s#sk_buff * ) ; int ( * gro_complete ) ( s#sk_buff * , int ) ; } 
s#packet_offload struct packet_offload { t#__be16 type ; t#u16 priority ; s#offload_callbacks callbacks ; s#list_head list ; } 
dev_add_offload void dev_add_offload ( s#packet_offload * ) 
dev_remove_offload void dev_remove_offload ( s#packet_offload * ) 
netdev_boot_setup_check int netdev_boot_setup_check ( s#net_device * ) 
dev_get_iflink int dev_get_iflink ( const s#net_device * ) 
dev_fill_metadata_dst int dev_fill_metadata_dst ( s#net_device * , s#sk_buff * ) 
__dev_get_by_name s#net_device * __dev_get_by_name ( s#net * , const char * ) 
dev_get_by_name_rcu s#net_device * dev_get_by_name_rcu ( s#net * , const char * ) 
dev_get_by_name s#net_device * dev_get_by_name ( s#net * , const char * ) 
__dev_get_by_index s#net_device * __dev_get_by_index ( s#net * , int ) 
dev_get_by_index_rcu s#net_device * dev_get_by_index_rcu ( s#net * , int ) 
dev_get_by_index s#net_device * dev_get_by_index ( s#net * , int ) 
dev_get_by_napi_id s#net_device * dev_get_by_napi_id ( unsigned int ) 
dev_getbyhwaddr_rcu s#net_device * dev_getbyhwaddr_rcu ( s#net * , unsigned short , const char * ) 
__dev_getfirstbyhwtype s#net_device * __dev_getfirstbyhwtype ( s#net * , unsigned short ) 
dev_getfirstbyhwtype s#net_device * dev_getfirstbyhwtype ( s#net * , unsigned short ) 
__dev_get_by_flags s#net_device * __dev_get_by_flags ( s#net * , unsigned short , unsigned short ) 
dev_valid_name t#bool dev_valid_name ( const char * ) 
dev_alloc_name int dev_alloc_name ( s#net_device * , const char * ) 
dev_get_valid_name int dev_get_valid_name ( s#net * , s#net_device * , const char * ) 
dev_set_alias int dev_set_alias ( s#net_device * , const char * , t#size_t ) 
netdev_features_change void netdev_features_change ( s#net_device * ) 
netdev_state_change void netdev_state_change ( s#net_device * ) 
netdev_notify_peers void netdev_notify_peers ( s#net_device * ) 
dev_open int dev_open ( s#net_device * ) 
dev_close_many int dev_close_many ( s#list_head * , t#bool ) 
dev_close int dev_close ( s#net_device * ) 
dev_disable_lro void dev_disable_lro ( s#net_device * ) 
register_netdevice_notifier int register_netdevice_notifier ( s#notifier_block * ) 
unregister_netdevice_notifier int unregister_netdevice_notifier ( s#notifier_block * ) 
call_netdevice_notifiers int call_netdevice_notifiers ( unsigned long , s#net_device * ) 
net_inc_ingress_queue void net_inc_ingress_queue ( void ) 
net_dec_ingress_queue void net_dec_ingress_queue ( void ) 
net_inc_egress_queue void net_inc_egress_queue ( void ) 
net_dec_egress_queue void net_dec_egress_queue ( void ) 
net_enable_timestamp void net_enable_timestamp ( void ) 
net_disable_timestamp void net_disable_timestamp ( void ) 
is_skb_forwardable t#bool is_skb_forwardable ( const s#net_device * , const s#sk_buff * ) 
__dev_forward_skb int __dev_forward_skb ( s#net_device * , s#sk_buff * ) 
dev_forward_skb int dev_forward_skb ( s#net_device * , s#sk_buff * ) 
dev_queue_xmit_nit void dev_queue_xmit_nit ( s#sk_buff * , s#net_device * ) 
netdev_txq_to_tc int netdev_txq_to_tc ( s#net_device * , unsigned int ) 
xps_needed s#static_key xps_needed 
xps_rxqs_needed s#static_key xps_rxqs_needed 
__netif_set_xps_queue int __netif_set_xps_queue ( s#net_device * , const unsigned long * , t#u16 , t#bool ) 
netif_set_xps_queue int netif_set_xps_queue ( s#net_device * , const s#cpumask * , t#u16 ) 
netdev_reset_tc void netdev_reset_tc ( s#net_device * ) 
netdev_set_tc_queue int netdev_set_tc_queue ( s#net_device * , t#u8 , t#u16 , t#u16 ) 
netdev_set_num_tc int netdev_set_num_tc ( s#net_device * , t#u8 ) 
netdev_unbind_sb_channel void netdev_unbind_sb_channel ( s#net_device * , s#net_device * ) 
netdev_bind_sb_channel_queue int netdev_bind_sb_channel_queue ( s#net_device * , s#net_device * , t#u8 , t#u16 , t#u16 ) 
netdev_set_sb_channel int netdev_set_sb_channel ( s#net_device * , t#u16 ) 
netif_set_real_num_tx_queues int netif_set_real_num_tx_queues ( s#net_device * , unsigned int ) 
netif_set_real_num_rx_queues int netif_set_real_num_rx_queues ( s#net_device * , unsigned int ) 
netif_get_num_default_rss_queues int netif_get_num_default_rss_queues ( void ) 
__netif_schedule void __netif_schedule ( s#Qdisc * ) 
netif_schedule_queue void netif_schedule_queue ( s#netdev_queue * ) 
netif_tx_wake_queue void netif_tx_wake_queue ( s#netdev_queue * ) 
e#skb_free_reason enum skb_free_reason { SKB_REASON_CONSUMED , SKB_REASON_DROPPED , } 
__dev_kfree_skb_irq void __dev_kfree_skb_irq ( s#sk_buff * , e#skb_free_reason ) 
__dev_kfree_skb_any void __dev_kfree_skb_any ( s#sk_buff * , e#skb_free_reason ) 
netif_device_detach void netif_device_detach ( s#net_device * ) 
netif_device_attach void netif_device_attach ( s#net_device * ) 
skb_checksum_help int skb_checksum_help ( s#sk_buff * ) 
skb_mac_gso_segment s#sk_buff * skb_mac_gso_segment ( s#sk_buff * , t#netdev_features_t ) 
__skb_gso_segment s#sk_buff * __skb_gso_segment ( s#sk_buff * , t#netdev_features_t , t#bool ) 
netdev_rx_csum_fault void netdev_rx_csum_fault ( s#net_device * ) 
passthru_features_check t#netdev_features_t passthru_features_check ( s#sk_buff * , s#net_device * , t#netdev_features_t ) 
netif_skb_features t#netdev_features_t netif_skb_features ( s#sk_buff * ) 
skb_csum_hwoffload_help int skb_csum_hwoffload_help ( s#sk_buff * , const t#netdev_features_t ) 
validate_xmit_skb_list s#sk_buff * validate_xmit_skb_list ( s#sk_buff * , s#net_device * , t#bool * ) 
xmit_recursion extern __attribute__ ( ( section ( ".data..percpu" "" ) ) ) __typeof__ ( int ) xmit_recursion 
dev_loopback_xmit int dev_loopback_xmit ( s#net * , s#sock * , s#sk_buff * ) 
dev_pick_tx_zero t#u16 dev_pick_tx_zero ( s#net_device * , s#sk_buff * , s#net_device * , t#select_queue_fallback_t ) 
dev_pick_tx_cpu_id t#u16 dev_pick_tx_cpu_id ( s#net_device * , s#sk_buff * , s#net_device * , t#select_queue_fallback_t ) 
dev_queue_xmit int dev_queue_xmit ( s#sk_buff * ) 
dev_queue_xmit_accel int dev_queue_xmit_accel ( s#sk_buff * , s#net_device * ) 
dev_direct_xmit int dev_direct_xmit ( s#sk_buff * , t#u16 ) 
netdev_max_backlog extern int netdev_max_backlog 
s#rps_sock_flow_table struct rps_sock_flow_table { t#u32 mask ; t#u32 ents [ 0 ] __attribute__ ( ( __aligned__ ( 256 ) ) ) ; } 
rps_sock_flow_table extern s#rps_sock_flow_table * rps_sock_flow_table 
rps_cpu_mask extern t#u32 rps_cpu_mask 
rps_needed extern s#static_key rps_needed 
rfs_needed extern s#static_key rfs_needed 
rps_may_expire_flow t#bool rps_may_expire_flow ( s#net_device * , t#u16 , t#u32 , t#u16 ) 
generic_xdp_tx void generic_xdp_tx ( s#sk_buff * , s#bpf_prog * ) 
do_xdp_generic int do_xdp_generic ( s#bpf_prog * , s#sk_buff * ) 
netif_rx int netif_rx ( s#sk_buff * ) 
netif_rx_ni int netif_rx_ni ( s#sk_buff * ) 
netdev_is_rx_handler_busy t#bool netdev_is_rx_handler_busy ( s#net_device * ) 
netdev_rx_handler_register int netdev_rx_handler_register ( s#net_device * , t#rx_handler_func_t * , void * ) 
netdev_rx_handler_unregister void netdev_rx_handler_unregister ( s#net_device * ) 
netif_receive_skb_core int netif_receive_skb_core ( s#sk_buff * ) 
netif_receive_skb int netif_receive_skb ( s#sk_buff * ) 
netif_receive_skb_list void netif_receive_skb_list ( s#list_head * ) 
napi_gro_flush void napi_gro_flush ( s#napi_struct * , t#bool ) 
gro_find_receive_by_type s#packet_offload * gro_find_receive_by_type ( t#__be16 ) 
gro_find_complete_by_type s#packet_offload * gro_find_complete_by_type ( t#__be16 ) 
e#gro_result enum gro_result { GRO_MERGED , GRO_MERGED_FREE , GRO_HELD , GRO_NORMAL , GRO_DROP , GRO_CONSUMED , } 
t#gro_result_t typedef e#gro_result gro_result_t 
napi_gro_receive t#gro_result_t napi_gro_receive ( s#napi_struct * , s#sk_buff * ) 
napi_get_frags s#sk_buff * napi_get_frags ( s#napi_struct * ) 
napi_gro_frags t#gro_result_t napi_gro_frags ( s#napi_struct * ) 
__skb_gro_checksum_complete t#__sum16 __skb_gro_checksum_complete ( s#sk_buff * ) 
__napi_schedule void __napi_schedule ( s#napi_struct * ) 
napi_schedule_prep t#bool napi_schedule_prep ( s#napi_struct * ) 
__napi_schedule_irqoff void __napi_schedule_irqoff ( s#napi_struct * ) 
napi_complete_done t#bool napi_complete_done ( s#napi_struct * , int ) 
napi_busy_loop void napi_busy_loop ( unsigned int , t#bool ( * ) ( void * , unsigned long ) , void * ) 
napi_hash_del t#bool napi_hash_del ( s#napi_struct * ) 
netif_napi_add void netif_napi_add ( s#net_device * , s#napi_struct * , int ( * ) ( s#napi_struct * , int ) , int ) 
napi_disable void napi_disable ( s#napi_struct * ) 
netif_napi_del void netif_napi_del ( s#napi_struct * ) 
netdev_has_upper_dev t#bool netdev_has_upper_dev ( s#net_device * , s#net_device * ) 
netdev_has_upper_dev_all_rcu t#bool netdev_has_upper_dev_all_rcu ( s#net_device * , s#net_device * ) 
netdev_has_any_upper_dev t#bool netdev_has_any_upper_dev ( s#net_device * ) 
netdev_master_upper_dev_get s#net_device * netdev_master_upper_dev_get ( s#net_device * ) 
netdev_adjacent_get_private void * netdev_adjacent_get_private ( s#list_head * ) 
netdev_upper_get_next_dev_rcu s#net_device * netdev_upper_get_next_dev_rcu ( s#net_device * , s#list_head * * ) 
netdev_walk_all_upper_dev_rcu int netdev_walk_all_upper_dev_rcu ( s#net_device * , int ( * ) ( s#net_device * , void * ) , void * ) 
netdev_lower_get_next_private void * netdev_lower_get_next_private ( s#net_device * , s#list_head * * ) 
netdev_lower_get_next_private_rcu void * netdev_lower_get_next_private_rcu ( s#net_device * , s#list_head * * ) 
netdev_lower_get_next void * netdev_lower_get_next ( s#net_device * , s#list_head * * ) 
netdev_walk_all_lower_dev int netdev_walk_all_lower_dev ( s#net_device * , int ( * ) ( s#net_device * , void * ) , void * ) 
netdev_walk_all_lower_dev_rcu int netdev_walk_all_lower_dev_rcu ( s#net_device * , int ( * ) ( s#net_device * , void * ) , void * ) 
netdev_lower_get_first_private_rcu void * netdev_lower_get_first_private_rcu ( s#net_device * ) 
netdev_master_upper_dev_get_rcu s#net_device * netdev_master_upper_dev_get_rcu ( s#net_device * ) 
netdev_upper_dev_link int netdev_upper_dev_link ( s#net_device * , s#net_device * , s#netlink_ext_ack * ) 
netdev_master_upper_dev_link int netdev_master_upper_dev_link ( s#net_device * , s#net_device * , void * , void * , s#netlink_ext_ack * ) 
netdev_upper_dev_unlink void netdev_upper_dev_unlink ( s#net_device * , s#net_device * ) 
s#ifslave struct ifslave { t#__s32 slave_id ; char slave_name [ 16 ] ; t#__s8 link ; t#__s8 state ; t#__u32 link_failure_count ; } 
t#ifslave typedef s#ifslave ifslave 
s#ifbond struct ifbond { t#__s32 bond_mode ; t#__s32 num_slaves ; t#__s32 miimon ; } 
t#ifbond typedef s#ifbond ifbond 
s#netdev_bonding_info struct netdev_bonding_info { t#ifslave slave ; t#ifbond master ; } 
netdev_bonding_info_change void netdev_bonding_info_change ( s#net_device * , s#netdev_bonding_info * ) 
netdev_lower_dev_get_private void * netdev_lower_dev_get_private ( s#net_device * , s#net_device * ) 
dev_get_nest_level int dev_get_nest_level ( s#net_device * ) 
netdev_lower_state_changed void netdev_lower_state_changed ( s#net_device * , void * ) 
dev_set_promiscuity int dev_set_promiscuity ( s#net_device * , int ) 
dev_set_allmulti int dev_set_allmulti ( s#net_device * , int ) 
dev_get_flags unsigned int dev_get_flags ( const s#net_device * ) 
dev_change_flags int dev_change_flags ( s#net_device * , unsigned int ) 
__dev_set_mtu int __dev_set_mtu ( s#net_device * , int ) 
dev_set_mtu int dev_set_mtu ( s#net_device * , int ) 
dev_set_group void dev_set_group ( s#net_device * , int ) 
dev_set_mac_address int dev_set_mac_address ( s#net_device * , s#sockaddr * ) 
dev_change_carrier int dev_change_carrier ( s#net_device * , t#bool ) 
dev_get_phys_port_id int dev_get_phys_port_id ( s#net_device * , s#netdev_phys_item_id * ) 
dev_get_phys_port_name int dev_get_phys_port_name ( s#net_device * , char * , t#size_t ) 
dev_change_proto_down int dev_change_proto_down ( s#net_device * , t#bool ) 
netdev_update_features void netdev_update_features ( s#net_device * ) 
netdev_change_features void netdev_change_features ( s#net_device * ) 
netif_stacked_transfer_operstate void netif_stacked_transfer_operstate ( const s#net_device * , s#net_device * ) 
netif_tx_stop_all_queues void netif_tx_stop_all_queues ( s#net_device * ) 
register_netdevice int register_netdevice ( s#net_device * ) 
init_dummy_netdev int init_dummy_netdev ( s#net_device * ) 
register_netdev int register_netdev ( s#net_device * ) 
netdev_refcnt_read int netdev_refcnt_read ( const s#net_device * ) 
netdev_stats_to_stats64 void netdev_stats_to_stats64 ( s#rtnl_link_stats64 * , const s#net_device_stats * ) 
dev_get_stats s#rtnl_link_stats64 * dev_get_stats ( s#net_device * , s#rtnl_link_stats64 * ) 
netdev_set_default_ethtool_ops void netdev_set_default_ethtool_ops ( s#net_device * , const s#ethtool_ops * ) 
alloc_netdev_mqs s#net_device * alloc_netdev_mqs ( int , const char * , unsigned char , void ( * ) ( s#net_device * ) , unsigned int , unsigned int ) 
free_netdev void free_netdev ( s#net_device * ) 
synchronize_net void synchronize_net ( void ) 
unregister_netdevice_queue void unregister_netdevice_queue ( s#net_device * , s#list_head * ) 
unregister_netdevice_many void unregister_netdevice_many ( s#list_head * ) 
unregister_netdev void unregister_netdev ( s#net_device * ) 
dev_change_net_namespace int dev_change_net_namespace ( s#net_device * , s#net * , const char * ) 
netdev_increment_features t#netdev_features_t netdev_increment_features ( t#netdev_features_t , t#netdev_features_t , t#netdev_features_t ) 
netdev_printk __attribute__ ( ( format ( printf , 3 , 4 ) ) ) void netdev_printk ( const char * , const s#net_device * , const char * , ... ) 
netdev_emerg __attribute__ ( ( format ( printf , 2 , 3 ) ) ) void netdev_emerg ( const s#net_device * , const char * , ... ) 
netdev_alert __attribute__ ( ( format ( printf , 2 , 3 ) ) ) void netdev_alert ( const s#net_device * , const char * , ... ) 
netdev_crit __attribute__ ( ( format ( printf , 2 , 3 ) ) ) void netdev_crit ( const s#net_device * , const char * , ... ) 
netdev_err __attribute__ ( ( format ( printf , 2 , 3 ) ) ) void netdev_err ( const s#net_device * , const char * , ... ) 
netdev_warn __attribute__ ( ( format ( printf , 2 , 3 ) ) ) void netdev_warn ( const s#net_device * , const char * , ... ) 
netdev_notice __attribute__ ( ( format ( printf , 2 , 3 ) ) ) void netdev_notice ( const s#net_device * , const char * , ... ) 
netdev_info __attribute__ ( ( format ( printf , 2 , 3 ) ) ) void netdev_info ( const s#net_device * , const char * , ... ) 

/* net/core/dev_addr_lists.o */
__hw_addr_sync int __hw_addr_sync ( s#netdev_hw_addr_list * , s#netdev_hw_addr_list * , int ) 
__hw_addr_unsync void __hw_addr_unsync ( s#netdev_hw_addr_list * , s#netdev_hw_addr_list * , int ) 
s##sock
s##sec_path
s##neigh_parms
s##neighbour
s##module
s##udp_tunnel_info
s##bpf_prog
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##l3mdev_ops
s##ndisc_ops
s##xfrm_state
s##tls_crypto_info
s##tls_context
s##vfsmount
s##posix_acl
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##kmem_cache
s##xt_table
s##inet_hashinfo
s##fib_notifier_ops
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##nf_hook_entry
s##ebt_table
s##workqueue_struct
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##bpf_prog_array
s##cgroup_taskset
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##mini_Qdisc
s##Qdisc
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##rtnl_link_ops
s##phy_device
s##sfp_bus
__hw_addr_sync_dev int __hw_addr_sync_dev ( s#netdev_hw_addr_list * , s#net_device * , int ( * ) ( s#net_device * , const unsigned char * ) , int ( * ) ( s#net_device * , const unsigned char * ) ) 
__hw_addr_unsync_dev void __hw_addr_unsync_dev ( s#netdev_hw_addr_list * , s#net_device * , int ( * ) ( s#net_device * , const unsigned char * ) ) 
__hw_addr_init void __hw_addr_init ( s#netdev_hw_addr_list * ) 
dev_addr_flush void dev_addr_flush ( s#net_device * ) 
dev_addr_init int dev_addr_init ( s#net_device * ) 
dev_addr_add int dev_addr_add ( s#net_device * , const unsigned char * , unsigned char ) 
dev_addr_del int dev_addr_del ( s#net_device * , const unsigned char * , unsigned char ) 
dev_uc_add_excl int dev_uc_add_excl ( s#net_device * , const unsigned char * ) 
dev_uc_add int dev_uc_add ( s#net_device * , const unsigned char * ) 
dev_uc_del int dev_uc_del ( s#net_device * , const unsigned char * ) 
dev_uc_sync int dev_uc_sync ( s#net_device * , s#net_device * ) 
dev_uc_sync_multiple int dev_uc_sync_multiple ( s#net_device * , s#net_device * ) 
dev_uc_unsync void dev_uc_unsync ( s#net_device * , s#net_device * ) 
dev_uc_flush void dev_uc_flush ( s#net_device * ) 
dev_uc_init void dev_uc_init ( s#net_device * ) 
dev_mc_add_excl int dev_mc_add_excl ( s#net_device * , const unsigned char * ) 
dev_mc_add int dev_mc_add ( s#net_device * , const unsigned char * ) 
dev_mc_add_global int dev_mc_add_global ( s#net_device * , const unsigned char * ) 
dev_mc_del int dev_mc_del ( s#net_device * , const unsigned char * ) 
dev_mc_del_global int dev_mc_del_global ( s#net_device * , const unsigned char * ) 
dev_mc_sync int dev_mc_sync ( s#net_device * , s#net_device * ) 
dev_mc_sync_multiple int dev_mc_sync_multiple ( s#net_device * , s#net_device * ) 
dev_mc_unsync void dev_mc_unsync ( s#net_device * , s#net_device * ) 
dev_mc_flush void dev_mc_flush ( s#net_device * ) 
dev_mc_init void dev_mc_init ( s#net_device * ) 

/* net/core/dev_ioctl.o */
s##sock
s##sec_path
s##neigh_parms
s##neighbour
s##module
s##udp_tunnel_info
s##bpf_prog
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##l3mdev_ops
s##ndisc_ops
s##xfrm_state
s##tls_crypto_info
s##tls_context
s##vfsmount
s##posix_acl
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##kmem_cache
s##xt_table
s##inet_hashinfo
s##fib_notifier_ops
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##nf_hook_entry
s##ebt_table
s##workqueue_struct
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##bpf_prog_array
s##cgroup_taskset
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##mini_Qdisc
s##Qdisc
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##rtnl_link_ops
s##phy_device
s##sfp_bus
t#gifconf_func_t typedef int gifconf_func_t ( s#net_device * , char * , int ) 
register_gifconf int register_gifconf ( unsigned int , t#gifconf_func_t * ) 
dev_load void dev_load ( s#net * , const char * ) 

/* net/core/devlink.o */
devlink_dpipe_header_ethernet extern s#devlink_dpipe_header devlink_dpipe_header_ethernet 
devlink_dpipe_header_ipv4 extern s#devlink_dpipe_header devlink_dpipe_header_ipv4 
devlink_dpipe_header_ipv6 extern s#devlink_dpipe_header devlink_dpipe_header_ipv6 
s##static_key_mod
__tracepoint_devlink_hwmsg extern s#tracepoint __tracepoint_devlink_hwmsg 
s##proc_ns_operations
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##kmem_cache
s##fs_pin
s##nlm_lockowner
s##nfs4_lock_state
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##bpf_prog_aux
s##xfrm_policy
s##workqueue_struct
s##xfrm_state
s##lwtunnel_state
s##uncached_list
s##rt6_info
s##dn_route
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##trace_array
s##tracer
s##trace_buffer
s##ring_buffer_iter
s##event_filter
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##ring_buffer
s##ftrace_hash
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##xol_area
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##numa_group
s##task_delay_info
s##uprobe
s##gs_cb
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_dir_entry
s##uevent_sock
s##prot_inuse
s##ipv4_devconf
s##xt_table
s##rt6_statistics
s##fib6_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##nf_hook_entry
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##udp_tunnel_info
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##prefix_info
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
s##sec_path
e#devlink_dpipe_match_type enum devlink_dpipe_match_type { DEVLINK_DPIPE_MATCH_TYPE_FIELD_EXACT , } 
s#devlink_dpipe_match struct devlink_dpipe_match { e#devlink_dpipe_match_type type ; unsigned int header_index ; s#devlink_dpipe_header * header ; unsigned int field_id ; } 
devlink_dpipe_match_put int devlink_dpipe_match_put ( s#sk_buff * , s#devlink_dpipe_match * ) 
e#devlink_dpipe_action_type enum devlink_dpipe_action_type { DEVLINK_DPIPE_ACTION_TYPE_FIELD_MODIFY , } 
s#devlink_dpipe_action struct devlink_dpipe_action { e#devlink_dpipe_action_type type ; unsigned int header_index ; s#devlink_dpipe_header * header ; unsigned int field_id ; } 
devlink_dpipe_action_put int devlink_dpipe_action_put ( s#sk_buff * , s#devlink_dpipe_action * ) 
s#genlmsghdr struct genlmsghdr { t#__u8 cmd ; t#__u8 version ; t#__u16 reserved ; } 
s#genl_info struct genl_info { t#u32 snd_seq ; t#u32 snd_portid ; s#nlmsghdr * nlhdr ; s#genlmsghdr * genlhdr ; void * userhdr ; s#nlattr * * attrs ; t#possible_net_t _net ; void * user_ptr [ 2 ] ; s#netlink_ext_ack * extack ; } 
E#__DEVLINK_CMD_MAX 47 
e#devlink_command enum devlink_command { DEVLINK_CMD_UNSPEC , DEVLINK_CMD_GET , DEVLINK_CMD_SET , DEVLINK_CMD_NEW , DEVLINK_CMD_DEL , DEVLINK_CMD_PORT_GET , DEVLINK_CMD_PORT_SET , DEVLINK_CMD_PORT_NEW , DEVLINK_CMD_PORT_DEL , DEVLINK_CMD_PORT_SPLIT , DEVLINK_CMD_PORT_UNSPLIT , DEVLINK_CMD_SB_GET , DEVLINK_CMD_SB_SET , DEVLINK_CMD_SB_NEW , DEVLINK_CMD_SB_DEL , DEVLINK_CMD_SB_POOL_GET , DEVLINK_CMD_SB_POOL_SET , DEVLINK_CMD_SB_POOL_NEW , DEVLINK_CMD_SB_POOL_DEL , DEVLINK_CMD_SB_PORT_POOL_GET , DEVLINK_CMD_SB_PORT_POOL_SET , DEVLINK_CMD_SB_PORT_POOL_NEW , DEVLINK_CMD_SB_PORT_POOL_DEL , DEVLINK_CMD_SB_TC_POOL_BIND_GET , DEVLINK_CMD_SB_TC_POOL_BIND_SET , DEVLINK_CMD_SB_TC_POOL_BIND_NEW , DEVLINK_CMD_SB_TC_POOL_BIND_DEL , DEVLINK_CMD_SB_OCC_SNAPSHOT , DEVLINK_CMD_SB_OCC_MAX_CLEAR , DEVLINK_CMD_ESWITCH_GET , DEVLINK_CMD_ESWITCH_SET , DEVLINK_CMD_DPIPE_TABLE_GET , DEVLINK_CMD_DPIPE_ENTRIES_GET , DEVLINK_CMD_DPIPE_HEADERS_GET , DEVLINK_CMD_DPIPE_TABLE_COUNTERS_SET , DEVLINK_CMD_RESOURCE_SET , DEVLINK_CMD_RESOURCE_DUMP , DEVLINK_CMD_RELOAD , DEVLINK_CMD_PARAM_GET , DEVLINK_CMD_PARAM_SET , DEVLINK_CMD_PARAM_NEW , DEVLINK_CMD_PARAM_DEL , DEVLINK_CMD_REGION_GET , DEVLINK_CMD_REGION_SET , DEVLINK_CMD_REGION_NEW , DEVLINK_CMD_REGION_DEL , DEVLINK_CMD_REGION_READ , __DEVLINK_CMD_MAX , DEVLINK_CMD_MAX = E#__DEVLINK_CMD_MAX - 1 } 
s#devlink_dpipe_dump_ctx struct devlink_dpipe_dump_ctx { s#genl_info * info ; e#devlink_command cmd ; s#sk_buff * skb ; s#nlattr * nest ; void * hdr ; } 
devlink_dpipe_entry_ctx_prepare int devlink_dpipe_entry_ctx_prepare ( s#devlink_dpipe_dump_ctx * ) 
s#devlink_dpipe_value struct devlink_dpipe_value { union { s#devlink_dpipe_action * action ; s#devlink_dpipe_match * match ; } ; unsigned int mapping_value ; t#bool mapping_valid ; unsigned int value_size ; void * value ; void * mask ; } 
s#devlink_dpipe_entry struct devlink_dpipe_entry { t#u64 index ; s#devlink_dpipe_value * match_values ; unsigned int match_values_count ; s#devlink_dpipe_value * action_values ; unsigned int action_values_count ; t#u64 counter ; t#bool counter_valid ; } 
devlink_dpipe_entry_ctx_append int devlink_dpipe_entry_ctx_append ( s#devlink_dpipe_dump_ctx * , s#devlink_dpipe_entry * ) 
devlink_dpipe_entry_ctx_close int devlink_dpipe_entry_ctx_close ( s#devlink_dpipe_dump_ctx * ) 
devlink_dpipe_entry_clear void devlink_dpipe_entry_clear ( s#devlink_dpipe_entry * ) 
devlink_alloc s#devlink * devlink_alloc ( const s#devlink_ops * , t#size_t ) 
devlink_register int devlink_register ( s#devlink * , s#device * ) 
devlink_unregister void devlink_unregister ( s#devlink * ) 
devlink_free void devlink_free ( s#devlink * ) 
devlink_port_register int devlink_port_register ( s#devlink * , s#devlink_port * , unsigned int ) 
devlink_port_unregister void devlink_port_unregister ( s#devlink_port * ) 
devlink_port_type_eth_set void devlink_port_type_eth_set ( s#devlink_port * , s#net_device * ) 
s##ib_uverbs_file
s##ib_umem_odp
s##uverbs_api_object
s##ib_pkey_cache
s##ib_gid_table
s##iw_cm_verbs
s##ib_mad_hdr
s##uverbs_attr_bundle
s##uverbs_object_tree_def
devlink_port_type_ib_set void devlink_port_type_ib_set ( s#devlink_port * , s#ib_device * ) 
devlink_port_type_clear void devlink_port_type_clear ( s#devlink_port * ) 
devlink_port_attrs_set void devlink_port_attrs_set ( s#devlink_port * , e#devlink_port_flavour , t#u32 , t#bool , t#u32 ) 
devlink_port_get_phys_port_name int devlink_port_get_phys_port_name ( s#devlink_port * , char * , t#size_t ) 
devlink_sb_register int devlink_sb_register ( s#devlink * , unsigned int , t#u32 , t#u16 , t#u16 , t#u16 , t#u16 ) 
devlink_sb_unregister void devlink_sb_unregister ( s#devlink * , unsigned int ) 
devlink_dpipe_headers_register int devlink_dpipe_headers_register ( s#devlink * , s#devlink_dpipe_headers * ) 
devlink_dpipe_headers_unregister void devlink_dpipe_headers_unregister ( s#devlink * ) 
devlink_dpipe_table_counter_enabled t#bool devlink_dpipe_table_counter_enabled ( s#devlink * , const char * ) 
s#devlink_dpipe_table_ops struct devlink_dpipe_table_ops { int ( * actions_dump ) ( void * , s#sk_buff * ) ; int ( * matches_dump ) ( void * , s#sk_buff * ) ; int ( * entries_dump ) ( void * , t#bool , s#devlink_dpipe_dump_ctx * ) ; int ( * counters_set_update ) ( void * , t#bool ) ; t#u64 ( * size_get ) ( void * ) ; } 
devlink_dpipe_table_register int devlink_dpipe_table_register ( s#devlink * , const char * , s#devlink_dpipe_table_ops * , void * , t#bool ) 
devlink_dpipe_table_unregister void devlink_dpipe_table_unregister ( s#devlink * , const char * ) 
e#devlink_resource_unit enum devlink_resource_unit { DEVLINK_RESOURCE_UNIT_ENTRY , } 
s#devlink_resource_size_params struct devlink_resource_size_params { t#u64 size_min ; t#u64 size_max ; t#u64 size_granularity ; e#devlink_resource_unit unit ; } 
devlink_resource_register int devlink_resource_register ( s#devlink * , const char * , t#u64 , t#u64 , t#u64 , const s#devlink_resource_size_params * ) 
t#devlink_resource_occ_get_t typedef t#u64 devlink_resource_occ_get_t ( void * ) 
s#devlink_resource struct devlink_resource { const char * name ; t#u64 id ; t#u64 size ; t#u64 size_new ; t#bool size_valid ; s#devlink_resource * parent ; s#devlink_resource_size_params size_params ; s#list_head list ; s#list_head resource_list ; t#devlink_resource_occ_get_t * occ_get ; void * occ_get_priv ; } 
devlink_resources_unregister void devlink_resources_unregister ( s#devlink * , s#devlink_resource * ) 
devlink_resource_size_get int devlink_resource_size_get ( s#devlink * , t#u64 , t#u64 * ) 
devlink_dpipe_table_resource_set int devlink_dpipe_table_resource_set ( s#devlink * , const char * , t#u64 , t#u64 ) 
devlink_resource_occ_get_register void devlink_resource_occ_get_register ( s#devlink * , t#u64 , t#devlink_resource_occ_get_t * , void * ) 
devlink_resource_occ_get_unregister void devlink_resource_occ_get_unregister ( s#devlink * , t#u64 ) 
e#devlink_param_type enum devlink_param_type { DEVLINK_PARAM_TYPE_U8 , DEVLINK_PARAM_TYPE_U16 , DEVLINK_PARAM_TYPE_U32 , DEVLINK_PARAM_TYPE_STRING , DEVLINK_PARAM_TYPE_BOOL , } 
u#devlink_param_value union devlink_param_value { t#u8 vu8 ; t#u16 vu16 ; t#u32 vu32 ; char vstr [ 32 ] ; t#bool vbool ; } 
E#__DEVLINK_PARAM_CMODE_MAX 3 
e#devlink_param_cmode enum devlink_param_cmode { DEVLINK_PARAM_CMODE_RUNTIME , DEVLINK_PARAM_CMODE_DRIVERINIT , DEVLINK_PARAM_CMODE_PERMANENT , __DEVLINK_PARAM_CMODE_MAX , DEVLINK_PARAM_CMODE_MAX = E#__DEVLINK_PARAM_CMODE_MAX - 1 } 
s#devlink_param_gset_ctx struct devlink_param_gset_ctx { u#devlink_param_value val ; e#devlink_param_cmode cmode ; } 
s#devlink_param struct devlink_param { t#u32 id ; const char * name ; t#bool generic ; e#devlink_param_type type ; unsigned long supported_cmodes ; int ( * get ) ( s#devlink * , t#u32 , s#devlink_param_gset_ctx * ) ; int ( * set ) ( s#devlink * , t#u32 , s#devlink_param_gset_ctx * ) ; int ( * validate ) ( s#devlink * , t#u32 , u#devlink_param_value , s#netlink_ext_ack * ) ; } 
devlink_params_register int devlink_params_register ( s#devlink * , const s#devlink_param * , t#size_t ) 
devlink_params_unregister void devlink_params_unregister ( s#devlink * , const s#devlink_param * , t#size_t ) 
devlink_param_driverinit_value_get int devlink_param_driverinit_value_get ( s#devlink * , t#u32 , u#devlink_param_value * ) 
devlink_param_driverinit_value_set int devlink_param_driverinit_value_set ( s#devlink * , t#u32 , u#devlink_param_value ) 
devlink_param_value_changed void devlink_param_value_changed ( s#devlink * , t#u32 ) 
devlink_param_value_str_fill void devlink_param_value_str_fill ( u#devlink_param_value * , const char * ) 
s##devlink_region
devlink_region_create s#devlink_region * devlink_region_create ( s#devlink * , const char * , t#u32 , t#u64 ) 
devlink_region_destroy void devlink_region_destroy ( s#devlink_region * ) 
devlink_region_shapshot_id_get t#u32 devlink_region_shapshot_id_get ( s#devlink * ) 
t#devlink_snapshot_data_dest_t typedef void devlink_snapshot_data_dest_t ( const void * ) 
devlink_region_snapshot_create int devlink_region_snapshot_create ( s#devlink_region * , t#u64 , t#u8 * , t#u32 , t#devlink_snapshot_data_dest_t * ) 

/* net/core/dst.o */
s##proc_ns_operations
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##workqueue_struct
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##kmem_cache
s##xfrm_state
s##uncached_list
s##proc_dir_entry
s##dn_route
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##phy_device
s##sfp_bus
s##sec_path
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##key_user
s##key_type
s##assoc_array_ptr
s##uevent_sock
s##prot_inuse
s##ipv4_devconf
s##xt_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##netns_ipvs
s##mpls_route
dst_discard_out int dst_discard_out ( s#net * , s#sock * , s#sk_buff * ) 
dst_init void dst_init ( s#dst_entry * , s#dst_ops * , s#net_device * , int , int , unsigned short ) 
dst_alloc void * dst_alloc ( s#dst_ops * , s#net_device * , int , int , unsigned short ) 
dst_destroy s#dst_entry * dst_destroy ( s#dst_entry * ) 
dst_dev_put void dst_dev_put ( s#dst_entry * ) 
dst_release void dst_release ( s#dst_entry * ) 
dst_release_immediate void dst_release_immediate ( s#dst_entry * ) 
dst_cow_metrics_generic t#u32 * dst_cow_metrics_generic ( s#dst_entry * , unsigned long ) 
__dst_destroy_metrics_generic void __dst_destroy_metrics_generic ( s#dst_entry * , unsigned long ) 
e#metadata_type enum metadata_type { METADATA_IP_TUNNEL , METADATA_HW_PORT_MUX , } 
s#ip_tunnel_key struct ip_tunnel_key { t#__be64 tun_id ; union { struct { t#__be32 src ; t#__be32 dst ; } ipv4 ; struct { s#in6_addr src ; s#in6_addr dst ; } ipv6 ; } u ; t#__be16 tun_flags ; t#u8 tos ; t#u8 ttl ; t#__be32 label ; t#__be16 tp_src ; t#__be16 tp_dst ; } 
s##dst_cache_pcpu
s#dst_cache struct dst_cache { s#dst_cache_pcpu * cache ; unsigned long reset_ts ; } 
s#ip_tunnel_info struct ip_tunnel_info { s#ip_tunnel_key key ; s#dst_cache dst_cache ; t#u8 options_len ; t#u8 mode ; } 
s#hw_port_info struct hw_port_info { s#net_device * lower_dev ; t#u32 port_id ; } 
s#metadata_dst struct metadata_dst { s#dst_entry dst ; e#metadata_type type ; union { s#ip_tunnel_info tun_info ; s#hw_port_info port_info ; } u ; } 
metadata_dst_alloc s#metadata_dst * metadata_dst_alloc ( t#u8 , e#metadata_type , t#gfp_t ) 
metadata_dst_alloc_percpu s#metadata_dst * metadata_dst_alloc_percpu ( t#u8 , e#metadata_type , t#gfp_t ) 
metadata_dst_free_percpu void metadata_dst_free_percpu ( s#metadata_dst * ) 

/* net/core/dst_cache.o */
s##posix_acl
s##vfsmount
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##prot_inuse
s##ipv4_devconf
s##kmem_cache
s##xt_table
s##inet_hashinfo
s##uncached_list
s##workqueue_struct
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##nf_hook_entry
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##mempolicy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##blk_plug
s##reclaim_state
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##udp_table
s##raw_hashinfo
s##bpf_prog_aux
s##xfrm_policy
s##sock_reuseport
s##sec_path
s##udp_tunnel_info
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##prefix_info
s##xfrm_state
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
s##lwtunnel_state
s##dn_route
s##dst_cache_pcpu
dst_cache_get s#dst_entry * dst_cache_get ( s#dst_cache * ) 
dst_cache_get_ip4 s#rtable * dst_cache_get_ip4 ( s#dst_cache * , t#__be32 * ) 
dst_cache_set_ip4 void dst_cache_set_ip4 ( s#dst_cache * , s#dst_entry * , t#__be32 ) 
dst_cache_set_ip6 void dst_cache_set_ip6 ( s#dst_cache * , s#dst_entry * , const s#in6_addr * ) 
dst_cache_get_ip6 s#dst_entry * dst_cache_get_ip6 ( s#dst_cache * , s#in6_addr * ) 
dst_cache_init int dst_cache_init ( s#dst_cache * , t#gfp_t ) 
dst_cache_destroy void dst_cache_destroy ( s#dst_cache * ) 

/* net/core/ethtool.o */
s##posix_acl
s##vfsmount
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##kmem_cache
s##xt_table
s##inet_hashinfo
s##fib_notifier_ops
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##lwtunnel_state
s##rtable
s##dn_route
s##workqueue_struct
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##nf_hook_entry
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##mempolicy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##blk_plug
s##reclaim_state
s##device_private
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##request_sock_ops
s##timewait_sock_ops
s##udp_table
s##raw_hashinfo
s##bpf_prog_aux
s##xfrm_policy
s##sock_reuseport
s##sec_path
s##udp_tunnel_info
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xsk_queue
s#xdp_umem_page struct xdp_umem_page { void * addr ; t#dma_addr_t dma ; } 
s#xdp_umem_fq_reuse struct xdp_umem_fq_reuse { t#u32 nentries ; t#u32 length ; t#u64 handles [ ] ; } 
s#xdp_umem struct xdp_umem { s#xsk_queue * fq ; s#xsk_queue * cq ; s#xdp_umem_page * pages ; t#u64 chunk_mask ; t#u64 size ; t#u32 headroom ; t#u32 chunk_size_nohr ; s#user_struct * user ; unsigned long address ; t#refcount_t users ; s#work_struct work ; s#page * * pgs ; t#u32 npgs ; s#net_device * dev ; s#xdp_umem_fq_reuse * fq_reuse ; t#u16 queue_id ; t#bool zc ; t#spinlock_t xsk_list_lock ; s#list_head xsk_list ; } 
s##switchdev_ops
s##l3mdev_ops
s##ndisc_ops
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##gpio_desc
s##phylink
s##sfp_bus
ethtool_op_get_link t#u32 ethtool_op_get_link ( s#net_device * ) 
ethtool_op_get_ts_info int ethtool_op_get_ts_info ( s#net_device * , s#ethtool_ts_info * ) 
ethtool_intersect_link_masks void ethtool_intersect_link_masks ( s#ethtool_link_ksettings * , s#ethtool_link_ksettings * ) 
ethtool_convert_legacy_u32_to_link_mode void ethtool_convert_legacy_u32_to_link_mode ( unsigned long * , t#u32 ) 
ethtool_convert_link_mode_to_legacy_u32 t#bool ethtool_convert_link_mode_to_legacy_u32 ( t#u32 * , const unsigned long * ) 
__ethtool_get_link_ksettings extern int __ethtool_get_link_ksettings ( s#net_device * , s#ethtool_link_ksettings * ) 
ethtool_virtdev_set_link_ksettings int ethtool_virtdev_set_link_ksettings ( s#net_device * , const s#ethtool_link_ksettings * , t#u32 * , t#u8 * ) 
netdev_rss_key_fill void netdev_rss_key_fill ( void * , t#size_t ) 

/* net/core/failover.o */
s##sock
s##sec_path
s##neigh_parms
s##neighbour
s##vfsmount
s##posix_acl
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##kmem_cache
s##xt_table
s##inet_hashinfo
s##fib_notifier_ops
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##nf_hook_entry
s##ebt_table
s##workqueue_struct
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##bpf_prog_array
s##cgroup_taskset
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##udp_tunnel_info
s##bpf_prog
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##l3mdev_ops
s##ndisc_ops
s##xfrm_state
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##mini_Qdisc
s##Qdisc
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##rtnl_link_ops
s##phy_device
s##sfp_bus
failover_slave_unregister int failover_slave_unregister ( s#net_device * ) 
failover_register s#failover * failover_register ( s#net_device * , s#failover_ops * ) 
failover_unregister void failover_unregister ( s#failover * ) 

/* net/core/fib_notifier.o */
s##proc_ns_operations
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##sock
s##bio_vec
s##poll_table_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##mem_cgroup
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kmem_cache
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##bpf_prog_array
s##cgroup_taskset
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_dir_entry
s##uevent_sock
s##sec_path
s##neigh_parms
s##neighbour
s##udp_tunnel_info
s##bpf_prog
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##l3mdev_ops
s##ndisc_ops
s##xfrm_state
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##mini_Qdisc
s##Qdisc
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##rtnl_link_ops
s##phy_device
s##sfp_bus
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##xt_table
s##inet_hashinfo
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
e#fib_event_type enum fib_event_type { FIB_EVENT_ENTRY_REPLACE , FIB_EVENT_ENTRY_APPEND , FIB_EVENT_ENTRY_ADD , FIB_EVENT_ENTRY_DEL , FIB_EVENT_RULE_ADD , FIB_EVENT_RULE_DEL , FIB_EVENT_NH_ADD , FIB_EVENT_NH_DEL , FIB_EVENT_VIF_ADD , FIB_EVENT_VIF_DEL , } 
s#fib_notifier_info struct fib_notifier_info { s#net * net ; int family ; s#netlink_ext_ack * extack ; } 
call_fib_notifier int call_fib_notifier ( s#notifier_block * , s#net * , e#fib_event_type , s#fib_notifier_info * ) 
call_fib_notifiers int call_fib_notifiers ( s#net * , e#fib_event_type , s#fib_notifier_info * ) 
register_fib_notifier int register_fib_notifier ( s#notifier_block * , void ( * ) ( s#notifier_block * ) ) 
unregister_fib_notifier int unregister_fib_notifier ( s#notifier_block * ) 
fib_notifier_ops_register s#fib_notifier_ops * fib_notifier_ops_register ( const s#fib_notifier_ops * , s#net * ) 
fib_notifier_ops_unregister void fib_notifier_ops_unregister ( s#fib_notifier_ops * ) 

/* net/core/fib_rules.o */
s##proc_ns_operations
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##workqueue_struct
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##kmem_cache
s##xfrm_state
s##uncached_list
s##proc_dir_entry
s##dn_route
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##phy_device
s##sfp_bus
s##sec_path
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##key_user
s##key_type
s##assoc_array_ptr
s##uevent_sock
s##prot_inuse
s##ipv4_devconf
s##xt_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##netns_ipvs
s##mpls_route
fib_rule_matchall t#bool fib_rule_matchall ( const s#fib_rule * ) 
fib_default_rule_add int fib_default_rule_add ( s#fib_rules_ops * , t#u32 , t#u32 , t#u32 ) 
fib_rules_register s#fib_rules_ops * fib_rules_register ( const s#fib_rules_ops * , s#net * ) 
fib_rules_unregister void fib_rules_unregister ( s#fib_rules_ops * ) 
fib_rules_lookup int fib_rules_lookup ( s#fib_rules_ops * , s#flowi * , int , s#fib_lookup_arg * ) 
fib_rules_dump int fib_rules_dump ( s#net * , s#notifier_block * , int ) 
fib_rules_seq_read unsigned int fib_rules_seq_read ( s#net * , int ) 
fib_nl_newrule int fib_nl_newrule ( s#sk_buff * , s#nlmsghdr * , s#netlink_ext_ack * ) 
fib_nl_delrule int fib_nl_delrule ( s#sk_buff * , s#nlmsghdr * , s#netlink_ext_ack * ) 

/* net/core/filter.o */
s##posix_acl
s##vfsmount
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##kmem_cache
s##fs_pin
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##workqueue_struct
s##udp_tunnel_info
s##btf
s##bpf_verifier_env
s##xsk_queue
s##switchdev_ops
s##uncached_list
s##dn_route
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##phy_device
s##sfp_bus
s##prot_inuse
s##ipv4_devconf
s##xt_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##netns_ipvs
s##mpls_route
s##bpf_cgroup_storage_map
s##cgroup_taskset
s##eventfd_ctx
s##mempolicy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##udp_table
s##raw_hashinfo
s#sock_reuseport struct sock_reuseport { s#callback_head rcu ; t#u16 max_socks ; t#u16 num_socks ; s#bpf_prog * prog ; s#sock * socks [ 0 ] ; } 
sk_filter_trim_cap int sk_filter_trim_cap ( s#sock * , s#sk_buff * , unsigned int ) 
bpf_prog_create int bpf_prog_create ( s#bpf_prog * * , s#sock_fprog_kern * ) 
t#bpf_aux_classic_check_t typedef int ( * bpf_aux_classic_check_t ) ( s#sock_filter * , unsigned int ) 
bpf_prog_create_from_user int bpf_prog_create_from_user ( s#bpf_prog * * , s#sock_fprog * , t#bpf_aux_classic_check_t , t#bool ) 
bpf_prog_destroy void bpf_prog_destroy ( s#bpf_prog * ) 
sk_attach_filter int sk_attach_filter ( s#sock_fprog * , s#sock * ) 
s#bpf_redirect_info struct bpf_redirect_info { t#u32 ifindex ; t#u32 flags ; s#bpf_map * map ; s#bpf_map * map_to_flush ; t#u32 kern_flags ; } 
bpf_redirect_info extern __attribute__ ( ( section ( ".data..percpu" "" ) ) ) __typeof__ ( s#bpf_redirect_info ) bpf_redirect_info 
xdp_do_flush_map void xdp_do_flush_map ( void ) 
s#xdp_buff struct xdp_buff { void * data ; void * data_end ; void * data_meta ; void * data_hard_start ; unsigned long handle ; s#xdp_rxq_info * rxq ; } 
xdp_do_redirect int xdp_do_redirect ( s#net_device * , s#xdp_buff * , s#bpf_prog * ) 
xdp_do_generic_redirect int xdp_do_generic_redirect ( s#net_device * , s#sk_buff * , s#xdp_buff * , s#bpf_prog * ) 
s#ipv6_bpf_stub struct ipv6_bpf_stub { int ( * inet6_bind ) ( s#sock * , s#sockaddr * , int , t#bool , t#bool ) ; } 
ipv6_bpf_stub extern const s#ipv6_bpf_stub * ipv6_bpf_stub 
bpf_warn_invalid_xdp_action void bpf_warn_invalid_xdp_action ( t#u32 ) 
sk_detach_filter int sk_detach_filter ( s#sock * ) 

/* net/core/flow.o */
s##user_namespace
s##ucounts
s##proc_ns_operations
s##proc_dir_entry
s##sock
s##uevent_sock
s##net_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##sec_path
s##kmem_cache
s##xt_table
s##inet_hashinfo
s##fib_notifier_ops
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##neighbour
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##nf_hook_entry
s##ebt_table
s##workqueue_struct
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
t#flow_resolve_t typedef s#flow_cache_object * ( * flow_resolve_t ) ( s#net * , const s#flowi * , t#u16 , t#u8 , s#flow_cache_object * , void * ) 
flow_cache_lookup s#flow_cache_object * flow_cache_lookup ( s#net * , const s#flowi * , t#u16 , t#u8 , t#flow_resolve_t , void * ) 
flow_cache_init int flow_cache_init ( s#net * ) 
flow_cache_fini void flow_cache_fini ( s#net * ) 

/* net/core/flow_dissector.o */
E#FLOW_DISSECTOR_KEY_MAX 24 
s#flow_dissector struct flow_dissector { unsigned int used_keys ; unsigned short int offset [ E#FLOW_DISSECTOR_KEY_MAX ] ; } 
e#flow_dissector_key_id enum flow_dissector_key_id { FLOW_DISSECTOR_KEY_CONTROL , FLOW_DISSECTOR_KEY_BASIC , FLOW_DISSECTOR_KEY_IPV4_ADDRS , FLOW_DISSECTOR_KEY_IPV6_ADDRS , FLOW_DISSECTOR_KEY_PORTS , FLOW_DISSECTOR_KEY_ICMP , FLOW_DISSECTOR_KEY_ETH_ADDRS , FLOW_DISSECTOR_KEY_TIPC , FLOW_DISSECTOR_KEY_ARP , FLOW_DISSECTOR_KEY_VLAN , FLOW_DISSECTOR_KEY_FLOW_LABEL , FLOW_DISSECTOR_KEY_GRE_KEYID , FLOW_DISSECTOR_KEY_MPLS_ENTROPY , FLOW_DISSECTOR_KEY_ENC_KEYID , FLOW_DISSECTOR_KEY_ENC_IPV4_ADDRS , FLOW_DISSECTOR_KEY_ENC_IPV6_ADDRS , FLOW_DISSECTOR_KEY_ENC_CONTROL , FLOW_DISSECTOR_KEY_ENC_PORTS , FLOW_DISSECTOR_KEY_MPLS , FLOW_DISSECTOR_KEY_TCP , FLOW_DISSECTOR_KEY_IP , FLOW_DISSECTOR_KEY_CVLAN , FLOW_DISSECTOR_KEY_ENC_IP , FLOW_DISSECTOR_KEY_ENC_OPTS , FLOW_DISSECTOR_KEY_MAX , } 
s#flow_dissector_key struct flow_dissector_key { e#flow_dissector_key_id key_id ; t#size_t offset ; } 
skb_flow_dissector_init void skb_flow_dissector_init ( s#flow_dissector * , const s#flow_dissector_key * , unsigned int ) 
s##proc_ns_operations
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##kmem_cache
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##bpf_prog_aux
s##xfrm_policy
s##workqueue_struct
s##xfrm_state
s##uncached_list
s##proc_dir_entry
s##dn_route
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##key_user
s##key_type
s##assoc_array_ptr
s##uevent_sock
s##prot_inuse
s##ipv4_devconf
s##xt_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##nf_hook_entry
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##netns_ipvs
s##mpls_route
s##udp_tunnel_info
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
s##sec_path
__skb_flow_get_ports t#__be32 __skb_flow_get_ports ( const s#sk_buff * , int , t#u8 , void * , int ) 
skb_flow_dissect_tunnel_info void skb_flow_dissect_tunnel_info ( const s#sk_buff * , s#flow_dissector * , void * ) 
__skb_flow_dissect t#bool __skb_flow_dissect ( const s#sk_buff * , s#flow_dissector * , void * , void * , t#__be16 , int , int , unsigned int ) 
s#flow_dissector_key_control struct flow_dissector_key_control { t#u16 thoff ; t#u16 addr_type ; t#u32 flags ; } 
s#flow_dissector_key_basic struct flow_dissector_key_basic { t#__be16 n_proto ; t#u8 ip_proto ; t#u8 padding ; } 
s#flow_dissector_key_tags struct flow_dissector_key_tags { t#u32 flow_label ; } 
s#flow_dissector_key_vlan struct flow_dissector_key_vlan { t#u16 vlan_id : 12 , vlan_priority : 3 ; t#__be16 vlan_tpid ; } 
s#flow_dissector_key_keyid struct flow_dissector_key_keyid { t#__be32 keyid ; } 
s#flow_dissector_key_ports struct flow_dissector_key_ports { union { t#__be32 ports ; struct { t#__be16 src ; t#__be16 dst ; } ; } ; } 
s#flow_dissector_key_ipv4_addrs struct flow_dissector_key_ipv4_addrs { t#__be32 src ; t#__be32 dst ; } 
s#flow_dissector_key_ipv6_addrs struct flow_dissector_key_ipv6_addrs { s#in6_addr src ; s#in6_addr dst ; } 
s#flow_dissector_key_tipc struct flow_dissector_key_tipc { t#__be32 key ; } 
s#flow_dissector_key_addrs struct flow_dissector_key_addrs { union { s#flow_dissector_key_ipv4_addrs v4addrs ; s#flow_dissector_key_ipv6_addrs v6addrs ; s#flow_dissector_key_tipc tipckey ; } ; } 
s#flow_keys struct flow_keys { s#flow_dissector_key_control control ; s#flow_dissector_key_basic basic ; s#flow_dissector_key_tags tags ; s#flow_dissector_key_vlan vlan ; s#flow_dissector_key_vlan cvlan ; s#flow_dissector_key_keyid keyid ; s#flow_dissector_key_ports ports ; s#flow_dissector_key_addrs addrs ; } 
flow_get_u32_src t#__be32 flow_get_u32_src ( const s#flow_keys * ) 
flow_get_u32_dst t#__be32 flow_get_u32_dst ( const s#flow_keys * ) 
flow_hash_from_keys t#u32 flow_hash_from_keys ( s#flow_keys * ) 
s#flow_keys_digest struct flow_keys_digest { t#u8 data [ 16 ] ; } 
make_flow_keys_digest void make_flow_keys_digest ( s#flow_keys_digest * , const s#flow_keys * ) 
__skb_get_hash_symmetric t#u32 __skb_get_hash_symmetric ( const s#sk_buff * ) 
__skb_get_hash void __skb_get_hash ( s#sk_buff * ) 
skb_get_hash_perturb t#__u32 skb_get_hash_perturb ( const s#sk_buff * , t#u32 ) 
__get_hash_from_flowi6 t#__u32 __get_hash_from_flowi6 ( const s#flowi6 * , s#flow_keys * ) 
__get_hash_from_flowi4 t#__u32 __get_hash_from_flowi4 ( const s#flowi4 * , s#flow_keys * ) 
flow_keys_dissector extern s#flow_dissector flow_keys_dissector 
flow_keys_basic_dissector extern s#flow_dissector flow_keys_basic_dissector 

/* net/core/gen_estimator.o */
s##net_rate_estimator
gen_new_estimator int gen_new_estimator ( s#gnet_stats_basic_packed * , s#gnet_stats_basic_cpu * , s#net_rate_estimator * * , t#spinlock_t * , t#seqcount_t * , s#nlattr * ) 
gen_kill_estimator void gen_kill_estimator ( s#net_rate_estimator * * ) 
gen_replace_estimator int gen_replace_estimator ( s#gnet_stats_basic_packed * , s#gnet_stats_basic_cpu * , s#net_rate_estimator * * , t#spinlock_t * , t#seqcount_t * , s#nlattr * ) 
gen_estimator_active t#bool gen_estimator_active ( s#net_rate_estimator * * ) 
s#gnet_stats_rate_est64 struct gnet_stats_rate_est64 { t#__u64 bps ; t#__u64 pps ; } 
gen_estimator_read t#bool gen_estimator_read ( s#net_rate_estimator * * , s#gnet_stats_rate_est64 * ) 

/* net/core/gen_stats.o */
s##neigh_parms
s##neighbour
s##sock
s##vfsmount
s##posix_acl
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##kmem_cache
s##xt_table
s##inet_hashinfo
s##fib_notifier_ops
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##nf_hook_entry
s##ebt_table
s##workqueue_struct
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##bpf_prog_array
s##cgroup_taskset
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##udp_tunnel_info
s##bpf_prog
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##l3mdev_ops
s##ndisc_ops
s##xfrm_state
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##mini_Qdisc
s##Qdisc
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##rtnl_link_ops
s##phy_device
s##sfp_bus
s##sec_path
gnet_stats_start_copy_compat int gnet_stats_start_copy_compat ( s#sk_buff * , int , int , int , t#spinlock_t * , s#gnet_dump * , int ) 
gnet_stats_start_copy int gnet_stats_start_copy ( s#sk_buff * , int , t#spinlock_t * , s#gnet_dump * , int ) 
__gnet_stats_copy_basic void __gnet_stats_copy_basic ( const t#seqcount_t * , s#gnet_stats_basic_packed * , s#gnet_stats_basic_cpu * , s#gnet_stats_basic_packed * ) 
gnet_stats_copy_basic int gnet_stats_copy_basic ( const t#seqcount_t * , s#gnet_dump * , s#gnet_stats_basic_cpu * , s#gnet_stats_basic_packed * ) 
gnet_stats_copy_basic_hw int gnet_stats_copy_basic_hw ( const t#seqcount_t * , s#gnet_dump * , s#gnet_stats_basic_cpu * , s#gnet_stats_basic_packed * ) 
s##net_rate_estimator
gnet_stats_copy_rate_est int gnet_stats_copy_rate_est ( s#gnet_dump * , s#net_rate_estimator * * ) 
__gnet_stats_copy_queue void __gnet_stats_copy_queue ( s#gnet_stats_queue * , const s#gnet_stats_queue * , const s#gnet_stats_queue * , t#__u32 ) 
gnet_stats_copy_queue int gnet_stats_copy_queue ( s#gnet_dump * , s#gnet_stats_queue * , s#gnet_stats_queue * , t#__u32 ) 
gnet_stats_copy_app int gnet_stats_copy_app ( s#gnet_dump * , void * , int ) 
gnet_stats_finish_copy int gnet_stats_finish_copy ( s#gnet_dump * ) 

/* net/core/gro_cells.o */
s##gro_cell
s#gro_cells struct gro_cells { s#gro_cell * cells ; } 
s##neigh_parms
s##neighbour
s##module
s##udp_tunnel_info
s##bpf_prog
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##l3mdev_ops
s##ndisc_ops
s##xfrm_state
s##sock
s##tls_crypto_info
s##tls_context
s##vfsmount
s##posix_acl
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##kmem_cache
s##xt_table
s##inet_hashinfo
s##fib_notifier_ops
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##nf_hook_entry
s##ebt_table
s##workqueue_struct
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##bpf_prog_array
s##cgroup_taskset
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##mini_Qdisc
s##Qdisc
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##rtnl_link_ops
s##phy_device
s##sfp_bus
s##sec_path
gro_cells_receive int gro_cells_receive ( s#gro_cells * , s#sk_buff * ) 
gro_cells_init int gro_cells_init ( s#gro_cells * , s#net_device * ) 
gro_cells_destroy void gro_cells_destroy ( s#gro_cells * ) 

/* net/core/link_watch.o */
s##posix_acl
s##vfsmount
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##kmem_cache
s##xt_table
s##inet_hashinfo
s##fib_notifier_ops
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##lwtunnel_state
s##rtable
s##dn_route
s##workqueue_struct
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##nf_hook_entry
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##mempolicy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##blk_plug
s##reclaim_state
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##request_sock_ops
s##timewait_sock_ops
s##udp_table
s##raw_hashinfo
s##bpf_prog_aux
s##xfrm_policy
s##sock_reuseport
s##sec_path
s##udp_tunnel_info
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##l3mdev_ops
s##ndisc_ops
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##net_rate_estimator
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
linkwatch_fire_event void linkwatch_fire_event ( s#net_device * ) 

/* net/core/lwtunnel.o */
s##proc_ns_operations
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##workqueue_struct
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##kmem_cache
s##xfrm_state
s##uncached_list
s##proc_dir_entry
s##dn_route
s##prefix_info
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##phy_device
s##sfp_bus
s##sec_path
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##key_user
s##key_type
s##assoc_array_ptr
s##uevent_sock
s##prot_inuse
s##ipv4_devconf
s##xt_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
lwtunnel_state_alloc s#lwtunnel_state * lwtunnel_state_alloc ( int ) 
s#lwtunnel_encap_ops struct lwtunnel_encap_ops { int ( * build_state ) ( s#nlattr * , unsigned int , const void * , s#lwtunnel_state * * , s#netlink_ext_ack * ) ; void ( * destroy_state ) ( s#lwtunnel_state * ) ; int ( * output ) ( s#net * , s#sock * , s#sk_buff * ) ; int ( * input ) ( s#sk_buff * ) ; int ( * fill_encap ) ( s#sk_buff * , s#lwtunnel_state * ) ; int ( * get_encap_size ) ( s#lwtunnel_state * ) ; int ( * cmp_encap ) ( s#lwtunnel_state * , s#lwtunnel_state * ) ; int ( * xmit ) ( s#sk_buff * ) ; s#module * owner ; } 
lwtunnel_encap_add_ops int lwtunnel_encap_add_ops ( const s#lwtunnel_encap_ops * , unsigned int ) 
lwtunnel_encap_del_ops int lwtunnel_encap_del_ops ( const s#lwtunnel_encap_ops * , unsigned int ) 
lwtunnel_build_state int lwtunnel_build_state ( t#u16 , s#nlattr * , unsigned int , const void * , s#lwtunnel_state * * , s#netlink_ext_ack * ) 
lwtunnel_valid_encap_type int lwtunnel_valid_encap_type ( t#u16 ) 
lwtunnel_valid_encap_type_attr int lwtunnel_valid_encap_type_attr ( s#nlattr * , int ) 
lwtstate_free void lwtstate_free ( s#lwtunnel_state * ) 
lwtunnel_fill_encap int lwtunnel_fill_encap ( s#sk_buff * , s#lwtunnel_state * ) 
lwtunnel_get_encap_size int lwtunnel_get_encap_size ( s#lwtunnel_state * ) 
lwtunnel_cmp_encap int lwtunnel_cmp_encap ( s#lwtunnel_state * , s#lwtunnel_state * ) 
lwtunnel_output int lwtunnel_output ( s#net * , s#sock * , s#sk_buff * ) 
lwtunnel_xmit int lwtunnel_xmit ( s#sk_buff * ) 
lwtunnel_input int lwtunnel_input ( s#sk_buff * ) 

/* net/core/neighbour.o */
neigh_rand_reach_time unsigned long neigh_rand_reach_time ( unsigned long ) 
s##posix_acl
s##vfsmount
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##prot_inuse
s##fib_table
s##inet_peer_base
s##kmem_cache
s##xt_table
s##inet_hashinfo
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##lwtunnel_state
s##rtable
s##dn_route
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##nf_hook_entry
s##ebt_table
s##workqueue_struct
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##mempolicy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##blk_plug
s##reclaim_state
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##udp_table
s##raw_hashinfo
s##bpf_prog_aux
s##xfrm_policy
s##sock_reuseport
s##sec_path
s##udp_tunnel_info
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##ip_mc_list
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
neigh_changeaddr void neigh_changeaddr ( s#neigh_table * , s#net_device * ) 
neigh_ifdown int neigh_ifdown ( s#neigh_table * , s#net_device * ) 
neigh_lookup s#neighbour * neigh_lookup ( s#neigh_table * , const void * , s#net_device * ) 
neigh_lookup_nodev s#neighbour * neigh_lookup_nodev ( s#neigh_table * , s#net * , const void * ) 
__neigh_create s#neighbour * __neigh_create ( s#neigh_table * , const void * , s#net_device * , t#bool ) 
__pneigh_lookup s#pneigh_entry * __pneigh_lookup ( s#neigh_table * , s#net * , const void * , s#net_device * ) 
pneigh_lookup s#pneigh_entry * pneigh_lookup ( s#neigh_table * , s#net * , const void * , s#net_device * , int ) 
neigh_destroy void neigh_destroy ( s#neighbour * ) 
__neigh_event_send int __neigh_event_send ( s#neighbour * , s#sk_buff * ) 
neigh_update int neigh_update ( s#neighbour * , const t#u8 * , t#u8 , t#u32 , t#u32 ) 
__neigh_set_probe_once void __neigh_set_probe_once ( s#neighbour * ) 
neigh_event_ns s#neighbour * neigh_event_ns ( s#neigh_table * , t#u8 * , void * , s#net_device * ) 
neigh_resolve_output int neigh_resolve_output ( s#neighbour * , s#sk_buff * ) 
neigh_connected_output int neigh_connected_output ( s#neighbour * , s#sk_buff * ) 
neigh_direct_output int neigh_direct_output ( s#neighbour * , s#sk_buff * ) 
pneigh_enqueue void pneigh_enqueue ( s#neigh_table * , s#neigh_parms * , s#sk_buff * ) 
neigh_parms_alloc s#neigh_parms * neigh_parms_alloc ( s#net_device * , s#neigh_table * ) 
neigh_parms_release void neigh_parms_release ( s#neigh_table * , s#neigh_parms * ) 
neigh_table_init void neigh_table_init ( int , s#neigh_table * ) 
neigh_table_clear int neigh_table_clear ( int , s#neigh_table * ) 
neigh_for_each void neigh_for_each ( s#neigh_table * , void ( * ) ( s#neighbour * , void * ) , void * ) 
__neigh_for_each_release void __neigh_for_each_release ( s#neigh_table * , int ( * ) ( s#neighbour * ) ) 
neigh_xmit int neigh_xmit ( int , s#net_device * , const void * , s#sk_buff * ) 
neigh_seq_start void * neigh_seq_start ( s#seq_file * , t#loff_t * , s#neigh_table * , unsigned int ) 
neigh_seq_next void * neigh_seq_next ( s#seq_file * , void * , t#loff_t * ) 
neigh_seq_stop void neigh_seq_stop ( s#seq_file * , void * ) 
neigh_app_ns void neigh_app_ns ( s#neighbour * ) 
neigh_proc_dointvec int neigh_proc_dointvec ( s#ctl_table * , int , void * , t#size_t * , t#loff_t * ) 
neigh_proc_dointvec_jiffies int neigh_proc_dointvec_jiffies ( s#ctl_table * , int , void * , t#size_t * , t#loff_t * ) 
neigh_proc_dointvec_ms_jiffies int neigh_proc_dointvec_ms_jiffies ( s#ctl_table * , int , void * , t#size_t * , t#loff_t * ) 
neigh_sysctl_register int neigh_sysctl_register ( s#net_device * , s#neigh_parms * , t#proc_handler * ) 
neigh_sysctl_unregister void neigh_sysctl_unregister ( s#neigh_parms * ) 

/* net/core/net-sysfs.o */
s##posix_acl
s##vfsmount
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##sec_path
s##workqueue_struct
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##kmem_cache
s##xfrm_state
s##lwtunnel_state
s##rtable
s##rt6_info
s##dn_route
s##prefix_info
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##device_private
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##iommu_group
s##iommu_fwspec
s##phy_device
s##sfp_bus
s##prot_inuse
s##ipv4_devconf
s##xt_table
s##inet_hashinfo
s##rt6_statistics
s##fib6_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##mempolicy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sock_reuseport
net_ns_type_operations extern const s#kobj_ns_type_operations net_ns_type_operations 
netdev_class_create_file_ns int netdev_class_create_file_ns ( const s#class_attribute * , const void * ) 
netdev_class_remove_file_ns void netdev_class_remove_file_ns ( const s#class_attribute * , const void * ) 

/* net/core/net-traces.o */
s##static_key_mod
__tracepoint_fib6_table_lookup extern s#tracepoint __tracepoint_fib6_table_lookup 
__tracepoint_br_fdb_add extern s#tracepoint __tracepoint_br_fdb_add 
__tracepoint_br_fdb_external_learn_add extern s#tracepoint __tracepoint_br_fdb_external_learn_add 
__tracepoint_fdb_delete extern s#tracepoint __tracepoint_fdb_delete 
__tracepoint_br_fdb_update extern s#tracepoint __tracepoint_br_fdb_update 
__tracepoint_kfree_skb extern s#tracepoint __tracepoint_kfree_skb 
__tracepoint_napi_poll extern s#tracepoint __tracepoint_napi_poll 

/* net/core/net_namespace.o */
net_namespace_list extern s#list_head net_namespace_list 
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##module
s##device_private
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##key_user
s##key_type
s##assoc_array_ptr
s##workqueue_struct
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##l3mdev_ops
s##ndisc_ops
s##xfrm_state
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
s##sec_path
s##kmem_cache
s##request_sock_ops
s##timewait_sock_ops
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##lwtunnel_state
s##rtable
s##rt6_info
s##dn_route
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##sock_reuseport
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##proc_dir_entry
s##uevent_sock
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##xt_table
s##fib_notifier_ops
s##ipv6_devconf
s##rt6_statistics
s##fib6_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##netns_ipvs
s##mpls_route
init_net extern s#net init_net 
peernet2id int peernet2id ( s#net * , s#net * ) 
__put_net void __put_net ( s#net * ) 
get_net_ns_by_fd s#net * get_net_ns_by_fd ( int ) 
get_net_ns_by_pid s#net * get_net_ns_by_pid ( t#pid_t ) 
s#pernet_operations struct pernet_operations { s#list_head list ; int ( * init ) ( s#net * ) ; void ( * exit ) ( s#net * ) ; void ( * exit_batch ) ( s#list_head * ) ; unsigned int * id ; t#size_t size ; } 
register_pernet_subsys int register_pernet_subsys ( s#pernet_operations * ) 
unregister_pernet_subsys void unregister_pernet_subsys ( s#pernet_operations * ) 
register_pernet_device int register_pernet_device ( s#pernet_operations * ) 
unregister_pernet_device void unregister_pernet_device ( s#pernet_operations * ) 

/* net/core/netclassid_cgroup.o */
s##vfsmount
s##posix_acl
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##eventfd_ctx
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##mmu_notifier_mm
s##xol_area
s##pid_namespace
s##nameidata
s##sem_undo_list
s##fs_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##sec_path
s##workqueue_struct
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##kmem_cache
s##xfrm_state
s##lwtunnel_state
s##rtable
s##rt6_info
s##dn_route
s##ndisc_ops
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##phy_device
s##sfp_bus
s##prot_inuse
s##ipv4_devconf
s##fib_table
s##inet_peer_base
s##xt_table
s##inet_hashinfo
s##ipv6_devconf
s##rt6_statistics
s##fib6_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##swap_info_struct
s##timewait_sock_ops
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##mtd_info
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s#cgroup_cls_state struct cgroup_cls_state { s#cgroup_subsys_state css ; t#u32 classid ; } 
task_cls_state s#cgroup_cls_state * task_cls_state ( s#task_struct * ) 

/* net/core/netevent.o */
register_netevent_notifier int register_netevent_notifier ( s#notifier_block * ) 
unregister_netevent_notifier int unregister_netevent_notifier ( s#notifier_block * ) 
call_netevent_notifiers int call_netevent_notifiers ( unsigned long , void * ) 

/* net/core/page_pool.o */
s##device_private
s##sock
s##seq_file
s##vfsmount
s##posix_acl
s##module
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##compat_timespec
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##iov_iter
s##swap_info_struct
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s#page_pool_params struct page_pool_params { unsigned int flags ; unsigned int order ; unsigned int pool_size ; int nid ; s#device * dev ; e#dma_data_direction dma_dir ; } 
s#pp_alloc_cache struct pp_alloc_cache { t#u32 count ; void * cache [ 128 ] ; } 
s#page_pool struct page_pool { s#callback_head rcu ; s#page_pool_params p ; s#pp_alloc_cache alloc __attribute__ ( ( __aligned__ ( 256 ) ) ) ; s#ptr_ring ring ; } 
page_pool_create s#page_pool * page_pool_create ( const s#page_pool_params * ) 
page_pool_alloc_pages s#page * page_pool_alloc_pages ( s#page_pool * , t#gfp_t ) 
__page_pool_put_page void __page_pool_put_page ( s#page_pool * , s#page * , t#bool ) 
page_pool_destroy void page_pool_destroy ( s#page_pool * ) 

/* net/core/ptp_classifier.o */
s##neigh_parms
s##neighbour
s##module
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##l3mdev_ops
s##ndisc_ops
s##xfrm_state
s##sock
s##tls_crypto_info
s##tls_context
s##vfsmount
s##posix_acl
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##kmem_cache
s##xt_table
s##inet_hashinfo
s##fib_notifier_ops
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##nf_hook_entry
s##ebt_table
s##workqueue_struct
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##bpf_prog_array
s##cgroup_taskset
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
s##sec_path
ptp_classify_raw unsigned int ptp_classify_raw ( const s#sk_buff * ) 

/* net/core/rtnetlink.o */
rtnl_lock extern void rtnl_lock ( void ) 
s##proc_ns_operations
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##kmem_cache
s##raw_hashinfo
s##btf
s##bpf_verifier_env
s##xfrm_policy
s##workqueue_struct
s##xfrm_state
s##lwtunnel_state
s##uncached_list
s##rt6_info
s##dn_route
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_cgroup_storage_map
s##cgroup_taskset
s##eventfd_ctx
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##device_private
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_dir_entry
s##uevent_sock
s##prot_inuse
s##ipv4_devconf
s##xt_table
s##rt6_statistics
s##fib6_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##nf_hook_entry
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##udp_tunnel_info
s##xdp_umem
s##prefix_info
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##net_rate_estimator
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
s##sec_path
rtnl_kfree_skbs void rtnl_kfree_skbs ( s#sk_buff * , s#sk_buff * ) 
rtnl_unlock extern void rtnl_unlock ( void ) 
rtnl_trylock extern int rtnl_trylock ( void ) 
rtnl_is_locked extern int rtnl_is_locked ( void ) 
refcount_dec_and_rtnl_lock extern t#bool refcount_dec_and_rtnl_lock ( t#refcount_t * ) 
t#rtnl_doit_func typedef int ( * rtnl_doit_func ) ( s#sk_buff * , s#nlmsghdr * , s#netlink_ext_ack * ) 
t#rtnl_dumpit_func typedef int ( * rtnl_dumpit_func ) ( s#sk_buff * , s#netlink_callback * ) 
t#rtnl_calcit_func typedef t#u16 ( * rtnl_calcit_func ) ( s#sk_buff * , s#nlmsghdr * ) 
__rtnl_register int __rtnl_register ( int , int , t#rtnl_doit_func , t#rtnl_dumpit_func , t#rtnl_calcit_func ) 
rtnl_register void rtnl_register ( int , int , t#rtnl_doit_func , t#rtnl_dumpit_func , t#rtnl_calcit_func ) 
rtnl_unregister int rtnl_unregister ( int , int ) 
rtnl_unregister_all void rtnl_unregister_all ( int ) 
__rtnl_link_register int __rtnl_link_register ( s#rtnl_link_ops * ) 
rtnl_link_register int rtnl_link_register ( s#rtnl_link_ops * ) 
__rtnl_link_unregister void __rtnl_link_unregister ( s#rtnl_link_ops * ) 
rtnl_link_unregister void rtnl_link_unregister ( s#rtnl_link_ops * ) 
s#rtnl_af_ops struct rtnl_af_ops { s#list_head list ; int family ; int ( * fill_link_af ) ( s#sk_buff * , const s#net_device * , t#u32 ) ; t#size_t ( * get_link_af_size ) ( const s#net_device * , t#u32 ) ; int ( * validate_link_af ) ( const s#net_device * , const s#nlattr * ) ; int ( * set_link_af ) ( s#net_device * , const s#nlattr * ) ; int ( * fill_stats_af ) ( s#sk_buff * , const s#net_device * ) ; t#size_t ( * get_stats_af_size ) ( const s#net_device * ) ; } 
rtnl_af_register void rtnl_af_register ( s#rtnl_af_ops * ) 
__rtnl_af_unregister void __rtnl_af_unregister ( s#rtnl_af_ops * ) 
rtnl_af_unregister void rtnl_af_unregister ( s#rtnl_af_ops * ) 
rtnl_unicast extern int rtnl_unicast ( s#sk_buff * , s#net * , t#u32 ) 
rtnl_notify extern void rtnl_notify ( s#sk_buff * , s#net * , t#u32 , t#u32 , s#nlmsghdr * , t#gfp_t ) 
rtnl_set_sk_err extern void rtnl_set_sk_err ( s#net * , t#u32 , int ) 
rtnetlink_put_metrics extern int rtnetlink_put_metrics ( s#sk_buff * , t#u32 * ) 
rtnl_put_cacheinfo extern int rtnl_put_cacheinfo ( s#sk_buff * , s#dst_entry * , t#u32 , long , t#u32 ) 
rtnl_nla_parse_ifla int rtnl_nla_parse_ifla ( s#nlattr * * , const s#nlattr * , int , s#netlink_ext_ack * ) 
rtnl_link_get_net s#net * rtnl_link_get_net ( s#net * , s#nlattr * [ ] ) 
rtnl_delete_link int rtnl_delete_link ( s#net_device * ) 
s#ifinfomsg struct ifinfomsg { unsigned char ifi_family ; unsigned char __ifi_pad ; unsigned short ifi_type ; int ifi_index ; unsigned ifi_flags ; unsigned ifi_change ; } 
rtnl_configure_link int rtnl_configure_link ( s#net_device * , const s#ifinfomsg * ) 
rtnl_create_link s#net_device * rtnl_create_link ( s#net * , const char * , unsigned char , const s#rtnl_link_ops * , s#nlattr * [ ] ) 
rtmsg_ifinfo void rtmsg_ifinfo ( int , s#net_device * , unsigned , t#gfp_t ) 
ndo_dflt_fdb_add extern int ndo_dflt_fdb_add ( s#ndmsg * , s#nlattr * [ ] , s#net_device * , const unsigned char * , t#u16 , t#u16 ) 
ndo_dflt_fdb_del extern int ndo_dflt_fdb_del ( s#ndmsg * , s#nlattr * [ ] , s#net_device * , const unsigned char * , t#u16 ) 
ndo_dflt_fdb_dump extern int ndo_dflt_fdb_dump ( s#sk_buff * , s#netlink_callback * , s#net_device * , s#net_device * , int * ) 
ndo_dflt_bridge_getlink extern int ndo_dflt_bridge_getlink ( s#sk_buff * , t#u32 , t#u32 , s#net_device * , t#u16 , t#u32 , t#u32 , int , t#u32 , int ( * ) ( s#sk_buff * , s#net_device * , t#u32 ) ) 

/* net/core/scm.o */
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##nlm_lockowner
s##nfs4_lock_state
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##proc_dir_entry
s##uevent_sock
s##prot_inuse
s##ipv4_devconf
s##fib_table
s##inet_peer_base
s##kmem_cache
s##xt_table
s##inet_hashinfo
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##lwtunnel_state
s##rtable
s##dn_route
s##workqueue_struct
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##nf_hook_entry
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##ndisc_ops
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##phy_device
s##sfp_bus
s##sec_path
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##fs_pin
s#scm_fp_list struct scm_fp_list { short count ; short max ; s#user_struct * user ; s#file * fp [ 253 ] ; } 
s#scm_cookie struct scm_cookie { s#pid * pid ; s#scm_fp_list * fp ; s#scm_creds creds ; t#u32 secid ; } 
__scm_destroy void __scm_destroy ( s#scm_cookie * ) 
__scm_send int __scm_send ( s#socket * , s#msghdr * , s#scm_cookie * ) 
put_cmsg extern int put_cmsg ( s#msghdr * , int , int , int , void * ) 
scm_detach_fds void scm_detach_fds ( s#msghdr * , s#scm_cookie * ) 
scm_fp_dup s#scm_fp_list * scm_fp_dup ( s#scm_fp_list * ) 

/* net/core/secure_seq.o */
secure_tcpv6_ts_off t#u32 secure_tcpv6_ts_off ( const t#__be32 * , const t#__be32 * ) 
secure_tcpv6_seq t#u32 secure_tcpv6_seq ( const t#__be32 * , const t#__be32 * , t#__be16 , t#__be16 ) 
secure_ipv6_port_ephemeral t#u32 secure_ipv6_port_ephemeral ( const t#__be32 * , const t#__be32 * , t#__be16 ) 
secure_tcp_seq t#u32 secure_tcp_seq ( t#__be32 , t#__be32 , t#__be16 , t#__be16 ) 
secure_ipv4_port_ephemeral t#u32 secure_ipv4_port_ephemeral ( t#__be32 , t#__be32 , t#__be16 ) 

/* net/core/skbuff.o */
sysctl_max_skb_frags extern int sysctl_max_skb_frags 
s##proc_ns_operations
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##kmem_cache
s##fs_pin
s##nlm_lockowner
s##nfs4_lock_state
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##bpf_prog_aux
s##workqueue_struct
s##lwtunnel_state
s##uncached_list
s##proc_dir_entry
s##dn_route
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##key_user
s##key_type
s##assoc_array_ptr
s##uevent_sock
s##prot_inuse
s##ipv4_devconf
s##xt_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##nf_hook_entry
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##udp_tunnel_info
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##prefix_info
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##net_rate_estimator
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
__alloc_skb s#sk_buff * __alloc_skb ( unsigned int , t#gfp_t , int , int ) 
build_skb s#sk_buff * build_skb ( void * , unsigned int ) 
netdev_alloc_frag void * netdev_alloc_frag ( unsigned int ) 
napi_alloc_frag void * napi_alloc_frag ( unsigned int ) 
__netdev_alloc_skb s#sk_buff * __netdev_alloc_skb ( s#net_device * , unsigned int , t#gfp_t ) 
__napi_alloc_skb s#sk_buff * __napi_alloc_skb ( s#napi_struct * , unsigned int , t#gfp_t ) 
skb_add_rx_frag void skb_add_rx_frag ( s#sk_buff * , int , s#page * , int , int , unsigned int ) 
skb_coalesce_rx_frag void skb_coalesce_rx_frag ( s#sk_buff * , int , int , unsigned int ) 
__kfree_skb void __kfree_skb ( s#sk_buff * ) 
kfree_skb void kfree_skb ( s#sk_buff * ) 
kfree_skb_list void kfree_skb_list ( s#sk_buff * ) 
skb_tx_error void skb_tx_error ( s#sk_buff * ) 
consume_skb void consume_skb ( s#sk_buff * ) 
napi_consume_skb void napi_consume_skb ( s#sk_buff * , int ) 
skb_morph s#sk_buff * skb_morph ( s#sk_buff * , s#sk_buff * ) 
skb_copy_ubufs int skb_copy_ubufs ( s#sk_buff * , t#gfp_t ) 
skb_clone s#sk_buff * skb_clone ( s#sk_buff * , t#gfp_t ) 
skb_headers_offset_update void skb_headers_offset_update ( s#sk_buff * , int ) 
skb_copy_header void skb_copy_header ( s#sk_buff * , const s#sk_buff * ) 
skb_copy s#sk_buff * skb_copy ( const s#sk_buff * , t#gfp_t ) 
__pskb_copy_fclone s#sk_buff * __pskb_copy_fclone ( s#sk_buff * , int , t#gfp_t , t#bool ) 
pskb_expand_head int pskb_expand_head ( s#sk_buff * , int , int , t#gfp_t ) 
skb_realloc_headroom s#sk_buff * skb_realloc_headroom ( s#sk_buff * , unsigned int ) 
skb_copy_expand s#sk_buff * skb_copy_expand ( const s#sk_buff * , int , int , t#gfp_t ) 
skb_pad int skb_pad ( s#sk_buff * , int ) 
pskb_put void * pskb_put ( s#sk_buff * , s#sk_buff * , int ) 
skb_put void * skb_put ( s#sk_buff * , unsigned int ) 
skb_push void * skb_push ( s#sk_buff * , unsigned int ) 
skb_pull void * skb_pull ( s#sk_buff * , unsigned int ) 
skb_trim void skb_trim ( s#sk_buff * , unsigned int ) 
___pskb_trim int ___pskb_trim ( s#sk_buff * , unsigned int ) 
pskb_trim_rcsum_slow int pskb_trim_rcsum_slow ( s#sk_buff * , unsigned int ) 
__pskb_pull_tail void * __pskb_pull_tail ( s#sk_buff * , int ) 
skb_copy_bits int skb_copy_bits ( const s#sk_buff * , int , void * , int ) 
skb_splice_bits int skb_splice_bits ( s#sk_buff * , s#sock * , unsigned int , s#pipe_inode_info * , unsigned int , unsigned int ) 
skb_send_sock_locked int skb_send_sock_locked ( s#sock * , s#sk_buff * , int , int ) 
skb_send_sock int skb_send_sock ( s#sock * , s#sk_buff * , int , int ) 
skb_store_bits int skb_store_bits ( s#sk_buff * , int , const void * , int ) 
s#skb_checksum_ops struct skb_checksum_ops { t#__wsum ( * update ) ( const void * , int , t#__wsum ) ; t#__wsum ( * combine ) ( t#__wsum , t#__wsum , int , int ) ; } 
__skb_checksum t#__wsum __skb_checksum ( const s#sk_buff * , int , int , t#__wsum , const s#skb_checksum_ops * ) 
skb_checksum t#__wsum skb_checksum ( const s#sk_buff * , int , int , t#__wsum ) 
skb_copy_and_csum_bits t#__wsum skb_copy_and_csum_bits ( const s#sk_buff * , int , t#u8 * , int , t#__wsum ) 
crc32c_csum_stub extern const s#skb_checksum_ops * crc32c_csum_stub 
skb_zerocopy_headlen unsigned int skb_zerocopy_headlen ( const s#sk_buff * ) 
skb_zerocopy int skb_zerocopy ( s#sk_buff * , s#sk_buff * , int , int ) 
skb_copy_and_csum_dev void skb_copy_and_csum_dev ( const s#sk_buff * , t#u8 * ) 
skb_dequeue s#sk_buff * skb_dequeue ( s#sk_buff_head * ) 
skb_dequeue_tail s#sk_buff * skb_dequeue_tail ( s#sk_buff_head * ) 
skb_queue_purge void skb_queue_purge ( s#sk_buff_head * ) 
skb_queue_head void skb_queue_head ( s#sk_buff_head * , s#sk_buff * ) 
skb_queue_tail void skb_queue_tail ( s#sk_buff_head * , s#sk_buff * ) 
skb_unlink void skb_unlink ( s#sk_buff * , s#sk_buff_head * ) 
skb_append void skb_append ( s#sk_buff * , s#sk_buff * , s#sk_buff_head * ) 
skb_insert void skb_insert ( s#sk_buff * , s#sk_buff * , s#sk_buff_head * ) 
skb_split void skb_split ( s#sk_buff * , s#sk_buff * , const t#u32 ) 
s#skb_seq_state struct skb_seq_state { t#__u32 lower_offset ; t#__u32 upper_offset ; t#__u32 frag_idx ; t#__u32 stepped_offset ; s#sk_buff * root_skb ; s#sk_buff * cur_skb ; t#__u8 * frag_data ; } 
skb_prepare_seq_read void skb_prepare_seq_read ( s#sk_buff * , unsigned int , unsigned int , s#skb_seq_state * ) 
skb_seq_read unsigned int skb_seq_read ( unsigned int , const t#u8 * * , s#skb_seq_state * ) 
skb_abort_seq_read void skb_abort_seq_read ( s#skb_seq_state * ) 
skb_find_text unsigned int skb_find_text ( s#sk_buff * , unsigned int , unsigned int , s#ts_config * ) 
skb_append_datato_frags int skb_append_datato_frags ( s#sock * , s#sk_buff * , int ( void * , char * , int , int , int , s#sk_buff * ) , void * , int ) 
skb_append_pagefrags int skb_append_pagefrags ( s#sk_buff * , s#page * , int , t#size_t ) 
skb_pull_rcsum void * skb_pull_rcsum ( s#sk_buff * , unsigned int ) 
skb_segment s#sk_buff * skb_segment ( s#sk_buff * , t#netdev_features_t ) 
skb_gro_receive int skb_gro_receive ( s#sk_buff * , s#sk_buff * ) 
skb_to_sgvec_nomark int skb_to_sgvec_nomark ( s#sk_buff * , s#scatterlist * , int , int ) 
skb_to_sgvec int skb_to_sgvec ( s#sk_buff * , s#scatterlist * , int , int ) 
skb_cow_data int skb_cow_data ( s#sk_buff * , int , s#sk_buff * * ) 
sock_queue_err_skb int sock_queue_err_skb ( s#sock * , s#sk_buff * ) 
sock_dequeue_err_skb s#sk_buff * sock_dequeue_err_skb ( s#sock * ) 
skb_clone_sk s#sk_buff * skb_clone_sk ( s#sk_buff * ) 
s#skb_shared_hwtstamps struct skb_shared_hwtstamps { t#ktime_t hwtstamp ; } 
skb_complete_tx_timestamp void skb_complete_tx_timestamp ( s#sk_buff * , s#skb_shared_hwtstamps * ) 
__skb_tstamp_tx void __skb_tstamp_tx ( s#sk_buff * , s#skb_shared_hwtstamps * , s#sock * , int ) 
skb_tstamp_tx void skb_tstamp_tx ( s#sk_buff * , s#skb_shared_hwtstamps * ) 
skb_complete_wifi_ack void skb_complete_wifi_ack ( s#sk_buff * , t#bool ) 
skb_partial_csum_set t#bool skb_partial_csum_set ( s#sk_buff * , t#u16 , t#u16 ) 
skb_checksum_setup int skb_checksum_setup ( s#sk_buff * , t#bool ) 
skb_checksum_trimmed s#sk_buff * skb_checksum_trimmed ( s#sk_buff * , unsigned int , t#__sum16 ( * ) ( s#sk_buff * ) ) 
__skb_warn_lro_forwarding void __skb_warn_lro_forwarding ( const s#sk_buff * ) 
kfree_skb_partial void kfree_skb_partial ( s#sk_buff * , t#bool ) 
skb_try_coalesce t#bool skb_try_coalesce ( s#sk_buff * , s#sk_buff * , t#bool * , int * ) 
skb_scrub_packet void skb_scrub_packet ( s#sk_buff * , t#bool ) 
skb_gso_transport_seglen unsigned int skb_gso_transport_seglen ( const s#sk_buff * ) 
skb_gso_validate_mtu t#bool skb_gso_validate_mtu ( const s#sk_buff * , unsigned int ) 
skb_gso_validate_mac_len t#bool skb_gso_validate_mac_len ( const s#sk_buff * , unsigned int ) 
skb_vlan_untag s#sk_buff * skb_vlan_untag ( s#sk_buff * ) 
skb_ensure_writable int skb_ensure_writable ( s#sk_buff * , int ) 
__skb_vlan_pop int __skb_vlan_pop ( s#sk_buff * , t#u16 * ) 
skb_vlan_pop int skb_vlan_pop ( s#sk_buff * ) 
skb_vlan_push int skb_vlan_push ( s#sk_buff * , t#__be16 , t#u16 ) 
alloc_skb_with_frags s#sk_buff * alloc_skb_with_frags ( unsigned long , unsigned long , int , int * , t#gfp_t ) 
pskb_extract s#sk_buff * pskb_extract ( s#sk_buff * , int , int , t#gfp_t ) 

/* net/core/skmsg.o */
s##posix_acl
s##vfsmount
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##sec_path
s##workqueue_struct
s##udp_tunnel_info
s##btf
s##bpf_verifier_env
s##xdp_umem
s##switchdev_ops
s##kmem_cache
s##xfrm_state
s##lwtunnel_state
s##uncached_list
s##rt6_info
s##dn_route
s##prefix_info
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##phy_device
s##sfp_bus
s##prot_inuse
s##ipv4_devconf
s##xt_table
s##rt6_statistics
s##fib6_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##bpf_cgroup_storage_map
s##cgroup_taskset
s##eventfd_ctx
s##mempolicy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sock_reuseport
s#sk_msg_sg struct sk_msg_sg { t#u32 start ; t#u32 curr ; t#u32 end ; t#u32 size ; t#u32 copybreak ; t#bool copy [ ( 65536 / ( ( 1UL ) << 12 ) + 1 ) ] ; s#scatterlist data [ ( 65536 / ( ( 1UL ) << 12 ) + 1 ) + 1 ] ; } 
s#sk_msg struct sk_msg { s#sk_msg_sg sg ; void * data ; void * data_end ; t#u32 apply_bytes ; t#u32 cork_bytes ; t#u32 flags ; s#sk_buff * skb ; s#sock * sk_redir ; s#sock * sk ; s#list_head list ; } 
sk_msg_alloc int sk_msg_alloc ( s#sock * , s#sk_msg * , int , int ) 
sk_msg_clone int sk_msg_clone ( s#sock * , s#sk_msg * , s#sk_msg * , t#u32 , t#u32 ) 
sk_msg_return_zero void sk_msg_return_zero ( s#sock * , s#sk_msg * , int ) 
sk_msg_return void sk_msg_return ( s#sock * , s#sk_msg * , int ) 
sk_msg_free_nocharge int sk_msg_free_nocharge ( s#sock * , s#sk_msg * ) 
sk_msg_free int sk_msg_free ( s#sock * , s#sk_msg * ) 
sk_msg_free_partial void sk_msg_free_partial ( s#sock * , s#sk_msg * , t#u32 ) 
sk_msg_trim void sk_msg_trim ( s#sock * , s#sk_msg * , int ) 
sk_msg_zerocopy_from_iter int sk_msg_zerocopy_from_iter ( s#sock * , s#iov_iter * , s#sk_msg * , t#u32 ) 
sk_msg_memcopy_from_iter int sk_msg_memcopy_from_iter ( s#sock * , s#iov_iter * , s#sk_msg * , t#u32 ) 
s#sk_psock_progs struct sk_psock_progs { s#bpf_prog * msg_parser ; s#bpf_prog * skb_parser ; s#bpf_prog * skb_verdict ; } 
s#strp_stats struct strp_stats { unsigned long long msgs ; unsigned long long bytes ; unsigned int mem_fail ; unsigned int need_more_hdr ; unsigned int msg_too_big ; unsigned int msg_timeouts ; unsigned int bad_hdr_len ; } 
s#strp_callbacks struct strp_callbacks { int ( * parse_msg ) ( s#strparser * , s#sk_buff * ) ; void ( * rcv_msg ) ( s#strparser * , s#sk_buff * ) ; int ( * read_sock_done ) ( s#strparser * , int ) ; void ( * abort_parser ) ( s#strparser * , int ) ; void ( * lock ) ( s#strparser * ) ; void ( * unlock ) ( s#strparser * ) ; } 
s#strparser struct strparser { s#sock * sk ; t#u32 stopped : 1 ; t#u32 paused : 1 ; t#u32 aborted : 1 ; t#u32 interrupted : 1 ; t#u32 unrecov_intr : 1 ; s#sk_buff * * skb_nextp ; s#sk_buff * skb_head ; unsigned int need_bytes ; s#delayed_work msg_timer_work ; s#work_struct work ; s#strp_stats stats ; s#strp_callbacks cb ; } 
s#sk_psock_parser struct sk_psock_parser { s#strparser strp ; t#bool enabled ; void ( * saved_data_ready ) ( s#sock * ) ; } 
s#sk_psock_work_state struct sk_psock_work_state { s#sk_buff * skb ; t#u32 len ; t#u32 off ; } 
s#sk_psock struct sk_psock { s#sock * sk ; s#sock * sk_redir ; t#u32 apply_bytes ; t#u32 cork_bytes ; t#u32 eval ; s#sk_msg * cork ; s#sk_psock_progs progs ; s#sk_psock_parser parser ; s#sk_buff_head ingress_skb ; s#list_head ingress_msg ; unsigned long state ; s#list_head link ; t#spinlock_t link_lock ; t#refcount_t refcnt ; void ( * saved_unhash ) ( s#sock * ) ; void ( * saved_close ) ( s#sock * , long ) ; void ( * saved_write_space ) ( s#sock * ) ; s#proto * sk_proto ; s#sk_psock_work_state work_state ; s#work_struct work ; union { s#callback_head rcu ; s#work_struct gc ; } ; } 
sk_psock_init s#sk_psock * sk_psock_init ( s#sock * , int ) 
sk_psock_destroy void sk_psock_destroy ( s#callback_head * ) 
sk_psock_drop void sk_psock_drop ( s#sock * , s#sk_psock * ) 
sk_psock_msg_verdict int sk_psock_msg_verdict ( s#sock * , s#sk_psock * , s#sk_msg * ) 

/* net/core/sock.o */
s##posix_acl
s##vfsmount
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##kmem_cache
s##fs_pin
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##workqueue_struct
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##lwtunnel_state
s##uncached_list
s##dn_route
s##prefix_info
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##phy_device
s##sfp_bus
s##prot_inuse
s##ipv4_devconf
s##xt_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##mempolicy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##udp_table
s##raw_hashinfo
sk_ns_capable t#bool sk_ns_capable ( const s#sock * , s#user_namespace * , int ) 
sk_capable t#bool sk_capable ( const s#sock * , int ) 
sk_net_capable t#bool sk_net_capable ( const s#sock * , int ) 
sysctl_wmem_max extern t#__u32 sysctl_wmem_max 
sysctl_rmem_max extern t#__u32 sysctl_rmem_max 
sysctl_optmem_max extern int sysctl_optmem_max 
memalloc_socks_key extern s#static_key_false memalloc_socks_key 
sk_set_memalloc void sk_set_memalloc ( s#sock * ) 
sk_clear_memalloc void sk_clear_memalloc ( s#sock * ) 
__sk_backlog_rcv int __sk_backlog_rcv ( s#sock * , s#sk_buff * ) 
__sock_queue_rcv_skb int __sock_queue_rcv_skb ( s#sock * , s#sk_buff * ) 
sock_queue_rcv_skb int sock_queue_rcv_skb ( s#sock * , s#sk_buff * ) 
__sk_receive_skb int __sk_receive_skb ( s#sock * , s#sk_buff * , const int , unsigned int , t#bool ) 
__sk_dst_check s#dst_entry * __sk_dst_check ( s#sock * , t#u32 ) 
sk_dst_check s#dst_entry * sk_dst_check ( s#sock * , t#u32 ) 
sk_mc_loop t#bool sk_mc_loop ( s#sock * ) 
sock_setsockopt int sock_setsockopt ( s#socket * , int , int , char * , unsigned int ) 
sk_alloc s#sock * sk_alloc ( s#net * , int , t#gfp_t , s#proto * , int ) 
sk_free void sk_free ( s#sock * ) 
sk_clone_lock s#sock * sk_clone_lock ( const s#sock * , const t#gfp_t ) 
sk_free_unlock_clone void sk_free_unlock_clone ( s#sock * ) 
sk_setup_caps void sk_setup_caps ( s#sock * , s#dst_entry * ) 
sock_wfree void sock_wfree ( s#sk_buff * ) 
skb_set_owner_w void skb_set_owner_w ( s#sk_buff * , s#sock * ) 
skb_orphan_partial void skb_orphan_partial ( s#sk_buff * ) 
sock_rfree void sock_rfree ( s#sk_buff * ) 
sock_efree void sock_efree ( s#sk_buff * ) 
sock_i_uid t#kuid_t sock_i_uid ( s#sock * ) 
sock_i_ino unsigned long sock_i_ino ( s#sock * ) 
sock_wmalloc s#sk_buff * sock_wmalloc ( s#sock * , unsigned long , int , t#gfp_t ) 
sock_kmalloc void * sock_kmalloc ( s#sock * , int , t#gfp_t ) 
sock_kfree_s void sock_kfree_s ( s#sock * , void * , int ) 
sock_kzfree_s void sock_kzfree_s ( s#sock * , void * , int ) 
sock_alloc_send_pskb s#sk_buff * sock_alloc_send_pskb ( s#sock * , unsigned long , unsigned long , int , int * , int ) 
sock_alloc_send_skb s#sk_buff * sock_alloc_send_skb ( s#sock * , unsigned long , int , int * ) 
s#cmsghdr struct cmsghdr { t#__kernel_size_t cmsg_len ; int cmsg_level ; int cmsg_type ; } 
s#sockcm_cookie struct sockcm_cookie { t#u32 mark ; t#u16 tsflags ; } 
__sock_cmsg_send int __sock_cmsg_send ( s#sock * , s#msghdr * , s#cmsghdr * , s#sockcm_cookie * ) 
sock_cmsg_send int sock_cmsg_send ( s#sock * , s#msghdr * , s#sockcm_cookie * ) 
skb_page_frag_refill t#bool skb_page_frag_refill ( unsigned int , s#page_frag * , t#gfp_t ) 
sk_page_frag_refill t#bool sk_page_frag_refill ( s#sock * , s#page_frag * ) 
sk_wait_data int sk_wait_data ( s#sock * , long * , const s#sk_buff * ) 
__sk_mem_raise_allocated int __sk_mem_raise_allocated ( s#sock * , int , int , int ) 
__sk_mem_schedule int __sk_mem_schedule ( s#sock * , int , int ) 
__sk_mem_reduce_allocated void __sk_mem_reduce_allocated ( s#sock * , int ) 
__sk_mem_reclaim void __sk_mem_reclaim ( s#sock * , int ) 
sk_set_peek_off int sk_set_peek_off ( s#sock * , int ) 
sock_no_bind int sock_no_bind ( s#socket * , s#sockaddr * , int ) 
sock_no_connect int sock_no_connect ( s#socket * , s#sockaddr * , int , int ) 
sock_no_socketpair int sock_no_socketpair ( s#socket * , s#socket * ) 
sock_no_accept int sock_no_accept ( s#socket * , s#socket * , int , t#bool ) 
sock_no_getname int sock_no_getname ( s#socket * , s#sockaddr * , int * , int ) 
sock_no_poll unsigned int sock_no_poll ( s#file * , s#socket * , s#poll_table_struct * ) 
sock_no_ioctl int sock_no_ioctl ( s#socket * , unsigned int , unsigned long ) 
sock_no_listen int sock_no_listen ( s#socket * , int ) 
sock_no_shutdown int sock_no_shutdown ( s#socket * , int ) 
sock_no_setsockopt int sock_no_setsockopt ( s#socket * , int , int , char * , unsigned int ) 
sock_no_getsockopt int sock_no_getsockopt ( s#socket * , int , int , char * , int * ) 
sock_no_sendmsg int sock_no_sendmsg ( s#socket * , s#msghdr * , t#size_t ) 
sock_no_sendmsg_locked int sock_no_sendmsg_locked ( s#sock * , s#msghdr * , t#size_t ) 
sock_no_recvmsg int sock_no_recvmsg ( s#socket * , s#msghdr * , t#size_t , int ) 
sock_no_mmap int sock_no_mmap ( s#file * , s#socket * , s#vm_area_struct * ) 
sock_no_sendpage t#ssize_t sock_no_sendpage ( s#socket * , s#page * , int , t#size_t , int ) 
sock_no_sendpage_locked t#ssize_t sock_no_sendpage_locked ( s#sock * , s#page * , int , t#size_t , int ) 
sk_send_sigurg void sk_send_sigurg ( s#sock * ) 
sk_reset_timer void sk_reset_timer ( s#sock * , s#timer_list * , unsigned long ) 
sk_stop_timer void sk_stop_timer ( s#sock * , s#timer_list * ) 
sock_init_data void sock_init_data ( s#socket * , s#sock * ) 
lock_sock_nested void lock_sock_nested ( s#sock * , int ) 
release_sock void release_sock ( s#sock * ) 
lock_sock_fast t#bool lock_sock_fast ( s#sock * ) 
sock_get_timestamp int sock_get_timestamp ( s#sock * , s#timeval * ) 
sock_get_timestampns int sock_get_timestampns ( s#sock * , s#timespec * ) 
sock_recv_errqueue int sock_recv_errqueue ( s#sock * , s#msghdr * , int , int , int ) 
sock_common_getsockopt int sock_common_getsockopt ( s#socket * , int , int , char * , int * ) 
compat_sock_common_getsockopt int compat_sock_common_getsockopt ( s#socket * , int , int , char * , int * ) 
sock_common_recvmsg int sock_common_recvmsg ( s#socket * , s#msghdr * , t#size_t , int ) 
sock_common_setsockopt int sock_common_setsockopt ( s#socket * , int , int , char * , unsigned int ) 
compat_sock_common_setsockopt int compat_sock_common_setsockopt ( s#socket * , int , int , char * , unsigned int ) 
sk_common_release void sk_common_release ( s#sock * ) 
sock_prot_inuse_add void sock_prot_inuse_add ( s#net * , s#proto * , int ) 
sock_prot_inuse_get int sock_prot_inuse_get ( s#net * , s#proto * ) 
proto_register int proto_register ( s#proto * , int ) 
proto_unregister void proto_unregister ( s#proto * ) 
sock_load_diag_module int sock_load_diag_module ( int , int ) 
sk_busy_loop_end t#bool sk_busy_loop_end ( void * , unsigned long ) 

/* net/core/sock_diag.o */
s##posix_acl
s##vfsmount
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##sec_path
s##workqueue_struct
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##kmem_cache
s##xfrm_state
s##lwtunnel_state
s##rtable
s##rt6_info
s##dn_route
s##ndisc_ops
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##phy_device
s##sfp_bus
s##prot_inuse
s##ipv4_devconf
s##fib_table
s##inet_peer_base
s##xt_table
s##inet_hashinfo
s##ipv6_devconf
s##rt6_statistics
s##fib6_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##mempolicy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sock_reuseport
sock_diag_check_cookie int sock_diag_check_cookie ( s#sock * , const t#__u32 * ) 
sock_diag_save_cookie void sock_diag_save_cookie ( s#sock * , t#__u32 * ) 
sock_diag_put_meminfo int sock_diag_put_meminfo ( s#sock * , s#sk_buff * , int ) 
sock_diag_put_filterinfo int sock_diag_put_filterinfo ( t#bool , s#sock * , s#sk_buff * , int ) 
sock_diag_register_inet_compat void sock_diag_register_inet_compat ( int ( * ) ( s#sk_buff * , s#nlmsghdr * ) ) 
sock_diag_unregister_inet_compat void sock_diag_unregister_inet_compat ( int ( * ) ( s#sk_buff * , s#nlmsghdr * ) ) 
s#sock_diag_handler struct sock_diag_handler { t#__u8 family ; int ( * dump ) ( s#sk_buff * , s#nlmsghdr * ) ; int ( * get_info ) ( s#sk_buff * , s#sock * ) ; int ( * destroy ) ( s#sk_buff * , s#nlmsghdr * ) ; } 
sock_diag_register int sock_diag_register ( const s#sock_diag_handler * ) 
sock_diag_unregister void sock_diag_unregister ( const s#sock_diag_handler * ) 
sock_diag_destroy int sock_diag_destroy ( s#sock * , int ) 

/* net/core/sock_reuseport.o */
s##posix_acl
s##vfsmount
s##module
s##device_private
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##sec_path
s##workqueue_struct
s##udp_tunnel_info
s##btf
s##bpf_verifier_env
s##xdp_umem
s##switchdev_ops
s##l3mdev_ops
s##ndisc_ops
s##xfrm_state
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##kmem_cache
s##xt_table
s##inet_hashinfo
s##fib_notifier_ops
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##lwtunnel_state
s##rtable
s##dn_route
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##bpf_cgroup_storage_map
s##cgroup_taskset
s##eventfd_ctx
s##mempolicy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##kernfs_open_node
s##kernfs_iattrs
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##request_sock_ops
s##timewait_sock_ops
s##udp_table
s##raw_hashinfo
s##xfrm_policy
reuseport_alloc extern int reuseport_alloc ( s#sock * ) 
reuseport_detach_sock extern void reuseport_detach_sock ( s#sock * ) 
reuseport_select_sock extern s#sock * reuseport_select_sock ( s#sock * , t#u32 , s#sk_buff * , int ) 
reuseport_attach_prog extern s#bpf_prog * reuseport_attach_prog ( s#sock * , s#bpf_prog * ) 

/* net/core/stream.o */
s##posix_acl
s##vfsmount
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##sec_path
s##workqueue_struct
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##kmem_cache
s##xfrm_state
s##lwtunnel_state
s##rtable
s##rt6_info
s##dn_route
s##ndisc_ops
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##phy_device
s##sfp_bus
s##prot_inuse
s##ipv4_devconf
s##fib_table
s##inet_peer_base
s##xt_table
s##inet_hashinfo
s##ipv6_devconf
s##rt6_statistics
s##fib6_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##mempolicy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sock_reuseport
sk_stream_wait_connect int sk_stream_wait_connect ( s#sock * , long * ) 
sk_stream_wait_close void sk_stream_wait_close ( s#sock * , long ) 
sk_stream_wait_memory int sk_stream_wait_memory ( s#sock * , long * ) 
sk_stream_error int sk_stream_error ( s#sock * , int , int ) 
sk_stream_kill_queues void sk_stream_kill_queues ( s#sock * ) 

/* net/core/tso.o */
s##proc_ns_operations
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##kmem_cache
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##bpf_prog_aux
s##xfrm_policy
s##workqueue_struct
s##xfrm_state
s##lwtunnel_state
s##uncached_list
s##rt6_info
s##dn_route
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_dir_entry
s##uevent_sock
s##prot_inuse
s##ipv4_devconf
s##xt_table
s##rt6_statistics
s##fib6_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##nf_hook_entry
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##udp_tunnel_info
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##prefix_info
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
s##sec_path
tso_count_descs int tso_count_descs ( s#sk_buff * ) 
s#tso_t struct tso_t { int next_frag_idx ; void * data ; t#size_t size ; t#u16 ip_id ; t#bool ipv6 ; t#u32 tcp_seq ; } 
tso_build_hdr void tso_build_hdr ( s#sk_buff * , char * , s#tso_t * , int , t#bool ) 
tso_build_data void tso_build_data ( s#sk_buff * , s#tso_t * , int ) 
tso_start void tso_start ( s#sk_buff * , s#tso_t * ) 

/* net/core/utils.o */
net_ratelimit int net_ratelimit ( void ) 
in_aton extern t#__be32 in_aton ( const char * ) 
in4_pton extern int in4_pton ( const char * , int , t#u8 * , int , const char * * ) 
in6_pton extern int in6_pton ( const char * , int , t#u8 * , int , const char * * ) 
s##proc_ns_operations
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##workqueue_struct
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##kmem_cache
s##xfrm_state
s##lwtunnel_state
s##rtable
s##rt6_info
s##dn_route
s##prefix_info
s##proc_dir_entry
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##phy_device
s##sfp_bus
s##sec_path
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##key_user
s##key_type
s##assoc_array_ptr
s##uevent_sock
s##prot_inuse
s##ipv4_devconf
s##fib_table
s##inet_peer_base
s##xt_table
s##rt6_statistics
s##fib6_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
inet_pton_with_scope extern int inet_pton_with_scope ( s#net * , unsigned short , const char * , const char * , s#__kernel_sockaddr_storage * ) 
inet_addr_is_any extern t#bool inet_addr_is_any ( s#sockaddr * ) 
inet_proto_csum_replace4 void inet_proto_csum_replace4 ( t#__sum16 * , s#sk_buff * , t#__be32 , t#__be32 , t#bool ) 
inet_proto_csum_replace16 void inet_proto_csum_replace16 ( t#__sum16 * , s#sk_buff * , const t#__be32 * , const t#__be32 * , t#bool ) 
inet_proto_csum_replace_by_diff void inet_proto_csum_replace_by_diff ( t#__sum16 * , s#sk_buff * , t#__wsum , t#bool ) 

/* net/core/xdp.o */
s##sock
s##sec_path
s##neigh_parms
s##neighbour
s##module
s##udp_tunnel_info
s##vfsmount
s##posix_acl
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##kmem_cache
s##xt_table
s##inet_hashinfo
s##fib_notifier_ops
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##nf_hook_entry
s##ebt_table
s##workqueue_struct
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_cgroup_storage_map
s##cgroup_taskset
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##btf
s##bpf_verifier_env
s##xdp_umem
s##switchdev_ops
s##l3mdev_ops
s##ndisc_ops
s##xfrm_state
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
xdp_rxq_info_unreg_mem_model void xdp_rxq_info_unreg_mem_model ( s#xdp_rxq_info * ) 
xdp_rxq_info_unreg void xdp_rxq_info_unreg ( s#xdp_rxq_info * ) 
xdp_rxq_info_reg int xdp_rxq_info_reg ( s#xdp_rxq_info * , s#net_device * , t#u32 ) 
xdp_rxq_info_unused void xdp_rxq_info_unused ( s#xdp_rxq_info * ) 
xdp_rxq_info_is_reg t#bool xdp_rxq_info_is_reg ( s#xdp_rxq_info * ) 
e#xdp_mem_type enum xdp_mem_type { MEM_TYPE_PAGE_SHARED = 0 , MEM_TYPE_PAGE_ORDER0 , MEM_TYPE_PAGE_POOL , MEM_TYPE_ZERO_COPY , MEM_TYPE_MAX , } 
xdp_rxq_info_reg_mem_model int xdp_rxq_info_reg_mem_model ( s#xdp_rxq_info * , e#xdp_mem_type , void * ) 
xdp_return_frame void xdp_return_frame ( s#xdp_frame * ) 
xdp_return_frame_rx_napi void xdp_return_frame_rx_napi ( s#xdp_frame * ) 
xdp_return_buff void xdp_return_buff ( s#xdp_buff * ) 
s#xdp_attachment_info struct xdp_attachment_info { s#bpf_prog * prog ; t#u32 flags ; } 
xdp_attachment_query int xdp_attachment_query ( s#xdp_attachment_info * , s#netdev_bpf * ) 
xdp_attachment_flags_ok t#bool xdp_attachment_flags_ok ( s#xdp_attachment_info * , s#netdev_bpf * ) 
xdp_attachment_setup void xdp_attachment_setup ( s#xdp_attachment_info * , s#netdev_bpf * ) 
xdp_convert_zc_to_xdp_frame s#xdp_frame * xdp_convert_zc_to_xdp_frame ( s#xdp_buff * ) 

/* net/dcb/dcbevent.o */
register_dcbevent_notifier int register_dcbevent_notifier ( s#notifier_block * ) 
unregister_dcbevent_notifier int unregister_dcbevent_notifier ( s#notifier_block * ) 

/* net/dcb/dcbnl.o */
s##posix_acl
s##vfsmount
s##module
s##device_private
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##kmem_cache
s##xt_table
s##inet_hashinfo
s##fib_notifier_ops
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##lwtunnel_state
s##rtable
s##dn_route
s##workqueue_struct
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##nf_hook_entry
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##mempolicy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##kernfs_open_node
s##kernfs_iattrs
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##request_sock_ops
s##timewait_sock_ops
s##udp_table
s##raw_hashinfo
s##bpf_prog_aux
s##xfrm_policy
s##sock_reuseport
s##sec_path
s##udp_tunnel_info
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##l3mdev_ops
s##ndisc_ops
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
dcbnl_ieee_notify int dcbnl_ieee_notify ( s#net_device * , int , int , t#u32 , t#u32 ) 
dcbnl_cee_notify int dcbnl_cee_notify ( s#net_device * , int , int , t#u32 , t#u32 ) 
dcb_getapp t#u8 dcb_getapp ( s#net_device * , s#dcb_app * ) 
dcb_setapp int dcb_setapp ( s#net_device * , s#dcb_app * ) 
dcb_ieee_getapp_mask t#u8 dcb_ieee_getapp_mask ( s#net_device * , s#dcb_app * ) 
dcb_ieee_setapp int dcb_ieee_setapp ( s#net_device * , s#dcb_app * ) 
dcb_ieee_delapp int dcb_ieee_delapp ( s#net_device * , s#dcb_app * ) 
s#dcb_ieee_app_prio_map struct dcb_ieee_app_prio_map { t#u64 map [ 8 ] ; } 
dcb_ieee_getapp_prio_dscp_mask_map void dcb_ieee_getapp_prio_dscp_mask_map ( const s#net_device * , s#dcb_ieee_app_prio_map * ) 
s#dcb_ieee_app_dscp_map struct dcb_ieee_app_dscp_map { t#u8 map [ 64 ] ; } 
dcb_ieee_getapp_dscp_prio_mask_map void dcb_ieee_getapp_dscp_prio_mask_map ( const s#net_device * , s#dcb_ieee_app_dscp_map * ) 
dcb_ieee_getapp_default_prio_mask t#u8 dcb_ieee_getapp_default_prio_mask ( const s#net_device * ) 

/* net/dns_resolver/dns_query.o */
dns_query extern int dns_query ( const char * , const char * , t#size_t , const char * , char * * , t#time64_t * ) 

/* net/ethernet/eth.o */
s##proc_ns_operations
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##kmem_cache
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##bpf_prog_aux
s##xfrm_policy
s##workqueue_struct
s##xfrm_state
s##lwtunnel_state
s##uncached_list
s##rt6_info
s##dn_route
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##device_private
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##iommu_group
s##iommu_fwspec
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_dir_entry
s##uevent_sock
s##prot_inuse
s##ipv4_devconf
s##xt_table
s##rt6_statistics
s##fib6_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##nf_hook_entry
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##udp_tunnel_info
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##prefix_info
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##net_rate_estimator
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
s##sec_path
eth_header int eth_header ( s#sk_buff * , s#net_device * , unsigned short , const void * , const void * , unsigned ) 
eth_get_headlen t#u32 eth_get_headlen ( void * , unsigned int ) 
eth_type_trans t#__be16 eth_type_trans ( s#sk_buff * , s#net_device * ) 
eth_header_parse int eth_header_parse ( const s#sk_buff * , unsigned char * ) 
eth_header_cache int eth_header_cache ( const s#neighbour * , s#hh_cache * , t#__be16 ) 
eth_header_cache_update void eth_header_cache_update ( s#hh_cache * , const s#net_device * , const unsigned char * ) 
eth_prepare_mac_addr_change int eth_prepare_mac_addr_change ( s#net_device * , void * ) 
eth_commit_mac_addr_change void eth_commit_mac_addr_change ( s#net_device * , void * ) 
eth_mac_addr int eth_mac_addr ( s#net_device * , void * ) 
eth_change_mtu int eth_change_mtu ( s#net_device * , int ) 
eth_validate_addr int eth_validate_addr ( s#net_device * ) 
ether_setup void ether_setup ( s#net_device * ) 
alloc_etherdev_mqs s#net_device * alloc_etherdev_mqs ( int , unsigned int , unsigned int ) 
devm_alloc_etherdev_mqs s#net_device * devm_alloc_etherdev_mqs ( s#device * , int , unsigned int , unsigned int ) 
sysfs_format_mac extern t#ssize_t sysfs_format_mac ( char * , const unsigned char * , int ) 
eth_gro_receive s#sk_buff * eth_gro_receive ( s#list_head * , s#sk_buff * ) 
eth_gro_complete int eth_gro_complete ( s#sk_buff * , int ) 
eth_platform_get_mac_address int eth_platform_get_mac_address ( s#device * , t#u8 * ) 

/* net/ife/ife.o */
s##neigh_parms
s##neighbour
s##sock
s##vfsmount
s##posix_acl
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##kmem_cache
s##xt_table
s##inet_hashinfo
s##fib_notifier_ops
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##nf_hook_entry
s##ebt_table
s##workqueue_struct
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##bpf_prog_array
s##cgroup_taskset
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##udp_tunnel_info
s##bpf_prog
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##l3mdev_ops
s##ndisc_ops
s##xfrm_state
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##net_rate_estimator
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
s##sec_path
ife_encode void * ife_encode ( s#sk_buff * , t#u16 ) 
ife_decode void * ife_decode ( s#sk_buff * , t#u16 * ) 
ife_tlv_meta_decode void * ife_tlv_meta_decode ( void * , const void * , t#u16 * , t#u16 * , t#u16 * ) 
ife_tlv_meta_next void * ife_tlv_meta_next ( void * ) 
ife_tlv_meta_encode int ife_tlv_meta_encode ( void * , t#u16 , t#u16 , const void * ) 

/* net/ipv4/af_inet.o */
s##posix_acl
s##vfsmount
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##kmem_cache
s##fs_pin
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##workqueue_struct
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##uncached_list
s##dn_route
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##phy_device
s##sfp_bus
s##prot_inuse
s##xt_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##netns_ipvs
s##mpls_route
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##mempolicy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s#raw_hashinfo struct raw_hashinfo { t#rwlock_t lock ; s#hlist_head ht [ 256 ] ; } 
s##sock_reuseport
inet_sock_destruct void inet_sock_destruct ( s#sock * ) 
inet_listen int inet_listen ( s#socket * , int ) 
inet_release int inet_release ( s#socket * ) 
inet_bind int inet_bind ( s#socket * , s#sockaddr * , int ) 
inet_dgram_connect int inet_dgram_connect ( s#socket * , s#sockaddr * , int , int ) 
__inet_stream_connect int __inet_stream_connect ( s#socket * , s#sockaddr * , int , int , int ) 
inet_stream_connect int inet_stream_connect ( s#socket * , s#sockaddr * , int , int ) 
inet_accept int inet_accept ( s#socket * , s#socket * , int , t#bool ) 
inet_getname int inet_getname ( s#socket * , s#sockaddr * , int * , int ) 
inet_sendmsg int inet_sendmsg ( s#socket * , s#msghdr * , t#size_t ) 
inet_sendpage t#ssize_t inet_sendpage ( s#socket * , s#page * , int , t#size_t , int ) 
inet_recvmsg int inet_recvmsg ( s#socket * , s#msghdr * , t#size_t , int ) 
inet_shutdown int inet_shutdown ( s#socket * , int ) 
inet_ioctl int inet_ioctl ( s#socket * , unsigned int , unsigned long ) 
inet_stream_ops extern const s#proto_ops inet_stream_ops 
inet_dgram_ops extern const s#proto_ops inet_dgram_ops 
s#inet_protosw struct inet_protosw { s#list_head list ; unsigned short type ; unsigned short protocol ; s#proto * prot ; const s#proto_ops * ops ; unsigned char flags ; } 
inet_register_protosw void inet_register_protosw ( s#inet_protosw * ) 
inet_unregister_protosw void inet_unregister_protosw ( s#inet_protosw * ) 
inet_sk_rebuild_header int inet_sk_rebuild_header ( s#sock * ) 
inet_gso_segment s#sk_buff * inet_gso_segment ( s#sk_buff * , t#netdev_features_t ) 
inet_gro_receive s#sk_buff * inet_gro_receive ( s#list_head * , s#sk_buff * ) 
inet_current_timestamp t#__be32 inet_current_timestamp ( void ) 
inet_gro_complete int inet_gro_complete ( s#sk_buff * , int ) 
inet_ctl_sock_create int inet_ctl_sock_create ( s#sock * * , unsigned short , unsigned short , unsigned char , s#net * ) 
snmp_get_cpu_field t#u64 snmp_get_cpu_field ( void * , int , int ) 
snmp_fold_field unsigned long snmp_fold_field ( void * , int ) 

/* net/ipv4/arp.o */
s##posix_acl
s##vfsmount
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##prot_inuse
s##kmem_cache
s##xt_table
s##xfrm_state
s##uncached_list
s##dn_route
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##workqueue_struct
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##netns_ipvs
s##mpls_route
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##mempolicy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##blk_plug
s##reclaim_state
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##udp_table
s##raw_hashinfo
s##bpf_prog_aux
s##xfrm_policy
s##sock_reuseport
s##sec_path
s##udp_tunnel_info
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##ip_mc_list
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
arp_tbl extern s#neigh_table arp_tbl 
arp_send void arp_send ( int , int , t#__be32 , s#net_device * , t#__be32 , const unsigned char * , const unsigned char * , const unsigned char * ) 
arp_create s#sk_buff * arp_create ( int , int , t#__be32 , s#net_device * , t#__be32 , const unsigned char * , const unsigned char * , const unsigned char * ) 
arp_xmit void arp_xmit ( s#sk_buff * ) 

/* net/ipv4/datagram.o */
s##posix_acl
s##vfsmount
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##sec_path
s##workqueue_struct
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##kmem_cache
s##xfrm_state
s##lwtunnel_state
s##uncached_list
s##rt6_info
s##dn_route
s##prefix_info
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##phy_device
s##sfp_bus
s##prot_inuse
s##ipv4_devconf
s##xt_table
s##inet_hashinfo
s##rt6_statistics
s##fib6_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##mempolicy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sock_reuseport
__ip4_datagram_connect int __ip4_datagram_connect ( s#sock * , s#sockaddr * , int ) 
ip4_datagram_connect int ip4_datagram_connect ( s#sock * , s#sockaddr * , int ) 
ip4_datagram_release_cb void ip4_datagram_release_cb ( s#sock * ) 

/* net/ipv4/devinet.o */
s##posix_acl
s##vfsmount
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##prot_inuse
s##kmem_cache
s##xt_table
s##inet_hashinfo
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##lwtunnel_state
s##uncached_list
s##dn_route
s##workqueue_struct
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##nf_hook_entry
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##mempolicy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##blk_plug
s##reclaim_state
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##udp_table
s##raw_hashinfo
s##bpf_prog_aux
s##xfrm_policy
s##sock_reuseport
s##sec_path
s##udp_tunnel_info
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
__ip_dev_find s#net_device * __ip_dev_find ( s#net * , t#__be32 , t#bool ) 
in_dev_finish_destroy void in_dev_finish_destroy ( s#in_device * ) 
inetdev_by_index s#in_device * inetdev_by_index ( s#net * , int ) 
inet_select_addr t#__be32 inet_select_addr ( const s#net_device * , t#__be32 , int ) 
inet_confirm_addr t#__be32 inet_confirm_addr ( s#net * , s#in_device * , t#__be32 , t#__be32 , int ) 
register_inetaddr_notifier int register_inetaddr_notifier ( s#notifier_block * ) 
unregister_inetaddr_notifier int unregister_inetaddr_notifier ( s#notifier_block * ) 
register_inetaddr_validator_notifier int register_inetaddr_validator_notifier ( s#notifier_block * ) 
unregister_inetaddr_validator_notifier int unregister_inetaddr_validator_notifier ( s#notifier_block * ) 

/* net/ipv4/esp4.o */
s##proc_ns_operations
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##kmem_cache
s##fs_pin
s##nlm_lockowner
s##nfs4_lock_state
s##workqueue_struct
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##lwtunnel_state
s##uncached_list
s##proc_dir_entry
s##dn_route
s##prefix_info
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##phy_device
s##sfp_bus
s##inet_hashinfo
s##raw_hashinfo
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##key_user
s##key_type
s##assoc_array_ptr
s##uevent_sock
s##prot_inuse
s##ipv4_devconf
s##xt_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s#ip_esp_hdr struct ip_esp_hdr { t#__be32 spi ; t#__be32 seq_no ; t#__u8 enc_data [ 0 ] ; } 
s#esp_info struct esp_info { s#ip_esp_hdr * esph ; t#__be64 seqno ; int tfclen ; int tailen ; int plen ; int clen ; int len ; int nfrags ; t#__u8 proto ; t#bool inplace ; } 
esp_output_head int esp_output_head ( s#xfrm_state * , s#sk_buff * , s#esp_info * ) 
esp_output_tail int esp_output_tail ( s#xfrm_state * , s#sk_buff * , s#esp_info * ) 
esp_input_done2 int esp_input_done2 ( s#sk_buff * , int ) 

/* net/ipv4/fib_frontend.o */
s##proc_ns_operations
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##kmem_cache
s##fs_pin
s##nlm_lockowner
s##nfs4_lock_state
s##workqueue_struct
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##uncached_list
s##proc_dir_entry
s##dn_route
s##prefix_info
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##ip_mc_list
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##phy_device
s##sfp_bus
s##udp_table
s##raw_hashinfo
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##key_user
s##key_type
s##assoc_array_ptr
s##uevent_sock
s##prot_inuse
s##xt_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
fib_new_table s#fib_table * fib_new_table ( s#net * , t#u32 ) 
inet_addr_type_table unsigned int inet_addr_type_table ( s#net * , t#__be32 , t#u32 ) 
inet_addr_type unsigned int inet_addr_type ( s#net * , t#__be32 ) 
inet_dev_addr_type unsigned int inet_dev_addr_type ( s#net * , const s#net_device * , t#__be32 ) 
inet_addr_type_dev_table unsigned int inet_addr_type_dev_table ( s#net * , const s#net_device * , t#__be32 ) 

/* net/ipv4/fib_rules.o */
s##proc_ns_operations
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##workqueue_struct
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##kmem_cache
s##xfrm_state
s##lwtunnel_state
s##uncached_list
s##rt6_info
s##dn_route
s##prefix_info
s##proc_dir_entry
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##ip_mc_list
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##phy_device
s##sfp_bus
s##sec_path
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##key_user
s##key_type
s##assoc_array_ptr
s##uevent_sock
s##prot_inuse
s##xt_table
s##rt6_statistics
s##fib6_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
fib4_rule_default t#bool fib4_rule_default ( const s#fib_rule * ) 
E#__RTAX_MAX 17 
s#dst_metrics struct dst_metrics { t#u32 metrics [ ( E#__RTAX_MAX - 1 ) ] ; t#atomic_t refcnt ; } 
s#fib_nh_exception struct fib_nh_exception { s#fib_nh_exception * fnhe_next ; int fnhe_genid ; t#__be32 fnhe_daddr ; t#u32 fnhe_pmtu ; t#bool fnhe_mtu_locked ; t#__be32 fnhe_gw ; unsigned long fnhe_expires ; s#rtable * fnhe_rth_input ; s#rtable * fnhe_rth_output ; unsigned long fnhe_stamp ; s#callback_head rcu ; } 
s#fnhe_hash_bucket struct fnhe_hash_bucket { s#fib_nh_exception * chain ; } 
s#fib_nh struct fib_nh { s#net_device * nh_dev ; s#hlist_node nh_hash ; s#fib_info * nh_parent ; unsigned int nh_flags ; unsigned char nh_scope ; int nh_weight ; t#atomic_t nh_upper_bound ; t#__u32 nh_tclassid ; int nh_oif ; t#__be32 nh_gw ; t#__be32 nh_saddr ; int nh_saddr_genid ; s#rtable * * nh_pcpu_rth_output ; s#rtable * nh_rth_input ; s#fnhe_hash_bucket * nh_exceptions ; s#lwtunnel_state * nh_lwtstate ; } 
s#fib_info struct fib_info { s#hlist_node fib_hash ; s#hlist_node fib_lhash ; s#net * fib_net ; int fib_treeref ; t#atomic_t fib_clntref ; unsigned int fib_flags ; unsigned char fib_dead ; unsigned char fib_protocol ; unsigned char fib_scope ; unsigned char fib_type ; t#__be32 fib_prefsrc ; t#u32 fib_tb_id ; t#u32 fib_priority ; s#dst_metrics * fib_metrics ; int fib_nhs ; int fib_weight ; unsigned int fib_offload_cnt ; s#callback_head rcu ; s#fib_nh fib_nh [ 0 ] ; } 
s#fib_result struct fib_result { t#__be32 prefix ; unsigned char prefixlen ; unsigned char nh_sel ; unsigned char type ; unsigned char scope ; t#u32 tclassid ; s#fib_info * fi ; s#fib_table * table ; s#hlist_head * fa_head ; } 
__fib_lookup int __fib_lookup ( s#net * , s#flowi4 * , s#fib_result * , unsigned int ) 

/* net/ipv4/fib_semantics.o */
s##proc_ns_operations
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##workqueue_struct
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##kmem_cache
s##xfrm_state
s##uncached_list
s##rt6_info
s##dn_route
s##prefix_info
s##proc_dir_entry
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##ip_mc_list
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##phy_device
s##sfp_bus
s##sec_path
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##key_user
s##key_type
s##assoc_array_ptr
s##uevent_sock
s##prot_inuse
s##xt_table
s##rt6_statistics
s##fib6_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
free_fib_info void free_fib_info ( s#fib_info * ) 
fib_select_path void fib_select_path ( s#net * , s#fib_result * , s#flowi4 * , const s#sk_buff * ) 

/* net/ipv4/fib_trie.o */
s##proc_ns_operations
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##workqueue_struct
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##kmem_cache
s##xfrm_state
s##lwtunnel_state
s##uncached_list
s##rt6_info
s##dn_route
s##prefix_info
s##proc_dir_entry
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##ip_mc_list
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##phy_device
s##sfp_bus
s##sec_path
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##key_user
s##key_type
s##assoc_array_ptr
s##uevent_sock
s##prot_inuse
s##xt_table
s##rt6_statistics
s##fib6_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
fib_table_lookup int fib_table_lookup ( s#fib_table * , const s#flowi4 * , s#fib_result * , int ) 

/* net/ipv4/fou.o */
s#ip_tunnel_encap struct ip_tunnel_encap { t#u16 type ; t#u16 flags ; t#__be16 sport ; t#__be16 dport ; } 
fou_encap_hlen t#size_t fou_encap_hlen ( s#ip_tunnel_encap * ) 
gue_encap_hlen t#size_t gue_encap_hlen ( s#ip_tunnel_encap * ) 
s##proc_ns_operations
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##kmem_cache
s##fs_pin
s##nlm_lockowner
s##nfs4_lock_state
s##inet_hashinfo
s##raw_hashinfo
s##bpf_prog_aux
s##workqueue_struct
s##uncached_list
s##proc_dir_entry
s##dn_route
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##key_user
s##key_type
s##assoc_array_ptr
s##uevent_sock
s##prot_inuse
s##ipv4_devconf
s##xt_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##nf_hook_entry
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##netns_ipvs
s##mpls_route
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
__fou_build_header int __fou_build_header ( s#sk_buff * , s#ip_tunnel_encap * , t#u8 * , t#__be16 * , int ) 
fou_build_header int fou_build_header ( s#sk_buff * , s#ip_tunnel_encap * , t#u8 * , s#flowi4 * ) 
__gue_build_header int __gue_build_header ( s#sk_buff * , s#ip_tunnel_encap * , t#u8 * , t#__be16 * , int ) 
gue_build_header int gue_build_header ( s#sk_buff * , s#ip_tunnel_encap * , t#u8 * , s#flowi4 * ) 

/* net/ipv4/gre_demux.o */
s##proc_ns_operations
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##kmem_cache
s##fs_pin
s##nlm_lockowner
s##nfs4_lock_state
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##bpf_prog_aux
s##workqueue_struct
s##uncached_list
s##proc_dir_entry
s##dn_route
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##key_user
s##key_type
s##assoc_array_ptr
s##uevent_sock
s##prot_inuse
s##ipv4_devconf
s##xt_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##nf_hook_entry
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##netns_ipvs
s##mpls_route
s##udp_tunnel_info
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
s#gre_protocol struct gre_protocol { int ( * handler ) ( s#sk_buff * ) ; void ( * err_handler ) ( s#sk_buff * , t#u32 ) ; } 
gre_add_protocol int gre_add_protocol ( const s#gre_protocol * , t#u8 ) 
gre_del_protocol int gre_del_protocol ( const s#gre_protocol * , t#u8 ) 
s#tnl_ptk_info struct tnl_ptk_info { t#__be16 flags ; t#__be16 proto ; t#__be32 key ; t#__be32 seq ; int hdr_len ; } 
gre_parse_header int gre_parse_header ( s#sk_buff * , s#tnl_ptk_info * , t#bool * , t#__be16 , int ) 

/* net/ipv4/icmp.o */
s#icmp_err struct icmp_err { int errno ; unsigned int fatal : 1 ; } 
icmp_err_convert extern const s#icmp_err icmp_err_convert [ ] 
icmp_global_allow t#bool icmp_global_allow ( void ) 
s##proc_ns_operations
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##kmem_cache
s##fs_pin
s##nlm_lockowner
s##nfs4_lock_state
s##bpf_prog_aux
s##workqueue_struct
s##lwtunnel_state
s##uncached_list
s##proc_dir_entry
s##dn_route
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##key_user
s##key_type
s##assoc_array_ptr
s##uevent_sock
s##prot_inuse
s##xt_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##udp_tunnel_info
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##prefix_info
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##ip_mc_list
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
s#ip_options struct ip_options { t#__be32 faddr ; t#__be32 nexthop ; unsigned char optlen ; unsigned char srr ; unsigned char rr ; unsigned char ts ; unsigned char is_strictroute : 1 , srr_is_hit : 1 , is_changed : 1 , rr_needaddr : 1 , ts_needtime : 1 , ts_needaddr : 1 ; unsigned char router_alert ; unsigned char cipso ; unsigned char __pad2 ; unsigned char __data [ 0 ] ; } 
__icmp_send void __icmp_send ( s#sk_buff * , int , int , t#__be32 , const s#ip_options * ) 
icmp_send void icmp_send ( s#sk_buff * , int , int , t#__be32 ) 

/* net/ipv4/igmp.o */
s##posix_acl
s##vfsmount
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##prot_inuse
s##kmem_cache
s##xt_table
s##inet_hashinfo
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##lwtunnel_state
s##uncached_list
s##dn_route
s##workqueue_struct
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##mempolicy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##blk_plug
s##reclaim_state
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##udp_table
s##raw_hashinfo
s##bpf_prog_aux
s##xfrm_policy
s##sock_reuseport
s##sec_path
s##udp_tunnel_info
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##prefix_info
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
ip_mc_inc_group extern void ip_mc_inc_group ( s#in_device * , t#__be32 ) 
ip_mc_check_igmp int ip_mc_check_igmp ( s#sk_buff * , s#sk_buff * * ) 
ip_mc_dec_group extern void ip_mc_dec_group ( s#in_device * , t#__be32 ) 
s#ip_mreqn struct ip_mreqn { s#in_addr imr_multiaddr ; s#in_addr imr_address ; int imr_ifindex ; } 
ip_mc_join_group extern int ip_mc_join_group ( s#sock * , s#ip_mreqn * ) 
ip_mc_leave_group extern int ip_mc_leave_group ( s#sock * , s#ip_mreqn * ) 

/* net/ipv4/inet_connection_sock.o */
inet_csk_timer_bug_msg extern const char inet_csk_timer_bug_msg [ ] 
s##posix_acl
s##vfsmount
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##kmem_cache
s##fs_pin
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##workqueue_struct
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##lwtunnel_state
s##uncached_list
s##dn_route
s##prefix_info
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##phy_device
s##sfp_bus
s##prot_inuse
s##ipv4_devconf
s##xt_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##mempolicy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##udp_table
s##raw_hashinfo
inet_rcv_saddr_equal int inet_rcv_saddr_equal ( const s#sock * , const s#sock * , t#bool ) 
inet_get_local_port_range void inet_get_local_port_range ( s#net * , int * , int * ) 
inet_csk_get_port int inet_csk_get_port ( s#sock * , unsigned short ) 
inet_csk_accept s#sock * inet_csk_accept ( s#sock * , int , int * , t#bool ) 
inet_csk_init_xmit_timers void inet_csk_init_xmit_timers ( s#sock * , void ( * ) ( unsigned long ) , void ( * ) ( unsigned long ) , void ( * ) ( unsigned long ) ) 
inet_csk_clear_xmit_timers void inet_csk_clear_xmit_timers ( s#sock * ) 
inet_csk_delete_keepalive_timer void inet_csk_delete_keepalive_timer ( s#sock * ) 
inet_csk_reset_keepalive_timer void inet_csk_reset_keepalive_timer ( s#sock * , unsigned long ) 
inet_csk_route_req s#dst_entry * inet_csk_route_req ( const s#sock * , s#flowi4 * , const s#request_sock * ) 
inet_csk_route_child_sock s#dst_entry * inet_csk_route_child_sock ( const s#sock * , s#sock * , const s#request_sock * ) 
inet_rtx_syn_ack int inet_rtx_syn_ack ( const s#sock * , s#request_sock * ) 
inet_csk_reqsk_queue_drop void inet_csk_reqsk_queue_drop ( s#sock * , s#request_sock * ) 
inet_csk_reqsk_queue_drop_and_put void inet_csk_reqsk_queue_drop_and_put ( s#sock * , s#request_sock * ) 
inet_csk_reqsk_queue_hash_add void inet_csk_reqsk_queue_hash_add ( s#sock * , s#request_sock * , unsigned long ) 
inet_csk_clone_lock s#sock * inet_csk_clone_lock ( const s#sock * , const s#request_sock * , const t#gfp_t ) 
inet_csk_destroy_sock void inet_csk_destroy_sock ( s#sock * ) 
inet_csk_prepare_forced_close void inet_csk_prepare_forced_close ( s#sock * ) 
inet_csk_listen_start int inet_csk_listen_start ( s#sock * , int ) 
inet_csk_reqsk_queue_add s#sock * inet_csk_reqsk_queue_add ( s#sock * , s#request_sock * , s#sock * ) 
inet_csk_complete_hashdance s#sock * inet_csk_complete_hashdance ( s#sock * , s#sock * , s#request_sock * , t#bool ) 
inet_csk_listen_stop void inet_csk_listen_stop ( s#sock * ) 
inet_csk_addr2sockaddr void inet_csk_addr2sockaddr ( s#sock * , s#sockaddr * ) 
inet_csk_compat_getsockopt int inet_csk_compat_getsockopt ( s#sock * , int , int , char * , int * ) 
inet_csk_compat_setsockopt int inet_csk_compat_setsockopt ( s#sock * , int , int , char * , unsigned int ) 
inet_csk_update_pmtu s#dst_entry * inet_csk_update_pmtu ( s#sock * , t#u32 ) 

/* net/ipv4/inet_diag.o */
s#inet_diag_sockid struct inet_diag_sockid { t#__be16 idiag_sport ; t#__be16 idiag_dport ; t#__be32 idiag_src [ 4 ] ; t#__be32 idiag_dst [ 4 ] ; t#__u32 idiag_if ; t#__u32 idiag_cookie [ 2 ] ; } 
s#inet_diag_msg struct inet_diag_msg { t#__u8 idiag_family ; t#__u8 idiag_state ; t#__u8 idiag_timer ; t#__u8 idiag_retrans ; s#inet_diag_sockid id ; t#__u32 idiag_expires ; t#__u32 idiag_rqueue ; t#__u32 idiag_wqueue ; t#__u32 idiag_uid ; t#__u32 idiag_inode ; } 
s##posix_acl
s##vfsmount
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##sec_path
s##workqueue_struct
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##kmem_cache
s##xfrm_state
s##lwtunnel_state
s##uncached_list
s##rt6_info
s##dn_route
s##prefix_info
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##phy_device
s##sfp_bus
s##prot_inuse
s##ipv4_devconf
s##xt_table
s##rt6_statistics
s##fib6_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##mempolicy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sock_reuseport
inet_diag_msg_common_fill void inet_diag_msg_common_fill ( s#inet_diag_msg * , s#sock * ) 
inet_diag_msg_attrs_fill int inet_diag_msg_attrs_fill ( s#sock * , s#sk_buff * , s#inet_diag_msg * , int , s#user_namespace * , t#bool ) 
s#in6_pktinfo struct in6_pktinfo { s#in6_addr ipi6_addr ; int ipi6_ifindex ; } 
s#ip6_sf_socklist struct ip6_sf_socklist { unsigned int sl_max ; unsigned int sl_count ; s#in6_addr sl_addr [ 0 ] ; } 
s#ipv6_mc_socklist struct ipv6_mc_socklist { s#in6_addr addr ; int ifindex ; s#ipv6_mc_socklist * next ; t#rwlock_t sflock ; unsigned int sfmode ; s#ip6_sf_socklist * sflist ; s#callback_head rcu ; } 
s#ipv6_ac_socklist struct ipv6_ac_socklist { s#in6_addr acl_addr ; int acl_ifindex ; s#ipv6_ac_socklist * acl_next ; } 
s#ipv6_opt_hdr struct ipv6_opt_hdr { t#__u8 nexthdr ; t#__u8 hdrlen ; } 
s#ipv6_rt_hdr struct ipv6_rt_hdr { t#__u8 nexthdr ; t#__u8 hdrlen ; t#__u8 type ; t#__u8 segments_left ; } 
s#ipv6_txoptions struct ipv6_txoptions { t#atomic_t refcnt ; int tot_len ; t#__u16 opt_flen ; t#__u16 opt_nflen ; s#ipv6_opt_hdr * hopopt ; s#ipv6_opt_hdr * dst0opt ; s#ipv6_rt_hdr * srcrt ; s#ipv6_opt_hdr * dst1opt ; s#callback_head rcu ; } 
s#ip6_flowlabel struct ip6_flowlabel { s#ip6_flowlabel * next ; t#__be32 label ; t#atomic_t users ; s#in6_addr dst ; s#ipv6_txoptions * opt ; unsigned long linger ; s#callback_head rcu ; t#u8 share ; union { s#pid * pid ; t#kuid_t uid ; } owner ; unsigned long lastuse ; unsigned long expires ; s#net * fl_net ; } 
s#ipv6_fl_socklist struct ipv6_fl_socklist { s#ipv6_fl_socklist * next ; s#ip6_flowlabel * fl ; s#callback_head rcu ; } 
s#inet6_cork struct inet6_cork { s#ipv6_txoptions * opt ; t#u8 hop_limit ; t#u8 tclass ; } 
s#ipv6_pinfo struct ipv6_pinfo { s#in6_addr saddr ; s#in6_pktinfo sticky_pktinfo ; const s#in6_addr * daddr_cache ; const s#in6_addr * saddr_cache ; t#__be32 flow_label ; t#__u32 frag_size ; t#__s16 hop_limit : 9 ; t#__u16 __unused_1 : 7 ; t#__s16 mcast_hops : 9 ; t#__u16 __unused_2 : 6 , mc_loop : 1 ; int ucast_oif ; int mcast_oif ; union { struct { t#__u16 srcrt : 1 , osrcrt : 1 , rxinfo : 1 , rxoinfo : 1 , rxhlim : 1 , rxohlim : 1 , hopopts : 1 , ohopopts : 1 , dstopts : 1 , odstopts : 1 , rxflow : 1 , rxtclass : 1 , rxpmtu : 1 , rxorigdstaddr : 1 , recvfragsize : 1 ; } bits ; t#__u16 all ; } rxopt ; t#__u16 recverr : 1 , sndflow : 1 , repflow : 1 , pmtudisc : 3 , padding : 1 , srcprefs : 3 , dontfrag : 1 , autoflowlabel : 1 , autoflowlabel_set : 1 ; t#__u8 min_hopcount ; t#__u8 tclass ; t#__be32 rcv_flowinfo ; t#__u32 dst_cookie ; t#__u32 rx_dst_cookie ; s#ipv6_mc_socklist * ipv6_mc_list ; s#ipv6_ac_socklist * ipv6_ac_list ; s#ipv6_fl_socklist * ipv6_fl_list ; s#ipv6_txoptions * opt ; s#sk_buff * pktoptions ; s#sk_buff * rxpmtu ; s#inet6_cork cork ; } 
s#ip_options_rcu struct ip_options_rcu { s#callback_head rcu ; s#ip_options opt ; } 
s##ip_mc_socklist
s#inet_cork struct inet_cork { unsigned int flags ; t#__be32 addr ; s#ip_options * opt ; unsigned int fragsize ; int length ; s#dst_entry * dst ; t#u8 tx_flags ; t#__u8 ttl ; t#__s16 tos ; char priority ; } 
s#inet_cork_full struct inet_cork_full { s#inet_cork base ; s#flowi fl ; } 
s#inet_sock struct inet_sock { s#sock sk ; s#ipv6_pinfo * pinet6 ; t#__be32 inet_saddr ; t#__s16 uc_ttl ; t#__u16 cmsg_flags ; t#__be16 inet_sport ; t#__u16 inet_id ; s#ip_options_rcu * inet_opt ; int rx_dst_ifindex ; t#__u8 tos ; t#__u8 min_ttl ; t#__u8 mc_ttl ; t#__u8 pmtudisc ; t#__u8 recverr : 1 , is_icsk : 1 , freebind : 1 , hdrincl : 1 , mc_loop : 1 , transparent : 1 , mc_all : 1 , nodefrag : 1 ; t#__u8 bind_address_no_port : 1 , defer_connect : 1 ; t#__u8 rcv_tos ; t#__u8 convert_csum ; int uc_index ; int mc_index ; t#__be32 mc_addr ; s#ip_mc_socklist * mc_list ; s#inet_cork_full cork ; } 
s#fastopen_queue struct fastopen_queue { s#request_sock * rskq_rst_head ; s#request_sock * rskq_rst_tail ; t#spinlock_t lock ; int qlen ; int max_qlen ; } 
s#request_sock_queue struct request_sock_queue { t#spinlock_t rskq_lock ; t#u8 rskq_defer_accept ; t#u32 synflood_warned ; t#atomic_t qlen ; t#atomic_t young ; s#request_sock * rskq_accept_head ; s#request_sock * rskq_accept_tail ; s#fastopen_queue fastopenq ; } 
s#inet_bind_bucket struct inet_bind_bucket { t#possible_net_t ib_net ; unsigned short port ; signed char fastreuse ; signed char fastreuseport ; t#kuid_t fastuid ; s#in6_addr fast_v6_rcv_saddr ; t#__be32 fast_rcv_saddr ; unsigned short fast_sk_family ; t#bool fast_ipv6_only ; s#hlist_node node ; s#hlist_head owners ; } 
e#tcp_ca_event enum tcp_ca_event { CA_EVENT_TX_START , CA_EVENT_CWND_RESTART , CA_EVENT_COMPLETE_CWR , CA_EVENT_LOSS , CA_EVENT_ECN_NO_CE , CA_EVENT_ECN_IS_CE , CA_EVENT_DELAYED_ACK , CA_EVENT_NON_DELAYED_ACK , } 
s#ack_sample struct ack_sample { t#u32 pkts_acked ; t#s32 rtt_us ; t#u32 in_flight ; } 
s#rate_sample struct rate_sample { t#u64 prior_mstamp ; t#u32 prior_delivered ; t#s32 delivered ; long interval_us ; long rtt_us ; int losses ; t#u32 acked_sacked ; t#u32 prior_in_flight ; t#bool is_app_limited ; t#bool is_retrans ; } 
s#tcpvegas_info struct tcpvegas_info { t#__u32 tcpv_enabled ; t#__u32 tcpv_rttcnt ; t#__u32 tcpv_rtt ; t#__u32 tcpv_minrtt ; } 
s#tcp_dctcp_info struct tcp_dctcp_info { t#__u16 dctcp_enabled ; t#__u16 dctcp_ce_state ; t#__u32 dctcp_alpha ; t#__u32 dctcp_ab_ecn ; t#__u32 dctcp_ab_tot ; } 
s#tcp_bbr_info struct tcp_bbr_info { t#__u32 bbr_bw_lo ; t#__u32 bbr_bw_hi ; t#__u32 bbr_min_rtt ; t#__u32 bbr_pacing_gain ; t#__u32 bbr_cwnd_gain ; } 
u#tcp_cc_info union tcp_cc_info { s#tcpvegas_info vegas ; s#tcp_dctcp_info dctcp ; s#tcp_bbr_info bbr ; } 
s#tcp_congestion_ops struct tcp_congestion_ops { s#list_head list ; t#u32 key ; t#u32 flags ; void ( * init ) ( s#sock * ) ; void ( * release ) ( s#sock * ) ; t#u32 ( * ssthresh ) ( s#sock * ) ; void ( * cong_avoid ) ( s#sock * , t#u32 , t#u32 ) ; void ( * set_state ) ( s#sock * , t#u8 ) ; void ( * cwnd_event ) ( s#sock * , e#tcp_ca_event ) ; void ( * in_ack_event ) ( s#sock * , t#u32 ) ; t#u32 ( * undo_cwnd ) ( s#sock * ) ; void ( * pkts_acked ) ( s#sock * , const s#ack_sample * ) ; t#u32 ( * tso_segs_goal ) ( s#sock * ) ; t#u32 ( * sndbuf_expand ) ( s#sock * ) ; void ( * cong_control ) ( s#sock * , const s#rate_sample * ) ; t#size_t ( * get_info ) ( s#sock * , t#u32 , int * , u#tcp_cc_info * ) ; char name [ 16 ] ; s#module * owner ; } 
s#inet_connection_sock_af_ops struct inet_connection_sock_af_ops { int ( * queue_xmit ) ( s#sock * , s#sk_buff * , s#flowi * ) ; void ( * send_check ) ( s#sock * , s#sk_buff * ) ; int ( * rebuild_header ) ( s#sock * ) ; void ( * sk_rx_dst_set ) ( s#sock * , const s#sk_buff * ) ; int ( * conn_request ) ( s#sock * , s#sk_buff * ) ; s#sock * ( * syn_recv_sock ) ( const s#sock * , s#sk_buff * , s#request_sock * , s#dst_entry * , s#request_sock * , t#bool * ) ; t#u16 net_header_len ; t#u16 net_frag_header_len ; t#u16 sockaddr_len ; int ( * setsockopt ) ( s#sock * , int , int , char * , unsigned int ) ; int ( * getsockopt ) ( s#sock * , int , int , char * , int * ) ; int ( * compat_setsockopt ) ( s#sock * , int , int , char * , unsigned int ) ; int ( * compat_getsockopt ) ( s#sock * , int , int , char * , int * ) ; void ( * addr2sockaddr ) ( s#sock * , s#sockaddr * ) ; void ( * mtu_reduced ) ( s#sock * ) ; } 
s#tcp_ulp_ops struct tcp_ulp_ops { s#list_head list ; int ( * init ) ( s#sock * ) ; void ( * release ) ( s#sock * ) ; char name [ 16 ] ; s#module * owner ; } 
s#inet_connection_sock struct inet_connection_sock { s#inet_sock icsk_inet ; s#request_sock_queue icsk_accept_queue ; s#inet_bind_bucket * icsk_bind_hash ; unsigned long icsk_timeout ; s#timer_list icsk_retransmit_timer ; s#timer_list icsk_delack_timer ; t#__u32 icsk_rto ; t#__u32 icsk_pmtu_cookie ; const s#tcp_congestion_ops * icsk_ca_ops ; const s#inet_connection_sock_af_ops * icsk_af_ops ; const s#tcp_ulp_ops * icsk_ulp_ops ; void * icsk_ulp_data ; void ( * icsk_clean_acked ) ( s#sock * , t#u32 ) ; unsigned int ( * icsk_sync_mss ) ( s#sock * , t#u32 ) ; t#__u8 icsk_ca_state : 6 , icsk_ca_setsockopt : 1 , icsk_ca_dst_locked : 1 ; t#__u8 icsk_retransmits ; t#__u8 icsk_pending ; t#__u8 icsk_backoff ; t#__u8 icsk_syn_retries ; t#__u8 icsk_probes_out ; t#__u16 icsk_ext_hdr_len ; struct { t#__u8 pending ; t#__u8 quick ; t#__u8 pingpong ; t#__u8 blocked ; t#__u32 ato ; unsigned long timeout ; t#__u32 lrcvtime ; t#__u16 last_seg_size ; t#__u16 rcv_mss ; } icsk_ack ; struct { int enabled ; int search_high ; int search_low ; int probe_size ; t#u32 probe_timestamp ; } icsk_mtup ; t#u32 icsk_user_timeout ; t#u64 icsk_ca_priv [ 88 / sizeof ( u64 ) ] ; } 
s#inet_diag_req_v2 struct inet_diag_req_v2 { t#__u8 sdiag_family ; t#__u8 sdiag_protocol ; t#__u8 idiag_ext ; t#__u8 pad ; t#__u32 idiag_states ; s#inet_diag_sockid id ; } 
inet_sk_diag_fill int inet_sk_diag_fill ( s#sock * , s#inet_connection_sock * , s#sk_buff * , const s#inet_diag_req_v2 * , s#user_namespace * , t#u32 , t#u32 , t#u16 , const s#nlmsghdr * , t#bool ) 
inet_diag_find_one_icsk s#sock * inet_diag_find_one_icsk ( s#net * , s#inet_hashinfo * , const s#inet_diag_req_v2 * ) 
inet_diag_dump_one_icsk int inet_diag_dump_one_icsk ( s#inet_hashinfo * , s#sk_buff * , const s#nlmsghdr * , const s#inet_diag_req_v2 * ) 
inet_diag_bc_sk int inet_diag_bc_sk ( const s#nlattr * , s#sock * ) 
inet_diag_dump_icsk void inet_diag_dump_icsk ( s#inet_hashinfo * , s#sk_buff * , s#netlink_callback * , const s#inet_diag_req_v2 * , s#nlattr * ) 
s#inet_diag_handler struct inet_diag_handler { void ( * dump ) ( s#sk_buff * , s#netlink_callback * , const s#inet_diag_req_v2 * , s#nlattr * ) ; int ( * dump_one ) ( s#sk_buff * , const s#nlmsghdr * , const s#inet_diag_req_v2 * ) ; void ( * idiag_get_info ) ( s#sock * , s#inet_diag_msg * , void * ) ; int ( * destroy ) ( s#sk_buff * , const s#inet_diag_req_v2 * ) ; t#__u16 idiag_type ; t#__u16 idiag_info_size ; } 
inet_diag_register extern int inet_diag_register ( const s#inet_diag_handler * ) 
inet_diag_unregister extern void inet_diag_unregister ( const s#inet_diag_handler * ) 

/* net/ipv4/inet_fragment.o */
ip_frag_ecn_table extern const t#u8 ip_frag_ecn_table [ 16 ] 
s##proc_ns_operations
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##kmem_cache
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##bpf_prog_aux
s##xfrm_policy
s##workqueue_struct
s##xfrm_state
s##lwtunnel_state
s##uncached_list
s##rt6_info
s##dn_route
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_dir_entry
s##uevent_sock
s##prot_inuse
s##ipv4_devconf
s##xt_table
s##rt6_statistics
s##fib6_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##nf_hook_entry
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##udp_tunnel_info
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##prefix_info
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
s##sec_path
inet_frags_init int inet_frags_init ( s#inet_frags * ) 
inet_frags_fini void inet_frags_fini ( s#inet_frags * ) 
inet_frags_exit_net void inet_frags_exit_net ( s#netns_frags * ) 
inet_frag_kill void inet_frag_kill ( s#inet_frag_queue * ) 
inet_frag_rbtree_purge unsigned int inet_frag_rbtree_purge ( s#rb_root * ) 
inet_frag_destroy void inet_frag_destroy ( s#inet_frag_queue * ) 
inet_frag_find s#inet_frag_queue * inet_frag_find ( s#netns_frags * , void * ) 
inet_frag_queue_insert int inet_frag_queue_insert ( s#inet_frag_queue * , s#sk_buff * , int , int ) 
inet_frag_reasm_prepare void * inet_frag_reasm_prepare ( s#inet_frag_queue * , s#sk_buff * , s#sk_buff * ) 
inet_frag_reasm_finish void inet_frag_reasm_finish ( s#inet_frag_queue * , s#sk_buff * , void * ) 
inet_frag_pull_head s#sk_buff * inet_frag_pull_head ( s#inet_frag_queue * ) 

/* net/ipv4/inet_hashtables.o */
s##posix_acl
s##vfsmount
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##sec_path
s##workqueue_struct
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##kmem_cache
s##xfrm_state
s##lwtunnel_state
s##uncached_list
s##rt6_info
s##dn_route
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##phy_device
s##sfp_bus
s##prot_inuse
s##ipv4_devconf
s##xt_table
s##rt6_statistics
s##fib6_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##mempolicy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##udp_table
s##raw_hashinfo
s##xfrm_policy
inet_put_port void inet_put_port ( s#sock * ) 
__inet_inherit_port int __inet_inherit_port ( const s#sock * , s#sock * ) 
__inet_lookup_listener s#sock * __inet_lookup_listener ( s#net * , s#inet_hashinfo * , s#sk_buff * , int , const t#__be32 , const t#__be16 , const t#__be32 , const unsigned short , const int ) 
sock_gen_put void sock_gen_put ( s#sock * ) 
sock_edemux void sock_edemux ( s#sk_buff * ) 
__inet_lookup_established s#sock * __inet_lookup_established ( s#net * , s#inet_hashinfo * , const t#__be32 , const t#__be16 , const t#__be32 , const t#u16 , const int ) 
inet_ehash_nolisten t#bool inet_ehash_nolisten ( s#sock * , s#sock * ) 
__inet_hash int __inet_hash ( s#sock * , s#sock * ) 
inet_hash int inet_hash ( s#sock * ) 
inet_unhash void inet_unhash ( s#sock * ) 
inet_hash_connect int inet_hash_connect ( s#inet_timewait_death_row * , s#sock * ) 
inet_hashinfo_init void inet_hashinfo_init ( s#inet_hashinfo * ) 
inet_ehash_locks_alloc int inet_ehash_locks_alloc ( s#inet_hashinfo * ) 

/* net/ipv4/inet_timewait_sock.o */
s##proc_ns_operations
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##workqueue_struct
s##bpf_prog_array
s##cgroup_taskset
s##kstatfs
s##eventfd_ctx
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##kmem_cache
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_dir_entry
s##uevent_sock
s##prot_inuse
s##ipv4_devconf
s##xt_table
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##lwtunnel_state
s##uncached_list
s##dn_route
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##nf_hook_entry
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##prefix_info
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
s##sec_path
s##xfrm_policy
s##sock_reuseport
s##udp_table
s##raw_hashinfo
s#inet_timewait_sock struct inet_timewait_sock { s#sock_common __tw_common ; int tw_timeout ; volatile unsigned char tw_substate ; unsigned char tw_rcv_wscale ; t#__be16 tw_sport ; ; unsigned int tw_kill : 1 , tw_transparent : 1 , tw_flowlabel : 20 , tw_pad : 2 , tw_tos : 8 ; ; s#timer_list tw_timer ; s#inet_bind_bucket * tw_tb ; } 
inet_twsk_put void inet_twsk_put ( s#inet_timewait_sock * ) 
__inet_twsk_hashdance void __inet_twsk_hashdance ( s#inet_timewait_sock * , s#sock * , s#inet_hashinfo * ) 
inet_twsk_alloc s#inet_timewait_sock * inet_twsk_alloc ( const s#sock * , s#inet_timewait_death_row * , const int ) 
inet_twsk_deschedule_put void inet_twsk_deschedule_put ( s#inet_timewait_sock * ) 
__inet_twsk_schedule void __inet_twsk_schedule ( s#inet_timewait_sock * , int , t#bool ) 
inet_twsk_purge void inet_twsk_purge ( s#inet_hashinfo * , int ) 

/* net/ipv4/inetpeer.o */
inet_peer_base_init void inet_peer_base_init ( s#inet_peer_base * ) 
s#ipv4_addr_key struct ipv4_addr_key { t#__be32 addr ; int vif ; } 
s#inetpeer_addr struct inetpeer_addr { union { s#ipv4_addr_key a4 ; s#in6_addr a6 ; t#u32 key [ ( sizeof ( struct in6_addr ) / sizeof ( u32 ) ) ] ; } ; t#__u16 family ; } 
s#inet_peer struct inet_peer { s#rb_node rb_node ; s#inetpeer_addr daddr ; t#u32 metrics [ ( E#__RTAX_MAX - 1 ) ] ; t#u32 rate_tokens ; unsigned long rate_last ; union { struct { t#atomic_t rid ; } ; s#callback_head rcu ; } ; t#__u32 dtime ; t#refcount_t refcnt ; } 
inet_getpeer s#inet_peer * inet_getpeer ( s#inet_peer_base * , const s#inetpeer_addr * , int ) 
inet_putpeer void inet_putpeer ( s#inet_peer * ) 
inet_peer_xrlim_allow t#bool inet_peer_xrlim_allow ( s#inet_peer * , int ) 
inetpeer_invalidate_tree void inetpeer_invalidate_tree ( s#inet_peer_base * ) 

/* net/ipv4/ip_fragment.o */
s##proc_ns_operations
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##workqueue_struct
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##kmem_cache
s##xfrm_state
s##lwtunnel_state
s##uncached_list
s##rt6_info
s##dn_route
s##prefix_info
s##proc_dir_entry
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##phy_device
s##sfp_bus
s##sec_path
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##key_user
s##key_type
s##assoc_array_ptr
s##uevent_sock
s##prot_inuse
s##ipv4_devconf
s##xt_table
s##rt6_statistics
s##fib6_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
ip_defrag int ip_defrag ( s#net * , s#sk_buff * , t#u32 ) 
ip_check_defrag s#sk_buff * ip_check_defrag ( s#net * , s#sk_buff * , t#u32 ) 

/* net/ipv4/ip_gre.o */
s##posix_acl
s##vfsmount
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##kmem_cache
s##fs_pin
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##prot_inuse
s##xt_table
s##inet_hashinfo
s##workqueue_struct
s##uncached_list
s##dn_route
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##netns_ipvs
s##mpls_route
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##mempolicy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##blk_plug
s##reclaim_state
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##udp_table
s##raw_hashinfo
s##bpf_prog_aux
s##sock_reuseport
s##udp_tunnel_info
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
is_gretap_dev t#bool is_gretap_dev ( const s#net_device * ) 
gretap_fb_dev_create s#net_device * gretap_fb_dev_create ( s#net * , const char * , t#u8 ) 

/* net/ipv4/ip_options.o */
s##proc_ns_operations
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##workqueue_struct
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##kmem_cache
s##xfrm_state
s##lwtunnel_state
s##uncached_list
s##rt6_info
s##dn_route
s##prefix_info
s##proc_dir_entry
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##phy_device
s##sfp_bus
s##sec_path
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##key_user
s##key_type
s##assoc_array_ptr
s##uevent_sock
s##prot_inuse
s##ipv4_devconf
s##xt_table
s##rt6_statistics
s##fib6_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
ip_options_compile int ip_options_compile ( s#net * , s#ip_options * , s#sk_buff * ) 
ip_options_rcv_srr2 int ip_options_rcv_srr2 ( s#sk_buff * , s#net_device * ) 
ip_options_rcv_srr int ip_options_rcv_srr ( s#sk_buff * ) 

/* net/ipv4/ip_output.o */
ip_send_check void ip_send_check ( s#iphdr * ) 
s##proc_ns_operations
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##kmem_cache
s##fs_pin
s##nlm_lockowner
s##nfs4_lock_state
s##workqueue_struct
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##uncached_list
s##proc_dir_entry
s##dn_route
s##prefix_info
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##phy_device
s##sfp_bus
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##key_user
s##key_type
s##assoc_array_ptr
s##uevent_sock
s##prot_inuse
s##ipv4_devconf
s##xt_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
ip_local_out int ip_local_out ( s#net * , s#sock * , s#sk_buff * ) 
ip_build_and_send_pkt int ip_build_and_send_pkt ( s#sk_buff * , const s#sock * , t#__be32 , t#__be32 , s#ip_options_rcu * ) 
ip_queue_xmit int ip_queue_xmit ( s#sock * , s#sk_buff * , s#flowi * ) 
ip_do_fragment int ip_do_fragment ( s#net * , s#sock * , s#sk_buff * , int ( * ) ( s#net * , s#sock * , s#sk_buff * ) ) 
ip_generic_getfrag int ip_generic_getfrag ( void * , char * , int , int , int , s#sk_buff * ) 

/* net/ipv4/ip_sockglue.o */
s##posix_acl
s##vfsmount
s##proc_ns_operations
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##kmem_cache
s##fs_pin
s##nlm_lockowner
s##nfs4_lock_state
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##workqueue_struct
s##blk_plug
s##reclaim_state
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_dir_entry
s##uevent_sock
s##prot_inuse
s##xt_table
s##inet_hashinfo
s##lwtunnel_state
s##uncached_list
s##dn_route
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##prefix_info
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
s##udp_table
s##raw_hashinfo
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
ip_cmsg_recv_offset void ip_cmsg_recv_offset ( s#msghdr * , s#sock * , s#sk_buff * , int , int ) 
ip_setsockopt int ip_setsockopt ( s#sock * , int , int , char * , unsigned int ) 
compat_ip_setsockopt int compat_ip_setsockopt ( s#sock * , int , int , char * , unsigned int ) 
ip_getsockopt int ip_getsockopt ( s#sock * , int , int , char * , int * ) 
compat_ip_getsockopt int compat_ip_getsockopt ( s#sock * , int , int , char * , int * ) 

/* net/ipv4/ip_tunnel.o */
s##posix_acl
s##vfsmount
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##kmem_cache
s##fs_pin
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##prot_inuse
s##xt_table
s##inet_hashinfo
s##workqueue_struct
s##uncached_list
s##dn_route
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##netns_ipvs
s##mpls_route
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##mempolicy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##blk_plug
s##reclaim_state
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##raw_hashinfo
s##bpf_prog_aux
s##sock_reuseport
s##udp_tunnel_info
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
s##dst_cache_pcpu
s#ip_tunnel_parm struct ip_tunnel_parm { char name [ 16 ] ; int link ; t#__be16 i_flags ; t#__be16 o_flags ; t#__be32 i_key ; t#__be32 o_key ; s#iphdr iph ; } 
s#ip_tunnel_prl_entry struct ip_tunnel_prl_entry { s#ip_tunnel_prl_entry * next ; t#__be32 addr ; t#u16 flags ; s#callback_head callback_head ; } 
s##gro_cell
s#ip_tunnel struct ip_tunnel { s#ip_tunnel * next ; s#hlist_node hash_node ; s#net_device * dev ; s#net * net ; unsigned long err_time ; int err_count ; t#u32 i_seqno ; t#u32 o_seqno ; int tun_hlen ; s#dst_cache dst_cache ; s#ip_tunnel_parm parms ; int mlink ; int encap_hlen ; int hlen ; s#ip_tunnel_encap encap ; s#ip_tunnel_prl_entry * prl ; unsigned int prl_count ; unsigned int ip_tnl_net_id ; s#gro_cells gro_cells ; t#__u32 fwmark ; t#bool collect_md ; t#bool ignore_df ; } 
s#ip_tunnel_net struct ip_tunnel_net { s#net_device * fb_tunnel_dev ; s#hlist_head tunnels [ ( 1 << 7 ) ] ; s#ip_tunnel * collect_md_tun ; } 
ip_tunnel_lookup s#ip_tunnel * ip_tunnel_lookup ( s#ip_tunnel_net * , int , t#__be16 , t#__be32 , t#__be32 , t#__be32 ) 
ip_tunnel_rcv int ip_tunnel_rcv ( s#ip_tunnel * , s#sk_buff * , const s#tnl_ptk_info * , s#metadata_dst * , t#bool ) 
s#ip_tunnel_encap_ops struct ip_tunnel_encap_ops { t#size_t ( * encap_hlen ) ( s#ip_tunnel_encap * ) ; int ( * build_header ) ( s#sk_buff * , s#ip_tunnel_encap * , t#u8 * , s#flowi4 * ) ; } 
ip_tunnel_encap_add_ops int ip_tunnel_encap_add_ops ( const s#ip_tunnel_encap_ops * , unsigned int ) 
ip_tunnel_encap_del_ops int ip_tunnel_encap_del_ops ( const s#ip_tunnel_encap_ops * , unsigned int ) 
ip_tunnel_encap_setup int ip_tunnel_encap_setup ( s#ip_tunnel * , s#ip_tunnel_encap * ) 
ip_md_tunnel_xmit void ip_md_tunnel_xmit ( s#sk_buff * , s#net_device * , const t#u8 ) 
ip_tunnel_xmit void ip_tunnel_xmit ( s#sk_buff * , s#net_device * , const s#iphdr * , const t#u8 ) 
ip_tunnel_ioctl int ip_tunnel_ioctl ( s#net_device * , s#ip_tunnel_parm * , int ) 
__ip_tunnel_change_mtu int __ip_tunnel_change_mtu ( s#net_device * , int , t#bool ) 
ip_tunnel_change_mtu int ip_tunnel_change_mtu ( s#net_device * , int ) 
ip_tunnel_dellink void ip_tunnel_dellink ( s#net_device * , s#list_head * ) 
ip_tunnel_get_link_net s#net * ip_tunnel_get_link_net ( const s#net_device * ) 
ip_tunnel_get_iflink int ip_tunnel_get_iflink ( const s#net_device * ) 
ip_tunnel_init_net int ip_tunnel_init_net ( s#net * , unsigned int , s#rtnl_link_ops * , char * ) 
ip_tunnel_delete_nets void ip_tunnel_delete_nets ( s#list_head * , unsigned int , s#rtnl_link_ops * ) 
ip_tunnel_newlink int ip_tunnel_newlink ( s#net_device * , s#nlattr * [ ] , s#ip_tunnel_parm * , t#__u32 ) 
ip_tunnel_changelink int ip_tunnel_changelink ( s#net_device * , s#nlattr * [ ] , s#ip_tunnel_parm * , t#__u32 ) 
ip_tunnel_init int ip_tunnel_init ( s#net_device * ) 
ip_tunnel_uninit void ip_tunnel_uninit ( s#net_device * ) 
ip_tunnel_setup void ip_tunnel_setup ( s#net_device * , unsigned int ) 

/* net/ipv4/ip_tunnel_core.o */
s##proc_ns_operations
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##kmem_cache
s##fs_pin
s##nlm_lockowner
s##nfs4_lock_state
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##bpf_prog_aux
s##workqueue_struct
s##uncached_list
s##proc_dir_entry
s##dn_route
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##key_user
s##key_type
s##assoc_array_ptr
s##uevent_sock
s##prot_inuse
s##xt_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##netns_ipvs
s##mpls_route
s##udp_tunnel_info
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##ip_mc_list
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
iptun_encaps extern const s#ip_tunnel_encap_ops * iptun_encaps [ 8 ] 
s#ip6_tnl_encap_ops struct ip6_tnl_encap_ops { t#size_t ( * encap_hlen ) ( s#ip_tunnel_encap * ) ; int ( * build_header ) ( s#sk_buff * , s#ip_tunnel_encap * , t#u8 * , s#flowi6 * ) ; } 
ip6tun_encaps extern const s#ip6_tnl_encap_ops * ip6tun_encaps [ 8 ] 
iptunnel_xmit void iptunnel_xmit ( s#sock * , s#rtable * , s#sk_buff * , t#__be32 , t#__be32 , t#u8 , t#u8 , t#u8 , t#__be16 , t#bool ) 
__iptunnel_pull_header int __iptunnel_pull_header ( s#sk_buff * , int , t#__be16 , t#bool , t#bool ) 
s##dst_cache_pcpu
iptunnel_metadata_reply s#metadata_dst * iptunnel_metadata_reply ( s#metadata_dst * , t#gfp_t ) 
iptunnel_handle_offloads int iptunnel_handle_offloads ( s#sk_buff * , int ) 
ip_tunnel_get_stats64 void ip_tunnel_get_stats64 ( s#net_device * , s#rtnl_link_stats64 * ) 
ip_tunnel_metadata_cnt extern s#static_key ip_tunnel_metadata_cnt 
ip_tunnel_need_metadata void ip_tunnel_need_metadata ( void ) 
ip_tunnel_unneed_metadata void ip_tunnel_unneed_metadata ( void ) 

/* net/ipv4/ipmr.o */
s##proc_ns_operations
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##workqueue_struct
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##kmem_cache
s##xfrm_state
s##uncached_list
s##proc_dir_entry
s##dn_route
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##phy_device
s##sfp_bus
s##sec_path
s##inet_hashinfo
s##xfrm_policy
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##key_user
s##key_type
s##assoc_array_ptr
s##uevent_sock
s##prot_inuse
s##xt_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##netns_ipvs
s##mpls_route
ipmr_rule_default t#bool ipmr_rule_default ( const s#fib_rule * ) 

/* net/ipv4/ipmr_base.o */
s##posix_acl
s##vfsmount
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##kmem_cache
s##xt_table
s##inet_hashinfo
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##lwtunnel_state
s##rtable
s##dn_route
s##workqueue_struct
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##nf_hook_entry
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##mempolicy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##blk_plug
s##reclaim_state
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##request_sock_ops
s##timewait_sock_ops
s##udp_table
s##raw_hashinfo
s##bpf_prog_aux
s##xfrm_policy
s##sock_reuseport
s##sec_path
s##udp_tunnel_info
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##l3mdev_ops
s##ndisc_ops
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
s#vif_device struct vif_device { s#net_device * dev ; unsigned long bytes_in , bytes_out ; unsigned long pkt_in , pkt_out ; unsigned long rate_limit ; unsigned char threshold ; unsigned short flags ; int link ; s#netdev_phys_item_id dev_parent_id ; t#__be32 local , remote ; } 
vif_device_init void vif_device_init ( s#vif_device * , s#net_device * , unsigned long , unsigned char , unsigned short , unsigned short ) 

/* net/ipv4/netfilter.o */
s##proc_ns_operations
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##kmem_cache
s##fs_pin
s##nlm_lockowner
s##nfs4_lock_state
s##workqueue_struct
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##lwtunnel_state
s##uncached_list
s##proc_dir_entry
s##dn_route
s##prefix_info
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##phy_device
s##sfp_bus
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##key_user
s##key_type
s##assoc_array_ptr
s##uevent_sock
s##prot_inuse
s##ipv4_devconf
s##xt_table
s##seg6_pernet_data
s##sctp_mib
s#nf_queue_entry struct nf_queue_entry { s#list_head list ; s#sk_buff * skb ; unsigned int id ; s#nf_hook_state state ; s#nf_hook_entry * hook ; t#u16 size ; } 
s#nf_queue_handler struct nf_queue_handler { int ( * outfn ) ( s#nf_queue_entry * , unsigned int ) ; unsigned int ( * nf_hook_drop ) ( s#net * ) ; } 
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
ip_route_me_harder int ip_route_me_harder ( s#net * , s#sk_buff * , unsigned ) 
nf_ip_checksum t#__sum16 nf_ip_checksum ( s#sk_buff * , unsigned int , unsigned int , t#u_int8_t ) 

/* net/ipv4/netfilter/arp_tables.o */
s##posix_acl
s##vfsmount
s##device_private
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##sec_path
s##workqueue_struct
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##l3mdev_ops
s##ndisc_ops
s##xfrm_state
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##kmem_cache
s##inet_hashinfo
s##fib_notifier_ops
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##lwtunnel_state
s##rtable
s##dn_route
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##eventfd_ctx
s##mempolicy
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##request_sock_ops
s##timewait_sock_ops
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
arpt_alloc_initial_table extern void * arpt_alloc_initial_table ( const s#xt_table * ) 
s#xt_counters struct xt_counters { t#__u64 pcnt , bcnt ; } 
s#arpt_devaddr_info struct arpt_devaddr_info { char addr [ 16 ] ; char mask [ 16 ] ; } 
s#arpt_arp struct arpt_arp { s#in_addr src , tgt ; s#in_addr smsk , tmsk ; t#__u8 arhln , arhln_mask ; s#arpt_devaddr_info src_devaddr ; s#arpt_devaddr_info tgt_devaddr ; t#__be16 arpop , arpop_mask ; t#__be16 arhrd , arhrd_mask ; t#__be16 arpro , arpro_mask ; char iniface [ 16 ] , outiface [ 16 ] ; unsigned char iniface_mask [ 16 ] , outiface_mask [ 16 ] ; t#__u8 flags ; t#__u16 invflags ; } 
s#arpt_entry struct arpt_entry { s#arpt_arp arp ; t#__u16 target_offset ; t#__u16 next_offset ; unsigned int comefrom ; s#xt_counters counters ; unsigned char elems [ 0 ] ; } 
s#arpt_replace struct arpt_replace { char name [ 32 ] ; unsigned int valid_hooks ; unsigned int num_entries ; unsigned int size ; unsigned int hook_entry [ 3 ] ; unsigned int underflow [ 3 ] ; unsigned int num_counters ; s#xt_counters * counters ; s#arpt_entry entries [ 0 ] ; } 
arpt_register_table int arpt_register_table ( s#net * , const s#xt_table * , const s#arpt_replace * , const s#nf_hook_ops * , s#xt_table * * ) 
arpt_unregister_table void arpt_unregister_table ( s#net * , s#xt_table * , const s#nf_hook_ops * ) 
arpt_do_table extern unsigned int arpt_do_table ( s#sk_buff * , const s#nf_hook_state * , s#xt_table * ) 

/* net/ipv4/netfilter/ip_tables.o */
s##posix_acl
s##vfsmount
s##device_private
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##sec_path
s##workqueue_struct
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##kmem_cache
s##xfrm_state
s##lwtunnel_state
s##uncached_list
s##rt6_info
s##dn_route
s##prefix_info
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
s##prot_inuse
s##ipv4_devconf
s##inet_hashinfo
s##rt6_statistics
s##fib6_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
e#nf_log_type enum nf_log_type { NF_LOG_TYPE_LOG = 0 , NF_LOG_TYPE_ULOG , NF_LOG_TYPE_MAX } 
t#u_int32_t typedef t#__u32 u_int32_t 
t#u_int16_t typedef t#__u16 u_int16_t 
s#nf_loginfo struct nf_loginfo { t#u_int8_t type ; union { struct { t#u_int32_t copy_len ; t#u_int16_t group ; t#u_int16_t qthreshold ; t#u_int16_t flags ; } ulog ; struct { t#u_int8_t level ; t#u_int8_t logflags ; } log ; } u ; } 
t#nf_logfn typedef void nf_logfn ( s#net * , t#u_int8_t , unsigned int , const s#sk_buff * , const s#net_device * , const s#net_device * , const s#nf_loginfo * , const char * ) 
s#nf_logger struct nf_logger { char * name ; e#nf_log_type type ; t#nf_logfn * logfn ; s#module * me ; } 
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##eventfd_ctx
s##mempolicy
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
ipt_alloc_initial_table extern void * ipt_alloc_initial_table ( const s#xt_table * ) 
s#ipt_ip struct ipt_ip { s#in_addr src , dst ; s#in_addr smsk , dmsk ; char iniface [ 16 ] , outiface [ 16 ] ; unsigned char iniface_mask [ 16 ] , outiface_mask [ 16 ] ; t#__u16 proto ; t#__u8 flags ; t#__u8 invflags ; } 
s#ipt_entry struct ipt_entry { s#ipt_ip ip ; unsigned int nfcache ; t#__u16 target_offset ; t#__u16 next_offset ; unsigned int comefrom ; s#xt_counters counters ; unsigned char elems [ 0 ] ; } 
s#ipt_replace struct ipt_replace { char name [ 32 ] ; unsigned int valid_hooks ; unsigned int num_entries ; unsigned int size ; unsigned int hook_entry [ E#NF_INET_NUMHOOKS ] ; unsigned int underflow [ E#NF_INET_NUMHOOKS ] ; unsigned int num_counters ; s#xt_counters * counters ; s#ipt_entry entries [ 0 ] ; } 
ipt_register_table int ipt_register_table ( s#net * , const s#xt_table * , const s#ipt_replace * , const s#nf_hook_ops * , s#xt_table * * ) 
ipt_unregister_table void ipt_unregister_table ( s#net * , s#xt_table * , const s#nf_hook_ops * ) 
ipt_do_table extern unsigned int ipt_do_table ( s#sk_buff * , const s#nf_hook_state * , s#xt_table * ) 

/* net/ipv4/netfilter/nf_defrag_ipv4.o */
s##proc_ns_operations
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##workqueue_struct
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##kmem_cache
s##xfrm_state
s##uncached_list
s##proc_dir_entry
s##dn_route
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##phy_device
s##sfp_bus
s##sec_path
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##key_user
s##key_type
s##assoc_array_ptr
s##uevent_sock
s##prot_inuse
s##ipv4_devconf
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##netns_ipvs
s##mpls_route
nf_defrag_ipv4_enable int nf_defrag_ipv4_enable ( s#net * ) 

/* net/ipv4/netfilter/nf_dup_ipv4.o */
s##proc_ns_operations
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##workqueue_struct
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##kmem_cache
s##xfrm_state
s##uncached_list
s##proc_dir_entry
s##dn_route
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##phy_device
s##sfp_bus
s##sec_path
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##key_user
s##key_type
s##assoc_array_ptr
s##uevent_sock
s##prot_inuse
s##ipv4_devconf
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##netns_ipvs
s##mpls_route
nf_dup_ipv4 void nf_dup_ipv4 ( s#net * , s#sk_buff * , unsigned int , const s#in_addr * , int ) 

/* net/ipv4/netfilter/nf_nat_l3proto_ipv4.o */
s##proc_ns_operations
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##kmem_cache
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##bpf_prog_aux
s##xfrm_policy
s##workqueue_struct
s##xfrm_state
s##uncached_list
s##proc_dir_entry
s##dn_route
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##key_user
s##key_type
s##assoc_array_ptr
s##uevent_sock
s##prot_inuse
s##ipv4_devconf
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s#nf_conntrack struct nf_conntrack { t#atomic_t use ; } 
s#nf_conntrack_zone struct nf_conntrack_zone { t#u16 id ; t#u8 flags ; t#u8 dir ; } 
u#nf_inet_addr union nf_inet_addr { t#__u32 all [ 4 ] ; t#__be32 ip ; t#__be32 ip6 [ 4 ] ; s#in_addr in ; s#in6_addr in6 ; } 
u#nf_conntrack_man_proto union nf_conntrack_man_proto { t#__be16 all ; struct { t#__be16 port ; } tcp ; struct { t#__be16 port ; } udp ; struct { t#__be16 id ; } icmp ; struct { t#__be16 port ; } dccp ; struct { t#__be16 port ; } sctp ; struct { t#__be16 key ; } gre ; } 
s#nf_conntrack_man struct nf_conntrack_man { u#nf_inet_addr u3 ; u#nf_conntrack_man_proto u ; t#u_int16_t l3num ; } 
s#nf_conntrack_tuple struct nf_conntrack_tuple { s#nf_conntrack_man src ; struct { u#nf_inet_addr u3 ; union { t#__be16 all ; struct { t#__be16 port ; } tcp ; struct { t#__be16 port ; } udp ; struct { t#u_int8_t type , code ; } icmp ; struct { t#__be16 port ; } dccp ; struct { t#__be16 port ; } sctp ; struct { t#__be16 key ; } gre ; } u ; t#u_int8_t protonum ; t#u_int8_t dir ; } dst ; } 
s#nf_conntrack_tuple_hash struct nf_conntrack_tuple_hash { s#hlist_nulls_node hnnode ; s#nf_conntrack_tuple tuple ; } 
E#IP_CT_DIR_MAX 2 
E#NF_CT_EXT_NUM 9 
s#nf_ct_ext struct nf_ct_ext { s#callback_head rcu ; t#u8 offset [ E#NF_CT_EXT_NUM ] ; t#u8 len ; char data [ 0 ] ; } 
t#u_int64_t typedef t#__u64 u_int64_t 
s#nf_ct_dccp struct nf_ct_dccp { t#u_int8_t role [ E#IP_CT_DIR_MAX ] ; t#u_int8_t state ; t#u_int8_t last_pkt ; t#u_int8_t last_dir ; t#u_int64_t handshake_seq ; } 
e#sctp_conntrack enum sctp_conntrack { SCTP_CONNTRACK_NONE , SCTP_CONNTRACK_CLOSED , SCTP_CONNTRACK_COOKIE_WAIT , SCTP_CONNTRACK_COOKIE_ECHOED , SCTP_CONNTRACK_ESTABLISHED , SCTP_CONNTRACK_SHUTDOWN_SENT , SCTP_CONNTRACK_SHUTDOWN_RECD , SCTP_CONNTRACK_SHUTDOWN_ACK_SENT , SCTP_CONNTRACK_HEARTBEAT_SENT , SCTP_CONNTRACK_HEARTBEAT_ACKED , SCTP_CONNTRACK_MAX } 
s#ip_ct_sctp struct ip_ct_sctp { e#sctp_conntrack state ; t#__be32 vtag [ E#IP_CT_DIR_MAX ] ; } 
s#ip_ct_tcp_state struct ip_ct_tcp_state { t#u_int32_t td_end ; t#u_int32_t td_maxend ; t#u_int32_t td_maxwin ; t#u_int32_t td_maxack ; t#u_int8_t td_scale ; t#u_int8_t flags ; } 
s#ip_ct_tcp struct ip_ct_tcp { s#ip_ct_tcp_state seen [ 2 ] ; t#u_int8_t state ; t#u_int8_t last_dir ; t#u_int8_t retrans ; t#u_int8_t last_index ; t#u_int32_t last_seq ; t#u_int32_t last_ack ; t#u_int32_t last_end ; t#u_int16_t last_win ; t#u_int8_t last_wscale ; t#u_int8_t last_flags ; } 
s#nf_ct_gre struct nf_ct_gre { unsigned int stream_timeout ; unsigned int timeout ; } 
u#nf_conntrack_proto union nf_conntrack_proto { s#nf_ct_dccp dccp ; s#ip_ct_sctp sctp ; s#ip_ct_tcp tcp ; s#nf_ct_gre gre ; unsigned int tmpl_padto ; } 
s#nf_conn struct nf_conn { s#nf_conntrack ct_general ; t#spinlock_t lock ; t#u16 cpu ; s#nf_conntrack_zone zone ; s#nf_conntrack_tuple_hash tuplehash [ E#IP_CT_DIR_MAX ] ; unsigned long status ; t#u32 timeout ; t#possible_net_t ct_net ; s#hlist_node nat_bysource ; t#u8 __nfct_init_offset [ 0 ] ; s#nf_conn * master ; t#u_int32_t mark ; t#u_int32_t secmark ; s#nf_ct_ext * ext ; u#nf_conntrack_proto proto ; } 
s#nf_ct_event struct nf_ct_event { s#nf_conn * ct ; t#u32 portid ; int report ; } 
s#nf_ct_event_notifier struct nf_ct_event_notifier { int ( * fcn ) ( unsigned int , s#nf_ct_event * ) ; } 
s#nf_conntrack_tuple_mask struct nf_conntrack_tuple_mask { struct { u#nf_inet_addr u3 ; u#nf_conntrack_man_proto u ; } src ; } 
s##nf_conntrack_helper
e#ip_conntrack_dir enum ip_conntrack_dir { IP_CT_DIR_ORIGINAL , IP_CT_DIR_REPLY , IP_CT_DIR_MAX } 
s#nf_conntrack_expect struct nf_conntrack_expect { s#hlist_node lnode ; s#hlist_node hnode ; s#nf_conntrack_tuple tuple ; s#nf_conntrack_tuple_mask mask ; void ( * expectfn ) ( s#nf_conn * , s#nf_conntrack_expect * ) ; s#nf_conntrack_helper * helper ; s#nf_conn * master ; s#timer_list timeout ; t#refcount_t use ; unsigned int flags ; unsigned int class ; u#nf_inet_addr saved_addr ; u#nf_conntrack_man_proto saved_proto ; e#ip_conntrack_dir dir ; s#callback_head rcu ; } 
s#nf_exp_event struct nf_exp_event { s#nf_conntrack_expect * exp ; t#u32 portid ; int report ; } 
s#nf_exp_event_notifier struct nf_exp_event_notifier { int ( * fcn ) ( unsigned int , s#nf_exp_event * ) ; } 
s##nft_af_info
s##netns_ipvs
s##mpls_route
s##udp_tunnel_info
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
s##sec_path
E#IP_CT_ESTABLISHED 0 
E#IP_CT_IS_REPLY 3 
E#IP_CT_RELATED 1 
e#ip_conntrack_info enum ip_conntrack_info { IP_CT_ESTABLISHED , IP_CT_RELATED , IP_CT_NEW , IP_CT_IS_REPLY , IP_CT_ESTABLISHED_REPLY = E#IP_CT_ESTABLISHED + E#IP_CT_IS_REPLY , IP_CT_RELATED_REPLY = E#IP_CT_RELATED + E#IP_CT_IS_REPLY , IP_CT_NUMBER , IP_CT_UNTRACKED = 7 , } 
nf_nat_icmp_reply_translation int nf_nat_icmp_reply_translation ( s#sk_buff * , s#nf_conn * , e#ip_conntrack_info , unsigned int ) 
nf_nat_ipv4_fn unsigned int nf_nat_ipv4_fn ( void * , s#sk_buff * , const s#nf_hook_state * , unsigned int ( * ) ( void * , s#sk_buff * , const s#nf_hook_state * , s#nf_conn * ) ) 
nf_nat_ipv4_in unsigned int nf_nat_ipv4_in ( void * , s#sk_buff * , const s#nf_hook_state * , unsigned int ( * ) ( void * , s#sk_buff * , const s#nf_hook_state * , s#nf_conn * ) ) 
nf_nat_ipv4_out unsigned int nf_nat_ipv4_out ( void * , s#sk_buff * , const s#nf_hook_state * , unsigned int ( * ) ( void * , s#sk_buff * , const s#nf_hook_state * , s#nf_conn * ) ) 
nf_nat_ipv4_local_fn unsigned int nf_nat_ipv4_local_fn ( void * , s#sk_buff * , const s#nf_hook_state * , unsigned int ( * ) ( void * , s#sk_buff * , const s#nf_hook_state * , s#nf_conn * ) ) 

/* net/ipv4/netfilter/nf_nat_masquerade_ipv4.o */
s##proc_ns_operations
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##kmem_cache
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##bpf_prog_aux
s##xfrm_policy
s##workqueue_struct
s##xfrm_state
s##uncached_list
s##proc_dir_entry
s##dn_route
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##key_user
s##key_type
s##assoc_array_ptr
s##uevent_sock
s##prot_inuse
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##netns_ipvs
s##mpls_route
s##udp_tunnel_info
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##ip_mc_list
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
s##sec_path
s#nf_nat_range struct nf_nat_range { unsigned int flags ; u#nf_inet_addr min_addr ; u#nf_inet_addr max_addr ; u#nf_conntrack_man_proto min_proto ; u#nf_conntrack_man_proto max_proto ; } 
nf_nat_masquerade_ipv4 unsigned int nf_nat_masquerade_ipv4 ( s#sk_buff * , unsigned int , const s#nf_nat_range * , const s#net_device * ) 
nf_nat_masquerade_ipv4_register_notifier void nf_nat_masquerade_ipv4_register_notifier ( void ) 
nf_nat_masquerade_ipv4_unregister_notifier void nf_nat_masquerade_ipv4_unregister_notifier ( void ) 

/* net/ipv4/netfilter/nf_nat_proto_gre.o */
nf_nat_need_gre void nf_nat_need_gre ( void ) 

/* net/ipv4/netfilter/nf_reject_ipv4.o */
s#tcphdr struct tcphdr { t#__be16 source ; t#__be16 dest ; t#__be32 seq ; t#__be32 ack_seq ; t#__u16 doff : 4 , res1 : 4 , cwr : 1 , ece : 1 , urg : 1 , ack : 1 , psh : 1 , rst : 1 , syn : 1 , fin : 1 ; t#__be16 window ; t#__sum16 check ; t#__be16 urg_ptr ; } 
s##proc_ns_operations
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##kmem_cache
s##udp_table
s##raw_hashinfo
s##bpf_prog_aux
s##xfrm_policy
s##workqueue_struct
s##xfrm_state
s##lwtunnel_state
s##uncached_list
s##rt6_info
s##dn_route
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_dir_entry
s##uevent_sock
s##prot_inuse
s##ipv4_devconf
s##xt_table
s##rt6_statistics
s##fib6_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##udp_tunnel_info
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##prefix_info
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
s##sec_path
nf_reject_ip_tcphdr_get const s#tcphdr * nf_reject_ip_tcphdr_get ( s#sk_buff * , s#tcphdr * , int ) 
nf_reject_iphdr_put s#iphdr * nf_reject_iphdr_put ( s#sk_buff * , const s#sk_buff * , t#__u8 , int ) 
nf_reject_ip_tcphdr_put void nf_reject_ip_tcphdr_put ( s#sk_buff * , const s#sk_buff * , const s#tcphdr * ) 
nf_send_reset void nf_send_reset ( s#net * , s#sk_buff * , int ) 
nf_send_unreach void nf_send_unreach ( s#sk_buff * , int , int ) 

/* net/ipv4/netfilter/nf_socket_ipv4.o */
s##posix_acl
s##vfsmount
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##sec_path
s##workqueue_struct
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##kmem_cache
s##xfrm_state
s##uncached_list
s##dn_route
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##phy_device
s##sfp_bus
s##prot_inuse
s##ipv4_devconf
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##netns_ipvs
s##mpls_route
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##mempolicy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##raw_hashinfo
s##xfrm_policy
s##sock_reuseport
nf_sk_lookup_slow_v4 s#sock * nf_sk_lookup_slow_v4 ( s#net * , const s#sk_buff * , const s#net_device * ) 

/* net/ipv4/netfilter/nf_tables_ipv4.o */
s##posix_acl
s##vfsmount
s##device_private
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##sec_path
s##workqueue_struct
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##kmem_cache
s##xfrm_state
s##lwtunnel_state
s##uncached_list
s##rt6_info
s##dn_route
s##prefix_info
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
s##prot_inuse
s##ipv4_devconf
s##inet_hashinfo
s##rt6_statistics
s##fib6_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##mpls_route
s##eventfd_ctx
s##mempolicy
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s#nft_af_info struct nft_af_info { s#list_head list ; int family ; unsigned int nhooks ; s#module * owner ; s#list_head tables ; t#u32 flags ; unsigned int nops ; void ( * hook_ops_init ) ( s#nf_hook_ops * , unsigned int ) ; t#nf_hookfn * hooks [ 8 ] ; } 
nft_af_ipv4 extern s#nft_af_info nft_af_ipv4 

/* net/ipv4/netfilter/nft_fib_ipv4.o */
s#nft_table struct nft_table { s#list_head list ; s#list_head chains ; s#list_head sets ; s#list_head objects ; t#u64 hgenerator ; t#u32 use ; t#u16 flags : 14 , genmask : 2 ; char name [ 32 ] ; } 
s#nft_chain struct nft_chain { s#list_head rules ; s#list_head list ; s#nft_table * table ; t#u64 handle ; t#u32 use ; t#u16 level ; t#u8 flags : 6 , genmask : 2 ; char name [ 32 ] ; } 
s#nft_verdict struct nft_verdict { t#u32 code ; s#nft_chain * chain ; } 
s#nft_regs struct nft_regs { union { t#u32 data [ 20 ] ; s#nft_verdict verdict ; } ; } 
s##proc_ns_operations
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##kmem_cache
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##bpf_prog_aux
s##xfrm_policy
s##workqueue_struct
s##xfrm_state
s##lwtunnel_state
s##uncached_list
s##rt6_info
s##dn_route
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_dir_entry
s##uevent_sock
s##prot_inuse
s##ipv4_devconf
s##rt6_statistics
s##fib6_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##mpls_route
s##udp_tunnel_info
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##prefix_info
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
s##sec_path
s#xt_mtchk_param struct xt_mtchk_param { s#net * net ; const char * table ; const void * entryinfo ; const s#xt_match * match ; void * matchinfo ; unsigned int hook_mask ; t#u_int8_t family ; t#bool nft_compat ; } 
s#xt_mtdtor_param struct xt_mtdtor_param { s#net * net ; const s#xt_match * match ; void * matchinfo ; t#u_int8_t family ; } 
s#xt_match struct xt_match { s#list_head list ; const char name [ 29 ] ; t#u_int8_t revision ; t#bool ( * match ) ( const s#sk_buff * , s#xt_action_param * ) ; int ( * checkentry ) ( const s#xt_mtchk_param * ) ; void ( * destroy ) ( const s#xt_mtdtor_param * ) ; void ( * compat_from_user ) ( void * , const void * ) ; int ( * compat_to_user ) ( void * , const void * ) ; s#module * me ; const char * table ; unsigned int matchsize ; unsigned int usersize ; unsigned int compatsize ; unsigned int hooks ; unsigned short proto ; unsigned short family ; } 
s#xt_tgchk_param struct xt_tgchk_param { s#net * net ; const char * table ; const void * entryinfo ; const s#xt_target * target ; void * targinfo ; unsigned int hook_mask ; t#u_int8_t family ; t#bool nft_compat ; } 
s#xt_tgdtor_param struct xt_tgdtor_param { s#net * net ; const s#xt_target * target ; void * targinfo ; t#u_int8_t family ; } 
s#xt_target struct xt_target { s#list_head list ; const char name [ 29 ] ; t#u_int8_t revision ; unsigned int ( * target ) ( s#sk_buff * , const s#xt_action_param * ) ; int ( * checkentry ) ( const s#xt_tgchk_param * ) ; void ( * destroy ) ( const s#xt_tgdtor_param * ) ; void ( * compat_from_user ) ( void * , const void * ) ; int ( * compat_to_user ) ( void * , const void * ) ; s#module * me ; const char * table ; unsigned int targetsize ; unsigned int usersize ; unsigned int compatsize ; unsigned int hooks ; unsigned short proto ; unsigned short family ; } 
s#xt_action_param struct xt_action_param { union { const s#xt_match * match ; const s#xt_target * target ; } ; union { const void * matchinfo , * targinfo ; } ; const s#nf_hook_state * state ; int fragoff ; unsigned int thoff ; t#bool hotdrop ; } 
s#nft_pktinfo struct nft_pktinfo { s#sk_buff * skb ; t#bool tprot_set ; t#u8 tprot ; s#xt_action_param xt ; } 
s#nft_ctx struct nft_ctx { s#net * net ; s#nft_af_info * afi ; s#nft_table * table ; s#nft_chain * chain ; const s#nlattr * const * nla ; t#u32 portid ; t#u32 seq ; t#bool report ; } 
s#nft_data struct nft_data { union { t#u32 data [ 4 ] ; s#nft_verdict verdict ; } ; } 
s#nft_expr_type struct nft_expr_type { const s#nft_expr_ops * ( * select_ops ) ( const s#nft_ctx * , const s#nlattr * const [ ] ) ; const s#nft_expr_ops * ops ; s#list_head list ; const char * name ; s#module * owner ; const s#nla_policy * policy ; unsigned int maxattr ; t#u8 family ; t#u8 flags ; } 
s#nft_expr_ops struct nft_expr_ops { void ( * eval ) ( const s#nft_expr * , s#nft_regs * , const s#nft_pktinfo * ) ; int ( * clone ) ( s#nft_expr * , const s#nft_expr * ) ; unsigned int size ; int ( * init ) ( const s#nft_ctx * , const s#nft_expr * , const s#nlattr * const [ ] ) ; void ( * destroy ) ( const s#nft_ctx * , const s#nft_expr * ) ; int ( * dump ) ( s#sk_buff * , const s#nft_expr * ) ; int ( * validate ) ( const s#nft_ctx * , const s#nft_expr * , const s#nft_data * * ) ; const s#nft_expr_type * type ; void * data ; } 
s#nft_expr struct nft_expr { const s#nft_expr_ops * ops ; unsigned char data [ ] ; } 
nft_fib4_eval_type void nft_fib4_eval_type ( const s#nft_expr * , s#nft_regs * , const s#nft_pktinfo * ) 
nft_fib4_eval void nft_fib4_eval ( const s#nft_expr * , s#nft_regs * , const s#nft_pktinfo * ) 

/* net/ipv4/ping.o */
s##posix_acl
s##vfsmount
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##sec_path
s##workqueue_struct
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##kmem_cache
s##xfrm_state
s##lwtunnel_state
s##uncached_list
s##rt6_info
s##dn_route
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##phy_device
s##sfp_bus
s##prot_inuse
s##ipv4_devconf
s##xt_table
s##inet_hashinfo
s##rt6_statistics
s##fib6_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##mempolicy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##raw_hashinfo
s##xfrm_policy
s##sock_reuseport
s#pingv6_ops struct pingv6_ops { int ( * ipv6_recv_error ) ( s#sock * , s#msghdr * , int , int * ) ; void ( * ip6_datagram_recv_common_ctl ) ( s#sock * , s#msghdr * , s#sk_buff * ) ; void ( * ip6_datagram_recv_specific_ctl ) ( s#sock * , s#msghdr * , s#sk_buff * ) ; int ( * icmpv6_err_convert ) ( t#u8 , t#u8 , int * ) ; void ( * ipv6_icmp_error ) ( s#sock * , s#sk_buff * , int , t#__be16 , t#u32 , t#u8 * ) ; int ( * ipv6_chk_addr ) ( s#net * , const s#in6_addr * , const s#net_device * , int ) ; } 
pingv6_ops extern s#pingv6_ops pingv6_ops 
ping_hash int ping_hash ( s#sock * ) 
ping_get_port int ping_get_port ( s#sock * , unsigned short ) 
ping_unhash void ping_unhash ( s#sock * ) 
ping_init_sock int ping_init_sock ( s#sock * ) 
ping_close void ping_close ( s#sock * , long ) 
ping_bind int ping_bind ( s#sock * , s#sockaddr * , int ) 
ping_err void ping_err ( s#sk_buff * , int , t#u32 ) 
ping_getfrag int ping_getfrag ( void * , char * , int , int , int , s#sk_buff * ) 
ping_common_sendmsg int ping_common_sendmsg ( int , s#msghdr * , t#size_t , void * , t#size_t ) 
ping_recvmsg int ping_recvmsg ( s#sock * , s#msghdr * , t#size_t , int , int , int * ) 
ping_queue_rcv_skb int ping_queue_rcv_skb ( s#sock * , s#sk_buff * ) 
ping_rcv t#bool ping_rcv ( s#sk_buff * ) 
ping_prot extern s#proto ping_prot 
ping_seq_start void * ping_seq_start ( s#seq_file * , t#loff_t * , t#sa_family_t ) 
ping_seq_next void * ping_seq_next ( s#seq_file * , void * , t#loff_t * ) 
ping_seq_stop void ping_seq_stop ( s#seq_file * , void * ) 
ping_seq_fops extern const s#file_operations ping_seq_fops 
s#ping_seq_afinfo struct ping_seq_afinfo { char * name ; t#sa_family_t family ; const s#file_operations * seq_fops ; const s#seq_operations seq_ops ; } 
ping_proc_register int ping_proc_register ( s#net * , s#ping_seq_afinfo * ) 
ping_proc_unregister void ping_proc_unregister ( s#net * , s#ping_seq_afinfo * ) 

/* net/ipv4/protocol.o */
s##proc_ns_operations
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##kmem_cache
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##bpf_prog_aux
s##xfrm_policy
s##workqueue_struct
s##xfrm_state
s##lwtunnel_state
s##rtable
s##rt6_info
s##dn_route
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_dir_entry
s##uevent_sock
s##prot_inuse
s##ipv4_devconf
s##fib_table
s##inet_peer_base
s##xt_table
s##rt6_statistics
s##fib6_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##nf_hook_entry
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##udp_tunnel_info
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##ndisc_ops
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
s##sec_path
s#net_offload struct net_offload { s#offload_callbacks callbacks ; unsigned int flags ; } 
inet_offloads extern const s#net_offload * inet_offloads [ 256 ] 
s#net_protocol struct net_protocol { int ( * early_demux ) ( s#sk_buff * ) ; int ( * early_demux_handler ) ( s#sk_buff * ) ; int ( * handler ) ( s#sk_buff * ) ; void ( * err_handler ) ( s#sk_buff * , t#u32 ) ; unsigned int no_policy : 1 , netns_ok : 1 , icmp_strict_tag_validation : 1 ; } 
inet_add_protocol int inet_add_protocol ( const s#net_protocol * , unsigned char ) 
inet_add_offload int inet_add_offload ( const s#net_offload * , unsigned char ) 
inet_del_protocol int inet_del_protocol ( const s#net_protocol * , unsigned char ) 
inet_del_offload int inet_del_offload ( const s#net_offload * , unsigned char ) 

/* net/ipv4/raw.o */
raw_v4_hashinfo extern s#raw_hashinfo raw_v4_hashinfo 
s##posix_acl
s##vfsmount
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##kmem_cache
s##fs_pin
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##workqueue_struct
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##lwtunnel_state
s##uncached_list
s##dn_route
s##prefix_info
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##phy_device
s##sfp_bus
s##prot_inuse
s##ipv4_devconf
s##xt_table
s##inet_hashinfo
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##mempolicy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##sock_reuseport
raw_hash_sk int raw_hash_sk ( s#sock * ) 
raw_unhash_sk void raw_unhash_sk ( s#sock * ) 
__raw_v4_lookup s#sock * __raw_v4_lookup ( s#net * , s#sock * , unsigned short , t#__be32 , t#__be32 , int ) 
raw_abort int raw_abort ( s#sock * , int ) 
raw_seq_start void * raw_seq_start ( s#seq_file * , t#loff_t * ) 
raw_seq_next void * raw_seq_next ( s#seq_file * , void * , t#loff_t * ) 
raw_seq_stop void raw_seq_stop ( s#seq_file * , void * ) 
raw_seq_open int raw_seq_open ( s#inode * , s#file * , s#raw_hashinfo * , const s#seq_operations * ) 

/* net/ipv4/route.o */
ip_tos2prio extern const t#__u8 ip_tos2prio [ 16 ] 
ip_idents_reserve t#u32 ip_idents_reserve ( t#u32 , int ) 
s##proc_ns_operations
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##kmem_cache
s##fs_pin
s##nlm_lockowner
s##nfs4_lock_state
s##workqueue_struct
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##uncached_list
s##proc_dir_entry
s##dn_route
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##phy_device
s##sfp_bus
s##udp_table
s##raw_hashinfo
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##key_user
s##key_type
s##assoc_array_ptr
s##uevent_sock
s##prot_inuse
s##xt_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##netns_ipvs
s##mpls_route
__ip_select_ident void __ip_select_ident ( s#net * , s#iphdr * , int ) 
ipv4_update_pmtu void ipv4_update_pmtu ( s#sk_buff * , s#net * , t#u32 , int , t#u32 , t#u8 , int ) 
ipv4_sk_update_pmtu void ipv4_sk_update_pmtu ( s#sk_buff * , s#sock * , t#u32 ) 
ipv4_redirect void ipv4_redirect ( s#sk_buff * , s#net * , int , t#u32 , t#u8 , int ) 
ipv4_sk_redirect void ipv4_sk_redirect ( s#sk_buff * , s#sock * ) 
rt_dst_alloc s#rtable * rt_dst_alloc ( s#net_device * , unsigned int , t#u16 , t#bool , t#bool , t#bool ) 
fib_multipath_hash int fib_multipath_hash ( const s#fib_info * , const s#flowi4 * , const s#sk_buff * ) 
ip_route_input_noref int ip_route_input_noref ( s#sk_buff * , t#__be32 , t#__be32 , t#u8 , s#net_device * ) 
__ip_route_output_key_hash s#rtable * __ip_route_output_key_hash ( s#net * , s#flowi4 * , const s#sk_buff * ) 
ip_route_output_flow s#rtable * ip_route_output_flow ( s#net * , s#flowi4 * , const s#sock * ) 

/* net/ipv4/syncookies.o */
__cookie_v4_init_sequence t#u32 __cookie_v4_init_sequence ( const s#iphdr * , const s#tcphdr * , t#u16 * ) 
__cookie_v4_check int __cookie_v4_check ( const s#iphdr * , const s#tcphdr * , t#u32 ) 
s##posix_acl
s##vfsmount
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##sec_path
s##workqueue_struct
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##kmem_cache
s##xfrm_state
s##lwtunnel_state
s##uncached_list
s##rt6_info
s##dn_route
s##prefix_info
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##phy_device
s##sfp_bus
s##prot_inuse
s##ipv4_devconf
s##xt_table
s##rt6_statistics
s##fib6_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##mempolicy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sock_reuseport
tcp_get_cookie_sock s#sock * tcp_get_cookie_sock ( s#sock * , s#sk_buff * , s#request_sock * , s#dst_entry * , t#u32 ) 
s#tcp_options_received struct tcp_options_received { long ts_recent_stamp ; t#u32 ts_recent ; t#u32 rcv_tsval ; t#u32 rcv_tsecr ; t#u16 saw_tstamp : 1 , tstamp_ok : 1 , dsack : 1 , wscale_ok : 1 , sack_ok : 3 , smc_ok : 1 , snd_wscale : 4 , rcv_wscale : 4 ; t#u8 num_sacks ; t#u16 user_mss ; t#u16 mss_clamp ; } 
cookie_timestamp_decode t#bool cookie_timestamp_decode ( s#tcp_options_received * ) 
cookie_ecn_ok t#bool cookie_ecn_ok ( const s#tcp_options_received * , const s#net * , const s#dst_entry * ) 

/* net/ipv4/tcp.o */
tcp_orphan_count extern s#percpu_counter tcp_orphan_count 
sysctl_tcp_mem extern long sysctl_tcp_mem [ 3 ] 
sysctl_tcp_rmem extern int sysctl_tcp_rmem [ 3 ] 
sysctl_tcp_wmem extern int sysctl_tcp_wmem [ 3 ] 
tcp_memory_allocated extern t#atomic_long_t tcp_memory_allocated 
s##static_key_mod
tcp_have_smc extern s#static_key_false tcp_have_smc 
tcp_sockets_allocated extern s#percpu_counter tcp_sockets_allocated 
tcp_memory_pressure extern int tcp_memory_pressure 
s##posix_acl
s##vfsmount
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##kmem_cache
s##fs_pin
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##workqueue_struct
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##lwtunnel_state
s##uncached_list
s##dn_route
s##prefix_info
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##phy_device
s##sfp_bus
s##prot_inuse
s##ipv4_devconf
s##xt_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##mempolicy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##blk_plug
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##trace_event_call
s##trace_enum_map
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##udp_table
s##raw_hashinfo
s##sock_reuseport
tcp_enter_memory_pressure void tcp_enter_memory_pressure ( s#sock * ) 
tcp_init_sock void tcp_init_sock ( s#sock * ) 
tcp_poll unsigned int tcp_poll ( s#file * , s#socket * , s#poll_table_struct * ) 
tcp_ioctl int tcp_ioctl ( s#sock * , int , unsigned long ) 
tcp_splice_read t#ssize_t tcp_splice_read ( s#socket * , t#loff_t * , s#pipe_inode_info * , t#size_t , unsigned int ) 
do_tcp_sendpages t#ssize_t do_tcp_sendpages ( s#sock * , s#page * , int , t#size_t , int ) 
tcp_sendpage int tcp_sendpage ( s#sock * , s#page * , int , t#size_t , int ) 
tcp_sendmsg int tcp_sendmsg ( s#sock * , s#msghdr * , t#size_t ) 
tcp_read_sock int tcp_read_sock ( s#sock * , t#read_descriptor_t * , t#sk_read_actor_t ) 
tcp_peek_len int tcp_peek_len ( s#socket * ) 
tcp_recvmsg int tcp_recvmsg ( s#sock * , s#msghdr * , t#size_t , int , int , int * ) 
tcp_set_state void tcp_set_state ( s#sock * , int ) 
tcp_shutdown void tcp_shutdown ( s#sock * , int ) 
tcp_close void tcp_close ( s#sock * , long ) 
tcp_disconnect int tcp_disconnect ( s#sock * , int ) 
tcp_setsockopt int tcp_setsockopt ( s#sock * , int , int , char * , unsigned int ) 
compat_tcp_setsockopt int compat_tcp_setsockopt ( s#sock * , int , int , char * , unsigned int ) 
s#tcp_info struct tcp_info { t#__u8 tcpi_state ; t#__u8 tcpi_ca_state ; t#__u8 tcpi_retransmits ; t#__u8 tcpi_probes ; t#__u8 tcpi_backoff ; t#__u8 tcpi_options ; t#__u8 tcpi_snd_wscale : 4 , tcpi_rcv_wscale : 4 ; t#__u8 tcpi_delivery_rate_app_limited : 1 ; t#__u32 tcpi_rto ; t#__u32 tcpi_ato ; t#__u32 tcpi_snd_mss ; t#__u32 tcpi_rcv_mss ; t#__u32 tcpi_unacked ; t#__u32 tcpi_sacked ; t#__u32 tcpi_lost ; t#__u32 tcpi_retrans ; t#__u32 tcpi_fackets ; t#__u32 tcpi_last_data_sent ; t#__u32 tcpi_last_ack_sent ; t#__u32 tcpi_last_data_recv ; t#__u32 tcpi_last_ack_recv ; t#__u32 tcpi_pmtu ; t#__u32 tcpi_rcv_ssthresh ; t#__u32 tcpi_rtt ; t#__u32 tcpi_rttvar ; t#__u32 tcpi_snd_ssthresh ; t#__u32 tcpi_snd_cwnd ; t#__u32 tcpi_advmss ; t#__u32 tcpi_reordering ; t#__u32 tcpi_rcv_rtt ; t#__u32 tcpi_rcv_space ; t#__u32 tcpi_total_retrans ; t#__u64 tcpi_pacing_rate ; t#__u64 tcpi_max_pacing_rate ; t#__u64 tcpi_bytes_acked ; t#__u64 tcpi_bytes_received ; t#__u32 tcpi_segs_out ; t#__u32 tcpi_segs_in ; t#__u32 tcpi_notsent_bytes ; t#__u32 tcpi_min_rtt ; t#__u32 tcpi_data_segs_in ; t#__u32 tcpi_data_segs_out ; t#__u64 tcpi_delivery_rate ; t#__u64 tcpi_busy_time ; t#__u64 tcpi_rwnd_limited ; t#__u64 tcpi_sndbuf_limited ; } 
tcp_get_info void tcp_get_info ( s#sock * , s#tcp_info * ) 
tcp_getsockopt int tcp_getsockopt ( s#sock * , int , int , char * , int * ) 
compat_tcp_getsockopt int compat_tcp_getsockopt ( s#sock * , int , int , char * , int * ) 
tcp_alloc_md5sig_pool t#bool tcp_alloc_md5sig_pool ( void ) 
s##crypto_type
s##skcipher_givcrypt_request
s#tcp_md5sig_pool struct tcp_md5sig_pool { s#ahash_request * md5_req ; void * scratch ; } 
tcp_get_md5sig_pool s#tcp_md5sig_pool * tcp_get_md5sig_pool ( void ) 
tcp_md5_hash_skb_data int tcp_md5_hash_skb_data ( s#tcp_md5sig_pool * , const s#sk_buff * , unsigned int ) 
u#tcp_md5_addr union tcp_md5_addr { s#in_addr a4 ; s#in6_addr a6 ; } 
s#tcp_md5sig_key struct tcp_md5sig_key { s#hlist_node node ; t#u8 keylen ; t#u8 family ; u#tcp_md5_addr addr ; t#u8 key [ 80 ] ; s#callback_head rcu ; } 
tcp_md5_hash_key int tcp_md5_hash_key ( s#tcp_md5sig_pool * , const s#tcp_md5sig_key * ) 
tcp_done void tcp_done ( s#sock * ) 
tcp_abort int tcp_abort ( s#sock * , int ) 

/* net/ipv4/tcp_bpf.o */
s##posix_acl
s##vfsmount
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##sec_path
s##workqueue_struct
s##udp_tunnel_info
s##btf
s##bpf_verifier_env
s##xdp_umem
s##switchdev_ops
s##kmem_cache
s##xfrm_state
s##lwtunnel_state
s##uncached_list
s##rt6_info
s##dn_route
s##prefix_info
s#tls12_crypto_info_aes_gcm_128 struct tls12_crypto_info_aes_gcm_128 { s#tls_crypto_info info ; unsigned char iv [ 8 ] ; unsigned char key [ 16 ] ; unsigned char salt [ 4 ] ; unsigned char rec_seq [ 8 ] ; } 
u#tls_crypto_context union tls_crypto_context { s#tls_crypto_info info ; s#tls12_crypto_info_aes_gcm_128 aes_gcm_128 ; } 
s#cipher_context struct cipher_context { t#u16 prepend_size ; t#u16 tag_size ; t#u16 overhead_size ; t#u16 iv_size ; char * iv ; t#u16 rec_seq_size ; char * rec_seq ; } 
s#tls_context struct tls_context { u#tls_crypto_context crypto_send ; u#tls_crypto_context crypto_recv ; s#list_head list ; s#net_device * netdev ; t#refcount_t refcount ; void * priv_ctx_tx ; void * priv_ctx_rx ; t#u8 tx_conf : 3 ; t#u8 rx_conf : 3 ; s#cipher_context tx ; s#cipher_context rx ; s#scatterlist * partially_sent_record ; t#u16 partially_sent_offset ; unsigned long flags ; t#bool in_tcp_sendpages ; t#bool pending_open_record_frags ; int ( * push_pending_record ) ( s#sock * , int ) ; void ( * sk_write_space ) ( s#sock * ) ; void ( * sk_destruct ) ( s#sock * ) ; void ( * sk_proto_close ) ( s#sock * , long ) ; int ( * setsockopt ) ( s#sock * , int , int , char * , unsigned int ) ; int ( * getsockopt ) ( s#sock * , int , int , char * , int * ) ; int ( * hash ) ( s#sock * ) ; void ( * unhash ) ( s#sock * ) ; } 
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##phy_device
s##sfp_bus
s##prot_inuse
s##ipv4_devconf
s##xt_table
s##rt6_statistics
s##fib6_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##bpf_cgroup_storage_map
s##cgroup_taskset
s##eventfd_ctx
s##mempolicy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sock_reuseport
__tcp_bpf_recvmsg int __tcp_bpf_recvmsg ( s#sock * , s#sk_psock * , s#msghdr * , int , int ) 
tcp_bpf_sendmsg_redir int tcp_bpf_sendmsg_redir ( s#sock * , s#sk_msg * , t#u32 , int ) 

/* net/ipv4/tcp_cong.o */
s##posix_acl
s##vfsmount
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##sec_path
s##workqueue_struct
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##kmem_cache
s##xfrm_state
s##lwtunnel_state
s##uncached_list
s##rt6_info
s##dn_route
s##prefix_info
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##phy_device
s##sfp_bus
s##prot_inuse
s##ipv4_devconf
s##xt_table
s##rt6_statistics
s##fib6_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##mempolicy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sock_reuseport
u##tcp_cc_info
tcp_register_congestion_control int tcp_register_congestion_control ( s#tcp_congestion_ops * ) 
tcp_unregister_congestion_control void tcp_unregister_congestion_control ( s#tcp_congestion_ops * ) 
tcp_ca_get_key_by_name t#u32 tcp_ca_get_key_by_name ( const char * , t#bool * ) 
tcp_ca_get_name_by_key char * tcp_ca_get_name_by_key ( t#u32 , char * ) 
s##ip_mc_socklist
s#tcp_rack struct tcp_rack { t#u64 mstamp ; t#u32 rtt_us ; t#u32 end_seq ; t#u8 advanced ; t#u8 reord ; } 
s#tcp_sack_block struct tcp_sack_block { t#u32 start_seq ; t#u32 end_seq ; } 
s#tcp_sock_af_ops struct tcp_sock_af_ops { s#tcp_md5sig_key * ( * md5_lookup ) ( const s#sock * , const s#sock * ) ; int ( * calc_md5_hash ) ( char * , const s#tcp_md5sig_key * , const s#sock * , const s#sk_buff * ) ; int ( * md5_parse ) ( s#sock * , char * , int ) ; } 
s#tcp_md5sig_info struct tcp_md5sig_info { s#hlist_head head ; s#callback_head rcu ; } 
s#tcp_fastopen_cookie struct tcp_fastopen_cookie { union { t#u8 val [ 16 ] ; s#in6_addr addr ; } ; t#s8 len ; t#bool exp ; } 
s#tcp_fastopen_request struct tcp_fastopen_request { s#tcp_fastopen_cookie cookie ; s#msghdr * data ; t#size_t size ; int copied ; } 
s#tcp_sock struct tcp_sock { s#inet_connection_sock inet_conn ; t#u16 tcp_header_len ; t#u16 gso_segs ; t#__be32 pred_flags ; t#u64 bytes_received ; t#u32 segs_in ; t#u32 data_segs_in ; t#u32 rcv_nxt ; t#u32 copied_seq ; t#u32 rcv_wup ; t#u32 snd_nxt ; t#u32 segs_out ; t#u32 data_segs_out ; t#u64 bytes_acked ; t#u32 snd_una ; t#u32 snd_sml ; t#u32 rcv_tstamp ; t#u32 lsndtime ; t#u32 last_oow_ack_time ; t#u32 tsoffset ; s#list_head tsq_node ; t#u32 snd_wl1 ; t#u32 snd_wnd ; t#u32 max_window ; t#u32 mss_cache ; t#u32 window_clamp ; t#u32 rcv_ssthresh ; s#tcp_rack rack ; t#u16 advmss ; t#u32 chrono_start ; t#u32 chrono_stat [ 3 ] ; t#u8 chrono_type : 2 , rate_app_limited : 1 , fastopen_connect : 1 , is_sack_reneg : 1 , unused : 3 ; t#u8 nonagle : 4 , thin_lto : 1 , unused1 : 1 , repair : 1 , frto : 1 ; t#u8 repair_queue ; t#u8 syn_data : 1 , syn_fastopen : 1 , syn_fastopen_exp : 1 , syn_fastopen_ch : 1 , syn_data_acked : 1 , save_syn : 1 , is_cwnd_limited : 1 , syn_smc : 1 ; t#u32 tlp_high_seq ; t#u64 tcp_mstamp ; t#u32 srtt_us ; t#u32 mdev_us ; t#u32 mdev_max_us ; t#u32 rttvar_us ; t#u32 rtt_seq ; s#minmax rtt_min ; t#u32 packets_out ; t#u32 retrans_out ; t#u32 max_packets_out ; t#u32 max_packets_seq ; t#u16 urg_data ; t#u8 ecn_flags ; t#u8 keepalive_probes ; t#u32 reordering ; t#u32 snd_up ; s#tcp_options_received rx_opt ; t#u32 snd_ssthresh ; t#u32 snd_cwnd ; t#u32 snd_cwnd_cnt ; t#u32 snd_cwnd_clamp ; t#u32 snd_cwnd_used ; t#u32 snd_cwnd_stamp ; t#u32 prior_cwnd ; t#u32 prr_delivered ; t#u32 prr_out ; t#u32 delivered ; t#u32 lost ; t#u32 app_limited ; t#u64 first_tx_mstamp ; t#u64 delivered_mstamp ; t#u32 rate_delivered ; t#u32 rate_interval_us ; t#u32 rcv_wnd ; t#u32 write_seq ; t#u32 notsent_lowat ; t#u32 pushed_seq ; t#u32 lost_out ; t#u32 sacked_out ; t#u32 fackets_out ; s#hrtimer pacing_timer ; s#sk_buff * lost_skb_hint ; s#sk_buff * retransmit_skb_hint ; s#rb_root out_of_order_queue ; s#sk_buff * ooo_last_skb ; s#tcp_sack_block duplicate_sack [ 1 ] ; s#tcp_sack_block selective_acks [ 4 ] ; s#tcp_sack_block recv_sack_cache [ 4 ] ; s#sk_buff * highest_sack ; int lost_cnt_hint ; t#u32 prior_ssthresh ; t#u32 high_seq ; t#u32 retrans_stamp ; t#u32 undo_marker ; int undo_retrans ; t#u32 total_retrans ; t#u32 urg_seq ; unsigned int keepalive_time ; unsigned int keepalive_intvl ; int linger2 ; t#u8 bpf_sock_ops_cb_flags ; struct { t#u32 rtt_us ; t#u32 seq ; t#u64 time ; } rcv_rtt_est ; struct { int space ; t#u32 seq ; t#u64 time ; } rcvq_space ; struct { t#u32 probe_seq_start ; t#u32 probe_seq_end ; } mtu_probe ; t#u32 mtu_info ; const s#tcp_sock_af_ops * af_specific ; s#tcp_md5sig_info * md5sig_info ; s#tcp_fastopen_request * fastopen_req ; s#request_sock * fastopen_rsk ; t#u32 * saved_syn ; } 
tcp_slow_start t#u32 tcp_slow_start ( s#tcp_sock * , t#u32 ) 
tcp_cong_avoid_ai void tcp_cong_avoid_ai ( s#tcp_sock * , t#u32 , t#u32 ) 
tcp_reno_cong_avoid void tcp_reno_cong_avoid ( s#sock * , t#u32 , t#u32 ) 
tcp_reno_ssthresh t#u32 tcp_reno_ssthresh ( s#sock * ) 
tcp_reno_undo_cwnd t#u32 tcp_reno_undo_cwnd ( s#sock * ) 

/* net/ipv4/tcp_fastopen.o */
s##posix_acl
s##vfsmount
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##sec_path
s##workqueue_struct
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##kmem_cache
s##xfrm_state
s##lwtunnel_state
s##uncached_list
s##rt6_info
s##dn_route
s##prefix_info
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##phy_device
s##sfp_bus
s##prot_inuse
s##ipv4_devconf
s##xt_table
s##rt6_statistics
s##fib6_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##mempolicy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sock_reuseport
tcp_fastopen_defer_connect t#bool tcp_fastopen_defer_connect ( s#sock * , int * ) 

/* net/ipv4/tcp_input.o */
sysctl_tcp_adv_win_scale extern int sysctl_tcp_adv_win_scale 
s##posix_acl
s##vfsmount
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##sec_path
s##workqueue_struct
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##kmem_cache
s##xfrm_state
s##lwtunnel_state
s##uncached_list
s##rt6_info
s##dn_route
s##prefix_info
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##phy_device
s##sfp_bus
s##prot_inuse
s##ipv4_devconf
s##xt_table
s##rt6_statistics
s##fib6_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##mempolicy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sock_reuseport
s##ip_mc_socklist
u##tcp_cc_info
clean_acked_data_enable void clean_acked_data_enable ( s#inet_connection_sock * , void ( * ) ( s#sock * , t#u32 ) ) 
clean_acked_data_disable void clean_acked_data_disable ( s#inet_connection_sock * ) 
tcp_enter_quickack_mode void tcp_enter_quickack_mode ( s#sock * , unsigned int ) 
tcp_initialize_rcv_mss void tcp_initialize_rcv_mss ( s#sock * ) 
tcp_enter_cwr void tcp_enter_cwr ( s#sock * ) 
tcp_simple_retransmit void tcp_simple_retransmit ( s#sock * ) 
tcp_parse_options void tcp_parse_options ( const s#net * , const s#sk_buff * , s#tcp_options_received * , int , s#tcp_fastopen_cookie * ) 
tcp_parse_md5sig_option const t#u8 * tcp_parse_md5sig_option ( const s#tcphdr * ) 
tcp_rcv_established void tcp_rcv_established ( s#sock * , s#sk_buff * , const s#tcphdr * , unsigned int ) 
tcp_rcv_state_process int tcp_rcv_state_process ( s#sock * , s#sk_buff * ) 
inet_reqsk_alloc s#request_sock * inet_reqsk_alloc ( const s#request_sock_ops * , s#sock * , t#bool ) 
e#tcp_synack_type enum tcp_synack_type { TCP_SYNACK_NORMAL , TCP_SYNACK_FASTOPEN , TCP_SYNACK_COOKIE , } 
s#tcp_request_sock_ops struct tcp_request_sock_ops { t#u16 mss_clamp ; s#tcp_md5sig_key * ( * req_md5_lookup ) ( const s#sock * , const s#sock * ) ; int ( * calc_md5_hash ) ( char * , const s#tcp_md5sig_key * , const s#sock * , const s#sk_buff * ) ; void ( * init_req ) ( s#request_sock * , const s#sock * , s#sk_buff * ) ; t#__u32 ( * cookie_init_seq ) ( const s#sk_buff * , t#__u16 * ) ; s#dst_entry * ( * route_req ) ( const s#sock * , s#flowi * , const s#request_sock * ) ; t#u32 ( * init_seq ) ( const s#sk_buff * ) ; t#u32 ( * init_ts_off ) ( const s#sk_buff * ) ; int ( * send_synack ) ( const s#sock * , s#dst_entry * , s#flowi * , s#request_sock * , s#tcp_fastopen_cookie * , e#tcp_synack_type ) ; } 
tcp_conn_request int tcp_conn_request ( s#request_sock_ops * , const s#tcp_request_sock_ops * , s#sock * , s#sk_buff * ) 

/* net/ipv4/tcp_ipv4.o */
s##kmem_cache
tcp_hashinfo extern s#inet_hashinfo tcp_hashinfo 
s##posix_acl
s##vfsmount
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##fs_pin
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##workqueue_struct
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##lwtunnel_state
s##uncached_list
s##dn_route
s##prefix_info
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##phy_device
s##sfp_bus
s##prot_inuse
s##ipv4_devconf
s##xt_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##mempolicy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##udp_table
s##raw_hashinfo
s##sock_reuseport
tcp_twsk_unique int tcp_twsk_unique ( s#sock * , s#sock * , void * ) 
tcp_v4_connect int tcp_v4_connect ( s#sock * , s#sockaddr * , int ) 
tcp_v4_mtu_reduced void tcp_v4_mtu_reduced ( s#sock * ) 
tcp_req_err void tcp_req_err ( s#sock * , t#u32 , t#bool ) 
tcp_v4_send_check void tcp_v4_send_check ( s#sock * , s#sk_buff * ) 
tcp_md5_do_lookup s#tcp_md5sig_key * tcp_md5_do_lookup ( const s#sock * , const u#tcp_md5_addr * , int ) 
tcp_v4_md5_lookup s#tcp_md5sig_key * tcp_v4_md5_lookup ( const s#sock * , const s#sock * ) 
tcp_md5_do_add int tcp_md5_do_add ( s#sock * , const u#tcp_md5_addr * , int , const t#u8 * , t#u8 , t#gfp_t ) 
tcp_md5_do_del int tcp_md5_do_del ( s#sock * , const u#tcp_md5_addr * , int ) 
tcp_v4_md5_hash_skb int tcp_v4_md5_hash_skb ( char * , const s#tcp_md5sig_key * , const s#sock * , const s#sk_buff * ) 
tcp_v4_conn_request int tcp_v4_conn_request ( s#sock * , s#sk_buff * ) 
tcp_v4_syn_recv_sock s#sock * tcp_v4_syn_recv_sock ( const s#sock * , s#sk_buff * , s#request_sock * , s#dst_entry * , s#request_sock * , t#bool * ) 
tcp_v4_do_rcv int tcp_v4_do_rcv ( s#sock * , s#sk_buff * ) 
tcp_add_backlog t#bool tcp_add_backlog ( s#sock * , s#sk_buff * ) 
tcp_filter int tcp_filter ( s#sock * , s#sk_buff * ) 
inet_sk_rx_dst_set void inet_sk_rx_dst_set ( s#sock * , const s#sk_buff * ) 
ipv4_specific extern const s#inet_connection_sock_af_ops ipv4_specific 
tcp_v4_destroy_sock void tcp_v4_destroy_sock ( s#sock * ) 
tcp_seq_open int tcp_seq_open ( s#inode * , s#file * ) 
s#tcp_seq_afinfo struct tcp_seq_afinfo { char * name ; t#sa_family_t family ; const s#file_operations * seq_fops ; s#seq_operations seq_ops ; } 
tcp_proc_register int tcp_proc_register ( s#net * , s#tcp_seq_afinfo * ) 
tcp_proc_unregister void tcp_proc_unregister ( s#net * , s#tcp_seq_afinfo * ) 
tcp_prot extern s#proto tcp_prot 

/* net/ipv4/tcp_minisocks.o */
e#tcp_tw_status enum tcp_tw_status { TCP_TW_SUCCESS = 0 , TCP_TW_RST = 1 , TCP_TW_ACK = 2 , TCP_TW_SYN = 3 } 
s##proc_ns_operations
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##kmem_cache
s##fs_pin
s##nlm_lockowner
s##nfs4_lock_state
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##workqueue_struct
s##bpf_prog_array
s##cgroup_taskset
s##kstatfs
s##eventfd_ctx
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_dir_entry
s##uevent_sock
s##prot_inuse
s##ipv4_devconf
s##xt_table
s##lwtunnel_state
s##uncached_list
s##dn_route
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##nf_hook_entry
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##prefix_info
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
s##sock_reuseport
s##udp_table
s##raw_hashinfo
tcp_timewait_state_process e#tcp_tw_status tcp_timewait_state_process ( s#inet_timewait_sock * , s#sk_buff * , const s#tcphdr * ) 
tcp_time_wait void tcp_time_wait ( s#sock * , int , int ) 
tcp_twsk_destructor void tcp_twsk_destructor ( s#sock * ) 
tcp_openreq_init_rwin extern void tcp_openreq_init_rwin ( s#request_sock * , const s#sock * , const s#dst_entry * ) 
tcp_ca_openreq_child void tcp_ca_openreq_child ( s#sock * , const s#dst_entry * ) 
tcp_create_openreq_child s#sock * tcp_create_openreq_child ( const s#sock * , s#request_sock * , s#sk_buff * ) 
tcp_check_req s#sock * tcp_check_req ( s#sock * , s#sk_buff * , s#request_sock * , t#bool ) 
tcp_child_process int tcp_child_process ( s#sock * , s#sock * , s#sk_buff * ) 

/* net/ipv4/tcp_nv.o */
s##posix_acl
s##vfsmount
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##sec_path
s##workqueue_struct
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##kmem_cache
s##xfrm_state
s##lwtunnel_state
s##uncached_list
s##rt6_info
s##dn_route
s##prefix_info
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##phy_device
s##sfp_bus
s##prot_inuse
s##ipv4_devconf
s##xt_table
s##rt6_statistics
s##fib6_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##mempolicy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sock_reuseport
tcpnv_get_info t#size_t tcpnv_get_info ( s#sock * , t#u32 , int * , u#tcp_cc_info * ) 

/* net/ipv4/tcp_offload.o */
s##proc_ns_operations
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##kmem_cache
s##udp_table
s##raw_hashinfo
s##bpf_prog_aux
s##xfrm_policy
s##workqueue_struct
s##xfrm_state
s##lwtunnel_state
s##uncached_list
s##rt6_info
s##dn_route
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_dir_entry
s##uevent_sock
s##prot_inuse
s##ipv4_devconf
s##xt_table
s##rt6_statistics
s##fib6_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##nf_hook_entry
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##udp_tunnel_info
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##prefix_info
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
s##sec_path
tcp_gro_complete int tcp_gro_complete ( s#sk_buff * ) 

/* net/ipv4/tcp_output.o */
tcp_select_initial_window void tcp_select_initial_window ( int , t#__u32 , t#__u32 * , t#__u32 * , int , t#__u8 * , t#__u32 ) 
s##posix_acl
s##vfsmount
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##sec_path
s##workqueue_struct
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##kmem_cache
s##xfrm_state
s##lwtunnel_state
s##uncached_list
s##rt6_info
s##dn_route
s##prefix_info
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##phy_device
s##sfp_bus
s##prot_inuse
s##ipv4_devconf
s##xt_table
s##rt6_statistics
s##fib6_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##mempolicy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sock_reuseport
tcp_release_cb void tcp_release_cb ( s#sock * ) 
tcp_mss_to_mtu int tcp_mss_to_mtu ( s#sock * , int ) 
tcp_mtup_init void tcp_mtup_init ( s#sock * ) 
tcp_sync_mss unsigned int tcp_sync_mss ( s#sock * , t#u32 ) 
tcp_tso_autosize t#u32 tcp_tso_autosize ( const s#sock * , unsigned int , int ) 
tcp_make_synack s#sk_buff * tcp_make_synack ( const s#sock * , s#dst_entry * , s#request_sock * , s#tcp_fastopen_cookie * , e#tcp_synack_type ) 
tcp_connect int tcp_connect ( s#sock * ) 
__tcp_send_ack void __tcp_send_ack ( s#sock * , t#u32 ) 
tcp_rtx_synack int tcp_rtx_synack ( const s#sock * , s#request_sock * ) 

/* net/ipv4/tcp_rate.o */
s##posix_acl
s##vfsmount
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##sec_path
s##workqueue_struct
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##kmem_cache
s##xfrm_state
s##lwtunnel_state
s##uncached_list
s##rt6_info
s##dn_route
s##prefix_info
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##phy_device
s##sfp_bus
s##prot_inuse
s##ipv4_devconf
s##xt_table
s##rt6_statistics
s##fib6_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##mempolicy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sock_reuseport
tcp_rate_check_app_limited void tcp_rate_check_app_limited ( s#sock * ) 

/* net/ipv4/tcp_timer.o */
s##proc_ns_operations
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##workqueue_struct
s##bpf_prog_array
s##cgroup_taskset
s##kstatfs
s##eventfd_ctx
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##kmem_cache
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_dir_entry
s##uevent_sock
s##prot_inuse
s##ipv4_devconf
s##xt_table
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##lwtunnel_state
s##uncached_list
s##dn_route
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##nf_hook_entry
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##prefix_info
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
s##sec_path
s##xfrm_policy
s##sock_reuseport
s##udp_table
s##raw_hashinfo
tcp_syn_ack_timeout void tcp_syn_ack_timeout ( const s#request_sock * ) 
tcp_set_keepalive void tcp_set_keepalive ( s#sock * , int ) 

/* net/ipv4/tcp_ulp.o */
s##posix_acl
s##vfsmount
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##sec_path
s##workqueue_struct
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##kmem_cache
s##xfrm_state
s##lwtunnel_state
s##uncached_list
s##rt6_info
s##dn_route
s##prefix_info
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##phy_device
s##sfp_bus
s##prot_inuse
s##ipv4_devconf
s##xt_table
s##rt6_statistics
s##fib6_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##mempolicy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sock_reuseport
tcp_register_ulp int tcp_register_ulp ( s#tcp_ulp_ops * ) 
tcp_unregister_ulp void tcp_unregister_ulp ( s#tcp_ulp_ops * ) 

/* net/ipv4/tcp_vegas.o */
s##posix_acl
s##vfsmount
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##sec_path
s##workqueue_struct
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##kmem_cache
s##xfrm_state
s##lwtunnel_state
s##uncached_list
s##rt6_info
s##dn_route
s##prefix_info
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##phy_device
s##sfp_bus
s##prot_inuse
s##ipv4_devconf
s##xt_table
s##rt6_statistics
s##fib6_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##mempolicy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sock_reuseport
tcp_vegas_init void tcp_vegas_init ( s#sock * ) 
tcp_vegas_pkts_acked void tcp_vegas_pkts_acked ( s#sock * , const s#ack_sample * ) 
tcp_vegas_state void tcp_vegas_state ( s#sock * , t#u8 ) 
tcp_vegas_cwnd_event void tcp_vegas_cwnd_event ( s#sock * , e#tcp_ca_event ) 
tcp_vegas_get_info t#size_t tcp_vegas_get_info ( s#sock * , t#u32 , int * , u#tcp_cc_info * ) 

/* net/ipv4/tunnel4.o */
s##proc_ns_operations
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##kmem_cache
s##fs_pin
s##nlm_lockowner
s##nfs4_lock_state
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##bpf_prog_aux
s##workqueue_struct
s##lwtunnel_state
s##uncached_list
s##proc_dir_entry
s##dn_route
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##key_user
s##key_type
s##assoc_array_ptr
s##uevent_sock
s##prot_inuse
s##ipv4_devconf
s##xt_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##nf_hook_entry
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##udp_tunnel_info
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##prefix_info
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
s#xfrm_tunnel struct xfrm_tunnel { int ( * handler ) ( s#sk_buff * ) ; int ( * err_handler ) ( s#sk_buff * , t#u32 ) ; s#xfrm_tunnel * next ; int priority ; } 
xfrm4_tunnel_register int xfrm4_tunnel_register ( s#xfrm_tunnel * , unsigned short ) 
xfrm4_tunnel_deregister int xfrm4_tunnel_deregister ( s#xfrm_tunnel * , unsigned short ) 

/* net/ipv4/udp.o */
udp_table extern s#udp_table udp_table 
sysctl_udp_mem extern long sysctl_udp_mem [ 3 ] 
sysctl_udp_rmem_min extern int sysctl_udp_rmem_min 
sysctl_udp_wmem_min extern int sysctl_udp_wmem_min 
udp_memory_allocated extern t#atomic_long_t udp_memory_allocated 
s##posix_acl
s##vfsmount
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##kmem_cache
s##fs_pin
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##workqueue_struct
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##lwtunnel_state
s##uncached_list
s##dn_route
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##phy_device
s##sfp_bus
s##prot_inuse
s##xt_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##mempolicy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##blk_plug
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##raw_hashinfo
udp_lib_get_port int udp_lib_get_port ( s#sock * , unsigned short , unsigned int ) 
__udp4_lib_lookup s#sock * __udp4_lib_lookup ( s#net * , t#__be32 , t#__be16 , t#__be32 , t#__be16 , int , s#udp_table * , s#sk_buff * ) 
udp4_lib_lookup_skb s#sock * udp4_lib_lookup_skb ( s#sk_buff * , t#__be16 , t#__be16 ) 
udp4_lib_lookup s#sock * udp4_lib_lookup ( s#net * , t#__be32 , t#__be16 , t#__be32 , t#__be16 , int ) 
udp_flush_pending_frames void udp_flush_pending_frames ( s#sock * ) 
udp4_hwcsum void udp4_hwcsum ( s#sk_buff * , t#__be32 , t#__be32 ) 
udp_set_csum void udp_set_csum ( t#bool , s#sk_buff * , t#__be32 , t#__be32 , int ) 
udp_push_pending_frames int udp_push_pending_frames ( s#sock * ) 
udp_sendmsg int udp_sendmsg ( s#sock * , s#msghdr * , t#size_t ) 
udp_skb_destructor void udp_skb_destructor ( s#sock * , s#sk_buff * ) 
__udp_enqueue_schedule_skb int __udp_enqueue_schedule_skb ( s#sock * , s#sk_buff * ) 
udp_destruct_sock void udp_destruct_sock ( s#sock * ) 
udp_init_sock int udp_init_sock ( s#sock * ) 
skb_consume_udp void skb_consume_udp ( s#sock * , s#sk_buff * , int ) 
udp_ioctl int udp_ioctl ( s#sock * , int , unsigned long ) 
__skb_recv_udp s#sk_buff * __skb_recv_udp ( s#sock * , unsigned int , int , int * , int * , int * ) 
udp_pre_connect int udp_pre_connect ( s#sock * , s#sockaddr * , int ) 
__udp_disconnect int __udp_disconnect ( s#sock * , int ) 
udp_disconnect int udp_disconnect ( s#sock * , int ) 
udp_lib_unhash void udp_lib_unhash ( s#sock * ) 
udp_lib_rehash void udp_lib_rehash ( s#sock * , t#u16 ) 
udp_encap_enable void udp_encap_enable ( void ) 
udp_sk_rx_dst_set t#bool udp_sk_rx_dst_set ( s#sock * , s#dst_entry * ) 
udp_lib_setsockopt int udp_lib_setsockopt ( s#sock * , int , int , char * , unsigned int , int ( * ) ( s#sock * ) ) 
udp_lib_getsockopt int udp_lib_getsockopt ( s#sock * , int , int , char * , int * ) 
udp_poll unsigned int udp_poll ( s#file * , s#socket * , t#poll_table * ) 
udp_abort int udp_abort ( s#sock * , int ) 
udp_prot extern s#proto udp_prot 
udp_seq_open int udp_seq_open ( s#inode * , s#file * ) 
s#udp_seq_afinfo struct udp_seq_afinfo { char * name ; t#sa_family_t family ; s#udp_table * udp_table ; const s#file_operations * seq_fops ; s#seq_operations seq_ops ; } 
udp_proc_register int udp_proc_register ( s#net * , s#udp_seq_afinfo * ) 
udp_proc_unregister void udp_proc_unregister ( s#net * , s#udp_seq_afinfo * ) 
udp_flow_hashrnd t#u32 udp_flow_hashrnd ( void ) 

/* net/ipv4/udp_offload.o */
s##proc_ns_operations
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##kmem_cache
s##inet_hashinfo
s##raw_hashinfo
s##bpf_prog_aux
s##xfrm_policy
s##workqueue_struct
s##xfrm_state
s##lwtunnel_state
s##uncached_list
s##rt6_info
s##dn_route
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_dir_entry
s##uevent_sock
s##prot_inuse
s##ipv4_devconf
s##xt_table
s##rt6_statistics
s##fib6_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##nf_hook_entry
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##udp_tunnel_info
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##prefix_info
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
s##sec_path
skb_udp_tunnel_segment s#sk_buff * skb_udp_tunnel_segment ( s#sk_buff * , t#netdev_features_t , t#bool ) 
__udp_gso_segment s#sk_buff * __udp_gso_segment ( s#sk_buff * , t#netdev_features_t ) 
s#udphdr struct udphdr { t#__be16 source ; t#__be16 dest ; t#__be16 len ; t#__sum16 check ; } 
t#udp_lookup_t typedef s#sock * ( * udp_lookup_t ) ( s#sk_buff * , t#__be16 , t#__be16 ) 
udp_gro_receive s#sk_buff * udp_gro_receive ( s#list_head * , s#sk_buff * , s#udphdr * , t#udp_lookup_t ) 
udp_gro_complete int udp_gro_complete ( s#sk_buff * , int , t#udp_lookup_t ) 

/* net/ipv4/udp_tunnel.o */
s##proc_ns_operations
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##workqueue_struct
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##kmem_cache
s##xfrm_state
s##uncached_list
s##proc_dir_entry
s##dn_route
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##phy_device
s##sfp_bus
s##sec_path
s##inet_hashinfo
s##raw_hashinfo
s##xfrm_policy
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##key_user
s##key_type
s##assoc_array_ptr
s##uevent_sock
s##prot_inuse
s##ipv4_devconf
s##xt_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##netns_ipvs
s##mpls_route
s#udp_port_cfg struct udp_port_cfg { t#u8 family ; union { s#in_addr local_ip ; s#in6_addr local_ip6 ; } ; union { s#in_addr peer_ip ; s#in6_addr peer_ip6 ; } ; t#__be16 local_udp_port ; t#__be16 peer_udp_port ; unsigned int use_udp_checksums : 1 , use_udp6_tx_checksums : 1 , use_udp6_rx_checksums : 1 , ipv6_v6only : 1 ; } 
udp_sock_create4 int udp_sock_create4 ( s#net * , s#udp_port_cfg * , s#socket * * ) 
t#udp_tunnel_encap_rcv_t typedef int ( * udp_tunnel_encap_rcv_t ) ( s#sock * , s#sk_buff * ) 
t#udp_tunnel_encap_destroy_t typedef void ( * udp_tunnel_encap_destroy_t ) ( s#sock * ) 
t#udp_tunnel_gro_receive_t typedef s#sk_buff * ( * udp_tunnel_gro_receive_t ) ( s#sock * , s#list_head * , s#sk_buff * ) 
t#udp_tunnel_gro_complete_t typedef int ( * udp_tunnel_gro_complete_t ) ( s#sock * , s#sk_buff * , int ) 
s#udp_tunnel_sock_cfg struct udp_tunnel_sock_cfg { void * sk_user_data ; t#__u8 encap_type ; t#udp_tunnel_encap_rcv_t encap_rcv ; t#udp_tunnel_encap_destroy_t encap_destroy ; t#udp_tunnel_gro_receive_t gro_receive ; t#udp_tunnel_gro_complete_t gro_complete ; } 
setup_udp_tunnel_sock void setup_udp_tunnel_sock ( s#net * , s#socket * , s#udp_tunnel_sock_cfg * ) 
udp_tunnel_push_rx_port void udp_tunnel_push_rx_port ( s#net_device * , s#socket * , unsigned short ) 
udp_tunnel_drop_rx_port void udp_tunnel_drop_rx_port ( s#net_device * , s#socket * , unsigned short ) 
udp_tunnel_notify_add_rx_port void udp_tunnel_notify_add_rx_port ( s#socket * , unsigned short ) 
udp_tunnel_notify_del_rx_port void udp_tunnel_notify_del_rx_port ( s#socket * , unsigned short ) 
udp_tunnel_xmit_skb void udp_tunnel_xmit_skb ( s#rtable * , s#sock * , s#sk_buff * , t#__be32 , t#__be32 , t#__u8 , t#__u8 , t#__be16 , t#__be16 , t#__be16 , t#bool , t#bool ) 
udp_tunnel_sock_release void udp_tunnel_sock_release ( s#socket * ) 
s##dst_cache_pcpu
udp_tun_rx_dst s#metadata_dst * udp_tun_rx_dst ( s#sk_buff * , unsigned short , t#__be16 , t#__be64 , int ) 

/* net/ipv4/udplite.o */
udplite_table extern s#udp_table udplite_table 
s##proc_ns_operations
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##workqueue_struct
s##bpf_prog_array
s##cgroup_taskset
s##kstatfs
s##eventfd_ctx
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##kmem_cache
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_dir_entry
s##uevent_sock
s##sec_path
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##xfrm_state
s##lwtunnel_state
s##uncached_list
s##rt6_info
s##dn_route
s##prefix_info
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
s##prot_inuse
s##ipv4_devconf
s##xt_table
s##inet_hashinfo
s##rt6_statistics
s##fib6_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##xfrm_policy
s##sock_reuseport
s##raw_hashinfo
udplite_prot extern s#proto udplite_prot 

/* net/ipv4/xfrm4_input.o */
s##proc_ns_operations
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##kmem_cache
s##fs_pin
s##nlm_lockowner
s##nfs4_lock_state
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##bpf_prog_aux
s##workqueue_struct
s##lwtunnel_state
s##uncached_list
s##proc_dir_entry
s##dn_route
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##key_user
s##key_type
s##assoc_array_ptr
s##uevent_sock
s##prot_inuse
s##ipv4_devconf
s##xt_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##udp_tunnel_info
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##prefix_info
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
xfrm4_rcv int xfrm4_rcv ( s#sk_buff * ) 

/* net/ipv4/xfrm4_output.o */
s##proc_ns_operations
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##kmem_cache
s##fs_pin
s##nlm_lockowner
s##nfs4_lock_state
s##workqueue_struct
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##lwtunnel_state
s##uncached_list
s##proc_dir_entry
s##dn_route
s##prefix_info
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##phy_device
s##sfp_bus
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##key_user
s##key_type
s##assoc_array_ptr
s##uevent_sock
s##prot_inuse
s##ipv4_devconf
s##xt_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
xfrm4_prepare_output int xfrm4_prepare_output ( s#xfrm_state * , s#sk_buff * ) 

/* net/ipv4/xfrm4_protocol.o */
s##proc_ns_operations
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##kmem_cache
s##fs_pin
s##nlm_lockowner
s##nfs4_lock_state
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##bpf_prog_aux
s##workqueue_struct
s##lwtunnel_state
s##uncached_list
s##proc_dir_entry
s##dn_route
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##key_user
s##key_type
s##assoc_array_ptr
s##uevent_sock
s##prot_inuse
s##ipv4_devconf
s##xt_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##nf_hook_entry
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##udp_tunnel_info
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##prefix_info
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
xfrm4_rcv_cb int xfrm4_rcv_cb ( s#sk_buff * , t#u8 , int ) 
xfrm4_rcv_encap int xfrm4_rcv_encap ( s#sk_buff * , int , t#__be32 , int ) 
s#xfrm4_protocol struct xfrm4_protocol { int ( * handler ) ( s#sk_buff * ) ; int ( * input_handler ) ( s#sk_buff * , int , t#__be32 , int ) ; int ( * cb_handler ) ( s#sk_buff * , int ) ; int ( * err_handler ) ( s#sk_buff * , t#u32 ) ; s#xfrm4_protocol * next ; int priority ; } 
xfrm4_protocol_register int xfrm4_protocol_register ( s#xfrm4_protocol * , unsigned char ) 
xfrm4_protocol_deregister int xfrm4_protocol_deregister ( s#xfrm4_protocol * , unsigned char ) 
xfrm4_protocol_init void xfrm4_protocol_init ( void ) 

/* net/ipv6/addrconf.o */
s##proc_ns_operations
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##workqueue_struct
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##kmem_cache
s##xfrm_state
s##uncached_list
s##proc_dir_entry
s##dn_route
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##ip_mc_list
s##dn_dev
s##wireless_dev
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##mpls_dev
s##tcf_walker
s##net_rate_estimator
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
s##sec_path
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##key_user
s##key_type
s##assoc_array_ptr
s##uevent_sock
s##prot_inuse
s##xt_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
ipv6_dev_get_saddr int ipv6_dev_get_saddr ( s#net * , const s#net_device * , const s#in6_addr * , unsigned int , s#in6_addr * ) 
ipv6_chk_addr int ipv6_chk_addr ( s#net * , const s#in6_addr * , const s#net_device * , int ) 
ipv6_chk_addr_and_flags int ipv6_chk_addr_and_flags ( s#net * , const s#in6_addr * , const s#net_device * , int , t#u32 ) 
ipv6_chk_custom_prefix t#bool ipv6_chk_custom_prefix ( const s#in6_addr * , const unsigned int , s#net_device * ) 
ipv6_chk_prefix int ipv6_chk_prefix ( const s#in6_addr * , s#net_device * ) 
addrconf_prefix_rcv_add_addr int addrconf_prefix_rcv_add_addr ( s#net * , s#net_device * , const s#prefix_info * , s#inet6_dev * , const s#in6_addr * , int , t#u32 , t#bool , t#bool , t#__u32 , t#u32 ) 
addrconf_add_linklocal void addrconf_add_linklocal ( s#inet6_dev * , const s#in6_addr * , t#u32 ) 

/* net/ipv6/addrconf_core.o */
s##proc_ns_operations
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##workqueue_struct
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##kmem_cache
s##xfrm_state
s##lwtunnel_state
s##uncached_list
s##rt6_info
s##dn_route
s##proc_dir_entry
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##phy_device
s##sfp_bus
s##sec_path
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##key_user
s##key_type
s##assoc_array_ptr
s##uevent_sock
s##prot_inuse
s##ipv4_devconf
s##xt_table
s##rt6_statistics
s##fib6_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
__fib6_flush_trees extern void ( * __fib6_flush_trees ) ( s#net * ) 
__ipv6_addr_type int __ipv6_addr_type ( const s#in6_addr * ) 
register_inet6addr_notifier int register_inet6addr_notifier ( s#notifier_block * ) 
unregister_inet6addr_notifier int unregister_inet6addr_notifier ( s#notifier_block * ) 
inet6addr_notifier_call_chain int inet6addr_notifier_call_chain ( unsigned long , void * ) 
register_inet6addr_validator_notifier int register_inet6addr_validator_notifier ( s#notifier_block * ) 
unregister_inet6addr_validator_notifier int unregister_inet6addr_validator_notifier ( s#notifier_block * ) 
inet6addr_validator_notifier_call_chain int inet6addr_validator_notifier_call_chain ( unsigned long , void * ) 
s#ipv6_stub struct ipv6_stub { int ( * ipv6_sock_mc_join ) ( s#sock * , int , const s#in6_addr * ) ; int ( * ipv6_sock_mc_drop ) ( s#sock * , int , const s#in6_addr * ) ; int ( * ipv6_dst_lookup ) ( s#net * , s#sock * , s#dst_entry * * , s#flowi6 * ) ; void ( * udpv6_encap_enable ) ( void ) ; void ( * ndisc_send_na ) ( s#net_device * , const s#in6_addr * , const s#in6_addr * , t#bool , t#bool , t#bool , t#bool ) ; s#neigh_table * nd_tbl ; } 
ipv6_stub extern const s#ipv6_stub * ipv6_stub 
in6addr_loopback extern const s#in6_addr in6addr_loopback 
in6addr_any extern const s#in6_addr in6addr_any 
in6addr_linklocal_allnodes extern const s#in6_addr in6addr_linklocal_allnodes 
in6addr_linklocal_allrouters extern const s#in6_addr in6addr_linklocal_allrouters 
in6addr_interfacelocal_allnodes extern const s#in6_addr in6addr_interfacelocal_allnodes 
in6addr_interfacelocal_allrouters extern const s#in6_addr in6addr_interfacelocal_allrouters 
in6addr_sitelocal_allrouters extern const s#in6_addr in6addr_sitelocal_allrouters 
in6_dev_finish_destroy void in6_dev_finish_destroy ( s#inet6_dev * ) 

/* net/ipv6/af_inet6.o */
ipv6_mod_enabled t#bool ipv6_mod_enabled ( void ) 
s##vfsmount
s##posix_acl
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##mmu_notifier_mm
s##xol_area
s##pid_namespace
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##sec_path
s##workqueue_struct
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##kmem_cache
s##xfrm_state
s##uncached_list
s##dn_route
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##phy_device
s##sfp_bus
s##prot_inuse
s##ipv4_devconf
s##xt_table
s#seg6_pernet_data struct seg6_pernet_data { s#mutex lock ; s#in6_addr * tun_src ; s#rhashtable hmac_infos ; } 
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##swap_info_struct
s##raw_hashinfo
s##xfrm_policy
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##mtd_info
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
inet6_bind int inet6_bind ( s#socket * , s#sockaddr * , int ) 
inet6_release int inet6_release ( s#socket * ) 
inet6_destroy_sock void inet6_destroy_sock ( s#sock * ) 
inet6_getname int inet6_getname ( s#socket * , s#sockaddr * , int * , int ) 
inet6_ioctl int inet6_ioctl ( s#socket * , unsigned int , unsigned long ) 
inet6_register_protosw int inet6_register_protosw ( s#inet_protosw * ) 
inet6_unregister_protosw void inet6_unregister_protosw ( s#inet_protosw * ) 
inet6_sk_rebuild_header extern int inet6_sk_rebuild_header ( s#sock * ) 
s#inet6_skb_parm struct inet6_skb_parm { int iif ; t#__be16 ra ; t#__u16 dst0 ; t#__u16 srcrt ; t#__u16 dst1 ; t#__u16 lastopt ; t#__u16 nhoff ; t#__u16 flags ; t#__u16 dsthao ; t#__u16 frag_max_size ; } 
ipv6_opt_accepted t#bool ipv6_opt_accepted ( const s#sock * , const s#sk_buff * , const s#inet6_skb_parm * ) 

/* net/ipv6/datagram.o */
s##posix_acl
s##vfsmount
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##sec_path
s##workqueue_struct
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##kmem_cache
s##xfrm_state
s##uncached_list
s##dn_route
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##phy_device
s##sfp_bus
s##prot_inuse
s##ipv4_devconf
s##xt_table
s##inet_hashinfo
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##mempolicy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sock_reuseport
ip6_datagram_release_cb void ip6_datagram_release_cb ( s#sock * ) 
__ip6_datagram_connect int __ip6_datagram_connect ( s#sock * , s#sockaddr * , int ) 
ip6_datagram_connect int ip6_datagram_connect ( s#sock * , s#sockaddr * , int ) 
ip6_datagram_connect_v6_only int ip6_datagram_connect_v6_only ( s#sock * , s#sockaddr * , int ) 
ipv6_recv_error int ipv6_recv_error ( s#sock * , s#msghdr * , int , int * ) 
ip6_datagram_recv_ctl void ip6_datagram_recv_ctl ( s#sock * , s#msghdr * , s#sk_buff * ) 
s#ipcm6_cookie struct ipcm6_cookie { t#__s16 hlimit ; t#__s16 tclass ; t#__s8 dontfrag ; s#ipv6_txoptions * opt ; } 
ip6_datagram_send_ctl int ip6_datagram_send_ctl ( s#net * , s#sock * , s#msghdr * , s#flowi6 * , s#ipcm6_cookie * , s#sockcm_cookie * ) 

/* net/ipv6/esp6.o */
s##proc_ns_operations
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##kmem_cache
s##fs_pin
s##nlm_lockowner
s##nfs4_lock_state
s##workqueue_struct
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##uncached_list
s##proc_dir_entry
s##dn_route
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##phy_device
s##sfp_bus
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##key_user
s##key_type
s##assoc_array_ptr
s##uevent_sock
s##prot_inuse
s##ipv4_devconf
s##xt_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
esp6_output_head int esp6_output_head ( s#xfrm_state * , s#sk_buff * , s#esp_info * ) 
esp6_output_tail int esp6_output_tail ( s#xfrm_state * , s#sk_buff * , s#esp_info * ) 
esp6_input_done2 int esp6_input_done2 ( s#sk_buff * , int ) 

/* net/ipv6/exthdrs.o */
s##proc_ns_operations
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##kmem_cache
s##fs_pin
s##nlm_lockowner
s##nfs4_lock_state
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##bpf_prog_aux
s##workqueue_struct
s##uncached_list
s##proc_dir_entry
s##dn_route
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##key_user
s##key_type
s##assoc_array_ptr
s##uevent_sock
s##prot_inuse
s##ipv4_devconf
s##xt_table
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##nf_hook_entry
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##udp_tunnel_info
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
ipv6_push_frag_opts void ipv6_push_frag_opts ( s#sk_buff * , s#ipv6_txoptions * , t#u8 * ) 
ipv6_dup_options s#ipv6_txoptions * ipv6_dup_options ( s#sock * , s#ipv6_txoptions * ) 
ipv6_fixup_options s#ipv6_txoptions * ipv6_fixup_options ( s#ipv6_txoptions * , s#ipv6_txoptions * ) 
fl6_update_dst s#in6_addr * fl6_update_dst ( s#flowi6 * , const s#ipv6_txoptions * , s#in6_addr * ) 

/* net/ipv6/exthdrs_core.o */
ipv6_ext_hdr t#bool ipv6_ext_hdr ( t#u8 ) 
s##proc_ns_operations
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##kmem_cache
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##bpf_prog_aux
s##xfrm_policy
s##workqueue_struct
s##xfrm_state
s##lwtunnel_state
s##rtable
s##rt6_info
s##dn_route
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_dir_entry
s##uevent_sock
s##prot_inuse
s##ipv4_devconf
s##fib_table
s##inet_peer_base
s##xt_table
s##rt6_statistics
s##fib6_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##nf_hook_entry
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##udp_tunnel_info
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##prefix_info
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
s##sec_path
ipv6_skip_exthdr int ipv6_skip_exthdr ( const s#sk_buff * , int , t#u8 * , t#__be16 * ) 
ipv6_find_tlv int ipv6_find_tlv ( const s#sk_buff * , int , int ) 
ipv6_find_hdr int ipv6_find_hdr ( const s#sk_buff * , unsigned int * , int , unsigned short * , int * ) 

/* net/ipv6/fib6_rules.o */
s##proc_ns_operations
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##workqueue_struct
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##kmem_cache
s##xfrm_state
s##uncached_list
s##proc_dir_entry
s##dn_route
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##phy_device
s##sfp_bus
s##sec_path
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##key_user
s##key_type
s##assoc_array_ptr
s##uevent_sock
s##prot_inuse
s##ipv4_devconf
s##xt_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
fib6_rule_default t#bool fib6_rule_default ( const s#fib_rule * ) 

/* net/ipv6/fou6.o */
s##proc_ns_operations
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##kmem_cache
s##inet_hashinfo
s##raw_hashinfo
s##bpf_prog_aux
s##xfrm_policy
s##workqueue_struct
s##xfrm_state
s##uncached_list
s##proc_dir_entry
s##dn_route
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##key_user
s##key_type
s##assoc_array_ptr
s##uevent_sock
s##prot_inuse
s##ipv4_devconf
s##xt_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##nf_hook_entry
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##netns_ipvs
s##mpls_route
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
s##sec_path
fou6_build_header int fou6_build_header ( s#sk_buff * , s#ip_tunnel_encap * , t#u8 * , s#flowi6 * ) 
gue6_build_header int gue6_build_header ( s#sk_buff * , s#ip_tunnel_encap * , t#u8 * , s#flowi6 * ) 

/* net/ipv6/icmp.o */
s##proc_ns_operations
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##kmem_cache
s##fs_pin
s##nlm_lockowner
s##nfs4_lock_state
s##inet_hashinfo
s##udp_table
s##bpf_prog_aux
s##workqueue_struct
s##uncached_list
s##proc_dir_entry
s##dn_route
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##key_user
s##key_type
s##assoc_array_ptr
s##uevent_sock
s##prot_inuse
s##ipv4_devconf
s##xt_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##udp_tunnel_info
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
ip6_err_gen_icmpv6_unreach int ip6_err_gen_icmpv6_unreach ( s#sk_buff * , int , int , unsigned int ) 
icmpv6_err_convert extern int icmpv6_err_convert ( t#u8 , t#u8 , int * ) 

/* net/ipv6/inet6_connection_sock.o */
s##posix_acl
s##vfsmount
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##prot_inuse
s##ipv4_devconf
s##kmem_cache
s##xt_table
s##uncached_list
s##workqueue_struct
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##nf_hook_entry
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##mempolicy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##blk_plug
s##reclaim_state
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##udp_table
s##raw_hashinfo
s##bpf_prog_aux
s##xfrm_policy
s##sec_path
s##udp_tunnel_info
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##xfrm_state
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
s##dn_route
inet6_csk_route_req s#dst_entry * inet6_csk_route_req ( const s#sock * , s#flowi6 * , const s#request_sock * , t#u8 ) 
inet6_csk_addr2sockaddr void inet6_csk_addr2sockaddr ( s#sock * , s#sockaddr * ) 
inet6_csk_xmit int inet6_csk_xmit ( s#sock * , s#sk_buff * , s#flowi * ) 
inet6_csk_update_pmtu s#dst_entry * inet6_csk_update_pmtu ( s#sock * , t#u32 ) 

/* net/ipv6/inet6_hashtables.o */
s##posix_acl
s##vfsmount
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##sec_path
s##workqueue_struct
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##kmem_cache
s##xfrm_state
s##lwtunnel_state
s##uncached_list
s##rt6_info
s##dn_route
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##phy_device
s##sfp_bus
s##prot_inuse
s##ipv4_devconf
s##xt_table
s##rt6_statistics
s##fib6_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##mempolicy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##udp_table
s##raw_hashinfo
s##xfrm_policy
__inet6_lookup_established s#sock * __inet6_lookup_established ( s#net * , s#inet_hashinfo * , const s#in6_addr * , const t#__be16 , const s#in6_addr * , const t#u16 , const int ) 
inet6_lookup_listener s#sock * inet6_lookup_listener ( s#net * , s#inet_hashinfo * , s#sk_buff * , int , const s#in6_addr * , const t#__be16 , const s#in6_addr * , const unsigned short , const int ) 
inet6_lookup s#sock * inet6_lookup ( s#net * , s#inet_hashinfo * , s#sk_buff * , int , const s#in6_addr * , const t#__be16 , const s#in6_addr * , const t#__be16 , const int ) 
inet6_hash_connect int inet6_hash_connect ( s#inet_timewait_death_row * , s#sock * ) 
inet6_hash int inet6_hash ( s#sock * ) 

/* net/ipv6/ip6_checksum.o */
csum_ipv6_magic t#__sum16 csum_ipv6_magic ( const s#in6_addr * , const s#in6_addr * , t#__u32 , t#__u8 , t#__wsum ) 
s##proc_ns_operations
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##kmem_cache
s##inet_hashinfo
s##raw_hashinfo
s##bpf_prog_aux
s##xfrm_policy
s##workqueue_struct
s##xfrm_state
s##lwtunnel_state
s##uncached_list
s##rt6_info
s##dn_route
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_dir_entry
s##uevent_sock
s##prot_inuse
s##ipv4_devconf
s##xt_table
s##rt6_statistics
s##fib6_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##nf_hook_entry
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##udp_tunnel_info
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##prefix_info
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
s##sec_path
udp6_csum_init int udp6_csum_init ( s#sk_buff * , s#udphdr * , int ) 
udp6_set_csum void udp6_set_csum ( t#bool , s#sk_buff * , const s#in6_addr * , const s#in6_addr * , int ) 

/* net/ipv6/ip6_fib.o */
s##posix_acl
s##vfsmount
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##prot_inuse
s##ipv4_devconf
s##kmem_cache
s##xt_table
s##inet_hashinfo
s##workqueue_struct
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##nf_hook_entry
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##mempolicy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##blk_plug
s##reclaim_state
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##udp_table
s##raw_hashinfo
s##bpf_prog_aux
s##xfrm_policy
s##sock_reuseport
s##sec_path
s##udp_tunnel_info
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##xfrm_state
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
s##uncached_list
s##dn_route
rt6_free_pcpu void rt6_free_pcpu ( s#rt6_info * ) 
fib6_new_table s#fib6_table * fib6_new_table ( s#net * , t#u32 ) 
fib6_get_table s#fib6_table * fib6_get_table ( s#net * , t#u32 ) 

/* net/ipv6/ip6_flowlabel.o */
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##nlm_lockowner
s##nfs4_lock_state
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##proc_dir_entry
s##uevent_sock
s##prot_inuse
s##ipv4_devconf
s##fib_table
s##inet_peer_base
s##kmem_cache
s##xt_table
s##inet_hashinfo
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##lwtunnel_state
s##rtable
s##dn_route
s##workqueue_struct
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##nf_hook_entry
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##prefix_info
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##phy_device
s##sfp_bus
s##sec_path
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##fs_pin
fl6_sock_lookup s#ip6_flowlabel * fl6_sock_lookup ( s#sock * , t#__be32 ) 
fl6_merge_options s#ipv6_txoptions * fl6_merge_options ( s#ipv6_txoptions * , s#ip6_flowlabel * , s#ipv6_txoptions * ) 

/* net/ipv6/ip6_gre.o */
s##posix_acl
s##vfsmount
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##kmem_cache
s##fs_pin
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##prot_inuse
s##xt_table
s##inet_hashinfo
s##workqueue_struct
s##uncached_list
s##dn_route
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##netns_ipvs
s##mpls_route
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##mempolicy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##blk_plug
s##reclaim_state
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##udp_table
s##raw_hashinfo
s##bpf_prog_aux
s##sock_reuseport
s##udp_tunnel_info
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
is_ip6gretap_dev t#bool is_ip6gretap_dev ( const s#net_device * ) 

/* net/ipv6/ip6_icmp.o */
s##proc_ns_operations
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##kmem_cache
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##bpf_prog_aux
s##xfrm_policy
s##workqueue_struct
s##xfrm_state
s##lwtunnel_state
s##rtable
s##rt6_info
s##dn_route
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_dir_entry
s##uevent_sock
s##prot_inuse
s##ipv4_devconf
s##fib_table
s##inet_peer_base
s##xt_table
s##rt6_statistics
s##fib6_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##nf_hook_entry
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##udp_tunnel_info
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##prefix_info
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
s##sec_path
t#ip6_icmp_send_t typedef void ip6_icmp_send_t ( s#sk_buff * , t#u8 , t#u8 , t#__u32 , const s#in6_addr * ) 
inet6_register_icmp_sender extern int inet6_register_icmp_sender ( t#ip6_icmp_send_t * ) 
inet6_unregister_icmp_sender extern int inet6_unregister_icmp_sender ( t#ip6_icmp_send_t * ) 
icmpv6_send extern void icmpv6_send ( s#sk_buff * , t#u8 , t#u8 , t#__u32 ) 

/* net/ipv6/ip6_input.o */
s##proc_ns_operations
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##kmem_cache
s##fs_pin
s##nlm_lockowner
s##nfs4_lock_state
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##bpf_prog_aux
s##workqueue_struct
s##uncached_list
s##proc_dir_entry
s##dn_route
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##key_user
s##key_type
s##assoc_array_ptr
s##uevent_sock
s##prot_inuse
s##ipv4_devconf
s##xt_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##netns_ipvs
s##mpls_route
s##udp_tunnel_info
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
ip6_input int ip6_input ( s#sk_buff * ) 

/* net/ipv6/ip6_output.o */
s##posix_acl
s##vfsmount
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##kmem_cache
s##fs_pin
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##workqueue_struct
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##uncached_list
s##dn_route
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##phy_device
s##sfp_bus
s##prot_inuse
s##ipv4_devconf
s##xt_table
s##inet_hashinfo
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##mempolicy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##udp_table
s##raw_hashinfo
s##sock_reuseport
ip6_xmit int ip6_xmit ( const s#sock * , s#sk_buff * , s#flowi6 * , t#__u32 , s#ipv6_txoptions * , int ) 
ip6_dst_lookup int ip6_dst_lookup ( s#net * , s#sock * , s#dst_entry * * , s#flowi6 * ) 
ip6_dst_lookup_flow__net s#dst_entry * ip6_dst_lookup_flow__net ( s#net * , const s#sock * , s#flowi6 * , const s#in6_addr * ) 
ip6_dst_lookup_flow s#dst_entry * ip6_dst_lookup_flow ( const s#sock * , s#flowi6 * , const s#in6_addr * ) 
ip6_sk_dst_lookup_flow s#dst_entry * ip6_sk_dst_lookup_flow ( s#sock * , s#flowi6 * , const s#in6_addr * ) 
ip6_append_data int ip6_append_data ( s#sock * , int ( void * , char * , int , int , int , s#sk_buff * ) , void * , int , int , s#ipcm6_cookie * , s#flowi6 * , s#rt6_info * , unsigned int , const s#sockcm_cookie * ) 
ip6_push_pending_frames int ip6_push_pending_frames ( s#sock * ) 
ip6_flush_pending_frames void ip6_flush_pending_frames ( s#sock * ) 

/* net/ipv6/ip6_tunnel.o */
s##proc_ns_operations
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##kmem_cache
s##fs_pin
s##nlm_lockowner
s##nfs4_lock_state
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##bpf_prog_aux
s##workqueue_struct
s##uncached_list
s##proc_dir_entry
s##dn_route
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##key_user
s##key_type
s##assoc_array_ptr
s##uevent_sock
s##prot_inuse
s##ipv4_devconf
s##xt_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##netns_ipvs
s##mpls_route
s##udp_tunnel_info
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
ip6_tnl_parse_tlv_enc_lim t#__u16 ip6_tnl_parse_tlv_enc_lim ( s#sk_buff * , t#__u8 * ) 
s#__ip6_tnl_parm struct __ip6_tnl_parm { char name [ 16 ] ; int link ; t#__u8 proto ; t#__u8 encap_limit ; t#__u8 hop_limit ; t#bool collect_md ; t#__be32 flowinfo ; t#__u32 flags ; s#in6_addr laddr ; s#in6_addr raddr ; t#__be16 i_flags ; t#__be16 o_flags ; t#__be32 i_key ; t#__be32 o_key ; t#__u32 fwmark ; } 
s##dst_cache_pcpu
s##gro_cell
s#ip6_tnl struct ip6_tnl { s#ip6_tnl * next ; s#net_device * dev ; s#net * net ; s#__ip6_tnl_parm parms ; s#flowi fl ; s#dst_cache dst_cache ; s#gro_cells gro_cells ; int err_count ; unsigned long err_time ; t#__u32 i_seqno ; t#__u32 o_seqno ; int hlen ; int tun_hlen ; int encap_hlen ; s#ip_tunnel_encap encap ; int mlink ; } 
ip6_tnl_get_cap t#__u32 ip6_tnl_get_cap ( s#ip6_tnl * , const s#in6_addr * , const s#in6_addr * ) 
ip6_tnl_rcv_ctl int ip6_tnl_rcv_ctl ( s#ip6_tnl * , const s#in6_addr * , const s#in6_addr * ) 
ip6_tnl_rcv int ip6_tnl_rcv ( s#ip6_tnl * , s#sk_buff * , const s#tnl_ptk_info * , s#metadata_dst * , t#bool ) 
ip6_tnl_xmit_ctl int ip6_tnl_xmit_ctl ( s#ip6_tnl * , const s#in6_addr * , const s#in6_addr * ) 
ip6_tnl_xmit int ip6_tnl_xmit ( s#sk_buff * , s#net_device * , t#__u8 , s#flowi6 * , int , t#__u32 * , t#__u8 ) 
ip6_tnl_change_mtu int ip6_tnl_change_mtu ( s#net_device * , int ) 
ip6_tnl_get_iflink int ip6_tnl_get_iflink ( const s#net_device * ) 
ip6_tnl_encap_add_ops int ip6_tnl_encap_add_ops ( const s#ip6_tnl_encap_ops * , unsigned int ) 
ip6_tnl_encap_del_ops int ip6_tnl_encap_del_ops ( const s#ip6_tnl_encap_ops * , unsigned int ) 
ip6_tnl_encap_setup int ip6_tnl_encap_setup ( s#ip6_tnl * , s#ip_tunnel_encap * ) 
ip6_tnl_get_link_net s#net * ip6_tnl_get_link_net ( const s#net_device * ) 

/* net/ipv6/ip6_udp_tunnel.o */
s##proc_ns_operations
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##workqueue_struct
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##kmem_cache
s##xfrm_state
s##uncached_list
s##proc_dir_entry
s##dn_route
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##phy_device
s##sfp_bus
s##sec_path
s##inet_hashinfo
s##raw_hashinfo
s##xfrm_policy
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##key_user
s##key_type
s##assoc_array_ptr
s##uevent_sock
s##prot_inuse
s##ipv4_devconf
s##xt_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##netns_ipvs
s##mpls_route
udp_sock_create6 int udp_sock_create6 ( s#net * , s#udp_port_cfg * , s#socket * * ) 
udp_tunnel6_xmit_skb int udp_tunnel6_xmit_skb ( s#dst_entry * , s#sock * , s#sk_buff * , s#net_device * , s#in6_addr * , s#in6_addr * , t#__u8 , t#__u8 , t#__be32 , t#__be16 , t#__be16 , t#bool ) 

/* net/ipv6/ip6mr.o */
s##proc_ns_operations
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##workqueue_struct
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##kmem_cache
s##xfrm_state
s##uncached_list
s##proc_dir_entry
s##dn_route
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##ip_mc_list
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##phy_device
s##sfp_bus
s##sec_path
s##inet_hashinfo
s##udp_table
s##xfrm_policy
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##key_user
s##key_type
s##assoc_array_ptr
s##uevent_sock
s##prot_inuse
s##xt_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##netns_ipvs
s##mpls_route
ip6mr_rule_default t#bool ip6mr_rule_default ( const s#fib_rule * ) 
mroute6_is_socket t#bool mroute6_is_socket ( s#net * , s#sk_buff * ) 

/* net/ipv6/ipv6_sockglue.o */
s##posix_acl
s##vfsmount
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##kmem_cache
s##fs_pin
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##workqueue_struct
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##uncached_list
s##dn_route
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##phy_device
s##sfp_bus
s##prot_inuse
s##ipv4_devconf
s##xt_table
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##mempolicy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##raw_hashinfo
s##sock_reuseport
ipv6_setsockopt int ipv6_setsockopt ( s#sock * , int , int , char * , unsigned int ) 
compat_ipv6_setsockopt int compat_ipv6_setsockopt ( s#sock * , int , int , char * , unsigned int ) 
ipv6_getsockopt int ipv6_getsockopt ( s#sock * , int , int , char * , int * ) 
compat_ipv6_getsockopt int compat_ipv6_getsockopt ( s#sock * , int , int , char * , int * ) 

/* net/ipv6/mcast.o */
s##posix_acl
s##vfsmount
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##sec_path
s##workqueue_struct
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##kmem_cache
s##xfrm_state
s##uncached_list
s##dn_route
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##phy_device
s##sfp_bus
s##prot_inuse
s##ipv4_devconf
s##xt_table
s##inet_hashinfo
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##mempolicy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sock_reuseport
ipv6_sock_mc_join int ipv6_sock_mc_join ( s#sock * , int , const s#in6_addr * ) 
ipv6_sock_mc_drop int ipv6_sock_mc_drop ( s#sock * , int , const s#in6_addr * ) 

/* net/ipv6/mcast_snoop.o */
s##proc_ns_operations
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##kmem_cache
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##bpf_prog_aux
s##xfrm_policy
s##workqueue_struct
s##xfrm_state
s##lwtunnel_state
s##uncached_list
s##rt6_info
s##dn_route
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_dir_entry
s##uevent_sock
s##prot_inuse
s##ipv4_devconf
s##xt_table
s##rt6_statistics
s##fib6_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##nf_hook_entry
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##udp_tunnel_info
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
s##sec_path
ipv6_mc_check_mld int ipv6_mc_check_mld ( s#sk_buff * , s#sk_buff * * ) 

/* net/ipv6/ndisc.o */
s##posix_acl
s##vfsmount
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##prot_inuse
s##ipv4_devconf
s##kmem_cache
s##xt_table
s##inet_hashinfo
s##xfrm_state
s##uncached_list
s##dn_route
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##workqueue_struct
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##mempolicy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##blk_plug
s##reclaim_state
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##udp_table
s##raw_hashinfo
s##bpf_prog_aux
s##xfrm_policy
s##sock_reuseport
s##sec_path
s##udp_tunnel_info
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
nd_tbl extern s#neigh_table nd_tbl 
__ndisc_fill_addr_option void __ndisc_fill_addr_option ( s#sk_buff * , int , void * , int , int ) 
ndisc_mc_map int ndisc_mc_map ( const s#in6_addr * , char * , s#net_device * , int ) 

/* net/ipv6/netfilter.o */
s##proc_ns_operations
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##kmem_cache
s##fs_pin
s##nlm_lockowner
s##nfs4_lock_state
s##workqueue_struct
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##uncached_list
s##proc_dir_entry
s##dn_route
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##phy_device
s##sfp_bus
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##key_user
s##key_type
s##assoc_array_ptr
s##uevent_sock
s##prot_inuse
s##ipv4_devconf
s##xt_table
s##seg6_pernet_data
s##sctp_mib
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
ip6_route_me_harder int ip6_route_me_harder ( s#net * , s#sk_buff * ) 
nf_ip6_checksum t#__sum16 nf_ip6_checksum ( s#sk_buff * , unsigned int , unsigned int , t#u_int8_t ) 

/* net/ipv6/netfilter/ip6_tables.o */
s##posix_acl
s##vfsmount
s##device_private
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##sec_path
s##workqueue_struct
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##kmem_cache
s##xfrm_state
s##lwtunnel_state
s##rtable
s##rt6_info
s##dn_route
s##prefix_info
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
s##prot_inuse
s##ipv4_devconf
s##fib_table
s##inet_peer_base
s##inet_hashinfo
s##rt6_statistics
s##fib6_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##eventfd_ctx
s##mempolicy
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
ip6t_alloc_initial_table extern void * ip6t_alloc_initial_table ( const s#xt_table * ) 
s#ip6t_ip6 struct ip6t_ip6 { s#in6_addr src , dst ; s#in6_addr smsk , dmsk ; char iniface [ 16 ] , outiface [ 16 ] ; unsigned char iniface_mask [ 16 ] , outiface_mask [ 16 ] ; t#__u16 proto ; t#__u8 tos ; t#__u8 flags ; t#__u8 invflags ; } 
s#ip6t_entry struct ip6t_entry { s#ip6t_ip6 ipv6 ; unsigned int nfcache ; t#__u16 target_offset ; t#__u16 next_offset ; unsigned int comefrom ; s#xt_counters counters ; unsigned char elems [ 0 ] ; } 
s#ip6t_replace struct ip6t_replace { char name [ 32 ] ; unsigned int valid_hooks ; unsigned int num_entries ; unsigned int size ; unsigned int hook_entry [ E#NF_INET_NUMHOOKS ] ; unsigned int underflow [ E#NF_INET_NUMHOOKS ] ; unsigned int num_counters ; s#xt_counters * counters ; s#ip6t_entry entries [ 0 ] ; } 
ip6t_register_table int ip6t_register_table ( s#net * , const s#xt_table * , const s#ip6t_replace * , const s#nf_hook_ops * , s#xt_table * * ) 
ip6t_unregister_table void ip6t_unregister_table ( s#net * , s#xt_table * , const s#nf_hook_ops * ) 
ip6t_do_table extern unsigned int ip6t_do_table ( s#sk_buff * , const s#nf_hook_state * , s#xt_table * ) 

/* net/ipv6/netfilter/nf_conntrack_reasm.o */
s##proc_ns_operations
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##workqueue_struct
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##kmem_cache
s##xfrm_state
s##lwtunnel_state
s##rtable
s##rt6_info
s##dn_route
s##proc_dir_entry
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##phy_device
s##sfp_bus
s##sec_path
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##key_user
s##key_type
s##assoc_array_ptr
s##uevent_sock
s##prot_inuse
s##ipv4_devconf
s##fib_table
s##inet_peer_base
s##xt_table
s##rt6_statistics
s##fib6_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
nf_ct_frag6_gather int nf_ct_frag6_gather ( s#net * , s#sk_buff * , t#u32 ) 

/* net/ipv6/netfilter/nf_defrag_ipv6_hooks.o */
s##proc_ns_operations
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##workqueue_struct
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##kmem_cache
s##xfrm_state
s##uncached_list
s##proc_dir_entry
s##dn_route
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##phy_device
s##sfp_bus
s##sec_path
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##key_user
s##key_type
s##assoc_array_ptr
s##uevent_sock
s##prot_inuse
s##ipv4_devconf
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s#nf_conntrack_expect_policy struct nf_conntrack_expect_policy { unsigned int max_expected ; unsigned int timeout ; char name [ 16 ] ; } 
s#nf_conntrack_helper struct nf_conntrack_helper { s#hlist_node hnode ; char name [ 16 ] ; t#refcount_t refcnt ; s#module * me ; const s#nf_conntrack_expect_policy * expect_policy ; s#nf_conntrack_tuple tuple ; int ( * help ) ( s#sk_buff * , unsigned int , s#nf_conn * , e#ip_conntrack_info ) ; void ( * destroy ) ( s#nf_conn * ) ; int ( * from_nlattr ) ( s#nlattr * , s#nf_conn * ) ; int ( * to_nlattr ) ( s#sk_buff * , const s#nf_conn * ) ; unsigned int expect_class_max ; unsigned int flags ; unsigned int queue_num ; t#u16 data_len ; } 
s##nft_af_info
s##netns_ipvs
s##mpls_route
nf_defrag_ipv6_enable int nf_defrag_ipv6_enable ( s#net * ) 

/* net/ipv6/netfilter/nf_dup_ipv6.o */
s##proc_ns_operations
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##workqueue_struct
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##kmem_cache
s##xfrm_state
s##uncached_list
s##proc_dir_entry
s##dn_route
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##phy_device
s##sfp_bus
s##sec_path
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##key_user
s##key_type
s##assoc_array_ptr
s##uevent_sock
s##prot_inuse
s##ipv4_devconf
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##netns_ipvs
s##mpls_route
nf_dup_ipv6 void nf_dup_ipv6 ( s#net * , s#sk_buff * , unsigned int , const s#in6_addr * , int ) 

/* net/ipv6/netfilter/nf_nat_l3proto_ipv6.o */
s##proc_ns_operations
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##kmem_cache
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##bpf_prog_aux
s##xfrm_policy
s##workqueue_struct
s##xfrm_state
s##uncached_list
s##proc_dir_entry
s##dn_route
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##key_user
s##key_type
s##assoc_array_ptr
s##uevent_sock
s##prot_inuse
s##ipv4_devconf
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_conntrack_helper
s##nft_af_info
s##netns_ipvs
s##mpls_route
s##udp_tunnel_info
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
s##sec_path
nf_nat_icmpv6_reply_translation int nf_nat_icmpv6_reply_translation ( s#sk_buff * , s#nf_conn * , e#ip_conntrack_info , unsigned int , unsigned int ) 
nf_nat_ipv6_fn unsigned int nf_nat_ipv6_fn ( void * , s#sk_buff * , const s#nf_hook_state * , unsigned int ( * ) ( void * , s#sk_buff * , const s#nf_hook_state * , s#nf_conn * ) ) 
nf_nat_ipv6_in unsigned int nf_nat_ipv6_in ( void * , s#sk_buff * , const s#nf_hook_state * , unsigned int ( * ) ( void * , s#sk_buff * , const s#nf_hook_state * , s#nf_conn * ) ) 
nf_nat_ipv6_out unsigned int nf_nat_ipv6_out ( void * , s#sk_buff * , const s#nf_hook_state * , unsigned int ( * ) ( void * , s#sk_buff * , const s#nf_hook_state * , s#nf_conn * ) ) 
nf_nat_ipv6_local_fn unsigned int nf_nat_ipv6_local_fn ( void * , s#sk_buff * , const s#nf_hook_state * , unsigned int ( * ) ( void * , s#sk_buff * , const s#nf_hook_state * , s#nf_conn * ) ) 

/* net/ipv6/netfilter/nf_nat_masquerade_ipv6.o */
s##proc_ns_operations
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##kmem_cache
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##bpf_prog_aux
s##xfrm_policy
s##workqueue_struct
s##xfrm_state
s##uncached_list
s##proc_dir_entry
s##dn_route
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##key_user
s##key_type
s##assoc_array_ptr
s##uevent_sock
s##prot_inuse
s##ipv4_devconf
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##netns_ipvs
s##mpls_route
s##udp_tunnel_info
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
s##sec_path
nf_nat_masquerade_ipv6 unsigned int nf_nat_masquerade_ipv6 ( s#sk_buff * , const s#nf_nat_range * , const s#net_device * ) 
nf_nat_masquerade_ipv6_register_notifier void nf_nat_masquerade_ipv6_register_notifier ( void ) 
nf_nat_masquerade_ipv6_unregister_notifier void nf_nat_masquerade_ipv6_unregister_notifier ( void ) 

/* net/ipv6/netfilter/nf_reject_ipv6.o */
s##proc_ns_operations
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##kmem_cache
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##bpf_prog_aux
s##xfrm_policy
s##workqueue_struct
s##xfrm_state
s##uncached_list
s##proc_dir_entry
s##dn_route
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##key_user
s##key_type
s##assoc_array_ptr
s##uevent_sock
s##prot_inuse
s##ipv4_devconf
s##xt_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##udp_tunnel_info
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
s##sec_path
nf_reject_ip6_tcphdr_get const s#tcphdr * nf_reject_ip6_tcphdr_get ( s#sk_buff * , s#tcphdr * , unsigned int * , int ) 
s#ipv6hdr struct ipv6hdr { t#__u8 version : 4 , priority : 4 ; t#__u8 flow_lbl [ 3 ] ; t#__be16 payload_len ; t#__u8 nexthdr ; t#__u8 hop_limit ; s#in6_addr saddr ; s#in6_addr daddr ; } 
nf_reject_ip6hdr_put s#ipv6hdr * nf_reject_ip6hdr_put ( s#sk_buff * , const s#sk_buff * , t#__u8 , int ) 
nf_reject_ip6_tcphdr_put void nf_reject_ip6_tcphdr_put ( s#sk_buff * , const s#sk_buff * , const s#tcphdr * , unsigned int ) 
nf_send_reset6 void nf_send_reset6 ( s#net * , s#sk_buff * , int ) 
nf_send_unreach6 void nf_send_unreach6 ( s#net * , s#sk_buff * , unsigned char , unsigned int ) 

/* net/ipv6/netfilter/nf_socket_ipv6.o */
s##posix_acl
s##vfsmount
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##sec_path
s##workqueue_struct
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##kmem_cache
s##xfrm_state
s##uncached_list
s##dn_route
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##phy_device
s##sfp_bus
s##prot_inuse
s##ipv4_devconf
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##netns_ipvs
s##mpls_route
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##mempolicy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##raw_hashinfo
s##xfrm_policy
s##sock_reuseport
nf_sk_lookup_slow_v6 s#sock * nf_sk_lookup_slow_v6 ( s#net * , const s#sk_buff * , const s#net_device * ) 

/* net/ipv6/netfilter/nf_tables_ipv6.o */
s##posix_acl
s##vfsmount
s##device_private
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##sec_path
s##workqueue_struct
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##kmem_cache
s##xfrm_state
s##lwtunnel_state
s##rtable
s##rt6_info
s##dn_route
s##prefix_info
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
s##prot_inuse
s##ipv4_devconf
s##fib_table
s##inet_peer_base
s##inet_hashinfo
s##rt6_statistics
s##fib6_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##mpls_route
s##eventfd_ctx
s##mempolicy
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
nft_af_ipv6 extern s#nft_af_info nft_af_ipv6 

/* net/ipv6/netfilter/nft_fib_ipv6.o */
s##proc_ns_operations
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##kmem_cache
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##bpf_prog_aux
s##xfrm_policy
s##workqueue_struct
s##xfrm_state
s##uncached_list
s##proc_dir_entry
s##dn_route
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##key_user
s##key_type
s##assoc_array_ptr
s##uevent_sock
s##prot_inuse
s##ipv4_devconf
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##mpls_route
s##udp_tunnel_info
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
s##sec_path
nft_fib6_eval_type void nft_fib6_eval_type ( const s#nft_expr * , s#nft_regs * , const s#nft_pktinfo * ) 
nft_fib6_eval void nft_fib6_eval ( const s#nft_expr * , s#nft_regs * , const s#nft_pktinfo * ) 

/* net/ipv6/output_core.o */
s##proc_ns_operations
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##workqueue_struct
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##kmem_cache
s##xfrm_state
s##lwtunnel_state
s##uncached_list
s##proc_dir_entry
s##dn_route
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##phy_device
s##sfp_bus
s##sec_path
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##key_user
s##key_type
s##assoc_array_ptr
s##uevent_sock
s##prot_inuse
s##ipv4_devconf
s##xt_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
ipv6_proxy_select_ident t#__be32 ipv6_proxy_select_ident ( s#net * , s#sk_buff * ) 
ipv6_select_ident t#__be32 ipv6_select_ident ( s#net * , const s#in6_addr * , const s#in6_addr * ) 
ip6_find_1stfragopt int ip6_find_1stfragopt ( s#sk_buff * , t#u8 * * ) 
ip6_dst_hoplimit int ip6_dst_hoplimit ( s#dst_entry * ) 
__ip6_local_out int __ip6_local_out ( s#net * , s#sock * , s#sk_buff * ) 
ip6_local_out int ip6_local_out ( s#net * , s#sock * , s#sk_buff * ) 

/* net/ipv6/ping.o */
s##proc_ns_operations
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##workqueue_struct
s##bpf_prog_array
s##cgroup_taskset
s##kstatfs
s##eventfd_ctx
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##kmem_cache
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_dir_entry
s##uevent_sock
s##sec_path
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##xfrm_state
s##uncached_list
s##dn_route
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
s##prot_inuse
s##ipv4_devconf
s##xt_table
s##inet_hashinfo
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##xfrm_policy
s##sock_reuseport
s##raw_hashinfo
pingv6_prot extern s#proto pingv6_prot 

/* net/ipv6/protocol.o */
s##proc_ns_operations
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##kmem_cache
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##bpf_prog_aux
s##xfrm_policy
s##workqueue_struct
s##xfrm_state
s##lwtunnel_state
s##rtable
s##rt6_info
s##dn_route
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_dir_entry
s##uevent_sock
s##prot_inuse
s##ipv4_devconf
s##fib_table
s##inet_peer_base
s##xt_table
s##rt6_statistics
s##fib6_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##nf_hook_entry
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##udp_tunnel_info
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##ndisc_ops
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
s##sec_path
s#inet6_protocol struct inet6_protocol { void ( * early_demux ) ( s#sk_buff * ) ; void ( * early_demux_handler ) ( s#sk_buff * ) ; int ( * handler ) ( s#sk_buff * ) ; void ( * err_handler ) ( s#sk_buff * , s#inet6_skb_parm * , t#u8 , t#u8 , int , t#__be32 ) ; unsigned int flags ; } 
inet6_protos extern s#inet6_protocol * inet6_protos [ 256 ] 
inet6_add_protocol int inet6_add_protocol ( const s#inet6_protocol * , unsigned char ) 
inet6_del_protocol int inet6_del_protocol ( const s#inet6_protocol * , unsigned char ) 
inet6_offloads extern const s#net_offload * inet6_offloads [ 256 ] 
inet6_add_offload int inet6_add_offload ( const s#net_offload * , unsigned char ) 
inet6_del_offload int inet6_del_offload ( const s#net_offload * , unsigned char ) 

/* net/ipv6/raw.o */
raw_v6_hashinfo extern s#raw_hashinfo raw_v6_hashinfo 
s##posix_acl
s##vfsmount
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##kmem_cache
s##fs_pin
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##workqueue_struct
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##uncached_list
s##dn_route
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##phy_device
s##sfp_bus
s##prot_inuse
s##ipv4_devconf
s##xt_table
s##inet_hashinfo
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##mempolicy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##sock_reuseport
__raw_v6_lookup s#sock * __raw_v6_lookup ( s#net * , s#sock * , unsigned short , const s#in6_addr * , const s#in6_addr * , int ) 
rawv6_mh_filter_register int rawv6_mh_filter_register ( int ( * ) ( s#sock * , s#sk_buff * ) ) 
rawv6_mh_filter_unregister int rawv6_mh_filter_unregister ( int ( * ) ( s#sock * , s#sk_buff * ) ) 

/* net/ipv6/route.o */
s##posix_acl
s##vfsmount
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##kmem_cache
s##fs_pin
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##prot_inuse
s##ipv4_devconf
s##xt_table
s##workqueue_struct
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##nf_hook_entry
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##netns_ipvs
s##mpls_route
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##mempolicy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##blk_plug
s##reclaim_state
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##udp_table
s##raw_hashinfo
s##bpf_prog_aux
s##sock_reuseport
s##udp_tunnel_info
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
s##uncached_list
s##dn_route
ip6_dst_alloc s#rt6_info * ip6_dst_alloc ( s#net * , s#net_device * , int ) 
ip6_route_lookup s#dst_entry * ip6_route_lookup ( s#net * , s#flowi6 * , int ) 
rt6_lookup s#rt6_info * rt6_lookup ( s#net * , const s#in6_addr * , const s#in6_addr * , int , int ) 
ip6_pol_route s#rt6_info * ip6_pol_route ( s#net * , s#fib6_table * , int , s#flowi6 * , int ) 
ip6_route_input_lookup s#dst_entry * ip6_route_input_lookup ( s#net * , s#net_device * , s#flowi6 * , int ) 
ip6_route_output_flags s#dst_entry * ip6_route_output_flags ( s#net * , const s#sock * , s#flowi6 * , int ) 
ip6_update_pmtu void ip6_update_pmtu ( s#sk_buff * , s#net * , t#__be32 , int , t#u32 , t#kuid_t ) 
ip6_sk_update_pmtu void ip6_sk_update_pmtu ( s#sk_buff * , s#sock * , t#__be32 ) 
ip6_redirect void ip6_redirect ( s#sk_buff * , s#net * , int , t#u32 , t#kuid_t ) 
ip6_sk_redirect void ip6_sk_redirect ( s#sk_buff * , s#sock * ) 

/* net/ipv6/seg6_hmac.o */
s#seg6_hmac_info struct seg6_hmac_info { s#rhash_head node ; s#callback_head rcu ; t#u32 hmackeyid ; char secret [ 64 ] ; t#u8 slen ; t#u8 alg_id ; } 
s#ipv6_sr_hdr struct ipv6_sr_hdr { t#__u8 nexthdr ; t#__u8 hdrlen ; t#__u8 type ; t#__u8 segments_left ; t#__u8 first_segment ; t#__u8 flags ; t#__u16 reserved ; s#in6_addr segments [ 0 ] ; } 
seg6_hmac_compute extern int seg6_hmac_compute ( s#seg6_hmac_info * , s#ipv6_sr_hdr * , s#in6_addr * , t#u8 * ) 
s##proc_ns_operations
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##kmem_cache
s##fs_pin
s##nlm_lockowner
s##nfs4_lock_state
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##bpf_prog_aux
s##workqueue_struct
s##uncached_list
s##proc_dir_entry
s##dn_route
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##key_user
s##key_type
s##assoc_array_ptr
s##uevent_sock
s##prot_inuse
s##ipv4_devconf
s##xt_table
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##udp_tunnel_info
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
seg6_hmac_validate_skb extern t#bool seg6_hmac_validate_skb ( s#sk_buff * ) 
seg6_hmac_info_lookup extern s#seg6_hmac_info * seg6_hmac_info_lookup ( s#net * , t#u32 ) 
seg6_hmac_info_add extern int seg6_hmac_info_add ( s#net * , t#u32 , s#seg6_hmac_info * ) 
seg6_hmac_info_del extern int seg6_hmac_info_del ( s#net * , t#u32 ) 
seg6_push_hmac extern int seg6_push_hmac ( s#net * , s#in6_addr * , s#ipv6_sr_hdr * ) 
seg6_hmac_init extern int seg6_hmac_init ( void ) 
seg6_hmac_net_init extern int seg6_hmac_net_init ( s#net * ) 
seg6_hmac_exit extern void seg6_hmac_exit ( void ) 
seg6_hmac_net_exit extern void seg6_hmac_net_exit ( s#net * ) 

/* net/ipv6/syncookies.o */
__cookie_v6_init_sequence t#u32 __cookie_v6_init_sequence ( const s#ipv6hdr * , const s#tcphdr * , t#u16 * ) 
__cookie_v6_check int __cookie_v6_check ( const s#ipv6hdr * , const s#tcphdr * , t#u32 ) 

/* net/ipv6/tunnel6.o */
s##proc_ns_operations
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##kmem_cache
s##fs_pin
s##nlm_lockowner
s##nfs4_lock_state
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##bpf_prog_aux
s##workqueue_struct
s##lwtunnel_state
s##uncached_list
s##proc_dir_entry
s##dn_route
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##key_user
s##key_type
s##assoc_array_ptr
s##uevent_sock
s##prot_inuse
s##ipv4_devconf
s##xt_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##nf_hook_entry
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##udp_tunnel_info
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##prefix_info
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
s#xfrm6_tunnel struct xfrm6_tunnel { int ( * handler ) ( s#sk_buff * ) ; int ( * err_handler ) ( s#sk_buff * , s#inet6_skb_parm * , t#u8 , t#u8 , int , t#__be32 ) ; s#xfrm6_tunnel * next ; int priority ; } 
xfrm6_tunnel_register int xfrm6_tunnel_register ( s#xfrm6_tunnel * , unsigned short ) 
xfrm6_tunnel_deregister int xfrm6_tunnel_deregister ( s#xfrm6_tunnel * , unsigned short ) 

/* net/ipv6/udp.o */
s##posix_acl
s##vfsmount
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##kmem_cache
s##fs_pin
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##workqueue_struct
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##uncached_list
s##dn_route
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##phy_device
s##sfp_bus
s##prot_inuse
s##ipv4_devconf
s##xt_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##mempolicy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
__udp6_lib_lookup s#sock * __udp6_lib_lookup ( s#net * , const s#in6_addr * , t#__be16 , const s#in6_addr * , t#__be16 , int , s#udp_table * , s#sk_buff * ) 
udp6_lib_lookup_skb s#sock * udp6_lib_lookup_skb ( s#sk_buff * , t#__be16 , t#__be16 ) 
udp6_lib_lookup s#sock * udp6_lib_lookup ( s#net * , const s#in6_addr * , t#__be16 , const s#in6_addr * , t#__be16 , int ) 
udpv6_encap_enable void udpv6_encap_enable ( void ) 

/* net/ipv6/xfrm6_input.o */
s##proc_ns_operations
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##kmem_cache
s##fs_pin
s##nlm_lockowner
s##nfs4_lock_state
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##bpf_prog_aux
s##workqueue_struct
s##lwtunnel_state
s##uncached_list
s##proc_dir_entry
s##dn_route
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##key_user
s##key_type
s##assoc_array_ptr
s##uevent_sock
s##prot_inuse
s##ipv4_devconf
s##xt_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##udp_tunnel_info
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##prefix_info
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
s##ip6_tnl
xfrm6_rcv_spi int xfrm6_rcv_spi ( s#sk_buff * , int , t#__be32 , s#ip6_tnl * ) 
xfrm6_rcv_tnl int xfrm6_rcv_tnl ( s#sk_buff * , s#ip6_tnl * ) 
xfrm6_rcv int xfrm6_rcv ( s#sk_buff * ) 
xfrm6_input_addr int xfrm6_input_addr ( s#sk_buff * , t#xfrm_address_t * , t#xfrm_address_t * , t#u8 ) 

/* net/ipv6/xfrm6_output.o */
s##proc_ns_operations
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##kmem_cache
s##fs_pin
s##nlm_lockowner
s##nfs4_lock_state
s##workqueue_struct
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##uncached_list
s##proc_dir_entry
s##dn_route
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##phy_device
s##sfp_bus
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##key_user
s##key_type
s##assoc_array_ptr
s##uevent_sock
s##prot_inuse
s##ipv4_devconf
s##xt_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
xfrm6_find_1stfragopt int xfrm6_find_1stfragopt ( s#xfrm_state * , s#sk_buff * , t#u8 * * ) 
xfrm6_prepare_output int xfrm6_prepare_output ( s#xfrm_state * , s#sk_buff * ) 

/* net/ipv6/xfrm6_protocol.o */
s##proc_ns_operations
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##kmem_cache
s##fs_pin
s##nlm_lockowner
s##nfs4_lock_state
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##bpf_prog_aux
s##workqueue_struct
s##lwtunnel_state
s##uncached_list
s##proc_dir_entry
s##dn_route
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##key_user
s##key_type
s##assoc_array_ptr
s##uevent_sock
s##prot_inuse
s##ipv4_devconf
s##xt_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##nf_hook_entry
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##udp_tunnel_info
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##prefix_info
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
xfrm6_rcv_cb int xfrm6_rcv_cb ( s#sk_buff * , t#u8 , int ) 
s#xfrm6_protocol struct xfrm6_protocol { int ( * handler ) ( s#sk_buff * ) ; int ( * cb_handler ) ( s#sk_buff * , int ) ; int ( * err_handler ) ( s#sk_buff * , s#inet6_skb_parm * , t#u8 , t#u8 , int , t#__be32 ) ; s#xfrm6_protocol * next ; int priority ; } 
xfrm6_protocol_register int xfrm6_protocol_register ( s#xfrm6_protocol * , unsigned char ) 
xfrm6_protocol_deregister int xfrm6_protocol_deregister ( s#xfrm6_protocol * , unsigned char ) 

/* net/ipv6/xfrm6_tunnel.o */
s##proc_ns_operations
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##kmem_cache
s##fs_pin
s##nlm_lockowner
s##nfs4_lock_state
s##workqueue_struct
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##lwtunnel_state
s##uncached_list
s##proc_dir_entry
s##dn_route
s##prefix_info
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##phy_device
s##sfp_bus
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##key_user
s##key_type
s##assoc_array_ptr
s##uevent_sock
s##prot_inuse
s##ipv4_devconf
s##xt_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##netns_ipvs
s##mpls_route
xfrm6_tunnel_spi_lookup t#__be32 xfrm6_tunnel_spi_lookup ( s#net * , const t#xfrm_address_t * ) 
xfrm6_tunnel_alloc_spi t#__be32 xfrm6_tunnel_alloc_spi ( s#net * , t#xfrm_address_t * ) 

/* net/iucv/iucv.o */
s##device_private
s##sock
s##seq_file
s##vfsmount
s##posix_acl
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##of_device_id
s##acpi_device_id
s##driver_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##subsys_private
s##iommu_group
s##iommu_fwspec
s##iommu_ops
iucv_bus extern s#bus_type iucv_bus 
iucv_root extern s#device * iucv_root 
s#iucv_path struct iucv_path { t#u16 pathid ; t#u16 msglim ; t#u8 flags ; void * private ; s#iucv_handler * handler ; s#list_head list ; } 
s#iucv_message struct iucv_message { t#u32 id ; t#u32 audit ; t#u32 class ; t#u32 tag ; t#u32 length ; t#u32 reply_size ; t#u8 rmmsg [ 8 ] ; t#u8 flags ; } 
s#iucv_handler struct iucv_handler { int ( * path_pending ) ( s#iucv_path * , t#u8 * , t#u8 * ) ; void ( * path_complete ) ( s#iucv_path * , t#u8 * ) ; void ( * path_severed ) ( s#iucv_path * , t#u8 * ) ; void ( * path_quiesced ) ( s#iucv_path * , t#u8 * ) ; void ( * path_resumed ) ( s#iucv_path * , t#u8 * ) ; void ( * message_pending ) ( s#iucv_path * , s#iucv_message * ) ; void ( * message_complete ) ( s#iucv_path * , s#iucv_message * ) ; s#list_head list ; s#list_head paths ; } 
iucv_register int iucv_register ( s#iucv_handler * , int ) 
iucv_unregister void iucv_unregister ( s#iucv_handler * , int ) 
iucv_path_accept int iucv_path_accept ( s#iucv_path * , s#iucv_handler * , t#u8 * , void * ) 
iucv_path_connect int iucv_path_connect ( s#iucv_path * , s#iucv_handler * , t#u8 * , t#u8 * , t#u8 * , void * ) 
iucv_path_quiesce int iucv_path_quiesce ( s#iucv_path * , t#u8 * ) 
iucv_path_sever int iucv_path_sever ( s#iucv_path * , t#u8 * ) 
iucv_message_purge int iucv_message_purge ( s#iucv_path * , s#iucv_message * , t#u32 ) 
__iucv_message_receive int __iucv_message_receive ( s#iucv_path * , s#iucv_message * , t#u8 , void * , t#size_t , t#size_t * ) 
iucv_message_receive int iucv_message_receive ( s#iucv_path * , s#iucv_message * , t#u8 , void * , t#size_t , t#size_t * ) 
iucv_message_reject int iucv_message_reject ( s#iucv_path * , s#iucv_message * ) 
iucv_message_reply int iucv_message_reply ( s#iucv_path * , s#iucv_message * , t#u8 , void * , t#size_t ) 
__iucv_message_send int __iucv_message_send ( s#iucv_path * , s#iucv_message * , t#u8 , t#u32 , void * , t#size_t ) 
iucv_message_send int iucv_message_send ( s#iucv_path * , s#iucv_message * , t#u8 , t#u32 , void * , t#size_t ) 
iucv_message_send2way int iucv_message_send2way ( s#iucv_path * , s#iucv_message * , t#u8 , t#u32 , void * , t#size_t , void * , t#size_t , t#size_t * ) 
s#iucv_interface struct iucv_interface { int ( * message_receive ) ( s#iucv_path * , s#iucv_message * , t#u8 , void * , t#size_t , t#size_t * ) ; int ( * __message_receive ) ( s#iucv_path * , s#iucv_message * , t#u8 , void * , t#size_t , t#size_t * ) ; int ( * message_reply ) ( s#iucv_path * , s#iucv_message * , t#u8 , void * , t#size_t ) ; int ( * message_reject ) ( s#iucv_path * , s#iucv_message * ) ; int ( * message_send ) ( s#iucv_path * , s#iucv_message * , t#u8 , t#u32 , void * , t#size_t ) ; int ( * __message_send ) ( s#iucv_path * , s#iucv_message * , t#u8 , t#u32 , void * , t#size_t ) ; int ( * message_send2way ) ( s#iucv_path * , s#iucv_message * , t#u8 , t#u32 , void * , t#size_t , void * , t#size_t , t#size_t * ) ; int ( * message_purge ) ( s#iucv_path * , s#iucv_message * , t#u32 ) ; int ( * path_accept ) ( s#iucv_path * , s#iucv_handler * , t#u8 [ 16 ] , void * ) ; int ( * path_connect ) ( s#iucv_path * , s#iucv_handler * , t#u8 [ 8 ] , t#u8 [ 8 ] , t#u8 [ 16 ] , void * ) ; int ( * path_quiesce ) ( s#iucv_path * , t#u8 [ 16 ] ) ; int ( * path_resume ) ( s#iucv_path * , t#u8 [ 16 ] ) ; int ( * path_sever ) ( s#iucv_path * , t#u8 [ 16 ] ) ; int ( * iucv_register ) ( s#iucv_handler * , int ) ; void ( * iucv_unregister ) ( s#iucv_handler * , int ) ; s#bus_type * bus ; s#device * root ; } 
iucv_if extern s#iucv_interface iucv_if 

/* net/kcm/kcmproc.o */
s##proc_ns_operations
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##workqueue_struct
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##kmem_cache
s##xfrm_state
s##lwtunnel_state
s##uncached_list
s##rt6_info
s##dn_route
s##prefix_info
s##proc_dir_entry
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##phy_device
s##sfp_bus
s##sec_path
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##key_user
s##key_type
s##assoc_array_ptr
s##uevent_sock
s##prot_inuse
s##ipv4_devconf
s##xt_table
s##rt6_statistics
s##fib6_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##netns_ipvs
s##mpls_route
s##kcm_seq_muxinfo
kcm_proc_register int kcm_proc_register ( s#net * , s#kcm_seq_muxinfo * ) 
kcm_proc_unregister void kcm_proc_unregister ( s#net * , s#kcm_seq_muxinfo * ) 

/* net/l2tp/l2tp_core.o */
e#l2tp_encap_type enum l2tp_encap_type { L2TP_ENCAPTYPE_UDP , L2TP_ENCAPTYPE_IP , } 
s#l2tp_stats struct l2tp_stats { t#atomic_long_t tx_packets ; t#atomic_long_t tx_bytes ; t#atomic_long_t tx_errors ; t#atomic_long_t rx_packets ; t#atomic_long_t rx_bytes ; t#atomic_long_t rx_seq_discards ; t#atomic_long_t rx_oos_packets ; t#atomic_long_t rx_errors ; t#atomic_long_t rx_cookie_discards ; } 
s##proc_ns_operations
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##kmem_cache
s##fs_pin
s##nlm_lockowner
s##nfs4_lock_state
s##workqueue_struct
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##uncached_list
s##proc_dir_entry
s##dn_route
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##ip_mc_list
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##phy_device
s##sfp_bus
s##inet_hashinfo
s##raw_hashinfo
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##key_user
s##key_type
s##assoc_array_ptr
s##uevent_sock
s##prot_inuse
s##xt_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##netns_ipvs
s##mpls_route
s#l2tp_tunnel struct l2tp_tunnel { int magic ; unsigned long dead ; s#callback_head rcu ; t#rwlock_t hlist_lock ; t#bool acpt_newsess ; s#hlist_head session_hlist [ ( 1 << 4 ) ] ; t#u32 tunnel_id ; t#u32 peer_tunnel_id ; int version ; char name [ 20 ] ; int debug ; e#l2tp_encap_type encap ; s#l2tp_stats stats ; s#list_head list ; s#net * l2tp_net ; t#atomic_t ref_count ; void ( * show ) ( s#seq_file * , void * ) ; int ( * recv_payload_hook ) ( s#sk_buff * ) ; void ( * old_sk_destruct ) ( s#sock * ) ; s#sock * sock ; int fd ; t#bool v4mapped ; s#work_struct del_work ; t#uint8_t priv [ 0 ] ; } 
l2tp_tunnel_free void l2tp_tunnel_free ( s#l2tp_tunnel * ) 
l2tp_tunnel_get s#l2tp_tunnel * l2tp_tunnel_get ( const s#net * , t#u32 ) 
e#l2tp_pwtype enum l2tp_pwtype { L2TP_PWTYPE_NONE = 0x0000 , L2TP_PWTYPE_ETH_VLAN = 0x0004 , L2TP_PWTYPE_ETH = 0x0005 , L2TP_PWTYPE_PPP = 0x0007 , L2TP_PWTYPE_PPP_AC = 0x0008 , L2TP_PWTYPE_IP = 0x000b , __L2TP_PWTYPE_MAX } 
s#l2tp_session struct l2tp_session { int magic ; long dead ; s#l2tp_tunnel * tunnel ; t#u32 session_id ; t#u32 peer_session_id ; t#u8 cookie [ 8 ] ; int cookie_len ; t#u8 peer_cookie [ 8 ] ; int peer_cookie_len ; t#u16 offset ; t#u16 l2specific_len ; t#u16 l2specific_type ; t#u16 hdr_len ; t#u32 nr ; t#u32 ns ; s#sk_buff_head reorder_q ; t#u32 nr_max ; t#u32 nr_window_size ; t#u32 nr_oos ; int nr_oos_count ; int nr_oos_count_max ; s#hlist_node hlist ; t#atomic_t ref_count ; char name [ 32 ] ; char ifname [ 16 ] ; unsigned int data_seq : 2 ; unsigned int recv_seq : 1 ; unsigned int send_seq : 1 ; unsigned int lns_mode : 1 ; int debug ; int reorder_timeout ; int reorder_skip ; int mtu ; int mru ; e#l2tp_pwtype pwtype ; s#l2tp_stats stats ; s#hlist_node global_hlist ; int ( * build_header ) ( s#l2tp_session * , void * ) ; void ( * recv_skb ) ( s#l2tp_session * , s#sk_buff * , int ) ; void ( * session_close ) ( s#l2tp_session * ) ; void ( * show ) ( s#seq_file * , void * ) ; t#uint8_t priv [ 0 ] ; } 
l2tp_session_get s#l2tp_session * l2tp_session_get ( const s#net * , s#l2tp_tunnel * , t#u32 ) 
l2tp_session_get_nth s#l2tp_session * l2tp_session_get_nth ( s#l2tp_tunnel * , int ) 
l2tp_session_get_by_ifname s#l2tp_session * l2tp_session_get_by_ifname ( const s#net * , const char * ) 
l2tp_session_register int l2tp_session_register ( s#l2tp_session * , s#l2tp_tunnel * ) 
l2tp_tunnel_find s#l2tp_tunnel * l2tp_tunnel_find ( const s#net * , t#u32 ) 
l2tp_tunnel_find_nth s#l2tp_tunnel * l2tp_tunnel_find_nth ( const s#net * , int ) 
l2tp_recv_common void l2tp_recv_common ( s#l2tp_session * , s#sk_buff * , unsigned char * , unsigned char * , t#u16 , int , int ( * ) ( s#sk_buff * ) ) 
l2tp_session_queue_purge int l2tp_session_queue_purge ( s#l2tp_session * ) 
l2tp_udp_encap_recv int l2tp_udp_encap_recv ( s#sock * , s#sk_buff * ) 
l2tp_xmit_skb int l2tp_xmit_skb ( s#l2tp_session * , s#sk_buff * , int ) 
l2tp_tunnel_closeall void l2tp_tunnel_closeall ( s#l2tp_tunnel * ) 
s#l2tp_tunnel_cfg struct l2tp_tunnel_cfg { int debug ; e#l2tp_encap_type encap ; s#in_addr local_ip ; s#in_addr peer_ip ; s#in6_addr * local_ip6 ; s#in6_addr * peer_ip6 ; t#u16 local_udp_port ; t#u16 peer_udp_port ; unsigned int use_udp_checksums : 1 , udp6_zero_tx_checksums : 1 , udp6_zero_rx_checksums : 1 ; } 
l2tp_tunnel_create int l2tp_tunnel_create ( s#net * , int , int , t#u32 , t#u32 , s#l2tp_tunnel_cfg * , s#l2tp_tunnel * * ) 
l2tp_tunnel_delete void l2tp_tunnel_delete ( s#l2tp_tunnel * ) 
l2tp_session_free void l2tp_session_free ( s#l2tp_session * ) 
__l2tp_session_unhash void __l2tp_session_unhash ( s#l2tp_session * ) 
l2tp_session_delete int l2tp_session_delete ( s#l2tp_session * ) 
l2tp_session_set_header_len void l2tp_session_set_header_len ( s#l2tp_session * , int ) 
s#l2tp_session_cfg struct l2tp_session_cfg { e#l2tp_pwtype pw_type ; unsigned int data_seq : 2 ; unsigned int recv_seq : 1 ; unsigned int send_seq : 1 ; unsigned int lns_mode : 1 ; int debug ; t#u16 vlan_id ; t#u16 offset ; t#u16 l2specific_len ; t#u16 l2specific_type ; t#u8 cookie [ 8 ] ; int cookie_len ; t#u8 peer_cookie [ 8 ] ; int peer_cookie_len ; int reorder_timeout ; int mtu ; int mru ; char * ifname ; } 
l2tp_session_create s#l2tp_session * l2tp_session_create ( int , s#l2tp_tunnel * , t#u32 , t#u32 , s#l2tp_session_cfg * ) 

/* net/l2tp/l2tp_ip.o */
s##posix_acl
s##vfsmount
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##kmem_cache
s##fs_pin
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##workqueue_struct
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##lwtunnel_state
s##uncached_list
s##dn_route
s##prefix_info
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##phy_device
s##sfp_bus
s##prot_inuse
s##ipv4_devconf
s##xt_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##mempolicy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##raw_hashinfo
s##sock_reuseport
l2tp_ioctl int l2tp_ioctl ( s#sock * , int , unsigned long ) 

/* net/l2tp/l2tp_netlink.o */
s##proc_ns_operations
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##workqueue_struct
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##kmem_cache
s##xfrm_state
s##lwtunnel_state
s##uncached_list
s##rt6_info
s##dn_route
s##prefix_info
s##proc_dir_entry
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##phy_device
s##sfp_bus
s##sec_path
s##inet_hashinfo
s##raw_hashinfo
s##xfrm_policy
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##key_user
s##key_type
s##assoc_array_ptr
s##uevent_sock
s##prot_inuse
s##ipv4_devconf
s##xt_table
s##rt6_statistics
s##fib6_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s#l2tp_nl_cmd_ops struct l2tp_nl_cmd_ops { int ( * session_create ) ( s#net * , s#l2tp_tunnel * , t#u32 , t#u32 , s#l2tp_session_cfg * ) ; int ( * session_delete ) ( s#l2tp_session * ) ; } 
l2tp_nl_register_ops int l2tp_nl_register_ops ( e#l2tp_pwtype , const s#l2tp_nl_cmd_ops * ) 
l2tp_nl_unregister_ops void l2tp_nl_unregister_ops ( e#l2tp_pwtype ) 

/* net/l3mdev/l3mdev.o */
s##sock
s##sec_path
s##proc_ns_operations
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##bio_vec
s##poll_table_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##mem_cgroup
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kmem_cache
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##bpf_prog_array
s##cgroup_taskset
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_dir_entry
s##uevent_sock
s##prot_inuse
s##ipv4_devconf
s##fib_table
s##inet_peer_base
s##xt_table
s##inet_hashinfo
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##lwtunnel_state
s##rtable
s##dn_route
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##nf_hook_entry
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##udp_tunnel_info
s##bpf_prog
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##ndisc_ops
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##mini_Qdisc
s##Qdisc
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
l3mdev_master_ifindex_rcu int l3mdev_master_ifindex_rcu ( const s#net_device * ) 
l3mdev_fib_table_rcu t#u32 l3mdev_fib_table_rcu ( const s#net_device * ) 
l3mdev_fib_table_by_index t#u32 l3mdev_fib_table_by_index ( s#net * , int ) 
l3mdev_link_scope_lookup s#dst_entry * l3mdev_link_scope_lookup ( s#net * , s#flowi6 * ) 
l3mdev_update_flow void l3mdev_update_flow ( s#net * , s#flowi * ) 

/* net/llc/llc_core.o */
llc_sap_list extern s#list_head llc_sap_list 
s##neigh_parms
s##neighbour
s##sock
s##vfsmount
s##posix_acl
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##kmem_cache
s##xt_table
s##inet_hashinfo
s##fib_notifier_ops
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##nf_hook_entry
s##ebt_table
s##workqueue_struct
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##bpf_prog_array
s##cgroup_taskset
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##udp_tunnel_info
s##bpf_prog
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##l3mdev_ops
s##ndisc_ops
s##xfrm_state
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##mini_Qdisc
s##Qdisc
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##rtnl_link_ops
s##phy_device
s##sfp_bus
s##sec_path
llc_sap_find s#llc_sap * llc_sap_find ( unsigned char ) 
llc_sap_open s#llc_sap * llc_sap_open ( unsigned char , int ( * ) ( s#sk_buff * , s#net_device * , s#packet_type * , s#net_device * ) ) 
llc_sap_close void llc_sap_close ( s#llc_sap * ) 

/* net/llc/llc_input.o */
s##neigh_parms
s##neighbour
s##module
s##udp_tunnel_info
s##bpf_prog
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##l3mdev_ops
s##ndisc_ops
s##xfrm_state
s##sock
s##tls_crypto_info
s##tls_context
s##vfsmount
s##posix_acl
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##kmem_cache
s##xt_table
s##inet_hashinfo
s##fib_notifier_ops
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##nf_hook_entry
s##ebt_table
s##workqueue_struct
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##bpf_prog_array
s##cgroup_taskset
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##mini_Qdisc
s##Qdisc
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##rtnl_link_ops
s##phy_device
s##sfp_bus
s##sec_path
llc_add_pack void llc_add_pack ( int , void ( * ) ( s#llc_sap * , s#sk_buff * ) ) 
llc_remove_pack void llc_remove_pack ( int ) 
llc_set_station_handler void llc_set_station_handler ( void ( * ) ( s#sk_buff * ) ) 

/* net/llc/llc_output.o */
s##neigh_parms
s##neighbour
s##module
s##udp_tunnel_info
s##bpf_prog
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##l3mdev_ops
s##ndisc_ops
s##xfrm_state
s##sock
s##tls_crypto_info
s##tls_context
s##vfsmount
s##posix_acl
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##kmem_cache
s##xt_table
s##inet_hashinfo
s##fib_notifier_ops
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##nf_hook_entry
s##ebt_table
s##workqueue_struct
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##bpf_prog_array
s##cgroup_taskset
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##mini_Qdisc
s##Qdisc
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##rtnl_link_ops
s##phy_device
s##sfp_bus
s##sec_path
llc_mac_hdr_init int llc_mac_hdr_init ( s#sk_buff * , const unsigned char * , const unsigned char * ) 
llc_build_and_send_ui_pkt int llc_build_and_send_ui_pkt ( s#llc_sap * , s#sk_buff * , unsigned char * , unsigned char ) 

/* net/mpls/af_mpls.o */
s##posix_acl
s##vfsmount
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##prot_inuse
s##ipv4_devconf
s##kmem_cache
s##xt_table
s##inet_hashinfo
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##lwtunnel_state
s##uncached_list
s##dn_route
s##workqueue_struct
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##nf_hook_entry
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##netns_ipvs
s#mpls_nh struct mpls_nh { s#net_device * nh_dev ; unsigned int nh_flags ; t#u8 nh_labels ; t#u8 nh_via_alen ; t#u8 nh_via_table ; t#u8 nh_reserved1 ; t#u32 nh_label [ 0 ] ; } 
s#mpls_route struct mpls_route { s#callback_head rt_rcu ; t#u8 rt_protocol ; t#u8 rt_payload_type ; t#u8 rt_max_alen ; t#u8 rt_ttl_propagate ; t#u8 rt_nhn ; t#u8 rt_nhn_alive ; t#u8 rt_nh_size ; t#u8 rt_via_offset ; t#u8 rt_reserved1 ; s#mpls_nh rt_nh [ 0 ] ; } 
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##mempolicy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##blk_plug
s##reclaim_state
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##udp_table
s##raw_hashinfo
s##bpf_prog_aux
s##xfrm_policy
s##sock_reuseport
s##sec_path
s##udp_tunnel_info
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s#mpls_link_stats struct mpls_link_stats { t#__u64 rx_packets ; t#__u64 tx_packets ; t#__u64 rx_bytes ; t#__u64 tx_bytes ; t#__u64 rx_errors ; t#__u64 tx_errors ; t#__u64 rx_dropped ; t#__u64 tx_dropped ; t#__u64 rx_noroute ; } 
s#mpls_pcpu_stats struct mpls_pcpu_stats { s#mpls_link_stats stats ; s#u64_stats_sync syncp ; } 
s#mpls_dev struct mpls_dev { int input_enabled ; s#net_device * dev ; s#mpls_pcpu_stats * stats ; s#ctl_table_header * sysctl ; s#callback_head rcu ; } 
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
mpls_output_possible t#bool mpls_output_possible ( const s#net_device * ) 
mpls_dev_mtu unsigned int mpls_dev_mtu ( const s#net_device * ) 
mpls_pkt_too_big t#bool mpls_pkt_too_big ( const s#sk_buff * , unsigned int ) 
mpls_stats_inc_outucastpkts void mpls_stats_inc_outucastpkts ( s#net_device * , const s#sk_buff * ) 
nla_put_labels int nla_put_labels ( s#sk_buff * , int , t#u8 , const t#u32 [ ] ) 
nla_get_labels int nla_get_labels ( const s#nlattr * , t#u8 , t#u8 * , t#u32 [ ] ) 

/* net/ncsi/ncsi-manage.o */
s##posix_acl
s##vfsmount
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##prot_inuse
s##ipv4_devconf
s##fib_table
s##inet_peer_base
s##kmem_cache
s##xt_table
s##inet_hashinfo
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##lwtunnel_state
s##rtable
s##dn_route
s##workqueue_struct
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##nf_hook_entry
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##mempolicy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##blk_plug
s##reclaim_state
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##udp_table
s##raw_hashinfo
s##bpf_prog_aux
s##xfrm_policy
s##sock_reuseport
s##sec_path
s##udp_tunnel_info
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
s#ncsi_dev struct ncsi_dev { int state ; int link_up ; s#net_device * dev ; void ( * handler ) ( s#ncsi_dev * ) ; } 
ncsi_register_dev s#ncsi_dev * ncsi_register_dev ( s#net_device * , void ( * ) ( s#ncsi_dev * ) ) 
ncsi_start_dev int ncsi_start_dev ( s#ncsi_dev * ) 
ncsi_stop_dev void ncsi_stop_dev ( s#ncsi_dev * ) 
ncsi_unregister_dev void ncsi_unregister_dev ( s#ncsi_dev * ) 

/* net/netfilter/core.o */
s##proc_ns_operations
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##kmem_cache
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##bpf_prog_aux
s##xfrm_policy
s##workqueue_struct
s##xfrm_state
s##lwtunnel_state
s##rtable
s##rt6_info
s##dn_route
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_dir_entry
s##uevent_sock
s##prot_inuse
s##fib_table
s##inet_peer_base
s##xt_table
s##rt6_statistics
s##fib6_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##udp_tunnel_info
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##ndisc_ops
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##ip_mc_list
s##dn_dev
s##inet6_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
s##sec_path
s##nf_queue_entry
s#nf_afinfo struct nf_afinfo { unsigned short family ; t#__sum16 ( * checksum ) ( s#sk_buff * , unsigned int , unsigned int , t#u_int8_t ) ; t#__sum16 ( * checksum_partial ) ( s#sk_buff * , unsigned int , unsigned int , unsigned int , t#u_int8_t ) ; int ( * route ) ( s#net * , s#dst_entry * * , s#flowi * , t#bool ) ; void ( * saveroute ) ( const s#sk_buff * , s#nf_queue_entry * ) ; int ( * reroute ) ( s#net * , s#sk_buff * , const s#nf_queue_entry * ) ; int route_key_size ; } 
nf_afinfo extern const s#nf_afinfo * nf_afinfo [ E#NFPROTO_NUMPROTO ] 
s#nf_ipv6_ops struct nf_ipv6_ops { int ( * chk_addr ) ( s#net * , const s#in6_addr * , const s#net_device * , int ) ; void ( * route_input ) ( s#sk_buff * ) ; int ( * fragment ) ( s#net * , s#sock * , s#sk_buff * , int ( * ) ( s#net * , s#sock * , s#sk_buff * ) ) ; } 
nf_ipv6_ops extern const s#nf_ipv6_ops * nf_ipv6_ops 
nf_skb_duplicated extern __attribute__ ( ( section ( ".data..percpu" "" ) ) ) __typeof__ ( t#bool ) nf_skb_duplicated 
nf_register_afinfo int nf_register_afinfo ( const s#nf_afinfo * ) 
nf_unregister_afinfo void nf_unregister_afinfo ( const s#nf_afinfo * ) 
nf_hooks_needed extern s#static_key nf_hooks_needed [ E#NFPROTO_NUMPROTO ] [ 8 ] 
nf_register_net_hook int nf_register_net_hook ( s#net * , const s#nf_hook_ops * ) 
nf_unregister_net_hook void nf_unregister_net_hook ( s#net * , const s#nf_hook_ops * ) 
nf_register_net_hooks int nf_register_net_hooks ( s#net * , const s#nf_hook_ops * , unsigned int ) 
nf_unregister_net_hooks void nf_unregister_net_hooks ( s#net * , const s#nf_hook_ops * , unsigned int ) 
nf_register_hook int nf_register_hook ( s#nf_hook_ops * ) 
nf_unregister_hook void nf_unregister_hook ( s#nf_hook_ops * ) 
nf_register_hooks int nf_register_hooks ( s#nf_hook_ops * , unsigned int ) 
_nf_register_hooks int _nf_register_hooks ( s#nf_hook_ops * , unsigned int ) 
nf_unregister_hooks void nf_unregister_hooks ( s#nf_hook_ops * , unsigned int ) 
_nf_unregister_hooks void _nf_unregister_hooks ( s#nf_hook_ops * , unsigned int ) 
nf_hook_slow int nf_hook_slow ( s#sk_buff * , s#nf_hook_state * , s#nf_hook_entry * ) 
skb_make_writable int skb_make_writable ( s#sk_buff * , unsigned int ) 
s##nf_conn
s#nfnl_ct_hook struct nfnl_ct_hook { s#nf_conn * ( * get_ct ) ( const s#sk_buff * , e#ip_conntrack_info * ) ; t#size_t ( * build_size ) ( const s#nf_conn * ) ; int ( * build ) ( s#sk_buff * , s#nf_conn * , e#ip_conntrack_info , t#u_int16_t , t#u_int16_t ) ; int ( * parse ) ( const s#nlattr * , s#nf_conn * ) ; int ( * attach_expect ) ( const s#nlattr * , s#nf_conn * , t#u32 , t#u32 ) ; void ( * seq_adjust ) ( s#sk_buff * , s#nf_conn * , e#ip_conntrack_info , t#s32 ) ; } 
nfnl_ct_hook extern s#nfnl_ct_hook * nfnl_ct_hook 
ip_ct_attach extern void ( * ip_ct_attach ) ( s#sk_buff * , const s#sk_buff * ) 
nf_ct_attach void nf_ct_attach ( s#sk_buff * , const s#sk_buff * ) 
nf_ct_destroy extern void ( * nf_ct_destroy ) ( s#nf_conntrack * ) 
nf_conntrack_destroy void nf_conntrack_destroy ( s#nf_conntrack * ) 
nf_ct_zone_dflt extern const s#nf_conntrack_zone nf_ct_zone_dflt 
nf_nat_decode_session_hook extern void ( * nf_nat_decode_session_hook ) ( s#sk_buff * , s#flowi * ) 

/* net/netfilter/ipset/ip_set_core.o */
s##proc_ns_operations
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##workqueue_struct
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##kmem_cache
s##xfrm_state
s##lwtunnel_state
s##rtable
s##rt6_info
s##dn_route
s##ndisc_ops
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##phy_device
s##sfp_bus
s##sec_path
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_dir_entry
s##uevent_sock
s##prot_inuse
s##ipv4_devconf
s##fib_table
s##inet_peer_base
s##rt6_statistics
s##fib6_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##netns_ipvs
s##mpls_route
E#IPSET_ADT_MAX 3 
e#ipset_adt enum ipset_adt { IPSET_ADD , IPSET_DEL , IPSET_TEST , IPSET_ADT_MAX , IPSET_CREATE = E#IPSET_ADT_MAX , IPSET_CADT_MAX , } 
s#ip_set_skbinfo struct ip_set_skbinfo { t#u32 skbmark ; t#u32 skbmarkmask ; t#u32 skbprio ; t#u16 skbqueue ; t#u16 __pad ; } 
s#ip_set_ext struct ip_set_ext { s#ip_set_skbinfo skbinfo ; t#u64 packets ; t#u64 bytes ; char * comment ; t#u32 timeout ; } 
s#ip_set_adt_opt struct ip_set_adt_opt { t#u8 family ; t#u8 dim ; t#u8 flags ; t#u32 cmdflags ; s#ip_set_ext ext ; } 
t#ipset_adtfn typedef int ( * ipset_adtfn ) ( s#ip_set * , void * , const s#ip_set_ext * , s#ip_set_ext * , t#u32 ) 
s#ip_set_type_variant struct ip_set_type_variant { int ( * kadt ) ( s#ip_set * , const s#sk_buff * , const s#xt_action_param * , e#ipset_adt , s#ip_set_adt_opt * ) ; int ( * uadt ) ( s#ip_set * , s#nlattr * [ ] , e#ipset_adt , t#u32 * , t#u32 , t#bool ) ; t#ipset_adtfn adt [ E#IPSET_ADT_MAX ] ; int ( * resize ) ( s#ip_set * , t#bool ) ; void ( * destroy ) ( s#ip_set * ) ; void ( * flush ) ( s#ip_set * ) ; void ( * expire ) ( s#ip_set * ) ; int ( * head ) ( s#ip_set * , s#sk_buff * ) ; int ( * list ) ( const s#ip_set * , s#sk_buff * , s#netlink_callback * ) ; void ( * uref ) ( s#ip_set * , s#netlink_callback * , t#bool ) ; t#bool ( * same_set ) ( const s#ip_set * , const s#ip_set * ) ; } 
E#IPSET_EXT_ID_MAX ( 0 ) + 4 
s#ip_set struct ip_set { char name [ 32 ] ; t#spinlock_t lock ; t#u32 ref ; t#u32 ref_netlink ; s#ip_set_type * type ; const s#ip_set_type_variant * variant ; t#u8 family ; t#u8 revision ; t#u8 extensions ; t#u8 flags ; t#u32 timeout ; t#u32 elements ; t#size_t ext_size ; t#size_t dsize ; t#size_t offset [ E#IPSET_EXT_ID_MAX ] ; void * data ; } 
E#__IPSET_ATTR_CREATE_MAX ( 16 ) + 11 
E#IPSET_ATTR_CADT_MAX 16 
E#__IPSET_ATTR_ADT_MAX ( E#IPSET_ATTR_CADT_MAX + 1 ) + 14 
s#ip_set_type struct ip_set_type { s#list_head list ; char name [ 32 ] ; t#u8 protocol ; t#u8 dimension ; t#u8 family ; t#u8 revision_min , revision_max ; t#u16 features ; int ( * create ) ( s#net * , s#ip_set * , s#nlattr * [ ] , t#u32 ) ; const s#nla_policy create_policy [ ( E#__IPSET_ATTR_CREATE_MAX - 1 ) + 1 ] ; const s#nla_policy adt_policy [ ( E#__IPSET_ATTR_ADT_MAX - 1 ) + 1 ] ; s#module * me ; } 
ip_set_type_register extern int ip_set_type_register ( s#ip_set_type * ) 
ip_set_type_unregister extern void ip_set_type_unregister ( s#ip_set_type * ) 
ip_set_alloc extern void * ip_set_alloc ( t#size_t ) 
ip_set_free extern void ip_set_free ( void * ) 
ip_set_get_ipaddr4 extern int ip_set_get_ipaddr4 ( s#nlattr * , t#__be32 * ) 
ip_set_get_ipaddr6 extern int ip_set_get_ipaddr6 ( s#nlattr * , u#nf_inet_addr * ) 
E#IPSET_EXT_BIT_TIMEOUT 0 
E#IPSET_EXT_BIT_COUNTER 1 
E#IPSET_EXT_BIT_COMMENT 2 
E#IPSET_EXT_BIT_SKBINFO 3 
E#IPSET_EXT_BIT_DESTROY 7 
e#ip_set_extension enum ip_set_extension { IPSET_EXT_BIT_TIMEOUT = 0 , IPSET_EXT_TIMEOUT = ( 1 << E#IPSET_EXT_BIT_TIMEOUT ) , IPSET_EXT_BIT_COUNTER = 1 , IPSET_EXT_COUNTER = ( 1 << E#IPSET_EXT_BIT_COUNTER ) , IPSET_EXT_BIT_COMMENT = 2 , IPSET_EXT_COMMENT = ( 1 << E#IPSET_EXT_BIT_COMMENT ) , IPSET_EXT_BIT_SKBINFO = 3 , IPSET_EXT_SKBINFO = ( 1 << E#IPSET_EXT_BIT_SKBINFO ) , IPSET_EXT_BIT_DESTROY = 7 , IPSET_EXT_DESTROY = ( 1 << E#IPSET_EXT_BIT_DESTROY ) , } 
E#IPSET_FLAG_BIT_BEFORE 0 
E#IPSET_FLAG_BIT_PHYSDEV 1 
E#IPSET_FLAG_BIT_NOMATCH 2 
E#IPSET_FLAG_BIT_WITH_COUNTERS 3 
E#IPSET_FLAG_BIT_WITH_COMMENT 4 
E#IPSET_FLAG_BIT_WITH_FORCEADD 5 
E#IPSET_FLAG_BIT_WITH_SKBINFO 6 
e#ipset_cadt_flags enum ipset_cadt_flags { IPSET_FLAG_BIT_BEFORE = 0 , IPSET_FLAG_BEFORE = ( 1 << E#IPSET_FLAG_BIT_BEFORE ) , IPSET_FLAG_BIT_PHYSDEV = 1 , IPSET_FLAG_PHYSDEV = ( 1 << E#IPSET_FLAG_BIT_PHYSDEV ) , IPSET_FLAG_BIT_NOMATCH = 2 , IPSET_FLAG_NOMATCH = ( 1 << E#IPSET_FLAG_BIT_NOMATCH ) , IPSET_FLAG_BIT_WITH_COUNTERS = 3 , IPSET_FLAG_WITH_COUNTERS = ( 1 << E#IPSET_FLAG_BIT_WITH_COUNTERS ) , IPSET_FLAG_BIT_WITH_COMMENT = 4 , IPSET_FLAG_WITH_COMMENT = ( 1 << E#IPSET_FLAG_BIT_WITH_COMMENT ) , IPSET_FLAG_BIT_WITH_FORCEADD = 5 , IPSET_FLAG_WITH_FORCEADD = ( 1 << E#IPSET_FLAG_BIT_WITH_FORCEADD ) , IPSET_FLAG_BIT_WITH_SKBINFO = 6 , IPSET_FLAG_WITH_SKBINFO = ( 1 << E#IPSET_FLAG_BIT_WITH_SKBINFO ) , IPSET_FLAG_CADT_MAX = 15 , } 
s#ip_set_ext_type struct ip_set_ext_type { void ( * destroy ) ( s#ip_set * , void * ) ; e#ip_set_extension type ; e#ipset_cadt_flags flag ; t#u8 len ; t#u8 align ; } 
ip_set_extensions extern const s#ip_set_ext_type ip_set_extensions [ ] 
ip_set_elem_len extern t#size_t ip_set_elem_len ( s#ip_set * , s#nlattr * [ ] , t#size_t , t#size_t ) 
ip_set_get_extensions extern int ip_set_get_extensions ( s#ip_set * , s#nlattr * [ ] , s#ip_set_ext * ) 
ip_set_put_extensions extern int ip_set_put_extensions ( s#sk_buff * , const s#ip_set * , const void * , t#bool ) 
t#ip_set_id_t typedef t#__u16 ip_set_id_t 
ip_set_test extern int ip_set_test ( t#ip_set_id_t , const s#sk_buff * , const s#xt_action_param * , s#ip_set_adt_opt * ) 
ip_set_add extern int ip_set_add ( t#ip_set_id_t , const s#sk_buff * , const s#xt_action_param * , s#ip_set_adt_opt * ) 
ip_set_del extern int ip_set_del ( t#ip_set_id_t , const s#sk_buff * , const s#xt_action_param * , s#ip_set_adt_opt * ) 
ip_set_get_byname extern t#ip_set_id_t ip_set_get_byname ( s#net * , const char * , s#ip_set * * ) 
ip_set_put_byindex extern void ip_set_put_byindex ( s#net * , t#ip_set_id_t ) 
ip_set_name_byindex extern const char * ip_set_name_byindex ( s#net * , t#ip_set_id_t ) 
ip_set_nfnl_get_byindex extern t#ip_set_id_t ip_set_nfnl_get_byindex ( s#net * , t#ip_set_id_t ) 
ip_set_nfnl_put extern void ip_set_nfnl_put ( s#net * , t#ip_set_id_t ) 

/* net/netfilter/ipset/ip_set_getport.o */
s##proc_ns_operations
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##kmem_cache
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##bpf_prog_aux
s##xfrm_policy
s##workqueue_struct
s##xfrm_state
s##lwtunnel_state
s##uncached_list
s##rt6_info
s##dn_route
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_dir_entry
s##uevent_sock
s##prot_inuse
s##ipv4_devconf
s##rt6_statistics
s##fib6_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##udp_tunnel_info
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##prefix_info
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
s##sec_path
ip_set_get_ip4_port extern t#bool ip_set_get_ip4_port ( const s#sk_buff * , t#bool , t#__be16 * , t#u8 * ) 
ip_set_get_ip6_port extern t#bool ip_set_get_ip6_port ( const s#sk_buff * , t#bool , t#__be16 * , t#u8 * ) 
ip_set_get_ip_port extern t#bool ip_set_get_ip_port ( const s#sk_buff * , t#u8 , t#bool , t#__be16 * ) 

/* net/netfilter/ipset/pfxlen.o */
ip_set_netmask_map extern const u#nf_inet_addr ip_set_netmask_map [ ] 
ip_set_hostmask_map extern const u#nf_inet_addr ip_set_hostmask_map [ ] 
ip_set_range_to_cidr extern t#u32 ip_set_range_to_cidr ( t#u32 , t#u32 , t#u8 * ) 

/* net/netfilter/ipvs/ip_vs_app.o */
s##posix_acl
s##vfsmount
s##device_private
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##sec_path
s##workqueue_struct
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##kmem_cache
s##xfrm_state
s##uncached_list
s##dn_route
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
s##prot_inuse
s##ipv4_devconf
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s#ip_vs_kstats struct ip_vs_kstats { t#u64 conns ; t#u64 inpkts ; t#u64 outpkts ; t#u64 inbytes ; t#u64 outbytes ; t#u64 cps ; t#u64 inpps ; t#u64 outpps ; t#u64 inbps ; t#u64 outbps ; } 
s#ip_vs_estimator struct ip_vs_estimator { s#list_head list ; t#u64 last_inbytes ; t#u64 last_outbytes ; t#u64 last_conns ; t#u64 last_inpkts ; t#u64 last_outpkts ; t#u64 cps ; t#u64 inpps ; t#u64 outpps ; t#u64 inbps ; t#u64 outbps ; } 
s#ip_vs_counters struct ip_vs_counters { t#__u64 conns ; t#__u64 inpkts ; t#__u64 outpkts ; t#__u64 inbytes ; t#__u64 outbytes ; } 
s#ip_vs_cpu_stats struct ip_vs_cpu_stats { s#ip_vs_counters cnt ; s#u64_stats_sync syncp ; } 
s#ip_vs_stats struct ip_vs_stats { s#ip_vs_kstats kstats ; s#ip_vs_estimator est ; s#ip_vs_cpu_stats * cpustats ; t#spinlock_t lock ; s#ip_vs_kstats kstats0 ; } 
s#ip_vs_dest_dst struct ip_vs_dest_dst { s#dst_entry * dst_cache ; t#u32 dst_cookie ; u#nf_inet_addr dst_saddr ; s#callback_head callback_head ; } 
s#ip_vs_iphdr struct ip_vs_iphdr { int hdr_flags ; t#__u32 off ; t#__u32 len ; t#__u16 fragoffs ; t#__s16 protocol ; t#__s32 flags ; u#nf_inet_addr saddr ; u#nf_inet_addr daddr ; } 
s#ip_vs_scheduler struct ip_vs_scheduler { s#list_head n_list ; char * name ; t#atomic_t refcnt ; s#module * module ; int ( * init_service ) ( s#ip_vs_service * ) ; void ( * done_service ) ( s#ip_vs_service * ) ; int ( * add_dest ) ( s#ip_vs_service * , s#ip_vs_dest * ) ; int ( * del_dest ) ( s#ip_vs_service * , s#ip_vs_dest * ) ; int ( * upd_dest ) ( s#ip_vs_service * , s#ip_vs_dest * ) ; s#ip_vs_dest * ( * schedule ) ( s#ip_vs_service * , const s#sk_buff * , s#ip_vs_iphdr * ) ; } 
s#ip_vs_conn_param struct ip_vs_conn_param { s#netns_ipvs * ipvs ; const u#nf_inet_addr * caddr ; const u#nf_inet_addr * vaddr ; t#__be16 cport ; t#__be16 vport ; t#__u16 protocol ; t#u16 af ; const s#ip_vs_pe * pe ; char * pe_data ; t#__u8 pe_data_len ; } 
s#ip_vs_pe struct ip_vs_pe { s#list_head n_list ; char * name ; t#atomic_t refcnt ; s#module * module ; int ( * fill_param ) ( s#ip_vs_conn_param * , s#sk_buff * ) ; t#bool ( * ct_match ) ( const s#ip_vs_conn_param * , s#ip_vs_conn * ) ; t#u32 ( * hashkey_raw ) ( const s#ip_vs_conn_param * , t#u32 , t#bool ) ; int ( * show_pe_data ) ( const s#ip_vs_conn * , char * ) ; s#ip_vs_conn * ( * conn_out ) ( s#ip_vs_service * , s#ip_vs_dest * , s#sk_buff * , const s#ip_vs_iphdr * , t#__be16 , t#__be16 ) ; } 
s#ip_vs_service struct ip_vs_service { s#hlist_node s_list ; s#hlist_node f_list ; t#atomic_t refcnt ; t#u16 af ; t#__u16 protocol ; u#nf_inet_addr addr ; t#__be16 port ; t#__u32 fwmark ; unsigned int flags ; unsigned int timeout ; t#__be32 netmask ; s#netns_ipvs * ipvs ; s#list_head destinations ; t#__u32 num_dests ; s#ip_vs_stats stats ; s#ip_vs_scheduler * scheduler ; t#spinlock_t sched_lock ; void * sched_data ; s#ip_vs_pe * pe ; s#callback_head callback_head ; } 
s#ip_vs_dest struct ip_vs_dest { s#list_head n_list ; s#hlist_node d_list ; t#u16 af ; t#__be16 port ; u#nf_inet_addr addr ; volatile unsigned int flags ; t#atomic_t conn_flags ; t#atomic_t weight ; t#refcount_t refcnt ; s#ip_vs_stats stats ; unsigned long idle_start ; t#atomic_t activeconns ; t#atomic_t inactconns ; t#atomic_t persistconns ; t#__u32 u_threshold ; t#__u32 l_threshold ; t#spinlock_t dst_lock ; s#ip_vs_dest_dst * dest_dst ; s#ip_vs_service * svc ; t#__u16 protocol ; t#__be16 vport ; u#nf_inet_addr vaddr ; t#__u32 vfwmark ; s#list_head t_list ; unsigned int in_rs_table : 1 ; } 
s#ip_vs_seq struct ip_vs_seq { t#__u32 init_seq ; t#__u32 delta ; t#__u32 previous_delta ; } 
s#ip_vs_conn struct ip_vs_conn { s#hlist_node c_list ; t#__be16 cport ; t#__be16 dport ; t#__be16 vport ; t#u16 af ; u#nf_inet_addr caddr ; u#nf_inet_addr vaddr ; u#nf_inet_addr daddr ; volatile t#__u32 flags ; t#__u16 protocol ; t#__u16 daf ; s#netns_ipvs * ipvs ; t#refcount_t refcnt ; s#timer_list timer ; volatile unsigned long timeout ; t#spinlock_t lock ; volatile t#__u16 state ; volatile t#__u16 old_state ; t#__u32 fwmark ; unsigned long sync_endtime ; s#ip_vs_conn * control ; t#atomic_t n_control ; s#ip_vs_dest * dest ; t#atomic_t in_pkts ; int ( * packet_xmit ) ( s#sk_buff * , s#ip_vs_conn * , s#ip_vs_protocol * , s#ip_vs_iphdr * ) ; s#ip_vs_app * app ; void * app_data ; s#ip_vs_seq in_seq ; s#ip_vs_seq out_seq ; const s#ip_vs_pe * pe ; char * pe_data ; t#__u8 pe_data_len ; s#callback_head callback_head ; } 
s#ip_vs_protocol struct ip_vs_protocol { s#ip_vs_protocol * next ; char * name ; t#u16 protocol ; t#u16 num_states ; int dont_defrag ; void ( * init ) ( s#ip_vs_protocol * ) ; void ( * exit ) ( s#ip_vs_protocol * ) ; int ( * init_netns ) ( s#netns_ipvs * , s#ip_vs_proto_data * ) ; void ( * exit_netns ) ( s#netns_ipvs * , s#ip_vs_proto_data * ) ; int ( * conn_schedule ) ( s#netns_ipvs * , int , s#sk_buff * , s#ip_vs_proto_data * , int * , s#ip_vs_conn * * , s#ip_vs_iphdr * ) ; s#ip_vs_conn * ( * conn_in_get ) ( s#netns_ipvs * , int , const s#sk_buff * , const s#ip_vs_iphdr * ) ; s#ip_vs_conn * ( * conn_out_get ) ( s#netns_ipvs * , int , const s#sk_buff * , const s#ip_vs_iphdr * ) ; int ( * snat_handler ) ( s#sk_buff * , s#ip_vs_protocol * , s#ip_vs_conn * , s#ip_vs_iphdr * ) ; int ( * dnat_handler ) ( s#sk_buff * , s#ip_vs_protocol * , s#ip_vs_conn * , s#ip_vs_iphdr * ) ; int ( * csum_check ) ( int , s#sk_buff * , s#ip_vs_protocol * ) ; const char * ( * state_name ) ( int ) ; void ( * state_transition ) ( s#ip_vs_conn * , int , const s#sk_buff * , s#ip_vs_proto_data * ) ; int ( * register_app ) ( s#netns_ipvs * , s#ip_vs_app * ) ; void ( * unregister_app ) ( s#netns_ipvs * , s#ip_vs_app * ) ; int ( * app_conn_bind ) ( s#ip_vs_conn * ) ; void ( * debug_packet ) ( int , s#ip_vs_protocol * , const s#sk_buff * , int , const char * ) ; void ( * timeout_change ) ( s#ip_vs_proto_data * , int ) ; } 
s##tcp_states_t
s#ip_vs_proto_data struct ip_vs_proto_data { s#ip_vs_proto_data * next ; s#ip_vs_protocol * pp ; int * timeout_table ; t#atomic_t appcnt ; s#tcp_states_t * tcp_state_table ; } 
s##ip_vs_sync_buff
s#ipvs_master_sync_state struct ipvs_master_sync_state { s#list_head sync_queue ; s#ip_vs_sync_buff * sync_buff ; unsigned long sync_queue_len ; unsigned int sync_queue_delay ; s#task_struct * master_thread ; s#delayed_work master_wakeup_work ; s#netns_ipvs * ipvs ; } 
s#ipvs_sync_daemon_cfg struct ipvs_sync_daemon_cfg { u#nf_inet_addr mcast_group ; int syncid ; t#u16 sync_maxlen ; t#u16 mcast_port ; t#u8 mcast_af ; t#u8 mcast_ttl ; char mcast_ifn [ 16 ] ; } 
s#netns_ipvs struct netns_ipvs { int gen ; int enable ; s#hlist_head rs_table [ ( 1 << 4 ) ] ; s#list_head app_list ; s#ip_vs_proto_data * proto_data_table [ 32 ] ; s#list_head tcp_apps [ ( 1 << 4 ) ] ; s#list_head udp_apps [ ( 1 << 4 ) ] ; s#list_head sctp_apps [ ( 1 << 4 ) ] ; t#atomic_t conn_count ; s#ip_vs_stats tot_stats ; int num_services ; s#list_head dest_trash ; t#spinlock_t dest_trash_lock ; s#timer_list dest_trash_timer ; t#atomic_t ftpsvc_counter ; t#atomic_t nullsvc_counter ; t#atomic_t conn_out_counter ; s#delayed_work defense_work ; int drop_rate ; int drop_counter ; t#atomic_t dropentry ; t#spinlock_t dropentry_lock ; t#spinlock_t droppacket_lock ; t#spinlock_t securetcp_lock ; s#ctl_table_header * sysctl_hdr ; s#ctl_table * sysctl_tbl ; int sysctl_amemthresh ; int sysctl_am_droprate ; int sysctl_drop_entry ; int sysctl_drop_packet ; int sysctl_secure_tcp ; int sysctl_conntrack ; int sysctl_snat_reroute ; int sysctl_sync_ver ; int sysctl_sync_ports ; int sysctl_sync_persist_mode ; unsigned long sysctl_sync_qlen_max ; int sysctl_sync_sock_size ; int sysctl_cache_bypass ; int sysctl_expire_nodest_conn ; int sysctl_sloppy_tcp ; int sysctl_sloppy_sctp ; int sysctl_expire_quiescent_template ; int sysctl_sync_threshold [ 2 ] ; unsigned int sysctl_sync_refresh_period ; int sysctl_sync_retries ; int sysctl_nat_icmp_send ; int sysctl_pmtu_disc ; int sysctl_backup_only ; int sysctl_conn_reuse_mode ; int sysctl_schedule_icmp ; int sysctl_ignore_tunneled ; int sysctl_lblc_expiration ; s#ctl_table_header * lblc_ctl_header ; s#ctl_table * lblc_ctl_table ; int sysctl_lblcr_expiration ; s#ctl_table_header * lblcr_ctl_header ; s#ctl_table * lblcr_ctl_table ; s#list_head est_list ; t#spinlock_t est_lock ; s#timer_list est_timer ; t#spinlock_t sync_lock ; s#ipvs_master_sync_state * ms ; t#spinlock_t sync_buff_lock ; s#task_struct * * backup_threads ; int threads_mask ; volatile int sync_state ; s#mutex sync_mutex ; s#ipvs_sync_daemon_cfg mcfg ; s#ipvs_sync_daemon_cfg bcfg ; s#net * net ; unsigned int mixed_address_family_dests ; } 
s##mpls_route
s##eventfd_ctx
s##mempolicy
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s#ip_vs_app struct ip_vs_app { s#list_head a_list ; int type ; char * name ; t#__u16 protocol ; s#module * module ; s#list_head incs_list ; s#list_head p_list ; s#ip_vs_app * app ; t#__be16 port ; t#atomic_t usecnt ; s#callback_head callback_head ; int ( * pkt_out ) ( s#ip_vs_app * , s#ip_vs_conn * , s#sk_buff * , int * ) ; int ( * pkt_in ) ( s#ip_vs_app * , s#ip_vs_conn * , s#sk_buff * , int * ) ; int ( * init_conn ) ( s#ip_vs_app * , s#ip_vs_conn * ) ; int ( * done_conn ) ( s#ip_vs_app * , s#ip_vs_conn * ) ; int ( * bind_conn ) ( s#ip_vs_app * , s#ip_vs_conn * , s#ip_vs_protocol * ) ; void ( * unbind_conn ) ( s#ip_vs_app * , s#ip_vs_conn * ) ; int * timeout_table ; int * timeouts ; int timeouts_size ; int ( * conn_schedule ) ( s#sk_buff * , s#ip_vs_app * , int * , s#ip_vs_conn * * ) ; s#ip_vs_conn * ( * conn_in_get ) ( const s#sk_buff * , s#ip_vs_app * , const s#iphdr * , int ) ; s#ip_vs_conn * ( * conn_out_get ) ( const s#sk_buff * , s#ip_vs_app * , const s#iphdr * , int ) ; int ( * state_transition ) ( s#ip_vs_conn * , int , const s#sk_buff * , s#ip_vs_app * ) ; void ( * timeout_change ) ( s#ip_vs_app * , int ) ; } 
register_ip_vs_app s#ip_vs_app * register_ip_vs_app ( s#netns_ipvs * , s#ip_vs_app * ) 
unregister_ip_vs_app void unregister_ip_vs_app ( s#netns_ipvs * , s#ip_vs_app * ) 
register_ip_vs_app_inc int register_ip_vs_app_inc ( s#netns_ipvs * , s#ip_vs_app * , t#__u16 , t#__u16 ) 

/* net/netfilter/ipvs/ip_vs_conn.o */
s##proc_ns_operations
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##kmem_cache
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##bpf_prog_aux
s##xfrm_policy
s##workqueue_struct
s##xfrm_state
s##uncached_list
s##proc_dir_entry
s##dn_route
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##key_user
s##key_type
s##assoc_array_ptr
s##uevent_sock
s##prot_inuse
s##ipv4_devconf
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##mpls_route
s##udp_tunnel_info
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
s##sec_path
s##tcp_states_t
s##ip_vs_sync_buff
ip_vs_conn_in_get_proto s#ip_vs_conn * ip_vs_conn_in_get_proto ( s#netns_ipvs * , int , const s#sk_buff * , const s#ip_vs_iphdr * ) 
ip_vs_conn_out_get_proto s#ip_vs_conn * ip_vs_conn_out_get_proto ( s#netns_ipvs * , int , const s#sk_buff * , const s#ip_vs_iphdr * ) 

/* net/netfilter/ipvs/ip_vs_core.o */
s##posix_acl
s##vfsmount
s##device_private
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##sec_path
s##workqueue_struct
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##kmem_cache
s##xfrm_state
s##uncached_list
s##dn_route
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
s##prot_inuse
s##ipv4_devconf
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##tcp_states_t
s##ip_vs_sync_buff
s##mpls_route
s##eventfd_ctx
s##mempolicy
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##raw_hashinfo
s##xfrm_policy
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
register_ip_vs_scheduler int register_ip_vs_scheduler ( s#ip_vs_scheduler * ) 
unregister_ip_vs_scheduler int unregister_ip_vs_scheduler ( s#ip_vs_scheduler * ) 
ip_vs_proto_name const char * ip_vs_proto_name ( unsigned int ) 
ip_vs_conn_new s#ip_vs_conn * ip_vs_conn_new ( const s#ip_vs_conn_param * , int , const u#nf_inet_addr * , t#__be16 , unsigned int , s#ip_vs_dest * , t#__u32 ) 
ip_vs_conn_in_get s#ip_vs_conn * ip_vs_conn_in_get ( const s#ip_vs_conn_param * ) 
ip_vs_conn_out_get s#ip_vs_conn * ip_vs_conn_out_get ( const s#ip_vs_conn_param * ) 
ip_vs_tcp_conn_listen void ip_vs_tcp_conn_listen ( s#ip_vs_conn * ) 
ip_vs_conn_put void ip_vs_conn_put ( s#ip_vs_conn * ) 
ip_vs_new_conn_out s#ip_vs_conn * ip_vs_new_conn_out ( s#ip_vs_service * , s#ip_vs_dest * , s#sk_buff * , const s#ip_vs_iphdr * , t#__be16 , t#__be16 ) 

/* net/netfilter/ipvs/ip_vs_nfct.o */
s##proc_ns_operations
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##kmem_cache
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##bpf_prog_aux
s##xfrm_policy
s##workqueue_struct
s##xfrm_state
s##uncached_list
s##proc_dir_entry
s##dn_route
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##key_user
s##key_type
s##assoc_array_ptr
s##uevent_sock
s##prot_inuse
s##ipv4_devconf
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nft_af_info
s##tcp_states_t
s##ip_vs_sync_buff
s##mpls_route
s##udp_tunnel_info
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
s##sec_path
ip_vs_nfct_expect_related void ip_vs_nfct_expect_related ( s#sk_buff * , s#nf_conn * , s#ip_vs_conn * , t#u_int8_t , const t#__be16 , int ) 

/* net/netfilter/ipvs/ip_vs_pe.o */
s##posix_acl
s##vfsmount
s##device_private
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##sec_path
s##workqueue_struct
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##kmem_cache
s##xfrm_state
s##uncached_list
s##dn_route
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
s##prot_inuse
s##ipv4_devconf
s##inet_hashinfo
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##tcp_states_t
s##ip_vs_sync_buff
s##mpls_route
s##eventfd_ctx
s##mempolicy
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
register_ip_vs_pe int register_ip_vs_pe ( s#ip_vs_pe * ) 
unregister_ip_vs_pe int unregister_ip_vs_pe ( s#ip_vs_pe * ) 

/* net/netfilter/ipvs/ip_vs_proto.o */
s##tcp_states_t
s##workqueue_struct
s##ip_vs_sync_buff
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##proc_dir_entry
s##uevent_sock
s##prot_inuse
s##ipv4_devconf
s##kmem_cache
s##xfrm_state
s##uncached_list
s##dn_route
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##mpls_route
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##phy_device
s##sfp_bus
s##sec_path
s##raw_hashinfo
s##xfrm_policy
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
ip_vs_proto_get s#ip_vs_protocol * ip_vs_proto_get ( unsigned short ) 
ip_vs_proto_data_get s#ip_vs_proto_data * ip_vs_proto_data_get ( s#netns_ipvs * , unsigned short ) 

/* net/netfilter/ipvs/ip_vs_sched.o */
s##proc_ns_operations
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##kmem_cache
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##bpf_prog_aux
s##xfrm_policy
s##workqueue_struct
s##xfrm_state
s##uncached_list
s##proc_dir_entry
s##dn_route
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##key_user
s##key_type
s##assoc_array_ptr
s##uevent_sock
s##prot_inuse
s##ipv4_devconf
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##mpls_route
s##udp_tunnel_info
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
s##sec_path
s##tcp_states_t
s##ip_vs_sync_buff
ip_vs_scheduler_err void ip_vs_scheduler_err ( s#ip_vs_service * , const char * ) 

/* net/netfilter/nf_conntrack_acct.o */
s##vfsmount
s##posix_acl
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##mmu_notifier_mm
s##xol_area
s##pid_namespace
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##sec_path
s##workqueue_struct
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##kmem_cache
s##xfrm_state
s##uncached_list
s##dn_route
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##phy_device
s##sfp_bus
s##prot_inuse
s##ipv4_devconf
s##inet_hashinfo
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##netns_ipvs
s##mpls_route
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##swap_info_struct
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##mtd_info
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
seq_print_acct unsigned int seq_print_acct ( s#seq_file * , const s#nf_conn * , int ) 

/* net/netfilter/nf_conntrack_amanda.o */
s##proc_ns_operations
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##kmem_cache
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##bpf_prog_aux
s##xfrm_policy
s##workqueue_struct
s##xfrm_state
s##uncached_list
s##proc_dir_entry
s##dn_route
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##key_user
s##key_type
s##assoc_array_ptr
s##uevent_sock
s##prot_inuse
s##ipv4_devconf
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nft_af_info
s##netns_ipvs
s##mpls_route
s##udp_tunnel_info
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
s##sec_path
nf_nat_amanda_hook extern unsigned int ( * nf_nat_amanda_hook ) ( s#sk_buff * , e#ip_conntrack_info , unsigned int , unsigned int , unsigned int , s#nf_conntrack_expect * ) 

/* net/netfilter/nf_conntrack_broadcast.o */
s##proc_ns_operations
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##kmem_cache
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##bpf_prog_aux
s##xfrm_policy
s##workqueue_struct
s##xfrm_state
s##uncached_list
s##proc_dir_entry
s##dn_route
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##key_user
s##key_type
s##assoc_array_ptr
s##uevent_sock
s##prot_inuse
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##netns_ipvs
s##mpls_route
s##udp_tunnel_info
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##ip_mc_list
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
s##sec_path
nf_conntrack_broadcast_help int nf_conntrack_broadcast_help ( s#sk_buff * , unsigned int , s#nf_conn * , e#ip_conntrack_info , unsigned int ) 

/* net/netfilter/nf_conntrack_core.o */
s##proc_ns_operations
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##workqueue_struct
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##kmem_cache
s##xfrm_state
s##uncached_list
s##proc_dir_entry
s##dn_route
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##phy_device
s##sfp_bus
s##sec_path
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##key_user
s##key_type
s##assoc_array_ptr
s##uevent_sock
s##prot_inuse
s##ipv4_devconf
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nft_af_info
s##netns_ipvs
s##mpls_route
e#nf_nat_manip_type enum nf_nat_manip_type { NF_NAT_MANIP_SRC , NF_NAT_MANIP_DST } 
nfnetlink_parse_nat_setup_hook extern int ( * nfnetlink_parse_nat_setup_hook ) ( s#nf_conn * , e#nf_nat_manip_type , const s#nlattr * ) 
nf_conntrack_locks extern t#spinlock_t nf_conntrack_locks [ 1024 ] 
nf_conntrack_expect_lock extern t#spinlock_t nf_conntrack_expect_lock 
nf_conntrack_hash extern s#hlist_nulls_head * nf_conntrack_hash 
nf_conntrack_lock void nf_conntrack_lock ( t#spinlock_t * ) 
nf_conntrack_htable_size extern unsigned int nf_conntrack_htable_size 
s#nf_conntrack_l3proto struct nf_conntrack_l3proto { t#u_int16_t l3proto ; const char * name ; t#bool ( * pkt_to_tuple ) ( const s#sk_buff * , unsigned int , s#nf_conntrack_tuple * ) ; t#bool ( * invert_tuple ) ( s#nf_conntrack_tuple * , const s#nf_conntrack_tuple * ) ; void ( * print_tuple ) ( s#seq_file * , const s#nf_conntrack_tuple * ) ; int ( * get_l4proto ) ( const s#sk_buff * , unsigned int , unsigned int * , t#u_int8_t * ) ; int ( * tuple_to_nlattr ) ( s#sk_buff * , const s#nf_conntrack_tuple * ) ; int ( * net_ns_get ) ( s#net * ) ; void ( * net_ns_put ) ( s#net * ) ; int ( * nlattr_tuple_size ) ( void ) ; int ( * nlattr_to_tuple ) ( s#nlattr * [ ] , s#nf_conntrack_tuple * ) ; const s#nla_policy * nla_policy ; t#size_t nla_size ; s#module * me ; } 
s#nf_conntrack_l4proto struct nf_conntrack_l4proto { t#u_int16_t l3proto ; t#u_int8_t l4proto ; t#bool allow_clash ; t#bool ( * pkt_to_tuple ) ( const s#sk_buff * , unsigned int , s#net * , s#nf_conntrack_tuple * ) ; t#bool ( * invert_tuple ) ( s#nf_conntrack_tuple * , const s#nf_conntrack_tuple * ) ; int ( * packet ) ( s#nf_conn * , const s#sk_buff * , unsigned int , e#ip_conntrack_info , t#u_int8_t , unsigned int , unsigned int * ) ; t#bool ( * new ) ( s#nf_conn * , const s#sk_buff * , unsigned int , unsigned int * ) ; void ( * destroy ) ( s#nf_conn * ) ; int ( * error ) ( s#net * , s#nf_conn * , s#sk_buff * , unsigned int , t#u_int8_t , unsigned int ) ; t#bool ( * can_early_drop ) ( const s#nf_conn * ) ; void ( * print_tuple ) ( s#seq_file * , const s#nf_conntrack_tuple * ) ; void ( * print_conntrack ) ( s#seq_file * , s#nf_conn * ) ; unsigned int * ( * get_timeouts ) ( s#net * ) ; int ( * to_nlattr ) ( s#sk_buff * , s#nlattr * , s#nf_conn * ) ; int ( * nlattr_size ) ( void ) ; int ( * from_nlattr ) ( s#nlattr * [ ] , s#nf_conn * ) ; int ( * tuple_to_nlattr ) ( s#sk_buff * , const s#nf_conntrack_tuple * ) ; int ( * nlattr_tuple_size ) ( void ) ; int ( * nlattr_to_tuple ) ( s#nlattr * [ ] , s#nf_conntrack_tuple * ) ; const s#nla_policy * nla_policy ; t#size_t nla_size ; struct { t#size_t obj_size ; int ( * nlattr_to_obj ) ( s#nlattr * [ ] , s#net * , void * ) ; int ( * obj_to_nlattr ) ( s#sk_buff * , const void * ) ; unsigned int nlattr_max ; const s#nla_policy * nla_policy ; } ctnl_timeout ; unsigned int * net_id ; int ( * init_net ) ( s#net * , t#u_int16_t ) ; s#nf_proto_net * ( * get_net_proto ) ( s#net * ) ; const char * name ; s#module * me ; } 
nf_ct_get_tuple t#bool nf_ct_get_tuple ( const s#sk_buff * , unsigned int , unsigned int , t#u_int16_t , t#u_int8_t , s#net * , s#nf_conntrack_tuple * , const s#nf_conntrack_l3proto * , const s#nf_conntrack_l4proto * ) 
nf_ct_get_tuplepr t#bool nf_ct_get_tuplepr ( const s#sk_buff * , unsigned int , t#u_int16_t , s#net * , s#nf_conntrack_tuple * ) 
nf_ct_invert_tuple t#bool nf_ct_invert_tuple ( s#nf_conntrack_tuple * , const s#nf_conntrack_tuple * , const s#nf_conntrack_l3proto * , const s#nf_conntrack_l4proto * ) 
nf_ct_tmpl_alloc s#nf_conn * nf_ct_tmpl_alloc ( s#net * , const s#nf_conntrack_zone * , t#gfp_t ) 
nf_ct_tmpl_free void nf_ct_tmpl_free ( s#nf_conn * ) 
nf_ct_delete t#bool nf_ct_delete ( s#nf_conn * , t#u32 , int ) 
nf_conntrack_find_get s#nf_conntrack_tuple_hash * nf_conntrack_find_get ( s#net * , const s#nf_conntrack_zone * , const s#nf_conntrack_tuple * ) 
nf_conntrack_hash_check_insert int nf_conntrack_hash_check_insert ( s#nf_conn * ) 
__nf_conntrack_confirm int __nf_conntrack_confirm ( s#sk_buff * ) 
nf_conntrack_tuple_taken int nf_conntrack_tuple_taken ( const s#nf_conntrack_tuple * , const s#nf_conn * ) 
nf_conntrack_alloc s#nf_conn * nf_conntrack_alloc ( s#net * , const s#nf_conntrack_zone * , const s#nf_conntrack_tuple * , const s#nf_conntrack_tuple * , t#gfp_t ) 
nf_conntrack_free void nf_conntrack_free ( s#nf_conn * ) 
nf_conntrack_in unsigned int nf_conntrack_in ( s#net * , t#u_int8_t , unsigned int , s#sk_buff * ) 
nf_ct_invert_tuplepr t#bool nf_ct_invert_tuplepr ( s#nf_conntrack_tuple * , const s#nf_conntrack_tuple * ) 
nf_conntrack_alter_reply void nf_conntrack_alter_reply ( s#nf_conn * , const s#nf_conntrack_tuple * ) 
__nf_ct_refresh_acct void __nf_ct_refresh_acct ( s#nf_conn * , e#ip_conntrack_info , const s#sk_buff * , unsigned long , int ) 
nf_ct_kill_acct t#bool nf_ct_kill_acct ( s#nf_conn * , e#ip_conntrack_info , const s#sk_buff * ) 
nf_ct_port_tuple_to_nlattr int nf_ct_port_tuple_to_nlattr ( s#sk_buff * , const s#nf_conntrack_tuple * ) 
nf_ct_port_nla_policy extern const s#nla_policy nf_ct_port_nla_policy [ ] 
nf_ct_port_nlattr_to_tuple int nf_ct_port_nlattr_to_tuple ( s#nlattr * [ ] , s#nf_conntrack_tuple * ) 
nf_ct_port_nlattr_tuple_size int nf_ct_port_nlattr_tuple_size ( void ) 
nf_ct_iterate_cleanup void nf_ct_iterate_cleanup ( s#net * , int ( * ) ( s#nf_conn * , void * ) , void * , t#u32 , int ) 
nf_ct_free_hashtable void nf_ct_free_hashtable ( void * , unsigned int ) 
nf_ct_alloc_hashtable void * nf_ct_alloc_hashtable ( unsigned int * , int ) 
nf_conntrack_set_hashsize int nf_conntrack_set_hashsize ( const char * , s#kernel_param * ) 

/* net/netfilter/nf_conntrack_ecache.o */
s##proc_ns_operations
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##workqueue_struct
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##kmem_cache
s##xfrm_state
s##uncached_list
s##proc_dir_entry
s##dn_route
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##phy_device
s##sfp_bus
s##sec_path
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##key_user
s##key_type
s##assoc_array_ptr
s##uevent_sock
s##prot_inuse
s##ipv4_devconf
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_conntrack_helper
s##nft_af_info
s##netns_ipvs
s##mpls_route
nf_conntrack_eventmask_report int nf_conntrack_eventmask_report ( unsigned int , s#nf_conn * , t#u32 , int ) 
nf_ct_deliver_cached_events void nf_ct_deliver_cached_events ( s#nf_conn * ) 
nf_conntrack_register_notifier int nf_conntrack_register_notifier ( s#net * , s#nf_ct_event_notifier * ) 
nf_conntrack_unregister_notifier void nf_conntrack_unregister_notifier ( s#net * , s#nf_ct_event_notifier * ) 
nf_ct_expect_register_notifier int nf_ct_expect_register_notifier ( s#net * , s#nf_exp_event_notifier * ) 
nf_ct_expect_unregister_notifier void nf_ct_expect_unregister_notifier ( s#net * , s#nf_exp_event_notifier * ) 

/* net/netfilter/nf_conntrack_expect.o */
nf_ct_expect_hsize extern unsigned int nf_ct_expect_hsize 
nf_ct_expect_hash extern s#hlist_head * nf_ct_expect_hash 
s##proc_ns_operations
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##workqueue_struct
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##kmem_cache
s##xfrm_state
s##uncached_list
s##proc_dir_entry
s##dn_route
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##phy_device
s##sfp_bus
s##sec_path
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##key_user
s##key_type
s##assoc_array_ptr
s##uevent_sock
s##prot_inuse
s##ipv4_devconf
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nft_af_info
s##netns_ipvs
s##mpls_route
nf_ct_unlink_expect_report void nf_ct_unlink_expect_report ( s#nf_conntrack_expect * , t#u32 , int ) 
nf_ct_remove_expect t#bool nf_ct_remove_expect ( s#nf_conntrack_expect * ) 
__nf_ct_expect_find s#nf_conntrack_expect * __nf_ct_expect_find ( s#net * , const s#nf_conntrack_zone * , const s#nf_conntrack_tuple * ) 
nf_ct_expect_find_get s#nf_conntrack_expect * nf_ct_expect_find_get ( s#net * , const s#nf_conntrack_zone * , const s#nf_conntrack_tuple * ) 
nf_ct_remove_expectations void nf_ct_remove_expectations ( s#nf_conn * ) 
nf_ct_unexpect_related void nf_ct_unexpect_related ( s#nf_conntrack_expect * ) 
nf_ct_expect_alloc s#nf_conntrack_expect * nf_ct_expect_alloc ( s#nf_conn * ) 
nf_ct_expect_init void nf_ct_expect_init ( s#nf_conntrack_expect * , unsigned int , t#u_int8_t , const u#nf_inet_addr * , const u#nf_inet_addr * , t#u_int8_t , const t#__be16 * , const t#__be16 * ) 
nf_ct_expect_put void nf_ct_expect_put ( s#nf_conntrack_expect * ) 
nf_ct_expect_related_report int nf_ct_expect_related_report ( s#nf_conntrack_expect * , t#u32 , int ) 

/* net/netfilter/nf_conntrack_extend.o */
s##proc_ns_operations
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##workqueue_struct
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##kmem_cache
s##xfrm_state
s##uncached_list
s##proc_dir_entry
s##dn_route
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##phy_device
s##sfp_bus
s##sec_path
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##key_user
s##key_type
s##assoc_array_ptr
s##uevent_sock
s##prot_inuse
s##ipv4_devconf
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##netns_ipvs
s##mpls_route
nf_ct_ext_destroy void nf_ct_ext_destroy ( s#nf_conn * ) 
e#nf_ct_ext_id enum nf_ct_ext_id { NF_CT_EXT_HELPER , NF_CT_EXT_NAT , NF_CT_EXT_SEQADJ , NF_CT_EXT_ACCT , NF_CT_EXT_ECACHE , NF_CT_EXT_TSTAMP , NF_CT_EXT_TIMEOUT , NF_CT_EXT_LABELS , NF_CT_EXT_SYNPROXY , NF_CT_EXT_NUM , } 
nf_ct_ext_add void * nf_ct_ext_add ( s#nf_conn * , e#nf_ct_ext_id , t#gfp_t ) 
s#nf_ct_ext_type struct nf_ct_ext_type { void ( * destroy ) ( s#nf_conn * ) ; e#nf_ct_ext_id id ; t#u8 len ; t#u8 align ; } 
nf_ct_extend_register int nf_ct_extend_register ( const s#nf_ct_ext_type * ) 
nf_ct_extend_unregister void nf_ct_extend_unregister ( const s#nf_ct_ext_type * ) 

/* net/netfilter/nf_conntrack_ftp.o */
s##proc_ns_operations
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##kmem_cache
s##udp_table
s##raw_hashinfo
s##bpf_prog_aux
s##xfrm_policy
s##workqueue_struct
s##xfrm_state
s##uncached_list
s##proc_dir_entry
s##dn_route
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##key_user
s##key_type
s##assoc_array_ptr
s##uevent_sock
s##prot_inuse
s##ipv4_devconf
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nft_af_info
s##netns_ipvs
s##mpls_route
s##udp_tunnel_info
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
s##sec_path
e#nf_ct_ftp_type enum nf_ct_ftp_type { NF_CT_FTP_PORT , NF_CT_FTP_PASV , NF_CT_FTP_EPRT , NF_CT_FTP_EPSV , } 
nf_nat_ftp_hook extern unsigned int ( * nf_nat_ftp_hook ) ( s#sk_buff * , e#ip_conntrack_info , e#nf_ct_ftp_type , unsigned int , unsigned int , unsigned int , s#nf_conntrack_expect * ) 

/* net/netfilter/nf_conntrack_h323_main.o */
s##proc_ns_operations
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##workqueue_struct
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##kmem_cache
s##xfrm_state
s##uncached_list
s##proc_dir_entry
s##dn_route
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##phy_device
s##sfp_bus
s##sec_path
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##key_user
s##key_type
s##assoc_array_ptr
s##uevent_sock
s##prot_inuse
s##ipv4_devconf
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nft_af_info
s##netns_ipvs
s##mpls_route
s#TransportAddress_ipAddress struct TransportAddress_ipAddress { int options ; unsigned int ip ; } 
t#TransportAddress_ipAddress typedef s#TransportAddress_ipAddress TransportAddress_ipAddress 
s#TransportAddress_ip6Address struct TransportAddress_ip6Address { int options ; unsigned int ip ; } 
t#TransportAddress_ip6Address typedef s#TransportAddress_ip6Address TransportAddress_ip6Address 
s#TransportAddress struct TransportAddress { enum { eTransportAddress_ipAddress , eTransportAddress_ipSourceRoute , eTransportAddress_ipxAddress , eTransportAddress_ip6Address , eTransportAddress_netBios , eTransportAddress_nsap , eTransportAddress_nonStandardAddress , } choice ; union { t#TransportAddress_ipAddress ipAddress ; t#TransportAddress_ip6Address ip6Address ; } ; } 
t#TransportAddress typedef s#TransportAddress TransportAddress 
get_h225_addr int get_h225_addr ( s#nf_conn * , unsigned char * , t#TransportAddress * , u#nf_inet_addr * , t#__be16 * ) 
s#UnicastAddress_iPAddress struct UnicastAddress_iPAddress { int options ; unsigned int network ; } 
t#UnicastAddress_iPAddress typedef s#UnicastAddress_iPAddress UnicastAddress_iPAddress 
s#UnicastAddress_iP6Address struct UnicastAddress_iP6Address { int options ; unsigned int network ; } 
t#UnicastAddress_iP6Address typedef s#UnicastAddress_iP6Address UnicastAddress_iP6Address 
s#UnicastAddress struct UnicastAddress { enum { eUnicastAddress_iPAddress , eUnicastAddress_iPXAddress , eUnicastAddress_iP6Address , eUnicastAddress_netBios , eUnicastAddress_iPSourceRouteAddress , eUnicastAddress_nsap , eUnicastAddress_nonStandardAddress , } choice ; union { t#UnicastAddress_iPAddress iPAddress ; t#UnicastAddress_iP6Address iP6Address ; } ; } 
t#UnicastAddress typedef s#UnicastAddress UnicastAddress 
s#H245_TransportAddress struct H245_TransportAddress { enum { eH245_TransportAddress_unicastAddress , eH245_TransportAddress_multicastAddress , } choice ; union { t#UnicastAddress unicastAddress ; } ; } 
t#H245_TransportAddress typedef s#H245_TransportAddress H245_TransportAddress 
set_h245_addr_hook extern int ( * set_h245_addr_hook ) ( s#sk_buff * , unsigned int , unsigned char * * , int , t#H245_TransportAddress * , u#nf_inet_addr * , t#__be16 ) 
set_h225_addr_hook extern int ( * set_h225_addr_hook ) ( s#sk_buff * , unsigned int , unsigned char * * , int , t#TransportAddress * , u#nf_inet_addr * , t#__be16 ) 
set_sig_addr_hook extern int ( * set_sig_addr_hook ) ( s#sk_buff * , s#nf_conn * , e#ip_conntrack_info , unsigned int , unsigned char * * , t#TransportAddress * , int ) 
set_ras_addr_hook extern int ( * set_ras_addr_hook ) ( s#sk_buff * , s#nf_conn * , e#ip_conntrack_info , unsigned int , unsigned char * * , t#TransportAddress * , int ) 
nat_rtp_rtcp_hook extern int ( * nat_rtp_rtcp_hook ) ( s#sk_buff * , s#nf_conn * , e#ip_conntrack_info , unsigned int , unsigned char * * , int , t#H245_TransportAddress * , t#__be16 , t#__be16 , s#nf_conntrack_expect * , s#nf_conntrack_expect * ) 
nat_t120_hook extern int ( * nat_t120_hook ) ( s#sk_buff * , s#nf_conn * , e#ip_conntrack_info , unsigned int , unsigned char * * , int , t#H245_TransportAddress * , t#__be16 , s#nf_conntrack_expect * ) 
nat_h245_hook extern int ( * nat_h245_hook ) ( s#sk_buff * , s#nf_conn * , e#ip_conntrack_info , unsigned int , unsigned char * * , int , t#TransportAddress * , t#__be16 , s#nf_conntrack_expect * ) 
nat_callforwarding_hook extern int ( * nat_callforwarding_hook ) ( s#sk_buff * , s#nf_conn * , e#ip_conntrack_info , unsigned int , unsigned char * * , int , t#TransportAddress * , t#__be16 , s#nf_conntrack_expect * ) 
nat_q931_hook extern int ( * nat_q931_hook ) ( s#sk_buff * , s#nf_conn * , e#ip_conntrack_info , unsigned int , unsigned char * * , t#TransportAddress * , int , t#__be16 , s#nf_conntrack_expect * ) 

/* net/netfilter/nf_conntrack_helper.o */
nf_ct_helper_hash extern s#hlist_head * nf_ct_helper_hash 
nf_ct_helper_hsize extern unsigned int nf_ct_helper_hsize 
s##posix_acl
s##vfsmount
s##device_private
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##sec_path
s##workqueue_struct
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##kmem_cache
s##xfrm_state
s##uncached_list
s##dn_route
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
s##prot_inuse
s##ipv4_devconf
s##inet_hashinfo
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##ebt_table
s##nft_af_info
s##netns_ipvs
s##mpls_route
s##eventfd_ctx
s##mempolicy
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
__nf_conntrack_helper_find s#nf_conntrack_helper * __nf_conntrack_helper_find ( const char * , t#u16 , t#u8 ) 
nf_conntrack_helper_try_module_get s#nf_conntrack_helper * nf_conntrack_helper_try_module_get ( const char * , t#u16 , t#u8 ) 
nf_conntrack_helper_put void nf_conntrack_helper_put ( s#nf_conntrack_helper * ) 
s#nf_conn_help struct nf_conn_help { s#nf_conntrack_helper * helper ; s#hlist_head expectations ; t#u8 expecting [ 4 ] ; char data [ 32 ] __attribute__ ( ( aligned ( 8 ) ) ) ; } 
nf_ct_helper_ext_add s#nf_conn_help * nf_ct_helper_ext_add ( s#nf_conn * , s#nf_conntrack_helper * , t#gfp_t ) 
__nf_ct_try_assign_helper int __nf_ct_try_assign_helper ( s#nf_conn * , s#nf_conn * , t#gfp_t ) 
s#nf_ct_helper_expectfn struct nf_ct_helper_expectfn { s#list_head head ; const char * name ; void ( * expectfn ) ( s#nf_conn * , s#nf_conntrack_expect * ) ; } 
nf_ct_helper_expectfn_register void nf_ct_helper_expectfn_register ( s#nf_ct_helper_expectfn * ) 
nf_ct_helper_expectfn_unregister void nf_ct_helper_expectfn_unregister ( s#nf_ct_helper_expectfn * ) 
nf_ct_helper_expectfn_find_by_name s#nf_ct_helper_expectfn * nf_ct_helper_expectfn_find_by_name ( const char * ) 
nf_ct_helper_expectfn_find_by_symbol s#nf_ct_helper_expectfn * nf_ct_helper_expectfn_find_by_symbol ( const void * ) 
nf_ct_helper_log __attribute__ ( ( format ( printf , 3 , 4 ) ) ) void nf_ct_helper_log ( s#sk_buff * , const s#nf_conn * , const char * , ... ) 
nf_conntrack_helper_register int nf_conntrack_helper_register ( s#nf_conntrack_helper * ) 
nf_conntrack_helper_unregister void nf_conntrack_helper_unregister ( s#nf_conntrack_helper * ) 
nf_ct_helper_init void nf_ct_helper_init ( s#nf_conntrack_helper * , t#u16 , t#u16 , const char * , t#u16 , t#u16 , t#u32 , const s#nf_conntrack_expect_policy * , t#u32 , int ( * ) ( s#sk_buff * , unsigned int , s#nf_conn * , e#ip_conntrack_info ) , int ( * ) ( s#nlattr * , s#nf_conn * ) , s#module * ) 
nf_conntrack_helpers_register int nf_conntrack_helpers_register ( s#nf_conntrack_helper * , unsigned int ) 
nf_conntrack_helpers_unregister void nf_conntrack_helpers_unregister ( s#nf_conntrack_helper * , unsigned int ) 

/* net/netfilter/nf_conntrack_irc.o */
s##proc_ns_operations
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##kmem_cache
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##bpf_prog_aux
s##xfrm_policy
s##workqueue_struct
s##xfrm_state
s##uncached_list
s##proc_dir_entry
s##dn_route
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##key_user
s##key_type
s##assoc_array_ptr
s##uevent_sock
s##prot_inuse
s##ipv4_devconf
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##netns_ipvs
s##mpls_route
s##udp_tunnel_info
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
s##sec_path
nf_nat_irc_hook extern unsigned int ( * nf_nat_irc_hook ) ( s#sk_buff * , e#ip_conntrack_info , unsigned int , unsigned int , unsigned int , s#nf_conntrack_expect * ) 

/* net/netfilter/nf_conntrack_l3proto_generic.o */
s##proc_ns_operations
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##kmem_cache
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##bpf_prog_aux
s##xfrm_policy
s##workqueue_struct
s##xfrm_state
s##uncached_list
s##proc_dir_entry
s##dn_route
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##key_user
s##key_type
s##assoc_array_ptr
s##uevent_sock
s##prot_inuse
s##ipv4_devconf
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_conntrack_helper
s##nft_af_info
s##netns_ipvs
s##mpls_route
s##udp_tunnel_info
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
s##sec_path
nf_conntrack_l3proto_generic extern s#nf_conntrack_l3proto nf_conntrack_l3proto_generic 

/* net/netfilter/nf_conntrack_labels.o */
s##proc_ns_operations
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##workqueue_struct
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##kmem_cache
s##xfrm_state
s##uncached_list
s##proc_dir_entry
s##dn_route
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##phy_device
s##sfp_bus
s##sec_path
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##key_user
s##key_type
s##assoc_array_ptr
s##uevent_sock
s##prot_inuse
s##ipv4_devconf
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_conntrack_helper
s##nft_af_info
s##netns_ipvs
s##mpls_route
nf_connlabels_replace int nf_connlabels_replace ( s#nf_conn * , const t#u32 * , const t#u32 * , unsigned int ) 
nf_connlabels_get int nf_connlabels_get ( s#net * , unsigned int ) 
nf_connlabels_put void nf_connlabels_put ( s#net * ) 

/* net/netfilter/nf_conntrack_pptp.o */
s##proc_ns_operations
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##kmem_cache
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##bpf_prog_aux
s##xfrm_policy
s##workqueue_struct
s##xfrm_state
s##uncached_list
s##proc_dir_entry
s##dn_route
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##key_user
s##key_type
s##assoc_array_ptr
s##uevent_sock
s##prot_inuse
s##ipv4_devconf
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nft_af_info
s##netns_ipvs
s##mpls_route
s##udp_tunnel_info
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
s##sec_path
s#PptpControlHeader struct PptpControlHeader { t#__be16 messageType ; t#__u16 reserved ; } 
s#PptpStartSessionRequest struct PptpStartSessionRequest { t#__be16 protocolVersion ; t#__u16 reserved1 ; t#__be32 framingCapability ; t#__be32 bearerCapability ; t#__be16 maxChannels ; t#__be16 firmwareRevision ; t#__u8 hostName [ 64 ] ; t#__u8 vendorString [ 64 ] ; } 
s#PptpStartSessionReply struct PptpStartSessionReply { t#__be16 protocolVersion ; t#__u8 resultCode ; t#__u8 generalErrorCode ; t#__be32 framingCapability ; t#__be32 bearerCapability ; t#__be16 maxChannels ; t#__be16 firmwareRevision ; t#__u8 hostName [ 64 ] ; t#__u8 vendorString [ 64 ] ; } 
s#PptpStopSessionRequest struct PptpStopSessionRequest { t#__u8 reason ; t#__u8 reserved1 ; t#__u16 reserved2 ; } 
s#PptpStopSessionReply struct PptpStopSessionReply { t#__u8 resultCode ; t#__u8 generalErrorCode ; t#__u16 reserved1 ; } 
s#PptpOutCallRequest struct PptpOutCallRequest { t#__be16 callID ; t#__be16 callSerialNumber ; t#__be32 minBPS ; t#__be32 maxBPS ; t#__be32 bearerType ; t#__be32 framingType ; t#__be16 packetWindow ; t#__be16 packetProcDelay ; t#__be16 phoneNumberLength ; t#__u16 reserved1 ; t#__u8 phoneNumber [ 64 ] ; t#__u8 subAddress [ 64 ] ; } 
s#PptpOutCallReply struct PptpOutCallReply { t#__be16 callID ; t#__be16 peersCallID ; t#__u8 resultCode ; t#__u8 generalErrorCode ; t#__be16 causeCode ; t#__be32 connectSpeed ; t#__be16 packetWindow ; t#__be16 packetProcDelay ; t#__be32 physChannelID ; } 
s#PptpInCallRequest struct PptpInCallRequest { t#__be16 callID ; t#__be16 callSerialNumber ; t#__be32 callBearerType ; t#__be32 physChannelID ; t#__be16 dialedNumberLength ; t#__be16 dialingNumberLength ; t#__u8 dialedNumber [ 64 ] ; t#__u8 dialingNumber [ 64 ] ; t#__u8 subAddress [ 64 ] ; } 
s#PptpInCallReply struct PptpInCallReply { t#__be16 callID ; t#__be16 peersCallID ; t#__u8 resultCode ; t#__u8 generalErrorCode ; t#__be16 packetWindow ; t#__be16 packetProcDelay ; t#__u16 reserved ; } 
s#PptpInCallConnected struct PptpInCallConnected { t#__be16 peersCallID ; t#__u16 reserved ; t#__be32 connectSpeed ; t#__be16 packetWindow ; t#__be16 packetProcDelay ; t#__be32 callFramingType ; } 
s#PptpClearCallRequest struct PptpClearCallRequest { t#__be16 callID ; t#__u16 reserved ; } 
s#PptpCallDisconnectNotify struct PptpCallDisconnectNotify { t#__be16 callID ; t#__u8 resultCode ; t#__u8 generalErrorCode ; t#__be16 causeCode ; t#__u16 reserved ; t#__u8 callStatistics [ 128 ] ; } 
s#PptpWanErrorNotify struct PptpWanErrorNotify { t#__be16 peersCallID ; t#__u16 reserved ; t#__be32 crcErrors ; t#__be32 framingErrors ; t#__be32 hardwareOverRuns ; t#__be32 bufferOverRuns ; t#__be32 timeoutErrors ; t#__be32 alignmentErrors ; } 
s#PptpSetLinkInfo struct PptpSetLinkInfo { t#__be16 peersCallID ; t#__u16 reserved ; t#__be32 sendAccm ; t#__be32 recvAccm ; } 
u#pptp_ctrl_union union pptp_ctrl_union { s#PptpStartSessionRequest sreq ; s#PptpStartSessionReply srep ; s#PptpStopSessionRequest streq ; s#PptpStopSessionReply strep ; s#PptpOutCallRequest ocreq ; s#PptpOutCallReply ocack ; s#PptpInCallRequest icreq ; s#PptpInCallReply icack ; s#PptpInCallConnected iccon ; s#PptpClearCallRequest clrreq ; s#PptpCallDisconnectNotify disc ; s#PptpWanErrorNotify wanerr ; s#PptpSetLinkInfo setlink ; } 
nf_nat_pptp_hook_outbound extern int ( * nf_nat_pptp_hook_outbound ) ( s#sk_buff * , s#nf_conn * , e#ip_conntrack_info , unsigned int , s#PptpControlHeader * , u#pptp_ctrl_union * ) 
nf_nat_pptp_hook_inbound extern int ( * nf_nat_pptp_hook_inbound ) ( s#sk_buff * , s#nf_conn * , e#ip_conntrack_info , unsigned int , s#PptpControlHeader * , u#pptp_ctrl_union * ) 
nf_nat_pptp_hook_exp_gre extern void ( * nf_nat_pptp_hook_exp_gre ) ( s#nf_conntrack_expect * , s#nf_conntrack_expect * ) 
nf_nat_pptp_hook_expectfn extern void ( * nf_nat_pptp_hook_expectfn ) ( s#nf_conn * , s#nf_conntrack_expect * ) 
pptp_msg_name extern const char * const pptp_msg_name [ ] 

/* net/netfilter/nf_conntrack_proto.o */
s##proc_ns_operations
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##kmem_cache
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##bpf_prog_aux
s##xfrm_policy
s##workqueue_struct
s##xfrm_state
s##uncached_list
s##proc_dir_entry
s##dn_route
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##key_user
s##key_type
s##assoc_array_ptr
s##uevent_sock
s##prot_inuse
s##ipv4_devconf
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_conntrack_helper
s##nft_af_info
s##netns_ipvs
s##mpls_route
s##udp_tunnel_info
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
s##sec_path
nf_ct_l3protos extern s#nf_conntrack_l3proto * nf_ct_l3protos [ 45 ] 
__nf_ct_l4proto_find s#nf_conntrack_l4proto * __nf_ct_l4proto_find ( t#u_int16_t , t#u_int8_t ) 
nf_ct_l3proto_find_get s#nf_conntrack_l3proto * nf_ct_l3proto_find_get ( t#u_int16_t ) 
nf_ct_l3proto_try_module_get int nf_ct_l3proto_try_module_get ( unsigned short ) 
nf_ct_l3proto_module_put void nf_ct_l3proto_module_put ( unsigned short ) 
nf_ct_netns_get int nf_ct_netns_get ( s#net * , t#u8 ) 
nf_ct_netns_put void nf_ct_netns_put ( s#net * , t#u8 ) 
nf_ct_l4proto_find_get s#nf_conntrack_l4proto * nf_ct_l4proto_find_get ( t#u_int16_t , t#u_int8_t ) 
nf_ct_l4proto_put void nf_ct_l4proto_put ( s#nf_conntrack_l4proto * ) 
nf_ct_l3proto_register int nf_ct_l3proto_register ( s#nf_conntrack_l3proto * ) 
nf_ct_l3proto_pernet_register int nf_ct_l3proto_pernet_register ( s#net * , s#nf_conntrack_l3proto * ) 
nf_ct_l3proto_unregister void nf_ct_l3proto_unregister ( s#nf_conntrack_l3proto * ) 
nf_ct_l3proto_pernet_unregister void nf_ct_l3proto_pernet_unregister ( s#net * , s#nf_conntrack_l3proto * ) 
nf_ct_l4proto_register_one int nf_ct_l4proto_register_one ( s#nf_conntrack_l4proto * ) 
nf_ct_l4proto_pernet_register_one int nf_ct_l4proto_pernet_register_one ( s#net * , s#nf_conntrack_l4proto * ) 
nf_ct_l4proto_unregister_one void nf_ct_l4proto_unregister_one ( s#nf_conntrack_l4proto * ) 
nf_ct_l4proto_pernet_unregister_one void nf_ct_l4proto_pernet_unregister_one ( s#net * , s#nf_conntrack_l4proto * ) 
nf_ct_l4proto_register int nf_ct_l4proto_register ( s#nf_conntrack_l4proto * [ ] , unsigned int ) 
nf_ct_l4proto_pernet_register int nf_ct_l4proto_pernet_register ( s#net * , s#nf_conntrack_l4proto * [ ] , unsigned int ) 
nf_ct_l4proto_unregister void nf_ct_l4proto_unregister ( s#nf_conntrack_l4proto * [ ] , unsigned int ) 
nf_ct_l4proto_pernet_unregister void nf_ct_l4proto_pernet_unregister ( s#net * , s#nf_conntrack_l4proto * [ ] , unsigned int ) 

/* net/netfilter/nf_conntrack_proto_dccp.o */
s##proc_ns_operations
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##kmem_cache
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##bpf_prog_aux
s##xfrm_policy
s##workqueue_struct
s##xfrm_state
s##uncached_list
s##proc_dir_entry
s##dn_route
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##key_user
s##key_type
s##assoc_array_ptr
s##uevent_sock
s##prot_inuse
s##ipv4_devconf
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##ebt_table
s##nf_conntrack_helper
s##nft_af_info
s##netns_ipvs
s##mpls_route
s##udp_tunnel_info
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
s##sec_path
nf_conntrack_l4proto_dccp4 extern s#nf_conntrack_l4proto nf_conntrack_l4proto_dccp4 
nf_conntrack_l4proto_dccp6 extern s#nf_conntrack_l4proto nf_conntrack_l4proto_dccp6 

/* net/netfilter/nf_conntrack_proto_gre.o */
s##proc_ns_operations
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##workqueue_struct
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##kmem_cache
s##xfrm_state
s##uncached_list
s##proc_dir_entry
s##dn_route
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##phy_device
s##sfp_bus
s##sec_path
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##key_user
s##key_type
s##assoc_array_ptr
s##uevent_sock
s##prot_inuse
s##ipv4_devconf
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nft_af_info
s##netns_ipvs
s##mpls_route
nf_ct_gre_keymap_add int nf_ct_gre_keymap_add ( s#nf_conn * , e#ip_conntrack_dir , s#nf_conntrack_tuple * ) 
nf_ct_gre_keymap_destroy void nf_ct_gre_keymap_destroy ( s#nf_conn * ) 

/* net/netfilter/nf_conntrack_proto_sctp.o */
s##proc_ns_operations
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##kmem_cache
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##bpf_prog_aux
s##xfrm_policy
s##workqueue_struct
s##xfrm_state
s##uncached_list
s##proc_dir_entry
s##dn_route
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##key_user
s##key_type
s##assoc_array_ptr
s##uevent_sock
s##prot_inuse
s##ipv4_devconf
s##seg6_pernet_data
E#__SCTP_MIB_MAX ( 0 ) + 34 
s#sctp_mib struct sctp_mib { unsigned long mibs [ E#__SCTP_MIB_MAX ] ; } 
s##nf_queue_handler
s##ebt_table
s##nf_conntrack_helper
s##nft_af_info
s##netns_ipvs
s##mpls_route
s##udp_tunnel_info
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
s##sec_path
nf_conntrack_l4proto_sctp4 extern s#nf_conntrack_l4proto nf_conntrack_l4proto_sctp4 
nf_conntrack_l4proto_sctp6 extern s#nf_conntrack_l4proto nf_conntrack_l4proto_sctp6 

/* net/netfilter/nf_conntrack_proto_tcp.o */
s##proc_ns_operations
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##kmem_cache
s##udp_table
s##raw_hashinfo
s##bpf_prog_aux
s##xfrm_policy
s##workqueue_struct
s##xfrm_state
s##uncached_list
s##proc_dir_entry
s##dn_route
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##key_user
s##key_type
s##assoc_array_ptr
s##uevent_sock
s##prot_inuse
s##ipv4_devconf
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##ebt_table
s##nf_conntrack_helper
s##nft_af_info
s##netns_ipvs
s##mpls_route
s##udp_tunnel_info
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
s##sec_path
nf_conntrack_l4proto_tcp4 extern s#nf_conntrack_l4proto nf_conntrack_l4proto_tcp4 
nf_conntrack_l4proto_tcp6 extern s#nf_conntrack_l4proto nf_conntrack_l4proto_tcp6 

/* net/netfilter/nf_conntrack_proto_udp.o */
s##proc_ns_operations
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##kmem_cache
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##bpf_prog_aux
s##xfrm_policy
s##workqueue_struct
s##xfrm_state
s##uncached_list
s##proc_dir_entry
s##dn_route
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##key_user
s##key_type
s##assoc_array_ptr
s##uevent_sock
s##prot_inuse
s##ipv4_devconf
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##ebt_table
s##nf_conntrack_helper
s##nft_af_info
s##netns_ipvs
s##mpls_route
s##udp_tunnel_info
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
s##sec_path
nf_conntrack_l4proto_udp4 extern s#nf_conntrack_l4proto nf_conntrack_l4proto_udp4 
nf_conntrack_l4proto_udplite4 extern s#nf_conntrack_l4proto nf_conntrack_l4proto_udplite4 
nf_conntrack_l4proto_udp6 extern s#nf_conntrack_l4proto nf_conntrack_l4proto_udp6 
nf_conntrack_l4proto_udplite6 extern s#nf_conntrack_l4proto nf_conntrack_l4proto_udplite6 

/* net/netfilter/nf_conntrack_seqadj.o */
s##proc_ns_operations
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##workqueue_struct
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##kmem_cache
s##xfrm_state
s##uncached_list
s##proc_dir_entry
s##dn_route
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##phy_device
s##sfp_bus
s##sec_path
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##key_user
s##key_type
s##assoc_array_ptr
s##uevent_sock
s##prot_inuse
s##ipv4_devconf
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##netns_ipvs
s##mpls_route
nf_ct_seqadj_init int nf_ct_seqadj_init ( s#nf_conn * , e#ip_conntrack_info , t#s32 ) 
nf_ct_seqadj_set int nf_ct_seqadj_set ( s#nf_conn * , e#ip_conntrack_info , t#__be32 , t#s32 ) 
nf_ct_tcp_seqadj_set void nf_ct_tcp_seqadj_set ( s#sk_buff * , s#nf_conn * , e#ip_conntrack_info , t#s32 ) 
nf_ct_seq_adjust int nf_ct_seq_adjust ( s#sk_buff * , s#nf_conn * , e#ip_conntrack_info , unsigned int ) 
nf_ct_seq_offset t#s32 nf_ct_seq_offset ( const s#nf_conn * , e#ip_conntrack_dir , t#u32 ) 

/* net/netfilter/nf_conntrack_sip.o */
s##proc_ns_operations
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##kmem_cache
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##bpf_prog_aux
s##xfrm_policy
s##workqueue_struct
s##xfrm_state
s##uncached_list
s##proc_dir_entry
s##dn_route
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##key_user
s##key_type
s##assoc_array_ptr
s##uevent_sock
s##prot_inuse
s##ipv4_devconf
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nft_af_info
s##netns_ipvs
s##mpls_route
s##udp_tunnel_info
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
s##sec_path
e#sdp_header_types enum sdp_header_types { SDP_HDR_UNSPEC , SDP_HDR_VERSION , SDP_HDR_OWNER , SDP_HDR_CONNECTION , SDP_HDR_MEDIA , } 
s#nf_nat_sip_hooks struct nf_nat_sip_hooks { unsigned int ( * msg ) ( s#sk_buff * , unsigned int , unsigned int , const char * * , unsigned int * ) ; void ( * seq_adjust ) ( s#sk_buff * , unsigned int , t#s16 ) ; unsigned int ( * expect ) ( s#sk_buff * , unsigned int , unsigned int , const char * * , unsigned int * , s#nf_conntrack_expect * , unsigned int , unsigned int ) ; unsigned int ( * sdp_addr ) ( s#sk_buff * , unsigned int , unsigned int , const char * * , unsigned int * , unsigned int , e#sdp_header_types , e#sdp_header_types , const u#nf_inet_addr * ) ; unsigned int ( * sdp_port ) ( s#sk_buff * , unsigned int , unsigned int , const char * * , unsigned int * , unsigned int , unsigned int , t#u_int16_t ) ; unsigned int ( * sdp_session ) ( s#sk_buff * , unsigned int , unsigned int , const char * * , unsigned int * , unsigned int , const u#nf_inet_addr * ) ; unsigned int ( * sdp_media ) ( s#sk_buff * , unsigned int , unsigned int , const char * * , unsigned int * , s#nf_conntrack_expect * , s#nf_conntrack_expect * , unsigned int , unsigned int , u#nf_inet_addr * ) ; } 
nf_nat_sip_hooks extern const s#nf_nat_sip_hooks * nf_nat_sip_hooks 
ct_sip_parse_request int ct_sip_parse_request ( const s#nf_conn * , const char * , unsigned int , unsigned int * , unsigned int * , u#nf_inet_addr * , t#__be16 * ) 
e#sip_header_types enum sip_header_types { SIP_HDR_CSEQ , SIP_HDR_FROM , SIP_HDR_TO , SIP_HDR_CONTACT , SIP_HDR_VIA_UDP , SIP_HDR_VIA_TCP , SIP_HDR_EXPIRES , SIP_HDR_CONTENT_LENGTH , SIP_HDR_CALL_ID , } 
ct_sip_get_header int ct_sip_get_header ( const s#nf_conn * , const char * , unsigned int , unsigned int , e#sip_header_types , unsigned int * , unsigned int * ) 
ct_sip_parse_header_uri int ct_sip_parse_header_uri ( const s#nf_conn * , const char * , unsigned int * , unsigned int , e#sip_header_types , int * , unsigned int * , unsigned int * , u#nf_inet_addr * , t#__be16 * ) 
ct_sip_parse_address_param int ct_sip_parse_address_param ( const s#nf_conn * , const char * , unsigned int , unsigned int , const char * , unsigned int * , unsigned int * , u#nf_inet_addr * , t#bool ) 
ct_sip_parse_numerical_param int ct_sip_parse_numerical_param ( const s#nf_conn * , const char * , unsigned int , unsigned int , const char * , unsigned int * , unsigned int * , unsigned int * ) 
ct_sip_get_sdp_header int ct_sip_get_sdp_header ( const s#nf_conn * , const char * , unsigned int , unsigned int , e#sdp_header_types , e#sdp_header_types , unsigned int * , unsigned int * ) 

/* net/netfilter/nf_conntrack_snmp.o */
s##proc_ns_operations
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##kmem_cache
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##bpf_prog_aux
s##xfrm_policy
s##workqueue_struct
s##xfrm_state
s##uncached_list
s##proc_dir_entry
s##dn_route
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##key_user
s##key_type
s##assoc_array_ptr
s##uevent_sock
s##prot_inuse
s##ipv4_devconf
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##netns_ipvs
s##mpls_route
s##udp_tunnel_info
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
s##sec_path
nf_nat_snmp_hook extern int ( * nf_nat_snmp_hook ) ( s#sk_buff * , unsigned int , s#nf_conn * , e#ip_conntrack_info ) 

/* net/netfilter/nf_conntrack_standalone.o */
s##vfsmount
s##posix_acl
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##mmu_notifier_mm
s##xol_area
s##pid_namespace
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##sec_path
s##workqueue_struct
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##kmem_cache
s##xfrm_state
s##uncached_list
s##dn_route
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##phy_device
s##sfp_bus
s##prot_inuse
s##ipv4_devconf
s##inet_hashinfo
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nft_af_info
s##netns_ipvs
s##mpls_route
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##swap_info_struct
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##mtd_info
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
print_tuple void print_tuple ( s#seq_file * , const s#nf_conntrack_tuple * , const s#nf_conntrack_l3proto * , const s#nf_conntrack_l4proto * ) 
need_conntrack void need_conntrack ( void ) 

/* net/netfilter/nf_conntrack_tftp.o */
s##proc_ns_operations
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##kmem_cache
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##bpf_prog_aux
s##xfrm_policy
s##workqueue_struct
s##xfrm_state
s##uncached_list
s##proc_dir_entry
s##dn_route
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##key_user
s##key_type
s##assoc_array_ptr
s##uevent_sock
s##prot_inuse
s##ipv4_devconf
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nft_af_info
s##netns_ipvs
s##mpls_route
s##udp_tunnel_info
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
s##sec_path
nf_nat_tftp_hook extern unsigned int ( * nf_nat_tftp_hook ) ( s#sk_buff * , e#ip_conntrack_info , s#nf_conntrack_expect * ) 

/* net/netfilter/nf_conntrack_timeout.o */
s##proc_ns_operations
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##kmem_cache
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##bpf_prog_aux
s##xfrm_policy
s##workqueue_struct
s##xfrm_state
s##uncached_list
s##proc_dir_entry
s##dn_route
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##key_user
s##key_type
s##assoc_array_ptr
s##uevent_sock
s##prot_inuse
s##ipv4_devconf
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_conntrack_helper
s##nft_af_info
s##netns_ipvs
s##mpls_route
s##udp_tunnel_info
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
s##sec_path
s#ctnl_timeout struct ctnl_timeout { s#list_head head ; s#callback_head callback_head ; t#refcount_t refcnt ; char name [ 32 ] ; t#__u16 l3num ; s#nf_conntrack_l4proto * l4proto ; char data [ 0 ] ; } 
nf_ct_timeout_find_get_hook extern s#ctnl_timeout * ( * nf_ct_timeout_find_get_hook ) ( s#net * , const char * ) 
nf_ct_timeout_put_hook extern void ( * nf_ct_timeout_put_hook ) ( s#ctnl_timeout * ) 

/* net/netfilter/nf_dup_netdev.o */
s##neigh_parms
s##neighbour
s##sock
s##vfsmount
s##posix_acl
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##kmem_cache
s##inet_hashinfo
s##fib_notifier_ops
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##workqueue_struct
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##mpls_route
s##bpf_prog_array
s##cgroup_taskset
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##udp_tunnel_info
s##bpf_prog
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##l3mdev_ops
s##ndisc_ops
s##xfrm_state
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##mini_Qdisc
s##Qdisc
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##rtnl_link_ops
s##phy_device
s##sfp_bus
s##sec_path
nf_fwd_netdev_egress void nf_fwd_netdev_egress ( const s#nft_pktinfo * , int ) 
nf_dup_netdev_egress void nf_dup_netdev_egress ( const s#nft_pktinfo * , int ) 

/* net/netfilter/nf_log.o */
sysctl_nf_log_all_netns extern int sysctl_nf_log_all_netns 
s##proc_ns_operations
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##workqueue_struct
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##kmem_cache
s##xfrm_state
s##lwtunnel_state
s##rtable
s##rt6_info
s##dn_route
s##ndisc_ops
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##phy_device
s##sfp_bus
s##sec_path
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_dir_entry
s##uevent_sock
s##prot_inuse
s##ipv4_devconf
s##fib_table
s##inet_peer_base
s##xt_table
s##rt6_statistics
s##fib6_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
nf_log_set int nf_log_set ( s#net * , t#u_int8_t , const s#nf_logger * ) 
nf_log_unset void nf_log_unset ( s#net * , const s#nf_logger * ) 
nf_log_register int nf_log_register ( t#u_int8_t , s#nf_logger * ) 
nf_log_unregister void nf_log_unregister ( s#nf_logger * ) 
nf_log_bind_pf int nf_log_bind_pf ( s#net * , t#u_int8_t , const s#nf_logger * ) 
nf_log_unbind_pf void nf_log_unbind_pf ( s#net * , t#u_int8_t ) 
nf_logger_request_module void nf_logger_request_module ( int , e#nf_log_type ) 
nf_logger_find_get int nf_logger_find_get ( int , e#nf_log_type ) 
nf_logger_put void nf_logger_put ( int , e#nf_log_type ) 
nf_log_packet __attribute__ ( ( format ( printf , 8 , 9 ) ) ) void nf_log_packet ( s#net * , t#u_int8_t , unsigned int , const s#sk_buff * , const s#net_device * , const s#net_device * , const s#nf_loginfo * , const char * , ... ) 
nf_log_trace __attribute__ ( ( format ( printf , 8 , 9 ) ) ) void nf_log_trace ( s#net * , t#u_int8_t , unsigned int , const s#sk_buff * , const s#net_device * , const s#net_device * , const s#nf_loginfo * , const char * , ... ) 
s##nf_log_buf
nf_log_buf_add __attribute__ ( ( format ( printf , 2 , 3 ) ) ) int nf_log_buf_add ( s#nf_log_buf * , const char * , ... ) 
nf_log_buf_open s#nf_log_buf * nf_log_buf_open ( void ) 
nf_log_buf_close void nf_log_buf_close ( s#nf_log_buf * ) 

/* net/netfilter/nf_log_common.o */
s##nf_log_buf
s##proc_ns_operations
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##kmem_cache
s##raw_hashinfo
s##bpf_prog_aux
s##xfrm_policy
s##workqueue_struct
s##xfrm_state
s##lwtunnel_state
s##uncached_list
s##rt6_info
s##dn_route
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_dir_entry
s##uevent_sock
s##prot_inuse
s##ipv4_devconf
s##xt_table
s##rt6_statistics
s##fib6_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##udp_tunnel_info
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##prefix_info
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
s##sec_path
nf_log_dump_udp_header int nf_log_dump_udp_header ( s#nf_log_buf * , const s#sk_buff * , t#u8 , int , unsigned int ) 
nf_log_dump_tcp_header int nf_log_dump_tcp_header ( s#nf_log_buf * , const s#sk_buff * , t#u8 , int , unsigned int , unsigned int ) 
nf_log_dump_sk_uid_gid void nf_log_dump_sk_uid_gid ( s#nf_log_buf * , s#sock * ) 
nf_log_dump_packet_common void nf_log_dump_packet_common ( s#nf_log_buf * , t#u_int8_t , unsigned int , const s#sk_buff * , const s#net_device * , const s#net_device * , const s#nf_loginfo * , const char * ) 
nf_log_l2packet void nf_log_l2packet ( s#net * , t#u_int8_t , t#__be16 , unsigned int , const s#sk_buff * , const s#net_device * , const s#net_device * , const s#nf_loginfo * , const char * ) 

/* net/netfilter/nf_nat_core.o */
s##proc_ns_operations
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##kmem_cache
s##fs_pin
s##nlm_lockowner
s##nfs4_lock_state
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##bpf_prog_aux
s##workqueue_struct
s##uncached_list
s##proc_dir_entry
s##dn_route
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##key_user
s##key_type
s##assoc_array_ptr
s##uevent_sock
s##prot_inuse
s##ipv4_devconf
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nft_af_info
s##netns_ipvs
s##mpls_route
s##udp_tunnel_info
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
s#nf_nat_l3proto struct nf_nat_l3proto { t#u8 l3proto ; t#bool ( * in_range ) ( const s#nf_conntrack_tuple * , const s#nf_nat_range * ) ; t#u32 ( * secure_port ) ( const s#nf_conntrack_tuple * , t#__be16 ) ; t#bool ( * manip_pkt ) ( s#sk_buff * , unsigned int , const s#nf_nat_l4proto * , const s#nf_conntrack_tuple * , e#nf_nat_manip_type ) ; void ( * csum_update ) ( s#sk_buff * , unsigned int , t#__sum16 * , const s#nf_conntrack_tuple * , e#nf_nat_manip_type ) ; void ( * csum_recalc ) ( s#sk_buff * , t#u8 , void * , t#__sum16 * , int , int ) ; void ( * decode_session ) ( s#sk_buff * , const s#nf_conn * , e#ip_conntrack_dir , unsigned long , s#flowi * ) ; int ( * nlattr_to_range ) ( s#nlattr * [ ] , s#nf_nat_range * ) ; } 
s#nf_nat_l4proto struct nf_nat_l4proto { t#u8 l4proto ; t#bool ( * manip_pkt ) ( s#sk_buff * , const s#nf_nat_l3proto * , unsigned int , unsigned int , const s#nf_conntrack_tuple * , e#nf_nat_manip_type ) ; t#bool ( * in_range ) ( const s#nf_conntrack_tuple * , e#nf_nat_manip_type , const u#nf_conntrack_man_proto * , const u#nf_conntrack_man_proto * ) ; void ( * unique_tuple ) ( const s#nf_nat_l3proto * , s#nf_conntrack_tuple * , const s#nf_nat_range * , e#nf_nat_manip_type , const s#nf_conn * ) ; int ( * nlattr_to_range ) ( s#nlattr * [ ] , s#nf_nat_range * ) ; } 
__nf_nat_l4proto_find const s#nf_nat_l4proto * __nf_nat_l4proto_find ( t#u8 , t#u8 ) 
nf_xfrm_me_harder int nf_xfrm_me_harder ( s#net * , s#sk_buff * , unsigned int ) 
nf_nat_used_tuple int nf_nat_used_tuple ( const s#nf_conntrack_tuple * , const s#nf_conn * ) 
s#nf_nat_pptp struct nf_nat_pptp { t#__be16 pns_call_id ; t#__be16 pac_call_id ; } 
u#nf_conntrack_nat_help union nf_conntrack_nat_help { s#nf_nat_pptp nat_pptp_info ; } 
s#nf_conn_nat struct nf_conn_nat { u#nf_conntrack_nat_help help ; int masq_index ; } 
nf_ct_nat_ext_add s#nf_conn_nat * nf_ct_nat_ext_add ( s#nf_conn * ) 
nf_nat_setup_info unsigned int nf_nat_setup_info ( s#nf_conn * , const s#nf_nat_range * , e#nf_nat_manip_type ) 
nf_nat_alloc_null_binding extern unsigned int nf_nat_alloc_null_binding ( s#nf_conn * , unsigned int ) 
nf_nat_packet unsigned int nf_nat_packet ( s#nf_conn * , e#ip_conntrack_info , unsigned int , s#sk_buff * ) 
nf_nat_l4proto_register int nf_nat_l4proto_register ( t#u8 , const s#nf_nat_l4proto * ) 
nf_nat_l4proto_unregister void nf_nat_l4proto_unregister ( t#u8 , const s#nf_nat_l4proto * ) 
nf_nat_l3proto_register int nf_nat_l3proto_register ( const s#nf_nat_l3proto * ) 
nf_nat_l3proto_unregister void nf_nat_l3proto_unregister ( const s#nf_nat_l3proto * ) 

/* net/netfilter/nf_nat_helper.o */
s##proc_ns_operations
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##kmem_cache
s##udp_table
s##raw_hashinfo
s##bpf_prog_aux
s##xfrm_policy
s##workqueue_struct
s##xfrm_state
s##uncached_list
s##proc_dir_entry
s##dn_route
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##key_user
s##key_type
s##assoc_array_ptr
s##uevent_sock
s##prot_inuse
s##ipv4_devconf
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nft_af_info
s##netns_ipvs
s##mpls_route
s##udp_tunnel_info
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
s##sec_path
__nf_nat_mangle_tcp_packet t#bool __nf_nat_mangle_tcp_packet ( s#sk_buff * , s#nf_conn * , e#ip_conntrack_info , unsigned int , unsigned int , unsigned int , const char * , unsigned int , t#bool ) 
nf_nat_mangle_udp_packet t#bool nf_nat_mangle_udp_packet ( s#sk_buff * , s#nf_conn * , e#ip_conntrack_info , unsigned int , unsigned int , unsigned int , const char * , unsigned int ) 
nf_nat_follow_master void nf_nat_follow_master ( s#nf_conn * , s#nf_conntrack_expect * ) 

/* net/netfilter/nf_nat_proto_common.o */
nf_nat_l4proto_in_range t#bool nf_nat_l4proto_in_range ( const s#nf_conntrack_tuple * , e#nf_nat_manip_type , const u#nf_conntrack_man_proto * , const u#nf_conntrack_man_proto * ) 
s##proc_ns_operations
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##kmem_cache
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##bpf_prog_aux
s##xfrm_policy
s##workqueue_struct
s##xfrm_state
s##uncached_list
s##proc_dir_entry
s##dn_route
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##key_user
s##key_type
s##assoc_array_ptr
s##uevent_sock
s##prot_inuse
s##ipv4_devconf
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##netns_ipvs
s##mpls_route
s##udp_tunnel_info
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
s##sec_path
nf_nat_l4proto_unique_tuple void nf_nat_l4proto_unique_tuple ( const s#nf_nat_l3proto * , s#nf_conntrack_tuple * , const s#nf_nat_range * , e#nf_nat_manip_type , const s#nf_conn * , t#u16 * ) 
nf_nat_l4proto_nlattr_to_range int nf_nat_l4proto_nlattr_to_range ( s#nlattr * [ ] , s#nf_nat_range * ) 

/* net/netfilter/nf_nat_redirect.o */
s##proc_ns_operations
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##kmem_cache
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##bpf_prog_aux
s##xfrm_policy
s##workqueue_struct
s##xfrm_state
s##uncached_list
s##proc_dir_entry
s##dn_route
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##key_user
s##key_type
s##assoc_array_ptr
s##uevent_sock
s##prot_inuse
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##netns_ipvs
s##mpls_route
s##udp_tunnel_info
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##ip_mc_list
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
s##sec_path
s#nf_nat_ipv4_range struct nf_nat_ipv4_range { unsigned int flags ; t#__be32 min_ip ; t#__be32 max_ip ; u#nf_conntrack_man_proto min ; u#nf_conntrack_man_proto max ; } 
s#nf_nat_ipv4_multi_range_compat struct nf_nat_ipv4_multi_range_compat { unsigned int rangesize ; s#nf_nat_ipv4_range range [ 1 ] ; } 
nf_nat_redirect_ipv4 unsigned int nf_nat_redirect_ipv4 ( s#sk_buff * , const s#nf_nat_ipv4_multi_range_compat * , unsigned int ) 
nf_nat_redirect_ipv6 unsigned int nf_nat_redirect_ipv6 ( s#sk_buff * , const s#nf_nat_range * , unsigned int ) 

/* net/netfilter/nf_queue.o */
s##proc_ns_operations
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##workqueue_struct
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##kmem_cache
s##xfrm_state
s##lwtunnel_state
s##rtable
s##rt6_info
s##dn_route
s##ndisc_ops
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##phy_device
s##sfp_bus
s##sec_path
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_dir_entry
s##uevent_sock
s##prot_inuse
s##ipv4_devconf
s##fib_table
s##inet_peer_base
s##xt_table
s##rt6_statistics
s##fib6_table
s##seg6_pernet_data
s##sctp_mib
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
nf_register_queue_handler void nf_register_queue_handler ( s#net * , const s#nf_queue_handler * ) 
nf_unregister_queue_handler void nf_unregister_queue_handler ( s#net * ) 
nf_queue_entry_release_refs void nf_queue_entry_release_refs ( s#nf_queue_entry * ) 
nf_queue_entry_get_refs void nf_queue_entry_get_refs ( s#nf_queue_entry * ) 
nf_reinject void nf_reinject ( s#nf_queue_entry * , unsigned int ) 

/* net/netfilter/nf_sockopt.o */
s##posix_acl
s##vfsmount
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##sec_path
s##workqueue_struct
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##l3mdev_ops
s##ndisc_ops
s##xfrm_state
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##phy_device
s##sfp_bus
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##kmem_cache
s##xt_table
s##inet_hashinfo
s##fib_notifier_ops
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##lwtunnel_state
s##rtable
s##dn_route
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##mempolicy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##request_sock_ops
s##timewait_sock_ops
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sock_reuseport
s#nf_sockopt_ops struct nf_sockopt_ops { s#list_head list ; t#u_int8_t pf ; int set_optmin ; int set_optmax ; int ( * set ) ( s#sock * , int , void * , unsigned int ) ; int ( * compat_set ) ( s#sock * , int , void * , unsigned int ) ; int get_optmin ; int get_optmax ; int ( * get ) ( s#sock * , int , void * , int * ) ; int ( * compat_get ) ( s#sock * , int , void * , int * ) ; s#module * owner ; } 
nf_register_sockopt int nf_register_sockopt ( s#nf_sockopt_ops * ) 
nf_unregister_sockopt void nf_unregister_sockopt ( s#nf_sockopt_ops * ) 
nf_setsockopt int nf_setsockopt ( s#sock * , t#u_int8_t , int , char * , unsigned int ) 
nf_getsockopt int nf_getsockopt ( s#sock * , t#u_int8_t , int , char * , int * ) 
compat_nf_setsockopt int compat_nf_setsockopt ( s#sock * , t#u_int8_t , int , char * , unsigned int ) 
compat_nf_getsockopt int compat_nf_getsockopt ( s#sock * , t#u_int8_t , int , char * , int * ) 

/* net/netfilter/nf_synproxy_core.o */
synproxy_net_id extern unsigned int synproxy_net_id 
s##proc_ns_operations
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##kmem_cache
s##udp_table
s##raw_hashinfo
s##bpf_prog_aux
s##xfrm_policy
s##workqueue_struct
s##xfrm_state
s##uncached_list
s##proc_dir_entry
s##dn_route
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##key_user
s##key_type
s##assoc_array_ptr
s##uevent_sock
s##prot_inuse
s##ipv4_devconf
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##netns_ipvs
s##mpls_route
s##udp_tunnel_info
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
s##sec_path
s#synproxy_options struct synproxy_options { t#u8 options ; t#u8 wscale ; t#u16 mss ; t#u32 tsval ; t#u32 tsecr ; } 
synproxy_parse_options t#bool synproxy_parse_options ( const s#sk_buff * , unsigned int , const s#tcphdr * , s#synproxy_options * ) 
synproxy_options_size unsigned int synproxy_options_size ( const s#synproxy_options * ) 
synproxy_build_options void synproxy_build_options ( s#tcphdr * , const s#synproxy_options * ) 
s#xt_synproxy_info struct xt_synproxy_info { t#__u8 options ; t#__u8 wscale ; t#__u16 mss ; } 
synproxy_init_timestamp_cookie void synproxy_init_timestamp_cookie ( const s#xt_synproxy_info * , s#synproxy_options * ) 
synproxy_check_timestamp_cookie void synproxy_check_timestamp_cookie ( s#synproxy_options * ) 
s#nf_conn_synproxy struct nf_conn_synproxy { t#u32 isn ; t#u32 its ; t#u32 tsoff ; } 
synproxy_tstamp_adjust unsigned int synproxy_tstamp_adjust ( s#sk_buff * , unsigned int , s#tcphdr * , s#nf_conn * , e#ip_conntrack_info , const s#nf_conn_synproxy * ) 

/* net/netfilter/nf_tables_api.o */
s##proc_ns_operations
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##workqueue_struct
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##l3mdev_ops
s##ndisc_ops
s##xfrm_state
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##phy_device
s##sfp_bus
s##sec_path
s##kmem_cache
s##request_sock_ops
s##timewait_sock_ops
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##lwtunnel_state
s##rtable
s##rt6_info
s##dn_route
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_dir_entry
s##uevent_sock
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##fib_notifier_ops
s##ipv6_devconf
s##rt6_statistics
s##fib6_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##mpls_route
nft_register_afinfo int nft_register_afinfo ( s#net * , s#nft_af_info * ) 
nft_unregister_afinfo void nft_unregister_afinfo ( s#net * , s#nft_af_info * ) 
e#nft_chain_type enum nft_chain_type { NFT_CHAIN_T_DEFAULT = 0 , NFT_CHAIN_T_ROUTE , NFT_CHAIN_T_NAT , NFT_CHAIN_T_MAX } 
s#nf_chain_type struct nf_chain_type { const char * name ; e#nft_chain_type type ; int family ; s#module * owner ; unsigned int hook_mask ; t#nf_hookfn * hooks [ 8 ] ; } 
nft_register_chain_type int nft_register_chain_type ( const s#nf_chain_type * ) 
nft_unregister_chain_type void nft_unregister_chain_type ( const s#nf_chain_type * ) 
nft_register_expr int nft_register_expr ( s#nft_expr_type * ) 
nft_unregister_expr void nft_unregister_expr ( s#nft_expr_type * ) 
s#nft_set struct nft_set { s#list_head list ; s#list_head bindings ; char name [ 32 ] ; t#u32 ktype ; t#u32 dtype ; t#u32 objtype ; t#u32 size ; t#atomic_t nelems ; t#u32 ndeact ; t#u64 timeout ; t#u32 gc_int ; t#u16 policy ; t#u16 udlen ; unsigned char * udata ; const s#nft_set_ops * ops __attribute__ ( ( __aligned__ ( 256 ) ) ) ; t#u16 flags : 14 , genmask : 2 ; t#u8 klen ; t#u8 dlen ; unsigned char data [ ] __attribute__ ( ( aligned ( __alignof__ ( u64 ) ) ) ) ; } 
E#NFT_SET_EXT_NUM 8 
s#nft_set_ext struct nft_set_ext { t#u8 genmask ; t#u8 offset [ E#NFT_SET_EXT_NUM ] ; char data [ 0 ] ; } 
s#nft_set_elem struct nft_set_elem { union { t#u32 buf [ 64 / sizeof ( u32 ) ] ; s#nft_data val ; } key ; void * priv ; } 
s#nft_set_iter struct nft_set_iter { t#u8 genmask ; unsigned int count ; unsigned int skip ; int err ; int ( * fn ) ( const s#nft_ctx * , s#nft_set * , const s#nft_set_iter * , s#nft_set_elem * ) ; } 
s#nft_set_desc struct nft_set_desc { unsigned int klen ; unsigned int dlen ; unsigned int size ; } 
e#nft_set_class enum nft_set_class { NFT_SET_CLASS_O_1 , NFT_SET_CLASS_O_LOG_N , NFT_SET_CLASS_O_N , } 
s#nft_set_estimate struct nft_set_estimate { unsigned int size ; e#nft_set_class lookup ; e#nft_set_class space ; } 
s#nft_set_ops struct nft_set_ops { t#bool ( * lookup ) ( const s#net * , const s#nft_set * , const t#u32 * , const s#nft_set_ext * * ) ; t#bool ( * update ) ( s#nft_set * , const t#u32 * , void * ( * ) ( s#nft_set * , const s#nft_expr * , s#nft_regs * ) , const s#nft_expr * , s#nft_regs * , const s#nft_set_ext * * ) ; int ( * insert ) ( const s#net * , const s#nft_set * , const s#nft_set_elem * , s#nft_set_ext * * ) ; void ( * activate ) ( const s#net * , const s#nft_set * , const s#nft_set_elem * ) ; void * ( * deactivate ) ( const s#net * , const s#nft_set * , const s#nft_set_elem * ) ; t#bool ( * flush ) ( const s#net * , const s#nft_set * , void * ) ; void ( * remove ) ( const s#net * , const s#nft_set * , const s#nft_set_elem * ) ; void ( * walk ) ( const s#nft_ctx * , s#nft_set * , s#nft_set_iter * ) ; unsigned int ( * privsize ) ( const s#nlattr * const [ ] ) ; t#bool ( * estimate ) ( const s#nft_set_desc * , t#u32 , s#nft_set_estimate * ) ; int ( * init ) ( const s#nft_set * , const s#nft_set_desc * , const s#nlattr * const [ ] ) ; void ( * destroy ) ( const s#nft_set * ) ; s#list_head list ; s#module * owner ; unsigned int elemsize ; t#u32 features ; } 
nft_register_set int nft_register_set ( s#nft_set_ops * ) 
nft_unregister_set void nft_unregister_set ( s#nft_set_ops * ) 
nft_set_lookup s#nft_set * nft_set_lookup ( const s#net * , const s#nft_table * , const s#nlattr * , const s#nlattr * , t#u8 ) 
s#nft_set_binding struct nft_set_binding { s#list_head list ; const s#nft_chain * chain ; t#u32 flags ; } 
nf_tables_bind_set int nf_tables_bind_set ( const s#nft_ctx * , s#nft_set * , s#nft_set_binding * ) 
nf_tables_unbind_set void nf_tables_unbind_set ( const s#nft_ctx * , s#nft_set * , s#nft_set_binding * ) 
s#nft_set_ext_type struct nft_set_ext_type { t#u8 len ; t#u8 align ; } 
nft_set_ext_types extern const s#nft_set_ext_type nft_set_ext_types [ ] 
nft_set_elem_destroy void nft_set_elem_destroy ( const s#nft_set * , void * , t#bool ) 
nft_set_gc_batch_release void nft_set_gc_batch_release ( s#callback_head * ) 
s#nft_set_gc_batch_head struct nft_set_gc_batch_head { s#callback_head rcu ; const s#nft_set * set ; unsigned int cnt ; } 
s#nft_set_gc_batch struct nft_set_gc_batch { s#nft_set_gc_batch_head head ; void * elems [ ( ( ( ( 1UL ) << 12 ) - sizeof ( struct nft_set_gc_batch_head ) ) / sizeof ( void * ) ) ] ; } 
nft_set_gc_batch_alloc s#nft_set_gc_batch * nft_set_gc_batch_alloc ( const s#nft_set * , t#gfp_t ) 
s#nft_object struct nft_object { s#list_head list ; char name [ 32 ] ; s#nft_table * table ; t#u32 genmask : 2 , use : 30 ; const s#nft_object_type * type __attribute__ ( ( __aligned__ ( 256 ) ) ) ; unsigned char data [ ] __attribute__ ( ( aligned ( __alignof__ ( u64 ) ) ) ) ; } 
s#nft_object_type struct nft_object_type { void ( * eval ) ( s#nft_object * , s#nft_regs * , const s#nft_pktinfo * ) ; s#list_head list ; t#u32 type ; unsigned int size ; unsigned int maxattr ; s#module * owner ; const s#nla_policy * policy ; int ( * init ) ( const s#nft_ctx * , const s#nlattr * const [ ] , s#nft_object * ) ; void ( * destroy ) ( s#nft_object * ) ; int ( * dump ) ( s#sk_buff * , s#nft_object * , t#bool ) ; } 
nft_register_obj int nft_register_obj ( s#nft_object_type * ) 
nft_unregister_obj void nft_unregister_obj ( s#nft_object_type * ) 
nf_tables_obj_lookup s#nft_object * nf_tables_obj_lookup ( const s#nft_table * , const s#nlattr * , t#u32 , t#u8 ) 
nft_obj_notify void nft_obj_notify ( s#net * , s#nft_table * , s#nft_object * , t#u32 , t#u32 , int , int , int , t#gfp_t ) 
nft_chain_validate_dependency int nft_chain_validate_dependency ( const s#nft_chain * , e#nft_chain_type ) 
nft_chain_validate_hooks int nft_chain_validate_hooks ( const s#nft_chain * , unsigned int ) 
nft_parse_u32_check int nft_parse_u32_check ( const s#nlattr * , int , t#u32 * ) 
nft_parse_register unsigned int nft_parse_register ( const s#nlattr * ) 
nft_dump_register int nft_dump_register ( s#sk_buff * , unsigned int , unsigned int ) 
e#nft_registers enum nft_registers { NFT_REG_VERDICT , NFT_REG_1 , NFT_REG_2 , NFT_REG_3 , NFT_REG_4 , __NFT_REG_MAX , NFT_REG32_00 = 8 , NFT_REG32_01 , NFT_REG32_02 , NFT_REG32_03 , NFT_REG32_04 , NFT_REG32_05 , NFT_REG32_06 , NFT_REG32_07 , NFT_REG32_08 , NFT_REG32_09 , NFT_REG32_10 , NFT_REG32_11 , NFT_REG32_12 , NFT_REG32_13 , NFT_REG32_14 , NFT_REG32_15 , } 
nft_validate_register_load int nft_validate_register_load ( e#nft_registers , unsigned int ) 
e#nft_data_types enum nft_data_types { NFT_DATA_VALUE , NFT_DATA_VERDICT = 0xffffff00U , } 
nft_validate_register_store int nft_validate_register_store ( const s#nft_ctx * , e#nft_registers , const s#nft_data * , e#nft_data_types , unsigned int ) 
s#nft_data_desc struct nft_data_desc { e#nft_data_types type ; unsigned int len ; } 
nft_data_init int nft_data_init ( const s#nft_ctx * , s#nft_data * , unsigned int , s#nft_data_desc * , const s#nlattr * ) 
nft_data_release void nft_data_release ( const s#nft_data * , e#nft_data_types ) 
nft_data_dump int nft_data_dump ( s#sk_buff * , int , const s#nft_data * , e#nft_data_types , unsigned int ) 
__nft_release_basechain int __nft_release_basechain ( s#nft_ctx * ) 

/* net/netfilter/nf_tables_core.o */
s##neigh_parms
s##neighbour
s##sock
s##vfsmount
s##posix_acl
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##kmem_cache
s##inet_hashinfo
s##fib_notifier_ops
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##ebt_table
s##workqueue_struct
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##mpls_route
s##bpf_prog_array
s##cgroup_taskset
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##udp_tunnel_info
s##bpf_prog
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##l3mdev_ops
s##ndisc_ops
s##xfrm_state
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##mini_Qdisc
s##Qdisc
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##rtnl_link_ops
s##phy_device
s##sfp_bus
s##sec_path
nft_do_chain unsigned int nft_do_chain ( s#nft_pktinfo * , void * ) 

/* net/netfilter/nf_tables_trace.o */
s##static_key_mod
nft_trace_enabled extern s#static_key_false nft_trace_enabled 

/* net/netfilter/nfnetlink.o */
nfnl_lock void nfnl_lock ( t#__u8 ) 
nfnl_unlock void nfnl_unlock ( t#__u8 ) 
s##proc_ns_operations
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##workqueue_struct
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##l3mdev_ops
s##ndisc_ops
s##xfrm_state
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##phy_device
s##sfp_bus
s##sec_path
s##kmem_cache
s##request_sock_ops
s##timewait_sock_ops
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##lwtunnel_state
s##rtable
s##rt6_info
s##dn_route
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_dir_entry
s##uevent_sock
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##xt_table
s##fib_notifier_ops
s##ipv6_devconf
s##rt6_statistics
s##fib6_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s#nfnl_callback struct nfnl_callback { int ( * call ) ( s#net * , s#sock * , s#sk_buff * , const s#nlmsghdr * , const s#nlattr * const [ ] ) ; int ( * call_rcu_sched ) ( s#net * , s#sock * , s#sk_buff * , const s#nlmsghdr * , const s#nlattr * const [ ] ) ; int ( * call_batch ) ( s#net * , s#sock * , s#sk_buff * , const s#nlmsghdr * , const s#nlattr * const [ ] ) ; const s#nla_policy * policy ; const t#u_int16_t attr_count ; } 
s#nfnetlink_subsystem struct nfnetlink_subsystem { const char * name ; t#__u8 subsys_id ; t#__u8 cb_count ; const s#nfnl_callback * cb ; int ( * commit ) ( s#net * , s#sk_buff * ) ; int ( * abort ) ( s#net * , s#sk_buff * ) ; t#bool ( * valid_genid ) ( s#net * , t#u32 ) ; } 
nfnetlink_subsys_register int nfnetlink_subsys_register ( const s#nfnetlink_subsystem * ) 
nfnetlink_subsys_unregister int nfnetlink_subsys_unregister ( const s#nfnetlink_subsystem * ) 
nfnetlink_has_listeners int nfnetlink_has_listeners ( s#net * , unsigned int ) 
nfnetlink_send int nfnetlink_send ( s#sk_buff * , s#net * , t#u32 , unsigned int , int , t#gfp_t ) 
nfnetlink_set_err int nfnetlink_set_err ( s#net * , t#u32 , t#u32 , int ) 
nfnetlink_unicast int nfnetlink_unicast ( s#sk_buff * , s#net * , t#u32 , int ) 

/* net/netfilter/nfnetlink_acct.o */
s##nf_acct
s##proc_ns_operations
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##workqueue_struct
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##l3mdev_ops
s##ndisc_ops
s##xfrm_state
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##phy_device
s##sfp_bus
s##sec_path
s##kmem_cache
s##request_sock_ops
s##timewait_sock_ops
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##lwtunnel_state
s##rtable
s##rt6_info
s##dn_route
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_dir_entry
s##uevent_sock
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##xt_table
s##fib_notifier_ops
s##ipv6_devconf
s##rt6_statistics
s##fib6_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
nfnl_acct_find_get s#nf_acct * nfnl_acct_find_get ( s#net * , const char * ) 
nfnl_acct_put void nfnl_acct_put ( s#nf_acct * ) 
nfnl_acct_update void nfnl_acct_update ( const s#sk_buff * , s#nf_acct * ) 
nfnl_acct_overquota int nfnl_acct_overquota ( s#net * , const s#sk_buff * , s#nf_acct * ) 

/* net/netfilter/nfnetlink_log.o */
s##proc_ns_operations
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##workqueue_struct
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##kmem_cache
s##xfrm_state
s##lwtunnel_state
s##uncached_list
s##proc_dir_entry
s##dn_route
s##prefix_info
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##phy_device
s##sfp_bus
s##sec_path
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##key_user
s##key_type
s##assoc_array_ptr
s##uevent_sock
s##prot_inuse
s##ipv4_devconf
s##xt_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##netns_ipvs
s##mpls_route
nfulnl_log_packet void nfulnl_log_packet ( s#net * , t#u_int8_t , unsigned int , const s#sk_buff * , const s#net_device * , const s#net_device * , const s#nf_loginfo * , const char * ) 

/* net/netfilter/nft_fib.o */
nft_fib_policy extern const s#nla_policy nft_fib_policy [ ] 
s##proc_ns_operations
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##sock
s##bio_vec
s##poll_table_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##mem_cgroup
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kmem_cache
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##bpf_prog_array
s##cgroup_taskset
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_dir_entry
s##uevent_sock
s##sec_path
s##neigh_parms
s##neighbour
s##udp_tunnel_info
s##bpf_prog
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##l3mdev_ops
s##ndisc_ops
s##xfrm_state
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##mini_Qdisc
s##Qdisc
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##rtnl_link_ops
s##phy_device
s##sfp_bus
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##inet_hashinfo
s##fib_notifier_ops
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##mpls_route
nft_fib_validate int nft_fib_validate ( const s#nft_ctx * , const s#nft_expr * , const s#nft_data * * ) 
nft_fib_init int nft_fib_init ( const s#nft_ctx * , const s#nft_expr * , const s#nlattr * const [ ] ) 
nft_fib_dump int nft_fib_dump ( s#sk_buff * , const s#nft_expr * ) 
s#nft_fib struct nft_fib { e#nft_registers dreg : 8 ; t#u8 result ; t#u32 flags ; } 
nft_fib_store_result void nft_fib_store_result ( void * , const s#nft_fib * , const s#nft_pktinfo * , int ) 

/* net/netfilter/nft_masq.o */
nft_masq_policy extern const s#nla_policy nft_masq_policy [ ] 
s##proc_ns_operations
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##workqueue_struct
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##kmem_cache
s##xfrm_state
s##uncached_list
s##proc_dir_entry
s##dn_route
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##phy_device
s##sfp_bus
s##sec_path
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##key_user
s##key_type
s##assoc_array_ptr
s##uevent_sock
s##prot_inuse
s##ipv4_devconf
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##netns_ipvs
s##mpls_route
nft_masq_validate int nft_masq_validate ( const s#nft_ctx * , const s#nft_expr * , const s#nft_data * * ) 
nft_masq_init int nft_masq_init ( const s#nft_ctx * , const s#nft_expr * , const s#nlattr * const [ ] ) 
nft_masq_dump int nft_masq_dump ( s#sk_buff * , const s#nft_expr * ) 

/* net/netfilter/nft_meta.o */
s##proc_ns_operations
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##kmem_cache
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##bpf_prog_aux
s##xfrm_policy
s##workqueue_struct
s##xfrm_state
s##lwtunnel_state
s##rtable
s##rt6_info
s##dn_route
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_dir_entry
s##uevent_sock
s##prot_inuse
s##ipv4_devconf
s##fib_table
s##inet_peer_base
s##rt6_statistics
s##fib6_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##mpls_route
s##udp_tunnel_info
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##ndisc_ops
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
s##sec_path
nft_meta_get_eval void nft_meta_get_eval ( const s#nft_expr * , s#nft_regs * , const s#nft_pktinfo * ) 
nft_meta_set_eval void nft_meta_set_eval ( const s#nft_expr * , s#nft_regs * , const s#nft_pktinfo * ) 
nft_meta_policy extern const s#nla_policy nft_meta_policy [ ] 
nft_meta_get_init int nft_meta_get_init ( const s#nft_ctx * , const s#nft_expr * , const s#nlattr * const [ ] ) 
nft_meta_set_validate int nft_meta_set_validate ( const s#nft_ctx * , const s#nft_expr * , const s#nft_data * * ) 
nft_meta_set_init int nft_meta_set_init ( const s#nft_ctx * , const s#nft_expr * , const s#nlattr * const [ ] ) 
nft_meta_get_dump int nft_meta_get_dump ( s#sk_buff * , const s#nft_expr * ) 
nft_meta_set_dump int nft_meta_set_dump ( s#sk_buff * , const s#nft_expr * ) 
nft_meta_set_destroy void nft_meta_set_destroy ( const s#nft_ctx * , const s#nft_expr * ) 

/* net/netfilter/nft_redir.o */
nft_redir_policy extern const s#nla_policy nft_redir_policy [ ] 
s##proc_ns_operations
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##workqueue_struct
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##kmem_cache
s##xfrm_state
s##uncached_list
s##proc_dir_entry
s##dn_route
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##phy_device
s##sfp_bus
s##sec_path
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##key_user
s##key_type
s##assoc_array_ptr
s##uevent_sock
s##prot_inuse
s##ipv4_devconf
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##netns_ipvs
s##mpls_route
nft_redir_validate int nft_redir_validate ( const s#nft_ctx * , const s#nft_expr * , const s#nft_data * * ) 
nft_redir_init int nft_redir_init ( const s#nft_ctx * , const s#nft_expr * , const s#nlattr * const [ ] ) 
nft_redir_dump int nft_redir_dump ( s#sk_buff * , const s#nft_expr * ) 

/* net/netfilter/nft_reject.o */
nft_reject_policy extern const s#nla_policy nft_reject_policy [ ] 
s##proc_ns_operations
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##sock
s##bio_vec
s##poll_table_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##mem_cgroup
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kmem_cache
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##bpf_prog_array
s##cgroup_taskset
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_dir_entry
s##uevent_sock
s##sec_path
s##neigh_parms
s##neighbour
s##udp_tunnel_info
s##bpf_prog
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##l3mdev_ops
s##ndisc_ops
s##xfrm_state
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##mini_Qdisc
s##Qdisc
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##rtnl_link_ops
s##phy_device
s##sfp_bus
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##inet_hashinfo
s##fib_notifier_ops
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##mpls_route
nft_reject_validate int nft_reject_validate ( const s#nft_ctx * , const s#nft_expr * , const s#nft_data * * ) 
nft_reject_init int nft_reject_init ( const s#nft_ctx * , const s#nft_expr * , const s#nlattr * const [ ] ) 
nft_reject_dump int nft_reject_dump ( s#sk_buff * , const s#nft_expr * ) 
nft_reject_icmp_code int nft_reject_icmp_code ( t#u8 ) 
nft_reject_icmpv6_code int nft_reject_icmpv6_code ( t#u8 ) 

/* net/netfilter/x_tables.o */
s##proc_ns_operations
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##kmem_cache
s##fs_pin
s##nlm_lockowner
s##nfs4_lock_state
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##bpf_prog_aux
s##xfrm_policy
s##workqueue_struct
s##xfrm_state
s##lwtunnel_state
s##rtable
s##rt6_info
s##dn_route
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_dir_entry
s##uevent_sock
s##prot_inuse
s##ipv4_devconf
s##fib_table
s##inet_peer_base
s##rt6_statistics
s##fib6_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##udp_tunnel_info
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##ndisc_ops
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
s##sec_path
xt_register_target int xt_register_target ( s#xt_target * ) 
xt_unregister_target void xt_unregister_target ( s#xt_target * ) 
xt_register_targets int xt_register_targets ( s#xt_target * , unsigned int ) 
xt_unregister_targets void xt_unregister_targets ( s#xt_target * , unsigned int ) 
xt_register_match int xt_register_match ( s#xt_match * ) 
xt_unregister_match void xt_unregister_match ( s#xt_match * ) 
xt_register_matches int xt_register_matches ( s#xt_match * , unsigned int ) 
xt_unregister_matches void xt_unregister_matches ( s#xt_match * , unsigned int ) 
xt_find_match s#xt_match * xt_find_match ( t#u8 , const char * , t#u8 ) 
xt_request_find_match s#xt_match * xt_request_find_match ( t#u8 , const char * , t#u8 ) 
xt_find_target s#xt_target * xt_find_target ( t#u8 , const char * , t#u8 ) 
xt_request_find_target s#xt_target * xt_request_find_target ( t#u8 , const char * , t#u8 ) 
xt_data_to_user int xt_data_to_user ( void * , const void * , int , int , int ) 
s#xt_entry_match struct xt_entry_match { union { struct { t#__u16 match_size ; char name [ 29 ] ; t#__u8 revision ; } user ; struct { t#__u16 match_size ; s#xt_match * match ; } kernel ; t#__u16 match_size ; } u ; unsigned char data [ 0 ] ; } 
xt_match_to_user int xt_match_to_user ( const s#xt_entry_match * , s#xt_entry_match * ) 
s#xt_entry_target struct xt_entry_target { union { struct { t#__u16 target_size ; char name [ 29 ] ; t#__u8 revision ; } user ; struct { t#__u16 target_size ; s#xt_target * target ; } kernel ; t#__u16 target_size ; } u ; unsigned char data [ 0 ] ; } 
xt_target_to_user int xt_target_to_user ( const s#xt_entry_target * , s#xt_entry_target * ) 
xt_find_revision int xt_find_revision ( t#u8 , const char * , t#u8 , int , int * ) 
xt_check_match int xt_check_match ( s#xt_mtchk_param * , unsigned int , t#u_int8_t , t#bool ) 
xt_compat_add_offset int xt_compat_add_offset ( t#u_int8_t , unsigned int , int ) 
xt_compat_flush_offsets void xt_compat_flush_offsets ( t#u_int8_t ) 
xt_compat_calc_jump int xt_compat_calc_jump ( t#u_int8_t , unsigned int ) 
xt_compat_init_offsets void xt_compat_init_offsets ( t#u_int8_t , unsigned int ) 
xt_compat_match_offset int xt_compat_match_offset ( const s#xt_match * ) 
xt_compat_match_from_user void xt_compat_match_from_user ( s#xt_entry_match * , void * * , unsigned int * ) 
xt_compat_match_to_user int xt_compat_match_to_user ( const s#xt_entry_match * , void * * , unsigned int * ) 
xt_compat_check_entry_offsets int xt_compat_check_entry_offsets ( const void * , const char * , unsigned int , unsigned int ) 
xt_check_entry_offsets int xt_check_entry_offsets ( const void * , const char * , unsigned int , unsigned int ) 
xt_alloc_entry_offsets unsigned int * xt_alloc_entry_offsets ( unsigned int ) 
xt_find_jump_offset t#bool xt_find_jump_offset ( const unsigned int * , unsigned int , unsigned int ) 
xt_check_target int xt_check_target ( s#xt_tgchk_param * , unsigned int , t#u_int8_t , t#bool ) 
s#xt_counters_info struct xt_counters_info { char name [ 32 ] ; unsigned int num_counters ; s#xt_counters counters [ 0 ] ; } 
xt_copy_counters_from_user void * xt_copy_counters_from_user ( const void * , unsigned int , s#xt_counters_info * , t#bool ) 
xt_compat_target_offset int xt_compat_target_offset ( const s#xt_target * ) 
xt_compat_target_from_user void xt_compat_target_from_user ( s#xt_entry_target * , void * * , unsigned int * ) 
xt_compat_target_to_user int xt_compat_target_to_user ( const s#xt_entry_target * , void * * , unsigned int * ) 
xt_alloc_table_info s#xt_table_info * xt_alloc_table_info ( unsigned int ) 
xt_free_table_info void xt_free_table_info ( s#xt_table_info * ) 
xt_find_table_lock s#xt_table * xt_find_table_lock ( s#net * , t#u_int8_t , const char * ) 
xt_table_unlock void xt_table_unlock ( s#xt_table * ) 
xt_compat_lock void xt_compat_lock ( t#u_int8_t ) 
xt_compat_unlock void xt_compat_unlock ( t#u_int8_t ) 
xt_recseq extern __attribute__ ( ( section ( ".data..percpu" "" ) ) ) __typeof__ ( t#seqcount_t ) xt_recseq 
xt_tee_enabled extern s#static_key xt_tee_enabled 
xt_counters_alloc s#xt_counters * xt_counters_alloc ( unsigned int ) 
xt_replace_table s#xt_table_info * xt_replace_table ( s#xt_table * , unsigned int , s#xt_table_info * , int * ) 
xt_register_table s#xt_table * xt_register_table ( s#net * , const s#xt_table * , s#xt_table_info * , s#xt_table_info * ) 
xt_unregister_table void * xt_unregister_table ( s#xt_table * ) 
xt_hook_ops_alloc s#nf_hook_ops * xt_hook_ops_alloc ( const s#xt_table * , t#nf_hookfn * ) 
xt_proto_init int xt_proto_init ( s#net * , t#u_int8_t ) 
xt_proto_fini void xt_proto_fini ( s#net * , t#u_int8_t ) 
s#xt_percpu_counter_alloc_state struct xt_percpu_counter_alloc_state { unsigned int off ; const char * mem ; } 
xt_percpu_counter_alloc t#bool xt_percpu_counter_alloc ( s#xt_percpu_counter_alloc_state * , s#xt_counters * ) 
xt_percpu_counter_free void xt_percpu_counter_free ( s#xt_counters * ) 

/* net/netfilter/xt_RATEEST.o */
s#gnet_estimator struct gnet_estimator { signed char interval ; unsigned char ewma_log ; } 
s##net_rate_estimator
s#xt_rateest struct xt_rateest { s#gnet_stats_basic_packed bstats ; t#spinlock_t lock ; unsigned int refcnt ; s#hlist_node list ; char name [ 16 ] ; s#gnet_estimator params ; s#callback_head rcu ; s#net_rate_estimator * rate_est ; } 
xt_rateest_lookup s#xt_rateest * xt_rateest_lookup ( const char * ) 
xt_rateest_put void xt_rateest_put ( s#xt_rateest * ) 

/* net/netlabel/netlabel_calipso.o */
s#calipso_doi struct calipso_doi { t#u32 doi ; t#u32 type ; t#atomic_t refcount ; s#list_head list ; s#callback_head rcu ; } 
s#netlbl_audit struct netlbl_audit { t#u32 secid ; t#kuid_t loginuid ; unsigned int sessionid ; } 
s##posix_acl
s##vfsmount
s##module
s##device_private
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##kmem_cache
s##fs_pin
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##sec_path
s##workqueue_struct
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##l3mdev_ops
s##ndisc_ops
s##xfrm_state
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##xt_table
s##inet_hashinfo
s##fib_notifier_ops
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##lwtunnel_state
s##rtable
s##dn_route
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##mempolicy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##kernfs_open_node
s##kernfs_iattrs
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##timewait_sock_ops
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sock_reuseport
s#netlbl_lsm_cache struct netlbl_lsm_cache { t#atomic_t refcount ; void ( * free ) ( const void * ) ; void * data ; } 
s#netlbl_lsm_catmap struct netlbl_lsm_catmap { t#u32 startbit ; t#u64 bitmap [ 4 ] ; s#netlbl_lsm_catmap * next ; } 
s#netlbl_lsm_secattr struct netlbl_lsm_secattr { t#u32 flags ; t#u32 type ; char * domain ; s#netlbl_lsm_cache * cache ; struct { struct { s#netlbl_lsm_catmap * cat ; t#u32 lvl ; } mls ; t#u32 secid ; } attr ; } 
s#netlbl_calipso_ops struct netlbl_calipso_ops { int ( * doi_add ) ( s#calipso_doi * , s#netlbl_audit * ) ; void ( * doi_free ) ( s#calipso_doi * ) ; int ( * doi_remove ) ( t#u32 , s#netlbl_audit * ) ; s#calipso_doi * ( * doi_getdef ) ( t#u32 ) ; void ( * doi_putdef ) ( s#calipso_doi * ) ; int ( * doi_walk ) ( t#u32 * , int ( * ) ( s#calipso_doi * , void * ) , void * ) ; int ( * sock_getattr ) ( s#sock * , s#netlbl_lsm_secattr * ) ; int ( * sock_setattr ) ( s#sock * , const s#calipso_doi * , const s#netlbl_lsm_secattr * ) ; void ( * sock_delattr ) ( s#sock * ) ; int ( * req_setattr ) ( s#request_sock * , const s#calipso_doi * , const s#netlbl_lsm_secattr * ) ; void ( * req_delattr ) ( s#request_sock * ) ; int ( * opt_getattr ) ( const unsigned char * , s#netlbl_lsm_secattr * ) ; unsigned char * ( * skbuff_optptr ) ( const s#sk_buff * ) ; int ( * skbuff_setattr ) ( s#sk_buff * , const s#calipso_doi * , const s#netlbl_lsm_secattr * ) ; int ( * skbuff_delattr ) ( s#sk_buff * ) ; void ( * cache_invalidate ) ( void ) ; int ( * cache_add ) ( const unsigned char * , const s#netlbl_lsm_secattr * ) ; } 
netlbl_calipso_ops_register const s#netlbl_calipso_ops * netlbl_calipso_ops_register ( const s#netlbl_calipso_ops * ) 

/* net/netlabel/netlabel_kapi.o */
netlbl_catmap_walk int netlbl_catmap_walk ( s#netlbl_lsm_catmap * , t#u32 ) 
netlbl_catmap_setbit int netlbl_catmap_setbit ( s#netlbl_lsm_catmap * * , t#u32 , t#gfp_t ) 
netlbl_bitmap_walk int netlbl_bitmap_walk ( const unsigned char * , t#u32 , t#u32 , t#u8 ) 
netlbl_bitmap_setbit void netlbl_bitmap_setbit ( unsigned char * , t#u32 , t#u8 ) 
s##audit_buffer
netlbl_audit_start s#audit_buffer * netlbl_audit_start ( int , s#netlbl_audit * ) 

/* net/netlink/af_netlink.o */
s##listeners
s##posix_acl
s##vfsmount
s##device_private
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##kmem_cache
s##fs_pin
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##sec_path
s##workqueue_struct
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##l3mdev_ops
s##ndisc_ops
s##xfrm_state
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##xt_table
s##inet_hashinfo
s##fib_notifier_ops
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##lwtunnel_state
s##rtable
s##dn_route
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##eventfd_ctx
s##mempolicy
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##request_sock_ops
s##timewait_sock_ops
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s#netlink_table struct netlink_table { s#rhashtable hash ; s#hlist_head mc_list ; s#listeners * listeners ; unsigned int flags ; unsigned int groups ; s#mutex * cb_mutex ; s#module * module ; int ( * bind ) ( s#net * , int ) ; void ( * unbind ) ( s#net * , int ) ; t#bool ( * compare ) ( s#net * , s#sock * ) ; int registered ; } 
nl_table extern s#netlink_table * nl_table 
nl_table_lock extern t#rwlock_t nl_table_lock 
s#netlink_tap struct netlink_tap { s#net_device * dev ; s#module * module ; s#list_head list ; } 
netlink_add_tap extern int netlink_add_tap ( s#netlink_tap * ) 
netlink_remove_tap extern int netlink_remove_tap ( s#netlink_tap * ) 
__netlink_ns_capable t#bool __netlink_ns_capable ( const s#netlink_skb_parms * , s#user_namespace * , int ) 
netlink_ns_capable t#bool netlink_ns_capable ( const s#sk_buff * , s#user_namespace * , int ) 
netlink_capable t#bool netlink_capable ( const s#sk_buff * , int ) 
netlink_net_capable t#bool netlink_net_capable ( const s#sk_buff * , int ) 
netlink_unicast extern int netlink_unicast ( s#sock * , s#sk_buff * , t#__u32 , int ) 
netlink_has_listeners extern int netlink_has_listeners ( s#sock * , unsigned int ) 
netlink_broadcast_filtered extern int netlink_broadcast_filtered ( s#sock * , s#sk_buff * , t#__u32 , t#__u32 , t#gfp_t , int ( * ) ( s#sock * , s#sk_buff * , void * ) , void * ) 
netlink_broadcast extern int netlink_broadcast ( s#sock * , s#sk_buff * , t#__u32 , t#__u32 , t#gfp_t ) 
netlink_set_err extern int netlink_set_err ( s#sock * , t#__u32 , t#__u32 , int ) 
s#netlink_kernel_cfg struct netlink_kernel_cfg { unsigned int groups ; unsigned int flags ; void ( * input ) ( s#sk_buff * ) ; s#mutex * cb_mutex ; int ( * bind ) ( s#net * , int ) ; void ( * unbind ) ( s#net * , int ) ; t#bool ( * compare ) ( s#net * , s#sock * ) ; } 
__netlink_kernel_create extern s#sock * __netlink_kernel_create ( s#net * , int , s#module * , s#netlink_kernel_cfg * ) 
netlink_kernel_release extern void netlink_kernel_release ( s#sock * ) 
__nlmsg_put s#nlmsghdr * __nlmsg_put ( s#sk_buff * , t#u32 , t#u32 , int , int , int ) 
s#netlink_dump_control struct netlink_dump_control { int ( * start ) ( s#netlink_callback * ) ; int ( * dump ) ( s#sk_buff * , s#netlink_callback * ) ; int ( * done ) ( s#netlink_callback * ) ; void * data ; s#module * module ; t#u16 min_dump_alloc ; } 
__netlink_dump_start extern int __netlink_dump_start ( s#sock * , s#sk_buff * , const s#nlmsghdr * , s#netlink_dump_control * ) 
netlink_ack extern void netlink_ack ( s#sk_buff * , s#nlmsghdr * , int , const s#netlink_ext_ack * ) 
netlink_rcv_skb int netlink_rcv_skb ( s#sk_buff * , int ( * ) ( s#sk_buff * , s#nlmsghdr * , s#netlink_ext_ack * ) ) 
nlmsg_notify int nlmsg_notify ( s#sock * , s#sk_buff * , t#u32 , unsigned int , int , t#gfp_t ) 
netlink_register_notifier extern int netlink_register_notifier ( s#notifier_block * ) 
netlink_unregister_notifier extern int netlink_unregister_notifier ( s#notifier_block * ) 

/* net/netlink/genetlink.o */
genl_lock extern void genl_lock ( void ) 
genl_unlock extern void genl_unlock ( void ) 
s##proc_ns_operations
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##kmem_cache
s##request_sock_ops
s##timewait_sock_ops
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##bpf_prog_aux
s##xfrm_policy
s##workqueue_struct
s##xfrm_state
s##lwtunnel_state
s##rtable
s##rt6_info
s##dn_route
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_dir_entry
s##uevent_sock
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##xt_table
s##fib_notifier_ops
s##ipv6_devconf
s##rt6_statistics
s##fib6_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##nf_hook_entry
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##udp_tunnel_info
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##l3mdev_ops
s##ndisc_ops
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
s##sec_path
s#genl_ops struct genl_ops { const s#nla_policy * policy ; int ( * doit ) ( s#sk_buff * , s#genl_info * ) ; int ( * start ) ( s#netlink_callback * ) ; int ( * dumpit ) ( s#sk_buff * , s#netlink_callback * ) ; int ( * done ) ( s#netlink_callback * ) ; t#u8 cmd ; t#u8 internal_flags ; t#u8 flags ; } 
s#genl_multicast_group struct genl_multicast_group { char name [ 16 ] ; } 
s#genl_family struct genl_family { int id ; unsigned int hdrsize ; char name [ 16 ] ; unsigned int version ; unsigned int maxattr ; t#bool netnsok ; t#bool parallel_ops ; int ( * pre_doit ) ( const s#genl_ops * , s#sk_buff * , s#genl_info * ) ; void ( * post_doit ) ( const s#genl_ops * , s#sk_buff * , s#genl_info * ) ; int ( * mcast_bind ) ( s#net * , int ) ; void ( * mcast_unbind ) ( s#net * , int ) ; s#nlattr * * attrbuf ; const s#genl_ops * ops ; const s#genl_multicast_group * mcgrps ; unsigned int n_ops ; unsigned int n_mcgrps ; unsigned int mcgrp_offset ; s#module * module ; } 
genl_register_family int genl_register_family ( s#genl_family * ) 
genl_unregister_family int genl_unregister_family ( const s#genl_family * ) 
genlmsg_put void * genlmsg_put ( s#sk_buff * , t#u32 , t#u32 , const s#genl_family * , int , t#u8 ) 
genl_family_attrbuf s#nlattr * * genl_family_attrbuf ( const s#genl_family * ) 
genlmsg_multicast_allns int genlmsg_multicast_allns ( const s#genl_family * , s#sk_buff * , t#u32 , unsigned int , t#gfp_t ) 
genl_notify void genl_notify ( const s#genl_family * , s#sk_buff * , s#genl_info * , t#u32 , t#gfp_t ) 

/* net/openvswitch/vport.o */
e#ovs_vport_type enum ovs_vport_type { OVS_VPORT_TYPE_UNSPEC , OVS_VPORT_TYPE_NETDEV , OVS_VPORT_TYPE_INTERNAL , OVS_VPORT_TYPE_GRE , OVS_VPORT_TYPE_VXLAN , OVS_VPORT_TYPE_GENEVE , __OVS_VPORT_TYPE_MAX } 
s##posix_acl
s##vfsmount
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##prot_inuse
s##ipv4_devconf
s##kmem_cache
s##xt_table
s##inet_hashinfo
s##workqueue_struct
s##xfrm_state
s##uncached_list
s##dn_route
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##nf_hook_entry
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##netns_ipvs
s##mpls_route
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##mempolicy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##blk_plug
s##reclaim_state
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##udp_table
s##raw_hashinfo
s##bpf_prog_aux
s##xfrm_policy
s##sock_reuseport
s##sec_path
s##udp_tunnel_info
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
s##flex_array_part
s#table_instance struct table_instance { s#flex_array * buckets ; unsigned int n_buckets ; s#callback_head rcu ; int node_ver ; t#u32 hash_seed ; t#bool keep_flows ; } 
s#flow_table struct flow_table { s#table_instance * ti ; s#table_instance * ufid_ti ; s#list_head mask_list ; unsigned long last_rehash ; unsigned int count ; unsigned int ufid_count ; } 
s#dp_stats_percpu struct dp_stats_percpu { t#u64 n_hit ; t#u64 n_missed ; t#u64 n_lost ; t#u64 n_mask_hit ; s#u64_stats_sync syncp ; } 
s#datapath struct datapath { s#callback_head rcu ; s#list_head list_node ; s#flow_table table ; s#hlist_head * ports ; s#dp_stats_percpu * stats_percpu ; t#possible_net_t net ; t#u32 user_features ; t#u32 max_headroom ; } 
s#vport_portids struct vport_portids { s#reciprocal_value rn_ids ; s#callback_head rcu ; t#u32 n_ids ; t#u32 ids [ ] ; } 
s#vport struct vport { s#net_device * dev ; s#datapath * dp ; s#vport_portids * upcall_portids ; t#u16 port_no ; s#hlist_node hash_node ; s#hlist_node dp_hash_node ; const s#vport_ops * ops ; s#list_head detach_list ; s#callback_head rcu ; } 
s#vport_parms struct vport_parms { const char * name ; e#ovs_vport_type type ; s#nlattr * options ; s#datapath * dp ; t#u16 port_no ; s#nlattr * upcall_portids ; } 
s#vport_ops struct vport_ops { e#ovs_vport_type type ; s#vport * ( * create ) ( const s#vport_parms * ) ; void ( * destroy ) ( s#vport * ) ; int ( * set_options ) ( s#vport * , s#nlattr * ) ; int ( * get_options ) ( const s#vport * , s#sk_buff * ) ; t#netdev_tx_t ( * send ) ( s#sk_buff * ) ; s#module * owner ; s#list_head list ; } 
__ovs_vport_ops_register int __ovs_vport_ops_register ( s#vport_ops * ) 
ovs_vport_ops_unregister void ovs_vport_ops_unregister ( s#vport_ops * ) 
ovs_vport_alloc s#vport * ovs_vport_alloc ( int , const s#vport_ops * , const s#vport_parms * ) 
ovs_vport_free void ovs_vport_free ( s#vport * ) 

/* net/openvswitch/vport-netdev.o */
s##posix_acl
s##vfsmount
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##prot_inuse
s##ipv4_devconf
s##kmem_cache
s##xt_table
s##inet_hashinfo
s##workqueue_struct
s##xfrm_state
s##uncached_list
s##dn_route
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##nf_hook_entry
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##netns_ipvs
s##mpls_route
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##mempolicy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##blk_plug
s##reclaim_state
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##udp_table
s##raw_hashinfo
s##bpf_prog_aux
s##xfrm_policy
s##sock_reuseport
s##sec_path
s##udp_tunnel_info
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
s##flex_array_part
ovs_netdev_link s#vport * ovs_netdev_link ( s#vport * , const char * ) 
ovs_netdev_tunnel_destroy void ovs_netdev_tunnel_destroy ( s#vport * ) 

/* net/packet/af_packet.o */
fanout_mutex extern s#mutex fanout_mutex 

/* net/psample/psample.o */
s##proc_ns_operations
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##workqueue_struct
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##l3mdev_ops
s##ndisc_ops
s##xfrm_state
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##phy_device
s##sfp_bus
s##sec_path
s##kmem_cache
s##request_sock_ops
s##timewait_sock_ops
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##lwtunnel_state
s##rtable
s##rt6_info
s##dn_route
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_dir_entry
s##uevent_sock
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##xt_table
s##fib_notifier_ops
s##ipv6_devconf
s##rt6_statistics
s##fib6_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s#psample_group struct psample_group { s#list_head list ; s#net * net ; t#u32 group_num ; t#u32 refcount ; t#u32 seq ; } 
psample_group_get s#psample_group * psample_group_get ( s#net * , t#u32 ) 
psample_group_put void psample_group_put ( s#psample_group * ) 
psample_sample_packet void psample_sample_packet ( s#psample_group * , s#sk_buff * , t#u32 , int , int , t#u32 ) 

/* net/rds/cong.o */
s#rds_cong_map struct rds_cong_map { s#rb_node m_rb_node ; t#__be32 m_addr ; t#wait_queue_head_t m_waitq ; s#list_head m_conn_list ; unsigned long m_page_addrs [ ( ( ( ( ( ( 65536 / 8 ) ) ) + ( ( typeof ( ( ( 65536 / 8 ) ) ) ) ( ( ( ( 1UL ) << 12 ) ) ) - 1 ) ) & ~ ( ( typeof ( ( ( 65536 / 8 ) ) ) ) ( ( ( ( 1UL ) << 12 ) ) ) - 1 ) ) / ( ( 1UL ) << 12 ) ) ] ; } 
rds_cong_map_updated void rds_cong_map_updated ( s#rds_cong_map * , t#uint64_t ) 

/* net/rds/connection.o */
s##posix_acl
s##vfsmount
s##device_private
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##sec_path
s##workqueue_struct
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##kmem_cache
s##xfrm_state
s##lwtunnel_state
s##uncached_list
s##rt6_info
s##dn_route
s##prefix_info
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##ip_mc_list
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
s##prot_inuse
s##xt_table
s##rt6_statistics
s##fib6_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##eventfd_ctx
s##mempolicy
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s#rds_header struct rds_header { t#__be64 h_sequence ; t#__be64 h_ack ; t#__be32 h_len ; t#__be16 h_sport ; t#__be16 h_dport ; t#u8 h_flags ; t#u8 h_credit ; t#u8 h_padding [ 4 ] ; t#__sum16 h_csum ; t#u8 h_exthdr [ 16 ] ; } 
t#rds_rdma_cookie_t typedef t#__u64 rds_rdma_cookie_t 
E#RDS_MSG_RX_DGRAM_TRACE_MAX ( 0 ) + 3 
s#rds_incoming struct rds_incoming { t#atomic_t i_refcount ; s#list_head i_item ; s#rds_connection * i_conn ; s#rds_conn_path * i_conn_path ; s#rds_header i_hdr ; unsigned long i_rx_jiffies ; t#__be32 i_saddr ; t#rds_rdma_cookie_t i_rdma_cookie ; s#timeval i_rx_tstamp ; t#u64 i_rx_lat_trace [ ( E#RDS_MSG_RX_DGRAM_TRACE_MAX + 1 ) ] ; } 
s#rds_sock struct rds_sock { s#sock rs_sk ; t#u64 rs_user_addr ; t#u64 rs_user_bytes ; s#rhash_head rs_bound_node ; t#u64 rs_bound_key ; t#__be32 rs_bound_addr ; t#__be32 rs_conn_addr ; t#__be16 rs_bound_port ; t#__be16 rs_conn_port ; s#rds_transport * rs_transport ; s#rds_connection * rs_conn ; int rs_congested ; int rs_seen_congestion ; t#spinlock_t rs_lock ; s#list_head rs_send_queue ; t#u32 rs_snd_bytes ; int rs_rcv_bytes ; s#list_head rs_notify_queue ; t#uint64_t rs_cong_mask ; t#uint64_t rs_cong_notify ; s#list_head rs_cong_list ; unsigned long rs_cong_track ; t#rwlock_t rs_recv_lock ; s#list_head rs_recv_queue ; s#list_head rs_item ; t#spinlock_t rs_rdma_lock ; s#rb_root rs_rdma_keys ; unsigned char rs_recverr , rs_cong_monitor ; t#u32 rs_hash_initval ; t#u8 rs_rx_traces ; t#u8 rs_rx_trace [ E#RDS_MSG_RX_DGRAM_TRACE_MAX ] ; } 
s#rds_notifier struct rds_notifier { s#list_head n_list ; t#uint64_t n_user_token ; int n_status ; } 
s#rds_mr struct rds_mr { s#rb_node r_rb_node ; t#atomic_t r_refcount ; t#u32 r_key ; unsigned int r_use_once : 1 ; unsigned int r_invalidate : 1 ; unsigned int r_write : 1 ; unsigned long r_state ; s#rds_sock * r_sock ; s#rds_transport * r_trans ; void * r_trans_private ; } 
s#rm_atomic_op struct rm_atomic_op { int op_type ; union { struct { t#uint64_t compare ; t#uint64_t swap ; t#uint64_t compare_mask ; t#uint64_t swap_mask ; } op_m_cswp ; struct { t#uint64_t add ; t#uint64_t nocarry_mask ; } op_m_fadd ; } ; t#u32 op_rkey ; t#u64 op_remote_addr ; unsigned int op_notify : 1 ; unsigned int op_recverr : 1 ; unsigned int op_mapped : 1 ; unsigned int op_silent : 1 ; unsigned int op_active : 1 ; s#scatterlist * op_sg ; s#rds_notifier * op_notifier ; s#rds_mr * op_rdma_mr ; } 
s#rm_rdma_op struct rm_rdma_op { t#u32 op_rkey ; t#u64 op_remote_addr ; unsigned int op_write : 1 ; unsigned int op_fence : 1 ; unsigned int op_notify : 1 ; unsigned int op_recverr : 1 ; unsigned int op_mapped : 1 ; unsigned int op_silent : 1 ; unsigned int op_active : 1 ; unsigned int op_bytes ; unsigned int op_nents ; unsigned int op_count ; s#scatterlist * op_sg ; s#rds_notifier * op_notifier ; s#rds_mr * op_rdma_mr ; } 
s#rm_data_op struct rm_data_op { unsigned int op_active : 1 ; unsigned int op_notify : 1 ; unsigned int op_nents ; unsigned int op_count ; unsigned int op_dmasg ; unsigned int op_dmaoff ; s#scatterlist * op_sg ; } 
s#rds_message struct rds_message { t#atomic_t m_refcount ; s#list_head m_sock_item ; s#list_head m_conn_item ; s#rds_incoming m_inc ; t#u64 m_ack_seq ; t#__be32 m_daddr ; unsigned long m_flags ; t#spinlock_t m_rs_lock ; t#wait_queue_head_t m_flush_wait ; s#rds_sock * m_rs ; t#rds_rdma_cookie_t m_rdma_cookie ; unsigned int m_used_sgs ; unsigned int m_total_sgs ; void * m_final_op ; struct { s#rm_atomic_op atomic ; s#rm_rdma_op rdma ; s#rm_data_op data ; } ; } 
s#rds_conn_path struct rds_conn_path { s#rds_connection * cp_conn ; s#rds_message * cp_xmit_rm ; unsigned long cp_xmit_sg ; unsigned int cp_xmit_hdr_off ; unsigned int cp_xmit_data_off ; unsigned int cp_xmit_atomic_sent ; unsigned int cp_xmit_rdma_sent ; unsigned int cp_xmit_data_sent ; t#spinlock_t cp_lock ; t#u64 cp_next_tx_seq ; s#list_head cp_send_queue ; s#list_head cp_retrans ; t#u64 cp_next_rx_seq ; void * cp_transport_data ; t#atomic_t cp_state ; unsigned long cp_send_gen ; unsigned long cp_flags ; unsigned long cp_reconnect_jiffies ; s#delayed_work cp_send_w ; s#delayed_work cp_recv_w ; s#delayed_work cp_conn_w ; s#work_struct cp_down_w ; s#mutex cp_cm_lock ; t#wait_queue_head_t cp_waitq ; unsigned int cp_unacked_packets ; unsigned int cp_unacked_bytes ; unsigned int cp_outgoing : 1 , cp_pad_to_32 : 31 ; unsigned int cp_index ; } 
s##ib_uverbs_file
s##ib_umem_odp
s##uverbs_api_object
s##ib_pkey_cache
s##ib_gid_table
s##iw_cm_verbs
s##uverbs_attr_bundle
s##uverbs_object_tree_def
s##rds_info_iterator
s#rds_transport struct rds_transport { char t_name [ 16 ] ; s#list_head t_item ; s#module * t_owner ; unsigned int t_prefer_loopback : 1 , t_mp_capable : 1 ; unsigned int t_type ; int ( * laddr_check ) ( s#net * , t#__be32 ) ; int ( * conn_alloc ) ( s#rds_connection * , t#gfp_t ) ; void ( * conn_free ) ( void * ) ; int ( * conn_path_connect ) ( s#rds_conn_path * ) ; void ( * conn_path_shutdown ) ( s#rds_conn_path * ) ; void ( * xmit_path_prepare ) ( s#rds_conn_path * ) ; void ( * xmit_path_complete ) ( s#rds_conn_path * ) ; int ( * xmit ) ( s#rds_connection * , s#rds_message * , unsigned int , unsigned int , unsigned int ) ; int ( * xmit_rdma ) ( s#rds_connection * , s#rm_rdma_op * ) ; int ( * xmit_atomic ) ( s#rds_connection * , s#rm_atomic_op * ) ; int ( * recv_path ) ( s#rds_conn_path * ) ; int ( * inc_copy_to_user ) ( s#rds_incoming * , s#iov_iter * ) ; void ( * inc_free ) ( s#rds_incoming * ) ; int ( * cm_handle_connect ) ( s#rdma_cm_id * , s#rdma_cm_event * ) ; int ( * cm_initiate_connect ) ( s#rdma_cm_id * ) ; void ( * cm_connect_complete ) ( s#rds_connection * , s#rdma_cm_event * ) ; unsigned int ( * stats_info_copy ) ( s#rds_info_iterator * , unsigned int ) ; void ( * exit ) ( void ) ; void * ( * get_mr ) ( s#scatterlist * , unsigned long , s#rds_sock * , t#u32 * ) ; void ( * sync_mr ) ( void * , int ) ; void ( * free_mr ) ( void * , int ) ; void ( * flush_mrs ) ( void ) ; } 
s#rds_connection struct rds_connection { s#hlist_node c_hash_node ; t#__be32 c_laddr ; t#__be32 c_faddr ; unsigned int c_loopback : 1 , c_ping_triggered : 1 , c_destroy_in_prog : 1 , c_pad_to_32 : 29 ; int c_npaths ; s#rds_connection * c_passive ; s#rds_transport * c_trans ; s#rds_cong_map * c_lcong ; s#rds_cong_map * c_fcong ; unsigned int c_version ; t#possible_net_t c_net ; s#list_head c_map_item ; unsigned long c_map_queued ; s#rds_conn_path c_path [ 8 ] ; t#wait_queue_head_t c_hs_waitq ; t#u32 c_my_gen_num ; t#u32 c_peer_gen_num ; } 
rds_conn_create s#rds_connection * rds_conn_create ( s#net * , t#__be32 , t#__be32 , s#rds_transport * , t#gfp_t ) 
rds_conn_create_outgoing s#rds_connection * rds_conn_create_outgoing ( s#net * , t#__be32 , t#__be32 , s#rds_transport * , t#gfp_t ) 
rds_conn_destroy void rds_conn_destroy ( s#rds_connection * ) 
s#rds_info_lengths struct rds_info_lengths { unsigned int nr ; unsigned int each ; } 
rds_for_each_conn_info void rds_for_each_conn_info ( s#socket * , unsigned int , s#rds_info_iterator * , s#rds_info_lengths * , int ( * ) ( s#rds_connection * , void * ) , t#size_t ) 
rds_conn_path_drop void rds_conn_path_drop ( s#rds_conn_path * ) 
rds_conn_drop void rds_conn_drop ( s#rds_connection * ) 
rds_conn_path_connect_if_down void rds_conn_path_connect_if_down ( s#rds_conn_path * ) 
rds_conn_connect_if_down void rds_conn_connect_if_down ( s#rds_connection * ) 

/* net/rds/info.o */
s##vfsmount
s##posix_acl
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##xol_area
s##pid_namespace
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##sec_path
s##workqueue_struct
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##kmem_cache
s##xfrm_state
s##lwtunnel_state
s##uncached_list
s##rt6_info
s##dn_route
s##prefix_info
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##ip_mc_list
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##phy_device
s##sfp_bus
s##prot_inuse
s##xt_table
s##inet_hashinfo
s##rt6_statistics
s##fib6_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##swap_info_struct
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##mtd_info
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##rds_info_iterator
t#rds_info_func typedef void ( * rds_info_func ) ( s#socket * , unsigned int , s#rds_info_iterator * , s#rds_info_lengths * ) 
rds_info_register_func void rds_info_register_func ( int , t#rds_info_func ) 
rds_info_deregister_func void rds_info_deregister_func ( int , t#rds_info_func ) 
rds_info_copy void rds_info_copy ( s#rds_info_iterator * , void * , unsigned long ) 

/* net/rds/message.o */
s##posix_acl
s##vfsmount
s##device_private
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##sec_path
s##workqueue_struct
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##kmem_cache
s##xfrm_state
s##lwtunnel_state
s##uncached_list
s##rt6_info
s##dn_route
s##prefix_info
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##ip_mc_list
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
s##prot_inuse
s##xt_table
s##inet_hashinfo
s##rt6_statistics
s##fib6_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##eventfd_ctx
s##mempolicy
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##ib_uverbs_file
s##ib_umem_odp
s##uverbs_api_object
s##ib_pkey_cache
s##ib_gid_table
s##iw_cm_verbs
s##uverbs_attr_bundle
s##uverbs_object_tree_def
s##rds_info_iterator
rds_message_addref void rds_message_addref ( s#rds_message * ) 
rds_message_put void rds_message_put ( s#rds_message * ) 
rds_message_populate_header void rds_message_populate_header ( s#rds_header * , t#__be16 , t#__be16 , t#u64 ) 
rds_message_add_extension int rds_message_add_extension ( s#rds_header * , unsigned int , const void * , unsigned int ) 
rds_message_add_rdma_dest_extension int rds_message_add_rdma_dest_extension ( s#rds_header * , t#u32 , t#u32 ) 
rds_message_unmapped void rds_message_unmapped ( s#rds_message * ) 

/* net/rds/page.o */
rds_page_remainder_alloc int rds_page_remainder_alloc ( s#scatterlist * , unsigned long , t#gfp_t ) 

/* net/rds/recv.o */
s##posix_acl
s##vfsmount
s##device_private
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##sec_path
s##workqueue_struct
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##kmem_cache
s##xfrm_state
s##lwtunnel_state
s##uncached_list
s##rt6_info
s##dn_route
s##prefix_info
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##ip_mc_list
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
s##prot_inuse
s##xt_table
s##inet_hashinfo
s##rt6_statistics
s##fib6_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##eventfd_ctx
s##mempolicy
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##ib_uverbs_file
s##ib_umem_odp
s##uverbs_api_object
s##ib_pkey_cache
s##ib_gid_table
s##iw_cm_verbs
s##uverbs_attr_bundle
s##uverbs_object_tree_def
s##rds_info_iterator
rds_inc_init void rds_inc_init ( s#rds_incoming * , s#rds_connection * , t#__be32 ) 
rds_inc_path_init void rds_inc_path_init ( s#rds_incoming * , s#rds_conn_path * , t#__be32 ) 
rds_inc_put void rds_inc_put ( s#rds_incoming * ) 
rds_recv_incoming void rds_recv_incoming ( s#rds_connection * , t#__be32 , t#__be32 , s#rds_incoming * , t#gfp_t ) 

/* net/rds/send.o */
s##posix_acl
s##vfsmount
s##device_private
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##sec_path
s##workqueue_struct
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##kmem_cache
s##xfrm_state
s##lwtunnel_state
s##uncached_list
s##rt6_info
s##dn_route
s##prefix_info
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##ip_mc_list
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
s##prot_inuse
s##xt_table
s##inet_hashinfo
s##rt6_statistics
s##fib6_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##eventfd_ctx
s##mempolicy
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##ib_uverbs_file
s##ib_umem_odp
s##uverbs_api_object
s##ib_pkey_cache
s##ib_gid_table
s##iw_cm_verbs
s##uverbs_attr_bundle
s##uverbs_object_tree_def
s##rds_info_iterator
rds_send_path_reset void rds_send_path_reset ( s#rds_conn_path * ) 
rds_send_xmit int rds_send_xmit ( s#rds_conn_path * ) 
rds_rdma_send_complete void rds_rdma_send_complete ( s#rds_message * , int ) 
rds_atomic_send_complete void rds_atomic_send_complete ( s#rds_message * , int ) 
t#is_acked_func typedef int ( * is_acked_func ) ( s#rds_message * , t#uint64_t ) 
rds_send_path_drop_acked void rds_send_path_drop_acked ( s#rds_conn_path * , t#u64 , t#is_acked_func ) 
rds_send_drop_acked void rds_send_drop_acked ( s#rds_connection * , t#u64 , t#is_acked_func ) 

/* net/rds/stats.o */
s#rds_statistics struct rds_statistics { t#uint64_t s_conn_reset ; t#uint64_t s_recv_drop_bad_checksum ; t#uint64_t s_recv_drop_old_seq ; t#uint64_t s_recv_drop_no_sock ; t#uint64_t s_recv_drop_dead_sock ; t#uint64_t s_recv_deliver_raced ; t#uint64_t s_recv_delivered ; t#uint64_t s_recv_queued ; t#uint64_t s_recv_immediate_retry ; t#uint64_t s_recv_delayed_retry ; t#uint64_t s_recv_ack_required ; t#uint64_t s_recv_rdma_bytes ; t#uint64_t s_recv_ping ; t#uint64_t s_send_queue_empty ; t#uint64_t s_send_queue_full ; t#uint64_t s_send_lock_contention ; t#uint64_t s_send_lock_queue_raced ; t#uint64_t s_send_immediate_retry ; t#uint64_t s_send_delayed_retry ; t#uint64_t s_send_drop_acked ; t#uint64_t s_send_ack_required ; t#uint64_t s_send_queued ; t#uint64_t s_send_rdma ; t#uint64_t s_send_rdma_bytes ; t#uint64_t s_send_pong ; t#uint64_t s_page_remainder_hit ; t#uint64_t s_page_remainder_miss ; t#uint64_t s_copy_to_user ; t#uint64_t s_copy_from_user ; t#uint64_t s_cong_update_queued ; t#uint64_t s_cong_update_received ; t#uint64_t s_cong_send_error ; t#uint64_t s_cong_send_blocked ; t#uint64_t s_recv_bytes_added_to_socket ; t#uint64_t s_recv_bytes_removed_from_socket ; } 
rds_stats extern __attribute__ ( ( section ( ".data..percpu" "" ) ) ) __typeof__ ( s#rds_statistics ) rds_stats 
s##rds_info_iterator
rds_stats_info_copy void rds_stats_info_copy ( s#rds_info_iterator * , t#uint64_t * , const char * const * , t#size_t ) 

/* net/rds/threads.o */
s##workqueue_struct
rds_wq extern s#workqueue_struct * rds_wq 
s##posix_acl
s##vfsmount
s##device_private
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##sec_path
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##kmem_cache
s##xfrm_state
s##lwtunnel_state
s##uncached_list
s##rt6_info
s##dn_route
s##prefix_info
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##ip_mc_list
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
s##prot_inuse
s##xt_table
s##inet_hashinfo
s##rt6_statistics
s##fib6_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##eventfd_ctx
s##mempolicy
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##ib_uverbs_file
s##ib_umem_odp
s##uverbs_api_object
s##ib_pkey_cache
s##ib_gid_table
s##iw_cm_verbs
s##uverbs_attr_bundle
s##uverbs_object_tree_def
s##rds_info_iterator
rds_connect_path_complete void rds_connect_path_complete ( s#rds_conn_path * , int ) 
rds_connect_complete void rds_connect_complete ( s#rds_connection * ) 

/* net/rds/transport.o */
s##posix_acl
s##vfsmount
s##device_private
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##sec_path
s##workqueue_struct
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##kmem_cache
s##xfrm_state
s##lwtunnel_state
s##uncached_list
s##rt6_info
s##dn_route
s##prefix_info
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##ip_mc_list
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
s##prot_inuse
s##xt_table
s##inet_hashinfo
s##rt6_statistics
s##fib6_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##eventfd_ctx
s##mempolicy
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##ib_uverbs_file
s##ib_umem_odp
s##uverbs_api_object
s##ib_pkey_cache
s##ib_gid_table
s##iw_cm_verbs
s##uverbs_attr_bundle
s##uverbs_object_tree_def
s##rds_info_iterator
rds_trans_register void rds_trans_register ( s#rds_transport * ) 
rds_trans_unregister void rds_trans_unregister ( s#rds_transport * ) 

/* net/rfkill/core.o */
s##rfkill
rfkill_set_hw_state t#bool rfkill_set_hw_state ( s#rfkill * , t#bool ) 
rfkill_set_sw_state t#bool rfkill_set_sw_state ( s#rfkill * , t#bool ) 
rfkill_init_sw_state void rfkill_init_sw_state ( s#rfkill * , t#bool ) 
rfkill_set_states void rfkill_set_states ( s#rfkill * , t#bool , t#bool ) 
e#rfkill_type enum rfkill_type { RFKILL_TYPE_ALL = 0 , RFKILL_TYPE_WLAN , RFKILL_TYPE_BLUETOOTH , RFKILL_TYPE_UWB , RFKILL_TYPE_WIMAX , RFKILL_TYPE_WWAN , RFKILL_TYPE_GPS , RFKILL_TYPE_FM , RFKILL_TYPE_NFC , NUM_RFKILL_TYPES , } 
rfkill_find_type e#rfkill_type rfkill_find_type ( const char * ) 
rfkill_pause_polling void rfkill_pause_polling ( s#rfkill * ) 
rfkill_resume_polling void rfkill_resume_polling ( s#rfkill * ) 
rfkill_blocked t#bool rfkill_blocked ( s#rfkill * ) 
s##device_private
s##sock
s##seq_file
s##vfsmount
s##posix_acl
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##pipe_inode_info
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##fwnode_handle
s##iommu_group
s##iommu_fwspec
s#rfkill_ops struct rfkill_ops { void ( * poll ) ( s#rfkill * , void * ) ; void ( * query ) ( s#rfkill * , void * ) ; int ( * set_block ) ( void * , t#bool ) ; } 
rfkill_alloc s#rfkill * rfkill_alloc ( const char * , s#device * , const e#rfkill_type , const s#rfkill_ops * , void * ) 
rfkill_register int rfkill_register ( s#rfkill * ) 
rfkill_unregister void rfkill_unregister ( s#rfkill * ) 
rfkill_destroy void rfkill_destroy ( s#rfkill * ) 

/* net/sched/act_api.o */
s##posix_acl
s##vfsmount
s##device_private
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##sec_path
s##workqueue_struct
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##l3mdev_ops
s##ndisc_ops
s##xfrm_state
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##net_rate_estimator
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##kmem_cache
s##xt_table
s##inet_hashinfo
s##fib_notifier_ops
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##lwtunnel_state
s##rtable
s##dn_route
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##netns_ipvs
s##mpls_route
s##eventfd_ctx
s##mempolicy
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##request_sock_ops
s##timewait_sock_ops
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s#tc_action_ops struct tc_action_ops { s#list_head head ; char kind [ 16 ] ; t#__u32 type ; t#size_t size ; s#module * owner ; int ( * act ) ( s#sk_buff * , const s#tc_action * , s#tcf_result * ) ; int ( * dump ) ( s#sk_buff * , s#tc_action * , int , int ) ; void ( * cleanup ) ( s#tc_action * ) ; int ( * lookup ) ( s#net * , s#tc_action * * , t#u32 ) ; int ( * init ) ( s#net * , s#nlattr * , s#nlattr * , s#tc_action * * , int , int , t#bool , s#netlink_ext_ack * ) ; int ( * walk ) ( s#net * , s#sk_buff * , s#netlink_callback * , int , const s#tc_action_ops * , s#netlink_ext_ack * ) ; void ( * stats_update ) ( s#tc_action * , t#u64 , t#u32 , t#u64 , t#bool ) ; t#size_t ( * get_fill_size ) ( const s#tc_action * ) ; s#net_device * ( * get_dev ) ( const s#tc_action * ) ; void ( * put_dev ) ( s#net_device * ) ; } 
s#tcf_idrinfo struct tcf_idrinfo { s#mutex lock ; s#idr action_idr ; } 
s#tcf_t struct tcf_t { t#__u64 install ; t#__u64 lastuse ; t#__u64 expires ; t#__u64 firstuse ; } 
s#tc_cookie struct tc_cookie { t#u8 * data ; t#u32 len ; s#callback_head rcu ; } 
s#tc_action struct tc_action { const s#tc_action_ops * ops ; t#__u32 type ; t#__u32 order ; s#tcf_idrinfo * idrinfo ; t#u32 tcfa_index ; t#refcount_t tcfa_refcnt ; t#atomic_t tcfa_bindcnt ; t#u32 tcfa_capab ; int tcfa_action ; s#tcf_t tcfa_tm ; s#gnet_stats_basic_packed tcfa_bstats ; s#gnet_stats_basic_packed tcfa_bstats_hw ; s#gnet_stats_queue tcfa_qstats ; s#net_rate_estimator * tcfa_rate_est ; t#spinlock_t tcfa_lock ; s#gnet_stats_basic_cpu * cpu_bstats ; s#gnet_stats_basic_cpu * cpu_bstats_hw ; s#gnet_stats_queue * cpu_qstats ; s#tc_cookie * act_cookie ; s#tcf_chain * goto_chain ; } 
__tcf_idr_release int __tcf_idr_release ( s#tc_action * , t#bool , t#bool ) 
s#tc_action_net struct tc_action_net { s#tcf_idrinfo * idrinfo ; const s#tc_action_ops * ops ; } 
tcf_generic_walker int tcf_generic_walker ( s#tc_action_net * , s#sk_buff * , s#netlink_callback * , int , const s#tc_action_ops * , s#netlink_ext_ack * ) 
tcf_idr_search int tcf_idr_search ( s#tc_action_net * , s#tc_action * * , t#u32 ) 
tcf_idr_create int tcf_idr_create ( s#tc_action_net * , t#u32 , s#nlattr * , s#tc_action * * , const s#tc_action_ops * , int , t#bool ) 
tcf_idr_insert void tcf_idr_insert ( s#tc_action_net * , s#tc_action * ) 
tcf_idr_cleanup void tcf_idr_cleanup ( s#tc_action_net * , t#u32 ) 
tcf_idr_check_alloc int tcf_idr_check_alloc ( s#tc_action_net * , t#u32 * , s#tc_action * * , int ) 
tcf_idrinfo_destroy void tcf_idrinfo_destroy ( const s#tc_action_ops * , s#tcf_idrinfo * ) 
tcf_register_action int tcf_register_action ( s#tc_action_ops * , s#pernet_operations * ) 
tcf_unregister_action int tcf_unregister_action ( s#tc_action_ops * , s#pernet_operations * ) 
tcf_action_exec int tcf_action_exec ( s#sk_buff * , s#tc_action * * , int , s#tcf_result * ) 
tcf_action_dump_1 int tcf_action_dump_1 ( s#sk_buff * , s#tc_action * , int , int ) 
tc_setup_cb_egdev_register int tc_setup_cb_egdev_register ( const s#net_device * , t#tc_setup_cb_t * , void * ) 
tc_setup_cb_egdev_unregister void tc_setup_cb_egdev_unregister ( const s#net_device * , t#tc_setup_cb_t * , void * ) 
tc_setup_cb_egdev_call int tc_setup_cb_egdev_call ( const s#net_device * , e#tc_setup_type , void * , t#bool ) 

/* net/sched/act_ife.o */
s##neigh_parms
s##neighbour
s##sock
s##vfsmount
s##posix_acl
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##kmem_cache
s##xt_table
s##inet_hashinfo
s##fib_notifier_ops
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##nf_hook_entry
s##ebt_table
s##workqueue_struct
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##netns_ipvs
s##mpls_route
s##bpf_prog_array
s##cgroup_taskset
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##udp_tunnel_info
s##bpf_prog
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##l3mdev_ops
s##ndisc_ops
s##xfrm_state
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##net_rate_estimator
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
s##sec_path
s#tcf_meta_ops struct tcf_meta_ops { t#u16 metaid ; t#u16 metatype ; const char * name ; const char * synopsis ; s#list_head list ; int ( * check_presence ) ( s#sk_buff * , s#tcf_meta_info * ) ; int ( * encode ) ( s#sk_buff * , void * , s#tcf_meta_info * ) ; int ( * decode ) ( s#sk_buff * , void * , t#u16 ) ; int ( * get ) ( s#sk_buff * , s#tcf_meta_info * ) ; int ( * alloc ) ( s#tcf_meta_info * , void * , t#gfp_t ) ; void ( * release ) ( s#tcf_meta_info * ) ; int ( * validate ) ( void * , int ) ; s#module * owner ; } 
s#tcf_meta_info struct tcf_meta_info { const s#tcf_meta_ops * ops ; void * metaval ; t#u16 metaid ; s#list_head metalist ; } 
ife_encode_meta_u16 int ife_encode_meta_u16 ( t#u16 , void * , s#tcf_meta_info * ) 
ife_get_meta_u32 int ife_get_meta_u32 ( s#sk_buff * , s#tcf_meta_info * ) 
ife_check_meta_u32 int ife_check_meta_u32 ( t#u32 , s#tcf_meta_info * ) 
ife_check_meta_u16 int ife_check_meta_u16 ( t#u16 , s#tcf_meta_info * ) 
ife_encode_meta_u32 int ife_encode_meta_u32 ( t#u32 , void * , s#tcf_meta_info * ) 
ife_get_meta_u16 int ife_get_meta_u16 ( s#sk_buff * , s#tcf_meta_info * ) 
ife_alloc_meta_u32 int ife_alloc_meta_u32 ( s#tcf_meta_info * , void * , t#gfp_t ) 
ife_alloc_meta_u16 int ife_alloc_meta_u16 ( s#tcf_meta_info * , void * , t#gfp_t ) 
ife_release_meta_gen void ife_release_meta_gen ( s#tcf_meta_info * ) 
ife_validate_meta_u32 int ife_validate_meta_u32 ( void * , int ) 
ife_validate_meta_u16 int ife_validate_meta_u16 ( void * , int ) 
unregister_ife_op int unregister_ife_op ( s#tcf_meta_ops * ) 
register_ife_op int register_ife_op ( s#tcf_meta_ops * ) 

/* net/sched/cls_api.o */
s##proc_ns_operations
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##kmem_cache
s##request_sock_ops
s##timewait_sock_ops
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##bpf_prog_aux
s##xfrm_policy
s##workqueue_struct
s##xfrm_state
s##lwtunnel_state
s##rtable
s##rt6_info
s##dn_route
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_dir_entry
s##uevent_sock
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##xt_table
s##fib_notifier_ops
s##ipv6_devconf
s##rt6_statistics
s##fib6_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##nf_hook_entry
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##netns_ipvs
s##mpls_route
s##udp_tunnel_info
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##l3mdev_ops
s##ndisc_ops
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##net_rate_estimator
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
s##sec_path
register_tcf_proto_ops int register_tcf_proto_ops ( s#tcf_proto_ops * ) 
unregister_tcf_proto_ops int unregister_tcf_proto_ops ( s#tcf_proto_ops * ) 
tcf_queue_work t#bool tcf_queue_work ( s#rcu_work * , t#work_func_t ) 
tcf_chain_get_by_act s#tcf_chain * tcf_chain_get_by_act ( s#tcf_block * , t#u32 ) 
tcf_chain_put_by_act void tcf_chain_put_by_act ( s#tcf_chain * ) 
tcf_block_netif_keep_dst void tcf_block_netif_keep_dst ( s#tcf_block * ) 
e#tcf_block_binder_type enum tcf_block_binder_type { TCF_BLOCK_BINDER_TYPE_UNSPEC , TCF_BLOCK_BINDER_TYPE_CLSACT_INGRESS , TCF_BLOCK_BINDER_TYPE_CLSACT_EGRESS , } 
t#tcf_chain_head_change_t typedef void tcf_chain_head_change_t ( s#tcf_proto * , void * ) 
s#tcf_block_ext_info struct tcf_block_ext_info { e#tcf_block_binder_type binder_type ; t#tcf_chain_head_change_t * chain_head_change ; void * chain_head_change_priv ; t#u32 block_index ; } 
tcf_block_get_ext int tcf_block_get_ext ( s#tcf_block * * , s#Qdisc * , s#tcf_block_ext_info * , s#netlink_ext_ack * ) 
tcf_block_get int tcf_block_get ( s#tcf_block * * , s#tcf_proto * * , s#Qdisc * , s#netlink_ext_ack * ) 
tcf_block_put_ext void tcf_block_put_ext ( s#tcf_block * , s#Qdisc * , s#tcf_block_ext_info * ) 
tcf_block_put void tcf_block_put ( s#tcf_block * ) 
s##tcf_block_cb
tcf_block_cb_priv void * tcf_block_cb_priv ( s#tcf_block_cb * ) 
tcf_block_cb_lookup s#tcf_block_cb * tcf_block_cb_lookup ( s#tcf_block * , t#tc_setup_cb_t * , void * ) 
tcf_block_cb_incref void tcf_block_cb_incref ( s#tcf_block_cb * ) 
tcf_block_cb_decref unsigned int tcf_block_cb_decref ( s#tcf_block_cb * ) 
__tcf_block_cb_register s#tcf_block_cb * __tcf_block_cb_register ( s#tcf_block * , t#tc_setup_cb_t * , void * , void * , s#netlink_ext_ack * ) 
tcf_block_cb_register int tcf_block_cb_register ( s#tcf_block * , t#tc_setup_cb_t * , void * , void * , s#netlink_ext_ack * ) 
__tcf_block_cb_unregister void __tcf_block_cb_unregister ( s#tcf_block * , s#tcf_block_cb * ) 
tcf_block_cb_unregister void tcf_block_cb_unregister ( s#tcf_block * , t#tc_setup_cb_t * , void * ) 
tcf_classify int tcf_classify ( s#sk_buff * , const s#tcf_proto * , s#tcf_result * , t#bool ) 
s#tcf_exts struct tcf_exts { t#__u32 type ; int nr_actions ; s#tc_action * * actions ; s#net * net ; int action ; int police ; } 
tcf_exts_destroy void tcf_exts_destroy ( s#tcf_exts * ) 
tcf_exts_validate int tcf_exts_validate ( s#net * , s#tcf_proto * , s#nlattr * * , s#nlattr * , s#tcf_exts * , t#bool , s#netlink_ext_ack * ) 
tcf_exts_change void tcf_exts_change ( s#tcf_exts * , s#tcf_exts * ) 
tcf_exts_dump int tcf_exts_dump ( s#sk_buff * , s#tcf_exts * ) 
tcf_exts_dump_stats int tcf_exts_dump_stats ( s#sk_buff * , s#tcf_exts * ) 
tc_setup_cb_call int tc_setup_cb_call ( s#tcf_block * , s#tcf_exts * , e#tc_setup_type , void * , t#bool ) 

/* net/sched/sch_api.o */
s##posix_acl
s##vfsmount
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##kmem_cache
s##xt_table
s##inet_hashinfo
s##fib_notifier_ops
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##lwtunnel_state
s##rtable
s##dn_route
s##workqueue_struct
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##nf_hook_entry
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##netns_ipvs
s##mpls_route
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##mempolicy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##blk_plug
s##reclaim_state
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##request_sock_ops
s##timewait_sock_ops
s##udp_table
s##raw_hashinfo
s##bpf_prog_aux
s##xfrm_policy
s##sock_reuseport
s##sec_path
s##udp_tunnel_info
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##l3mdev_ops
s##ndisc_ops
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##net_rate_estimator
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
register_qdisc int register_qdisc ( s#Qdisc_ops * ) 
unregister_qdisc int unregister_qdisc ( s#Qdisc_ops * ) 
qdisc_hash_add void qdisc_hash_add ( s#Qdisc * , t#bool ) 
qdisc_hash_del void qdisc_hash_del ( s#Qdisc * ) 
s#tc_ratespec struct tc_ratespec { unsigned char cell_log ; t#__u8 linklayer ; unsigned short overhead ; short cell_align ; unsigned short mpu ; t#__u32 rate ; } 
s#qdisc_rate_table struct qdisc_rate_table { s#tc_ratespec rate ; t#u32 data [ 256 ] ; s#qdisc_rate_table * next ; int refcnt ; } 
qdisc_get_rtab s#qdisc_rate_table * qdisc_get_rtab ( s#tc_ratespec * , s#nlattr * , s#netlink_ext_ack * ) 
qdisc_put_rtab void qdisc_put_rtab ( s#qdisc_rate_table * ) 
qdisc_put_stab void qdisc_put_stab ( s#qdisc_size_table * ) 
__qdisc_calculate_pkt_len void __qdisc_calculate_pkt_len ( s#sk_buff * , const s#qdisc_size_table * ) 
qdisc_warn_nonwc void qdisc_warn_nonwc ( const char * , s#Qdisc * ) 
s#qdisc_watchdog struct qdisc_watchdog { t#u64 last_expires ; s#hrtimer timer ; s#Qdisc * qdisc ; } 
qdisc_watchdog_init_clockid void qdisc_watchdog_init_clockid ( s#qdisc_watchdog * , s#Qdisc * , t#clockid_t ) 
qdisc_watchdog_init void qdisc_watchdog_init ( s#qdisc_watchdog * , s#Qdisc * ) 
qdisc_watchdog_schedule_ns void qdisc_watchdog_schedule_ns ( s#qdisc_watchdog * , t#u64 ) 
qdisc_watchdog_cancel void qdisc_watchdog_cancel ( s#qdisc_watchdog * ) 
s#Qdisc_class_hash struct Qdisc_class_hash { s#hlist_head * hash ; unsigned int hashsize ; unsigned int hashmask ; unsigned int hashelems ; } 
qdisc_class_hash_grow void qdisc_class_hash_grow ( s#Qdisc * , s#Qdisc_class_hash * ) 
qdisc_class_hash_init int qdisc_class_hash_init ( s#Qdisc_class_hash * ) 
qdisc_class_hash_destroy void qdisc_class_hash_destroy ( s#Qdisc_class_hash * ) 
s#Qdisc_class_common struct Qdisc_class_common { t#u32 classid ; s#hlist_node hnode ; } 
qdisc_class_hash_insert void qdisc_class_hash_insert ( s#Qdisc_class_hash * , s#Qdisc_class_common * ) 
qdisc_class_hash_remove void qdisc_class_hash_remove ( s#Qdisc_class_hash * , s#Qdisc_class_common * ) 
qdisc_tree_reduce_backlog void qdisc_tree_reduce_backlog ( s#Qdisc * , unsigned int , unsigned int ) 

/* net/sched/sch_fifo.o */
s##sock
s##sec_path
s##neigh_parms
s##neighbour
s##vfsmount
s##posix_acl
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##kmem_cache
s##xt_table
s##inet_hashinfo
s##fib_notifier_ops
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##nf_hook_entry
s##ebt_table
s##workqueue_struct
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##bpf_prog_array
s##cgroup_taskset
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##udp_tunnel_info
s##bpf_prog
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##l3mdev_ops
s##ndisc_ops
s##xfrm_state
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##net_rate_estimator
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
pfifo_qdisc_ops extern s#Qdisc_ops pfifo_qdisc_ops 
bfifo_qdisc_ops extern s#Qdisc_ops bfifo_qdisc_ops 
fifo_set_limit int fifo_set_limit ( s#Qdisc * , unsigned int ) 
fifo_create_dflt s#Qdisc * fifo_create_dflt ( s#Qdisc * , s#Qdisc_ops * , unsigned int , s#netlink_ext_ack * ) 

/* net/sched/sch_generic.o */
s##posix_acl
s##vfsmount
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##kmem_cache
s##fs_pin
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##prot_inuse
s##ipv4_devconf
s##xt_table
s##inet_hashinfo
s##workqueue_struct
s##lwtunnel_state
s##uncached_list
s##dn_route
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##nf_hook_entry
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##mempolicy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##blk_plug
s##reclaim_state
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##udp_table
s##raw_hashinfo
s##bpf_prog_aux
s##sock_reuseport
s##udp_tunnel_info
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##prefix_info
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##net_rate_estimator
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
default_qdisc_ops extern const s#Qdisc_ops * default_qdisc_ops 
dev_trans_start unsigned long dev_trans_start ( s#net_device * ) 
netif_carrier_on void netif_carrier_on ( s#net_device * ) 
netif_carrier_off void netif_carrier_off ( s#net_device * ) 
noop_qdisc extern s#Qdisc noop_qdisc 
pfifo_fast_ops extern s#Qdisc_ops pfifo_fast_ops 
qdisc_create_dflt s#Qdisc * qdisc_create_dflt ( s#netdev_queue * , const s#Qdisc_ops * , t#u32 , s#netlink_ext_ack * ) 
qdisc_reset void qdisc_reset ( s#Qdisc * ) 
qdisc_put void qdisc_put ( s#Qdisc * ) 
qdisc_put_unlocked void qdisc_put_unlocked ( s#Qdisc * ) 
dev_graft_qdisc s#Qdisc * dev_graft_qdisc ( s#netdev_queue * , s#Qdisc * ) 
dev_activate void dev_activate ( s#net_device * ) 
dev_deactivate void dev_deactivate ( s#net_device * ) 
s#psched_ratecfg struct psched_ratecfg { t#u64 rate_bytes_ps ; t#u32 mult ; t#u16 overhead ; t#u8 linklayer ; t#u8 shift ; } 
psched_ratecfg_precompute void psched_ratecfg_precompute ( s#psched_ratecfg * , const s#tc_ratespec * , t#u64 ) 
s#mini_Qdisc_pair struct mini_Qdisc_pair { s#mini_Qdisc miniq1 ; s#mini_Qdisc miniq2 ; s#mini_Qdisc * * p_miniq ; } 
mini_qdisc_pair_swap void mini_qdisc_pair_swap ( s#mini_Qdisc_pair * , s#tcf_proto * ) 
mini_qdisc_pair_init void mini_qdisc_pair_init ( s#mini_Qdisc_pair * , s#Qdisc * , s#mini_Qdisc * * ) 

/* net/sctp/socket.o */
s##posix_acl
s##vfsmount
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##sec_path
s##workqueue_struct
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##kmem_cache
s##xfrm_state
s##uncached_list
s##dn_route
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##phy_device
s##sfp_bus
s##prot_inuse
s##ipv4_devconf
s##xt_table
s##inet_hashinfo
s##seg6_pernet_data
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##mempolicy
s##serial_icounter_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##mtd_info
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sock_reuseport
t#sctp_endpoint_type_t typedef enum { SCTP_EP_TYPE_SOCKET , SCTP_EP_TYPE_ASSOCIATION , } sctp_endpoint_type_t 
s#sctp_paramhdr struct sctp_paramhdr { t#__be16 type ; t#__be16 length ; } 
t#sctp_paramhdr_t typedef s#sctp_paramhdr sctp_paramhdr_t 
s#sctp_cookie_preserve_param struct sctp_cookie_preserve_param { t#sctp_paramhdr_t param_hdr ; t#__be32 lifespan_increment ; } 
s#sctp_hostname_param struct sctp_hostname_param { t#sctp_paramhdr_t param_hdr ; t#uint8_t hostname [ 0 ] ; } 
s#sctp_cookie_param struct sctp_cookie_param { t#sctp_paramhdr_t p ; t#__u8 body [ 0 ] ; } 
s#sctp_supported_addrs_param struct sctp_supported_addrs_param { t#sctp_paramhdr_t param_hdr ; t#__be16 types [ 0 ] ; } 
s#sctp_ipv4addr_param struct sctp_ipv4addr_param { t#sctp_paramhdr_t param_hdr ; s#in_addr addr ; } 
s#sctp_ipv6addr_param struct sctp_ipv6addr_param { t#sctp_paramhdr_t param_hdr ; s#in6_addr addr ; } 
u#sctp_addr_param union sctp_addr_param { s#sctp_paramhdr p ; s#sctp_ipv4addr_param v4 ; s#sctp_ipv6addr_param v6 ; } 
s#sctp_adaptation_ind_param struct sctp_adaptation_ind_param { s#sctp_paramhdr param_hdr ; t#__be32 adaptation_ind ; } 
s#sctp_supported_ext_param struct sctp_supported_ext_param { s#sctp_paramhdr param_hdr ; t#__u8 chunks [ 0 ] ; } 
s#sctp_random_param struct sctp_random_param { t#sctp_paramhdr_t param_hdr ; t#__u8 random_val [ 0 ] ; } 
s#sctp_chunks_param struct sctp_chunks_param { t#sctp_paramhdr_t param_hdr ; t#__u8 chunks [ 0 ] ; } 
s#sctp_hmac_algo_param struct sctp_hmac_algo_param { t#sctp_paramhdr_t param_hdr ; t#__be16 hmac_ids [ 0 ] ; } 
s#sctp_addip_param struct sctp_addip_param { t#sctp_paramhdr_t param_hdr ; t#__be32 crr_id ; } 
u#sctp_params union sctp_params { void * v ; s#sctp_paramhdr * p ; s#sctp_cookie_preserve_param * life ; s#sctp_hostname_param * dns ; s#sctp_cookie_param * cookie ; s#sctp_supported_addrs_param * sat ; s#sctp_ipv4addr_param * v4 ; s#sctp_ipv6addr_param * v6 ; u#sctp_addr_param * addr ; s#sctp_adaptation_ind_param * aind ; s#sctp_supported_ext_param * ext ; s#sctp_random_param * random ; s#sctp_chunks_param * chunks ; s#sctp_hmac_algo_param * hmac_algo ; s#sctp_addip_param * addip ; } 
s#sctp_datahdr struct sctp_datahdr { t#__be32 tsn ; t#__be16 stream ; t#__be16 ssn ; t#__be32 ppid ; t#__u8 payload [ 0 ] ; } 
s#sctp_inithdr struct sctp_inithdr { t#__be32 init_tag ; t#__be32 a_rwnd ; t#__be16 num_outbound_streams ; t#__be16 num_inbound_streams ; t#__be32 initial_tsn ; t#__u8 params [ 0 ] ; } 
s#sctp_gap_ack_block struct sctp_gap_ack_block { t#__be16 start ; t#__be16 end ; } 
t#sctp_gap_ack_block_t typedef s#sctp_gap_ack_block sctp_gap_ack_block_t 
t#sctp_dup_tsn_t typedef t#__be32 sctp_dup_tsn_t 
t#sctp_sack_variable_t typedef union { t#sctp_gap_ack_block_t gab ; t#sctp_dup_tsn_t dup ; } sctp_sack_variable_t 
s#sctp_sackhdr struct sctp_sackhdr { t#__be32 cum_tsn_ack ; t#__be32 a_rwnd ; t#__be16 num_gap_ack_blocks ; t#__be16 num_dup_tsns ; t#sctp_sack_variable_t variable [ 0 ] ; } 
s#sctp_heartbeathdr struct sctp_heartbeathdr { t#sctp_paramhdr_t info ; } 
u#sctp_addr union sctp_addr { s#sockaddr_in v4 ; s#sockaddr_in6 v6 ; s#sockaddr sa ; } 
s#sctp_sender_hb_info struct sctp_sender_hb_info { s#sctp_paramhdr param_hdr ; u#sctp_addr daddr ; unsigned long sent_at ; t#__u64 hb_nonce ; } 
s#sctp_shutdownhdr struct sctp_shutdownhdr { t#__be32 cum_tsn_ack ; } 
E#__SCTP_AUTH_HMAC_MAX 4 
E#SCTP_CID_SHUTDOWN_COMPLETE 14 
s#sctp_chunkhdr struct sctp_chunkhdr { t#__u8 type ; t#__u8 flags ; t#__be16 length ; } 
t#sctp_chunkhdr_t typedef s#sctp_chunkhdr sctp_chunkhdr_t 
t#sctp_inithdr_t typedef s#sctp_inithdr sctp_inithdr_t 
s#sctp_init_chunk struct sctp_init_chunk { t#sctp_chunkhdr_t chunk_hdr ; t#sctp_inithdr_t init_hdr ; } 
s#sctp_cookie struct sctp_cookie { t#__u32 my_vtag ; t#__u32 peer_vtag ; t#__u32 my_ttag ; t#__u32 peer_ttag ; t#ktime_t expiration ; t#__u16 sinit_num_ostreams ; t#__u16 sinit_max_instreams ; t#__u32 initial_tsn ; u#sctp_addr peer_addr ; t#__u16 my_port ; t#__u8 prsctp_capable ; t#__u8 padding ; t#__u32 adaptation_ind ; t#__u8 auth_random [ sizeof ( sctp_paramhdr_t ) + 32 ] ; t#__u8 auth_hmacs [ E#__SCTP_AUTH_HMAC_MAX * sizeof ( __u16 ) + 2 ] ; t#__u8 auth_chunks [ sizeof ( sctp_paramhdr_t ) + ( ( ( E#SCTP_CID_SHUTDOWN_COMPLETE + 1 ) + 2 + 1 + 1 + 1 ) - 4 ) ] ; t#__u32 raw_addr_list_len ; s#sctp_init_chunk peer_init [ 0 ] ; } 
s#sctp_signed_cookie struct sctp_signed_cookie { t#__u8 signature [ 32 ] ; t#__u32 __pad ; s#sctp_cookie c ; } 
s#sctp_ecnehdr struct sctp_ecnehdr { t#__be32 lowest_tsn ; } 
s#sctp_cwrhdr struct sctp_cwrhdr { t#__be32 lowest_tsn ; } 
s#sctp_errhdr struct sctp_errhdr { t#__be16 cause ; t#__be16 length ; t#__u8 variable [ 0 ] ; } 
s#sctp_addiphdr struct sctp_addiphdr { t#__be32 serial ; t#__u8 params [ 0 ] ; } 
s#sctp_fwdtsn_skip struct sctp_fwdtsn_skip { t#__be16 stream ; t#__be16 ssn ; } 
s#sctp_fwdtsn_hdr struct sctp_fwdtsn_hdr { t#__be32 new_cum_tsn ; s#sctp_fwdtsn_skip skip [ 0 ] ; } 
s#sctp_authhdr struct sctp_authhdr { t#__be16 shkey_id ; t#__be16 hmac_id ; t#__u8 hmac [ 0 ] ; } 
s#sctphdr struct sctphdr { t#__be16 source ; t#__be16 dest ; t#__be32 vtag ; t#__le32 checksum ; } 
t#sctp_assoc_t typedef t#__s32 sctp_assoc_t 
s#sctp_sndrcvinfo struct sctp_sndrcvinfo { t#__u16 sinfo_stream ; t#__u16 sinfo_ssn ; t#__u16 sinfo_flags ; t#__u32 sinfo_ppid ; t#__u32 sinfo_context ; t#__u32 sinfo_timetolive ; t#__u32 sinfo_tsn ; t#__u32 sinfo_cumtsn ; t#sctp_assoc_t sinfo_assoc_id ; } 
s#sctp_datamsg struct sctp_datamsg { s#list_head chunks ; t#atomic_t refcnt ; unsigned long expires_at ; int send_error ; t#u8 send_failed : 1 , can_delay ; } 
s##ip_mc_socklist
t#sctp_socket_type_t typedef enum { SCTP_SOCKET_UDP = 0 , SCTP_SOCKET_UDP_HIGH_BANDWIDTH , SCTP_SOCKET_TCP } sctp_socket_type_t 
s#sctp_ulpevent struct sctp_ulpevent { s#sctp_association * asoc ; s#sctp_chunk * chunk ; unsigned int rmem_len ; t#__u32 ppid ; t#__u32 tsn ; t#__u32 cumtsn ; t#__u16 stream ; t#__u16 ssn ; t#__u16 flags ; t#__u16 msg_flags ; } 
s#sctp_pf struct sctp_pf { void ( * event_msgname ) ( s#sctp_ulpevent * , char * , int * ) ; void ( * skb_msgname ) ( s#sk_buff * , char * , int * ) ; int ( * af_supported ) ( t#sa_family_t , s#sctp_sock * ) ; int ( * cmp_addr ) ( const u#sctp_addr * , const u#sctp_addr * , s#sctp_sock * ) ; int ( * bind_verify ) ( s#sctp_sock * , u#sctp_addr * ) ; int ( * send_verify ) ( s#sctp_sock * , u#sctp_addr * ) ; int ( * supported_addrs ) ( const s#sctp_sock * , t#__be16 * ) ; s#sock * ( * create_accept_sk ) ( s#sock * , s#sctp_association * , t#bool ) ; int ( * addr_to_user ) ( s#sctp_sock * , u#sctp_addr * ) ; void ( * to_sk_saddr ) ( u#sctp_addr * , s#sock * ) ; void ( * to_sk_daddr ) ( u#sctp_addr * , s#sock * ) ; s#sctp_af * af ; } 
s##crypto_type
s##skcipher_givcrypt_request
s#sctp_endpoint struct sctp_endpoint { s#sctp_ep_common base ; s#list_head asocs ; t#__u8 secret_key [ 32 ] ; t#__u8 * digest ; t#__u32 sndbuf_policy ; t#__u32 rcvbuf_policy ; s#crypto_shash * * auth_hmacs ; s#sctp_hmac_algo_param * auth_hmacs_list ; s#sctp_chunks_param * auth_chunk_list ; s#list_head endpoint_shared_keys ; t#__u16 active_key_id ; t#__u8 auth_enable : 1 , prsctp_enable : 1 , reconf_enable : 1 ; t#__u8 strreset_enable ; } 
s#sctp_bind_bucket struct sctp_bind_bucket { unsigned short port ; unsigned short fastreuse ; s#hlist_node node ; s#hlist_head owner ; s#net * net ; } 
s#sctp_initmsg struct sctp_initmsg { t#__u16 sinit_num_ostreams ; t#__u16 sinit_max_instreams ; t#__u16 sinit_max_attempts ; t#__u16 sinit_max_init_timeo ; } 
s#sctp_rtoinfo struct sctp_rtoinfo { t#sctp_assoc_t srto_assoc_id ; t#__u32 srto_initial ; t#__u32 srto_max ; t#__u32 srto_min ; } 
s#sctp_paddrparams struct sctp_paddrparams { t#sctp_assoc_t spp_assoc_id ; s#__kernel_sockaddr_storage spp_address ; t#__u32 spp_hbinterval ; t#__u16 spp_pathmaxrxt ; t#__u32 spp_pathmtu ; t#__u32 spp_sackdelay ; t#__u32 spp_flags ; } 
s#sctp_event_subscribe struct sctp_event_subscribe { t#__u8 sctp_data_io_event ; t#__u8 sctp_association_event ; t#__u8 sctp_address_event ; t#__u8 sctp_send_failure_event ; t#__u8 sctp_peer_error_event ; t#__u8 sctp_shutdown_event ; t#__u8 sctp_partial_delivery_event ; t#__u8 sctp_adaptation_layer_event ; t#__u8 sctp_authentication_event ; t#__u8 sctp_sender_dry_event ; t#__u8 sctp_stream_reset_event ; t#__u8 sctp_assoc_reset_event ; t#__u8 sctp_stream_change_event ; } 
s#sctp_assocparams struct sctp_assocparams { t#sctp_assoc_t sasoc_assoc_id ; t#__u16 sasoc_asocmaxrxt ; t#__u16 sasoc_number_peer_destinations ; t#__u32 sasoc_peer_rwnd ; t#__u32 sasoc_local_rwnd ; t#__u32 sasoc_cookie_life ; } 
s#sctp_sock struct sctp_sock { s#inet_sock inet ; t#sctp_socket_type_t type ; s#sctp_pf * pf ; s#crypto_shash * hmac ; char * sctp_hmac_alg ; s#sctp_endpoint * ep ; s#sctp_bind_bucket * bind_hash ; t#__u16 default_stream ; t#__u32 default_ppid ; t#__u16 default_flags ; t#__u32 default_context ; t#__u32 default_timetolive ; t#__u32 default_rcv_context ; int max_burst ; t#__u32 hbinterval ; t#__u16 pathmaxrxt ; t#__u32 pathmtu ; t#__u32 sackdelay ; t#__u32 sackfreq ; t#__u32 param_flags ; s#sctp_initmsg initmsg ; s#sctp_rtoinfo rtoinfo ; s#sctp_paddrparams paddrparam ; s#sctp_event_subscribe subscribe ; s#sctp_assocparams assocparams ; int user_frag ; t#__u32 autoclose ; t#__u32 adaptation_ind ; t#__u32 pd_point ; t#__u16 nodelay : 1 , disable_fragments : 1 , v4mapped : 1 , frag_interleave : 1 , recvrcvinfo : 1 , recvnxtinfo : 1 , data_ready_signalled : 1 ; t#atomic_t pd_mode ; s#sk_buff_head pd_lobby ; s#list_head auto_asconf_list ; int do_auto_asconf ; } 
t#sctp_scope_t typedef enum { SCTP_SCOPE_GLOBAL , SCTP_SCOPE_PRIVATE , SCTP_SCOPE_LINK , SCTP_SCOPE_LOOPBACK , SCTP_SCOPE_UNUSABLE , } sctp_scope_t 
s#sctp_af struct sctp_af { int ( * sctp_xmit ) ( s#sk_buff * , s#sctp_transport * ) ; int ( * setsockopt ) ( s#sock * , int , int , char * , unsigned int ) ; int ( * getsockopt ) ( s#sock * , int , int , char * , int * ) ; int ( * compat_setsockopt ) ( s#sock * , int , int , char * , unsigned int ) ; int ( * compat_getsockopt ) ( s#sock * , int , int , char * , int * ) ; void ( * get_dst ) ( s#sctp_transport * , u#sctp_addr * , s#flowi * , s#sock * ) ; void ( * get_saddr ) ( s#sctp_sock * , s#sctp_transport * , s#flowi * ) ; void ( * copy_addrlist ) ( s#list_head * , s#net_device * ) ; int ( * cmp_addr ) ( const u#sctp_addr * , const u#sctp_addr * ) ; void ( * addr_copy ) ( u#sctp_addr * , u#sctp_addr * ) ; void ( * from_skb ) ( u#sctp_addr * , s#sk_buff * , int ) ; void ( * from_sk ) ( u#sctp_addr * , s#sock * ) ; void ( * from_addr_param ) ( u#sctp_addr * , u#sctp_addr_param * , t#__be16 , int ) ; int ( * to_addr_param ) ( const u#sctp_addr * , u#sctp_addr_param * ) ; int ( * addr_valid ) ( u#sctp_addr * , s#sctp_sock * , const s#sk_buff * ) ; t#sctp_scope_t ( * scope ) ( u#sctp_addr * ) ; void ( * inaddr_any ) ( u#sctp_addr * , t#__be16 ) ; int ( * is_any ) ( const u#sctp_addr * ) ; int ( * available ) ( u#sctp_addr * , s#sctp_sock * ) ; int ( * skb_iif ) ( const s#sk_buff * ) ; int ( * is_ce ) ( const s#sk_buff * ) ; void ( * seq_dump_addr ) ( s#seq_file * , u#sctp_addr * ) ; void ( * ecn_capable ) ( s#sock * ) ; t#__u16 net_header_len ; int sockaddr_len ; t#sa_family_t sa_family ; s#list_head list ; } 
s#sctp_packet struct sctp_packet { t#__u16 source_port ; t#__u16 destination_port ; t#__u32 vtag ; s#list_head chunk_list ; t#size_t overhead ; t#size_t size ; t#size_t max_size ; s#sctp_transport * transport ; s#sctp_chunk * auth ; t#u8 has_cookie_echo : 1 , has_sack : 1 , has_auth : 1 , has_data : 1 , ipfragok : 1 ; } 
s#sctp_transport struct sctp_transport { s#list_head transports ; s#rhlist_head node ; t#atomic_t refcnt ; t#__u32 rto_pending : 1 , hb_sent : 1 , pmtu_pending : 1 , dst_pending_confirm : 1 , sack_generation : 1 ; t#u32 dst_cookie ; s#flowi fl ; u#sctp_addr ipaddr ; s#sctp_af * af_specific ; s#sctp_association * asoc ; unsigned long rto ; t#__u32 rtt ; t#__u32 rttvar ; t#__u32 srtt ; t#__u32 cwnd ; t#__u32 ssthresh ; t#__u32 partial_bytes_acked ; t#__u32 flight_size ; t#__u32 burst_limited ; s#dst_entry * dst ; u#sctp_addr saddr ; unsigned long hbinterval ; unsigned long sackdelay ; t#__u32 sackfreq ; t#ktime_t last_time_heard ; unsigned long last_time_sent ; unsigned long last_time_ecne_reduced ; t#__u16 pathmaxrxt ; int pf_retrans ; t#__u32 pathmtu ; t#__u32 param_flags ; int init_sent_count ; int state ; unsigned short error_count ; s#timer_list T3_rtx_timer ; s#timer_list hb_timer ; s#timer_list proto_unreach_timer ; s#timer_list reconf_timer ; s#list_head transmitted ; s#sctp_packet packet ; s#list_head send_ready ; struct { t#__u32 next_tsn_at_change ; char changeover_active ; char cycling_changeover ; char cacc_saw_newack ; } cacc ; t#__u64 hb_nonce ; s#callback_head rcu ; } 
s#sctp_chunk struct sctp_chunk { s#list_head list ; t#atomic_t refcnt ; int sent_count ; s#list_head transmitted_list ; s#list_head frag_list ; s#sk_buff * skb ; s#sk_buff * head_skb ; u#sctp_params param_hdr ; union { t#__u8 * v ; s#sctp_datahdr * data_hdr ; s#sctp_inithdr * init_hdr ; s#sctp_sackhdr * sack_hdr ; s#sctp_heartbeathdr * hb_hdr ; s#sctp_sender_hb_info * hbs_hdr ; s#sctp_shutdownhdr * shutdown_hdr ; s#sctp_signed_cookie * cookie_hdr ; s#sctp_ecnehdr * ecne_hdr ; s#sctp_cwrhdr * ecn_cwr_hdr ; s#sctp_errhdr * err_hdr ; s#sctp_addiphdr * addip_hdr ; s#sctp_fwdtsn_hdr * fwdtsn_hdr ; s#sctp_authhdr * auth_hdr ; } subh ; t#__u8 * chunk_end ; s#sctp_chunkhdr * chunk_hdr ; s#sctphdr * sctp_hdr ; s#sctp_sndrcvinfo sinfo ; s#sctp_association * asoc ; s#sctp_ep_common * rcvr ; unsigned long sent_at ; u#sctp_addr source ; u#sctp_addr dest ; s#sctp_datamsg * msg ; s#sctp_transport * transport ; s#sk_buff * auth_chunk ; t#__u16 rtt_in_progress : 1 , has_tsn : 1 , has_ssn : 1 , singleton : 1 , end_of_packet : 1 , ecn_ce_done : 1 , pdiscard : 1 , tsn_gap_acked : 1 , data_accepted : 1 , auth : 1 , has_asconf : 1 , tsn_missing_report : 2 , fast_retransmit : 2 ; } 
s#sctp_inq struct sctp_inq { s#list_head in_chunk_list ; s#sctp_chunk * in_progress ; s#work_struct immediate ; } 
s#sctp_bind_addr struct sctp_bind_addr { t#__u16 port ; s#list_head address_list ; } 
s#sctp_ep_common struct sctp_ep_common { s#hlist_node node ; int hashent ; t#sctp_endpoint_type_t type ; t#atomic_t refcnt ; t#bool dead ; s#sock * sk ; s#sctp_inq inqueue ; s#sctp_bind_addr bind_addr ; } 
E#SCTP_MAX_DUP_TSNS 16 
s#sctp_tsnmap struct sctp_tsnmap { unsigned long * tsn_map ; t#__u32 base_tsn ; t#__u32 cumulative_tsn_ack_point ; t#__u32 max_tsn_seen ; t#__u16 len ; t#__u16 pending_data ; t#__u16 num_dup_tsns ; t#__be32 dup_tsns [ E#SCTP_MAX_DUP_TSNS ] ; } 
s#sctp_inithdr_host struct sctp_inithdr_host { t#__u32 init_tag ; t#__u32 a_rwnd ; t#__u16 num_outbound_streams ; t#__u16 num_inbound_streams ; t#__u32 initial_tsn ; } 
t#sctp_random_param_t typedef s#sctp_random_param sctp_random_param_t 
t#sctp_chunks_param_t typedef s#sctp_chunks_param sctp_chunks_param_t 
t#sctp_hmac_algo_param_t typedef s#sctp_hmac_algo_param sctp_hmac_algo_param_t 
t#sctp_state_t typedef enum { SCTP_STATE_CLOSED = 0 , SCTP_STATE_COOKIE_WAIT = 1 , SCTP_STATE_COOKIE_ECHOED = 2 , SCTP_STATE_ESTABLISHED = 3 , SCTP_STATE_SHUTDOWN_PENDING = 4 , SCTP_STATE_SHUTDOWN_SENT = 5 , SCTP_STATE_SHUTDOWN_RECEIVED = 6 , SCTP_STATE_SHUTDOWN_ACK_SENT = 7 , } sctp_state_t 
E#SCTP_EVENT_TIMEOUT_AUTOCLOSE ( 0 ) + 10 
s#sctp_stream_out struct sctp_stream_out { t#__u16 ssn ; t#__u8 state ; t#__u64 abandoned_unsent [ ( ( 0x0030 >> 4 ) - 1 ) + 1 ] ; t#__u64 abandoned_sent [ ( ( 0x0030 >> 4 ) - 1 ) + 1 ] ; } 
s#sctp_stream_in struct sctp_stream_in { t#__u16 ssn ; } 
s#sctp_stream struct sctp_stream { s#sctp_stream_out * out ; s#sctp_stream_in * in ; t#__u16 outcnt ; t#__u16 incnt ; } 
s#sctp_outq struct sctp_outq { s#sctp_association * asoc ; s#list_head out_chunk_list ; unsigned int out_qlen ; unsigned int error ; s#list_head control_chunk_list ; s#list_head sacked ; s#list_head retransmit ; s#list_head abandoned ; t#__u32 outstanding_bytes ; char fast_rtx ; char cork ; } 
s#sctp_ulpq struct sctp_ulpq { char pd_mode ; s#sctp_association * asoc ; s#sk_buff_head reasm ; s#sk_buff_head lobby ; } 
s#sctp_auth_bytes struct sctp_auth_bytes { t#atomic_t refcnt ; t#__u32 len ; t#__u8 data [ ] ; } 
s#sctp_priv_assoc_stats struct sctp_priv_assoc_stats { s#__kernel_sockaddr_storage obs_rto_ipaddr ; t#__u64 max_obs_rto ; t#__u64 isacks ; t#__u64 osacks ; t#__u64 opackets ; t#__u64 ipackets ; t#__u64 rtxchunks ; t#__u64 outofseqtsns ; t#__u64 idupchunks ; t#__u64 gapcnt ; t#__u64 ouodchunks ; t#__u64 iuodchunks ; t#__u64 oodchunks ; t#__u64 iodchunks ; t#__u64 octrlchunks ; t#__u64 ictrlchunks ; } 
s#sctp_association struct sctp_association { s#sctp_ep_common base ; s#list_head asocs ; t#sctp_assoc_t assoc_id ; s#sctp_endpoint * ep ; s#sctp_cookie c ; struct { s#list_head transport_addr_list ; t#__u32 rwnd ; t#__u16 transport_count ; t#__u16 port ; s#sctp_transport * primary_path ; u#sctp_addr primary_addr ; s#sctp_transport * active_path ; s#sctp_transport * retran_path ; s#sctp_transport * last_sent_to ; s#sctp_transport * last_data_from ; s#sctp_tsnmap tsn_map ; t#__be16 addip_disabled_mask ; t#__u8 ecn_capable : 1 , ipv4_address : 1 , ipv6_address : 1 , hostname_address : 1 , asconf_capable : 1 , prsctp_capable : 1 , reconf_capable : 1 , auth_capable : 1 ; t#__u8 sack_needed : 1 , sack_generation : 1 , zero_window_announced : 1 ; t#__u32 sack_cnt ; t#__u32 adaptation_ind ; s#sctp_inithdr_host i ; void * cookie ; int cookie_len ; t#__u32 addip_serial ; t#sctp_random_param_t * peer_random ; t#sctp_chunks_param_t * peer_chunks ; t#sctp_hmac_algo_param_t * peer_hmacs ; } peer ; t#sctp_state_t state ; int overall_error_count ; t#ktime_t cookie_life ; unsigned long rto_initial ; unsigned long rto_max ; unsigned long rto_min ; int max_burst ; int max_retrans ; int pf_retrans ; t#__u16 max_init_attempts ; t#__u16 init_retries ; unsigned long max_init_timeo ; unsigned long hbinterval ; t#__u16 pathmaxrxt ; t#__u8 pmtu_pending ; t#__u32 pathmtu ; t#__u32 param_flags ; t#__u32 sackfreq ; unsigned long sackdelay ; unsigned long timeouts [ ( E#SCTP_EVENT_TIMEOUT_AUTOCLOSE + 1 ) ] ; s#timer_list timers [ ( E#SCTP_EVENT_TIMEOUT_AUTOCLOSE + 1 ) ] ; s#sctp_transport * shutdown_last_sent_to ; s#sctp_transport * init_last_sent_to ; int shutdown_retries ; t#__u32 next_tsn ; t#__u32 ctsn_ack_point ; t#__u32 adv_peer_ack_point ; t#__u32 highest_sacked ; t#__u32 fast_recovery_exit ; t#__u8 fast_recovery ; t#__u16 unack_data ; t#__u32 rtx_data_chunks ; t#__u32 rwnd ; t#__u32 a_rwnd ; t#__u32 rwnd_over ; t#__u32 rwnd_press ; int sndbuf_used ; t#atomic_t rmem_alloc ; t#wait_queue_head_t wait ; t#__u32 frag_point ; t#__u32 user_frag ; int init_err_counter ; int init_cycle ; t#__u16 default_stream ; t#__u16 default_flags ; t#__u32 default_ppid ; t#__u32 default_context ; t#__u32 default_timetolive ; t#__u32 default_rcv_context ; s#sctp_stream * stream ; s#sctp_outq outqueue ; s#sctp_ulpq ulpq ; t#__u32 last_ecne_tsn ; t#__u32 last_cwr_tsn ; int numduptsns ; s#sctp_chunk * addip_last_asconf ; s#list_head asconf_ack_list ; s#list_head addip_chunk_list ; t#__u32 addip_serial ; int src_out_of_asoc_ok ; u#sctp_addr * asconf_addr_del_pending ; s#sctp_transport * new_transport ; s#list_head endpoint_shared_keys ; s#sctp_auth_bytes * asoc_shared_key ; t#__u16 default_hmac_id ; t#__u16 active_key_id ; t#__u8 need_ecne : 1 , temp : 1 , force_delay : 1 , prsctp_enable : 1 , reconf_enable : 1 ; t#__u8 strreset_enable ; t#__u8 strreset_outstanding ; t#__u32 strreset_outseq ; t#__u32 strreset_inseq ; t#__u32 strreset_result [ 2 ] ; s#sctp_chunk * strreset_chunk ; s#sctp_priv_assoc_stats stats ; int sent_cnt_removable ; t#__u64 abandoned_unsent [ ( ( 0x0030 >> 4 ) - 1 ) + 1 ] ; t#__u64 abandoned_sent [ ( ( 0x0030 >> 4 ) - 1 ) + 1 ] ; s#callback_head rcu ; } 
s#sctp_info struct sctp_info { t#__u32 sctpi_tag ; t#__u32 sctpi_state ; t#__u32 sctpi_rwnd ; t#__u16 sctpi_unackdata ; t#__u16 sctpi_penddata ; t#__u16 sctpi_instrms ; t#__u16 sctpi_outstrms ; t#__u32 sctpi_fragmentation_point ; t#__u32 sctpi_inqueue ; t#__u32 sctpi_outqueue ; t#__u32 sctpi_overall_error ; t#__u32 sctpi_max_burst ; t#__u32 sctpi_maxseg ; t#__u32 sctpi_peer_rwnd ; t#__u32 sctpi_peer_tag ; t#__u8 sctpi_peer_capable ; t#__u8 sctpi_peer_sack ; t#__u16 __reserved1 ; t#__u64 sctpi_isacks ; t#__u64 sctpi_osacks ; t#__u64 sctpi_opackets ; t#__u64 sctpi_ipackets ; t#__u64 sctpi_rtxchunks ; t#__u64 sctpi_outofseqtsns ; t#__u64 sctpi_idupchunks ; t#__u64 sctpi_gapcnt ; t#__u64 sctpi_ouodchunks ; t#__u64 sctpi_iuodchunks ; t#__u64 sctpi_oodchunks ; t#__u64 sctpi_iodchunks ; t#__u64 sctpi_octrlchunks ; t#__u64 sctpi_ictrlchunks ; s#__kernel_sockaddr_storage sctpi_p_address ; t#__s32 sctpi_p_state ; t#__u32 sctpi_p_cwnd ; t#__u32 sctpi_p_srtt ; t#__u32 sctpi_p_rto ; t#__u32 sctpi_p_hbinterval ; t#__u32 sctpi_p_pathmaxrxt ; t#__u32 sctpi_p_sackdelay ; t#__u32 sctpi_p_sackfreq ; t#__u32 sctpi_p_ssthresh ; t#__u32 sctpi_p_partial_bytes_acked ; t#__u32 sctpi_p_flight_size ; t#__u16 sctpi_p_error ; t#__u16 __reserved2 ; t#__u32 sctpi_s_autoclose ; t#__u32 sctpi_s_adaptation_ind ; t#__u32 sctpi_s_pd_point ; t#__u8 sctpi_s_nodelay ; t#__u8 sctpi_s_disable_fragments ; t#__u8 sctpi_s_v4mapped ; t#__u8 sctpi_s_frag_interleave ; t#__u32 sctpi_s_type ; t#__u32 __reserved3 ; } 
sctp_get_sctp_info int sctp_get_sctp_info ( s#sock * , s#sctp_association * , s#sctp_info * ) 
sctp_for_each_endpoint int sctp_for_each_endpoint ( int ( * ) ( s#sctp_endpoint * , void * ) , void * ) 
sctp_transport_lookup_process int sctp_transport_lookup_process ( int ( * ) ( s#sctp_transport * , void * ) , s#net * , const u#sctp_addr * , const u#sctp_addr * , void * ) 
sctp_for_each_transport int sctp_for_each_transport ( int ( * ) ( s#sctp_transport * , void * ) , int ( * ) ( s#sctp_transport * , void * ) , s#net * , int * , void * ) 
sctp_do_peeloff int sctp_do_peeloff ( s#sock * , t#sctp_assoc_t , s#socket * * ) 

/* net/smc/af_smc.o */
s##posix_acl
s##vfsmount
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##sec_path
s##workqueue_struct
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##kmem_cache
s##xfrm_state
s##lwtunnel_state
s##uncached_list
s##rt6_info
s##dn_route
s##prefix_info
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##phy_device
s##sfp_bus
s##prot_inuse
s##ipv4_devconf
s##xt_table
s##rt6_statistics
s##fib6_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##mempolicy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sock_reuseport
smc_hash_sk int smc_hash_sk ( s#sock * ) 
smc_unhash_sk void smc_unhash_sk ( s#sock * ) 
smc_proto extern s#proto smc_proto 
smc_proto6 extern s#proto smc_proto6 

/* net/smc/smc_ism.o */
s#smcd_dmb struct smcd_dmb { t#u64 dmb_tok ; t#u64 rgid ; t#u32 dmb_len ; t#u32 sba_idx ; t#u32 vlan_valid ; t#u32 vlan_id ; void * cpu_addr ; t#dma_addr_t dma_addr ; } 
s#smcd_ops struct smcd_ops { int ( * query_remote_gid ) ( s#smcd_dev * , t#u64 , t#u32 , t#u32 ) ; int ( * register_dmb ) ( s#smcd_dev * , s#smcd_dmb * ) ; int ( * unregister_dmb ) ( s#smcd_dev * , s#smcd_dmb * ) ; int ( * add_vlan_id ) ( s#smcd_dev * , t#u64 ) ; int ( * del_vlan_id ) ( s#smcd_dev * , t#u64 ) ; int ( * set_vlan_required ) ( s#smcd_dev * ) ; int ( * reset_vlan_required ) ( s#smcd_dev * ) ; int ( * signal_event ) ( s#smcd_dev * , t#u64 , t#u32 , t#u32 , t#u64 ) ; int ( * move_data ) ( s#smcd_dev * , t#u64 , unsigned int , t#bool , unsigned int , void * , unsigned int ) ; } 
s##device_private
s##posix_acl
s##vfsmount
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##workqueue_struct
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##sec_path
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##kmem_cache
s##xfrm_state
s##lwtunnel_state
s##uncached_list
s##rt6_info
s##dn_route
s##prefix_info
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
s##prot_inuse
s##ipv4_devconf
s##xt_table
s##inet_hashinfo
s##rt6_statistics
s##fib6_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##eventfd_ctx
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sock_reuseport
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
e#smc_lgr_role enum smc_lgr_role { SMC_CLNT , SMC_SERV } 
s##ib_uverbs_file
s##ib_umem_odp
s##uverbs_api_object
s##ib_pkey_cache
s##ib_gid_table
s##iw_cm_verbs
s##ib_mad_hdr
s##uverbs_attr_bundle
s##uverbs_object_tree_def
s#smc_ib_device struct smc_ib_device { s#list_head list ; s#ib_device * ibdev ; s#ib_port_attr pattr [ 2 ] ; s#ib_event_handler event_handler ; s#ib_cq * roce_cq_send ; s#ib_cq * roce_cq_recv ; s#tasklet_struct send_tasklet ; s#tasklet_struct recv_tasklet ; char mac [ 2 ] [ 6 ] ; t#u8 pnetid [ 2 ] [ 16 ] ; t#u8 initialized : 1 ; s#work_struct port_event_work ; unsigned long port_event_mask ; } 
s#smc_wr_buf struct smc_wr_buf { t#u8 raw [ 48 ] ; } 
s##smc_wr_tx_pend
e#smc_wr_reg_state enum smc_wr_reg_state { POSTED , CONFIRMED , FAILED } 
e#smc_link_state enum smc_link_state { SMC_LNK_INACTIVE , SMC_LNK_ACTIVATING , SMC_LNK_ACTIVE , SMC_LNK_DELETING , } 
s#smc_link struct smc_link { s#smc_ib_device * smcibdev ; t#u8 ibport ; s#ib_pd * roce_pd ; s#ib_qp * roce_qp ; s#ib_qp_attr qp_attr ; s#smc_wr_buf * wr_tx_bufs ; s#ib_send_wr * wr_tx_ibs ; s#ib_sge * wr_tx_sges ; s#smc_wr_tx_pend * wr_tx_pends ; t#dma_addr_t wr_tx_dma_addr ; t#atomic_long_t wr_tx_id ; unsigned long * wr_tx_mask ; t#u32 wr_tx_cnt ; t#wait_queue_head_t wr_tx_wait ; s#smc_wr_buf * wr_rx_bufs ; s#ib_recv_wr * wr_rx_ibs ; s#ib_sge * wr_rx_sges ; t#dma_addr_t wr_rx_dma_addr ; t#u64 wr_rx_id ; t#u32 wr_rx_cnt ; unsigned long wr_rx_tstamp ; s#ib_reg_wr wr_reg ; t#wait_queue_head_t wr_reg_wait ; e#smc_wr_reg_state wr_reg_state ; t#u8 gid [ sizeof ( union ib_gid ) ] ; t#u8 sgid_index ; t#u32 peer_qpn ; e#ib_mtu path_mtu ; e#ib_mtu peer_mtu ; t#u32 psn_initial ; t#u32 peer_psn ; t#u8 peer_mac [ 6 ] ; t#u8 peer_gid [ sizeof ( union ib_gid ) ] ; t#u8 link_id ; e#smc_link_state state ; s#workqueue_struct * llc_wq ; s#completion llc_confirm ; s#completion llc_confirm_resp ; int llc_confirm_rc ; int llc_confirm_resp_rc ; s#completion llc_add ; s#completion llc_add_resp ; s#delayed_work llc_testlink_wrk ; s#completion llc_testlink_resp ; int llc_testlink_time ; s#completion llc_confirm_rkey ; int llc_confirm_rkey_rc ; s#completion llc_delete_rkey ; int llc_delete_rkey_rc ; s#mutex llc_delete_rkey_mutex ; } 
s#smc_rtoken struct smc_rtoken { t#u64 dma_addr ; t#u32 rkey ; } 
s#smc_link_group struct smc_link_group { s#list_head list ; s#rb_root conns_all ; t#rwlock_t conns_lock ; unsigned int conns_num ; unsigned short vlan_id ; s#list_head sndbufs [ 16 ] ; t#rwlock_t sndbufs_lock ; s#list_head rmbs [ 16 ] ; t#rwlock_t rmbs_lock ; t#u8 id [ 4 ] ; s#delayed_work free_work ; t#u8 sync_err : 1 ; t#u8 terminating : 1 ; t#bool is_smcd ; union { struct { e#smc_lgr_role role ; s#smc_link lnk [ 1 ] ; char peer_systemid [ 8 ] ; s#smc_rtoken rtokens [ 255 ] [ 1 ] ; unsigned long rtokens_used_mask [ ( ( ( 255 ) + ( 8 * sizeof ( long ) ) - 1 ) / ( 8 * sizeof ( long ) ) ) ] ; } ; struct { t#u64 peer_gid ; s#smcd_dev * smcd ; } ; } ; } 
s#smc_buf_desc struct smc_buf_desc { s#list_head list ; void * cpu_addr ; s#page * pages ; int len ; t#u32 used ; t#u8 wr_reg : 1 ; t#u8 regerr : 1 ; union { struct { s#sg_table sgt [ 1 ] ; s#ib_mr * mr_rx [ 1 ] ; t#u32 order ; } ; struct { unsigned short sba_idx ; t#u64 token ; t#dma_addr_t dma_addr ; } ; } ; } 
s#smc_wr_rx_hdr struct smc_wr_rx_hdr { t#u8 type ; } 
u#smc_host_cursor union smc_host_cursor { struct { t#u16 reserved ; t#u16 wrap ; t#u32 count ; } ; t#atomic64_t acurs ; } 
s#smc_cdc_producer_flags struct smc_cdc_producer_flags { t#u8 write_blocked : 1 ; t#u8 urg_data_pending : 1 ; t#u8 urg_data_present : 1 ; t#u8 cons_curs_upd_req : 1 ; t#u8 failover_validation : 1 ; t#u8 reserved : 3 ; } 
s#smc_cdc_conn_state_flags struct smc_cdc_conn_state_flags { t#u8 peer_done_writing : 1 ; t#u8 peer_conn_closed : 1 ; t#u8 peer_conn_abort : 1 ; t#u8 reserved : 5 ; } 
s#smc_host_cdc_msg struct smc_host_cdc_msg { s#smc_wr_rx_hdr common ; t#u8 len ; t#u16 seqno ; t#u32 token ; u#smc_host_cursor prod ; u#smc_host_cursor cons ; s#smc_cdc_producer_flags prod_flags ; s#smc_cdc_conn_state_flags conn_state_flags ; t#u8 reserved [ 18 ] ; } 
e#smc_urg_state enum smc_urg_state { SMC_URG_VALID , SMC_URG_NOTYET , SMC_URG_READ } 
s#smc_connection struct smc_connection { s#rb_node alert_node ; s#smc_link_group * lgr ; t#u32 alert_token_local ; t#u8 peer_rmbe_idx ; int peer_rmbe_size ; t#atomic_t peer_rmbe_space ; int rtoken_idx ; s#smc_buf_desc * sndbuf_desc ; s#smc_buf_desc * rmb_desc ; int rmbe_size_short ; int rmbe_update_limit ; s#smc_host_cdc_msg local_tx_ctrl ; u#smc_host_cursor tx_curs_prep ; u#smc_host_cursor tx_curs_sent ; u#smc_host_cursor tx_curs_fin ; t#atomic_t sndbuf_space ; t#u16 tx_cdc_seq ; t#spinlock_t send_lock ; s#delayed_work tx_work ; t#u32 tx_off ; s#smc_host_cdc_msg local_rx_ctrl ; u#smc_host_cursor rx_curs_confirmed ; u#smc_host_cursor urg_curs ; e#smc_urg_state urg_state ; t#bool urg_tx_pend ; t#bool urg_rx_skip_pend ; char urg_rx_byte ; t#atomic_t bytes_to_rcv ; t#atomic_t splice_pending ; s#work_struct close_work ; s#tasklet_struct rx_tsklet ; t#u8 rx_off ; t#u64 peer_token ; } 
s#smcd_dev struct smcd_dev { const s#smcd_ops * ops ; s#device dev ; void * priv ; t#u64 local_gid ; s#list_head list ; t#spinlock_t lock ; s#smc_connection * * conn ; s#list_head vlan ; s#workqueue_struct * event_wq ; t#u8 pnetid [ 16 ] ; } 
smcd_alloc_dev s#smcd_dev * smcd_alloc_dev ( s#device * , const char * , const s#smcd_ops * , int ) 
smcd_register_dev int smcd_register_dev ( s#smcd_dev * ) 
smcd_unregister_dev void smcd_unregister_dev ( s#smcd_dev * ) 
smcd_free_dev void smcd_free_dev ( s#smcd_dev * ) 
s#smcd_event struct smcd_event { t#u32 type ; t#u32 code ; t#u64 tok ; t#u64 time ; t#u64 info ; } 
smcd_handle_event void smcd_handle_event ( s#smcd_dev * , s#smcd_event * ) 
smcd_handle_irq void smcd_handle_irq ( s#smcd_dev * , unsigned int ) 

/* net/socket.o */
s##posix_acl
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##mmu_notifier_mm
s##xol_area
s##kmem_cache
s##fs_pin
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##sec_path
s##workqueue_struct
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##xfrm_state
s##lwtunnel_state
s##uncached_list
s##rt6_info
s##dn_route
s##prefix_info
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##device_private
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##phy_device
s##sfp_bus
s##prot_inuse
s##ipv4_devconf
s##xt_table
s##inet_hashinfo
s##rt6_statistics
s##fib6_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##ring_buffer
s##static_key_mod
s##trace_array
s##tracer
s##trace_buffer
s##ring_buffer_iter
s##event_filter
s##ftrace_hash
s##numa_group
s##task_delay_info
s##uprobe
s##gs_cb
s##swap_info_struct
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##kstatfs
s##export_operations
s##fscrypt_operations
s##hd_struct
s##mtd_info
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
sock_alloc_file s#file * sock_alloc_file ( s#socket * , int , const char * ) 
sock_from_file s#socket * sock_from_file ( s#file * , int * ) 
sockfd_lookup s#socket * sockfd_lookup ( int , int * ) 
sock_alloc s#socket * sock_alloc ( void ) 
sock_release void sock_release ( s#socket * ) 
__sock_tx_timestamp void __sock_tx_timestamp ( t#__u16 , t#__u8 * ) 
sock_sendmsg int sock_sendmsg ( s#socket * , s#msghdr * ) 
kernel_sendmsg int kernel_sendmsg ( s#socket * , s#msghdr * , s#kvec * , t#size_t , t#size_t ) 
kernel_sendmsg_locked int kernel_sendmsg_locked ( s#sock * , s#msghdr * , s#kvec * , t#size_t , t#size_t ) 
__sock_recv_timestamp void __sock_recv_timestamp ( s#msghdr * , s#sock * , s#sk_buff * ) 
__sock_recv_wifi_status void __sock_recv_wifi_status ( s#msghdr * , s#sock * , s#sk_buff * ) 
__sock_recv_ts_and_drops void __sock_recv_ts_and_drops ( s#msghdr * , s#sock * , s#sk_buff * ) 
sock_recvmsg int sock_recvmsg ( s#socket * , s#msghdr * , int ) 
kernel_recvmsg int kernel_recvmsg ( s#socket * , s#msghdr * , s#kvec * , t#size_t , t#size_t , int ) 
brioctl_set extern void brioctl_set ( int ( * ) ( s#net * , unsigned int , void * ) ) 
vlan_ioctl_set extern void vlan_ioctl_set ( int ( * ) ( s#net * , void * ) ) 
dlci_ioctl_set extern void dlci_ioctl_set ( int ( * ) ( unsigned int , void * ) ) 
sock_create_lite int sock_create_lite ( int , int , int , s#socket * * ) 
sock_wake_async int sock_wake_async ( s#socket_wq * , int , int ) 
__sock_create int __sock_create ( s#net * , int , int , int , s#socket * * , int ) 
sock_create int sock_create ( int , int , int , s#socket * * ) 
sock_create_kern int sock_create_kern ( s#net * , int , int , int , s#socket * * ) 
s#net_proto_family struct net_proto_family { int family ; int ( * create ) ( s#net * , s#socket * , int , int ) ; s#module * owner ; } 
sock_register int sock_register ( const s#net_proto_family * ) 
sock_unregister void sock_unregister ( int ) 
kernel_bind int kernel_bind ( s#socket * , s#sockaddr * , int ) 
kernel_listen int kernel_listen ( s#socket * , int ) 
kernel_accept int kernel_accept ( s#socket * , s#socket * * , int ) 
kernel_connect int kernel_connect ( s#socket * , s#sockaddr * , int , int ) 
kernel_getsockname int kernel_getsockname ( s#socket * , s#sockaddr * , int * ) 
kernel_getpeername int kernel_getpeername ( s#socket * , s#sockaddr * , int * ) 
kernel_getsockopt int kernel_getsockopt ( s#socket * , int , int , char * , int * ) 
kernel_setsockopt int kernel_setsockopt ( s#socket * , int , int , char * , unsigned int ) 
kernel_sendpage int kernel_sendpage ( s#socket * , s#page * , int , t#size_t , int ) 
kernel_sendpage_locked int kernel_sendpage_locked ( s#sock * , s#page * , int , t#size_t , int ) 
kernel_sock_ioctl int kernel_sock_ioctl ( s#socket * , int , unsigned long ) 
e#sock_shutdown_cmd enum sock_shutdown_cmd { SHUT_RD , SHUT_WR , SHUT_RDWR , } 
kernel_sock_shutdown int kernel_sock_shutdown ( s#socket * , e#sock_shutdown_cmd ) 
kernel_sock_ip_overhead t#u32 kernel_sock_ip_overhead ( s#sock * ) 

/* net/strparser/strparser.o */
s##posix_acl
s##vfsmount
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##sec_path
s##workqueue_struct
s##udp_tunnel_info
s##btf
s##bpf_verifier_env
s##xdp_umem
s##switchdev_ops
s##kmem_cache
s##xfrm_state
s##lwtunnel_state
s##uncached_list
s##rt6_info
s##dn_route
s##prefix_info
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##phy_device
s##sfp_bus
s##prot_inuse
s##ipv4_devconf
s##xt_table
s##inet_hashinfo
s##rt6_statistics
s##fib6_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##netns_ipvs
s##mpls_route
s##bpf_cgroup_storage_map
s##cgroup_taskset
s##eventfd_ctx
s##mempolicy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sock_reuseport
strp_process int strp_process ( s#strparser * , s#sk_buff * , unsigned int , t#size_t , t#size_t , long ) 
strp_data_ready void strp_data_ready ( s#strparser * ) 
strp_init int strp_init ( s#strparser * , s#sock * , const s#strp_callbacks * ) 
__strp_unpause void __strp_unpause ( s#strparser * ) 
strp_unpause void strp_unpause ( s#strparser * ) 
strp_done void strp_done ( s#strparser * ) 
strp_stop void strp_stop ( s#strparser * ) 
strp_check_rcv void strp_check_rcv ( s#strparser * ) 

/* net/sunrpc/addr.o */
rpc_ntop t#size_t rpc_ntop ( const s#sockaddr * , char * , const t#size_t ) 
s##proc_ns_operations
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##workqueue_struct
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##kmem_cache
s##xfrm_state
s##lwtunnel_state
s##rtable
s##rt6_info
s##dn_route
s##prefix_info
s##proc_dir_entry
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##phy_device
s##sfp_bus
s##sec_path
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##key_user
s##key_type
s##assoc_array_ptr
s##uevent_sock
s##prot_inuse
s##ipv4_devconf
s##fib_table
s##inet_peer_base
s##xt_table
s##rt6_statistics
s##fib6_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
rpc_pton t#size_t rpc_pton ( s#net * , const char * , const t#size_t , s#sockaddr * , const t#size_t ) 
rpc_uaddr2sockaddr t#size_t rpc_uaddr2sockaddr ( s#net * , const char * , const t#size_t , s#sockaddr * , const t#size_t ) 

/* net/sunrpc/auth.o */
s##posix_acl
s##vfsmount
s##device_private
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##sec_path
s##workqueue_struct
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##kmem_cache
s##xfrm_state
s##lwtunnel_state
s##rtable
s##rt6_info
s##dn_route
s##prefix_info
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
s##prot_inuse
s##ipv4_devconf
s##fib_table
s##inet_peer_base
s##xt_table
s##inet_hashinfo
s##rt6_statistics
s##fib6_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##eventfd_ctx
s##mempolicy
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##rpc_cred_cache
s##svc_serv
s##svc_xprt
s##rpc_iostats
rpcauth_register int rpcauth_register ( const s#rpc_authops * ) 
rpcauth_unregister int rpcauth_unregister ( const s#rpc_authops * ) 
rpcauth_get_pseudoflavor t#rpc_authflavor_t rpcauth_get_pseudoflavor ( t#rpc_authflavor_t , s#rpcsec_gss_info * ) 
rpcauth_get_gssinfo int rpcauth_get_gssinfo ( t#rpc_authflavor_t , s#rpcsec_gss_info * ) 
rpcauth_list_flavors int rpcauth_list_flavors ( t#rpc_authflavor_t * , int ) 
rpcauth_create s#rpc_auth * rpcauth_create ( s#rpc_auth_create_args * , s#rpc_clnt * ) 
rpcauth_init_credcache int rpcauth_init_credcache ( s#rpc_auth * ) 
rpcauth_key_timeout_notify int rpcauth_key_timeout_notify ( s#rpc_auth * , s#rpc_cred * ) 
rpcauth_cred_key_to_expire t#bool rpcauth_cred_key_to_expire ( s#rpc_auth * , s#rpc_cred * ) 
rpcauth_stringify_acceptor char * rpcauth_stringify_acceptor ( s#rpc_cred * ) 
rpcauth_destroy_credcache void rpcauth_destroy_credcache ( s#rpc_auth * ) 
rpcauth_lookup_credcache s#rpc_cred * rpcauth_lookup_credcache ( s#rpc_auth * , s#auth_cred * , int , t#gfp_t ) 
rpcauth_lookupcred s#rpc_cred * rpcauth_lookupcred ( s#rpc_auth * , int ) 
rpcauth_init_cred void rpcauth_init_cred ( s#rpc_cred * , const s#auth_cred * , s#rpc_auth * , const s#rpc_credops * ) 
rpcauth_generic_bind_cred s#rpc_cred * rpcauth_generic_bind_cred ( s#rpc_task * , s#rpc_cred * , int ) 
put_rpccred void put_rpccred ( s#rpc_cred * ) 

/* net/sunrpc/auth_generic.o */
s##posix_acl
s##vfsmount
s##device_private
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##sec_path
s##workqueue_struct
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##kmem_cache
s##xfrm_state
s##lwtunnel_state
s##rtable
s##rt6_info
s##dn_route
s##prefix_info
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
s##prot_inuse
s##ipv4_devconf
s##fib_table
s##inet_peer_base
s##xt_table
s##inet_hashinfo
s##rt6_statistics
s##fib6_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##eventfd_ctx
s##mempolicy
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##svc_serv
s##svc_xprt
s##rpc_iostats
s##rpcsec_gss_info
s##rpc_cred_cache
rpc_lookup_cred s#rpc_cred * rpc_lookup_cred ( void ) 
rpc_lookup_generic_cred s#rpc_cred * rpc_lookup_generic_cred ( s#auth_cred * , int , t#gfp_t ) 
rpc_lookup_cred_nonblock s#rpc_cred * rpc_lookup_cred_nonblock ( void ) 
rpc_lookup_machine_cred s#rpc_cred * rpc_lookup_machine_cred ( const char * ) 

/* net/sunrpc/auth_gss/gss_generic_token.o */
g_token_size int g_token_size ( s#xdr_netobj * , unsigned int ) 
g_make_token_header void g_make_token_header ( s#xdr_netobj * , int , unsigned char * * ) 
g_verify_token_header t#u32 g_verify_token_header ( s#xdr_netobj * , int * , unsigned char * * , int ) 

/* net/sunrpc/auth_gss/gss_mech_switch.o */
s##posix_acl
s##vfsmount
s##device_private
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##sec_path
s##workqueue_struct
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##kmem_cache
s##xfrm_state
s##lwtunnel_state
s##rtable
s##rt6_info
s##dn_route
s##prefix_info
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
s##prot_inuse
s##ipv4_devconf
s##fib_table
s##inet_peer_base
s##xt_table
s##inet_hashinfo
s##rt6_statistics
s##fib6_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##eventfd_ctx
s##mempolicy
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
gss_mech_register int gss_mech_register ( s#gss_api_mech * ) 
gss_mech_unregister void gss_mech_unregister ( s#gss_api_mech * ) 
gss_mech_get s#gss_api_mech * gss_mech_get ( s#gss_api_mech * ) 
gss_pseudoflavor_to_service t#u32 gss_pseudoflavor_to_service ( s#gss_api_mech * , t#u32 ) 
gss_mech_put void gss_mech_put ( s#gss_api_mech * ) 

/* net/sunrpc/auth_gss/svcauth_gss.o */
s##posix_acl
s##vfsmount
s##device_private
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##sec_path
s##workqueue_struct
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##kmem_cache
s##xfrm_state
s##lwtunnel_state
s##rtable
s##rt6_info
s##dn_route
s##prefix_info
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
s##prot_inuse
s##ipv4_devconf
s##fib_table
s##inet_peer_base
s##xt_table
s##inet_hashinfo
s##rt6_statistics
s##fib6_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##netns_ipvs
s##mpls_route
s##eventfd_ctx
s##mempolicy
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##rpc_iostats
s##rpc_cred_cache
s##svc_cacherep
svcauth_gss_flavor t#u32 svcauth_gss_flavor ( s#auth_domain * ) 
svcauth_gss_register_pseudoflavor int svcauth_gss_register_pseudoflavor ( t#u32 , char * ) 

/* net/sunrpc/backchannel_rqst.o */
s##rpc_procinfo
s##posix_acl
s##vfsmount
s##device_private
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##sec_path
s##workqueue_struct
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##kmem_cache
s##xfrm_state
s##lwtunnel_state
s##rtable
s##rt6_info
s##dn_route
s##ndisc_ops
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
s##prot_inuse
s##ipv4_devconf
s##fib_table
s##inet_peer_base
s##xt_table
s##inet_hashinfo
s##ipv6_devconf
s##rt6_statistics
s##fib6_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##eventfd_ctx
s##mempolicy
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##rpc_clnt
s##rpc_cred_cache
s##rpc_xprt_switch
s##svc_cacherep
s##svc_stat
xprt_setup_backchannel int xprt_setup_backchannel ( s#rpc_xprt * , unsigned int ) 
xprt_destroy_backchannel void xprt_destroy_backchannel ( s#rpc_xprt * , unsigned int ) 

/* net/sunrpc/cache.o */
s##sock
s##vfsmount
s##posix_acl
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kmem_cache
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##proc_dir_entry
s##ucounts
s##proc_ns_operations
s##uevent_sock
s##net_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##sec_path
s##xt_table
s##inet_hashinfo
s##fib_notifier_ops
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##neighbour
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##nf_hook_entry
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##netns_ipvs
s##mpls_route
s#cache_detail struct cache_detail { s#module * owner ; int hash_size ; s#hlist_head * hash_table ; t#rwlock_t hash_lock ; char * name ; void ( * cache_put ) ( s#kref * ) ; int ( * cache_upcall ) ( s#cache_detail * , s#cache_head * ) ; void ( * cache_request ) ( s#cache_detail * , s#cache_head * , char * * , int * ) ; int ( * cache_parse ) ( s#cache_detail * , char * , int ) ; int ( * cache_show ) ( s#seq_file * , s#cache_detail * , s#cache_head * ) ; void ( * warn_no_listener ) ( s#cache_detail * , int ) ; s#cache_head * ( * alloc ) ( void ) ; int ( * match ) ( s#cache_head * , s#cache_head * ) ; void ( * init ) ( s#cache_head * , s#cache_head * ) ; void ( * update ) ( s#cache_head * , s#cache_head * ) ; t#time_t flush_time ; s#list_head others ; t#time_t nextcheck ; int entries ; s#list_head queue ; t#atomic_t readers ; t#time_t last_close ; t#time_t last_warn ; union { s#proc_dir_entry * procfs ; s#dentry * pipefs ; } ; s#net * net ; } 
sunrpc_cache_lookup extern s#cache_head * sunrpc_cache_lookup ( s#cache_detail * , s#cache_head * , int ) 
sunrpc_cache_update extern s#cache_head * sunrpc_cache_update ( s#cache_detail * , s#cache_head * , s#cache_head * , int ) 
cache_check extern int cache_check ( s#cache_detail * , s#cache_head * , s#cache_req * ) 
sunrpc_init_cache_detail extern void sunrpc_init_cache_detail ( s#cache_detail * ) 
sunrpc_destroy_cache_detail extern void sunrpc_destroy_cache_detail ( s#cache_detail * ) 
cache_flush extern void cache_flush ( void ) 
cache_purge extern void cache_purge ( s#cache_detail * ) 
qword_add extern void qword_add ( char * * , int * , char * ) 
qword_addhex extern void qword_addhex ( char * * , int * , char * , int ) 
sunrpc_cache_pipe_upcall extern int sunrpc_cache_pipe_upcall ( s#cache_detail * , s#cache_head * ) 
qword_get extern int qword_get ( char * * , char * , int ) 
cache_seq_start extern void * cache_seq_start ( s#seq_file * , t#loff_t * ) 
cache_seq_next extern void * cache_seq_next ( s#seq_file * , void * , t#loff_t * ) 
cache_seq_stop extern void cache_seq_stop ( s#seq_file * , void * ) 
cache_register_net extern int cache_register_net ( s#cache_detail * , s#net * ) 
cache_unregister_net extern void cache_unregister_net ( s#cache_detail * , s#net * ) 
cache_create_net extern s#cache_detail * cache_create_net ( s#cache_detail * , s#net * ) 
cache_destroy_net extern void cache_destroy_net ( s#cache_detail * , s#net * ) 
sunrpc_cache_register_pipefs extern int sunrpc_cache_register_pipefs ( s#dentry * , const char * , t#umode_t , s#cache_detail * ) 
sunrpc_cache_unregister_pipefs extern void sunrpc_cache_unregister_pipefs ( s#cache_detail * ) 
sunrpc_cache_unhash extern void sunrpc_cache_unhash ( s#cache_detail * , s#cache_head * ) 

/* net/sunrpc/clnt.o */
s##posix_acl
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##sec_path
s##workqueue_struct
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##kmem_cache
s##xfrm_state
s##lwtunnel_state
s##rtable
s##rt6_info
s##dn_route
s##prefix_info
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##phy_device
s##sfp_bus
s##prot_inuse
s##ipv4_devconf
s##fib_table
s##inet_peer_base
s##xt_table
s##inet_hashinfo
s##rt6_statistics
s##fib6_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##netns_ipvs
s##mpls_route
s##eventfd_ctx
s##mempolicy
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##rpc_cred_cache
s##svc_cacherep
s#rpc_create_args struct rpc_create_args { s#net * net ; int protocol ; s#sockaddr * address ; t#size_t addrsize ; s#sockaddr * saddress ; const s#rpc_timeout * timeout ; const char * servername ; const char * nodename ; const s#rpc_program * program ; t#u32 prognumber ; t#u32 version ; t#rpc_authflavor_t authflavor ; t#u32 nconnect ; unsigned long flags ; char * client_name ; s#svc_xprt * bc_xprt ; } 
rpc_create s#rpc_clnt * rpc_create ( s#rpc_create_args * ) 
rpc_clone_client s#rpc_clnt * rpc_clone_client ( s#rpc_clnt * ) 
rpc_clone_client_set_auth s#rpc_clnt * rpc_clone_client_set_auth ( s#rpc_clnt * , t#rpc_authflavor_t ) 
s#xprt_create struct xprt_create { int ident ; s#net * net ; s#sockaddr * srcaddr ; s#sockaddr * dstaddr ; t#size_t addrlen ; const char * servername ; s#svc_xprt * bc_xprt ; s#rpc_xprt_switch * bc_xps ; unsigned int flags ; t#u32 transport_id ; t#u32 bitmask_len ; t#u32 init_xid ; } 
rpc_switch_client_transport int rpc_switch_client_transport ( s#rpc_clnt * , s#xprt_create * , const s#rpc_timeout * ) 
rpc_clnt_iterate_for_each_xprt int rpc_clnt_iterate_for_each_xprt ( s#rpc_clnt * , int ( * ) ( s#rpc_clnt * , s#rpc_xprt * , void * ) , void * ) 
rpc_killall_tasks void rpc_killall_tasks ( s#rpc_clnt * ) 
rpc_shutdown_client void rpc_shutdown_client ( s#rpc_clnt * ) 
rpc_release_client void rpc_release_client ( s#rpc_clnt * ) 
rpc_bind_new_program s#rpc_clnt * rpc_bind_new_program ( s#rpc_clnt * , const s#rpc_program * , t#u32 ) 
rpc_task_release_transport void rpc_task_release_transport ( s#rpc_task * ) 
rpc_run_task s#rpc_task * rpc_run_task ( const s#rpc_task_setup * ) 
rpc_call_sync int rpc_call_sync ( s#rpc_clnt * , const s#rpc_message * , int ) 
rpc_call_async int rpc_call_async ( s#rpc_clnt * , const s#rpc_message * , int , const s#rpc_call_ops * , void * ) 
rpc_call_start void rpc_call_start ( s#rpc_task * ) 
rpc_peeraddr t#size_t rpc_peeraddr ( s#rpc_clnt * , s#sockaddr * , t#size_t ) 
e#rpc_display_format_t enum rpc_display_format_t { RPC_DISPLAY_ADDR = 0 , RPC_DISPLAY_PORT , RPC_DISPLAY_PROTO , RPC_DISPLAY_HEX_ADDR , RPC_DISPLAY_HEX_PORT , RPC_DISPLAY_NETID , RPC_DISPLAY_MAX , } 
rpc_peeraddr2str const char * rpc_peeraddr2str ( s#rpc_clnt * , e#rpc_display_format_t ) 
rpc_localaddr int rpc_localaddr ( s#rpc_clnt * , s#sockaddr * , t#size_t ) 
rpc_setbufsize void rpc_setbufsize ( s#rpc_clnt * , unsigned int , unsigned int ) 
rpc_protocol int rpc_protocol ( s#rpc_clnt * ) 
rpc_net_ns s#net * rpc_net_ns ( s#rpc_clnt * ) 
rpc_max_payload t#size_t rpc_max_payload ( s#rpc_clnt * ) 
rpc_max_bc_payload t#size_t rpc_max_bc_payload ( s#rpc_clnt * ) 
rpc_force_rebind void rpc_force_rebind ( s#rpc_clnt * ) 
rpc_restart_call_prepare int rpc_restart_call_prepare ( s#rpc_task * ) 
rpc_restart_call int rpc_restart_call ( s#rpc_task * ) 
rpc_call_null s#rpc_task * rpc_call_null ( s#rpc_clnt * , s#rpc_cred * , int ) 
rpc_clnt_test_and_add_xprt int rpc_clnt_test_and_add_xprt ( s#rpc_clnt * , s#rpc_xprt_switch * , s#rpc_xprt * , void * ) 
rpc_clnt_setup_test_and_add_xprt int rpc_clnt_setup_test_and_add_xprt ( s#rpc_clnt * , s#rpc_xprt_switch * , s#rpc_xprt * , void * ) 
rpc_clnt_add_xprt int rpc_clnt_add_xprt ( s#rpc_clnt * , s#xprt_create * , int ( * ) ( s#rpc_clnt * , s#rpc_xprt_switch * , s#rpc_xprt * , void * ) , void * ) 
rpc_set_connect_timeout void rpc_set_connect_timeout ( s#rpc_clnt * , unsigned long , unsigned long ) 
rpc_clnt_xprt_switch_put void rpc_clnt_xprt_switch_put ( s#rpc_clnt * ) 
rpc_clnt_xprt_switch_add_xprt void rpc_clnt_xprt_switch_add_xprt ( s#rpc_clnt * , s#rpc_xprt * ) 
rpc_clnt_xprt_switch_has_addr t#bool rpc_clnt_xprt_switch_has_addr ( s#rpc_clnt * , const s#sockaddr * ) 
rpc_clnt_swap_activate int rpc_clnt_swap_activate ( s#rpc_clnt * ) 
rpc_clnt_swap_deactivate void rpc_clnt_swap_deactivate ( s#rpc_clnt * ) 

/* net/sunrpc/rpc_pipe.o */
rpc_pipefs_notifier_register extern int rpc_pipefs_notifier_register ( s#notifier_block * ) 
rpc_pipefs_notifier_unregister extern void rpc_pipefs_notifier_unregister ( s#notifier_block * ) 
s##posix_acl
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##mmu_notifier_mm
s##xol_area
s##kmem_cache
s##fs_pin
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##sec_path
s##workqueue_struct
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##xfrm_state
s##lwtunnel_state
s##rtable
s##rt6_info
s##dn_route
s##prefix_info
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##phy_device
s##sfp_bus
s##prot_inuse
s##ipv4_devconf
s##fib_table
s##inet_peer_base
s##xt_table
s##inet_hashinfo
s##rt6_statistics
s##fib6_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##netns_ipvs
s##mpls_route
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##swap_info_struct
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##mtd_info
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fscrypt_info
s#rpc_pipe_msg struct rpc_pipe_msg { s#list_head list ; void * data ; t#size_t len ; t#size_t copied ; int errno ; } 
rpc_pipe_generic_upcall extern t#ssize_t rpc_pipe_generic_upcall ( s#file * , s#rpc_pipe_msg * , char * , t#size_t ) 
s#rpc_pipe_ops struct rpc_pipe_ops { t#ssize_t ( * upcall ) ( s#file * , s#rpc_pipe_msg * , char * , t#size_t ) ; t#ssize_t ( * downcall ) ( s#file * , const char * , t#size_t ) ; void ( * release_pipe ) ( s#inode * ) ; int ( * open_pipe ) ( s#inode * ) ; void ( * destroy_msg ) ( s#rpc_pipe_msg * ) ; } 
s#rpc_pipe struct rpc_pipe { s#list_head pipe ; s#list_head in_upcall ; s#list_head in_downcall ; int pipelen ; int nreaders ; int nwriters ; int flags ; s#delayed_work queue_timeout ; const s#rpc_pipe_ops * ops ; t#spinlock_t lock ; s#dentry * dentry ; } 
rpc_queue_upcall extern int rpc_queue_upcall ( s#rpc_pipe * , s#rpc_pipe_msg * ) 
rpc_destroy_pipe_data void rpc_destroy_pipe_data ( s#rpc_pipe * ) 
rpc_mkpipe_data s#rpc_pipe * rpc_mkpipe_data ( const s#rpc_pipe_ops * , int ) 
rpc_rmdir extern int rpc_rmdir ( s#dentry * ) 
rpc_mkpipe_dentry extern s#dentry * rpc_mkpipe_dentry ( s#dentry * , const char * , void * , s#rpc_pipe * ) 
rpc_unlink extern int rpc_unlink ( s#dentry * ) 
rpc_init_pipe_dir_head extern void rpc_init_pipe_dir_head ( s#rpc_pipe_dir_head * ) 
s#rpc_pipe_dir_object_ops struct rpc_pipe_dir_object_ops { int ( * create ) ( s#dentry * , s#rpc_pipe_dir_object * ) ; void ( * destroy ) ( s#dentry * , s#rpc_pipe_dir_object * ) ; } 
s#rpc_pipe_dir_object struct rpc_pipe_dir_object { s#list_head pdo_head ; const s#rpc_pipe_dir_object_ops * pdo_ops ; void * pdo_data ; } 
rpc_init_pipe_dir_object extern void rpc_init_pipe_dir_object ( s#rpc_pipe_dir_object * , const s#rpc_pipe_dir_object_ops * , void * ) 
rpc_add_pipe_dir_object extern int rpc_add_pipe_dir_object ( s#net * , s#rpc_pipe_dir_head * , s#rpc_pipe_dir_object * ) 
rpc_remove_pipe_dir_object extern void rpc_remove_pipe_dir_object ( s#net * , s#rpc_pipe_dir_head * , s#rpc_pipe_dir_object * ) 
rpc_find_or_alloc_pipe_dir_object extern s#rpc_pipe_dir_object * rpc_find_or_alloc_pipe_dir_object ( s#net * , s#rpc_pipe_dir_head * , int ( * ) ( s#rpc_pipe_dir_object * , void * ) , s#rpc_pipe_dir_object * ( * ) ( void * ) , void * ) 
rpc_d_lookup_sb extern s#dentry * rpc_d_lookup_sb ( const s#super_block * , const unsigned char * ) 
rpc_get_sb_net extern s#super_block * rpc_get_sb_net ( const s#net * ) 
rpc_put_sb_net extern void rpc_put_sb_net ( const s#net * ) 
gssd_running extern t#bool gssd_running ( s#net * ) 

/* net/sunrpc/rpcb_clnt.o */
s##posix_acl
s##vfsmount
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##sec_path
s##workqueue_struct
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##kmem_cache
s##xfrm_state
s##lwtunnel_state
s##rtable
s##rt6_info
s##dn_route
s##prefix_info
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##phy_device
s##sfp_bus
s##prot_inuse
s##ipv4_devconf
s##fib_table
s##inet_peer_base
s##xt_table
s##inet_hashinfo
s##rt6_statistics
s##fib6_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##netns_ipvs
s##mpls_route
s##eventfd_ctx
s##mempolicy
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##svc_serv
s##svc_xprt
s##rpc_iostats
s##rpcsec_gss_info
s##rpc_cred_cache
rpcb_getport_async void rpcb_getport_async ( s#rpc_task * ) 

/* net/sunrpc/sched.o */
rpc_init_priority_wait_queue void rpc_init_priority_wait_queue ( s#rpc_wait_queue * , const char * ) 
rpc_init_wait_queue void rpc_init_wait_queue ( s#rpc_wait_queue * , const char * ) 
rpc_destroy_wait_queue void rpc_destroy_wait_queue ( s#rpc_wait_queue * ) 
s##posix_acl
s##vfsmount
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##kmem_cache
s##fs_pin
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##sec_path
s##workqueue_struct
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##xfrm_state
s##lwtunnel_state
s##rtable
s##rt6_info
s##dn_route
s##prefix_info
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##phy_device
s##sfp_bus
s##prot_inuse
s##ipv4_devconf
s##fib_table
s##inet_peer_base
s##xt_table
s##inet_hashinfo
s##rt6_statistics
s##fib6_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##eventfd_ctx
s##mempolicy
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##ring_buffer
s##static_key_mod
s##trace_array
s##tracer
s##trace_buffer
s##ring_buffer_iter
s##event_filter
s##ftrace_hash
s##numa_group
s##task_delay_info
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##svc_cacherep
s##rpc_iostats
s##rpc_cred_cache
__rpc_wait_for_completion_task int __rpc_wait_for_completion_task ( s#rpc_task * , t#wait_bit_action_f * ) 
t#rpc_action typedef void ( * rpc_action ) ( s#rpc_task * ) 
rpc_sleep_on void rpc_sleep_on ( s#rpc_wait_queue * , s#rpc_task * , t#rpc_action ) 
rpc_sleep_on_priority void rpc_sleep_on_priority ( s#rpc_wait_queue * , s#rpc_task * , t#rpc_action , int ) 
rpc_wake_up_queued_task void rpc_wake_up_queued_task ( s#rpc_wait_queue * , s#rpc_task * ) 
rpc_wake_up_first s#rpc_task * rpc_wake_up_first ( s#rpc_wait_queue * , t#bool ( * ) ( s#rpc_task * , void * ) , void * ) 
rpc_wake_up_next s#rpc_task * rpc_wake_up_next ( s#rpc_wait_queue * ) 
rpc_wake_up void rpc_wake_up ( s#rpc_wait_queue * ) 
rpc_wake_up_status void rpc_wake_up_status ( s#rpc_wait_queue * , int ) 
rpc_delay void rpc_delay ( s#rpc_task * , unsigned long ) 
rpc_exit void rpc_exit ( s#rpc_task * , int ) 
rpc_malloc int rpc_malloc ( s#rpc_task * ) 
rpc_free void rpc_free ( s#rpc_task * ) 
rpc_put_task void rpc_put_task ( s#rpc_task * ) 
rpc_put_task_async void rpc_put_task_async ( s#rpc_task * ) 

/* net/sunrpc/socklib.o */
s##proc_ns_operations
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##kmem_cache
s##timewait_sock_ops
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##bpf_prog_aux
s##xfrm_policy
s##workqueue_struct
s##xfrm_state
s##lwtunnel_state
s##rtable
s##rt6_info
s##dn_route
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_dir_entry
s##uevent_sock
s##prot_inuse
s##ipv4_devconf
s##fib_table
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_statistics
s##fib6_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##nf_hook_entry
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##udp_tunnel_info
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##ndisc_ops
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
s##sec_path
s#xdr_skb_reader struct xdr_skb_reader { s#sk_buff * skb ; unsigned int offset ; t#size_t count ; t#__wsum csum ; } 
xdr_skb_read_bits t#size_t xdr_skb_read_bits ( s#xdr_skb_reader * , void * , t#size_t ) 
t#xdr_skb_read_actor typedef t#size_t ( * xdr_skb_read_actor ) ( s#xdr_skb_reader * , void * , t#size_t ) 
xdr_partial_copy_from_skb extern t#ssize_t xdr_partial_copy_from_skb ( s#xdr_buf * , unsigned int , s#xdr_skb_reader * , t#xdr_skb_read_actor ) 
csum_partial_copy_to_xdr extern int csum_partial_copy_to_xdr ( s#xdr_buf * , s#sk_buff * ) 

/* net/sunrpc/stats.o */
s##vfsmount
s##posix_acl
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##mmu_notifier_mm
s##xol_area
s##pid_namespace
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##sec_path
s##workqueue_struct
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##kmem_cache
s##xfrm_state
s##lwtunnel_state
s##rtable
s##rt6_info
s##dn_route
s##prefix_info
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##phy_device
s##sfp_bus
s##prot_inuse
s##ipv4_devconf
s##fib_table
s##inet_peer_base
s##xt_table
s##inet_hashinfo
s##rt6_statistics
s##fib6_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##netns_ipvs
s##mpls_route
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##swap_info_struct
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##mtd_info
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##rpc_cred_cache
s##svc_cacherep
svc_seq_show void svc_seq_show ( s#seq_file * , const s#svc_stat * ) 
rpc_alloc_iostats s#rpc_iostats * rpc_alloc_iostats ( s#rpc_clnt * ) 
rpc_free_iostats void rpc_free_iostats ( s#rpc_iostats * ) 
rpc_count_iostats_metrics void rpc_count_iostats_metrics ( const s#rpc_task * , s#rpc_iostats * ) 
rpc_count_iostats void rpc_count_iostats ( const s#rpc_task * , s#rpc_iostats * ) 
rpc_print_iostats void rpc_print_iostats ( s#seq_file * , s#rpc_clnt * ) 
rpc_proc_register s#proc_dir_entry * rpc_proc_register ( s#net * , s#rpc_stat * ) 
rpc_proc_unregister void rpc_proc_unregister ( s#net * , const char * ) 
svc_proc_register s#proc_dir_entry * svc_proc_register ( s#net * , s#svc_stat * , const s#file_operations * ) 
svc_proc_unregister void svc_proc_unregister ( s#net * , const char * ) 

/* net/sunrpc/sunrpc_syms.o */
sunrpc_net_id extern unsigned int sunrpc_net_id 

/* net/sunrpc/svc.o */
s#svc_pool_map struct svc_pool_map { int count ; int mode ; unsigned int npools ; unsigned int * pool_to ; unsigned int * to_pool ; } 
svc_pool_map extern s#svc_pool_map svc_pool_map 
svc_pool_map_get unsigned int svc_pool_map_get ( void ) 
svc_pool_map_put void svc_pool_map_put ( void ) 
s##posix_acl
s##vfsmount
s##device_private
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##sec_path
s##workqueue_struct
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##kmem_cache
s##xfrm_state
s##lwtunnel_state
s##rtable
s##rt6_info
s##dn_route
s##prefix_info
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
s##prot_inuse
s##ipv4_devconf
s##fib_table
s##inet_peer_base
s##xt_table
s##inet_hashinfo
s##rt6_statistics
s##fib6_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##eventfd_ctx
s##mempolicy
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##rpc_iostats
s##rpc_cred_cache
s##svc_cacherep
svc_rpcb_setup int svc_rpcb_setup ( s#svc_serv * , s#net * ) 
svc_rpcb_cleanup void svc_rpcb_cleanup ( s#svc_serv * , s#net * ) 
svc_bind int svc_bind ( s#svc_serv * , s#net * ) 
svc_create s#svc_serv * svc_create ( s#svc_program * , unsigned int , s#svc_serv_ops * ) 
svc_create_pooled s#svc_serv * svc_create_pooled ( s#svc_program * , unsigned int , s#svc_serv_ops * ) 
svc_shutdown_net void svc_shutdown_net ( s#svc_serv * , s#net * ) 
svc_destroy void svc_destroy ( s#svc_serv * ) 
svc_rqst_alloc s#svc_rqst * svc_rqst_alloc ( s#svc_serv * , s#svc_pool * , int ) 
svc_prepare_thread s#svc_rqst * svc_prepare_thread ( s#svc_serv * , s#svc_pool * , int ) 
svc_set_num_threads int svc_set_num_threads ( s#svc_serv * , s#svc_pool * , int ) 
svc_set_num_threads_sync int svc_set_num_threads_sync ( s#svc_serv * , s#svc_pool * , int ) 
svc_rqst_free void svc_rqst_free ( s#svc_rqst * ) 
svc_exit_thread void svc_exit_thread ( s#svc_rqst * ) 
svc_return_autherr t#__be32 svc_return_autherr ( s#svc_rqst * , t#__be32 ) 
svc_process int svc_process ( s#svc_rqst * ) 
bc_svc_process int bc_svc_process ( s#svc_serv * , s#rpc_rqst * , s#svc_rqst * ) 
svc_max_payload extern t#u32 svc_max_payload ( const s#svc_rqst * ) 
svc_fill_write_vector unsigned int svc_fill_write_vector ( s#svc_rqst * , s#kvec * , t#size_t ) 
svc_fill_symlink_pathname char * svc_fill_symlink_pathname ( s#svc_rqst * , s#kvec * , t#size_t ) 

/* net/sunrpc/svc_xprt.o */
s##posix_acl
s##vfsmount
s##device_private
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##sec_path
s##workqueue_struct
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##kmem_cache
s##xfrm_state
s##lwtunnel_state
s##rtable
s##rt6_info
s##dn_route
s##prefix_info
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
s##prot_inuse
s##ipv4_devconf
s##fib_table
s##inet_peer_base
s##xt_table
s##inet_hashinfo
s##rt6_statistics
s##fib6_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##eventfd_ctx
s##mempolicy
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##svc_cacherep
s##rpc_iostats
s##rpc_cred_cache
svc_reg_xprt_class int svc_reg_xprt_class ( s#svc_xprt_class * ) 
svc_unreg_xprt_class void svc_unreg_xprt_class ( s#svc_xprt_class * ) 
svc_xprt_put void svc_xprt_put ( s#svc_xprt * ) 
svc_xprt_init void svc_xprt_init ( s#net * , s#svc_xprt_class * , s#svc_xprt * , s#svc_serv * ) 
svc_create_xprt int svc_create_xprt ( s#svc_serv * , const char * , s#net * , const int , const unsigned short , int ) 
svc_xprt_copy_addrs void svc_xprt_copy_addrs ( s#svc_rqst * , s#svc_xprt * ) 
svc_print_addr char * svc_print_addr ( s#svc_rqst * , char * , t#size_t ) 
svc_xprt_do_enqueue void svc_xprt_do_enqueue ( s#svc_xprt * ) 
svc_xprt_enqueue void svc_xprt_enqueue ( s#svc_xprt * ) 
svc_reserve void svc_reserve ( s#svc_rqst * , int ) 
svc_wake_up void svc_wake_up ( s#svc_serv * ) 
svc_recv int svc_recv ( s#svc_rqst * , long ) 
svc_drop void svc_drop ( s#svc_rqst * ) 
svc_age_temp_xprts_now void svc_age_temp_xprts_now ( s#svc_serv * , s#sockaddr * ) 
svc_close_xprt void svc_close_xprt ( s#svc_xprt * ) 
svc_find_xprt s#svc_xprt * svc_find_xprt ( s#svc_serv * , const char * , s#net * , const t#sa_family_t , const unsigned short ) 
svc_xprt_names int svc_xprt_names ( s#svc_serv * , char * , const int ) 
svc_pool_stats_open int svc_pool_stats_open ( s#svc_serv * , s#file * ) 

/* net/sunrpc/svcauth.o */
s##sock
s##vfsmount
s##posix_acl
s##writeback_control
s##kstatfs
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##ucounts
s##proc_ns_operations
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##net_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##sec_path
s##kmem_cache
s##xt_table
s##inet_hashinfo
s##fib_notifier_ops
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##neighbour
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##nf_hook_entry
s##ebt_table
s##workqueue_struct
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##cgroup_namespace
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##bio_vec
s##swap_info_struct
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##svc_stat
s##rpc_xprt
s##rpc_xprt_switch
s##svc_cacherep
svc_authenticate extern int svc_authenticate ( s#svc_rqst * , t#__be32 * ) 
svc_set_client extern int svc_set_client ( s#svc_rqst * ) 
svc_auth_register extern int svc_auth_register ( t#rpc_authflavor_t , s#auth_ops * ) 
svc_auth_unregister extern void svc_auth_unregister ( t#rpc_authflavor_t ) 
auth_domain_put extern void auth_domain_put ( s#auth_domain * ) 
auth_domain_lookup extern s#auth_domain * auth_domain_lookup ( char * , s#auth_domain * ) 
auth_domain_find extern s#auth_domain * auth_domain_find ( char * ) 

/* net/sunrpc/svcauth_unix.o */
s##posix_acl
s##vfsmount
s##device_private
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##sec_path
s##workqueue_struct
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##kmem_cache
s##xfrm_state
s##lwtunnel_state
s##rtable
s##rt6_info
s##dn_route
s##prefix_info
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
s##prot_inuse
s##ipv4_devconf
s##fib_table
s##inet_peer_base
s##xt_table
s##inet_hashinfo
s##rt6_statistics
s##fib6_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##netns_ipvs
s##mpls_route
s##eventfd_ctx
s##mempolicy
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##svc_stat
s##rpc_xprt
s##rpc_xprt_switch
s##svc_cacherep
unix_domain_find extern s#auth_domain * unix_domain_find ( char * ) 
svcauth_unix_purge extern void svcauth_unix_purge ( s#net * ) 
svcauth_unix_set_client extern int svcauth_unix_set_client ( s#svc_rqst * ) 

/* net/sunrpc/svcsock.o */
s##posix_acl
s##vfsmount
s##device_private
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##sec_path
s##workqueue_struct
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##kmem_cache
s##xfrm_state
s##lwtunnel_state
s##uncached_list
s##rt6_info
s##dn_route
s##prefix_info
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
s##prot_inuse
s##ipv4_devconf
s##xt_table
s##rt6_statistics
s##fib6_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##eventfd_ctx
s##mempolicy
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##raw_hashinfo
s##xfrm_policy
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##rpc_iostats
s##rpc_cred_cache
s##svc_cacherep
svc_sock_update_bufs void svc_sock_update_bufs ( s#svc_serv * ) 
svc_alien_sock t#bool svc_alien_sock ( s#net * , int ) 
svc_addsock int svc_addsock ( s#svc_serv * , const int , char * , const t#size_t ) 

/* net/sunrpc/sysctl.o */
rpc_debug extern unsigned int rpc_debug 
nfs_debug extern unsigned int nfs_debug 
nfsd_debug extern unsigned int nfsd_debug 
nlm_debug extern unsigned int nlm_debug 

/* net/sunrpc/timer.o */
rpc_init_rtt extern void rpc_init_rtt ( s#rpc_rtt * , unsigned long ) 
rpc_update_rtt extern void rpc_update_rtt ( s#rpc_rtt * , unsigned , long ) 
rpc_calc_rto extern unsigned long rpc_calc_rto ( s#rpc_rtt * , unsigned ) 

/* net/sunrpc/xdr.o */
xdr_encode_netobj t#__be32 * xdr_encode_netobj ( t#__be32 * , const s#xdr_netobj * ) 
xdr_decode_netobj t#__be32 * xdr_decode_netobj ( t#__be32 * , s#xdr_netobj * ) 
xdr_encode_opaque_fixed t#__be32 * xdr_encode_opaque_fixed ( t#__be32 * , const void * , unsigned int ) 
xdr_encode_opaque t#__be32 * xdr_encode_opaque ( t#__be32 * , const void * , unsigned int ) 
xdr_encode_string t#__be32 * xdr_encode_string ( t#__be32 * , const char * ) 
xdr_decode_string_inplace t#__be32 * xdr_decode_string_inplace ( t#__be32 * , char * * , unsigned int * , unsigned int ) 
s##posix_acl
s##vfsmount
s##sock
s##bio_vec
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mem_cgroup
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##pid_namespace
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##key_user
s##key_type
s##assoc_array_ptr
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kmem_cache
xdr_terminate_string void xdr_terminate_string ( s#xdr_buf * , const t#u32 ) 
xdr_inline_pages void xdr_inline_pages ( s#xdr_buf * , unsigned int , s#page * * , unsigned int , unsigned int ) 
_copy_from_pages extern void _copy_from_pages ( char * , s#page * * , t#size_t , t#size_t ) 
xdr_shift_buf extern void xdr_shift_buf ( s#xdr_buf * , t#size_t ) 
xdr_stream_pos extern unsigned int xdr_stream_pos ( const s#xdr_stream * ) 
xdr_init_encode extern void xdr_init_encode ( s#xdr_stream * , s#xdr_buf * , t#__be32 * ) 
xdr_commit_encode extern void xdr_commit_encode ( s#xdr_stream * ) 
xdr_reserve_space extern t#__be32 * xdr_reserve_space ( s#xdr_stream * , t#size_t ) 
xdr_truncate_encode extern void xdr_truncate_encode ( s#xdr_stream * , t#size_t ) 
xdr_restrict_buflen extern int xdr_restrict_buflen ( s#xdr_stream * , int ) 
xdr_write_pages extern void xdr_write_pages ( s#xdr_stream * , s#page * * , unsigned int , unsigned int ) 
xdr_init_decode extern void xdr_init_decode ( s#xdr_stream * , s#xdr_buf * , t#__be32 * ) 
xdr_init_decode_pages extern void xdr_init_decode_pages ( s#xdr_stream * , s#xdr_buf * , s#page * * , unsigned int ) 
xdr_set_scratch_buffer extern void xdr_set_scratch_buffer ( s#xdr_stream * , void * , t#size_t ) 
xdr_inline_decode extern t#__be32 * xdr_inline_decode ( s#xdr_stream * , t#size_t ) 
xdr_read_pages extern unsigned int xdr_read_pages ( s#xdr_stream * , unsigned int ) 
xdr_enter_page extern void xdr_enter_page ( s#xdr_stream * , unsigned int ) 
xdr_buf_from_iov extern void xdr_buf_from_iov ( s#kvec * , s#xdr_buf * ) 
xdr_buf_subsegment extern int xdr_buf_subsegment ( s#xdr_buf * , s#xdr_buf * , unsigned int , unsigned int ) 
xdr_buf_trim extern void xdr_buf_trim ( s#xdr_buf * , unsigned int ) 
read_bytes_from_xdr_buf extern int read_bytes_from_xdr_buf ( s#xdr_buf * , unsigned int , void * , unsigned int ) 
write_bytes_to_xdr_buf extern int write_bytes_to_xdr_buf ( s#xdr_buf * , unsigned int , void * , unsigned int ) 
xdr_decode_word extern int xdr_decode_word ( s#xdr_buf * , unsigned int , t#u32 * ) 
xdr_encode_word extern int xdr_encode_word ( s#xdr_buf * , unsigned int , t#u32 ) 
xdr_buf_read_netobj extern int xdr_buf_read_netobj ( s#xdr_buf * , s#xdr_netobj * , unsigned int ) 
t#xdr_xcode_elem_t typedef int ( * xdr_xcode_elem_t ) ( s#xdr_array2_desc * , void * ) 
s#xdr_array2_desc struct xdr_array2_desc { unsigned int elem_size ; unsigned int array_len ; unsigned int array_maxlen ; t#xdr_xcode_elem_t xcode ; } 
xdr_decode_array2 extern int xdr_decode_array2 ( s#xdr_buf * , unsigned int , s#xdr_array2_desc * ) 
xdr_encode_array2 extern int xdr_encode_array2 ( s#xdr_buf * , unsigned int , s#xdr_array2_desc * ) 
xdr_process_buf extern int xdr_process_buf ( s#xdr_buf * , unsigned int , unsigned int , int ( * ) ( s#scatterlist * , void * ) , void * ) 
xdr_stream_decode_string_dup t#ssize_t xdr_stream_decode_string_dup ( s#xdr_stream * , char * * , t#size_t , t#gfp_t ) 

/* net/sunrpc/xprt.o */
s##posix_acl
s##vfsmount
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##sec_path
s##workqueue_struct
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##kmem_cache
s##xfrm_state
s##lwtunnel_state
s##rtable
s##rt6_info
s##dn_route
s##prefix_info
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##phy_device
s##sfp_bus
s##prot_inuse
s##ipv4_devconf
s##fib_table
s##inet_peer_base
s##xt_table
s##inet_hashinfo
s##rt6_statistics
s##fib6_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##eventfd_ctx
s##mempolicy
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##rpc_cred_cache
s##svc_cacherep
s#xprt_class struct xprt_class { s#list_head list ; int ident ; s#rpc_xprt * ( * setup ) ( s#xprt_create * ) ; s#module * owner ; char name [ 32 ] ; } 
xprt_register_transport int xprt_register_transport ( s#xprt_class * ) 
xprt_unregister_transport int xprt_unregister_transport ( s#xprt_class * ) 
xprt_load_transport int xprt_load_transport ( const char * ) 
xprt_reserve_xprt int xprt_reserve_xprt ( s#rpc_xprt * , s#rpc_task * ) 
xprt_reserve_xprt_cong int xprt_reserve_xprt_cong ( s#rpc_xprt * , s#rpc_task * ) 
xprt_release_xprt void xprt_release_xprt ( s#rpc_xprt * , s#rpc_task * ) 
xprt_release_xprt_cong void xprt_release_xprt_cong ( s#rpc_xprt * , s#rpc_task * ) 
xprt_release_rqst_cong void xprt_release_rqst_cong ( s#rpc_task * ) 
xprt_adjust_cwnd void xprt_adjust_cwnd ( s#rpc_xprt * , s#rpc_task * , int ) 
xprt_wake_pending_tasks void xprt_wake_pending_tasks ( s#rpc_xprt * , int ) 
xprt_wait_for_buffer_space void xprt_wait_for_buffer_space ( s#rpc_task * , t#rpc_action ) 
xprt_write_space void xprt_write_space ( s#rpc_xprt * ) 
xprt_set_retrans_timeout_def void xprt_set_retrans_timeout_def ( s#rpc_task * ) 
xprt_set_retrans_timeout_rtt void xprt_set_retrans_timeout_rtt ( s#rpc_task * ) 
xprt_disconnect_done void xprt_disconnect_done ( s#rpc_xprt * ) 
xprt_force_disconnect void xprt_force_disconnect ( s#rpc_xprt * ) 
xprt_lookup_rqst s#rpc_rqst * xprt_lookup_rqst ( s#rpc_xprt * , t#__be32 ) 
xprt_pin_rqst void xprt_pin_rqst ( s#rpc_rqst * ) 
xprt_unpin_rqst void xprt_unpin_rqst ( s#rpc_rqst * ) 
xprt_update_rtt void xprt_update_rtt ( s#rpc_task * ) 
xprt_complete_rqst void xprt_complete_rqst ( s#rpc_task * , int ) 
xprt_alloc_slot void xprt_alloc_slot ( s#rpc_xprt * , s#rpc_task * ) 
xprt_lock_and_alloc_slot void xprt_lock_and_alloc_slot ( s#rpc_xprt * , s#rpc_task * ) 
xprt_free_slot void xprt_free_slot ( s#rpc_xprt * , s#rpc_rqst * ) 
xprt_alloc s#rpc_xprt * xprt_alloc ( s#net * , t#size_t , unsigned int , unsigned int ) 
xprt_free void xprt_free ( s#rpc_xprt * ) 
xprt_get s#rpc_xprt * xprt_get ( s#rpc_xprt * ) 
xprt_put void xprt_put ( s#rpc_xprt * ) 

/* net/switchdev/switchdev.o */
s#switchdev_trans_item struct switchdev_trans_item { s#list_head list ; void * data ; void ( * destructor ) ( const void * ) ; } 
switchdev_trans_item_enqueue void switchdev_trans_item_enqueue ( s#switchdev_trans * , void * , void ( * ) ( void const * ) , s#switchdev_trans_item * ) 
switchdev_trans_item_dequeue void * switchdev_trans_item_dequeue ( s#switchdev_trans * ) 
switchdev_deferred_process void switchdev_deferred_process ( void ) 
s##posix_acl
s##vfsmount
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##prot_inuse
s##ipv4_devconf
s##kmem_cache
s##xt_table
s##inet_hashinfo
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##lwtunnel_state
s##rtable
s##dn_route
s##workqueue_struct
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##nf_hook_entry
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##mempolicy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##blk_plug
s##reclaim_state
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##udp_table
s##raw_hashinfo
s##bpf_prog_aux
s##xfrm_policy
s##sock_reuseport
s##sec_path
s##udp_tunnel_info
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##prefix_info
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
switchdev_port_attr_get int switchdev_port_attr_get ( s#net_device * , s#switchdev_attr * ) 
switchdev_port_attr_set int switchdev_port_attr_set ( s#net_device * , const s#switchdev_attr * ) 
switchdev_port_obj_add int switchdev_port_obj_add ( s#net_device * , const s#switchdev_obj * ) 
switchdev_port_obj_del int switchdev_port_obj_del ( s#net_device * , const s#switchdev_obj * ) 
switchdev_port_obj_dump int switchdev_port_obj_dump ( s#net_device * , s#switchdev_obj * , t#switchdev_obj_dump_cb_t * ) 
register_switchdev_notifier int register_switchdev_notifier ( s#notifier_block * ) 
unregister_switchdev_notifier int unregister_switchdev_notifier ( s#notifier_block * ) 
call_switchdev_notifiers int call_switchdev_notifiers ( unsigned long , s#net_device * , s#switchdev_notifier_info * ) 
switchdev_port_bridge_getlink int switchdev_port_bridge_getlink ( s#sk_buff * , t#u32 , t#u32 , s#net_device * , t#u32 , int ) 
switchdev_port_bridge_setlink int switchdev_port_bridge_setlink ( s#net_device * , s#nlmsghdr * , t#u16 ) 
switchdev_port_bridge_dellink int switchdev_port_bridge_dellink ( s#net_device * , s#nlmsghdr * , t#u16 ) 
switchdev_port_fdb_add int switchdev_port_fdb_add ( s#ndmsg * , s#nlattr * [ ] , s#net_device * , const unsigned char * , t#u16 , t#u16 ) 
switchdev_port_fdb_del int switchdev_port_fdb_del ( s#ndmsg * , s#nlattr * [ ] , s#net_device * , const unsigned char * , t#u16 ) 
switchdev_port_fdb_dump int switchdev_port_fdb_dump ( s#sk_buff * , s#netlink_callback * , s#net_device * , s#net_device * , int * ) 
switchdev_port_same_parent_id t#bool switchdev_port_same_parent_id ( s#net_device * , s#net_device * ) 

/* net/sysctl_net.o */
s##proc_ns_operations
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##workqueue_struct
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##kmem_cache
s##xfrm_state
s##lwtunnel_state
s##uncached_list
s##rt6_info
s##dn_route
s##prefix_info
s##proc_dir_entry
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##phy_device
s##sfp_bus
s##sec_path
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##key_user
s##key_type
s##assoc_array_ptr
s##uevent_sock
s##prot_inuse
s##ipv4_devconf
s##xt_table
s##rt6_statistics
s##fib6_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
register_net_sysctl s#ctl_table_header * register_net_sysctl ( s#net * , const char * , s#ctl_table * ) 
unregister_net_sysctl_table void unregister_net_sysctl_table ( s#ctl_table_header * ) 

/* net/tls/tls_device.o */
s##posix_acl
s##vfsmount
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##sec_path
s##workqueue_struct
s##udp_tunnel_info
s##btf
s##bpf_verifier_env
s##xdp_umem
s##switchdev_ops
s##kmem_cache
s##xfrm_state
s##lwtunnel_state
s##uncached_list
s##rt6_info
s##dn_route
s##prefix_info
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##phy_device
s##sfp_bus
s##prot_inuse
s##ipv4_devconf
s##xt_table
s##rt6_statistics
s##fib6_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##bpf_cgroup_storage_map
s##cgroup_taskset
s##eventfd_ctx
s##mempolicy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sock_reuseport
tls_device_sk_destruct void tls_device_sk_destruct ( s#sock * ) 
s#skb_frag_struct struct skb_frag_struct { struct { s#page * p ; } page ; t#__u32 page_offset ; t#__u32 size ; } 
t#skb_frag_t typedef s#skb_frag_struct skb_frag_t 
s#tls_record_info struct tls_record_info { s#list_head list ; t#u32 end_seq ; int len ; int num_frags ; t#skb_frag_t frags [ ( 65536 / ( ( 1UL ) << 12 ) + 1 ) ] ; } 
s##crypto_type
s##skcipher_givcrypt_request
s#tls_offload_context_tx struct tls_offload_context_tx { s#crypto_aead * aead_send ; t#spinlock_t lock ; s#list_head records_list ; s#tls_record_info * open_record ; s#tls_record_info * retransmit_hint ; t#u64 hint_record_sn ; t#u64 unacked_record_sn ; s#scatterlist sg_tx_data [ ( 65536 / ( ( 1UL ) << 12 ) + 1 ) ] ; void ( * sk_destruct ) ( s#sock * ) ; t#u8 driver_state [ ] ; } 
tls_get_record s#tls_record_info * tls_get_record ( s#tls_offload_context_tx * , t#u32 , t#u64 * ) 

/* net/tls/tls_device_fallback.o */
s##proc_ns_operations
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##kmem_cache
s##udp_table
s##raw_hashinfo
s##btf
s##bpf_verifier_env
s##xfrm_policy
s##workqueue_struct
s##xfrm_state
s##lwtunnel_state
s##uncached_list
s##rt6_info
s##dn_route
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_cgroup_storage_map
s##cgroup_taskset
s##eventfd_ctx
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_dir_entry
s##uevent_sock
s##prot_inuse
s##ipv4_devconf
s##xt_table
s##rt6_statistics
s##fib6_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##nf_hook_entry
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##udp_tunnel_info
s##xdp_umem
s##switchdev_ops
s##prefix_info
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
s##sec_path
tls_validate_xmit_skb s#sk_buff * tls_validate_xmit_skb ( s#sock * , s#net_device * , s#sk_buff * ) 

/* net/tls/tls_main.o */
s##posix_acl
s##vfsmount
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##sec_path
s##workqueue_struct
s##udp_tunnel_info
s##btf
s##bpf_verifier_env
s##xdp_umem
s##switchdev_ops
s##kmem_cache
s##xfrm_state
s##lwtunnel_state
s##uncached_list
s##rt6_info
s##dn_route
s##prefix_info
s##vlan_info
s##tipc_bearer
s##ip_mc_list
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##phy_device
s##sfp_bus
s##prot_inuse
s##xt_table
s##rt6_statistics
s##fib6_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##bpf_cgroup_storage_map
s##cgroup_taskset
s##eventfd_ctx
s##mempolicy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sock_reuseport
s#tls_device struct tls_device { char name [ 32 ] ; s#list_head dev_list ; int ( * feature ) ( s#tls_device * ) ; int ( * hash ) ( s#tls_device * , s#sock * ) ; void ( * unhash ) ( s#tls_device * , s#sock * ) ; void ( * release ) ( s#kref * ) ; s#kref kref ; } 
tls_register_device void tls_register_device ( s#tls_device * ) 
tls_unregister_device void tls_unregister_device ( s#tls_device * ) 

/* net/unix/af_unix.o */
unix_socket_table extern s#hlist_head unix_socket_table [ 2 * 256 ] 
unix_table_lock extern t#spinlock_t unix_table_lock 
s##posix_acl
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##sec_path
s##workqueue_struct
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##l3mdev_ops
s##ndisc_ops
s##xfrm_state
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##phy_device
s##sfp_bus
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##kmem_cache
s##xt_table
s##inet_hashinfo
s##fib_notifier_ops
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##lwtunnel_state
s##rtable
s##dn_route
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##mempolicy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##request_sock_ops
s##timewait_sock_ops
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sock_reuseport
unix_peer_get s#sock * unix_peer_get ( s#sock * ) 
unix_inq_len long unix_inq_len ( s#sock * ) 
unix_outq_len long unix_outq_len ( s#sock * ) 

/* net/vmw_vsock/af_vsock.o */
vm_sockets_get_local_cid int vm_sockets_get_local_cid ( void ) 
s##posix_acl
s##vfsmount
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##sec_path
s##workqueue_struct
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##l3mdev_ops
s##ndisc_ops
s##xfrm_state
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##phy_device
s##sfp_bus
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##kmem_cache
s##xt_table
s##inet_hashinfo
s##fib_notifier_ops
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##lwtunnel_state
s##rtable
s##dn_route
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##mempolicy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##request_sock_ops
s##timewait_sock_ops
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sock_reuseport
s#sockaddr_vm struct sockaddr_vm { t#__kernel_sa_family_t svm_family ; unsigned short svm_reserved1 ; unsigned int svm_port ; unsigned int svm_cid ; unsigned char svm_zero [ sizeof ( struct sockaddr ) - sizeof ( sa_family_t ) - sizeof ( unsigned short ) - sizeof ( unsigned int ) - sizeof ( unsigned int ) ] ; } 
s#vsock_sock struct vsock_sock { s#sock sk ; s#sockaddr_vm local_addr ; s#sockaddr_vm remote_addr ; s#list_head bound_table ; s#list_head connected_table ; t#bool trusted ; t#bool cached_peer_allow_dgram ; t#u32 cached_peer ; const s#cred * owner ; long connect_timeout ; s#sock * listener ; s#list_head pending_links ; s#list_head accept_queue ; t#bool rejected ; s#delayed_work connect_work ; s#delayed_work pending_work ; s#delayed_work close_work ; t#bool close_work_scheduled ; t#u32 peer_shutdown ; t#bool sent_request ; t#bool ignore_connecting_rst ; void * trans ; } 
vsock_insert_connected void vsock_insert_connected ( s#vsock_sock * ) 
vsock_remove_bound void vsock_remove_bound ( s#vsock_sock * ) 
vsock_remove_connected void vsock_remove_connected ( s#vsock_sock * ) 
vsock_find_bound_socket s#sock * vsock_find_bound_socket ( s#sockaddr_vm * ) 
vsock_find_connected_socket s#sock * vsock_find_connected_socket ( s#sockaddr_vm * , s#sockaddr_vm * ) 
vsock_remove_sock void vsock_remove_sock ( s#vsock_sock * ) 
vsock_for_each_connected_socket void vsock_for_each_connected_socket ( void ( * ) ( s#sock * ) ) 
vsock_add_pending void vsock_add_pending ( s#sock * , s#sock * ) 
vsock_remove_pending void vsock_remove_pending ( s#sock * , s#sock * ) 
vsock_enqueue_accept void vsock_enqueue_accept ( s#sock * , s#sock * ) 
__vsock_create s#sock * __vsock_create ( s#net * , s#socket * , s#sock * , t#gfp_t , unsigned short , int ) 
vsock_stream_has_data t#s64 vsock_stream_has_data ( s#vsock_sock * ) 
vsock_stream_has_space t#s64 vsock_stream_has_space ( s#vsock_sock * ) 
s#vsock_transport_recv_notify_data struct vsock_transport_recv_notify_data { t#u64 data1 ; t#u64 data2 ; t#bool notify_on_block ; } 
s#vsock_transport_send_notify_data struct vsock_transport_send_notify_data { t#u64 data1 ; t#u64 data2 ; } 
s#vsock_transport struct vsock_transport { int ( * init ) ( s#vsock_sock * , s#vsock_sock * ) ; void ( * destruct ) ( s#vsock_sock * ) ; void ( * release ) ( s#vsock_sock * ) ; int ( * cancel_pkt ) ( s#vsock_sock * ) ; int ( * connect ) ( s#vsock_sock * ) ; int ( * dgram_bind ) ( s#vsock_sock * , s#sockaddr_vm * ) ; int ( * dgram_dequeue ) ( s#vsock_sock * , s#msghdr * , t#size_t , int ) ; int ( * dgram_enqueue ) ( s#vsock_sock * , s#sockaddr_vm * , s#msghdr * , t#size_t ) ; t#bool ( * dgram_allow ) ( t#u32 , t#u32 ) ; t#ssize_t ( * stream_dequeue ) ( s#vsock_sock * , s#msghdr * , t#size_t , int ) ; t#ssize_t ( * stream_enqueue ) ( s#vsock_sock * , s#msghdr * , t#size_t ) ; t#s64 ( * stream_has_data ) ( s#vsock_sock * ) ; t#s64 ( * stream_has_space ) ( s#vsock_sock * ) ; t#u64 ( * stream_rcvhiwat ) ( s#vsock_sock * ) ; t#bool ( * stream_is_active ) ( s#vsock_sock * ) ; t#bool ( * stream_allow ) ( t#u32 , t#u32 ) ; int ( * notify_poll_in ) ( s#vsock_sock * , t#size_t , t#bool * ) ; int ( * notify_poll_out ) ( s#vsock_sock * , t#size_t , t#bool * ) ; int ( * notify_recv_init ) ( s#vsock_sock * , t#size_t , s#vsock_transport_recv_notify_data * ) ; int ( * notify_recv_pre_block ) ( s#vsock_sock * , t#size_t , s#vsock_transport_recv_notify_data * ) ; int ( * notify_recv_pre_dequeue ) ( s#vsock_sock * , t#size_t , s#vsock_transport_recv_notify_data * ) ; int ( * notify_recv_post_dequeue ) ( s#vsock_sock * , t#size_t , t#ssize_t , t#bool , s#vsock_transport_recv_notify_data * ) ; int ( * notify_send_init ) ( s#vsock_sock * , s#vsock_transport_send_notify_data * ) ; int ( * notify_send_pre_block ) ( s#vsock_sock * , s#vsock_transport_send_notify_data * ) ; int ( * notify_send_pre_enqueue ) ( s#vsock_sock * , s#vsock_transport_send_notify_data * ) ; int ( * notify_send_post_enqueue ) ( s#vsock_sock * , t#ssize_t , s#vsock_transport_send_notify_data * ) ; int ( * shutdown ) ( s#vsock_sock * , int ) ; void ( * set_buffer_size ) ( s#vsock_sock * , t#u64 ) ; void ( * set_min_buffer_size ) ( s#vsock_sock * , t#u64 ) ; void ( * set_max_buffer_size ) ( s#vsock_sock * , t#u64 ) ; t#u64 ( * get_buffer_size ) ( s#vsock_sock * ) ; t#u64 ( * get_min_buffer_size ) ( s#vsock_sock * ) ; t#u64 ( * get_max_buffer_size ) ( s#vsock_sock * ) ; t#u32 ( * get_local_cid ) ( void ) ; } 
__vsock_core_init int __vsock_core_init ( const s#vsock_transport * , s#module * ) 
vsock_core_exit void vsock_core_exit ( void ) 
vsock_core_get_transport const s#vsock_transport * vsock_core_get_transport ( void ) 

/* net/vmw_vsock/af_vsock_tap.o */
s##posix_acl
s##vfsmount
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##key_type
s##assoc_array_ptr
s##proc_ns_operations
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##kmem_cache
s##xt_table
s##inet_hashinfo
s##fib_notifier_ops
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##lwtunnel_state
s##rtable
s##dn_route
s##workqueue_struct
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##nf_hook_entry
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##mempolicy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##blk_plug
s##reclaim_state
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##request_sock_ops
s##timewait_sock_ops
s##udp_table
s##raw_hashinfo
s##bpf_prog_aux
s##xfrm_policy
s##sock_reuseport
s##sec_path
s##udp_tunnel_info
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##l3mdev_ops
s##ndisc_ops
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
s#vsock_tap struct vsock_tap { s#net_device * dev ; s#module * module ; s#list_head list ; } 
vsock_add_tap int vsock_add_tap ( s#vsock_tap * ) 
vsock_remove_tap int vsock_remove_tap ( s#vsock_tap * ) 
vsock_deliver_tap void vsock_deliver_tap ( s#sk_buff * ( void * ) , void * ) 

/* net/vmw_vsock/virtio_transport_common.o */
s#virtio_vsock_hdr struct virtio_vsock_hdr { t#__le64 src_cid ; t#__le64 dst_cid ; t#__le32 src_port ; t#__le32 dst_port ; t#__le32 len ; t#__le16 type ; t#__le16 op ; t#__le32 flags ; t#__le32 buf_alloc ; t#__le32 fwd_cnt ; } 
s##posix_acl
s##vfsmount
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##kmem_cache
s##fs_pin
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##sec_path
s##workqueue_struct
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##l3mdev_ops
s##ndisc_ops
s##xfrm_state
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##device_private
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##phy_device
s##sfp_bus
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##xt_table
s##inet_hashinfo
s##fib_notifier_ops
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##lwtunnel_state
s##rtable
s##dn_route
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##mempolicy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##ring_buffer
s##static_key_mod
s##trace_array
s##tracer
s##trace_buffer
s##ring_buffer_iter
s##event_filter
s##ftrace_hash
s##numa_group
s##task_delay_info
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##request_sock_ops
s##timewait_sock_ops
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sock_reuseport
s#virtio_vsock_pkt struct virtio_vsock_pkt { s#virtio_vsock_hdr hdr ; s#work_struct work ; s#list_head list ; s#vsock_sock * vsk ; void * buf ; t#u32 len ; t#u32 off ; t#bool reply ; } 
virtio_transport_deliver_tap_pkt void virtio_transport_deliver_tap_pkt ( s#virtio_vsock_pkt * ) 
s#virtio_vsock_sock struct virtio_vsock_sock { s#vsock_sock * vsk ; t#u32 buf_size ; t#u32 buf_size_min ; t#u32 buf_size_max ; t#spinlock_t tx_lock ; t#spinlock_t rx_lock ; t#u32 tx_cnt ; t#u32 buf_alloc ; t#u32 peer_fwd_cnt ; t#u32 peer_buf_alloc ; t#u32 fwd_cnt ; t#u32 rx_bytes ; s#list_head rx_queue ; } 
virtio_transport_inc_tx_pkt void virtio_transport_inc_tx_pkt ( s#virtio_vsock_sock * , s#virtio_vsock_pkt * ) 
virtio_transport_get_credit t#u32 virtio_transport_get_credit ( s#virtio_vsock_sock * , t#u32 ) 
virtio_transport_put_credit void virtio_transport_put_credit ( s#virtio_vsock_sock * , t#u32 ) 
virtio_transport_stream_dequeue t#ssize_t virtio_transport_stream_dequeue ( s#vsock_sock * , s#msghdr * , t#size_t , int ) 
virtio_transport_dgram_dequeue int virtio_transport_dgram_dequeue ( s#vsock_sock * , s#msghdr * , t#size_t , int ) 
virtio_transport_stream_has_data t#s64 virtio_transport_stream_has_data ( s#vsock_sock * ) 
virtio_transport_stream_has_space t#s64 virtio_transport_stream_has_space ( s#vsock_sock * ) 
virtio_transport_do_socket_init int virtio_transport_do_socket_init ( s#vsock_sock * , s#vsock_sock * ) 
virtio_transport_get_buffer_size t#u64 virtio_transport_get_buffer_size ( s#vsock_sock * ) 
virtio_transport_get_min_buffer_size t#u64 virtio_transport_get_min_buffer_size ( s#vsock_sock * ) 
virtio_transport_get_max_buffer_size t#u64 virtio_transport_get_max_buffer_size ( s#vsock_sock * ) 
virtio_transport_set_buffer_size void virtio_transport_set_buffer_size ( s#vsock_sock * , t#u64 ) 
virtio_transport_set_min_buffer_size void virtio_transport_set_min_buffer_size ( s#vsock_sock * , t#u64 ) 
virtio_transport_set_max_buffer_size void virtio_transport_set_max_buffer_size ( s#vsock_sock * , t#u64 ) 
virtio_transport_notify_poll_in int virtio_transport_notify_poll_in ( s#vsock_sock * , t#size_t , t#bool * ) 
virtio_transport_notify_poll_out int virtio_transport_notify_poll_out ( s#vsock_sock * , t#size_t , t#bool * ) 
virtio_transport_notify_recv_init int virtio_transport_notify_recv_init ( s#vsock_sock * , t#size_t , s#vsock_transport_recv_notify_data * ) 
virtio_transport_notify_recv_pre_block int virtio_transport_notify_recv_pre_block ( s#vsock_sock * , t#size_t , s#vsock_transport_recv_notify_data * ) 
virtio_transport_notify_recv_pre_dequeue int virtio_transport_notify_recv_pre_dequeue ( s#vsock_sock * , t#size_t , s#vsock_transport_recv_notify_data * ) 
virtio_transport_notify_recv_post_dequeue int virtio_transport_notify_recv_post_dequeue ( s#vsock_sock * , t#size_t , t#ssize_t , t#bool , s#vsock_transport_recv_notify_data * ) 
virtio_transport_notify_send_init int virtio_transport_notify_send_init ( s#vsock_sock * , s#vsock_transport_send_notify_data * ) 
virtio_transport_notify_send_pre_block int virtio_transport_notify_send_pre_block ( s#vsock_sock * , s#vsock_transport_send_notify_data * ) 
virtio_transport_notify_send_pre_enqueue int virtio_transport_notify_send_pre_enqueue ( s#vsock_sock * , s#vsock_transport_send_notify_data * ) 
virtio_transport_notify_send_post_enqueue int virtio_transport_notify_send_post_enqueue ( s#vsock_sock * , t#ssize_t , s#vsock_transport_send_notify_data * ) 
virtio_transport_stream_rcvhiwat t#u64 virtio_transport_stream_rcvhiwat ( s#vsock_sock * ) 
virtio_transport_stream_is_active t#bool virtio_transport_stream_is_active ( s#vsock_sock * ) 
virtio_transport_stream_allow t#bool virtio_transport_stream_allow ( t#u32 , t#u32 ) 
virtio_transport_dgram_bind int virtio_transport_dgram_bind ( s#vsock_sock * , s#sockaddr_vm * ) 
virtio_transport_dgram_allow t#bool virtio_transport_dgram_allow ( t#u32 , t#u32 ) 
virtio_transport_connect int virtio_transport_connect ( s#vsock_sock * ) 
virtio_transport_shutdown int virtio_transport_shutdown ( s#vsock_sock * , int ) 
virtio_transport_dgram_enqueue int virtio_transport_dgram_enqueue ( s#vsock_sock * , s#sockaddr_vm * , s#msghdr * , t#size_t ) 
virtio_transport_stream_enqueue t#ssize_t virtio_transport_stream_enqueue ( s#vsock_sock * , s#msghdr * , t#size_t ) 
virtio_transport_destruct void virtio_transport_destruct ( s#vsock_sock * ) 
virtio_transport_release void virtio_transport_release ( s#vsock_sock * ) 
virtio_transport_recv_pkt void virtio_transport_recv_pkt ( s#virtio_vsock_pkt * ) 
virtio_transport_free_pkt void virtio_transport_free_pkt ( s#virtio_vsock_pkt * ) 

/* net/vmw_vsock/vsock_addr.o */
vsock_addr_init void vsock_addr_init ( s#sockaddr_vm * , t#u32 , t#u32 ) 
vsock_addr_validate int vsock_addr_validate ( const s#sockaddr_vm * ) 
vsock_addr_bound t#bool vsock_addr_bound ( const s#sockaddr_vm * ) 
vsock_addr_unbind void vsock_addr_unbind ( s#sockaddr_vm * ) 
vsock_addr_equals_addr t#bool vsock_addr_equals_addr ( const s#sockaddr_vm * , const s#sockaddr_vm * ) 
vsock_addr_cast int vsock_addr_cast ( const s#sockaddr * , t#size_t , s#sockaddr_vm * * ) 

/* net/xdp/xdp_umem.o */
s#xdp_ring struct xdp_ring { t#u32 producer __attribute__ ( ( __aligned__ ( 256 ) ) ) ; t#u32 consumer __attribute__ ( ( __aligned__ ( 256 ) ) ) ; } 
s#xsk_queue struct xsk_queue { t#u64 chunk_mask ; t#u64 size ; t#u32 ring_mask ; t#u32 nentries ; t#u32 prod_head ; t#u32 prod_tail ; t#u32 cons_head ; t#u32 cons_tail ; s#xdp_ring * ring ; t#u64 invalid_descs ; } 
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##module
s##device_private
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##proc_ns_operations
s##proc_dir_entry
s##uevent_sock
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##kmem_cache
s##xt_table
s##inet_hashinfo
s##fib_notifier_ops
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##lwtunnel_state
s##rtable
s##dn_route
s##workqueue_struct
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##nf_hook_entry
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##udp_tunnel_info
s##btf
s##bpf_verifier_env
s##switchdev_ops
s##l3mdev_ops
s##ndisc_ops
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
s##sec_path
s##request_sock_ops
s##timewait_sock_ops
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_cgroup_storage_map
s##cgroup_taskset
s##eventfd_ctx
s##sock_reuseport
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##key_user
s##key_type
s##assoc_array_ptr
xdp_get_umem_from_qid s#xdp_umem * xdp_get_umem_from_qid ( s#net_device * , t#u16 ) 

/* net/xdp/xsk.o */
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##module
s##device_private
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##proc_ns_operations
s##proc_dir_entry
s##uevent_sock
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##kmem_cache
s##xt_table
s##inet_hashinfo
s##fib_notifier_ops
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##lwtunnel_state
s##rtable
s##dn_route
s##workqueue_struct
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##nf_hook_entry
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##switchdev_ops
s##l3mdev_ops
s##ndisc_ops
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
s##sec_path
s##request_sock_ops
s##timewait_sock_ops
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##sock_reuseport
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##key_user
s##key_type
s##assoc_array_ptr
xsk_umem_peek_addr t#u64 * xsk_umem_peek_addr ( s#xdp_umem * , t#u64 * ) 
xsk_umem_discard_addr void xsk_umem_discard_addr ( s#xdp_umem * ) 
xsk_umem_complete_tx void xsk_umem_complete_tx ( s#xdp_umem * , t#u32 ) 
xsk_umem_consume_tx_done void xsk_umem_consume_tx_done ( s#xdp_umem * ) 
xsk_umem_consume_tx t#bool xsk_umem_consume_tx ( s#xdp_umem * , t#dma_addr_t * , t#u32 * ) 

/* net/xdp/xsk_queue.o */
xsk_reuseq_prepare s#xdp_umem_fq_reuse * xsk_reuseq_prepare ( t#u32 ) 
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##module
s##device_private
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##proc_ns_operations
s##proc_dir_entry
s##uevent_sock
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##fib_table
s##inet_peer_base
s##kmem_cache
s##xt_table
s##inet_hashinfo
s##fib_notifier_ops
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##lwtunnel_state
s##rtable
s##dn_route
s##workqueue_struct
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##nf_hook_entry
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##switchdev_ops
s##l3mdev_ops
s##ndisc_ops
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
s##sec_path
s##request_sock_ops
s##timewait_sock_ops
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##sock_reuseport
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##key_user
s##key_type
s##assoc_array_ptr
xsk_reuseq_swap s#xdp_umem_fq_reuse * xsk_reuseq_swap ( s#xdp_umem * , s#xdp_umem_fq_reuse * ) 
xsk_reuseq_free void xsk_reuseq_free ( s#xdp_umem_fq_reuse * ) 

/* net/xfrm/xfrm_algo.o */
s#xfrm_algo_aead_info struct xfrm_algo_aead_info { char * geniv ; t#u16 icv_truncbits ; } 
s#xfrm_algo_auth_info struct xfrm_algo_auth_info { t#u16 icv_truncbits ; t#u16 icv_fullbits ; } 
s#xfrm_algo_encr_info struct xfrm_algo_encr_info { char * geniv ; t#u16 blockbits ; t#u16 defkeybits ; } 
s#xfrm_algo_comp_info struct xfrm_algo_comp_info { t#u16 threshold ; } 
s#sadb_alg struct sadb_alg { t#__u8 sadb_alg_id ; t#__u8 sadb_alg_ivlen ; t#__u16 sadb_alg_minbits ; t#__u16 sadb_alg_maxbits ; t#__u16 sadb_alg_reserved ; } 
s#xfrm_algo_desc struct xfrm_algo_desc { char * name ; char * compat ; t#u8 available : 1 ; t#u8 pfkey_supported : 1 ; union { s#xfrm_algo_aead_info aead ; s#xfrm_algo_auth_info auth ; s#xfrm_algo_encr_info encr ; s#xfrm_algo_comp_info comp ; } uinfo ; s#sadb_alg desc ; } 
xfrm_aalg_get_byid s#xfrm_algo_desc * xfrm_aalg_get_byid ( int ) 
xfrm_ealg_get_byid s#xfrm_algo_desc * xfrm_ealg_get_byid ( int ) 
xfrm_calg_get_byid s#xfrm_algo_desc * xfrm_calg_get_byid ( int ) 
xfrm_aalg_get_byname s#xfrm_algo_desc * xfrm_aalg_get_byname ( const char * , int ) 
xfrm_ealg_get_byname s#xfrm_algo_desc * xfrm_ealg_get_byname ( const char * , int ) 
xfrm_calg_get_byname s#xfrm_algo_desc * xfrm_calg_get_byname ( const char * , int ) 
xfrm_aead_get_byname s#xfrm_algo_desc * xfrm_aead_get_byname ( const char * , int , int ) 
xfrm_aalg_get_byidx s#xfrm_algo_desc * xfrm_aalg_get_byidx ( unsigned int ) 
xfrm_ealg_get_byidx s#xfrm_algo_desc * xfrm_ealg_get_byidx ( unsigned int ) 
xfrm_probe_algs void xfrm_probe_algs ( void ) 
xfrm_count_pfkey_auth_supported int xfrm_count_pfkey_auth_supported ( void ) 
xfrm_count_pfkey_enc_supported int xfrm_count_pfkey_enc_supported ( void ) 

/* net/xfrm/xfrm_device.o */
s##proc_ns_operations
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##kmem_cache
s##fs_pin
s##nlm_lockowner
s##nfs4_lock_state
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##bpf_prog_aux
s##workqueue_struct
s##lwtunnel_state
s##uncached_list
s##proc_dir_entry
s##dn_route
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##key_user
s##key_type
s##assoc_array_ptr
s##uevent_sock
s##prot_inuse
s##ipv4_devconf
s##xt_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##nf_hook_entry
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##udp_tunnel_info
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##prefix_info
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
validate_xmit_xfrm s#sk_buff * validate_xmit_xfrm ( s#sk_buff * , t#netdev_features_t , t#bool * ) 
s#xfrm_user_offload struct xfrm_user_offload { int ifindex ; t#__u8 flags ; } 
xfrm_dev_state_add int xfrm_dev_state_add ( s#net * , s#xfrm_state * , s#xfrm_user_offload * ) 
xfrm_dev_offload_ok t#bool xfrm_dev_offload_ok ( s#sk_buff * , s#xfrm_state * ) 
xfrm_dev_resume void xfrm_dev_resume ( s#sk_buff * ) 

/* net/xfrm/xfrm_input.o */
s##proc_ns_operations
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##kmem_cache
s##fs_pin
s##nlm_lockowner
s##nfs4_lock_state
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##bpf_prog_aux
s##workqueue_struct
s##uncached_list
s##proc_dir_entry
s##dn_route
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##key_user
s##key_type
s##assoc_array_ptr
s##uevent_sock
s##prot_inuse
s##ipv4_devconf
s##xt_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##nf_hook_entry
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##netns_ipvs
s##mpls_route
s##udp_tunnel_info
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
s#xfrm_input_afinfo struct xfrm_input_afinfo { unsigned int family ; int ( * callback ) ( s#sk_buff * , t#u8 , int ) ; } 
xfrm_input_register_afinfo int xfrm_input_register_afinfo ( const s#xfrm_input_afinfo * ) 
xfrm_input_unregister_afinfo int xfrm_input_unregister_afinfo ( const s#xfrm_input_afinfo * ) 
__secpath_destroy void __secpath_destroy ( s#sec_path * ) 
secpath_dup s#sec_path * secpath_dup ( s#sec_path * ) 
secpath_set int secpath_set ( s#sk_buff * ) 
xfrm_parse_spi int xfrm_parse_spi ( s#sk_buff * , t#u8 , t#__be32 * , t#__be32 * ) 
xfrm_prepare_input int xfrm_prepare_input ( s#xfrm_state * , s#sk_buff * ) 
xfrm_input int xfrm_input ( s#sk_buff * , int , t#__be32 , int ) 
xfrm_input_resume int xfrm_input_resume ( s#sk_buff * , int ) 
xfrm_trans_queue int xfrm_trans_queue ( s#sk_buff * , int ( * ) ( s#net * , s#sock * , s#sk_buff * ) ) 

/* net/xfrm/xfrm_ipcomp.o */
s##proc_ns_operations
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##kmem_cache
s##fs_pin
s##nlm_lockowner
s##nfs4_lock_state
s##workqueue_struct
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##lwtunnel_state
s##uncached_list
s##proc_dir_entry
s##dn_route
s##prefix_info
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##phy_device
s##sfp_bus
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##key_user
s##key_type
s##assoc_array_ptr
s##uevent_sock
s##prot_inuse
s##ipv4_devconf
s##xt_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
ipcomp_input int ipcomp_input ( s#xfrm_state * , s#sk_buff * ) 
ipcomp_output int ipcomp_output ( s#xfrm_state * , s#sk_buff * ) 
ipcomp_destroy void ipcomp_destroy ( s#xfrm_state * ) 
ipcomp_init_state int ipcomp_init_state ( s#xfrm_state * ) 

/* net/xfrm/xfrm_output.o */
s##proc_ns_operations
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##kmem_cache
s##fs_pin
s##nlm_lockowner
s##nfs4_lock_state
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##bpf_prog_aux
s##workqueue_struct
s##lwtunnel_state
s##uncached_list
s##proc_dir_entry
s##dn_route
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##key_user
s##key_type
s##assoc_array_ptr
s##uevent_sock
s##prot_inuse
s##ipv4_devconf
s##xt_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##udp_tunnel_info
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##prefix_info
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
xfrm_output_resume int xfrm_output_resume ( s#sk_buff * , int ) 
xfrm_output int xfrm_output ( s#sock * , s#sk_buff * ) 
xfrm_inner_extract_output int xfrm_inner_extract_output ( s#xfrm_state * , s#sk_buff * ) 
xfrm_local_error void xfrm_local_error ( s#sk_buff * , int ) 

/* net/xfrm/xfrm_policy.o */
s##posix_acl
s##vfsmount
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##kmem_cache
s##fs_pin
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##prot_inuse
s##ipv4_devconf
s##xt_table
s##inet_hashinfo
s##uncached_list
s##workqueue_struct
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##mempolicy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##blk_plug
s##reclaim_state
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##udp_table
s##raw_hashinfo
s##bpf_prog_aux
s##sock_reuseport
s##udp_tunnel_info
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##prefix_info
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
s##lwtunnel_state
s##dn_route
__xfrm_dst_lookup s#dst_entry * __xfrm_dst_lookup ( s#net * , int , int , const t#xfrm_address_t * , const t#xfrm_address_t * , int ) 
xfrm_policy_alloc s#xfrm_policy * xfrm_policy_alloc ( s#net * , t#gfp_t ) 
xfrm_policy_destroy void xfrm_policy_destroy ( s#xfrm_policy * ) 
s#xfrmk_spdinfo struct xfrmk_spdinfo { t#u32 incnt ; t#u32 outcnt ; t#u32 fwdcnt ; t#u32 inscnt ; t#u32 outscnt ; t#u32 fwdscnt ; t#u32 spdhcnt ; t#u32 spdhmcnt ; } 
xfrm_spd_getinfo void xfrm_spd_getinfo ( s#net * , s#xfrmk_spdinfo * ) 
xfrm_policy_hash_rebuild void xfrm_policy_hash_rebuild ( s#net * ) 
xfrm_policy_insert int xfrm_policy_insert ( int , s#xfrm_policy * , int ) 
xfrm_policy_bysel_ctx s#xfrm_policy * xfrm_policy_bysel_ctx ( s#net * , t#u32 , t#u8 , int , s#xfrm_selector * , s#xfrm_sec_ctx * , int , int * ) 
xfrm_policy_byid s#xfrm_policy * xfrm_policy_byid ( s#net * , t#u32 , t#u8 , int , t#u32 , int , int * ) 
xfrm_policy_flush int xfrm_policy_flush ( s#net * , t#u8 , t#bool ) 
s#xfrm_policy_walk struct xfrm_policy_walk { s#xfrm_policy_walk_entry walk ; t#u8 type ; t#u32 seq ; } 
xfrm_policy_walk int xfrm_policy_walk ( s#net * , s#xfrm_policy_walk * , int ( * ) ( s#xfrm_policy * , int , int , void * ) , void * ) 
xfrm_policy_walk_init void xfrm_policy_walk_init ( s#xfrm_policy_walk * , t#u8 ) 
xfrm_policy_walk_done void xfrm_policy_walk_done ( s#xfrm_policy_walk * , s#net * ) 
xfrm_policy_delete int xfrm_policy_delete ( s#xfrm_policy * , int ) 
xfrm_lookup s#dst_entry * xfrm_lookup ( s#net * , s#dst_entry * , const s#flowi * , const s#sock * , int ) 
xfrm_lookup_route s#dst_entry * xfrm_lookup_route ( s#net * , s#dst_entry * , const s#flowi * , const s#sock * , int ) 
__xfrm_decode_session int __xfrm_decode_session ( s#sk_buff * , s#flowi * , unsigned int , int ) 
__xfrm_policy_check int __xfrm_policy_check ( s#sock * , int , s#sk_buff * , unsigned short ) 
__xfrm_route_forward int __xfrm_route_forward ( s#sk_buff * , unsigned short ) 
xfrm_dst_ifdown void xfrm_dst_ifdown ( s#dst_entry * , s#net_device * ) 
xfrm_garbage_collect void xfrm_garbage_collect ( s#net * ) 
xfrm_garbage_collect_deferred void xfrm_garbage_collect_deferred ( s#net * ) 
E#XFRM_POLICY_TYPE_MAX 2 
s#xfrm_dst struct xfrm_dst { union { s#dst_entry dst ; s#rtable rt ; s#rt6_info rt6 ; } u ; s#dst_entry * route ; s#flow_cache_object flo ; s#xfrm_policy * pols [ E#XFRM_POLICY_TYPE_MAX ] ; int num_pols , num_xfrms ; t#u32 xfrm_genid ; t#u32 policy_genid ; t#u32 route_mtu_cached ; t#u32 child_mtu_cached ; t#u32 route_cookie ; t#u32 path_cookie ; } 
s#xfrm_policy_afinfo struct xfrm_policy_afinfo { s#dst_ops * dst_ops ; s#dst_entry * ( * dst_lookup ) ( s#net * , int , int , const t#xfrm_address_t * , const t#xfrm_address_t * ) ; int ( * get_saddr ) ( s#net * , int , t#xfrm_address_t * , t#xfrm_address_t * ) ; void ( * decode_session ) ( s#sk_buff * , s#flowi * , int ) ; int ( * get_tos ) ( const s#flowi * ) ; int ( * init_path ) ( s#xfrm_dst * , s#dst_entry * , int ) ; int ( * fill_dst ) ( s#xfrm_dst * , s#net_device * , const s#flowi * ) ; s#dst_entry * ( * blackhole_route ) ( s#net * , s#dst_entry * ) ; } 
xfrm_policy_register_afinfo int xfrm_policy_register_afinfo ( const s#xfrm_policy_afinfo * , int ) 
xfrm_policy_unregister_afinfo void xfrm_policy_unregister_afinfo ( const s#xfrm_policy_afinfo * ) 
xfrm_audit_policy_add void xfrm_audit_policy_add ( s#xfrm_policy * , int , t#bool ) 
xfrm_audit_policy_delete void xfrm_audit_policy_delete ( s#xfrm_policy * , int , t#bool ) 
s#xfrm_migrate struct xfrm_migrate { t#xfrm_address_t old_daddr ; t#xfrm_address_t old_saddr ; t#xfrm_address_t new_daddr ; t#xfrm_address_t new_saddr ; t#u8 proto ; t#u8 mode ; t#u16 reserved ; t#u32 reqid ; t#u16 old_family ; t#u16 new_family ; } 
s#xfrm_kmaddress struct xfrm_kmaddress { t#xfrm_address_t local ; t#xfrm_address_t remote ; t#u32 reserved ; t#u16 family ; } 
xfrm_migrate int xfrm_migrate ( const s#xfrm_selector * , t#u8 , t#u8 , s#xfrm_migrate * , int , s#xfrm_kmaddress * , s#net * ) 

/* net/xfrm/xfrm_replay.o */
s##proc_ns_operations
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##kmem_cache
s##fs_pin
s##nlm_lockowner
s##nfs4_lock_state
s##workqueue_struct
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##lwtunnel_state
s##uncached_list
s##proc_dir_entry
s##dn_route
s##prefix_info
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##phy_device
s##sfp_bus
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##eventfd_ctx
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##key_user
s##key_type
s##assoc_array_ptr
s##uevent_sock
s##prot_inuse
s##ipv4_devconf
s##xt_table
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
xfrm_replay_seqhi t#u32 xfrm_replay_seqhi ( s#xfrm_state * , t#__be32 ) 
xfrm_init_replay int xfrm_init_replay ( s#xfrm_state * ) 

/* net/xfrm/xfrm_state.o */
s##posix_acl
s##vfsmount
s##device_private
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##kmem_cache
s##fs_pin
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##proc_dir_entry
s##uevent_sock
s##workqueue_struct
s##udp_tunnel_info
s##bpf_prog_aux
s##bpf_prog_offload_ops
s##bpf_offloaded_map
s##xdp_umem
s##switchdev_ops
s##lwtunnel_state
s##uncached_list
s##dn_route
s##prefix_info
s##tls_crypto_info
s##tls_context
s##vlan_info
s##tipc_bearer
s##in_device
s##dn_dev
s##wireless_dev
s##wpan_dev
s##mpls_dev
s##tcf_walker
s##qdisc_walker
s##net_rate_estimator
s##nf_hook_entry
s##cpu_rmap
s##pcpu_dstats
s##garp_port
s##mrp_port
s##phy_device
s##sfp_bus
s##prot_inuse
s##ipv4_devconf
s##xt_table
s##inet_hashinfo
s##seg6_pernet_data
s##sctp_mib
s##nf_queue_handler
s##nf_logger
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##nft_af_info
s##net_generic
s##netns_ipvs
s##mpls_route
s##eventfd_ctx
s##mempolicy
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##blk_plug
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##mtd_info
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##udp_table
s##raw_hashinfo
s##sock_reuseport
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
xfrm_register_type int xfrm_register_type ( const s#xfrm_type * , unsigned short ) 
xfrm_unregister_type int xfrm_unregister_type ( const s#xfrm_type * , unsigned short ) 
xfrm_register_type_offload int xfrm_register_type_offload ( const s#xfrm_type_offload * , unsigned short ) 
xfrm_unregister_type_offload int xfrm_unregister_type_offload ( const s#xfrm_type_offload * , unsigned short ) 
xfrm_register_mode int xfrm_register_mode ( s#xfrm_mode * , int ) 
xfrm_unregister_mode int xfrm_unregister_mode ( s#xfrm_mode * , int ) 
xfrm_state_alloc s#xfrm_state * xfrm_state_alloc ( s#net * ) 
__xfrm_state_destroy void __xfrm_state_destroy ( s#xfrm_state * ) 
__xfrm_state_delete int __xfrm_state_delete ( s#xfrm_state * ) 
xfrm_state_delete int xfrm_state_delete ( s#xfrm_state * ) 
xfrm_state_flush int xfrm_state_flush ( s#net * , t#u8 , t#bool ) 
xfrm_dev_state_flush int xfrm_dev_state_flush ( s#net * , s#net_device * , t#bool ) 
s#xfrmk_sadinfo struct xfrmk_sadinfo { t#u32 sadhcnt ; t#u32 sadhmcnt ; t#u32 sadcnt ; } 
xfrm_sad_getinfo void xfrm_sad_getinfo ( s#net * , s#xfrmk_sadinfo * ) 
xfrm_stateonly_find s#xfrm_state * xfrm_stateonly_find ( s#net * , t#u32 , t#xfrm_address_t * , t#xfrm_address_t * , unsigned short , t#u8 , t#u8 , t#u32 ) 
xfrm_state_lookup_byspi s#xfrm_state * xfrm_state_lookup_byspi ( s#net * , t#__be32 , unsigned short ) 
xfrm_state_insert void xfrm_state_insert ( s#xfrm_state * ) 
xfrm_state_add int xfrm_state_add ( s#xfrm_state * ) 
xfrm_migrate_state_find s#xfrm_state * xfrm_migrate_state_find ( s#xfrm_migrate * , s#net * ) 
xfrm_state_migrate s#xfrm_state * xfrm_state_migrate ( s#xfrm_state * , s#xfrm_migrate * ) 
xfrm_state_update int xfrm_state_update ( s#xfrm_state * ) 
xfrm_state_check_expire int xfrm_state_check_expire ( s#xfrm_state * ) 
xfrm_state_lookup s#xfrm_state * xfrm_state_lookup ( s#net * , t#u32 , const t#xfrm_address_t * , t#__be32 , t#u8 , unsigned short ) 
xfrm_state_lookup_byaddr s#xfrm_state * xfrm_state_lookup_byaddr ( s#net * , t#u32 , const t#xfrm_address_t * , const t#xfrm_address_t * , t#u8 , unsigned short ) 
xfrm_find_acq s#xfrm_state * xfrm_find_acq ( s#net * , const s#xfrm_mark * , t#u8 , t#u32 , t#u8 , const t#xfrm_address_t * , const t#xfrm_address_t * , int , unsigned short ) 
xfrm_tmpl_sort int xfrm_tmpl_sort ( s#xfrm_tmpl * * , s#xfrm_tmpl * * , int , unsigned short , s#net * ) 
xfrm_state_sort int xfrm_state_sort ( s#xfrm_state * * , s#xfrm_state * * , int , unsigned short ) 
xfrm_find_acq_byseq s#xfrm_state * xfrm_find_acq_byseq ( s#net * , t#u32 , t#u32 ) 
xfrm_get_acqseq t#u32 xfrm_get_acqseq ( void ) 
verify_spi_info int verify_spi_info ( t#u8 , t#u32 , t#u32 ) 
xfrm_alloc_spi int xfrm_alloc_spi ( s#xfrm_state * , t#u32 , t#u32 ) 
xfrm_state_walk int xfrm_state_walk ( s#net * , s#xfrm_state_walk * , int ( * ) ( s#xfrm_state * , int , void * ) , void * ) 
xfrm_state_walk_init void xfrm_state_walk_init ( s#xfrm_state_walk * , t#u8 , s#xfrm_address_filter * ) 
xfrm_state_walk_done void xfrm_state_walk_done ( s#xfrm_state_walk * , s#net * ) 
s#km_event struct km_event { union { t#u32 hard ; t#u32 proto ; t#u32 byid ; t#u32 aevent ; t#u32 type ; } data ; t#u32 seq ; t#u32 portid ; t#u32 event ; s#net * net ; } 
km_policy_notify void km_policy_notify ( s#xfrm_policy * , int , const s#km_event * ) 
km_state_notify void km_state_notify ( s#xfrm_state * , const s#km_event * ) 
km_state_expired void km_state_expired ( s#xfrm_state * , int , t#u32 ) 
km_query int km_query ( s#xfrm_state * , s#xfrm_tmpl * , s#xfrm_policy * ) 
km_new_mapping int km_new_mapping ( s#xfrm_state * , t#xfrm_address_t * , t#__be16 ) 
km_policy_expired void km_policy_expired ( s#xfrm_policy * , int , int , t#u32 ) 
km_migrate int km_migrate ( const s#xfrm_selector * , t#u8 , t#u8 , const s#xfrm_migrate * , int , const s#xfrm_kmaddress * ) 
km_report int km_report ( s#net * , t#u8 , s#xfrm_selector * , t#xfrm_address_t * ) 
km_is_alive t#bool km_is_alive ( const s#km_event * ) 
xfrm_user_policy int xfrm_user_policy ( s#sock * , int , t#u8 * , int ) 
s#xfrm_mgr struct xfrm_mgr { s#list_head list ; int ( * notify ) ( s#xfrm_state * , const s#km_event * ) ; int ( * acquire ) ( s#xfrm_state * , s#xfrm_tmpl * , s#xfrm_policy * ) ; s#xfrm_policy * ( * compile_policy ) ( s#sock * , int , t#u8 * , int , int * ) ; int ( * new_mapping ) ( s#xfrm_state * , t#xfrm_address_t * , t#__be16 ) ; int ( * notify_policy ) ( s#xfrm_policy * , int , const s#km_event * ) ; int ( * report ) ( s#net * , t#u8 , s#xfrm_selector * , t#xfrm_address_t * ) ; int ( * migrate ) ( const s#xfrm_selector * , t#u8 , t#u8 , const s#xfrm_migrate * , int , const s#xfrm_kmaddress * ) ; t#bool ( * is_alive ) ( const s#km_event * ) ; } 
xfrm_register_km int xfrm_register_km ( s#xfrm_mgr * ) 
xfrm_unregister_km int xfrm_unregister_km ( s#xfrm_mgr * ) 
xfrm_state_register_afinfo int xfrm_state_register_afinfo ( s#xfrm_state_afinfo * ) 
xfrm_state_unregister_afinfo int xfrm_state_unregister_afinfo ( s#xfrm_state_afinfo * ) 
xfrm_state_delete_tunnel void xfrm_state_delete_tunnel ( s#xfrm_state * ) 
__xfrm_init_state int __xfrm_init_state ( s#xfrm_state * , t#bool , t#bool ) 
xfrm_init_state int xfrm_init_state ( s#xfrm_state * ) 
xfrm_audit_state_add void xfrm_audit_state_add ( s#xfrm_state * , int , t#bool ) 
xfrm_audit_state_delete void xfrm_audit_state_delete ( s#xfrm_state * , int , t#bool ) 
xfrm_audit_state_replay_overflow void xfrm_audit_state_replay_overflow ( s#xfrm_state * , s#sk_buff * ) 
xfrm_audit_state_replay void xfrm_audit_state_replay ( s#xfrm_state * , s#sk_buff * , t#__be32 ) 
xfrm_audit_state_notfound_simple void xfrm_audit_state_notfound_simple ( s#sk_buff * , t#u16 ) 
xfrm_audit_state_notfound void xfrm_audit_state_notfound ( s#sk_buff * , t#u16 , t#__be32 , t#__be32 ) 
xfrm_audit_state_icvfail void xfrm_audit_state_icvfail ( s#xfrm_state * , s#sk_buff * , t#u8 ) 

/* security/inode.o */
s##posix_acl
s##sock
s##seq_file
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pollfd
s##pid_namespace
s##cred
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##pipe_inode_info
s##writeback_control
s##bio_vec
s##swap_info_struct
s##device
s##kmem_cache
s##mem_cgroup
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##user_namespace
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##kstatfs
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##bdi_writeback
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
securityfs_create_file extern s#dentry * securityfs_create_file ( const char * , t#umode_t , s#dentry * , void * , const s#file_operations * ) 
securityfs_create_dir extern s#dentry * securityfs_create_dir ( const char * , s#dentry * ) 
securityfs_create_symlink s#dentry * securityfs_create_symlink ( const char * , s#dentry * , const char * , const s#inode_operations * ) 
securityfs_remove extern void securityfs_remove ( s#dentry * ) 

/* security/integrity/evm/evm_crypto.o */
evm_set_key extern int evm_set_key ( void * , t#size_t ) 

/* security/integrity/evm/evm_main.o */
e#integrity_status enum integrity_status { INTEGRITY_PASS = 0 , INTEGRITY_PASS_IMMUTABLE , INTEGRITY_FAIL , INTEGRITY_NOLABEL , INTEGRITY_NOXATTRS , INTEGRITY_UNKNOWN , } 
s##posix_acl
s##vfsmount
s##sock
s##seq_file
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pollfd
s##kmem_cache
s##fs_pin
s##user_namespace
s##ucounts
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##cgroup_namespace
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##writeback_control
s##bio_vec
s##swap_info_struct
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##mem_cgroup
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##kstatfs
s##export_operations
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s#ima_digest_data struct ima_digest_data { t#u8 algo ; t#u8 length ; union { struct { t#u8 unused ; t#u8 type ; } sha1 ; struct { t#u8 type ; t#u8 algo ; } ng ; t#u8 data [ 2 ] ; } xattr ; t#u8 digest [ 0 ] ; } 
s#integrity_iint_cache struct integrity_iint_cache { s#rb_node rb_node ; s#inode * inode ; t#u64 version ; unsigned long flags ; unsigned long measured_pcrs ; e#integrity_status ima_file_status : 4 ; e#integrity_status ima_mmap_status : 4 ; e#integrity_status ima_bprm_status : 4 ; e#integrity_status ima_read_status : 4 ; e#integrity_status evm_status : 4 ; s#ima_digest_data * ima_hash ; } 
evm_verifyxattr extern e#integrity_status evm_verifyxattr ( s#dentry * , const char * , void * , t#size_t , s#integrity_iint_cache * ) 
s#xattr struct xattr { const char * name ; void * value ; t#size_t value_len ; } 
evm_inode_init_security extern int evm_inode_init_security ( s#inode * , const s#xattr * , s#xattr * ) 

/* security/integrity/ima/ima_main.o */
s##posix_acl
s##sock
s##seq_file
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pollfd
s##kmem_cache
s##fs_pin
s##user_namespace
s##ucounts
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##cgroup_namespace
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##pipe_inode_info
s##writeback_control
s##bio_vec
s##swap_info_struct
s##device
s##mem_cgroup
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##kstatfs
s##export_operations
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
ima_file_check extern int ima_file_check ( s#file * , int , int ) 

/* security/keys/encrypted-keys/ecryptfs_format.o */
s#ecryptfs_session_key struct ecryptfs_session_key { t#u32 flags ; t#u32 encrypted_key_size ; t#u32 decrypted_key_size ; t#u8 encrypted_key [ 512 ] ; t#u8 decrypted_key [ 64 ] ; } 
s#ecryptfs_password struct ecryptfs_password { t#u32 password_bytes ; t#s32 hash_algo ; t#u32 hash_iterations ; t#u32 session_key_encryption_key_bytes ; t#u32 flags ; t#u8 session_key_encryption_key [ 64 ] ; t#u8 signature [ ( 8 * 2 ) + 1 ] ; t#u8 salt [ 8 ] ; } 
s#ecryptfs_private_key struct ecryptfs_private_key { t#u32 key_size ; t#u32 data_len ; t#u8 signature [ ( 8 * 2 ) + 1 ] ; char pki_type [ 16 + 1 ] ; t#u8 data [ ] ; } 
s#ecryptfs_auth_tok struct ecryptfs_auth_tok { t#u16 version ; t#u16 token_type ; t#u32 flags ; s#ecryptfs_session_key session_key ; t#u8 reserved [ 32 ] ; union { s#ecryptfs_password password ; s#ecryptfs_private_key private_key ; } token ; } 
ecryptfs_get_auth_tok_key t#u8 * ecryptfs_get_auth_tok_key ( s#ecryptfs_auth_tok * ) 
ecryptfs_get_versions void ecryptfs_get_versions ( int * , int * , int * ) 
ecryptfs_fill_auth_tok int ecryptfs_fill_auth_tok ( s#ecryptfs_auth_tok * , const char * ) 

/* security/keys/encrypted-keys/encrypted.o */
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##sock
s##seq_file
s##bio_vec
s##user_struct
s##poll_table_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##cred
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##mem_cgroup
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##user_namespace
s##bdi_writeback
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##kmem_cache
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##key_user
s##assoc_array_ptr
key_type_encrypted extern s#key_type key_type_encrypted 

/* security/keys/key.o */
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##sock
s##seq_file
s##bio_vec
s##pipe_inode_info
s##poll_table_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##user_namespace
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##mem_cgroup
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##device
s##kmem_cache
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s#key_user struct key_user { s#rb_node node ; s#mutex cons_lock ; t#spinlock_t lock ; t#refcount_t usage ; t#atomic_t nkeys ; t#atomic_t nikeys ; t#kuid_t uid ; int qnkeys ; int qnbytes ; } 
s##assoc_array_ptr
key_alloc extern s#key * key_alloc ( s#key_type * , const char * , t#kuid_t , t#kgid_t , const s#cred * , t#key_perm_t , unsigned long , s#key_restriction * ) 
key_payload_reserve extern int key_payload_reserve ( s#key * , t#size_t ) 
key_instantiate_and_link extern int key_instantiate_and_link ( s#key * , const void * , t#size_t , s#key * , s#key * ) 
key_reject_and_link extern int key_reject_and_link ( s#key * , unsigned , unsigned , s#key * , s#key * ) 
key_put extern void key_put ( s#key * ) 
key_set_timeout extern void key_set_timeout ( s#key * , unsigned ) 
s##__key_reference_with_attributes
t#key_ref_t typedef s#__key_reference_with_attributes * key_ref_t 
key_create_or_update extern t#key_ref_t key_create_or_update ( t#key_ref_t , const char * , const char * , const void * , t#size_t , t#key_perm_t , unsigned long ) 
key_update extern int key_update ( t#key_ref_t , const void * , t#size_t ) 
key_revoke extern void key_revoke ( s#key * ) 
key_invalidate extern void key_invalidate ( s#key * ) 
generic_key_instantiate extern int generic_key_instantiate ( s#key * , s#key_preparsed_payload * ) 
register_key_type extern int register_key_type ( s#key_type * ) 
unregister_key_type extern void unregister_key_type ( s#key_type * ) 

/* security/keys/keyring.o */
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##sock
s##bio_vec
s##pipe_inode_info
s##poll_table_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##user_namespace
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##mem_cgroup
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##device
s##kmem_cache
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##assoc_array_ptr
key_type_keyring extern s#key_type key_type_keyring 
keyring_alloc extern s#key * keyring_alloc ( const char * , t#kuid_t , t#kgid_t , const s#cred * , t#key_perm_t , unsigned long , s#key_restriction * , s#key * ) 
s##__key_reference_with_attributes
keyring_search extern t#key_ref_t keyring_search ( t#key_ref_t , s#key_type * , const char * ) 
keyring_restrict extern int keyring_restrict ( t#key_ref_t , const char * , const char * ) 
key_link extern int key_link ( s#key * , s#key * ) 
key_unlink extern int key_unlink ( s#key * , s#key * ) 
keyring_clear extern int keyring_clear ( s#key * ) 

/* security/keys/permission.o */
s##__key_reference_with_attributes
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##sock
s##seq_file
s##bio_vec
s##pipe_inode_info
s##poll_table_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##mem_cgroup
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##user_namespace
s##bdi_writeback
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##device
s##kmem_cache
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##assoc_array_ptr
key_task_permission extern int key_task_permission ( const t#key_ref_t , const s#cred * , t#key_perm_t ) 
key_validate extern int key_validate ( const s#key * ) 

/* security/keys/process_keys.o */
s##__key_reference_with_attributes
lookup_user_key extern t#key_ref_t lookup_user_key ( t#key_serial_t , unsigned long , t#key_perm_t ) 

/* security/keys/request_key.o */
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##sock
s##seq_file
s##bio_vec
s##pipe_inode_info
s##poll_table_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##user_namespace
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##mem_cgroup
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##device
s##kmem_cache
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##assoc_array_ptr
complete_request_key extern void complete_request_key ( s#key_construction * , int ) 
wait_for_key_construction extern int wait_for_key_construction ( s#key * , t#bool ) 
request_key extern s#key * request_key ( s#key_type * , const char * , const char * ) 
request_key_with_auxdata extern s#key * request_key_with_auxdata ( s#key_type * , const char * , const void * , t#size_t , void * ) 
request_key_async extern s#key * request_key_async ( s#key_type * , const char * , const void * , t#size_t ) 
request_key_async_with_auxdata extern s#key * request_key_async_with_auxdata ( s#key_type * , const char * , const void * , t#size_t , void * ) 

/* security/keys/trusted.o */
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##sock
s##seq_file
s##bio_vec
s##pipe_inode_info
s##poll_table_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##cred
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##mem_cgroup
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##user_namespace
s##bdi_writeback
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##device
s##kmem_cache
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##key_user
s##assoc_array_ptr
key_type_trusted extern s#key_type key_type_trusted 

/* security/keys/user_defined.o */
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##posix_acl
s##vfsmount
s##sock
s##bio_vec
s##pipe_inode_info
s##poll_table_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##user_namespace
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##writeback_control
s##kstatfs
s##mem_cgroup
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##backing_dev_info
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##device
s##kmem_cache
s##mempolicy
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##pollfd
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##nsproxy
s##signal_struct
s##sighand_struct
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##assoc_array_ptr
key_type_user extern s#key_type key_type_user 
key_type_logon extern s#key_type key_type_logon 
user_preparse extern int user_preparse ( s#key_preparsed_payload * ) 
user_free_preparse extern void user_free_preparse ( s#key_preparsed_payload * ) 
user_update extern int user_update ( s#key * , s#key_preparsed_payload * ) 
user_revoke extern void user_revoke ( s#key * ) 
user_destroy extern void user_destroy ( s#key * ) 
user_describe extern void user_describe ( const s#key * , s#seq_file * ) 
user_read extern long user_read ( const s#key * , char * , t#size_t ) 

/* security/security.o */
e#lsm_event enum lsm_event { LSM_POLICY_CHANGE , } 
call_lsm_notifier int call_lsm_notifier ( e#lsm_event , void * ) 
register_lsm_notifier int register_lsm_notifier ( s#notifier_block * ) 
unregister_lsm_notifier int unregister_lsm_notifier ( s#notifier_block * ) 
security_sb_copy_data int security_sb_copy_data ( char * , char * ) 
s##posix_acl
s##sock
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##pollfd
s##kmem_cache
s##fs_pin
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##bpf_prog_array
s##cgroup_taskset
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_map_ops
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##blk_mq_ctx
s##workqueue_struct
s##pipe_inode_info
s##swap_info_struct
s##mem_cgroup
s##blk_mq_hw_ctx
s##blk_mq_alloc_data
s##blk_mq_debugfs_attr
s##blk_queue_stats
s##rq_wb
s##blk_mq_ops
s##blk_stat_callback
s##blk_trace
s##blk_flush_queue
s##bsg_job
s##throtl_data
s##blk_mq_tag_set
s##hd_geometry
s##pr_ops
s##timer_rand_state
s##disk_events
s##badblocks
s##reclaim_state
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##numa_group
s##task_delay_info
s##ftrace_ret_stack
s##uprobe
s##gs_cb
s##linux_binfmt
s##kioctx_table
s##mmu_notifier_mm
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##static_key_mod
s##trace_event_call
s##trace_enum_map
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fscrypt_info
s##kstatfs
s##export_operations
s##fscrypt_operations
s##mtd_info
security_sb_set_mnt_opts int security_sb_set_mnt_opts ( s#super_block * , s#security_mnt_opts * , unsigned long , unsigned long * ) 
security_sb_clone_mnt_opts int security_sb_clone_mnt_opts ( const s#super_block * , s#super_block * ) 
security_sb_parse_opts_str int security_sb_parse_opts_str ( char * , s#security_mnt_opts * ) 
security_dentry_init_security int security_dentry_init_security ( s#dentry * , int , const s#qstr * , void * * , t#u32 * ) 
security_dentry_create_files_as int security_dentry_create_files_as ( s#dentry * , int , s#qstr * , const s#cred * , s#cred * ) 
t#initxattrs typedef int ( * initxattrs ) ( s#inode * , const s#xattr * , void * ) 
security_inode_init_security int security_inode_init_security ( s#inode * , s#inode * , const s#qstr * , t#initxattrs t#initxattrs , void * ) 
security_old_inode_init_security int security_old_inode_init_security ( s#inode * , s#inode * , const s#qstr * , const char * * , void * * , t#size_t * ) 
security_path_mknod int security_path_mknod ( const s#path * , s#dentry * , t#umode_t , unsigned int ) 
security_path_mkdir int security_path_mkdir ( const s#path * , s#dentry * , t#umode_t ) 
security_path_unlink int security_path_unlink ( const s#path * , s#dentry * ) 
security_path_rename int security_path_rename ( const s#path * , s#dentry * , const s#path * , s#dentry * , unsigned int ) 
security_inode_create int security_inode_create ( s#inode * , s#dentry * , t#umode_t ) 
security_inode_mkdir int security_inode_mkdir ( s#inode * , s#dentry * , t#umode_t ) 
security_inode_setattr int security_inode_setattr ( s#dentry * , s#iattr * ) 
security_inode_listsecurity int security_inode_listsecurity ( s#inode * , char * , t#size_t ) 
security_inode_copy_up int security_inode_copy_up ( s#dentry * , s#cred * * ) 
security_inode_copy_up_xattr int security_inode_copy_up_xattr ( const char * ) 
security_kernel_read_file int security_kernel_read_file ( s#file * , e#kernel_read_file_id ) 
security_kernel_post_read_file int security_kernel_post_read_file ( s#file * , char * , t#loff_t , e#kernel_read_file_id ) 
security_task_getsecid void security_task_getsecid ( s#task_struct * , t#u32 * ) 
security_d_instantiate void security_d_instantiate ( s#dentry * , s#inode * ) 
security_ismaclabel int security_ismaclabel ( const char * ) 
security_secid_to_secctx int security_secid_to_secctx ( t#u32 , char * * , t#u32 * ) 
security_secctx_to_secid int security_secctx_to_secid ( const char * , t#u32 , t#u32 * ) 
security_release_secctx void security_release_secctx ( char * , t#u32 ) 
security_inode_invalidate_secctx void security_inode_invalidate_secctx ( s#inode * ) 
security_inode_notifysecctx int security_inode_notifysecctx ( s#inode * , void * , t#u32 ) 
security_inode_setsecctx int security_inode_setsecctx ( s#dentry * , void * , t#u32 ) 
security_inode_getsecctx int security_inode_getsecctx ( s#inode * , void * * , t#u32 * ) 
security_unix_stream_connect int security_unix_stream_connect ( s#sock * , s#sock * , s#sock * ) 
s##socket
security_unix_may_send int security_unix_may_send ( s#socket * , s#socket * ) 
s##sk_buff
security_sock_rcv_skb int security_sock_rcv_skb ( s#sock * , s#sk_buff * ) 
security_socket_getpeersec_dgram int security_socket_getpeersec_dgram ( s#socket * , s#sk_buff * , t#u32 * ) 
security_sk_clone void security_sk_clone ( const s#sock * , s#sock * ) 
security_sk_classify_flow void security_sk_classify_flow ( s#sock * , s#flowi * ) 
s##request_sock
security_req_classify_flow void security_req_classify_flow ( const s#request_sock * , s#flowi * ) 
security_sock_graft void security_sock_graft ( s#sock * , s#socket * ) 
security_inet_conn_request int security_inet_conn_request ( s#sock * , s#sk_buff * , s#request_sock * ) 
security_secmark_relabel_packet int security_secmark_relabel_packet ( t#u32 ) 
security_secmark_refcount_inc void security_secmark_refcount_inc ( void ) 
security_secmark_refcount_dec void security_secmark_refcount_dec ( void ) 
security_tun_dev_alloc_security int security_tun_dev_alloc_security ( void * * ) 
security_tun_dev_free_security void security_tun_dev_free_security ( void * ) 
security_tun_dev_create int security_tun_dev_create ( void ) 
security_tun_dev_attach_queue int security_tun_dev_attach_queue ( void * ) 
security_tun_dev_attach int security_tun_dev_attach ( s#sock * , void * ) 
security_tun_dev_open int security_tun_dev_open ( void * ) 
security_ib_pkey_access int security_ib_pkey_access ( void * , t#u64 , t#u16 ) 
security_ib_endport_manage_subnet int security_ib_endport_manage_subnet ( void * , const char * , t#u8 ) 
security_ib_alloc_security int security_ib_alloc_security ( void * * ) 
security_ib_free_security void security_ib_free_security ( void * ) 
s##xfrm_sec_ctx
s##xfrm_user_sec_ctx
security_xfrm_policy_alloc int security_xfrm_policy_alloc ( s#xfrm_sec_ctx * * , s#xfrm_user_sec_ctx * , t#gfp_t ) 
security_xfrm_policy_free void security_xfrm_policy_free ( s#xfrm_sec_ctx * ) 
s##xfrm_state
security_xfrm_state_alloc int security_xfrm_state_alloc ( s#xfrm_state * , s#xfrm_user_sec_ctx * ) 
security_xfrm_state_delete int security_xfrm_state_delete ( s#xfrm_state * ) 
security_skb_classify_flow void security_skb_classify_flow ( s#sk_buff * , s#flowi * ) 

/* security/selinux/exports.o */
selinux_is_enabled t#bool selinux_is_enabled ( void ) 

/* virt/kvm/eventfd.o */
s##anon_vma
s##posix_acl
s##vfsmount
s##module
s##writeback_control
s##kstatfs
s##bio_vec
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##compat_timespec
s##kmem_cache
s##fs_pin
s##proc_ns_operations
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##kernfs_open_node
s##kernfs_iattrs
s##bpf_prog_array
s##cgroup_taskset
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##device_private
s##sock
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##ring_buffer
s##bpf_prog
s##static_key_mod
s##trace_array
s##tracer
s##trace_buffer
s##ring_buffer_iter
s##event_filter
s##ftrace_hash
s##mempolicy
s##numa_group
s##task_delay_info
s##mem_cgroup
s##uprobe
s##key_user
s##key_type
s##assoc_array_ptr
s##nlm_lockowner
s##nfs4_lock_state
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##hd_struct
s##gendisk
s##request_queue
s##mtd_info
s##workqueue_struct
s##bdi_writeback
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
s##swap_info_struct
s##userfaultfd_ctx
s##linux_binfmt
s##kioctx_table
s##xol_area
s##gmap
s#kvm_io_device_ops struct kvm_io_device_ops { int ( * read ) ( s#kvm_vcpu * , s#kvm_io_device * , t#gpa_t , int , void * ) ; int ( * write ) ( s#kvm_vcpu * , s#kvm_io_device * , t#gpa_t , int , const void * ) ; void ( * destructor ) ( s#kvm_io_device * ) ; } 
s#kvm_io_device struct kvm_io_device { const s#kvm_io_device_ops * ops ; } 
kvm_irq_has_notifier t#bool kvm_irq_has_notifier ( s#kvm * , unsigned , unsigned ) 

/* virt/kvm/kvm_main.o */
halt_poll_ns extern unsigned int halt_poll_ns 
halt_poll_ns_grow extern unsigned int halt_poll_ns_grow 
halt_poll_ns_shrink extern unsigned int halt_poll_ns_shrink 
s##kmem_cache
kvm_vcpu_cache extern s#kmem_cache * kvm_vcpu_cache 
s##posix_acl
s##vfsmount
s##sock
s##sched_class
s##cfs_rq
s##rt_rq
s##task_group
s##fs_pin
s##proc_ns_operations
s##key_user
s##key_type
s##assoc_array_ptr
s##nameidata
s##sem_undo_list
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##bpf_prog_array
s##cgroup_taskset
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##gendisk
s##request_queue
s##device_private
s##of_device_id
s##acpi_device_id
s##driver_private
s##iommu_ops
s##subsys_private
s##wake_irq
s##dev_pm_qos
s##dma_coherent_mem
s##device_node
s##iommu_group
s##iommu_fwspec
s##workqueue_struct
s##kstatfs
s##eventfd_ctx
s##export_operations
s##xattr_handler
s##fscrypt_operations
s##mtd_info
s##hd_struct
s##blk_plug
s##robust_list_head
s##futex_pi_state
s##ring_buffer
s##bpf_prog
s##static_key_mod
s##trace_array
s##tracer
s##trace_buffer
s##ring_buffer_iter
s##event_filter
s##ftrace_hash
s##numa_group
s##task_delay_info
s##uprobe
s##linux_binfmt
s##kioctx_table
s##xol_area
s##anon_vma
s##userfaultfd_ctx
s##kernfs_open_node
s##kernfs_iattrs
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##fsnotify_mark_connector
s##fscrypt_info
kvm_debugfs_dir extern s#dentry * kvm_debugfs_dir 
kvm_rebooting extern t#bool kvm_rebooting 
s##gmap
vcpu_load int vcpu_load ( s#kvm_vcpu * ) 
vcpu_put void vcpu_put ( s#kvm_vcpu * ) 
kvm_flush_remote_tlbs void kvm_flush_remote_tlbs ( s#kvm * ) 
kvm_vcpu_init int kvm_vcpu_init ( s#kvm_vcpu * , s#kvm * , unsigned ) 
kvm_vcpu_uninit void kvm_vcpu_uninit ( s#kvm_vcpu * ) 
kvm_get_kvm void kvm_get_kvm ( s#kvm * ) 
kvm_put_kvm void kvm_put_kvm ( s#kvm * ) 
s#kvm_userspace_memory_region struct kvm_userspace_memory_region { t#__u32 slot ; t#__u32 flags ; t#__u64 guest_phys_addr ; t#__u64 memory_size ; t#__u64 userspace_addr ; } 
__kvm_set_memory_region int __kvm_set_memory_region ( s#kvm * , const s#kvm_userspace_memory_region * ) 
kvm_set_memory_region int kvm_set_memory_region ( s#kvm * , const s#kvm_userspace_memory_region * ) 
s#kvm_dirty_log struct kvm_dirty_log { t#__u32 slot ; t#__u32 padding1 ; union { void * dirty_bitmap ; t#__u64 padding2 ; } ; } 
kvm_get_dirty_log int kvm_get_dirty_log ( s#kvm * , s#kvm_dirty_log * , int * ) 
kvm_disable_largepages void kvm_disable_largepages ( void ) 
gfn_to_memslot s#kvm_memory_slot * gfn_to_memslot ( s#kvm * , t#gfn_t ) 
kvm_is_visible_gfn t#bool kvm_is_visible_gfn ( s#kvm * , t#gfn_t ) 
gfn_to_hva_memslot unsigned long gfn_to_hva_memslot ( s#kvm_memory_slot * , t#gfn_t ) 
gfn_to_hva unsigned long gfn_to_hva ( s#kvm * , t#gfn_t ) 
kvm_vcpu_gfn_to_hva unsigned long kvm_vcpu_gfn_to_hva ( s#kvm_vcpu * , t#gfn_t ) 
t#hfn_t typedef t#u64 hfn_t 
t#kvm_pfn_t typedef t#hfn_t kvm_pfn_t 
__gfn_to_pfn_memslot t#kvm_pfn_t __gfn_to_pfn_memslot ( s#kvm_memory_slot * , t#gfn_t , t#bool , t#bool * , t#bool , t#bool * ) 
gfn_to_pfn_prot t#kvm_pfn_t gfn_to_pfn_prot ( s#kvm * , t#gfn_t , t#bool , t#bool * ) 
gfn_to_pfn_memslot t#kvm_pfn_t gfn_to_pfn_memslot ( s#kvm_memory_slot * , t#gfn_t ) 
gfn_to_pfn_memslot_atomic t#kvm_pfn_t gfn_to_pfn_memslot_atomic ( s#kvm_memory_slot * , t#gfn_t ) 
gfn_to_pfn_atomic t#kvm_pfn_t gfn_to_pfn_atomic ( s#kvm * , t#gfn_t ) 
kvm_vcpu_gfn_to_pfn_atomic t#kvm_pfn_t kvm_vcpu_gfn_to_pfn_atomic ( s#kvm_vcpu * , t#gfn_t ) 
gfn_to_pfn t#kvm_pfn_t gfn_to_pfn ( s#kvm * , t#gfn_t ) 
kvm_vcpu_gfn_to_pfn t#kvm_pfn_t kvm_vcpu_gfn_to_pfn ( s#kvm_vcpu * , t#gfn_t ) 
gfn_to_page_many_atomic int gfn_to_page_many_atomic ( s#kvm_memory_slot * , t#gfn_t , s#page * * , int ) 
gfn_to_page s#page * gfn_to_page ( s#kvm * , t#gfn_t ) 
kvm_vcpu_gfn_to_page s#page * kvm_vcpu_gfn_to_page ( s#kvm_vcpu * , t#gfn_t ) 
kvm_release_page_clean void kvm_release_page_clean ( s#page * ) 
kvm_release_pfn_clean void kvm_release_pfn_clean ( t#kvm_pfn_t ) 
kvm_release_page_dirty void kvm_release_page_dirty ( s#page * ) 
kvm_release_pfn_dirty void kvm_release_pfn_dirty ( t#kvm_pfn_t ) 
kvm_set_pfn_dirty void kvm_set_pfn_dirty ( t#kvm_pfn_t ) 
kvm_set_pfn_accessed void kvm_set_pfn_accessed ( t#kvm_pfn_t ) 
kvm_get_pfn void kvm_get_pfn ( t#kvm_pfn_t ) 
kvm_read_guest_page int kvm_read_guest_page ( s#kvm * , t#gfn_t , void * , int , int ) 
kvm_vcpu_read_guest_page int kvm_vcpu_read_guest_page ( s#kvm_vcpu * , t#gfn_t , void * , int , int ) 
kvm_read_guest int kvm_read_guest ( s#kvm * , t#gpa_t , void * , unsigned long ) 
kvm_vcpu_read_guest int kvm_vcpu_read_guest ( s#kvm_vcpu * , t#gpa_t , void * , unsigned long ) 
kvm_read_guest_atomic int kvm_read_guest_atomic ( s#kvm * , t#gpa_t , void * , unsigned long ) 
kvm_vcpu_read_guest_atomic int kvm_vcpu_read_guest_atomic ( s#kvm_vcpu * , t#gpa_t , void * , unsigned long ) 
kvm_write_guest_page int kvm_write_guest_page ( s#kvm * , t#gfn_t , const void * , int , int ) 
kvm_vcpu_write_guest_page int kvm_vcpu_write_guest_page ( s#kvm_vcpu * , t#gfn_t , const void * , int , int ) 
kvm_write_guest int kvm_write_guest ( s#kvm * , t#gpa_t , const void * , unsigned long ) 
kvm_vcpu_write_guest int kvm_vcpu_write_guest ( s#kvm_vcpu * , t#gpa_t , const void * , unsigned long ) 
s#gfn_to_hva_cache struct gfn_to_hva_cache { t#u64 generation ; t#gpa_t gpa ; unsigned long hva ; unsigned long len ; s#kvm_memory_slot * memslot ; } 
kvm_gfn_to_hva_cache_init int kvm_gfn_to_hva_cache_init ( s#kvm * , s#gfn_to_hva_cache * , t#gpa_t , unsigned long ) 
kvm_write_guest_offset_cached int kvm_write_guest_offset_cached ( s#kvm * , s#gfn_to_hva_cache * , void * , unsigned int , unsigned long ) 
kvm_write_guest_cached int kvm_write_guest_cached ( s#kvm * , s#gfn_to_hva_cache * , void * , unsigned long ) 
kvm_read_guest_cached int kvm_read_guest_cached ( s#kvm * , s#gfn_to_hva_cache * , void * , unsigned long ) 
kvm_clear_guest_page int kvm_clear_guest_page ( s#kvm * , t#gfn_t , int , int ) 
kvm_clear_guest int kvm_clear_guest ( s#kvm * , t#gpa_t , unsigned long ) 
mark_page_dirty void mark_page_dirty ( s#kvm * , t#gfn_t ) 
kvm_vcpu_mark_page_dirty void kvm_vcpu_mark_page_dirty ( s#kvm_vcpu * , t#gfn_t ) 
kvm_vcpu_block void kvm_vcpu_block ( s#kvm_vcpu * ) 
kvm_vcpu_wake_up t#bool kvm_vcpu_wake_up ( s#kvm_vcpu * ) 
kvm_vcpu_yield_to int kvm_vcpu_yield_to ( s#kvm_vcpu * ) 
kvm_vcpu_on_spin void kvm_vcpu_on_spin ( s#kvm_vcpu * , t#bool ) 
e#kvm_bus enum kvm_bus { KVM_MMIO_BUS , KVM_PIO_BUS , KVM_VIRTIO_CCW_NOTIFY_BUS , KVM_FAST_MMIO_BUS , KVM_NR_BUSES } 
kvm_io_bus_write int kvm_io_bus_write ( s#kvm_vcpu * , e#kvm_bus , t#gpa_t , int , const void * ) 
kvm_io_bus_get_dev s#kvm_io_device * kvm_io_bus_get_dev ( s#kvm * , e#kvm_bus , t#gpa_t ) 
kvm_init int kvm_init ( void * , unsigned , unsigned , s#module * ) 
kvm_exit void kvm_exit ( void ) 

/* virt/lib/irqbypass.o */
s#irq_bypass_consumer struct irq_bypass_consumer { s#list_head node ; void * token ; int ( * add_producer ) ( s#irq_bypass_consumer * , s#irq_bypass_producer * ) ; void ( * del_producer ) ( s#irq_bypass_consumer * , s#irq_bypass_producer * ) ; void ( * stop ) ( s#irq_bypass_consumer * ) ; void ( * start ) ( s#irq_bypass_consumer * ) ; } 
s#irq_bypass_producer struct irq_bypass_producer { s#list_head node ; void * token ; int irq ; int ( * add_consumer ) ( s#irq_bypass_producer * , s#irq_bypass_consumer * ) ; void ( * del_consumer ) ( s#irq_bypass_producer * , s#irq_bypass_consumer * ) ; void ( * stop ) ( s#irq_bypass_producer * ) ; void ( * start ) ( s#irq_bypass_producer * ) ; } 
irq_bypass_register_producer int irq_bypass_register_producer ( s#irq_bypass_producer * ) 
irq_bypass_unregister_producer void irq_bypass_unregister_producer ( s#irq_bypass_producer * ) 
irq_bypass_register_consumer int irq_bypass_register_consumer ( s#irq_bypass_consumer * ) 
irq_bypass_unregister_consumer void irq_bypass_unregister_consumer ( s#irq_bypass_consumer * ) 

